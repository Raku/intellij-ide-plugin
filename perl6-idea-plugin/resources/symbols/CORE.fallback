[{"k":"v","t":"Sub+{Precedence}","n":"&infix:<notandthen>"},{"m":1,"k":"s","s":{"r":"Mu","p":["+\\a is raw"]},"n":"infix:<notandthen>"},{"k":"v","n":"&full-barrier","t":"Sub"},{"m":1,"k":"s","s":{"r":"Nil","p":[]},"n":"full-barrier"},{"d":"TITLE\nclass Str\n\nSUBTITLE\nString of characters\n\n    class Str is Cool does Stringy { }\n\nBuilt-in class for strings. Objects of type Str are immutable, but read the\nFAQ to understand precisely what this means.\n\n","b":"C","k":"c","m":[{"s":{"r":"Nil","p":[":$value = \"\"","*%_"]},"n":"BUILD","m":0,"k":"s"},{"m":0,"k":"m","s":{"p":["*%_"],"r":"Mu"},"n":"Capture"},{"m":0,"k":"m","s":{"p":["*%_"],"r":"Int:D"},"n":"Int"},{"k":"m","m":0,"s":{"p":["*%_"],"r":"Num:D"},"n":"Num"},{"m":0,"k":"m","n":"chomp","s":{"p":["*%_"],"r":"Str:D"}},{"n":"starts-with","s":{"p":["Cool:D $needle","*%_"],"r":"Bool:D"},"k":"m","m":1},{"k":"m","m":1,"n":"starts-with","s":{"r":"Bool:D","p":["Str:D $needle","*%_"]}},{"n":"ends-with","s":{"r":"Bool:D","p":["Cool:D $suffix","*%_"]},"k":"m","m":1},{"k":"m","m":1,"n":"ends-with","s":{"p":["Str:D $suffix","*%_"],"r":"Bool:D"}},{"k":"m","m":1,"n":"substr-eq","s":{"p":["Cool:D $needle","*%_"],"r":"Bool:D"}},{"s":{"p":["Str:D $needle","*%_"],"r":"Bool:D"},"n":"substr-eq","m":1,"k":"m"},{"s":{"p":["Cool:D $needle","Int:D $pos","*%_"],"r":"Bool:D"},"n":"substr-eq","m":1,"k":"m"},{"n":"substr-eq","s":{"p":["Str:D $needle","Int:D $pos","*%_"],"r":"Bool:D"},"k":"m","m":1},{"k":"m","m":1,"n":"contains","s":{"p":["Cool:D $needle","*%_"],"r":"Bool:D"}},{"k":"m","m":1,"s":{"r":"Bool:D","p":["Str:D $needle","*%_"]},"n":"contains"},{"s":{"p":["Cool:D $needle","Int(Cool:D) $pos","*%_"],"r":"Bool:D"},"n":"contains","k":"m","m":1},{"m":1,"k":"m","s":{"r":"Bool:D","p":["Str:D $needle","Int:D $pos","*%_"]},"n":"contains"},{"s":{"r":"Mu","p":["Cool:D $needle","*%pars"]},"n":"indices","k":"m","m":1},{"s":{"p":["Str:D $needle",":$overlap","*%_"],"r":"Mu"},"n":"indices","k":"m","m":1},{"n":"indices","s":{"r":"Mu","p":["Cool:D $needle","Cool:D $start","*%pars"]},"m":1,"k":"m"},{"n":"indices","s":{"r":"Mu","p":["Str:D $needle","Int:D $start",":$overlap","*%_"]},"k":"m","m":1},{"s":{"p":["Cool:D $needle","*%_"],"r":"Int:D"},"n":"index","k":"m","m":1},{"k":"m","m":1,"n":"index","s":{"r":"Int:D","p":["Str:D $needle","*%_"]}},{"k":"m","m":1,"s":{"p":["Cool:D $needle","Cool:D $pos","*%_"],"r":"Int:D"},"n":"index"},{"m":1,"k":"m","n":"index","s":{"p":["Str:D $needle","Int:D $pos","*%_"],"r":"Int:D"}},{"m":1,"k":"m","n":"rindex","s":{"p":["Cool:D $needle","*%_"],"r":"Int:D"}},{"m":1,"k":"m","n":"rindex","s":{"r":"Int:D","p":["Str:D $needle","*%_"]}},{"m":1,"k":"m","s":{"p":["Cool:D $needle","Cool:D $pos","*%_"],"r":"Int:D"},"n":"rindex"},{"m":1,"k":"m","s":{"r":"Int:D","p":["Str:D $needle","Int:D $pos","*%_"]},"n":"rindex"},{"s":{"r":"Str:D","p":["*%_"]},"n":"pred","k":"m","m":0},{"s":{"r":"Str:D","p":["*%_"]},"n":"succ","k":"m","m":0},{"s":{"r":"Seq:D","p":["*%_"]},"n":"comb","m":1,"k":"m"},{"s":{"r":"Seq:D","p":["Int:D $size is copy","$limit = *","*%_"]},"n":"comb","k":"m","m":1},{"m":1,"k":"m","n":"comb","s":{"p":["Str $pat","*%_"],"r":"Seq:D"}},{"m":1,"k":"m","s":{"p":["Str $pat","$limit","*%_"],"r":"Seq:D"},"n":"comb"},{"k":"m","m":1,"n":"comb","s":{"p":["Regex:D $pattern",":$match","*%_"],"r":"Seq:D"}},{"n":"comb","s":{"r":"Seq:D","p":["Regex:D $pattern","$limit",":$match","*%_"]},"k":"m","m":1},{"n":"match","s":{"r":"Mu","p":["Cool:D $pattern","|c is raw"]},"m":1,"k":"m"},{"k":"m","m":1,"s":{"p":["Regex:D $pattern",":continue(:$c)!","*%_"],"r":"Mu"},"n":"match"},{"m":1,"k":"m","s":{"p":["Regex:D $pattern",":pos(:$p)!","*%_"],"r":"Mu"},"n":"match"},{"m":1,"k":"m","s":{"r":"Mu","p":["Regex:D $pattern",":global(:$g)!","*%_"]},"n":"match"},{"k":"m","m":1,"s":{"r":"Mu","p":["Regex:D $pattern",":overlap(:$ov)!","*%_"]},"n":"match"},{"s":{"r":"Mu","p":["Regex:D $pattern",":exhaustive(:$ex)!","*%_"]},"n":"match","k":"m","m":1},{"k":"m","m":1,"s":{"p":["Regex:D $pattern",":$x!","*%_"],"r":"Mu"},"n":"match"},{"s":{"r":"Mu","p":["Regex:D $pattern",":$st!","*%_"]},"n":"match","k":"m","m":1},{"k":"m","m":1,"s":{"p":["Regex:D $pattern",":$nd!","*%_"],"r":"Mu"},"n":"match"},{"n":"match","s":{"r":"Mu","p":["Regex:D $pattern",":$rd!","*%_"]},"k":"m","m":1},{"m":1,"k":"m","n":"match","s":{"r":"Mu","p":["Regex:D $pattern",":$th!","*%_"]}},{"s":{"r":"Mu","p":["Regex:D $pattern",":$nth!","*%_"]},"n":"match","m":1,"k":"m"},{"n":"match","s":{"p":["Regex:D $pattern",":$as!","*%_"],"r":"Mu"},"k":"m","m":1},{"n":"match","s":{"p":["Regex:D $pattern","*%_"],"r":"Mu"},"k":"m","m":1},{"k":"m","m":1,"n":"subst-mutate","s":{"p":["Any:D $matcher","$replacement",":ii(:$samecase)",":ss(:$samespace)",":mm(:$samemark)","*%options"],"r":"Mu"}},{"k":"m","m":1,"n":"subst","s":{"p":["Str:D $original","Str:D $final","*%options"],"r":"Mu"}},{"m":1,"k":"m","s":{"p":["$matcher","$replacement","*%options"],"r":"Mu"},"n":"subst"},{"s":{"r":"Int:D","p":[":$count!","*%_"]},"n":"lines","m":1,"k":"m"},{"k":"m","m":1,"n":"lines","s":{"r":"Seq:D","p":["$limit","*%_"]}},{"k":"m","m":1,"s":{"p":["*%_"],"r":"Seq:D"},"n":"lines"},{"n":"parse-base","s":{"p":["Int:D $radix","*%_"],"r":"Numeric:D"},"k":"m","m":0},{"s":{"p":["Str:D $pattern","*%_"],"r":"Str:D"},"n":"samecase","m":0,"k":"m"},{"s":{"r":"Str:D","p":["Str:D $pattern","*%_"]},"n":"samemark","k":"m","m":0},{"s":{"r":"Mu","p":["Str:D $pattern","*%_"]},"n":"samespace","m":0,"k":"m"},{"k":"m","m":0,"s":{"p":["Str:D $pattern","&filter?","Bool :$samespace","*%_"],"r":"Mu"},"n":"word-by-word"},{"k":"m","m":0,"s":{"r":"Str:D","p":["*%_"]},"n":"trim-leading"},{"k":"m","m":0,"n":"trim-trailing","s":{"p":["*%_"],"r":"Str:D"}},{"m":0,"k":"m","n":"trim","s":{"p":["*%_"],"r":"Str:D"}},{"k":"m","m":1,"n":"words","s":{"p":["$limit","*%_"],"r":"Seq:D"}},{"m":1,"k":"m","n":"words","s":{"p":["*%_"],"r":"Seq:D"}},{"k":"m","m":0,"s":{"r":"Mu","p":["*%_"]},"n":"WORDS_AUTODEREF"},{"k":"m","m":1,"s":{"p":["Str:D $encoding = \"utf8\"",":$replacement",":$translate-nl = Bool::False",":$strict","*%_"],"r":"Blob:D"},"n":"encode"},{"m":0,"k":"m","s":{"r":"NFC:D","p":["*%_"]},"n":"NFC"},{"m":0,"k":"m","s":{"r":"NFD:D","p":["*%_"]},"n":"NFD"},{"k":"m","m":0,"n":"NFKC","s":{"r":"NFKC:D","p":["*%_"]}},{"k":"m","m":0,"n":"NFKD","s":{"r":"NFKD:D","p":["*%_"]}},{"k":"m","m":0,"n":"unival","s":{"p":["*%_"],"r":"Mu"}},{"k":"m","m":0,"s":{"r":"Mu","p":["*%_"]},"n":"univals"},{"s":{"p":[":&filter = { ... }","Mu :$where = Bool::True","*%_"],"r":"Str:D"},"n":"wordcase","m":0,"k":"m"},{"n":"trans","s":{"p":["Pair:D \\what","*%n"],"r":"Str:D"},"m":1,"k":"m"},{"s":{"p":["*@changes",":c(:$complement)",":s(:$squash)",":d(:$delete)","*%_"],"r":"Str:D"},"n":"trans","k":"m","m":1},{"m":0,"k":"m","s":{"r":"Str:D","p":["*%_"]},"n":"parse-names"},{"k":"m","m":0,"n":"uniparse","s":{"r":"Str:D","p":["*%_"]}},{"k":"m","m":1,"n":"indent","s":{"r":"Mu","p":["$steps where { ... }","*%_"]}},{"s":{"p":["$steps where { ... }","*%_"],"r":"Mu"},"n":"indent","k":"m","m":1},{"s":{"p":["$steps where { ... }","*%_"],"r":"Mu"},"n":"indent","m":1,"k":"m"},{"m":1,"k":"m","s":{"p":["Whatever $steps","*%_"],"r":"Mu"},"n":"indent"},{"n":"codes","s":{"p":["*%_"],"r":"Int:D"},"k":"m","m":1},{"n":"codes","s":{"r":"Int:D","p":["*%_"]},"k":"m","m":1},{"k":"m","m":1,"n":"chars","s":{"p":["*%_"],"r":"Int:D"}},{"m":1,"k":"m","s":{"r":"Int:D","p":["*%_"]},"n":"chars"},{"n":"uc","s":{"r":"Str:D","p":["*%_"]},"k":"m","m":1},{"s":{"p":["*%_"],"r":"Str:D"},"n":"uc","m":1,"k":"m"},{"k":"m","m":1,"n":"lc","s":{"r":"Str:D","p":["*%_"]}},{"s":{"p":["*%_"],"r":"Str:D"},"n":"lc","k":"m","m":1},{"m":1,"k":"m","s":{"r":"Str:D","p":["*%_"]},"n":"tc"},{"n":"tc","s":{"r":"Str:D","p":["*%_"]},"m":1,"k":"m"},{"s":{"p":["*%_"],"r":"Str:D"},"n":"fc","m":1,"k":"m"},{"s":{"p":["*%_"],"r":"Str:D"},"n":"fc","m":1,"k":"m"},{"s":{"r":"Str:D","p":["*%_"]},"n":"tclc","m":1,"k":"m"},{"k":"m","m":1,"n":"tclc","s":{"r":"Str:D","p":["*%_"]}},{"k":"m","m":1,"n":"flip","s":{"r":"Str:D","p":["*%_"]}},{"s":{"r":"Str:D","p":["*%_"]},"n":"flip","m":1,"k":"m"},{"n":"ord","s":{"r":"Int:D","p":["*%_"]},"k":"m","m":1},{"k":"m","m":1,"s":{"r":"Nil","p":["*%_"]},"n":"ord"},{"k":"m","m":1,"s":{"r":"Mu","p":["*%_"]},"n":"WHY"},{"k":"m","m":1,"n":"WHY","s":{"r":"Int","p":["*%_"]}},{"s":{"r":"ValueObjAt:D","p":["*%_"]},"n":"WHICH","k":"m","m":1},{"m":1,"k":"m","n":"WHICH","s":{"p":["*%_"],"r":"ObjAt:D"}},{"s":{"r":"ValueObjAt:D","p":["*%_"]},"n":"WHICH","k":"m","m":1},{"n":"Bool","s":{"r":"Bool","p":["*%_"]},"m":1,"k":"m"},{"s":{"p":["*%_"],"r":"Mu"},"n":"Bool","k":"m","m":1},{"m":1,"k":"m","s":{"p":["*%_"],"r":"Bool:D"},"n":"Bool"},{"s":{"p":["*%_"],"r":"Mu"},"n":"Str","m":1,"k":"m"},{"k":"m","m":1,"s":{"r":"Mu","p":["*%_"]},"n":"Str"},{"s":{"p":["*%_"],"r":"Str:D"},"n":"Str","m":1,"k":"m"},{"m":1,"k":"m","s":{"r":"Mu","p":["*%_"]},"n":"Stringy"},{"s":{"r":"Mu","p":["*%_"]},"n":"Stringy","m":1,"k":"m"},{"m":1,"k":"m","n":"Stringy","s":{"p":["*%_"],"r":"Str:D"}},{"n":"DUMP","s":{"p":["*%_"],"r":"Mu"},"m":1,"k":"m"},{"s":{"r":"Mu","p":[":$indent-step = 4",":%ctx","*%_"]},"n":"DUMP","k":"m","m":1},{"s":{"r":"Str:D","p":["*%_"]},"n":"DUMP","m":1,"k":"m"},{"m":1,"k":"m","s":{"r":"Mu","p":["\\topic","*%_"]},"n":"ACCEPTS"},{"m":1,"k":"m","n":"ACCEPTS","s":{"r":"Mu","p":["Mu:U \\topic","*%_"]}},{"m":1,"k":"m","n":"ACCEPTS","s":{"r":"Mu","p":["Mu:D \\a","*%_"]}},{"n":"ACCEPTS","s":{"r":"Bool","p":["Mu:U $","*%_"]},"k":"m","m":1},{"s":{"p":["\\topic","*%_"],"r":"Bool:D"},"n":"ACCEPTS","m":1,"k":"m"},{"m":1,"k":"m","s":{"p":["Str:D \\other","*%_"],"r":"Bool:D"},"n":"ACCEPTS"},{"m":1,"k":"m","s":{"p":["Any:D \\other","*%_"],"r":"Bool:D"},"n":"ACCEPTS"},{"k":"m","m":1,"s":{"r":"Mu","p":["*%_"]},"n":"chop"},{"n":"chop","s":{"p":["$n","*%_"],"r":"Mu"},"k":"m","m":1},{"k":"m","m":1,"s":{"r":"Str:D","p":["*%_"]},"n":"chop"},{"n":"chop","s":{"r":"Str:D","p":["$chopping","*%_"]},"k":"m","m":1},{"m":1,"k":"m","n":"Numeric","s":{"p":["*%_"],"r":"Mu"}},{"s":{"r":"Numeric:D","p":["*%_"]},"n":"Numeric","m":1,"k":"m"},{"k":"m","m":1,"s":{"r":"Mu","p":["*%_"]},"n":"gist"},{"m":1,"k":"m","n":"gist","s":{"p":["*%_"],"r":"Mu"}},{"k":"m","m":1,"s":{"p":["*%_"],"r":"Str:D"},"n":"gist"},{"k":"m","m":1,"s":{"r":"Mu","p":["*%_"]},"n":"perl"},{"m":1,"k":"m","n":"perl","s":{"r":"Mu","p":["*%_"]}},{"m":1,"k":"m","s":{"r":"Str:D","p":["*%_"]},"n":"perl"},{"n":"ords","s":{"p":["*%_"],"r":"Mu"},"m":1,"k":"m"},{"m":1,"k":"m","n":"ords","s":{"r":"Mu","p":["*%_"]}},{"n":"split","s":{"r":"Seq:D","p":["Regex:D $pat","$limit is copy = Inf",":$v is copy",":$k",":$kv",":$p",":$skip-empty","*%_"]},"m":1,"k":"m"},{"k":"m","m":1,"s":{"r":"Seq:D","p":["Str(Cool) $match",":$v is copy",":$k",":$kv",":$p",":$skip-empty","*%_"]},"n":"split"},{"k":"m","m":1,"n":"split","s":{"r":"Mu","p":["Str(Cool) $match","$limit is copy = Inf",":$v is copy",":$k",":$kv",":$p",":$skip-empty","*%_"]}},{"n":"split","s":{"r":"Seq:D","p":["@needles","$parts is copy = Inf",":$v is copy",":$k",":$kv",":$p",":$skip-empty","*%_"]},"m":1,"k":"m"},{"m":1,"k":"m","s":{"p":["\\from","*%_"],"r":"Mu"},"n":"substr"},{"k":"m","m":1,"n":"substr","s":{"p":["\\from","\\chars","*%_"],"r":"Mu"}},{"k":"m","m":1,"s":{"p":["Int:D \\start","*%_"],"r":"Str:D"},"n":"substr"},{"k":"m","m":1,"n":"substr","s":{"p":["Int:D \\start","Int:D \\want","*%_"],"r":"Str:D"}},{"m":1,"k":"m","n":"substr","s":{"p":["Int:D \\start","Callable:D \\want","*%_"],"r":"Str:D"}},{"k":"m","m":1,"s":{"r":"Str:D","p":["Callable:D \\start","*%_"]},"n":"substr"},{"m":1,"k":"m","s":{"p":["Callable:D \\start","Int:D \\want","*%_"],"r":"Str:D"},"n":"substr"},{"k":"m","m":1,"s":{"p":["Callable:D \\start","Callable:D \\want","*%_"],"r":"Str:D"},"n":"substr"},{"s":{"r":"Str:D","p":["Range:D \\start","*%_"]},"n":"substr","m":1,"k":"m"},{"k":"m","m":1,"n":"substr","s":{"r":"Mu","p":["Regex:D $","$","*%_"]}},{"s":{"p":["\\start","*%_"],"r":"Str:D"},"n":"substr","m":1,"k":"m"},{"m":1,"k":"m","n":"substr","s":{"r":"Str:D","p":["\\from","\\want","*%_"]}},{"n":"substr-rw","s":{"r":"Mu","p":["*%_"]},"m":1,"k":"m"},{"k":"m","m":1,"s":{"p":["\\from","*%_"],"r":"Mu"},"n":"substr-rw"},{"k":"m","m":1,"n":"substr-rw","s":{"p":["\\from","\\chars","*%_"],"r":"Mu"}},{"n":"substr-rw","s":{"p":["\\start","$want = Inf","*%_"],"r":"Mu"},"k":"m","m":1},{"s":{"p":["@auto","%init","*%_"],"r":"Mu"},"n":"BUILDALL","k":"s","m":0},{"n":"!match-x","s":{"r":"Mu","p":["\\slash","\\iterator","$x","*%_"]},"m":0,"k":"m"},{"m":0,"k":"m","s":{"r":"Mu","p":["\\slash","\\cursor","\\move","\\post","*%_"]},"n":"!match-list"},{"k":"m","m":0,"n":"!match-one","s":{"p":["\\slash","\\cursor","*%_"],"r":"Mu"}},{"n":"!match-nth","s":{"p":["\\slash","\\cursor","\\move","\\post","$nth","%opts","*%_"],"r":"Mu"},"k":"m","m":0},{"n":"!APPLY-MATCHES","s":{"p":["\\matches","$replacement","\\cds","\\SDS","\\word_by_word","\\space","\\case","\\mark","*%_"],"r":"Mu"},"m":0,"k":"m"},{"s":{"r":"Mu","p":["\\slash","\\source","\\indexes","*%_"]},"n":"!match-nth-iterator","m":0,"k":"m"},{"s":{"p":["\\slash","\\cursor","\\move","int $tail","*%_"],"r":"Mu"},"n":"!match-nth-tail","m":0,"k":"m"},{"k":"m","m":0,"s":{"r":"Mu","p":["\\slash","\\iterator","$min","$max","*%_"]},"n":"!match-x-range"},{"s":{"r":"Mu","p":["\\v","\\k","\\kv","\\p","*%_"]},"n":"!ensure-split-sanity","k":"m","m":0},{"n":"!match-nth-range","s":{"p":["\\slash","\\iterator","$min","$max","*%_"],"r":"Mu"},"k":"m","m":0},{"k":"m","m":0,"n":"!match-last","s":{"r":"Mu","p":["\\slash","\\cursor","\\move","*%_"]}},{"m":0,"k":"m","n":"!RINDEX-OOR","s":{"r":"Mu","p":["$pos","*%_"]}},{"s":{"r":"Mu","p":["\\slash","$pattern","str $name","$value","\\opts","*%_"]},"n":"!match-pattern","k":"m","m":0},{"m":0,"k":"m","n":"!match-nth-int","s":{"p":["\\slash","\\cursor","\\move","\\post","int $nth","*%_"],"r":"Mu"}},{"n":"!match-cursor","s":{"r":"Mu","p":["\\slash","\\cursor","str $name","$value","\\opts","*%_"]},"m":0,"k":"m"},{"m":0,"k":"m","n":"!INDEX-OOR","s":{"r":"Mu","p":["$pos","*%_"]}},{"s":{"p":["\\slash","\\cursor","\\as","*%_"],"r":"Mu"},"n":"!match-as-one","k":"m","m":0},{"m":0,"k":"m","s":{"p":["\\caller_dollar_slash","$matcher","$replacement",":global(:$g)",":ii(:$samecase)",":ss(:$samespace)",":mm(:$samemark)","*%options"],"r":"Mu"},"n":"!SUBST"},{"k":"m","m":0,"n":"!ensure-limit-sanity","s":{"p":["\\limit","*%_"],"r":"Nil"}}],"t":"Str","n":"Str"},{"n":"Str::POST-ITERATOR","t":"Str::POST-ITERATOR","m":[{"k":"m","m":0,"s":{"p":["\\c","\\t","\\p","*%_"],"r":"Mu"},"n":"new"},{"m":0,"k":"m","s":{"r":"Mu","p":["*%_"]},"n":"pull-one"},{"s":{"p":["*%_"],"r":"Mu"},"n":"skip-one","m":0,"k":"m"},{"k":"m","m":0,"s":{"p":["\\target","*%_"],"r":"Mu"},"n":"push-all"},{"k":"m","m":0,"s":{"r":"Mu","p":["\\target","int $n","*%_"]},"n":"push-exactly"},{"k":"m","m":0,"s":{"r":"Mu","p":["\\target","int $n","*%_"]},"n":"push-at-least"},{"s":{"r":"Mu","p":["\\target","*%_"]},"n":"push-until-lazy","m":0,"k":"m"},{"s":{"p":["int $toskip","*%_"],"r":"Mu"},"n":"skip-at-least","m":0,"k":"m"},{"n":"skip-at-least-pull-one","s":{"p":["int $toskip","*%_"],"r":"Mu"},"k":"m","m":0},{"k":"m","m":0,"s":{"r":"Mu","p":["*%_"]},"n":"sink-all"},{"n":"is-lazy","s":{"p":["*%_"],"r":"Bool"},"m":0,"k":"m"},{"m":0,"k":"s","s":{"r":"Mu","p":["@auto","%init","*%_"]},"n":"BUILDALL"},{"s":{"p":["\\cursor","\\move","\\post","*%_"],"r":"Mu"},"n":"!SET-SELF","k":"m","m":0}],"k":"c","a":[{"n":"$!cursor","t":"Mu","k":"v"},{"n":"$!move","t":"Mu","k":"v"},{"n":"$!post","t":"Mu","k":"v"}],"b":"A"},{"t":"Str::CURSOR-ITERATOR","n":"Str::CURSOR-ITERATOR","b":"A","a":[{"k":"v","n":"$!cursor","t":"Mu"},{"n":"$!move","t":"Mu","k":"v"}],"m":[{"m":0,"k":"m","n":"new","s":{"r":"Mu","p":["\\c","\\t","*%_"]}},{"m":0,"k":"m","n":"pull-one","s":{"p":["*%_"],"r":"Mu"}},{"s":{"p":["*%_"],"r":"Mu"},"n":"skip-one","k":"m","m":0},{"k":"m","m":0,"s":{"p":["\\target","*%_"],"r":"Mu"},"n":"push-all"},{"k":"m","m":0,"n":"push-exactly","s":{"r":"Mu","p":["\\target","int $n","*%_"]}},{"m":0,"k":"m","n":"push-at-least","s":{"r":"Mu","p":["\\target","int $n","*%_"]}},{"m":0,"k":"m","s":{"r":"Mu","p":["\\target","*%_"]},"n":"push-until-lazy"},{"n":"skip-at-least","s":{"p":["int $toskip","*%_"],"r":"Mu"},"m":0,"k":"m"},{"k":"m","m":0,"s":{"p":["int $toskip","*%_"],"r":"Mu"},"n":"skip-at-least-pull-one"},{"n":"sink-all","s":{"p":["*%_"],"r":"Mu"},"m":0,"k":"m"},{"s":{"r":"Bool","p":["*%_"]},"n":"is-lazy","m":0,"k":"m"},{"m":0,"k":"s","n":"BUILDALL","s":{"r":"Mu","p":["@auto","%init","*%_"]}},{"s":{"r":"Mu","p":["\\cursor","\\move","*%_"]},"n":"!SET-SELF","m":0,"k":"m"}],"k":"c"},{"d":"TITLE\nclass Capture\n\nSUBTITLE\nArgument list suitable for passing to a Signature\n\n \n\n    class Capture { }\n\n\nA Capture is a container for passing arguments to a code object. Captures\nare the flip-side of Signatures – Captures are the caller defined\narguments, while Signatures are the callee defined parameters.\n\nWhen you call print $a, $b, the $a, $b part is a Capture.\n\nCaptures contain a list-like part for positional arguments and a hash-like\npart for named arguments, thus behaving as Positional and Associative,\nalthough it does not actually mixes in those roles. For the named\narguments, Captures use a slightly different syntax than a normal List.\nThere are two easy ways to make a named argument: 1) use an unquoted key\nnaming a parameter, followed by =>, followed by the argument and 2) use a\ncolon-pair literal named after the parameter:\n\n    say unique 1, -2, 2, 3, as => { abs $_ };   # OUTPUT: «(1 -2 3)␤»\n    # ... is the same thing as:\n    say unique 1, -2, 2, 3, :as({ abs $_ });    # OUTPUT: «(1 -2 3)␤»\n    # Be careful not to quote the name of a named parameter:\n    say unique 1, -2, 2, 3, 'as' => { abs $_ };\n    # OUTPUT: «(1 -2 2 3 as => -> ;; $_? is raw { #`(Block|78857320) ... })␤»\n\nA stand-alone Capture can also be made, stored, and used later. A literal\nCapture can be created by prefixing a term with a backslash \\. Commonly,\nthis term will be a List of terms, from which any Pair literal will be\nplaced in the named part, and all other terms will be placed in the\npositional part.\n\n    my $c = \\(42);          # Capture with one positional part\n    $c = \\(1, 2, a => 'b'); # Capture with two positional and one named parts\n\nTo use such a Capture, you may use '|' before it in a function call, and it\nwill be as if the values in the Capture were passed directly to the\nfunction as arguments – named arguments will be passed as named arguments\nand positional arguments will be passed as positional arguments. You may\nre-use the Capture as many times as you want, even with different\nfunctions.\n\n    my $c = \\(4, 2, 3);\n    reverse(|$c).say; # OUTPUT: «3 2 4␤»\n    sort(5,|$c).say;  # OUTPUT: «2 3 4 5␤»\n\nInside a Signature, a Capture may be created by prefixing a sigilless\nparameter with a vertical bar |. This packs the remainder of the argument\nlist into that parameter.\n\n    f(1, 2, 3, a => 4, b => 5);\n    sub f($a, |c) {\n        # c  is  \\(2, 3, a => 4, b => 5)\n    }\n\nNote that Captures are still Lists in that they may contain containers, not\njust values:\n\n    my $b = 1;\n    my $c = \\(4, 2, $b, 3);\n    sort(|$c).say;        # OUTPUT: «1 2 3 4␤»\n    $b = 6;\n    sort(|$c).say;        # OUTPUT: «2 3 4 6␤»\n\n","k":"c","m":[{"k":"m","m":0,"s":{"r":"Mu","p":["|c is raw"]},"n":"from-args"},{"m":0,"k":"s","n":"BUILD","s":{"p":[":@list",":%hash","*%_"],"r":"Nil"}},{"k":"m","m":0,"n":"hash","s":{"p":["*%_"],"r":"Mu"}},{"k":"m","m":0,"n":"list","s":{"r":"Mu","p":["*%_"]}},{"k":"m","m":0,"n":"elems","s":{"r":"Mu","p":["*%_"]}},{"k":"m","m":0,"s":{"r":"Mu","p":["*%_"]},"n":"Capture"},{"s":{"r":"Mu","p":["*%_"]},"n":"FLATTENABLE_LIST","m":0,"k":"m"},{"k":"m","m":0,"s":{"r":"Mu","p":["*%_"]},"n":"FLATTENABLE_HASH"},{"s":{"p":["*%_"],"r":"ValueObjAt:D"},"n":"WHICH","m":1,"k":"m"},{"m":1,"k":"m","n":"WHICH","s":{"p":["*%_"],"r":"ObjAt:D"}},{"m":1,"k":"m","n":"WHICH","s":{"p":["*%_"],"r":"ValueObjAt:D"}},{"m":1,"k":"m","n":"AT-KEY","s":{"r":"Mu","p":["$key","*%_"]}},{"n":"AT-KEY","s":{"r":"Mu","p":["\\key","*%_"]},"m":1,"k":"m"},{"n":"AT-KEY","s":{"p":["Str:D \\key","*%_"],"r":"Mu"},"k":"m","m":1},{"s":{"r":"Mu","p":["\\key","*%_"]},"n":"AT-KEY","k":"m","m":1},{"s":{"p":["int \\pos","*%_"],"r":"Mu"},"n":"AT-POS","m":1,"k":"m"},{"n":"AT-POS","s":{"r":"Mu","p":["Int:D \\pos","*%_"]},"m":1,"k":"m"},{"s":{"p":["Num:D \\pos","*%_"],"r":"Mu"},"n":"AT-POS","k":"m","m":1},{"s":{"r":"Mu","p":["Any:D \\pos","*%_"]},"n":"AT-POS","k":"m","m":1},{"n":"AT-POS","s":{"p":["int \\pos","*%_"],"r":"Mu"},"k":"m","m":1},{"k":"m","m":1,"s":{"p":["Int:D \\pos","*%_"],"r":"Mu"},"n":"AT-POS"},{"n":"AT-POS","s":{"r":"Mu","p":["Num:D \\pos","*%_"]},"m":1,"k":"m"},{"n":"AT-POS","s":{"r":"Mu","p":["Any:D \\pos","*%_"]},"k":"m","m":1},{"m":1,"k":"m","n":"AT-POS","s":{"r":"Mu","p":["Any:U \\pos","*%_"]}},{"m":1,"k":"m","s":{"p":["\\one","\\two","*%_"],"r":"Mu"},"n":"AT-POS"},{"n":"AT-POS","s":{"r":"Mu","p":["\\one","\\two","\\three","*%_"]},"k":"m","m":1},{"s":{"p":["**@indices","*%_"],"r":"Mu"},"n":"AT-POS","m":1,"k":"m"},{"n":"AT-POS","s":{"p":["int \\pos","*%_"],"r":"Mu"},"k":"m","m":1},{"n":"AT-POS","s":{"p":["Int:D \\pos","*%_"],"r":"Mu"},"k":"m","m":1},{"k":"m","m":1,"s":{"p":["$","*%_"],"r":"Bool"},"n":"EXISTS-KEY"},{"s":{"p":["$","*%_"],"r":"Bool"},"n":"EXISTS-KEY","k":"m","m":1},{"k":"m","m":1,"n":"EXISTS-KEY","s":{"r":"Mu","p":["Str:D \\key","*%_"]}},{"n":"EXISTS-KEY","s":{"p":["\\key","*%_"],"r":"Mu"},"k":"m","m":1},{"m":1,"k":"m","s":{"r":"Mu","p":["*%_"]},"n":"Str"},{"s":{"r":"Mu","p":["*%_"]},"n":"Str","m":1,"k":"m"},{"k":"m","m":1,"n":"Str","s":{"p":["*%_"],"r":"Mu"}},{"s":{"p":["*%_"],"r":"Mu"},"n":"gist","m":1,"k":"m"},{"n":"gist","s":{"r":"Mu","p":["*%_"]},"k":"m","m":1},{"n":"gist","s":{"r":"Mu","p":["*%_"]},"m":1,"k":"m"},{"k":"m","m":1,"n":"perl","s":{"r":"Mu","p":["*%_"]}},{"s":{"r":"Mu","p":["*%_"]},"n":"perl","k":"m","m":1},{"s":{"p":["*%_"],"r":"Mu"},"n":"perl","m":1,"k":"m"},{"k":"m","m":1,"n":"Bool","s":{"p":["*%_"],"r":"Bool"}},{"k":"m","m":1,"n":"Bool","s":{"r":"Mu","p":["*%_"]}},{"m":1,"k":"m","s":{"p":["*%_"],"r":"Mu"},"n":"Bool"},{"s":{"r":"Mu","p":["*%_"]},"n":"Numeric","m":1,"k":"m"},{"m":1,"k":"m","n":"Numeric","s":{"r":"Mu","p":["*%_"]}},{"n":"keys","s":{"r":"Mu","p":["*%_"]},"m":1,"k":"m"},{"k":"m","m":1,"s":{"r":"Mu","p":["*%_"]},"n":"keys"},{"n":"keys","s":{"p":["*%_"],"r":"Mu"},"k":"m","m":1},{"k":"m","m":1,"s":{"r":"Mu","p":["*%_"]},"n":"kv"},{"m":1,"k":"m","s":{"r":"Mu","p":["*%_"]},"n":"kv"},{"k":"m","m":1,"n":"kv","s":{"r":"Mu","p":["*%_"]}},{"n":"values","s":{"p":["*%_"],"r":"Mu"},"m":1,"k":"m"},{"m":1,"k":"m","n":"values","s":{"p":["*%_"],"r":"Mu"}},{"n":"values","s":{"p":["*%_"],"r":"Mu"},"m":1,"k":"m"},{"s":{"p":["*%_"],"r":"Mu"},"n":"pairs","k":"m","m":1},{"k":"m","m":1,"n":"pairs","s":{"p":["*%_"],"r":"Mu"}},{"s":{"r":"Mu","p":["*%_"]},"n":"pairs","k":"m","m":1},{"s":{"p":["*%_"],"r":"Mu"},"n":"antipairs","m":1,"k":"m"},{"s":{"r":"Mu","p":["*%_"]},"n":"antipairs","m":1,"k":"m"},{"n":"antipairs","s":{"r":"Mu","p":["*%_"]},"m":1,"k":"m"},{"m":0,"k":"s","s":{"p":["@auto","%init","*%_"],"r":"Mu"},"n":"BUILDALL"}],"a":[{"n":"@!list","t":"List","k":"v"},{"n":"%!hash","t":"Hash","k":"v"}],"b":"A","t":"Capture","n":"Capture"},{"k":"v","t":"Sub+{is-nodal}","n":"&elems"},{"m":1,"k":"s","s":{"p":["$a"],"r":"Mu"},"n":"elems"},{"t":"Sub+{is-pure}+{Precedence}","n":"&infix:<**>","k":"v"},{"m":1,"k":"s","s":{"r":"Mu","p":["$x = 1"]},"n":"infix:<**>"},{"m":1,"k":"s","s":{"p":["\\a","\\b"],"r":"Mu"},"n":"infix:<**>"},{"n":"infix:<**>","s":{"p":["Real \\a","Real \\b"],"r":"Mu"},"k":"s","m":1},{"n":"infix:<**>","s":{"p":["Int:D \\a","Int:D \\b"],"r":"Real:D"},"k":"s","m":1},{"s":{"p":["int $a","int $b"],"r":"int"},"n":"infix:<**>","k":"s","m":1},{"n":"infix:<**>","s":{"p":["Num:D \\a","Num:D \\b"],"r":"Mu"},"k":"s","m":1},{"n":"infix:<**>","s":{"p":["num $a","num $b"],"r":"num"},"m":1,"k":"s"},{"m":1,"k":"s","s":{"p":["Rational:D \\a","Int:D \\b"],"r":"Mu"},"n":"infix:<**>"},{"m":1,"k":"s","s":{"r":"Complex:D","p":["Complex:D \\a","Complex:D \\b"]},"n":"infix:<**>"},{"s":{"r":"Complex:D","p":["Num(Real) \\a","Complex:D \\b"]},"n":"infix:<**>","m":1,"k":"s"},{"n":"infix:<**>","s":{"r":"Complex:D","p":["Complex:D \\a","Num(Real) \\b"]},"k":"s","m":1},{"k":"v","t":"Sub+{is-pure}+{Precedence}","n":"&infix:<->"},{"n":"infix:<->","s":{"p":["$x = 0"],"r":"Mu"},"m":1,"k":"s"},{"k":"s","m":1,"n":"infix:<->","s":{"r":"Mu","p":["\\a","\\b"]}},{"n":"infix:<->","s":{"r":"Mu","p":["Real \\a","Real \\b"]},"m":1,"k":"s"},{"s":{"r":"Int:D","p":["Int:D \\a","Int:D \\b"]},"n":"infix:<->","m":1,"k":"s"},{"k":"s","m":1,"n":"infix:<->","s":{"r":"int","p":["int $a","int $b"]}},{"k":"s","m":1,"s":{"p":["Num:D \\a","Num:D \\b"],"r":"Mu"},"n":"infix:<->"},{"s":{"p":["num $a","num $b"],"r":"num"},"n":"infix:<->","k":"s","m":1},{"s":{"p":["Range:D \\r","Real:D \\v"],"r":"Mu"},"n":"infix:<->","k":"s","m":1},{"s":{"r":"Mu","p":["Rational:D \\a","Rational:D \\b"]},"n":"infix:<->","m":1,"k":"s"},{"n":"infix:<->","s":{"r":"Mu","p":["Rational:D \\a","Int:D \\b"]},"k":"s","m":1},{"s":{"r":"Mu","p":["Int:D \\a","Rational:D \\b"]},"n":"infix:<->","k":"s","m":1},{"s":{"p":["Complex:D \\a","Complex:D \\b"],"r":"Complex:D"},"n":"infix:<->","k":"s","m":1},{"k":"s","m":1,"n":"infix:<->","s":{"r":"Complex:D","p":["Complex:D \\a","Num(Real) \\b"]}},{"s":{"p":["Num(Real) \\a","Complex:D \\b"],"r":"Complex:D"},"n":"infix:<->","k":"s","m":1},{"k":"s","m":1,"s":{"p":["Instant:D $a","Instant:D $b"],"r":"Duration:D"},"n":"infix:<->"},{"s":{"p":["Instant:D $a","Real:D $b"],"r":"Instant:D"},"n":"infix:<->","m":1,"k":"s"},{"s":{"p":["Duration:D $a","Real $b"],"r":"Duration:D"},"n":"infix:<->","k":"s","m":1},{"n":"infix:<->","s":{"p":["Duration:D $a","Duration:D $b"],"r":"Duration:D"},"m":1,"k":"s"},{"s":{"p":["DateTime:D \\a","DateTime:D \\b"],"r":"Duration:D"},"n":"infix:<->","m":1,"k":"s"},{"k":"s","m":1,"n":"infix:<->","s":{"r":"DateTime:D","p":["DateTime:D \\a","Duration:D \\b"]}},{"k":"s","m":1,"s":{"p":["Date:D $d","Int:D $x"],"r":"Date:D"},"n":"infix:<->"},{"k":"s","m":1,"s":{"p":["Date:D $a","Date:D $b"],"r":"Int:D"},"n":"infix:<->"},{"k":"v","n":"&uniprop-bool","t":"Sub"},{"s":{"r":"Mu","p":["Str:D $str","Stringy:D $propname"]},"n":"uniprop-bool","m":1,"k":"s"},{"s":{"p":["Int:D $code","Stringy:D $propname"],"r":"Mu"},"n":"uniprop-bool","m":1,"k":"s"},{"k":"v","t":"Sub+{is-pure}+{Precedence}","n":"&infix:<?^>"},{"n":"infix:<?^>","s":{"p":["Mu $x = Bool::False"],"r":"Mu"},"m":1,"k":"s"},{"m":1,"k":"s","n":"infix:<?^>","s":{"r":"Mu","p":["Mu \\a","Mu \\b"]}},{"m":[{"n":"message","s":{"r":"Mu","p":["*%_"]},"m":0,"k":"m"},{"k":"s","m":0,"n":"BUILDALL","s":{"r":"Mu","p":["@auto","%init","*%_"]}},{"s":{"r":"Bool","p":["*%_"]},"n":"resume","m":0,"k":"m"},{"n":"reset-backtrace","s":{"p":["*%_"],"r":"Mu"},"m":0,"k":"m"},{"n":"is-compile-time","s":{"r":"Bool","p":["*%_"]},"k":"m","m":0},{"s":{"r":"Mu","p":["$bt?","*%_"]},"n":"throw","m":0,"k":"m"},{"k":"m","m":0,"s":{"r":"Mu","p":["*%_"]},"n":"fail"},{"n":"Str","s":{"p":["*%_"],"r":"Mu"},"k":"m","m":1},{"m":1,"k":"m","n":"Str","s":{"r":"Mu","p":["*%_"]}},{"n":"Str","s":{"p":["*%_"],"r":"Mu"},"m":1,"k":"m"},{"n":"die","s":{"p":["*%_"],"r":"Mu"},"m":0,"k":"m"},{"k":"m","m":0,"n":"rethrow","s":{"r":"Mu","p":["*%_"]}},{"k":"m","m":0,"n":"backtrace","s":{"r":"Mu","p":["*%_"]}},{"n":"gist","s":{"p":["*%_"],"r":"Mu"},"m":1,"k":"m"},{"n":"gist","s":{"p":["*%_"],"r":"Mu"},"k":"m","m":1},{"k":"m","m":1,"n":"gist","s":{"p":["*%_"],"r":"Mu"}},{"k":"m","m":0,"n":"vault-backtrace","s":{"r":"Mu","p":["*%_"]}},{"m":0,"k":"s","n":"BUILDALL","s":{"r":"Mu","p":["@auto","%init","*%_"]}}],"k":"c","b":"A","a":[{"t":"Mu","n":"$!ex","k":"v"},{"k":"v","t":"Mu","n":"$!bt"}],"d":"TITLE\nrole CX::Done\n\nSUBTITLE\nDone control exception\n\n    role CX::Done does X::Control { }\n\nA control exception to be used to indicate a supply block is finished by\ncalling done.\n\n","n":"CX::Done","t":"CX::Done"},{"b":"A","a":[{"n":"$!ex","t":"Mu","k":"v"},{"k":"v","t":"Mu","n":"$!bt"}],"k":"c","m":[{"n":"message","s":{"r":"Mu","p":["*%_"]},"k":"m","m":0},{"s":{"p":["@auto","%init","*%_"],"r":"Mu"},"n":"BUILDALL","k":"s","m":0},{"k":"m","m":0,"s":{"p":["*%_"],"r":"Bool"},"n":"resume"},{"m":0,"k":"m","s":{"p":["*%_"],"r":"Mu"},"n":"reset-backtrace"},{"s":{"r":"Bool","p":["*%_"]},"n":"is-compile-time","m":0,"k":"m"},{"m":0,"k":"m","n":"throw","s":{"r":"Mu","p":["$bt?","*%_"]}},{"m":0,"k":"m","s":{"r":"Mu","p":["*%_"]},"n":"fail"},{"m":1,"k":"m","s":{"p":["*%_"],"r":"Mu"},"n":"Str"},{"s":{"r":"Mu","p":["*%_"]},"n":"Str","m":1,"k":"m"},{"n":"Str","s":{"r":"Mu","p":["*%_"]},"m":1,"k":"m"},{"n":"die","s":{"p":["*%_"],"r":"Mu"},"k":"m","m":0},{"s":{"p":["*%_"],"r":"Mu"},"n":"rethrow","k":"m","m":0},{"m":0,"k":"m","n":"backtrace","s":{"r":"Mu","p":["*%_"]}},{"n":"gist","s":{"p":["*%_"],"r":"Mu"},"k":"m","m":1},{"n":"gist","s":{"r":"Mu","p":["*%_"]},"m":1,"k":"m"},{"s":{"p":["*%_"],"r":"Mu"},"n":"gist","k":"m","m":1},{"n":"vault-backtrace","s":{"p":["*%_"],"r":"Mu"},"k":"m","m":0},{"s":{"p":["@auto","%init","*%_"],"r":"Mu"},"n":"BUILDALL","k":"s","m":0}],"d":"TITLE\nrole CX::Emit\n\nSUBTITLE\nEmit control exception\n\n    role CX::Emit does X::Control { }\n\nA control exception to be used when emit is used inside a Supply block.\n\n","n":"CX::Emit","t":"CX::Emit"},{"m":[{"k":"m","m":0,"s":{"p":["*%_"],"r":"Mu"},"n":"message"},{"s":{"r":"Mu","p":["@auto","%init","*%_"]},"n":"BUILDALL","k":"s","m":0},{"k":"m","m":0,"n":"resume","s":{"r":"Bool","p":["*%_"]}},{"k":"m","m":0,"s":{"p":["*%_"],"r":"Mu"},"n":"reset-backtrace"},{"n":"is-compile-time","s":{"p":["*%_"],"r":"Bool"},"k":"m","m":0},{"n":"throw","s":{"p":["$bt?","*%_"],"r":"Mu"},"k":"m","m":0},{"s":{"r":"Mu","p":["*%_"]},"n":"fail","m":0,"k":"m"},{"n":"Str","s":{"r":"Mu","p":["*%_"]},"k":"m","m":1},{"m":1,"k":"m","s":{"p":["*%_"],"r":"Mu"},"n":"Str"},{"k":"m","m":1,"n":"Str","s":{"p":["*%_"],"r":"Mu"}},{"k":"m","m":0,"s":{"p":["*%_"],"r":"Mu"},"n":"die"},{"k":"m","m":0,"s":{"p":["*%_"],"r":"Mu"},"n":"rethrow"},{"k":"m","m":0,"n":"backtrace","s":{"r":"Mu","p":["*%_"]}},{"n":"gist","s":{"p":["*%_"],"r":"Mu"},"m":1,"k":"m"},{"s":{"p":["*%_"],"r":"Mu"},"n":"gist","k":"m","m":1},{"s":{"r":"Mu","p":["*%_"]},"n":"gist","m":1,"k":"m"},{"s":{"r":"Mu","p":["*%_"]},"n":"vault-backtrace","k":"m","m":0},{"m":0,"k":"s","s":{"r":"Mu","p":["@auto","%init","*%_"]},"n":"BUILDALL"}],"k":"c","a":[{"k":"v","n":"$!ex","t":"Mu"},{"k":"v","n":"$!bt","t":"Mu"}],"b":"A","d":"TITLE\nrole CX::Last\n\nSUBTITLE\nLast control exception\n\n    role CX::Last does X::Control { }\n\nA control exception that is thrown when last is called.\n\n","n":"CX::Last","t":"CX::Last"},{"d":"TITLE\nrole CX::Take\n\nSUBTITLE\nTake control exception\n\n    role CX::Take does X::Control { }\n\nA control exception triggered by take.\n\n","b":"A","a":[{"t":"Mu","n":"$!ex","k":"v"},{"k":"v","n":"$!bt","t":"Mu"}],"k":"c","m":[{"m":0,"k":"m","n":"message","s":{"p":["*%_"],"r":"Mu"}},{"k":"s","m":0,"n":"BUILDALL","s":{"p":["@auto","%init","*%_"],"r":"Mu"}},{"m":0,"k":"m","n":"resume","s":{"p":["*%_"],"r":"Bool"}},{"k":"m","m":0,"n":"reset-backtrace","s":{"p":["*%_"],"r":"Mu"}},{"m":0,"k":"m","n":"is-compile-time","s":{"p":["*%_"],"r":"Bool"}},{"s":{"r":"Mu","p":["$bt?","*%_"]},"n":"throw","k":"m","m":0},{"k":"m","m":0,"n":"fail","s":{"p":["*%_"],"r":"Mu"}},{"s":{"r":"Mu","p":["*%_"]},"n":"Str","m":1,"k":"m"},{"m":1,"k":"m","n":"Str","s":{"r":"Mu","p":["*%_"]}},{"s":{"p":["*%_"],"r":"Mu"},"n":"Str","k":"m","m":1},{"k":"m","m":0,"n":"die","s":{"p":["*%_"],"r":"Mu"}},{"m":0,"k":"m","n":"rethrow","s":{"r":"Mu","p":["*%_"]}},{"n":"backtrace","s":{"r":"Mu","p":["*%_"]},"k":"m","m":0},{"n":"gist","s":{"r":"Mu","p":["*%_"]},"m":1,"k":"m"},{"m":1,"k":"m","n":"gist","s":{"r":"Mu","p":["*%_"]}},{"k":"m","m":1,"n":"gist","s":{"p":["*%_"],"r":"Mu"}},{"s":{"r":"Mu","p":["*%_"]},"n":"vault-backtrace","m":0,"k":"m"},{"n":"BUILDALL","s":{"r":"Mu","p":["@auto","%init","*%_"]},"k":"s","m":0}],"t":"CX::Take","n":"CX::Take"},{"m":[{"m":0,"k":"m","n":"message","s":{"p":["*%_"],"r":"Mu"}},{"m":0,"k":"s","s":{"p":["@auto","%init","*%_"],"r":"Mu"},"n":"BUILDALL"},{"k":"m","m":0,"s":{"p":["*%_"],"r":"Bool"},"n":"resume"},{"m":0,"k":"m","n":"reset-backtrace","s":{"p":["*%_"],"r":"Mu"}},{"m":0,"k":"m","n":"is-compile-time","s":{"r":"Bool","p":["*%_"]}},{"m":0,"k":"m","n":"throw","s":{"p":["$bt?","*%_"],"r":"Mu"}},{"n":"fail","s":{"r":"Mu","p":["*%_"]},"k":"m","m":0},{"s":{"r":"Mu","p":["*%_"]},"n":"Str","m":1,"k":"m"},{"k":"m","m":1,"s":{"p":["*%_"],"r":"Mu"},"n":"Str"},{"k":"m","m":1,"n":"Str","s":{"r":"Mu","p":["*%_"]}},{"k":"m","m":0,"s":{"p":["*%_"],"r":"Mu"},"n":"die"},{"n":"rethrow","s":{"p":["*%_"],"r":"Mu"},"m":0,"k":"m"},{"s":{"r":"Mu","p":["*%_"]},"n":"backtrace","k":"m","m":0},{"m":1,"k":"m","s":{"r":"Mu","p":["*%_"]},"n":"gist"},{"s":{"p":["*%_"],"r":"Mu"},"n":"gist","m":1,"k":"m"},{"s":{"p":["*%_"],"r":"Mu"},"n":"gist","k":"m","m":1},{"n":"vault-backtrace","s":{"r":"Mu","p":["*%_"]},"m":0,"k":"m"},{"k":"s","m":0,"n":"BUILDALL","s":{"p":["@auto","%init","*%_"],"r":"Mu"}}],"k":"c","b":"A","a":[{"k":"v","t":"Mu","n":"$.message"},{"t":"Mu","n":"$!ex","k":"v"},{"k":"v","n":"$!bt","t":"Mu"}],"d":"TITLE\nrole CX::Warn\n\nSUBTITLE\nControl exception warning\n\n    role CX::Warn does X::Control { }\n\nA control exception triggered when warn is called to warn about any\nincidence.\n\n","n":"CX::Warn","t":"CX::Warn"},{"n":"CX::Redo","t":"CX::Redo","a":[{"k":"v","n":"$!ex","t":"Mu"},{"t":"Mu","n":"$!bt","k":"v"}],"b":"A","m":[{"k":"m","m":0,"n":"message","s":{"r":"Mu","p":["*%_"]}},{"k":"s","m":0,"s":{"r":"Mu","p":["@auto","%init","*%_"]},"n":"BUILDALL"},{"n":"resume","s":{"p":["*%_"],"r":"Bool"},"k":"m","m":0},{"n":"reset-backtrace","s":{"p":["*%_"],"r":"Mu"},"k":"m","m":0},{"n":"is-compile-time","s":{"r":"Bool","p":["*%_"]},"m":0,"k":"m"},{"m":0,"k":"m","n":"throw","s":{"p":["$bt?","*%_"],"r":"Mu"}},{"k":"m","m":0,"s":{"p":["*%_"],"r":"Mu"},"n":"fail"},{"k":"m","m":1,"s":{"r":"Mu","p":["*%_"]},"n":"Str"},{"k":"m","m":1,"s":{"p":["*%_"],"r":"Mu"},"n":"Str"},{"m":1,"k":"m","n":"Str","s":{"r":"Mu","p":["*%_"]}},{"s":{"r":"Mu","p":["*%_"]},"n":"die","k":"m","m":0},{"n":"rethrow","s":{"p":["*%_"],"r":"Mu"},"m":0,"k":"m"},{"s":{"p":["*%_"],"r":"Mu"},"n":"backtrace","k":"m","m":0},{"n":"gist","s":{"p":["*%_"],"r":"Mu"},"k":"m","m":1},{"s":{"r":"Mu","p":["*%_"]},"n":"gist","m":1,"k":"m"},{"m":1,"k":"m","s":{"r":"Mu","p":["*%_"]},"n":"gist"},{"k":"m","m":0,"n":"vault-backtrace","s":{"p":["*%_"],"r":"Mu"}},{"m":0,"k":"s","n":"BUILDALL","s":{"p":["@auto","%init","*%_"],"r":"Mu"}}],"k":"c","d":"TITLE\nrole CX::Redo\n\nSUBTITLE\nRedo control exception\n\n    role CX::Redo does X::Control { }\n\nA control exception thrown when redo is called.\n\n"},{"n":"CX::Return","t":"CX::Return","a":[{"t":"Mu","n":"$!ex","k":"v"},{"t":"Mu","n":"$!bt","k":"v"}],"b":"A","m":[{"m":0,"k":"m","n":"message","s":{"p":["*%_"],"r":"Mu"}},{"m":0,"k":"s","s":{"r":"Mu","p":["@auto","%init","*%_"]},"n":"BUILDALL"},{"n":"resume","s":{"p":["*%_"],"r":"Bool"},"m":0,"k":"m"},{"n":"reset-backtrace","s":{"p":["*%_"],"r":"Mu"},"m":0,"k":"m"},{"m":0,"k":"m","s":{"r":"Bool","p":["*%_"]},"n":"is-compile-time"},{"n":"throw","s":{"p":["$bt?","*%_"],"r":"Mu"},"k":"m","m":0},{"m":0,"k":"m","s":{"p":["*%_"],"r":"Mu"},"n":"fail"},{"k":"m","m":1,"s":{"r":"Mu","p":["*%_"]},"n":"Str"},{"k":"m","m":1,"s":{"r":"Mu","p":["*%_"]},"n":"Str"},{"k":"m","m":1,"n":"Str","s":{"p":["*%_"],"r":"Mu"}},{"n":"die","s":{"r":"Mu","p":["*%_"]},"m":0,"k":"m"},{"k":"m","m":0,"n":"rethrow","s":{"r":"Mu","p":["*%_"]}},{"k":"m","m":0,"s":{"p":["*%_"],"r":"Mu"},"n":"backtrace"},{"n":"gist","s":{"r":"Mu","p":["*%_"]},"m":1,"k":"m"},{"n":"gist","s":{"p":["*%_"],"r":"Mu"},"k":"m","m":1},{"m":1,"k":"m","s":{"p":["*%_"],"r":"Mu"},"n":"gist"},{"s":{"r":"Mu","p":["*%_"]},"n":"vault-backtrace","k":"m","m":0},{"n":"BUILDALL","s":{"p":["@auto","%init","*%_"],"r":"Mu"},"k":"s","m":0}],"k":"c","d":"TITLE\nrole CX::Return\n\nSUBTITLE\nReturn control exception\n\n    role CX::Next does X::Control { }\n\nA control exception to be used when return is called from within a sub.\n\n"},{"n":"CX::Next","t":"CX::Next","a":[{"n":"$!ex","t":"Mu","k":"v"},{"n":"$!bt","t":"Mu","k":"v"}],"b":"A","m":[{"n":"message","s":{"r":"Mu","p":["*%_"]},"k":"m","m":0},{"k":"s","m":0,"n":"BUILDALL","s":{"r":"Mu","p":["@auto","%init","*%_"]}},{"s":{"r":"Bool","p":["*%_"]},"n":"resume","k":"m","m":0},{"m":0,"k":"m","n":"reset-backtrace","s":{"r":"Mu","p":["*%_"]}},{"s":{"r":"Bool","p":["*%_"]},"n":"is-compile-time","k":"m","m":0},{"s":{"p":["$bt?","*%_"],"r":"Mu"},"n":"throw","m":0,"k":"m"},{"k":"m","m":0,"s":{"r":"Mu","p":["*%_"]},"n":"fail"},{"k":"m","m":1,"n":"Str","s":{"p":["*%_"],"r":"Mu"}},{"s":{"p":["*%_"],"r":"Mu"},"n":"Str","k":"m","m":1},{"k":"m","m":1,"n":"Str","s":{"p":["*%_"],"r":"Mu"}},{"m":0,"k":"m","n":"die","s":{"p":["*%_"],"r":"Mu"}},{"m":0,"k":"m","s":{"p":["*%_"],"r":"Mu"},"n":"rethrow"},{"m":0,"k":"m","n":"backtrace","s":{"p":["*%_"],"r":"Mu"}},{"m":1,"k":"m","n":"gist","s":{"r":"Mu","p":["*%_"]}},{"n":"gist","s":{"p":["*%_"],"r":"Mu"},"m":1,"k":"m"},{"m":1,"k":"m","n":"gist","s":{"r":"Mu","p":["*%_"]}},{"n":"vault-backtrace","s":{"p":["*%_"],"r":"Mu"},"m":0,"k":"m"},{"n":"BUILDALL","s":{"r":"Mu","p":["@auto","%init","*%_"]},"m":0,"k":"s"}],"k":"c","d":"TITLE\nrole CX::Next\n\nSUBTITLE\nNext control exception\n\n    role CX::Next does X::Control { }\n\nA control exception that is triggered when next is called.\n\n    for ^10 {\n        CONTROL {\n          when CX::Next { say \"We're next\" };\n        }\n        next if $_ %% 2;\n        say \"We're in $_\";\n    }\n\n\nThis will print:\n\n    We're next\n    We're in 1\n    We're next\n    We're in 3\n    We're next\n    We're in 5\n    We're next\n    We're in 7\n    We're next\n    We're in 9\n\n\n"},{"t":"CX::Proceed","n":"CX::Proceed","d":"TITLE\nrole CX::Proceed\n\nSUBTITLE\nProceed control exception\n\n    role CX::Proceed does X::Control { }\n\nA control exception to be used when proceed is used within when or default\nblocks.\n\n","a":[{"n":"$!ex","t":"Mu","k":"v"},{"n":"$!bt","t":"Mu","k":"v"}],"b":"A","m":[{"m":0,"k":"m","s":{"p":["*%_"],"r":"Mu"},"n":"message"},{"k":"s","m":0,"s":{"p":["@auto","%init","*%_"],"r":"Mu"},"n":"BUILDALL"},{"k":"m","m":0,"s":{"r":"Bool","p":["*%_"]},"n":"resume"},{"k":"m","m":0,"n":"reset-backtrace","s":{"r":"Mu","p":["*%_"]}},{"m":0,"k":"m","n":"is-compile-time","s":{"r":"Bool","p":["*%_"]}},{"m":0,"k":"m","s":{"p":["$bt?","*%_"],"r":"Mu"},"n":"throw"},{"m":0,"k":"m","n":"fail","s":{"p":["*%_"],"r":"Mu"}},{"k":"m","m":1,"n":"Str","s":{"r":"Mu","p":["*%_"]}},{"k":"m","m":1,"s":{"r":"Mu","p":["*%_"]},"n":"Str"},{"k":"m","m":1,"n":"Str","s":{"r":"Mu","p":["*%_"]}},{"m":0,"k":"m","n":"die","s":{"p":["*%_"],"r":"Mu"}},{"m":0,"k":"m","s":{"p":["*%_"],"r":"Mu"},"n":"rethrow"},{"n":"backtrace","s":{"p":["*%_"],"r":"Mu"},"m":0,"k":"m"},{"m":1,"k":"m","n":"gist","s":{"r":"Mu","p":["*%_"]}},{"m":1,"k":"m","s":{"r":"Mu","p":["*%_"]},"n":"gist"},{"m":1,"k":"m","s":{"r":"Mu","p":["*%_"]},"n":"gist"},{"k":"m","m":0,"s":{"r":"Mu","p":["*%_"]},"n":"vault-backtrace"},{"n":"BUILDALL","s":{"r":"Mu","p":["@auto","%init","*%_"]},"m":0,"k":"s"}],"k":"c"},{"t":"CX::Succeed","n":"CX::Succeed","d":"TITLE\nrole CX::Succeed\n\nSUBTITLE\nSucceed control exception\n\n    role CX::Succeed does X::Control { }\n\nA control exception thrown when succeed is called from a when or default\nblock.\n\n","a":[{"n":"$!ex","t":"Mu","k":"v"},{"t":"Mu","n":"$!bt","k":"v"}],"b":"A","m":[{"k":"m","m":0,"s":{"r":"Mu","p":["*%_"]},"n":"message"},{"k":"s","m":0,"s":{"r":"Mu","p":["@auto","%init","*%_"]},"n":"BUILDALL"},{"n":"resume","s":{"r":"Bool","p":["*%_"]},"k":"m","m":0},{"k":"m","m":0,"n":"reset-backtrace","s":{"r":"Mu","p":["*%_"]}},{"m":0,"k":"m","s":{"p":["*%_"],"r":"Bool"},"n":"is-compile-time"},{"k":"m","m":0,"s":{"r":"Mu","p":["$bt?","*%_"]},"n":"throw"},{"k":"m","m":0,"s":{"p":["*%_"],"r":"Mu"},"n":"fail"},{"k":"m","m":1,"n":"Str","s":{"p":["*%_"],"r":"Mu"}},{"m":1,"k":"m","s":{"r":"Mu","p":["*%_"]},"n":"Str"},{"m":1,"k":"m","s":{"r":"Mu","p":["*%_"]},"n":"Str"},{"k":"m","m":0,"n":"die","s":{"p":["*%_"],"r":"Mu"}},{"n":"rethrow","s":{"p":["*%_"],"r":"Mu"},"k":"m","m":0},{"n":"backtrace","s":{"p":["*%_"],"r":"Mu"},"m":0,"k":"m"},{"k":"m","m":1,"s":{"r":"Mu","p":["*%_"]},"n":"gist"},{"m":1,"k":"m","s":{"r":"Mu","p":["*%_"]},"n":"gist"},{"k":"m","m":1,"s":{"r":"Mu","p":["*%_"]},"n":"gist"},{"s":{"p":["*%_"],"r":"Mu"},"n":"vault-backtrace","k":"m","m":0},{"s":{"r":"Mu","p":["@auto","%init","*%_"]},"n":"BUILDALL","k":"s","m":0}],"k":"c"},{"t":"Sub+{is-pure}+{Precedence}","n":"&infix:<lt>","k":"v"},{"s":{"r":"Mu","p":["$x?"]},"n":"infix:<lt>","k":"s","m":1},{"s":{"p":["\\a","\\b"],"r":"Mu"},"n":"infix:<lt>","k":"s","m":1},{"n":"infix:<lt>","s":{"r":"Mu","p":["Blob:D \\a","Blob:D \\b"]},"k":"s","m":1},{"m":1,"k":"s","s":{"r":"Bool:D","p":["Str:D \\a","Str:D \\b"]},"n":"infix:<lt>"},{"s":{"r":"Bool:D","p":["str $a","str $b"]},"n":"infix:<lt>","k":"s","m":1},{"k":"e","n":"SIGSTOP","t":"Signal"},{"n":"&dir","t":"Sub","k":"v"},{"n":"dir","s":{"r":"Mu","p":["*%_"]},"m":1,"k":"s"},{"m":1,"k":"s","n":"dir","s":{"p":["IO::Path:D $path","|c is raw"],"r":"Mu"}},{"m":1,"k":"s","n":"dir","s":{"p":["$path","|c is raw"],"r":"Mu"}},{"k":"v","n":"&infix:<(-)>","t":"Sub+{is-pure}+{Precedence}"},{"s":{"r":"Mu","p":[]},"n":"infix:<(-)>","m":1,"k":"s"},{"k":"s","m":1,"s":{"p":["QuantHash:D \\a"],"r":"Mu"},"n":"infix:<(-)>"},{"n":"infix:<(-)>","s":{"r":"Mu","p":["SetHash:D \\a"]},"m":1,"k":"s"},{"s":{"r":"Mu","p":["BagHash:D \\a"]},"n":"infix:<(-)>","m":1,"k":"s"},{"k":"s","m":1,"n":"infix:<(-)>","s":{"r":"Mu","p":["MixHash:D \\a"]}},{"s":{"p":["\\a"],"r":"Mu"},"n":"infix:<(-)>","m":1,"k":"s"},{"m":1,"k":"s","s":{"p":["Setty:D \\a","Setty:D \\b"],"r":"Mu"},"n":"infix:<(-)>"},{"m":1,"k":"s","n":"infix:<(-)>","s":{"p":["Setty:D \\a","Map:D \\b"],"r":"Mu"}},{"m":1,"k":"s","s":{"r":"Mu","p":["Setty:D \\a","Iterable:D \\b"]},"n":"infix:<(-)>"},{"m":1,"k":"s","n":"infix:<(-)>","s":{"p":["Mixy:D \\a","Mixy:D \\b"],"r":"Mu"}},{"s":{"p":["Mixy:D \\a","QuantHash:D \\b"],"r":"Mu"},"n":"infix:<(-)>","k":"s","m":1},{"m":1,"k":"s","n":"infix:<(-)>","s":{"r":"Mu","p":["QuantHash:D \\a","Mixy:D \\b"]}},{"k":"s","m":1,"n":"infix:<(-)>","s":{"p":["Mixy:D \\a","Map:D \\b"],"r":"Mu"}},{"m":1,"k":"s","s":{"r":"Mu","p":["Mixy:D \\a","Any:D \\b"]},"n":"infix:<(-)>"},{"k":"s","m":1,"s":{"r":"Mu","p":["Any:D \\a","Mixy:D \\b"]},"n":"infix:<(-)>"},{"m":1,"k":"s","n":"infix:<(-)>","s":{"r":"Mu","p":["Baggy:D \\a","Mixy:D \\b"]}},{"k":"s","m":1,"s":{"p":["Baggy:D \\a","Baggy:D \\b"],"r":"Mu"},"n":"infix:<(-)>"},{"n":"infix:<(-)>","s":{"r":"Mu","p":["Baggy:D \\a","QuantHash:D \\b"]},"k":"s","m":1},{"s":{"r":"Mu","p":["QuantHash:D \\a","Baggy:D \\b"]},"n":"infix:<(-)>","k":"s","m":1},{"n":"infix:<(-)>","s":{"p":["Baggy:D \\a","Map:D \\b"],"r":"Mu"},"k":"s","m":1},{"s":{"p":["Baggy:D \\a","Any:D \\b"],"r":"Mu"},"n":"infix:<(-)>","m":1,"k":"s"},{"m":1,"k":"s","s":{"p":["\\a","Baggy:D \\b"],"r":"Mu"},"n":"infix:<(-)>"},{"s":{"p":["\\a","Map:D \\b"],"r":"Mu"},"n":"infix:<(-)>","m":1,"k":"s"},{"s":{"r":"Mu","p":["\\a","Iterable:D \\b"]},"n":"infix:<(-)>","k":"s","m":1},{"m":1,"k":"s","s":{"r":"Mu","p":["$","Failure:D \\b"]},"n":"infix:<(-)>"},{"s":{"r":"Mu","p":["Failure:D \\a","$"]},"n":"infix:<(-)>","k":"s","m":1},{"m":1,"k":"s","s":{"r":"Mu","p":["\\a","\\b"]},"n":"infix:<(-)>"},{"n":"infix:<(-)>","s":{"r":"Mu","p":["**@p"]},"m":1,"k":"s"},{"k":"e","n":"FileRenamed","t":"FileChangeEvent"},{"k":"v","t":"Sub+{Precedence}","n":"&infix:<orelse>"},{"m":1,"k":"s","n":"infix:<orelse>","s":{"r":"Mu","p":["+$"]}},{"n":"Distribution","t":"Distribution","k":"ro","m":[{"m":0,"k":"m","n":"meta","s":{"p":["*%_"],"r":"Hash"}},{"m":0,"k":"m","n":"content","s":{"p":["$content-id","*%_"],"r":"IO::Handle"}}],"b":"C","d":"TITLE\nrole Distribution\n\nSUBTITLE\nDistribution\n\n    role Distribution { }\n\nInterface for objects that provide API access mapping META6 data to the\nfiles its represents. Objects that fulfill the Distribution role can be\nread by e.g. CompUnit::Repository::Installation. Generally a Distribution\nprovides read access to a set of modules and metadata. These may be backed\nby the filesystem (Distribution::Path, Distribution::Hash) but could also\nread from an e.g. tar file or socket.\n\nRequired "},{"m":[{"m":0,"k":"s","n":"BUILD","s":{"p":[":meta($!meta)",":prefix($!prefix)","*%_"],"r":"Nil"}},{"s":{"r":"Mu","p":["$hash",":$prefix","*%_"]},"n":"new","m":0,"k":"m"},{"m":0,"k":"m","s":{"p":["*%_"],"r":"Mu"},"n":"meta"},{"m":0,"k":"m","n":"perl","s":{"p":["*%_"],"r":"Mu"}},{"k":"m","m":0,"s":{"r":"Mu","p":["$address","*%_"]},"n":"content"},{"m":0,"k":"m","n":"prefix","s":{"r":"Mu","p":["*%_"]}},{"n":"BUILDALL","s":{"r":"Mu","p":["@auto","%init","*%_"]},"k":"s","m":0}],"k":"c","a":[{"n":"$!meta","t":"Mu","k":"v"},{"t":"IO::Path","n":"$.prefix","k":"v"}],"b":"A","d":"TITLE\nclass Distribution::Hash\n\nSUBTITLE\nDistribution::Hash\n\n        class Distribution::Hash does Distribution::Locally { }\n\n\nA Distribution implementation backed by the filesystem. It does not require\na META6.json file, essentially providing a lower level Distribution::Path.\n\n","n":"Distribution::Hash","t":"Distribution::Hash"},{"b":"A","a":[{"n":"$.repo","t":"Mu","k":"v"},{"n":"$.repo-name","t":"Mu","k":"v"},{"t":"Mu","n":"$.dist-id","k":"v"},{"n":"$.key","t":"Mu","k":"v"}],"k":"c","m":[{"k":"m","m":0,"s":{"r":"Mu","p":["*%_"]},"n":"IO"},{"m":0,"k":"m","n":"platform-library-name","s":{"p":["*%_"],"r":"Mu"}},{"m":0,"k":"m","n":"absolute","s":{"r":"Mu","p":["|c is raw"]}},{"k":"m","m":0,"n":"is-absolute","s":{"p":["|c is raw"],"r":"Mu"}},{"m":0,"k":"m","s":{"p":["|c is raw"],"r":"Mu"},"n":"relative"},{"k":"m","m":0,"s":{"p":["|c is raw"],"r":"Mu"},"n":"is-relative"},{"m":0,"k":"m","s":{"p":["|c is raw"],"r":"Mu"},"n":"parts"},{"m":0,"k":"m","s":{"p":["|c is raw"],"r":"Mu"},"n":"volume"},{"s":{"p":["|c is raw"],"r":"Mu"},"n":"dirname","m":0,"k":"m"},{"n":"basename","s":{"p":["|c is raw"],"r":"Mu"},"m":0,"k":"m"},{"m":0,"k":"m","s":{"p":["|c is raw"],"r":"Mu"},"n":"extension"},{"s":{"p":["|c is raw"],"r":"Mu"},"n":"open","m":0,"k":"m"},{"m":0,"k":"m","s":{"p":["|c is raw"],"r":"Mu"},"n":"resolve"},{"s":{"p":["|c is raw"],"r":"Mu"},"n":"slurp","k":"m","m":0},{"s":{"r":"Mu","p":["|c is raw"]},"n":"lines","k":"m","m":0},{"n":"comb","s":{"r":"Mu","p":["|c is raw"]},"k":"m","m":0},{"s":{"p":["|c is raw"],"r":"Mu"},"n":"split","k":"m","m":0},{"m":0,"k":"m","s":{"p":["|c is raw"],"r":"Mu"},"n":"words"},{"m":0,"k":"m","n":"copy","s":{"r":"Mu","p":["|c is raw"]}},{"k":"m","m":1,"s":{"p":["*%_"],"r":"Mu"},"n":"Str"},{"k":"m","m":1,"s":{"r":"Mu","p":["*%_"]},"n":"Str"},{"n":"Str","s":{"r":"Mu","p":["|c is raw"]},"k":"m","m":1},{"m":1,"k":"m","n":"gist","s":{"p":["*%_"],"r":"Mu"}},{"m":1,"k":"m","n":"gist","s":{"p":["*%_"],"r":"Mu"}},{"n":"gist","s":{"p":["|c is raw"],"r":"Mu"},"k":"m","m":1},{"s":{"p":["*%_"],"r":"Mu"},"n":"perl","m":1,"k":"m"},{"n":"perl","s":{"r":"Mu","p":["*%_"]},"m":1,"k":"m"},{"m":1,"k":"m","s":{"p":["|c is raw"],"r":"Mu"},"n":"perl"},{"m":0,"k":"m","n":"repo","s":{"p":["*%_"],"r":"Mu"}},{"k":"m","m":0,"s":{"p":["*%_"],"r":"Mu"},"n":"repo-name"},{"m":0,"k":"m","s":{"p":["*%_"],"r":"Mu"},"n":"dist-id"},{"s":{"r":"Mu","p":["*%_"]},"n":"key","k":"m","m":0},{"n":"BUILDALL","s":{"r":"Mu","p":["@auto","%init","*%_"]},"m":0,"k":"s"}],"t":"Distribution::Resource","n":"Distribution::Resource"},{"m":[{"m":1,"k":"m","s":{"r":"Nil","p":[":dist-id($!dist-id)","CompUnit::Repository :$repo","*%_"]},"n":"BUILD"},{"k":"m","m":1,"s":{"p":[":dist-id($!dist-id)",":$repo","Str :repo-name($!repo-name)","*%_"],"r":"Nil"},"n":"BUILD"},{"m":1,"k":"m","n":"BUILD","s":{"r":"Nil","p":[":dist-id($!dist-id)","Str :repo($!repo)",":$repo-name","*%_"]}},{"k":"m","m":0,"s":{"p":["*%_"],"r":"Mu"},"n":"from-precomp"},{"n":"AT-KEY","s":{"r":"Mu","p":["$key","*%_"]},"k":"m","m":0},{"m":0,"k":"m","s":{"p":["*%_"],"r":"Mu"},"n":"Str"},{"s":{"r":"Mu","p":["*%_"]},"n":"of","k":"m","m":0},{"k":"m","m":0,"n":"keyof","s":{"r":"Mu","p":["*%_"]}},{"s":{"p":["*%_"],"r":"Mu"},"n":"dist-id","m":0,"k":"m"},{"s":{"r":"Mu","p":["*%_"]},"n":"repo","k":"m","m":0},{"k":"m","m":0,"s":{"p":["*%_"],"r":"Mu"},"n":"repo-name"},{"s":{"p":["@auto","%init","*%_"],"r":"Mu"},"n":"BUILDALL","k":"s","m":0}],"k":"c","a":[{"n":"$.dist-id","t":"Str","k":"v"},{"t":"Str","n":"$.repo","k":"v"},{"t":"Str","n":"$.repo-name","k":"v"}],"b":"A","n":"Distribution::Resources","t":"Distribution::Resources"},{"b":"A","a":[{"k":"v","n":"$!meta","t":"Mu"},{"n":"$!meta-file","t":"Mu","k":"v"},{"n":"$.prefix","t":"IO::Path","k":"v"}],"k":"c","m":[{"s":{"r":"Nil","p":[":meta($!meta)",":prefix($!prefix)",":meta-file($!meta-file)","*%_"]},"n":"BUILD","k":"s","m":0},{"s":{"p":["IO::Path $prefix","IO::Path :$meta-file = IO::Path","*%_"],"r":"Mu"},"n":"new","m":0,"k":"m"},{"k":"m","m":0,"s":{"p":["*%_"],"r":"Mu"},"n":"meta"},{"k":"m","m":0,"n":"perl","s":{"p":["*%_"],"r":"Mu"}},{"n":"content","s":{"r":"Mu","p":["$address","*%_"]},"k":"m","m":0},{"s":{"p":["*%_"],"r":"Mu"},"n":"prefix","m":0,"k":"m"},{"n":"BUILDALL","s":{"p":["@auto","%init","*%_"],"r":"Mu"},"m":0,"k":"s"}],"d":"TITLE\nclass Distribution::Path\n\nSUBTITLE\nDistribution::Path\n\n        class Distribution::Path does Distribution::Locally { }\n\n\nA Distribution implementation backed by the filesystem. It requires a\nMETA6.json file at its root.\n\n","n":"Distribution::Path","t":"Distribution::Path"},{"n":"Distribution::Locally","t":"Distribution::Locally","m":[{"s":{"p":["$address","*%_"],"r":"Mu"},"n":"content","k":"m","m":0}],"k":"ro","b":"C","a":[{"t":"IO::Path","n":"$.prefix","k":"v"}],"d":"TITLE\nclass Distribution::Locally\n\nSUBTITLE\nDistribution::Locally\n\n    role Distribution::Locally does Distribution { }\n\nProvides read access to specific files pointed at by a distributions\nmetadata, providing the Distribution#method_content method for\nDistribution::Path and Distribution::Hash.\n\n"},{"k":"e","n":"SIGCHLD","t":"Signal"},{"k":"v","t":"Sub+{is-pure}+{Precedence}","n":"&infix:<%%>"},{"n":"infix:<%%>","s":{"r":"Mu","p":[]},"m":1,"k":"s"},{"n":"infix:<%%>","s":{"r":"Mu","p":["$"]},"m":1,"k":"s"},{"s":{"p":["Int:D \\a","Int:D \\b"],"r":"Mu"},"n":"infix:<%%>","m":1,"k":"s"},{"k":"s","m":1,"s":{"r":"Mu","p":["\\a","\\b"]},"n":"infix:<%%>"},{"m":1,"k":"s","s":{"r":"Bool:D","p":["int $a","int $b"]},"n":"infix:<%%>"},{"t":"Sub","n":"&rotate","k":"v"},{"m":1,"k":"s","n":"rotate","s":{"r":"Mu","p":["@a"]}},{"n":"rotate","s":{"r":"Mu","p":["@a","Int:D $n"]},"k":"s","m":1},{"n":"&note","t":"Sub","k":"v"},{"s":{"r":"Mu","p":[]},"n":"note","k":"s","m":1},{"m":1,"k":"s","s":{"r":"Mu","p":["**@args is raw"]},"n":"note"},{"t":"Sub","n":"&sum","k":"v"},{"n":"sum","s":{"r":"Mu","p":[]},"k":"s","m":1},{"s":{"r":"Mu","p":["\\SELF"]},"n":"sum","k":"s","m":1},{"n":"sum","s":{"p":["+\\SELF is raw"],"r":"Mu"},"m":1,"k":"s"},{"k":"e","n":"Endian","t":"Endian"},{"k":"e","n":"Endian::BigEndian","t":"Endian"},{"t":"Endian","n":"Endian::LittleEndian","k":"e"},{"n":"Endian::NativeEndian","t":"Endian","k":"e"},{"k":"v","n":"&hash","t":"Sub"},{"s":{"r":"Mu","p":["*%h"]},"n":"hash","m":1,"k":"s"},{"s":{"p":["*@a","*%h"],"r":"Mu"},"n":"hash","m":1,"k":"s"},{"n":"&infix:<does>","t":"Sub+{Precedence}","k":"v"},{"s":{"p":["Mu:D \\obj","Mu:U \\rolish"],"r":"Mu"},"n":"infix:<does>","k":"s","m":1},{"k":"s","m":1,"n":"infix:<does>","s":{"r":"Mu","p":["Mu:D \\obj","Mu:U \\rolish",":$value! is raw"]}},{"n":"infix:<does>","s":{"p":["Mu:U \\obj","Mu:U \\role","*%_"],"r":"Mu"},"k":"s","m":1},{"k":"s","m":1,"n":"infix:<does>","s":{"r":"Mu","p":["Mu:D \\obj","**@roles"]}},{"s":{"r":"Mu","p":["Mu:U \\obj","**@roles"]},"n":"infix:<does>","m":1,"k":"s"},{"t":"Sub","n":"&circumfix:<:{ }>","k":"v"},{"k":"s","m":0,"s":{"p":["*@e"],"r":"Mu"},"n":""},{"k":"v","t":"Sub","n":"&prompt"},{"k":"s","m":1,"n":"prompt","s":{"r":"Mu","p":[]}},{"m":1,"k":"s","s":{"r":"Mu","p":["$msg"]},"n":"prompt"},{"k":"v","t":"Sub","n":"&open"},{"n":"open","s":{"r":"Mu","p":["$path","|c is raw"]},"m":1,"k":"s"},{"k":"v","t":"Sub","n":"&prefix:<--⚛>"},{"n":"prefix:<--⚛>","s":{"p":["atomicint $target is rw"],"r":"atomicint"},"m":1,"k":"s"},{"n":"&squish","t":"Sub","k":"v"},{"n":"squish","s":{"p":["+\\values is raw","|c is raw"],"r":"Mu"},"m":1,"k":"s"},{"n":"Slip","t":"Slip","a":[{"k":"v","t":"Mu","n":"$!reified"},{"k":"v","t":"Mu","n":"$!todo"}],"b":"C","k":"c","m":[{"m":0,"k":"m","s":{"p":["+\\args is raw","*%_"],"r":"Mu"},"n":"CALL-ME"},{"m":1,"k":"m","s":{"p":["*%_"],"r":"Bool"},"n":"defined"},{"k":"m","m":1,"n":"defined","s":{"p":["*%_"],"r":"Bool"}},{"k":"m","m":1,"n":"defined","s":{"r":"Bool:D","p":["*%_"]}},{"k":"m","m":1,"s":{"p":["*%_"],"r":"Mu"},"n":"Slip"},{"s":{"r":"Slip:D","p":["*%_"]},"n":"Slip","k":"m","m":1},{"s":{"r":"Slip:D","p":["*%_"]},"n":"Slip","m":1,"k":"m"},{"k":"m","m":1,"s":{"p":["*%_"],"r":"Mu"},"n":"perl"},{"k":"m","m":1,"n":"perl","s":{"p":["*%_"],"r":"Mu"}},{"k":"m","m":1,"s":{"p":["*%_"],"r":"Str:D"},"n":"perl"},{"k":"m","m":1,"n":"perl","s":{"p":["*%_"],"r":"Str:D"}},{"k":"m","m":1,"s":{"r":"Mu","p":["*%_"]},"n":"List"},{"n":"List","s":{"r":"List:D","p":["*%_"]},"k":"m","m":1},{"m":1,"k":"m","n":"List","s":{"p":["*%_"],"r":"List:D"}},{"n":"BUILDALL","s":{"r":"Mu","p":["@auto","%init","*%_"]},"k":"s","m":0},{"k":"m","m":0,"n":"eager","s":{"p":["*%_"],"r":"List:D"}},{"n":"new","s":{"r":"List:D","p":["**@things is raw","*%_"]},"k":"m","m":0},{"m":0,"k":"m","s":{"p":["|"],"r":"Mu"},"n":"from-slurpy"},{"m":0,"k":"m","s":{"r":"Mu","p":["|"]},"n":"push"},{"n":"list","s":{"p":["*%_"],"r":"Mu"},"k":"m","m":1},{"k":"m","m":1,"n":"list","s":{"p":["*%_"],"r":"Mu"}},{"s":{"r":"Mu","p":["*%_"]},"n":"list","m":1,"k":"m"},{"n":"hyper","s":{"r":"Mu","p":["Int(Cool) :$batch = 64","Int(Cool) :$degree = 4","*%_"]},"k":"m","m":0},{"m":0,"k":"m","n":"from-iterator","s":{"p":["Iterator $iter","*%_"],"r":"List:D"}},{"m":0,"k":"m","s":{"p":["Int(Cool) $rotate = 1","*%_"],"r":"Mu"},"n":"rotate"},{"m":1,"k":"m","s":{"r":"Str:D","p":["*%_"]},"n":"fmt"},{"s":{"r":"Str:D","p":["Str(Cool) $format","*%_"]},"n":"fmt","m":1,"k":"m"},{"n":"fmt","s":{"r":"Str:D","p":["Str(Cool) $format","$separator","*%_"]},"m":1,"k":"m"},{"n":"item","s":{"r":"Mu","p":["*%_"]},"m":0,"k":"m"},{"n":"ACCEPTS","s":{"p":["\\topic","*%_"],"r":"Mu"},"m":1,"k":"m"},{"k":"m","m":1,"s":{"r":"Mu","p":["Mu:U \\topic","*%_"]},"n":"ACCEPTS"},{"m":1,"k":"m","s":{"p":["Mu:D \\a","*%_"],"r":"Mu"},"n":"ACCEPTS"},{"s":{"r":"Bool","p":["Mu:U $","*%_"]},"n":"ACCEPTS","m":1,"k":"m"},{"k":"m","m":1,"s":{"r":"Bool:D","p":["\\topic","*%_"]},"n":"ACCEPTS"},{"n":"ACCEPTS","s":{"p":["Iterable:U $","*%_"],"r":"Bool"},"m":1,"k":"m"},{"s":{"p":["Iterable:D $topic","*%_"],"r":"Bool:D"},"n":"ACCEPTS","m":1,"k":"m"},{"s":{"p":["$topic","*%_"],"r":"Mu"},"n":"ACCEPTS","k":"m","m":1},{"m":0,"k":"m","s":{"r":"Mu","p":["Int(Cool) :$batch = 64","Int(Cool) :$degree = 4","*%_"]},"n":"race"},{"k":"m","m":0,"s":{"r":"Mu","p":["Str(Cool) $separator = \"\"","*%_"]},"n":"join"},{"m":1,"k":"m","s":{"p":["*%_"],"r":"Mu"},"n":"invert"},{"m":1,"k":"m","s":{"r":"Mu","p":["*%_"]},"n":"invert"},{"k":"m","m":1,"n":"invert","s":{"p":["*%_"],"r":"Seq:D"}},{"m":0,"k":"m","n":"ASSIGN-POS","s":{"p":["Int:D \\pos","\\what","*%_"],"r":"Mu"}},{"s":{"r":"Nil","p":["*%_"]},"n":"sink","k":"m","m":0},{"m":0,"k":"m","s":{"p":["*%_"],"r":"Seq:D"},"n":"reverse"},{"s":{"r":"Mu","p":["*%_"]},"n":"FLATTENABLE_HASH","k":"m","m":0},{"s":{"r":"Mu","p":["*%_"]},"n":"Numeric","m":1,"k":"m"},{"s":{"p":["*%_"],"r":"Int:D"},"n":"Numeric","m":1,"k":"m"},{"s":{"p":["*%_"],"r":"Mu"},"n":"to","m":0,"k":"m"},{"s":{"r":"Bool","p":["*%_"]},"n":"is-lazy","k":"m","m":1},{"s":{"p":["*%_"],"r":"Bool:D"},"n":"is-lazy","m":1,"k":"m"},{"n":"perl","s":{"p":["*%_"],"r":"Mu"},"k":"m","m":1},{"s":{"r":"Mu","p":["*%_"]},"n":"perl","m":1,"k":"m"},{"n":"perl","s":{"r":"Str:D","p":["*%_"]},"m":1,"k":"m"},{"n":"of","s":{"p":["*%_"],"r":"Mu"},"k":"m","m":0},{"n":"lazy-if","s":{"p":["$flag","*%_"],"r":"Mu"},"m":0,"k":"m"},{"k":"m","m":1,"n":"BagHash","s":{"r":"BagHash:D","p":["*%_"]}},{"n":"BagHash","s":{"r":"Mu","p":["*%_"]},"k":"m","m":1},{"n":"prepend","s":{"r":"Mu","p":["|"]},"k":"m","m":0},{"s":{"r":"Int","p":["*%_"]},"n":"end","k":"m","m":1},{"k":"m","m":1,"n":"end","s":{"r":"Mu","p":["*%_"]}},{"s":{"r":"Int:D","p":["*%_"]},"n":"end","k":"m","m":1},{"n":"MixHash","s":{"r":"MixHash:D","p":["*%_"]},"m":1,"k":"m"},{"k":"m","m":1,"n":"MixHash","s":{"p":["*%_"],"r":"Mu"}},{"m":0,"k":"m","n":"lazy","s":{"p":["*%_"],"r":"Mu"}},{"s":{"p":["*%_"],"r":"Mu"},"n":"Int","m":1,"k":"m"},{"k":"m","m":1,"n":"Int","s":{"p":["*%_"],"r":"Int:D"}},{"m":1,"k":"m","n":"antipairs","s":{"r":"Mu","p":["*%_"]}},{"k":"m","m":1,"n":"antipairs","s":{"r":"Mu","p":["*%_"]}},{"n":"antipairs","s":{"p":["*%_"],"r":"Seq:D"},"m":1,"k":"m"},{"s":{"p":["*%_"],"r":"Mu"},"n":"reification-target","k":"m","m":0},{"n":"iterator","s":{"r":"Iterator:D","p":["*%_"]},"k":"m","m":0},{"n":"Capture","s":{"p":["*%_"],"r":"Capture:D"},"m":0,"k":"m"},{"n":"Str","s":{"r":"Mu","p":["*%_"]},"m":1,"k":"m"},{"s":{"r":"Mu","p":["*%_"]},"n":"Str","k":"m","m":1},{"k":"m","m":1,"s":{"p":["*%_"],"r":"Str:D"},"n":"Str"},{"s":{"r":"Mu","p":["*%_"]},"n":"Slip","m":1,"k":"m"},{"m":1,"k":"m","n":"Slip","s":{"r":"Slip:D","p":["*%_"]}},{"m":1,"k":"m","s":{"r":"SetHash:D","p":["*%_"]},"n":"SetHash"},{"k":"m","m":1,"s":{"p":["*%_"],"r":"Mu"},"n":"SetHash"},{"s":{"p":["*%_"],"r":"Mu"},"n":"tail","m":1,"k":"m"},{"s":{"p":["$n","*%_"],"r":"Mu"},"n":"tail","m":1,"k":"m"},{"s":{"p":["*%_"],"r":"Mu"},"n":"tail","k":"m","m":1},{"m":1,"k":"m","n":"tail","s":{"r":"Seq:D","p":["$n","*%_"]}},{"k":"m","m":0,"n":"pop","s":{"p":["|"],"r":"Mu"}},{"n":"Supply","s":{"p":["*%_"],"r":"Mu"},"m":1,"k":"m"},{"k":"m","m":1,"s":{"p":["*%_"],"r":"Supply:D"},"n":"Supply"},{"s":{"p":["*%_"],"r":"Seq:D"},"n":"permutations","k":"m","m":1},{"n":"Array","s":{"p":["*%_"],"r":"Mu"},"k":"m","m":1},{"k":"m","m":1,"n":"Array","s":{"r":"Array:D","p":["*%_"]}},{"s":{"p":["*%_"],"r":"Bag:D"},"n":"Bag","k":"m","m":1},{"s":{"r":"Mu","p":["*%_"]},"n":"Bag","m":1,"k":"m"},{"m":1,"k":"m","s":{"r":"Bool","p":["Any:D $","*%_"]},"n":"EXISTS-POS"},{"s":{"r":"Mu","p":["Any:U $pos","*%_"]},"n":"EXISTS-POS","k":"m","m":1},{"s":{"r":"Bool:D","p":["int \\pos","*%_"]},"n":"EXISTS-POS","m":1,"k":"m"},{"m":1,"k":"m","s":{"r":"Bool:D","p":["Int:D \\pos","*%_"]},"n":"EXISTS-POS"},{"n":"EXISTS-POS","s":{"r":"Bool:D","p":["Num:D \\pos","*%_"]},"m":1,"k":"m"},{"s":{"r":"Bool:D","p":["Any:D \\pos","*%_"]},"n":"EXISTS-POS","k":"m","m":1},{"m":1,"k":"m","n":"EXISTS-POS","s":{"p":["Any:U \\pos","*%_"],"r":"Mu"}},{"s":{"r":"Bool:D","p":["\\one","\\two","*%_"]},"n":"EXISTS-POS","m":1,"k":"m"},{"m":1,"k":"m","n":"EXISTS-POS","s":{"r":"Bool:D","p":["\\one","\\two","\\three","*%_"]}},{"n":"EXISTS-POS","s":{"p":["**@indices","*%_"],"r":"Bool:D"},"k":"m","m":1},{"s":{"p":["int $pos","*%_"],"r":"Mu"},"n":"EXISTS-POS","k":"m","m":1},{"m":1,"k":"m","n":"EXISTS-POS","s":{"r":"Bool:D","p":["Int:D $pos","*%_"]}},{"s":{"r":"Seq:D","p":["*%_"]},"n":"combinations","k":"m","m":1},{"n":"combinations","s":{"r":"Seq:D","p":["$of","*%_"]},"m":1,"k":"m"},{"n":"combinations","s":{"r":"Seq:D","p":["Range:D $ofrange","*%_"]},"k":"m","m":1},{"n":"flat","s":{"p":["*%_"],"r":"Mu"},"m":0,"k":"m"},{"k":"m","m":0,"s":{"p":["|"],"r":"Mu"},"n":"append"},{"m":0,"k":"m","s":{"r":"Mu","p":["|"]},"n":"from-slurpy-flat"},{"s":{"r":"Mu","p":["*%_"]},"n":"sort","m":1,"k":"m"},{"n":"sort","s":{"p":["&by","*%_"],"r":"Mu"},"k":"m","m":1},{"k":"m","m":1,"n":"sort","s":{"r":"Seq:D","p":["*%_"]}},{"k":"m","m":1,"s":{"p":["&by","*%_"],"r":"Seq:D"},"n":"sort"},{"n":"from-slurpy-onearg","s":{"p":["|"],"r":"Mu"},"k":"m","m":0},{"m":1,"k":"m","s":{"p":["*%_"],"r":"Set:D"},"n":"Set"},{"s":{"p":["*%_"],"r":"Mu"},"n":"Set","k":"m","m":1},{"k":"m","m":1,"n":"Mix","s":{"p":["*%_"],"r":"Mix:D"}},{"n":"Mix","s":{"p":["*%_"],"r":"Mu"},"k":"m","m":1},{"n":"from","s":{"r":"Mu","p":["*%_"]},"k":"m","m":0},{"s":{"p":["*%_"],"r":"Mu"},"n":"FLATTENABLE_LIST","k":"m","m":0},{"m":1,"k":"m","s":{"r":"Mu","p":["*%_"]},"n":"kv"},{"m":1,"k":"m","n":"kv","s":{"r":"Mu","p":["*%_"]}},{"k":"m","m":1,"n":"kv","s":{"r":"Seq:D","p":["*%_"]}},{"k":"m","m":1,"s":{"p":["Iterable:D \\iterable",":$INITIALIZE!","*%_"],"r":"List:D"},"n":"STORE"},{"s":{"p":["Iterable:D \\iterable","*%_"],"r":"List:D"},"n":"STORE","k":"m","m":1},{"m":1,"k":"m","n":"STORE","s":{"p":["Mu \\item","*%_"],"r":"List:D"}},{"n":"values","s":{"p":["*%_"],"r":"Mu"},"m":1,"k":"m"},{"k":"m","m":1,"s":{"r":"Mu","p":["*%_"]},"n":"values"},{"s":{"p":["*%_"],"r":"Seq:D"},"n":"values","k":"m","m":1},{"s":{"r":"Mu","p":["|"]},"n":"unshift","m":0,"k":"m"},{"m":1,"k":"m","n":"roll","s":{"p":["*%_"],"r":"Mu"}},{"s":{"r":"Mu","p":["Whatever $","*%_"]},"n":"roll","k":"m","m":1},{"s":{"r":"Mu","p":["\\number","*%_"]},"n":"roll","m":1,"k":"m"},{"k":"m","m":1,"n":"pairs","s":{"p":["*%_"],"r":"Mu"}},{"n":"pairs","s":{"p":["*%_"],"r":"Mu"},"k":"m","m":1},{"m":1,"k":"m","s":{"p":["*%_"],"r":"Seq:D"},"n":"pairs"},{"s":{"r":"Mu","p":["*%_"]},"n":"gist","m":1,"k":"m"},{"n":"gist","s":{"r":"Mu","p":["*%_"]},"k":"m","m":1},{"n":"gist","s":{"p":["*%_"],"r":"Str:D"},"k":"m","m":1},{"k":"m","m":0,"n":"BIND-POS","s":{"p":["Int:D \\pos","\\what","*%_"],"r":"Mu"}},{"m":1,"k":"m","s":{"p":["int \\pos","*%_"],"r":"Mu"},"n":"AT-POS"},{"n":"AT-POS","s":{"r":"Mu","p":["Int:D \\pos","*%_"]},"m":1,"k":"m"},{"m":1,"k":"m","s":{"r":"Mu","p":["Num:D \\pos","*%_"]},"n":"AT-POS"},{"n":"AT-POS","s":{"r":"Mu","p":["Any:D \\pos","*%_"]},"k":"m","m":1},{"n":"AT-POS","s":{"r":"Mu","p":["int \\pos","*%_"]},"k":"m","m":1},{"m":1,"k":"m","s":{"r":"Mu","p":["Int:D \\pos","*%_"]},"n":"AT-POS"},{"m":1,"k":"m","s":{"p":["Num:D \\pos","*%_"],"r":"Mu"},"n":"AT-POS"},{"k":"m","m":1,"n":"AT-POS","s":{"p":["Any:D \\pos","*%_"],"r":"Mu"}},{"n":"AT-POS","s":{"p":["Any:U \\pos","*%_"],"r":"Mu"},"m":1,"k":"m"},{"s":{"p":["\\one","\\two","*%_"],"r":"Mu"},"n":"AT-POS","m":1,"k":"m"},{"m":1,"k":"m","n":"AT-POS","s":{"r":"Mu","p":["\\one","\\two","\\three","*%_"]}},{"m":1,"k":"m","n":"AT-POS","s":{"p":["**@indices","*%_"],"r":"Mu"}},{"m":1,"k":"m","s":{"p":["int $pos","*%_"],"r":"Mu"},"n":"AT-POS"},{"s":{"r":"Mu","p":["Int:D $pos","*%_"]},"n":"AT-POS","k":"m","m":1},{"s":{"p":["|c is raw"],"r":"Mu"},"n":"CALL-ME","m":0,"k":"m"},{"s":{"r":"Mu","p":["*%_"]},"n":"chrs","m":1,"k":"m"},{"m":1,"k":"m","s":{"p":["*%_"],"r":"Str:D"},"n":"chrs"},{"s":{"p":["*%_"],"r":"Mu"},"n":"sum","k":"m","m":0},{"n":"shift","s":{"p":["|"],"r":"Mu"},"m":0,"k":"m"},{"m":1,"k":"m","n":"keys","s":{"p":["*%_"],"r":"Mu"}},{"s":{"r":"Mu","p":["*%_"]},"n":"keys","k":"m","m":1},{"k":"m","m":1,"n":"keys","s":{"r":"Seq:D","p":["*%_"]}},{"n":"pick","s":{"r":"Mu","p":["*%_"]},"k":"m","m":1},{"n":"pick","s":{"p":["Callable:D $calculate","*%_"],"r":"Mu"},"k":"m","m":1},{"n":"pick","s":{"p":["$number is copy","*%_"],"r":"Mu"},"m":1,"k":"m"},{"n":"Bool","s":{"r":"Bool","p":["*%_"]},"m":1,"k":"m"},{"s":{"r":"Mu","p":["*%_"]},"n":"Bool","m":1,"k":"m"},{"k":"m","m":1,"n":"Bool","s":{"p":["*%_"],"r":"Bool:D"}},{"m":1,"k":"m","s":{"p":["*%_"],"r":"Int"},"n":"elems"},{"m":1,"k":"m","s":{"r":"Mu","p":["*%_"]},"n":"elems"},{"n":"elems","s":{"p":["*%_"],"r":"Int:D"},"k":"m","m":1},{"k":"m","m":1,"s":{"r":"Mu","p":["*%_"]},"n":"List"},{"s":{"p":["*%_"],"r":"List:D"},"n":"List","m":1,"k":"m"},{"n":"BUILDALL","s":{"r":"Mu","p":["@auto","%init","*%_"]},"k":"s","m":0}],"d":"TITLE\nclass Slip\n\nSUBTITLE\nA kind of List that automatically flattens into an outer container\n\n    class Slip is List {}\n\nA Slip is a List that automatically flattens into an outer List (or other\nlist-like container or iterable).\n\nFor example it allows you to write a map that produces more than one value\ninto the result without nesting:\n\n    say <a b c>.map({ ($_, $_.uc).Slip }).join('|');        # OUTPUT: «a|A|b|B|c|C␤»\n\n\nIn contrast, when returning an ordinary List, the resulting list is\nnested:\n\n    say <a b c>.map({ $_, $_.uc }).join('|');               # OUTPUT: «a A|b B|c C␤»\n\n\nTo create a Slip, either coerce another list-like type to it by calling the\nSlip method, or use the slip subroutine:\n\n    # This says \"1\" and then says \"2\", rather than saying \"(1 2)\"\n    .say for gather {\n        take slip(1, 2);\n    }\n\nA Slip may also be created by using the prefix:<|> operator. This differs\nfrom the slip subroutine in both precedence and treatment of single\narguments. In fact, prefix:<|> only takes a single argument, so in that\nway, it behaves closer to the .Slip method than the slip subroutine.\n\n    my $l = (1, 2, 3);\n    say (1, slip 2, 3).perl;  # says (1, 2, 3)      , slips 2, 3 into (1, …)\n    say (0, slip $l).perl;    # says (0, $(1, 2, 3)), $l does not break apart\n    say (0, $l.Slip).perl;    # says (0, 1, 2, 3)   , slips from $l into (0, …)\n    say (|$l).perl;           # says slip(1, 2, 3)  , breaks apart $l\n    say (0, (|$l, 4), 5);     # says (0 (1 2 3 4) 5), slips from $l into (…, 4)\n    say (0, ($l.Slip, 4), 5); # says (0 (1 2 3 4) 5), slips from $l into (…, 4)\n    say (0, (slip $l, 4), 5); # says (0 (1 2 3) 4 5), slips ($l, 4) into (0, …, 5)\n    say (0, ($l, 4).Slip, 5); # says (0 (1 2 3) 4 5), slips ($l, 4) into (0, …, 5)\n\n\nLoops that do not want to produce a value for an iteration use Slips,\nrather than empty Lists to do so, as do if statements that do not run their\nblocks.\n\nPlease note that prefix:<|> will also apply parameters in a slippy manner\nto a routine call. It does not forward a Slip to the called routine, that\nincludes return and take.\n\n    my \\l = gather for 1..10 -> $a, $b { take |($a, $b) }; say l.perl;\n    # OUTPUT: «((1, 2), (3, 4), (5, 6), (7, 8), (9, 10)).Seq␤»\n    my \\m= gather for 1..10 -> $a, $b { take ($a, $b).Slip }; say m.perl;\n    # OUTPUT: «(1, 2, 3, 4, 5, 6, 7, 8, 9, 10).Seq␤»\n\n"},{"n":"&infix:<…^>","t":"Sub","k":"v"},{"s":{"p":["|c is raw"],"r":"Mu"},"n":"infix:<…^>","m":1,"k":"s"},{"t":"Sub","n":"&redo","k":"v"},{"k":"s","m":1,"s":{"p":[],"r":"Nil"},"n":"redo"},{"m":1,"k":"s","n":"redo","s":{"r":"Nil","p":["Label:D \\x"]}},{"k":"e","n":"SeekFromBeginning","t":"SeekType"},{"n":"NativeEndian","t":"Endian","k":"e"},{"t":"Sub","n":"&move","k":"v"},{"k":"s","m":1,"s":{"r":"Mu","p":["$from","$to",":$createonly"]},"n":"move"},{"n":"&infix:<⊄>","t":"Sub+{is-pure}+{Precedence}","k":"v"},{"s":{"r":"Bool:D","p":["\\a","\\b"]},"n":"infix:<⊄>","k":"s","m":1},{"k":"v","t":"Sub+{is-pure}","n":"&sin"},{"k":"s","m":1,"s":{"r":"Mu","p":["Numeric \\x"]},"n":"sin"},{"n":"sin","s":{"r":"Mu","p":["Cool \\x"]},"m":1,"k":"s"},{"s":{"p":["num $x"],"r":"num"},"n":"sin","k":"s","m":1},{"n":"&produce","t":"Sub","k":"v"},{"k":"s","m":1,"s":{"r":"Mu","p":["&with","+\\list is raw"]},"n":"produce"},{"t":"Sub","n":"&first","k":"v"},{"s":{"r":"Mu","p":["Bool:D $t","|"]},"n":"first","m":1,"k":"s"},{"s":{"r":"Mu","p":["Mu $test","+\\values is raw","*%a"]},"n":"first","k":"s","m":1},{"k":"v","n":"&take","t":"Sub"},{"k":"s","m":1,"s":{"r":"Mu","p":[]},"n":"take"},{"m":1,"k":"s","s":{"p":["\\x"],"r":"Mu"},"n":"take"},{"k":"s","m":1,"n":"take","s":{"p":["|"],"r":"Mu"}},{"k":"v","t":"Sub","n":"&sleep"},{"m":1,"k":"s","n":"sleep","s":{"p":[],"r":"Nil"}},{"k":"s","m":1,"s":{"r":"Nil","p":["$seconds"]},"n":"sleep"},{"k":"v","n":"&uniname","t":"Sub"},{"n":"uniname","s":{"p":["Str:D $str"],"r":"Mu"},"k":"s","m":1},{"s":{"p":["Int:D $code"],"r":"Mu"},"n":"uniname","m":1,"k":"s"},{"n":"&infix:<||>","t":"Sub+{Precedence}","k":"v"},{"n":"infix:<||>","s":{"r":"Mu","p":["Mu $x = Bool::False"]},"k":"s","m":1},{"k":"s","m":1,"s":{"r":"Mu","p":["Mu \\a","&b"]},"n":"infix:<||>"},{"n":"infix:<||>","s":{"p":["Mu \\a","Mu \\b"],"r":"Mu"},"k":"s","m":1},{"n":"&cosec","t":"Sub+{is-pure}","k":"v"},{"n":"cosec","s":{"p":["Numeric \\x"],"r":"Mu"},"k":"s","m":1},{"n":"cosec","s":{"p":["Cool \\x"],"r":"Mu"},"k":"s","m":1},{"s":{"p":["Num:D \\x"],"r":"Mu"},"n":"cosec","k":"s","m":1},{"k":"v","t":"Sub+{is-pure}+{Precedence}","n":"&infix:<≽>"},{"n":"infix:<≽>","s":{"p":["$a","$b"],"r":"Bool:D"},"m":1,"k":"s"},{"n":"&repeated","t":"Sub","k":"v"},{"k":"s","m":1,"n":"repeated","s":{"r":"Mu","p":["+\\values is raw","|c is raw"]}},{"t":"SetHash","n":"SetHash","d":"TITLE\nclass SetHash\n\nSUBTITLE\nMutable collection of distinct objects\n\n    class SetHash does Setty { }\n\nA SetHash is a mutable set, meaning a collection of distinct elements in no\nparticular order. (For immutable sets, see Set instead.)\n\nObjects/values of any type are allowed as set elements. Within a Set, every\nelement is guaranteed to be unique (in the sense that no two elements would\ncompare positively with the === operator):\n\n    my $fruits = <peach apple orange apple apple>.SetHash;\n\n    say $fruits.elems;      # OUTPUT: «3␤»\n    say $fruits.keys.sort;  # OUTPUT: «apple orange peach␤»\n\n\nSetHashes can be treated as object hashes using the { } postcircumfix\noperator, which returns the value True for keys that are elements of the\nset, and False for keys that aren't. Assigning a value that boolifies to\nTrue or False, respectively, can be used to add or remove a set element:\n\n    my $fruits = <peach apple orange apple apple>.SetHash;\n\n    say $fruits<apple>;     # OUTPUT: «True␤»\n    say $fruits<kiwi>;      # OUTPUT: «False␤»\n\n    $fruits<apple kiwi> = False, True;\n    say $fruits.keys.sort;  # OUTPUT: «kiwi orange peach␤»\n\n\nHere is a convenient shorthand idiom for adding and removing SetHash\nelements:\n\n    my SetHash $fruits .= new;\n    say $fruits<cherry>;      # OUTPUT: «False␤»\n    $fruits<cherry>++;\n    say $fruits<cherry>;      # OUTPUT: «True␤»\n    $fruits<apple banana kiwi>»++; # Add multiple elements\n\n    $fruits<cherry>--;\n    say $fruits<cherry>;      # OUTPUT: «False␤»\n    $fruits<banana kiwi>»--; # Remove multiple elements\n\n\n\nCreating SetHash objects\n\nSetHashes can be composed using SetHash.new. Any positional parameters,\nregardless of their type, become elements of the set:\n\n    my $n = SetHash.new: \"zero\" => 0, \"one\" => 1, \"two\" => 2;\n    say $n.keys.perl;        # OUTPUT: «(:two(2), :zero(0), :one(1)).Seq␤»\n    say $n.keys.map(&WHAT);  # OUTPUT: «((Pair) (Pair) (Pair))␤»\n\nAlternatively, the .SetHash coercer (or its functional form, SetHash()) can\nbe called on an existing object to coerce it to a SetHash. Its semantics\ndepend on the type and contents of the object. In general it evaluates the\nobject in list context and creates a set with the resulting items as\nelements, although for Hash-like objects or Pair items, only the keys\nbecome elements of the set - and keys mapped to values which boolify to\nFalse are skipped:\n\n    my $n = (\"zero\" => 0, \"one\" => 1, \"two\" => 2).SetHash;\n    say $n.keys.perl;        # OUTPUT: «(\"one\", \"two\").Seq␤»\n    say $n.keys.map(&WHAT);  # OUTPUT: «((Str) (Str))␤»\n\nIt is also possible to initialize a single key with the use of {}:\n\n    my $sh = SetHash.new;\n    $sh{ 'key1' } = True;\n    $sh{ 'key2' } = 'Hello World!';\n    $sh{ 'key3' } = 0;  # does not store the key since 0.Bool is False\n    say $sh;            # OUTPUT: «SetHash(key1 key2)␤»\n    say $sh.keys.perl;  # OUTPUT: «(\"key1\", \"key2\").Seq␤»\n\nor, in order to initialize more than one key at the same time, use a list\nassignment:\n\n    my $sh = SetHash.new;\n    $sh{ 'a', 'b', 'c' } = True, False, True;\n    say $sh.keys.perl;  # OUTPUT: «(\"a\", \"c\").Seq␤»\n\nYou can also create SetHash masquerading as a hash by using the is trait:\n\n    my %sh is SetHash = <a b c>;\n    say %sh<a>;  # True\n    say %sh<d>;  # False\n\nSince 6.d (2019.03 and later) it is also possible to specify the type of\nvalues you would like to allow in a SetHash. This can either be done when\ncalling .new:\n\n    # only allow Pairs\n    my $n = SetHash[Pair].new: \"zero\" => 0, \"one\" => 1, \"two\" => 2;\n\nor using the masquerading syntax:\n\n    # only allow strings\n    my %sh is SetHash[Str] = <a b c>;\n    say %sh<a>;  # True\n    say %sh<d>;  # False\n\n    # only allow whole numbers\n    my %sh is SetHash[Int] = <a b c>;\n    # Type check failed in binding; expected Int but got Str (\"a\")\n\nOperators\n\nRaku provides common set operators, which can take SetHashes (or any other\ncollections) as input, although result sets are returned as immutable Sets.\nFor example:\n\n    my ($a, $b) = SetHash.new(1, 2, 3), SetHash.new(2, 4);\n\n    say $a (<) $b;  # OUTPUT: «False␤»\n    say $a (&) $b;  # OUTPUT: «set(2)␤»\n    say $a (^) $b;  # OUTPUT: «set(1, 3, 4)␤»\n    say $a (|) $b;  # OUTPUT: «set(1, 2, 3, 4)␤»\n\n    # Unicode versions:\n    say $a ⊂ $b;  # OUTPUT: «False␤»\n    say $a ∩ $b;  # OUTPUT: «set(2)␤»\n    say $a ⊖ $b;  # OUTPUT: «set(1, 3, 4)␤»\n    say $a ∪ $b;  # OUTPUT: «set(1, 2, 3, 4)␤»\n\n\nSee Set/Bag Operators for a complete list of set operators with detailed\nexplanations.\n\nSee Also\n\nSets, Bags, and Mixes","b":"A","a":[{"k":"v","n":"$!elems","t":"Rakudo::Internals::IterationSet"}],"m":[{"m":0,"k":"m","n":"iterator","s":{"p":["*%_"],"r":"Mu"}},{"m":0,"k":"m","n":"clone","s":{"r":"Mu","p":["*%_"]}},{"s":{"p":["*%_"],"r":"Mu"},"n":"of","k":"m","m":0},{"n":"new-from-pairs","s":{"r":"Setty:D","p":["*@pairs","*%_"]},"k":"m","m":0},{"n":"default","s":{"p":["*%_"],"r":"Bool"},"k":"m","m":0},{"k":"m","m":0,"s":{"r":"Int:D","p":["*%_"]},"n":"elems"},{"k":"m","m":0,"s":{"r":"Int:D","p":["*%_"]},"n":"total"},{"n":"grab","s":{"r":"Mu","p":["*%_"]},"k":"m","m":1},{"m":1,"k":"m","s":{"p":["Callable:D $calculate","*%_"],"r":"Mu"},"n":"grab"},{"m":1,"k":"m","s":{"p":["Whatever $","*%_"],"r":"Mu"},"n":"grab"},{"m":1,"k":"m","s":{"p":["$count","*%_"],"r":"Mu"},"n":"grab"},{"k":"m","m":1,"n":"grabpairs","s":{"p":["*%_"],"r":"Mu"}},{"n":"grabpairs","s":{"p":["Callable:D $calculate","*%_"],"r":"Mu"},"k":"m","m":1},{"s":{"p":["Whatever $","*%_"],"r":"Mu"},"n":"grabpairs","k":"m","m":1},{"n":"grabpairs","s":{"r":"Mu","p":["$count","*%_"]},"m":1,"k":"m"},{"m":1,"k":"m","n":"pick","s":{"p":["*%_"],"r":"Mu"}},{"n":"pick","s":{"r":"Mu","p":["Callable:D $calculate","*%_"]},"m":1,"k":"m"},{"n":"pick","s":{"r":"Mu","p":["Whatever $","*%_"]},"k":"m","m":1},{"k":"m","m":1,"n":"pick","s":{"r":"Mu","p":["$count","*%_"]}},{"n":"pickpairs","s":{"r":"Mu","p":["*%_"]},"k":"m","m":1},{"k":"m","m":1,"s":{"p":["Callable:D $calculate","*%_"],"r":"Mu"},"n":"pickpairs"},{"k":"m","m":1,"n":"pickpairs","s":{"p":["Whatever $","*%_"],"r":"Mu"}},{"k":"m","m":1,"n":"pickpairs","s":{"p":["\\count","*%_"],"r":"Mu"}},{"k":"m","m":1,"s":{"p":["*%_"],"r":"Mu"},"n":"roll"},{"m":1,"k":"m","s":{"p":["Callable:D $calculate","*%_"],"r":"Mu"},"n":"roll"},{"k":"m","m":1,"n":"roll","s":{"p":["Whatever $","*%_"],"r":"Mu"}},{"k":"m","m":1,"s":{"r":"Mu","p":["$count","*%_"]},"n":"roll"},{"k":"m","m":0,"n":"RAW-HASH","s":{"p":["*%_"],"r":"Mu"}},{"k":"m","m":0,"n":"keyof","s":{"r":"Mu","p":["*%_"]}},{"m":0,"k":"m","n":"SET-SELF","s":{"p":["\\elems","*%_"],"r":"Mu"}},{"n":"STORE","s":{"p":["*@pairs","*%_"],"r":"SetHash:D"},"m":1,"k":"m"},{"m":1,"k":"m","s":{"r":"SetHash:D","p":["\\objects","\\bools","*%_"]},"n":"STORE"},{"n":"STORE","s":{"p":["|"],"r":"Mu"},"k":"m","m":1},{"s":{"p":["*%_"],"r":"Int:D"},"n":"Int","k":"m","m":0},{"n":"Num","s":{"p":["*%_"],"r":"Num:D"},"m":0,"k":"m"},{"n":"Numeric","s":{"r":"Numeric:D","p":["*%_"]},"m":0,"k":"m"},{"s":{"p":["*%_"],"r":"Real:D"},"n":"Real","m":0,"k":"m"},{"n":"Capture","s":{"r":"Mu","p":["*%_"]},"k":"m","m":0},{"k":"m","m":0,"n":"fmt","s":{"p":["Cool $format = \"\\%s\\t\\%s\"","$sep = \"\\n\"","*%_"],"r":"Mu"}},{"m":1,"k":"m","n":"Setty","s":{"r":"Mu","p":["*%_"]}},{"k":"m","m":1,"n":"Setty","s":{"p":["*%_"],"r":"Mu"}},{"k":"m","m":1,"s":{"p":["*%_"],"r":"Mu"},"n":"Baggy"},{"k":"m","m":1,"n":"Baggy","s":{"r":"Mu","p":["*%_"]}},{"k":"m","m":1,"n":"Mixy","s":{"p":["*%_"],"r":"Mu"}},{"n":"Mixy","s":{"p":["*%_"],"r":"Mu"},"k":"m","m":1},{"n":"kv","s":{"r":"Mu","p":["*%_"]},"m":1,"k":"m"},{"k":"m","m":1,"s":{"p":["*%_"],"r":"Mu"},"n":"kv"},{"s":{"r":"Mu","p":["*%_"]},"n":"kv","m":1,"k":"m"},{"k":"m","m":1,"n":"values","s":{"r":"Mu","p":["*%_"]}},{"n":"values","s":{"r":"Mu","p":["*%_"]},"k":"m","m":1},{"s":{"p":["*%_"],"r":"Mu"},"n":"values","m":1,"k":"m"},{"k":"m","m":1,"s":{"p":["*%_"],"r":"Set:D"},"n":"Set"},{"n":"Set","s":{"r":"Mu","p":[":$view","*%_"]},"m":1,"k":"m"},{"k":"m","m":1,"s":{"p":["*%_"],"r":"SetHash:D"},"n":"SetHash"},{"m":1,"k":"m","s":{"r":"Mu","p":["*%_"]},"n":"SetHash"},{"m":1,"k":"m","s":{"p":["$key","*%_"],"r":"Mu"},"n":"AT-KEY"},{"m":1,"k":"m","n":"AT-KEY","s":{"r":"Mu","p":["\\key","*%_"]}},{"n":"AT-KEY","s":{"r":"Bool:D","p":["\\k","*%_"]},"k":"m","m":1},{"s":{"r":"Mu","p":["$key","*%_"]},"n":"AT-KEY","m":1,"k":"m"},{"m":1,"k":"m","s":{"r":"Nil","p":["$","*%_"]},"n":"DELETE-KEY"},{"n":"DELETE-KEY","s":{"p":["$","*%_"],"r":"Mu"},"k":"m","m":1},{"s":{"r":"Bool:D","p":["\\k","*%_"]},"n":"DELETE-KEY","k":"m","m":1},{"m":1,"k":"m","n":"new","s":{"p":["*%attrinit"],"r":"Mu"}},{"m":1,"k":"m","s":{"p":["$","*@","*%_"],"r":"Mu"},"n":"new"},{"m":1,"k":"m","s":{"p":["*%_"],"r":"Setty:D"},"n":"new"},{"s":{"r":"Setty:D","p":["\\value","*%_"]},"n":"new","k":"m","m":1},{"k":"m","m":1,"s":{"p":["**@args","*%_"],"r":"Setty:D"},"n":"new"},{"m":1,"k":"m","n":"keys","s":{"p":["*%_"],"r":"Mu"}},{"k":"m","m":1,"s":{"r":"Mu","p":["*%_"]},"n":"keys"},{"k":"m","m":1,"n":"keys","s":{"p":["*%_"],"r":"Mu"}},{"k":"m","m":1,"s":{"p":["*%_"],"r":"Mu"},"n":"antipairs"},{"k":"m","m":1,"s":{"r":"Mu","p":["*%_"]},"n":"antipairs"},{"s":{"p":["*%_"],"r":"Mu"},"n":"antipairs","m":1,"k":"m"},{"n":"minpairs","s":{"r":"Mu","p":["*%_"]},"k":"m","m":1},{"k":"m","m":1,"n":"minpairs","s":{"p":["*%_"],"r":"Mu"}},{"s":{"p":["*%_"],"r":"Mu"},"n":"maxpairs","m":1,"k":"m"},{"s":{"p":["*%_"],"r":"Mu"},"n":"maxpairs","m":1,"k":"m"},{"k":"m","m":1,"s":{"p":["*%_"],"r":"Bool"},"n":"Bool"},{"k":"m","m":1,"n":"Bool","s":{"r":"Mu","p":["*%_"]}},{"n":"Bool","s":{"r":"Bool:D","p":["*%_"]},"m":1,"k":"m"},{"k":"m","m":1,"n":"hash","s":{"p":["*%_"],"r":"Mu"}},{"s":{"p":["*%_"],"r":"Mu"},"n":"hash","m":1,"k":"m"},{"m":1,"k":"m","n":"hash","s":{"p":["*%_"],"r":"Hash:D"}},{"n":"Hash","s":{"r":"Mu","p":["*%_"]},"k":"m","m":1},{"n":"Hash","s":{"r":"Hash:D","p":["*%_"]},"k":"m","m":1},{"m":1,"k":"m","s":{"p":["\\topic","*%_"],"r":"Mu"},"n":"ACCEPTS"},{"n":"ACCEPTS","s":{"p":["Mu:U \\topic","*%_"],"r":"Mu"},"m":1,"k":"m"},{"m":1,"k":"m","n":"ACCEPTS","s":{"p":["Mu:D \\a","*%_"],"r":"Mu"}},{"k":"m","m":1,"s":{"p":["Mu:U $","*%_"],"r":"Bool"},"n":"ACCEPTS"},{"m":1,"k":"m","s":{"p":["\\topic","*%_"],"r":"Bool:D"},"n":"ACCEPTS"},{"n":"ACCEPTS","s":{"p":["\\other","*%_"],"r":"Mu"},"m":1,"k":"m"},{"n":"ACCEPTS","s":{"p":["Setty:D \\other","*%_"],"r":"Mu"},"m":1,"k":"m"},{"n":"ACCEPTS","s":{"p":["\\other","*%_"],"r":"Mu"},"k":"m","m":1},{"n":"Str","s":{"r":"Mu","p":["*%_"]},"m":1,"k":"m"},{"m":1,"k":"m","s":{"p":["*%_"],"r":"Mu"},"n":"Str"},{"m":1,"k":"m","s":{"p":["*%_"],"r":"Str:D"},"n":"Str"},{"m":1,"k":"m","s":{"r":"Mu","p":["*%_"]},"n":"gist"},{"m":1,"k":"m","n":"gist","s":{"p":["*%_"],"r":"Mu"}},{"m":1,"k":"m","s":{"r":"Str:D","p":["*%_"]},"n":"gist"},{"m":1,"k":"m","n":"perl","s":{"r":"Mu","p":["*%_"]}},{"k":"m","m":1,"n":"perl","s":{"r":"Mu","p":["*%_"]}},{"n":"perl","s":{"p":["*%_"],"r":"Str:D"},"k":"m","m":1},{"m":1,"k":"m","s":{"r":"Bool","p":["$","*%_"]},"n":"EXISTS-KEY"},{"n":"EXISTS-KEY","s":{"p":["$","*%_"],"r":"Bool"},"m":1,"k":"m"},{"m":1,"k":"m","s":{"r":"Bool:D","p":["\\k","*%_"]},"n":"EXISTS-KEY"},{"m":1,"k":"m","s":{"p":["*%_"],"r":"Bag:D"},"n":"Bag"},{"s":{"p":["*%_"],"r":"Mu"},"n":"Bag","k":"m","m":1},{"n":"BagHash","s":{"p":["*%_"],"r":"BagHash:D"},"k":"m","m":1},{"m":1,"k":"m","n":"BagHash","s":{"r":"Mu","p":["*%_"]}},{"s":{"p":["*%_"],"r":"Mix:D"},"n":"Mix","m":1,"k":"m"},{"m":1,"k":"m","s":{"r":"Mu","p":["*%_"]},"n":"Mix"},{"k":"m","m":1,"s":{"r":"MixHash:D","p":["*%_"]},"n":"MixHash"},{"s":{"r":"Mu","p":["*%_"]},"n":"MixHash","k":"m","m":1},{"s":{"p":["*%_"],"r":"Mu"},"n":"list","m":1,"k":"m"},{"s":{"r":"Mu","p":["*%_"]},"n":"list","k":"m","m":1},{"k":"m","m":1,"n":"list","s":{"p":["*%_"],"r":"Mu"}},{"k":"m","m":1,"n":"list","s":{"r":"Mu","p":["*%_"]}},{"s":{"r":"Mu","p":["*%_"]},"n":"pairs","k":"m","m":1},{"m":1,"k":"m","s":{"r":"Mu","p":["*%_"]},"n":"pairs"},{"s":{"p":["*%_"],"r":"Mu"},"n":"pairs","m":1,"k":"m"},{"m":0,"k":"s","n":"BUILDALL","s":{"r":"Mu","p":["@auto","%init","*%_"]}},{"m":0,"k":"m","s":{"p":["\\type","\\iterator","*%_"],"r":"Setty:D"},"n":"!create-from-iterator"},{"k":"m","m":0,"s":{"r":"Mu","p":["\\type","*%_"]},"n":"!HASHIFY"}],"k":"c"},{"k":"v","n":"&infix:<gcd>","t":"Sub+{is-pure}+{Precedence}"},{"m":1,"k":"s","n":"infix:<gcd>","s":{"p":[],"r":"Mu"}},{"k":"s","m":1,"s":{"r":"Mu","p":["Int:D $x"]},"n":"infix:<gcd>"},{"n":"infix:<gcd>","s":{"p":["\\a","\\b"],"r":"Mu"},"k":"s","m":1},{"m":1,"k":"s","n":"infix:<gcd>","s":{"r":"Int:D","p":["Int:D \\a","Int:D \\b"]}},{"m":1,"k":"s","s":{"p":["int $a","int $b"],"r":"int"},"n":"infix:<gcd>"},{"t":"Sub+{is-pure}+{Precedence}","n":"&infix:<?&>","k":"v"},{"s":{"p":["Mu $x = Bool::True"],"r":"Mu"},"n":"infix:<?&>","k":"s","m":1},{"k":"s","m":1,"s":{"r":"Mu","p":["Mu \\a","Mu \\b"]},"n":"infix:<?&>"},{"d":"TITLE\nclass NFKC\n\nSUBTITLE\nCodepoint string in Normal Form KC (compatibility composed)\n\n    class NFKC is Uni {}\n\nA Codepoint string in Unicode Normalization Form KC. It is created by\nCompatibility Decomposition, followed by Canonical Composition. For more\ninformation on what this means, see Unicode TR15.","b":"A","m":[{"k":"m","m":0,"s":{"r":"Mu","p":["*%_"]},"n":"NFKC"},{"k":"m","m":0,"s":{"p":["|"],"r":"Mu"},"n":"new"},{"s":{"p":["@auto","%init","*%_"],"r":"Mu"},"n":"BUILDALL","m":0,"k":"s"},{"n":"list","s":{"p":["*%_"],"r":"Mu"},"m":0,"k":"m"},{"s":{"p":["*@codes","*%_"],"r":"Mu"},"n":"new","m":0,"k":"m"},{"k":"m","m":1,"n":"perl","s":{"p":["*%_"],"r":"Mu"}},{"m":1,"k":"m","s":{"p":["*%_"],"r":"Mu"},"n":"perl"},{"m":1,"k":"m","n":"perl","s":{"r":"Mu","p":["*%_"]}},{"m":0,"k":"m","s":{"r":"Mu","p":["*%_"]},"n":"Numeric"},{"m":0,"k":"m","n":"of","s":{"p":["*%_"],"r":"Mu"}},{"k":"m","m":0,"s":{"p":["*%_"],"r":"Mu"},"n":"codes"},{"m":0,"k":"m","n":"NFD","s":{"p":["*%_"],"r":"Mu"}},{"n":"NFKD","s":{"r":"Mu","p":["*%_"]},"m":0,"k":"m"},{"s":{"p":["*%_"],"r":"Mu"},"n":"NFC","m":0,"k":"m"},{"n":"Int","s":{"r":"Mu","p":["*%_"]},"k":"m","m":0},{"n":"NFKC","s":{"p":["*%_"],"r":"Mu"},"k":"m","m":0},{"s":{"p":["*%_"],"r":"Mu"},"n":"Str","m":1,"k":"m"},{"n":"Str","s":{"p":["*%_"],"r":"Mu"},"m":1,"k":"m"},{"k":"m","m":1,"n":"Str","s":{"p":["*%_"],"r":"Mu"}},{"n":"EXISTS-POS","s":{"p":["Any:D $","*%_"],"r":"Bool"},"m":1,"k":"m"},{"n":"EXISTS-POS","s":{"p":["Any:U $pos","*%_"],"r":"Mu"},"m":1,"k":"m"},{"n":"EXISTS-POS","s":{"r":"Bool:D","p":["int \\pos","*%_"]},"k":"m","m":1},{"n":"EXISTS-POS","s":{"p":["Int:D \\pos","*%_"],"r":"Bool:D"},"k":"m","m":1},{"s":{"r":"Bool:D","p":["Num:D \\pos","*%_"]},"n":"EXISTS-POS","m":1,"k":"m"},{"s":{"r":"Bool:D","p":["Any:D \\pos","*%_"]},"n":"EXISTS-POS","m":1,"k":"m"},{"m":1,"k":"m","s":{"p":["Any:U \\pos","*%_"],"r":"Mu"},"n":"EXISTS-POS"},{"m":1,"k":"m","n":"EXISTS-POS","s":{"r":"Bool:D","p":["\\one","\\two","*%_"]}},{"m":1,"k":"m","s":{"p":["\\one","\\two","\\three","*%_"],"r":"Bool:D"},"n":"EXISTS-POS"},{"m":1,"k":"m","s":{"r":"Bool:D","p":["**@indices","*%_"]},"n":"EXISTS-POS"},{"n":"EXISTS-POS","s":{"r":"Mu","p":["int \\pos","*%_"]},"k":"m","m":1},{"n":"EXISTS-POS","s":{"p":["Int:D \\pos","*%_"],"r":"Mu"},"m":1,"k":"m"},{"s":{"r":"Mu","p":["*%_"]},"n":"Uni","k":"m","m":0},{"m":0,"k":"m","n":"elems","s":{"p":["*%_"],"r":"Mu"}},{"n":"gist","s":{"r":"Mu","p":["*%_"]},"m":1,"k":"m"},{"s":{"p":["*%_"],"r":"Mu"},"n":"gist","k":"m","m":1},{"s":{"p":["*%_"],"r":"Mu"},"n":"gist","k":"m","m":1},{"n":"Bool","s":{"r":"Bool","p":["*%_"]},"k":"m","m":1},{"m":1,"k":"m","n":"Bool","s":{"p":["*%_"],"r":"Mu"}},{"m":1,"k":"m","s":{"p":["*%_"],"r":"Mu"},"n":"Bool"},{"k":"m","m":1,"n":"AT-POS","s":{"r":"Mu","p":["int \\pos","*%_"]}},{"m":1,"k":"m","n":"AT-POS","s":{"p":["Int:D \\pos","*%_"],"r":"Mu"}},{"k":"m","m":1,"n":"AT-POS","s":{"p":["Num:D \\pos","*%_"],"r":"Mu"}},{"k":"m","m":1,"n":"AT-POS","s":{"r":"Mu","p":["Any:D \\pos","*%_"]}},{"k":"m","m":1,"n":"AT-POS","s":{"r":"Mu","p":["int \\pos","*%_"]}},{"m":1,"k":"m","n":"AT-POS","s":{"r":"Mu","p":["Int:D \\pos","*%_"]}},{"s":{"p":["Num:D \\pos","*%_"],"r":"Mu"},"n":"AT-POS","m":1,"k":"m"},{"s":{"p":["Any:D \\pos","*%_"],"r":"Mu"},"n":"AT-POS","m":1,"k":"m"},{"m":1,"k":"m","s":{"r":"Mu","p":["Any:U \\pos","*%_"]},"n":"AT-POS"},{"m":1,"k":"m","s":{"r":"Mu","p":["\\one","\\two","*%_"]},"n":"AT-POS"},{"s":{"p":["\\one","\\two","\\three","*%_"],"r":"Mu"},"n":"AT-POS","k":"m","m":1},{"n":"AT-POS","s":{"p":["**@indices","*%_"],"r":"Mu"},"k":"m","m":1},{"n":"AT-POS","s":{"r":"Mu","p":["int \\pos","*%_"]},"m":1,"k":"m"},{"s":{"p":["Int:D \\pos","*%_"],"r":"Mu"},"n":"AT-POS","k":"m","m":1},{"m":0,"k":"s","s":{"p":["@auto","%init","*%_"],"r":"Mu"},"n":"BUILDALL"}],"k":"c","t":"NFKC","n":"NFKC"},{"k":"v","t":"Sub+{is-pure}+{Precedence}","n":"&infix:<~^>"},{"n":"infix:<~^>","s":{"r":"Mu","p":["$x = \"\""]},"m":1,"k":"s"},{"k":"s","m":1,"s":{"r":"Mu","p":["\\a","\\b"]},"n":"infix:<~^>"},{"s":{"p":["Blob:D \\a","Blob:D \\b"],"r":"Mu"},"n":"infix:<~^>","k":"s","m":1},{"k":"s","m":1,"n":"infix:<~^>","s":{"p":["Str:D \\a","Str:D \\b"],"r":"Str:D"}},{"m":1,"k":"s","s":{"p":["str $a","str $b"],"r":"str"},"n":"infix:<~^>"},{"k":"e","t":"FileChangeEvent","n":"FileChangeEvent"},{"n":"FileChangeEvent::FileRenamed","t":"FileChangeEvent","k":"e"},{"k":"e","n":"FileChangeEvent::FileChanged","t":"FileChangeEvent"},{"k":"v","n":"&unival","t":"Sub"},{"k":"s","m":1,"s":{"r":"Mu","p":["Str:D $str"]},"n":"unival"},{"k":"s","m":1,"s":{"r":"Mu","p":["Int:D $code"]},"n":"unival"},{"k":"v","n":"&infix:<^>","t":"Sub+{is-pure}+{Precedence}"},{"n":"infix:<^>","s":{"r":"Mu","p":["+\\values is raw"]},"k":"s","m":1},{"k":"v","t":"Sub+{is-pure}+{Precedence}","n":"&infix:<+>"},{"k":"s","m":1,"s":{"p":["$x = 0"],"r":"Mu"},"n":"infix:<+>"},{"s":{"p":["\\a","\\b"],"r":"Mu"},"n":"infix:<+>","m":1,"k":"s"},{"n":"infix:<+>","s":{"r":"Mu","p":["Real \\a","Real \\b"]},"k":"s","m":1},{"m":1,"k":"s","n":"infix:<+>","s":{"p":["Int:D \\a","Int:D \\b"],"r":"Int:D"}},{"n":"infix:<+>","s":{"p":["int $a","int $b"],"r":"int"},"m":1,"k":"s"},{"n":"infix:<+>","s":{"p":["Num:D \\a","Num:D \\b"],"r":"Mu"},"m":1,"k":"s"},{"k":"s","m":1,"s":{"p":["num $a","num $b"],"r":"num"},"n":"infix:<+>"},{"m":1,"k":"s","n":"infix:<+>","s":{"r":"Mu","p":["Range:D \\r","Real:D \\v"]}},{"s":{"p":["Real:D \\v","Range:D \\r"],"r":"Mu"},"n":"infix:<+>","m":1,"k":"s"},{"n":"infix:<+>","s":{"p":["Rational:D \\a","Rational:D \\b"],"r":"Mu"},"m":1,"k":"s"},{"s":{"r":"Mu","p":["Rational:D \\a","Int:D \\b"]},"n":"infix:<+>","m":1,"k":"s"},{"s":{"r":"Mu","p":["Int:D \\a","Rational:D \\b"]},"n":"infix:<+>","m":1,"k":"s"},{"n":"infix:<+>","s":{"r":"Complex:D","p":["Complex:D \\a","Complex:D \\b"]},"k":"s","m":1},{"n":"infix:<+>","s":{"p":["Complex:D \\a","Num(Real) \\b"],"r":"Complex:D"},"k":"s","m":1},{"k":"s","m":1,"s":{"r":"Complex:D","p":["Num(Real) \\a","Complex:D \\b"]},"n":"infix:<+>"},{"n":"infix:<+>","s":{"r":"Mu","p":["Instant:D $a","Instant:D $b"]},"k":"s","m":1},{"m":1,"k":"s","n":"infix:<+>","s":{"r":"Instant:D","p":["Instant:D $a","Real:D $b"]}},{"s":{"r":"Instant:D","p":["Real:D $a","Instant:D $b"]},"n":"infix:<+>","m":1,"k":"s"},{"m":1,"k":"s","s":{"r":"Instant:D","p":["Instant:D $a","Duration:D $b"]},"n":"infix:<+>"},{"n":"infix:<+>","s":{"p":["Duration:D $a","Instant:D $b"],"r":"Instant:D"},"k":"s","m":1},{"s":{"r":"Duration:D","p":["Duration:D $a","Real $b"]},"n":"infix:<+>","k":"s","m":1},{"k":"s","m":1,"n":"infix:<+>","s":{"r":"Duration:D","p":["Real $a","Duration:D $b"]}},{"s":{"r":"Duration:D","p":["Duration:D $a","Duration:D $b"]},"n":"infix:<+>","m":1,"k":"s"},{"k":"s","m":1,"n":"infix:<+>","s":{"p":["DateTime:D \\a","Duration:D \\b"],"r":"DateTime:D"}},{"k":"s","m":1,"s":{"r":"DateTime:D","p":["Duration:D \\a","DateTime:D \\b"]},"n":"infix:<+>"},{"n":"infix:<+>","s":{"r":"Date:D","p":["Date:D $d","Int:D $x"]},"k":"s","m":1},{"s":{"r":"Date:D","p":["Int:D $x","Date:D $d"]},"n":"infix:<+>","k":"s","m":1},{"t":"Sub","n":"&shift","k":"v"},{"m":1,"k":"s","s":{"r":"Mu","p":["@a"]},"n":"shift"},{"n":"&infix:<(^)>","t":"Sub+{is-pure}+{Precedence}","k":"v"},{"m":1,"k":"s","s":{"p":[],"r":"Mu"},"n":"infix:<(^)>"},{"m":1,"k":"s","n":"infix:<(^)>","s":{"r":"Mu","p":["QuantHash:D \\a"]}},{"s":{"r":"Mu","p":["\\a"]},"n":"infix:<(^)>","m":1,"k":"s"},{"n":"infix:<(^)>","s":{"r":"Mu","p":["Setty:D \\a","Setty:D \\b"]},"m":1,"k":"s"},{"s":{"r":"Mu","p":["Setty:D \\a","Mixy:D \\b"]},"n":"infix:<(^)>","m":1,"k":"s"},{"k":"s","m":1,"n":"infix:<(^)>","s":{"r":"Mu","p":["Setty:D \\a","Baggy:D \\b"]}},{"m":1,"k":"s","n":"infix:<(^)>","s":{"r":"Mu","p":["Mixy:D \\a","Mixy:D \\b"]}},{"m":1,"k":"s","n":"infix:<(^)>","s":{"p":["Mixy:D \\a","Baggy:D \\b"],"r":"Mu"}},{"k":"s","m":1,"s":{"p":["Mixy:D \\a","Setty:D \\b"],"r":"Mu"},"n":"infix:<(^)>"},{"s":{"r":"Mu","p":["Baggy:D \\a","Mixy:D \\b"]},"n":"infix:<(^)>","m":1,"k":"s"},{"m":1,"k":"s","s":{"r":"Mu","p":["Baggy:D \\a","Baggy:D \\b"]},"n":"infix:<(^)>"},{"k":"s","m":1,"n":"infix:<(^)>","s":{"p":["Baggy:D \\a","Setty:D \\b"],"r":"Mu"}},{"m":1,"k":"s","n":"infix:<(^)>","s":{"r":"Mu","p":["Map:D \\a","Map:D \\b"]}},{"k":"s","m":1,"n":"infix:<(^)>","s":{"r":"Mu","p":["Failure:D \\a","$"]}},{"n":"infix:<(^)>","s":{"r":"Mu","p":["$","Failure:D \\b"]},"k":"s","m":1},{"n":"infix:<(^)>","s":{"r":"Mu","p":["\\a","\\b"]},"m":1,"k":"s"},{"m":1,"k":"s","s":{"r":"Mu","p":["**@p"]},"n":"infix:<(^)>"},{"t":"Num","n":"e","k":"c","m":[{"n":"Capture","s":{"p":["*%_"],"r":"Mu"},"m":0,"k":"m"},{"s":{"r":"Mu","p":["*%_"]},"n":"Num","m":0,"k":"m"},{"s":{"r":"Mu","p":["*%_"]},"n":"Bridge","k":"m","m":0},{"k":"m","m":0,"s":{"p":["*%_"],"r":"Mu"},"n":"Range"},{"m":0,"k":"m","n":"Int","s":{"r":"Mu","p":["*%_"]}},{"s":{"p":["Real $epsilon = 1e-06",":$fat","*%_"],"r":"Mu"},"n":"Rat","m":0,"k":"m"},{"s":{"p":["Real $epsilon = 1e-06","*%_"],"r":"Mu"},"n":"FatRat","k":"m","m":0},{"m":0,"k":"m","s":{"r":"Mu","p":["*%_"]},"n":"succ"},{"k":"m","m":0,"s":{"p":["*%_"],"r":"Mu"},"n":"pred"},{"m":0,"k":"m","s":{"r":"Mu","p":["*%_"]},"n":"isNaN"},{"s":{"r":"Mu","p":["*%_"]},"n":"abs","m":0,"k":"m"},{"m":1,"k":"m","s":{"p":["*%_"],"r":"Mu"},"n":"log"},{"s":{"p":["Num \\base","*%_"],"r":"Mu"},"n":"log","k":"m","m":1},{"k":"m","m":1,"n":"log","s":{"p":["*%_"],"r":"Mu"}},{"n":"log","s":{"r":"Mu","p":["Real $base","*%_"]},"k":"m","m":1},{"n":"log","s":{"r":"Mu","p":["Cool $base","*%_"]},"k":"m","m":1},{"n":"log","s":{"p":["Numeric $base","*%_"],"r":"Mu"},"k":"m","m":1},{"n":"sqrt","s":{"p":["*%_"],"r":"Mu"},"k":"m","m":1},{"n":"rand","s":{"p":["*%_"],"r":"Mu"},"k":"m","m":0},{"m":0,"k":"m","n":"ceiling","s":{"p":["*%_"],"r":"Mu"}},{"k":"m","m":0,"n":"floor","s":{"r":"Mu","p":["*%_"]}},{"k":"m","m":1,"n":"sin","s":{"r":"Mu","p":["*%_"]}},{"n":"asin","s":{"p":["*%_"],"r":"Mu"},"k":"m","m":1},{"m":1,"k":"m","s":{"r":"Mu","p":["*%_"]},"n":"cos"},{"s":{"r":"Mu","p":["*%_"]},"n":"acos","k":"m","m":1},{"s":{"p":["*%_"],"r":"Mu"},"n":"tan","k":"m","m":1},{"n":"atan","s":{"r":"Mu","p":["*%_"]},"k":"m","m":1},{"s":{"p":["*%_"],"r":"Mu"},"n":"sec","k":"m","m":1},{"m":1,"k":"m","s":{"p":["*%_"],"r":"Mu"},"n":"asec"},{"n":"cosec","s":{"r":"Mu","p":["*%_"]},"m":0,"k":"m"},{"n":"acosec","s":{"r":"Mu","p":["*%_"]},"m":0,"k":"m"},{"k":"m","m":0,"n":"cotan","s":{"r":"Mu","p":["*%_"]}},{"k":"m","m":0,"s":{"r":"Mu","p":["*%_"]},"n":"acotan"},{"n":"sinh","s":{"p":["*%_"],"r":"Mu"},"k":"m","m":1},{"s":{"r":"Mu","p":["*%_"]},"n":"asinh","k":"m","m":1},{"k":"m","m":1,"n":"cosh","s":{"p":["*%_"],"r":"Mu"}},{"s":{"p":["*%_"],"r":"Mu"},"n":"acosh","m":1,"k":"m"},{"m":1,"k":"m","s":{"p":["*%_"],"r":"Mu"},"n":"tanh"},{"m":1,"k":"m","s":{"p":["*%_"],"r":"Mu"},"n":"atanh"},{"m":1,"k":"m","s":{"r":"Mu","p":["*%_"]},"n":"atanh"},{"k":"m","m":1,"n":"sech","s":{"p":["*%_"],"r":"Mu"}},{"m":1,"k":"m","s":{"p":["*%_"],"r":"Mu"},"n":"asech"},{"k":"m","m":1,"n":"cosech","s":{"r":"Mu","p":["*%_"]}},{"n":"acosech","s":{"p":["*%_"],"r":"Mu"},"k":"m","m":1},{"k":"m","m":1,"n":"cotanh","s":{"r":"Mu","p":["*%_"]}},{"s":{"r":"Mu","p":["*%_"]},"n":"acotanh","m":1,"k":"m"},{"k":"m","m":0,"s":{"r":"Bool:D","p":["*%_"]},"n":"is-prime"},{"k":"m","m":0,"s":{"r":"Mu","p":["*%_"]},"n":"narrow"},{"n":"sign","s":{"p":["*%_"],"r":"Mu"},"m":0,"k":"m"},{"m":0,"k":"m","s":{"r":"Mu","p":["*%_"]},"n":"conj"},{"s":{"r":"Mu","p":["Num:D $x = 1e0","*%_"]},"n":"atan2","k":"m","m":1},{"k":"m","m":1,"s":{"p":["Real $x = 1e0","*%_"],"r":"Mu"},"n":"atan2"},{"s":{"p":["Cool $x = 1e0","*%_"],"r":"Mu"},"n":"atan2","m":1,"k":"m"},{"k":"m","m":1,"n":"round","s":{"r":"Mu","p":["*%_"]}},{"m":1,"k":"m","n":"round","s":{"p":["$scale","*%_"],"r":"Mu"}},{"k":"m","m":0,"s":{"r":"Mu","p":["Real $angle","*%_"]},"n":"unpolar"},{"s":{"r":"Mu","p":["*%_"]},"n":"cis","k":"m","m":0},{"s":{"p":["*%_"],"r":"Mu"},"n":"Complex","m":0,"k":"m"},{"s":{"r":"Mu","p":["*%_"]},"n":"exp","m":1,"k":"m"},{"s":{"r":"Mu","p":["*%_"]},"n":"exp","k":"m","m":1},{"m":1,"k":"m","n":"exp","s":{"p":["$base","*%_"],"r":"Mu"}},{"k":"m","m":0,"n":"truncate","s":{"r":"Mu","p":["*%_"]}},{"k":"m","m":0,"n":"polymod","s":{"p":["+@mods","*%_"],"r":"Mu"}},{"n":"base","s":{"r":"Mu","p":["Int:D $base","$digits? is copy","*%_"]},"k":"m","m":0},{"n":"log10","s":{"p":["*%_"],"r":"Mu"},"k":"m","m":0},{"s":{"p":["Cool $n","*%_"],"r":"Mu"},"n":"roots","k":"m","m":0},{"n":"WHICH","s":{"p":["*%_"],"r":"ValueObjAt:D"},"k":"m","m":1},{"m":1,"k":"m","n":"WHICH","s":{"p":["*%_"],"r":"ObjAt:D"}},{"n":"WHICH","s":{"r":"ValueObjAt:D","p":["*%_"]},"m":1,"k":"m"},{"s":{"r":"Bool","p":["*%_"]},"n":"Bool","k":"m","m":1},{"n":"Bool","s":{"p":["*%_"],"r":"Mu"},"m":1,"k":"m"},{"n":"Bool","s":{"p":["*%_"],"r":"Mu"},"k":"m","m":1},{"k":"m","m":1,"s":{"r":"Mu","p":["*%_"]},"n":"Bool"},{"s":{"p":["*%attrinit"],"r":"Mu"},"n":"new","k":"m","m":1},{"s":{"r":"Mu","p":["$","*@","*%_"]},"n":"new","k":"m","m":1},{"m":1,"k":"m","n":"new","s":{"r":"Mu","p":["*%_"]}},{"s":{"r":"Mu","p":["$n","*%_"]},"n":"new","m":1,"k":"m"},{"k":"m","m":1,"s":{"p":["*%_"],"r":"Mu"},"n":"perl"},{"s":{"p":["*%_"],"r":"Mu"},"n":"perl","m":1,"k":"m"},{"m":1,"k":"m","n":"perl","s":{"p":["*%_"],"r":"Mu"}},{"s":{"p":["*%_"],"r":"Mu"},"n":"Str","m":1,"k":"m"},{"m":1,"k":"m","s":{"p":["*%_"],"r":"Mu"},"n":"Str"},{"m":1,"k":"m","s":{"p":["*%_"],"r":"Mu"},"n":"Str"},{"k":"m","m":1,"n":"Str","s":{"r":"Mu","p":["*%_"]}},{"m":1,"k":"m","n":"Real","s":{"p":["*%_"],"r":"Mu"}},{"n":"Real","s":{"r":"Mu","p":["*%_"]},"m":1,"k":"m"},{"n":"Real","s":{"r":"Mu","p":["*%_"]},"m":1,"k":"m"},{"m":1,"k":"m","s":{"p":["*%_"],"r":"Mu"},"n":"Real"},{"s":{"p":["*%_"],"r":"Mu"},"n":"Numeric","m":1,"k":"m"},{"s":{"p":["*%_"],"r":"Mu"},"n":"Numeric","k":"m","m":1},{"k":"m","m":1,"n":"Numeric","s":{"p":["*%_"],"r":"Mu"}},{"k":"m","m":1,"n":"ACCEPTS","s":{"p":["\\topic","*%_"],"r":"Mu"}},{"k":"m","m":1,"s":{"r":"Mu","p":["Mu:U \\topic","*%_"]},"n":"ACCEPTS"},{"s":{"r":"Mu","p":["Mu:D \\a","*%_"]},"n":"ACCEPTS","k":"m","m":1},{"s":{"r":"Bool","p":["Mu:U $","*%_"]},"n":"ACCEPTS","k":"m","m":1},{"n":"ACCEPTS","s":{"p":["\\topic","*%_"],"r":"Bool:D"},"m":1,"k":"m"},{"n":"ACCEPTS","s":{"p":["Any:D \\a","*%_"],"r":"Mu"},"m":1,"k":"m"},{"n":"gist","s":{"r":"Mu","p":["*%_"]},"m":1,"k":"m"},{"k":"m","m":1,"s":{"p":["*%_"],"r":"Mu"},"n":"gist"},{"n":"gist","s":{"r":"Mu","p":["*%_"]},"k":"m","m":1},{"s":{"p":["*%_"],"r":"Mu"},"n":"DUMP","k":"m","m":1},{"k":"m","m":1,"n":"DUMP","s":{"p":[":$indent-step = 4",":%ctx","*%_"],"r":"Mu"}},{"s":{"p":["*%_"],"r":"Mu"},"n":"DUMP","m":1,"k":"m"},{"s":{"r":"Mu","p":["@auto","%init","*%_"]},"n":"BUILDALL","m":0,"k":"s"}],"b":"C"},{"t":"QuantHash","n":"QuantHash","d":"TITLE\nrole QuantHash\n\nSUBTITLE\nObject hashes with limitation on type of value\n\n    role QuantHash does Associative { }\n\nThe QuantHash role provides the basic functionality shared by the Setty,\nBaggy and Mixy roles. These provide object hashes of which the values are\nlimited in some way.\n\nQuantHashes are what set operators use internally.\n\n","b":"C","k":"ro","m":[{"n":"keyof","s":{"r":"Mu","p":["*%_"]},"m":0,"k":"m"},{"n":"SET-SELF","s":{"p":["\\elems","*%_"],"r":"Mu"},"k":"m","m":0},{"k":"m","m":0,"s":{"p":["*%_"],"r":"Int:D"},"n":"Int"},{"n":"Num","s":{"r":"Num:D","p":["*%_"]},"m":0,"k":"m"},{"n":"Numeric","s":{"p":["*%_"],"r":"Numeric:D"},"m":0,"k":"m"},{"n":"Real","s":{"r":"Real:D","p":["*%_"]},"m":0,"k":"m"},{"k":"m","m":0,"n":"Capture","s":{"r":"Mu","p":["*%_"]}},{"m":0,"k":"m","n":"fmt","s":{"p":["Cool $format = \"\\%s\\t\\%s\"","$sep = \"\\n\"","*%_"],"r":"Mu"}},{"m":0,"k":"m","s":{"p":["*%_"],"r":"Mu"},"n":"hash"},{"m":0,"k":"m","s":{"r":"Mu","p":["*%_"]},"n":"Hash"}]},{"t":"REPL","n":"REPL","k":"c","m":[{"n":"new","s":{"r":"Mu","p":["Mu \\compiler","Mu \\adverbs","*%_"]},"m":0,"k":"m"},{"m":0,"k":"m","s":{"r":"Nil","p":["Mu \\compiler","$multi-line-enabled","*%_"]},"n":"init"},{"n":"teardown","s":{"p":["*%_"],"r":"Mu"},"k":"m","m":0},{"s":{"p":["$code","\\exception","*%adverbs"],"r":"Mu"},"n":"repl-eval","m":0,"k":"m"},{"s":{"r":"Mu","p":["*%_"]},"n":"interactive_prompt","k":"m","m":0},{"n":"repl-loop","s":{"p":["*%adverbs"],"r":"Mu"},"k":"m","m":0},{"m":0,"k":"m","n":"ctxsave","s":{"r":"Nil","p":["*%_"]}},{"s":{"r":"Bool:D","p":["Mu $value","*%_"]},"n":"input-incomplete","m":0,"k":"m"},{"m":0,"k":"m","n":"input-toplevel-control","s":{"p":["Mu $value","*%_"],"r":"Bool:D"}},{"s":{"p":["Mu $value","*%_"],"r":"Nil"},"n":"repl-print","k":"m","m":0},{"n":"history-file","s":{"p":["*%_"],"r":"Str:D"},"k":"m","m":0},{"n":"update-completions","s":{"r":"Nil","p":["*%_"]},"m":0,"k":"m"},{"k":"m","m":0,"n":"extract-last-word","s":{"r":"Mu","p":["Str $line","*%_"]}},{"m":0,"k":"m","n":"completions-for-line","s":{"r":"Mu","p":["Str $line","int $cursor-index","*%_"]}},{"k":"m","m":0,"s":{"p":["*%_"],"r":"Mu"},"n":"compiler"},{"s":{"p":["@auto","%init","*%_"],"r":"Mu"},"n":"BUILDALL","k":"s","m":0}],"a":[{"k":"v","n":"$.compiler","t":"Mu"},{"n":"$!multi-line-enabled","t":"Bool","k":"v"},{"k":"v","n":"$!history-file","t":"IO::Path"},{"k":"v","t":"Mu","n":"$!save_ctx"},{"k":"v","t":"Mu","n":"$!need-more-input"},{"k":"v","t":"Mu","n":"$!control-not-allowed"},{"k":"v","n":"@!completions","t":"Positional"}],"b":"A"},{"t":"int16","n":"int16","k":"n"},{"t":"Sub+{Precedence}","n":"&infix:<&&>","k":"v"},{"k":"s","m":1,"n":"infix:<&&>","s":{"p":["Mu $x = Bool::True"],"r":"Mu"}},{"m":1,"k":"s","s":{"p":["Mu \\a","&b"],"r":"Mu"},"n":"infix:<&&>"},{"k":"s","m":1,"s":{"r":"Mu","p":["Mu \\a","Mu \\b"]},"n":"infix:<&&>"},{"k":"e","t":"Signal","n":"SIGTSTP"},{"t":"Sub","n":"&tclc","k":"v"},{"m":1,"k":"s","s":{"r":"Mu","p":["Cool $s"]},"n":"tclc"},{"k":"n","t":"int64","n":"int64"},{"d":"TITLE\nrole Mixy\n\nSUBTITLE\nCollection of distinct objects with Real weights\n\n    role Mixy does Baggy { }\n\nA role for collections of weighted values. See Mix and MixHash. Mixy\nobjects differ from Baggy objects in that the weights of Mixy are Reals\nrather than Ints.\n\n","m":[{"k":"m","m":0,"n":"of","s":{"r":"Mu","p":["*%_"]}},{"n":"new-from-pairs","s":{"r":"Mixy:D","p":["*@pairs","*%_"]},"k":"m","m":0}],"k":"ro","b":"C","t":"Mixy","n":"Mixy"},{"k":"v","t":"Sub+{is-pure}","n":"&infix:«>»"},{"n":"infix:«>»","s":{"r":"Mu","p":["$?"]},"m":1,"k":"s"},{"n":"infix:«>»","s":{"p":["\\a","\\b"],"r":"Mu"},"m":1,"k":"s"},{"k":"s","m":1,"s":{"r":"Mu","p":["Real \\a","Real \\b"]},"n":"infix:«>»"},{"m":1,"k":"s","n":"infix:«>»","s":{"r":"Bool:D","p":["Int:D \\a","Int:D \\b"]}},{"k":"s","m":1,"n":"infix:«>»","s":{"r":"Bool:D","p":["int $a","int $b"]}},{"m":1,"k":"s","n":"infix:«>»","s":{"r":"Bool:D","p":["Num:D \\a","Num:D \\b"]}},{"k":"s","m":1,"s":{"p":["num $a","num $b"],"r":"Bool:D"},"n":"infix:«>»"},{"n":"infix:«>»","s":{"p":["Rational:D \\a","Rational:D \\b"],"r":"Bool:D"},"k":"s","m":1},{"n":"infix:«>»","s":{"p":["Rational:D \\a","Int:D \\b"],"r":"Bool:D"},"k":"s","m":1},{"m":1,"k":"s","n":"infix:«>»","s":{"p":["Int:D \\a","Rational:D \\b"],"r":"Bool:D"}},{"k":"s","m":1,"s":{"p":["Instant:D $a","Instant:D $b"],"r":"Bool:D"},"n":"infix:«>»"},{"s":{"p":["DateTime:D \\a","DateTime:D \\b"],"r":"Bool:D"},"n":"infix:«>»","k":"s","m":1},{"n":"infix:«>»","s":{"r":"Bool:D","p":["Date:D $a","Date:D $b"]},"k":"s","m":1},{"s":{"r":"Mu","p":["Version:D \\a","Version:D \\b"]},"n":"infix:«>»","m":1,"k":"s"},{"d":"TITLE\nclass Supply\n\nSUBTITLE\nAsynchronous data stream with multiple subscribers\n\n    class Supply {}\n\nA supply is a thread-safe, asynchronous data stream like a Channel, but it\ncan have multiple subscribers (taps) that all get the same values flowing\nthrough the supply.\n\nIt is a thread-safe implementation of the Observer Pattern, and central to\nsupporting reactive programming in Raku.\n\nThere are two types of Supplies: live and on demand. When tapping into a\nlive supply, the tap will only see values that are flowing through the\nsupply after the tap has been created. Such supplies are normally infinite\nin nature, such as mouse movements. Closing such a tap does not stop mouse\nevents from occurring, it just means that the values will go by unseen. All\ntappers see the same flow of values.\n\nA tap on an on demand supply will initiate the production of values, and\ntapping the supply again may result in a new set of values. For example,\nSupply.interval produces a fresh timer with the appropriate interval each\ntime it is tapped. If the tap is closed, the timer simply stops emitting\nvalues to that tap.\n\nA live Supply is obtained from the Supplier factory method Supply. New\nvalues are emitted by calling emit on the Supplier object.\n\n    my $supplier = Supplier.new;\n    my $supply = $supplier.Supply;\n    $supply.tap(-> $v { say \"$v\" });\n    $supplier.emit(42); # Will cause the tap to output \"42\"\n\nThe live method returns True on live supplies. Factory methods such as\ninterval, from-list will return on demand supplies.\n\nA live Supply that keeps values until tapped the first time can be created\nwith Supplier::Preserving.\n\nFurther examples can be found in the concurrency page.\n\n","k":"c","m":[{"s":{"p":["*%_"],"r":"Mu"},"n":"new","m":1,"k":"m"},{"n":"new","s":{"p":["Tappable $tappable","*%_"],"r":"Mu"},"m":1,"k":"m"},{"n":"BUILD","s":{"p":["Tappable :tappable($!tappable)!","*%_"],"r":"Nil"},"k":"s","m":0},{"s":{"r":"Mu","p":["*%_"]},"n":"Capture","k":"m","m":0},{"n":"live","s":{"r":"Mu","p":["*%_"]},"m":0,"k":"m"},{"m":0,"k":"m","s":{"p":["*%_"],"r":"Mu"},"n":"serial"},{"n":"Tappable","s":{"p":["*%_"],"r":"Tappable"},"m":0,"k":"m"},{"m":0,"k":"m","s":{"p":["&emit = { ... }",":&done = { ... }",":&quit = { ... }",":&tap = { ... }","*%_"],"r":"Mu"},"n":"tap"},{"k":"m","m":0,"s":{"p":["&actor","*%others"],"r":"Mu"},"n":"act"},{"k":"m","m":0,"n":"on-demand","s":{"r":"Mu","p":["&producer",":&closing",":$scheduler = CurrentThreadScheduler","*%_"]}},{"s":{"r":"Mu","p":["+@values",":$scheduler = CurrentThreadScheduler","*%_"]},"n":"from-list","k":"m","m":0},{"k":"m","m":0,"n":"interval","s":{"p":["$interval","$delay = 0",":$scheduler = { ... }","*%_"],"r":"Mu"}},{"m":0,"k":"m","s":{"r":"Mu","p":["*%_"]},"n":"serialize"},{"n":"sanitize","s":{"p":["*%_"],"r":"Mu"},"k":"m","m":0},{"s":{"r":"Mu","p":["&on-close","*%_"]},"n":"on-close","k":"m","m":0},{"n":"map","s":{"r":"Mu","p":["&mapper","*%_"]},"m":0,"k":"m"},{"n":"grep","s":{"p":["Mu $test","*%_"],"r":"Mu"},"k":"m","m":0},{"s":{"p":["Scheduler $scheduler","*%_"],"r":"Mu"},"n":"schedule-on","k":"m","m":0},{"k":"m","m":0,"s":{"r":"Mu","p":["&startee","*%_"]},"n":"start"},{"k":"m","m":0,"n":"stable","s":{"r":"Mu","p":["$time",":$scheduler = { ... }","*%_"]}},{"m":0,"k":"m","n":"delayed","s":{"p":["$time",":$scheduler = { ... }","*%_"],"r":"Mu"}},{"m":0,"k":"m","s":{"r":"Mu","p":["&side-effect","*%_"]},"n":"do"},{"m":0,"k":"m","n":"flat","s":{"p":["*%_"],"r":"Mu"}},{"s":{"p":["*@s","*%_"],"r":"Mu"},"n":"merge","k":"m","m":0},{"m":0,"k":"m","s":{"r":"Mu","p":["&with","*%_"]},"n":"reduce"},{"k":"m","m":0,"s":{"r":"Mu","p":["&with","*%_"]},"n":"produce"},{"n":"migrate","s":{"r":"Mu","p":["*%_"]},"m":0,"k":"m"},{"n":"classify","s":{"p":["&mapper","*%_"],"r":"Mu"},"m":1,"k":"m"},{"m":1,"k":"m","n":"classify","s":{"p":["%mapper","*%_"],"r":"Mu"}},{"n":"classify","s":{"p":["@mapper","*%_"],"r":"Mu"},"k":"m","m":1},{"m":1,"k":"m","n":"categorize","s":{"r":"Mu","p":["&mapper","*%_"]}},{"n":"categorize","s":{"p":["%mapper","*%_"],"r":"Mu"},"m":1,"k":"m"},{"k":"m","m":1,"s":{"p":["@mapper","*%_"],"r":"Mu"},"n":"categorize"},{"k":"m","m":0,"s":{"r":"Mu","p":["*%_"]},"n":"Channel"},{"m":0,"k":"m","n":"Seq","s":{"p":["*%_"],"r":"Mu"}},{"k":"m","m":0,"n":"Promise","s":{"p":["*%_"],"r":"Mu"}},{"k":"m","m":0,"n":"wait","s":{"r":"Mu","p":["*%_"]}},{"k":"m","m":0,"s":{"p":["*%_"],"r":"Awaitable::Handle"},"n":"get-await-handle"},{"n":"unique","s":{"r":"Mu","p":[":&as",":&with",":$expires","*%_"]},"k":"m","m":0},{"n":"squish","s":{"p":[":&as",":&with is copy","*%_"],"r":"Mu"},"m":0,"k":"m"},{"s":{"p":["Int(Cool) :$elems = 0",":$seconds","*%_"],"r":"Mu"},"n":"batch","k":"m","m":0},{"s":{"r":"Mu","p":[":$chomp = Bool::True","*%_"]},"n":"lines","k":"m","m":0},{"k":"m","m":0,"s":{"p":["*%_"],"r":"Mu"},"n":"words"},{"k":"m","m":0,"s":{"p":["$seconds?","*%_"],"r":"Mu"},"n":"elems"},{"k":"m","m":0,"s":{"p":["Int(Cool) $number = 1","*%_"],"r":"Mu"},"n":"head"},{"m":0,"k":"m","n":"tail","s":{"r":"Mu","p":["Int(Cool) $number = 1","*%_"]}},{"n":"skip","s":{"p":["Int(Cool) $number = 1","*%_"],"r":"Mu"},"k":"m","m":0},{"n":"min","s":{"p":["&by = { ... }","*%_"],"r":"Mu"},"m":0,"k":"m"},{"s":{"p":["&by = { ... }","*%_"],"r":"Mu"},"n":"max","k":"m","m":0},{"n":"minmax","s":{"p":["&by = { ... }","*%_"],"r":"Mu"},"m":0,"k":"m"},{"m":0,"k":"m","n":"grab","s":{"p":["&when_done","*%_"],"r":"Mu"}},{"k":"m","m":0,"s":{"p":["*%_"],"r":"Mu"},"n":"reverse"},{"k":"m","m":0,"s":{"r":"Mu","p":["**@s",":&with","*%_"]},"n":"zip"},{"m":0,"k":"m","s":{"p":["**@s",":&with",":$initial","*%_"],"r":"Mu"},"n":"zip-latest"},{"s":{"p":["$elems","$seconds","$delay = 0",":$scheduler = { ... }",":$control",":$status",":$bleed",":$vent-at","*%_"],"r":"Mu"},"n":"throttle","m":1,"k":"m"},{"s":{"r":"Mu","p":["$elems","Callable:D $process","$delay = 0",":$scheduler = { ... }",":$control",":$status",":$bleed",":$vent-at","*%_"]},"n":"throttle","k":"m","m":1},{"n":"share","s":{"r":"Mu","p":["*%_"]},"k":"m","m":0},{"k":"m","m":1,"n":"Supply","s":{"r":"Mu","p":["*%_"]}},{"m":1,"k":"m","n":"Supply","s":{"r":"Mu","p":["*%_"]}},{"n":"list","s":{"r":"Mu","p":["*%_"]},"m":1,"k":"m"},{"s":{"p":["*%_"],"r":"Mu"},"n":"list","k":"m","m":1},{"s":{"r":"Mu","p":["*%_"]},"n":"list","k":"m","m":1},{"m":1,"k":"m","s":{"p":["Int:D $batch",":$partial","*%_"],"r":"Mu"},"n":"rotor"},{"k":"m","m":1,"n":"rotor","s":{"r":"Mu","p":["*@cycle",":$partial","*%_"]}},{"s":{"r":"Mu","p":["Int:D $batch",":$partial","*%_"]},"n":"rotor","m":1,"k":"m"},{"m":1,"k":"m","s":{"r":"Mu","p":["*@cycle",":$partial","*%_"]},"n":"rotor"},{"s":{"r":"Mu","p":["*%_"]},"n":"sort","m":1,"k":"m"},{"k":"m","m":1,"n":"sort","s":{"r":"Mu","p":["&by","*%_"]}},{"k":"m","m":1,"n":"sort","s":{"r":"Mu","p":["*%_"]}},{"s":{"r":"Mu","p":["&by","*%_"]},"n":"sort","k":"m","m":1},{"s":{"p":["@auto","%init","*%_"],"r":"Mu"},"n":"BUILDALL","k":"s","m":0},{"s":{"p":["&mapper",":$multi","*%_"],"r":"Mu"},"n":"!classify","m":0,"k":"m"}],"b":"A","a":[{"n":"$!tappable","t":"Tappable","k":"v"}],"t":"Supply","n":"Supply"},{"k":"e","t":"Signal","n":"SIGHUP"},{"d":"TITLE\nclass Promise\n\nSUBTITLE\nStatus/result of an asynchronous computation\n\n    my enum PromiseStatus (:Planned(0), :Kept(1), :Broken(2));\n    class Promise {}\n\nA Promise is used to handle the result of a computation that might not have\nfinished. It allows the user to execute code once the computation is done\n(with the then method), execution after a time delay (with in), combining\npromises, and waiting for results.\n\n    my $p = Promise.start({ sleep 2; 42});\n    $p.then({ say .result });   # will print 42 once the block finished\n    say $p.status;              # OUTPUT: «Planned␤»\n    $p.result;                  # waits for the computation to finish\n    say $p.status;              # OUTPUT: «Kept␤»\n\nThere are two typical scenarios for using promises. The first is to use a\nfactory method (start, in, at, anyof, allof, kept, broken) on the type\nobject; those will make sure that the promise is automatically kept or\nbroken for you, and you can't call break or keep on these promises\nyourself.\n\nThe second is to create your promises yourself with Promise.new. If you\nwant to ensure that only your code can keep or break the promise, you can\nuse the vow method to get a unique handle, and call keep or break on it:\n\n    sub async-get-with-promise($user-agent, $url) {\n        my $p = Promise.new;\n        my $v = $p.vow;\n\n        # do an asynchronous call on a fictive user agent,\n        # and return the promise:\n        $user-agent.async-get($url,\n                on-error => -> $error {\n                    $v.break($error);\n                },\n                on-success => -> $response {\n                    $v.keep($response);\n                }\n        );\n        return $p;\n    }\n\n\nFurther examples can be found in the concurrency page.\n\n","b":"A","a":[{"k":"v","t":"Mu","n":"$.scheduler"},{"t":"Mu","n":"$.status","k":"v"},{"k":"v","n":"$!result","t":"Mu"},{"k":"v","n":"$!vow_taken","t":"int"},{"t":"Mu","n":"$!lock","k":"v"},{"n":"$!cond","t":"Mu","k":"v"},{"k":"v","t":"Mu","n":"$!thens"},{"n":"$!dynamic_context","t":"Mu","k":"v"},{"k":"v","n":"$!report-broken-if-sunk","t":"Bool"}],"m":[{"k":"s","m":0,"s":{"r":"Mu","p":[":$scheduler = { ... }",":$report-broken-if-sunk","*%_"]},"n":"new"},{"m":0,"k":"s","s":{"p":[":scheduler($!scheduler) = { ... }",":$report-broken-if-sunk","*%_"],"r":"Nil"},"n":"BUILD"},{"n":"vow","s":{"p":["*%_"],"r":"Mu"},"k":"m","m":0},{"m":1,"k":"m","n":"kept","s":{"r":"Mu","p":["*%_"]}},{"s":{"r":"Mu","p":["Mu \\result","*%_"]},"n":"kept","m":1,"k":"m"},{"k":"m","m":1,"s":{"r":"Mu","p":["*%_"]},"n":"keep"},{"n":"keep","s":{"p":["Mu \\result","*%_"],"r":"Mu"},"m":1,"k":"m"},{"n":"broken","s":{"p":["*%_"],"r":"Mu"},"m":1,"k":"m"},{"n":"broken","s":{"r":"Mu","p":["Mu \\exception","*%_"]},"k":"m","m":1},{"s":{"r":"Mu","p":["*%_"]},"n":"break","m":1,"k":"m"},{"s":{"r":"Mu","p":["\\result","*%_"]},"n":"break","m":1,"k":"m"},{"k":"m","m":0,"n":"result","s":{"p":["*%_"],"r":"Mu"}},{"n":"cause","s":{"r":"Mu","p":["*%_"]},"k":"m","m":0},{"m":0,"k":"m","s":{"p":["&code","*%_"],"r":"Mu"},"n":"then"},{"n":"get-await-handle","s":{"r":"Awaitable::Handle:D","p":["*%_"]},"k":"m","m":0},{"k":"m","m":0,"n":"sink","s":{"p":["*%_"],"r":"Nil"}},{"s":{"p":["&code",":&catch",":$scheduler = { ... }",":$report-broken-if-sunk","|c is raw"],"r":"Mu"},"n":"start","m":0,"k":"m"},{"m":0,"k":"m","s":{"r":"Mu","p":["$seconds",":$scheduler = { ... }","*%_"]},"n":"in"},{"s":{"r":"Mu","p":["$at",":$scheduler = { ... }","*%_"]},"n":"at","m":0,"k":"m"},{"k":"m","m":0,"n":"anyof","s":{"p":["*@p","*%_"],"r":"Mu"}},{"m":0,"k":"m","n":"allof","s":{"r":"Mu","p":["*@p","*%_"]}},{"s":{"p":["*%_"],"r":"Bool"},"n":"Bool","m":1,"k":"m"},{"k":"m","m":1,"s":{"p":["*%_"],"r":"Mu"},"n":"Bool"},{"s":{"p":["*%_"],"r":"Mu"},"n":"Bool","m":1,"k":"m"},{"k":"m","m":1,"n":"Supply","s":{"r":"Mu","p":["*%_"]}},{"k":"m","m":1,"s":{"r":"Mu","p":["*%_"]},"n":"Supply"},{"m":0,"k":"m","n":"scheduler","s":{"p":["*%_"],"r":"Mu"}},{"k":"m","m":0,"s":{"p":["*%_"],"r":"Mu"},"n":"status"},{"s":{"r":"Mu","p":["@auto","%init","*%_"]},"n":"BUILDALL","m":0,"k":"s"},{"s":{"p":["Mu \\result","*%_"],"r":"Nil"},"n":"!keep","k":"m","m":0},{"s":{"r":"Nil","p":["*%_"]},"n":"!schedule_thens","k":"m","m":0},{"s":{"p":["@promises","Int:D $N","Str $combinator","*%_"],"r":"Mu"},"n":"!until_n_kept","m":0,"k":"m"},{"n":"!break","s":{"r":"Nil","p":["\\result","*%_"]},"k":"m","m":0}],"k":"c","t":"Promise","n":"Promise"},{"k":"v","n":"&asinh","t":"Sub+{is-pure}"},{"n":"asinh","s":{"p":["Numeric \\x"],"r":"Mu"},"k":"s","m":1},{"s":{"p":["Cool \\x"],"r":"Mu"},"n":"asinh","m":1,"k":"s"},{"n":"asinh","s":{"p":["num $x"],"r":"num"},"m":1,"k":"s"},{"k":"v","n":"&infix:<===>","t":"Sub+{is-pure}+{Precedence}"},{"k":"s","m":1,"s":{"r":"Bool","p":["$?"]},"n":"infix:<===>"},{"s":{"p":["\\a","\\b"],"r":"Bool:D"},"n":"infix:<===>","m":1,"k":"s"},{"n":"infix:<===>","s":{"r":"Mu","p":["Enumeration:D \\a","Enumeration:D \\b"]},"m":1,"k":"s"},{"m":1,"k":"s","s":{"p":["Int:D $a","Int:D $b"],"r":"Bool:D"},"n":"infix:<===>"},{"k":"s","m":1,"n":"infix:<===>","s":{"p":["int $a","int $b"],"r":"Bool:D"}},{"k":"s","m":1,"s":{"r":"Mu","p":["Num:D \\a","Num:D \\b"]},"n":"infix:<===>"},{"k":"s","m":1,"n":"infix:<===>","s":{"r":"Bool:D","p":["num \\a","num \\b"]}},{"m":1,"k":"s","n":"infix:<===>","s":{"r":"Bool:D","p":["Str:D \\a","Str:D \\b"]}},{"n":"infix:<===>","s":{"p":["str $a","str $b"],"r":"Bool:D"},"m":1,"k":"s"},{"m":1,"k":"s","n":"infix:<===>","s":{"r":"Bool:D","p":["Rational:D \\a","Rational:D \\b"]}},{"n":"infix:<===>","s":{"r":"Bool:D","p":["Complex:D \\a","Complex:D \\b"]},"k":"s","m":1},{"k":"s","m":1,"s":{"r":"Mu","p":["IntStr:D $a","IntStr:D $b"]},"n":"infix:<===>"},{"n":"infix:<===>","s":{"p":["RatStr:D $a","RatStr:D $b"],"r":"Mu"},"m":1,"k":"s"},{"s":{"p":["NumStr:D $a","NumStr:D $b"],"r":"Mu"},"n":"infix:<===>","m":1,"k":"s"},{"s":{"p":["ComplexStr:D $a","ComplexStr:D $b"],"r":"Mu"},"n":"infix:<===>","m":1,"k":"s"},{"b":"C","k":"ro","n":"StringyEnumeration","t":"StringyEnumeration"},{"t":"Sub+{Precedence}","n":"&infix:<andthen>","k":"v"},{"k":"s","m":1,"n":"infix:<andthen>","s":{"r":"Mu","p":["+\\a is raw"]}},{"a":[{"k":"v","n":"$!vm_thread","t":"Mu"},{"k":"v","n":"$.app_lifetime","t":"Bool"},{"t":"Str","n":"$.name","k":"v"}],"b":"A","k":"c","m":[{"m":0,"k":"s","s":{"p":[":&code!",":app_lifetime($!app_lifetime) = Bool::False",":name($!name) = \"<anon>\"","*%_"],"r":"Nil"},"n":"BUILD"},{"s":{"p":["&code","*%adverbs"],"r":"Mu"},"n":"start","m":0,"k":"m"},{"k":"m","m":0,"s":{"p":["*%_"],"r":"Mu"},"n":"run"},{"s":{"p":["*%_"],"r":"Mu"},"n":"id","k":"m","m":0},{"s":{"r":"Mu","p":["*%_"]},"n":"finish","m":0,"k":"m"},{"n":"join","s":{"p":["*%_"],"r":"Mu"},"k":"m","m":0},{"k":"m","m":0,"n":"yield","s":{"p":["*%_"],"r":"Nil"}},{"m":0,"k":"m","s":{"r":"Bool","p":["*%_"]},"n":"is-initial-thread"},{"m":0,"k":"m","n":"usage","s":{"p":["*%_"],"r":"Mu"}},{"n":"Numeric","s":{"p":["*%_"],"r":"Mu"},"m":1,"k":"m"},{"s":{"p":["*%_"],"r":"Mu"},"n":"Numeric","m":1,"k":"m"},{"s":{"p":["*%_"],"r":"Mu"},"n":"Str","m":1,"k":"m"},{"s":{"p":["*%_"],"r":"Mu"},"n":"Str","m":1,"k":"m"},{"n":"Str","s":{"r":"Mu","p":["*%_"]},"m":1,"k":"m"},{"k":"m","m":1,"n":"gist","s":{"p":["*%_"],"r":"Mu"}},{"n":"gist","s":{"r":"Mu","p":["*%_"]},"k":"m","m":1},{"n":"gist","s":{"r":"Mu","p":["*%_"]},"k":"m","m":1},{"m":0,"k":"m","n":"app_lifetime","s":{"p":["*%_"],"r":"Mu"}},{"m":0,"k":"m","s":{"p":["*%_"],"r":"Mu"},"n":"name"},{"k":"s","m":0,"n":"BUILDALL","s":{"r":"Mu","p":["@auto","%init","*%_"]}}],"d":"TITLE\nclass Thread\n\nSUBTITLE\nConcurrent execution of code (low-level)\n\n    class Thread {}\n\nA thread is a sequence of instructions that can (potentially) run in\nparallel to others. Class Thread provides a bit of abstraction over threads\nprovided by the underlying virtual machines (which in turn might or might\nnot be operating system threads).\n\nSince threads are fairly low-level, most applications should use other\nprimitives, like start, which also runs in parallel and returns a Promise.\n\n    my @threads = (^10).map: {\n        Thread.start(\n            name => \"Sleepsorter $_\",\n            sub {\n                my $rand = (^10).pick;\n                sleep $rand;\n                say $rand;\n            },\n        );\n    }\n\n    .finish for @threads;\n\n\nThe current thread is available in the dynamic variable $*THREAD.\n\n","n":"Thread","t":"Thread"},{"b":"C","m":[{"s":{"p":[":$value = \"\"","*%_"],"r":"Nil"},"n":"BUILD","m":0,"k":"s"},{"k":"m","m":0,"s":{"r":"Mu","p":["*%_"]},"n":"Capture"},{"m":0,"k":"m","s":{"r":"Int:D","p":["*%_"]},"n":"Int"},{"s":{"r":"Num:D","p":["*%_"]},"n":"Num","k":"m","m":0},{"m":0,"k":"m","n":"chomp","s":{"p":["*%_"],"r":"Str:D"}},{"s":{"p":["Cool:D $needle","*%_"],"r":"Bool:D"},"n":"starts-with","m":1,"k":"m"},{"k":"m","m":1,"s":{"p":["Str:D $needle","*%_"],"r":"Bool:D"},"n":"starts-with"},{"s":{"p":["Cool:D $suffix","*%_"],"r":"Bool:D"},"n":"ends-with","m":1,"k":"m"},{"k":"m","m":1,"n":"ends-with","s":{"p":["Str:D $suffix","*%_"],"r":"Bool:D"}},{"s":{"p":["Cool:D $needle","*%_"],"r":"Bool:D"},"n":"substr-eq","k":"m","m":1},{"n":"substr-eq","s":{"p":["Str:D $needle","*%_"],"r":"Bool:D"},"k":"m","m":1},{"n":"substr-eq","s":{"p":["Cool:D $needle","Int:D $pos","*%_"],"r":"Bool:D"},"k":"m","m":1},{"k":"m","m":1,"s":{"r":"Bool:D","p":["Str:D $needle","Int:D $pos","*%_"]},"n":"substr-eq"},{"m":1,"k":"m","s":{"p":["Cool:D $needle","*%_"],"r":"Bool:D"},"n":"contains"},{"k":"m","m":1,"n":"contains","s":{"r":"Bool:D","p":["Str:D $needle","*%_"]}},{"m":1,"k":"m","n":"contains","s":{"p":["Cool:D $needle","Int(Cool:D) $pos","*%_"],"r":"Bool:D"}},{"s":{"p":["Str:D $needle","Int:D $pos","*%_"],"r":"Bool:D"},"n":"contains","m":1,"k":"m"},{"m":1,"k":"m","n":"indices","s":{"p":["Cool:D $needle","*%pars"],"r":"Mu"}},{"k":"m","m":1,"n":"indices","s":{"p":["Str:D $needle",":$overlap","*%_"],"r":"Mu"}},{"m":1,"k":"m","n":"indices","s":{"p":["Cool:D $needle","Cool:D $start","*%pars"],"r":"Mu"}},{"m":1,"k":"m","n":"indices","s":{"p":["Str:D $needle","Int:D $start",":$overlap","*%_"],"r":"Mu"}},{"k":"m","m":1,"s":{"r":"Int:D","p":["Cool:D $needle","*%_"]},"n":"index"},{"k":"m","m":1,"s":{"p":["Str:D $needle","*%_"],"r":"Int:D"},"n":"index"},{"n":"index","s":{"p":["Cool:D $needle","Cool:D $pos","*%_"],"r":"Int:D"},"k":"m","m":1},{"k":"m","m":1,"s":{"r":"Int:D","p":["Str:D $needle","Int:D $pos","*%_"]},"n":"index"},{"m":1,"k":"m","s":{"r":"Int:D","p":["Cool:D $needle","*%_"]},"n":"rindex"},{"n":"rindex","s":{"r":"Int:D","p":["Str:D $needle","*%_"]},"k":"m","m":1},{"s":{"p":["Cool:D $needle","Cool:D $pos","*%_"],"r":"Int:D"},"n":"rindex","m":1,"k":"m"},{"k":"m","m":1,"s":{"r":"Int:D","p":["Str:D $needle","Int:D $pos","*%_"]},"n":"rindex"},{"m":0,"k":"m","s":{"r":"Str:D","p":["*%_"]},"n":"pred"},{"m":0,"k":"m","n":"succ","s":{"r":"Str:D","p":["*%_"]}},{"k":"m","m":1,"s":{"r":"Seq:D","p":["*%_"]},"n":"comb"},{"k":"m","m":1,"s":{"p":["Int:D $size is copy","$limit = *","*%_"],"r":"Seq:D"},"n":"comb"},{"k":"m","m":1,"s":{"r":"Seq:D","p":["Str $pat","*%_"]},"n":"comb"},{"m":1,"k":"m","s":{"r":"Seq:D","p":["Str $pat","$limit","*%_"]},"n":"comb"},{"k":"m","m":1,"s":{"p":["Regex:D $pattern",":$match","*%_"],"r":"Seq:D"},"n":"comb"},{"k":"m","m":1,"n":"comb","s":{"p":["Regex:D $pattern","$limit",":$match","*%_"],"r":"Seq:D"}},{"k":"m","m":1,"s":{"p":["Cool:D $pattern","|c is raw"],"r":"Mu"},"n":"match"},{"k":"m","m":1,"s":{"r":"Mu","p":["Regex:D $pattern",":continue(:$c)!","*%_"]},"n":"match"},{"m":1,"k":"m","n":"match","s":{"r":"Mu","p":["Regex:D $pattern",":pos(:$p)!","*%_"]}},{"s":{"r":"Mu","p":["Regex:D $pattern",":global(:$g)!","*%_"]},"n":"match","k":"m","m":1},{"m":1,"k":"m","n":"match","s":{"r":"Mu","p":["Regex:D $pattern",":overlap(:$ov)!","*%_"]}},{"n":"match","s":{"r":"Mu","p":["Regex:D $pattern",":exhaustive(:$ex)!","*%_"]},"k":"m","m":1},{"m":1,"k":"m","n":"match","s":{"r":"Mu","p":["Regex:D $pattern",":$x!","*%_"]}},{"n":"match","s":{"r":"Mu","p":["Regex:D $pattern",":$st!","*%_"]},"k":"m","m":1},{"s":{"p":["Regex:D $pattern",":$nd!","*%_"],"r":"Mu"},"n":"match","k":"m","m":1},{"s":{"p":["Regex:D $pattern",":$rd!","*%_"],"r":"Mu"},"n":"match","m":1,"k":"m"},{"m":1,"k":"m","s":{"p":["Regex:D $pattern",":$th!","*%_"],"r":"Mu"},"n":"match"},{"m":1,"k":"m","s":{"r":"Mu","p":["Regex:D $pattern",":$nth!","*%_"]},"n":"match"},{"s":{"r":"Mu","p":["Regex:D $pattern",":$as!","*%_"]},"n":"match","m":1,"k":"m"},{"n":"match","s":{"r":"Mu","p":["Regex:D $pattern","*%_"]},"k":"m","m":1},{"s":{"r":"Mu","p":["Any:D $matcher","$replacement",":ii(:$samecase)",":ss(:$samespace)",":mm(:$samemark)","*%options"]},"n":"subst-mutate","k":"m","m":1},{"m":1,"k":"m","n":"subst","s":{"p":["Str:D $original","Str:D $final","*%options"],"r":"Mu"}},{"n":"subst","s":{"r":"Mu","p":["$matcher","$replacement","*%options"]},"m":1,"k":"m"},{"m":1,"k":"m","n":"lines","s":{"p":[":$count!","*%_"],"r":"Int:D"}},{"n":"lines","s":{"r":"Seq:D","p":["$limit","*%_"]},"m":1,"k":"m"},{"s":{"r":"Seq:D","p":["*%_"]},"n":"lines","k":"m","m":1},{"k":"m","m":0,"s":{"r":"Numeric:D","p":["Int:D $radix","*%_"]},"n":"parse-base"},{"n":"samecase","s":{"p":["Str:D $pattern","*%_"],"r":"Str:D"},"k":"m","m":0},{"m":0,"k":"m","n":"samemark","s":{"r":"Str:D","p":["Str:D $pattern","*%_"]}},{"m":0,"k":"m","n":"samespace","s":{"r":"Mu","p":["Str:D $pattern","*%_"]}},{"s":{"r":"Mu","p":["Str:D $pattern","&filter?","Bool :$samespace","*%_"]},"n":"word-by-word","k":"m","m":0},{"n":"trim-leading","s":{"r":"Str:D","p":["*%_"]},"m":0,"k":"m"},{"s":{"r":"Str:D","p":["*%_"]},"n":"trim-trailing","k":"m","m":0},{"n":"trim","s":{"r":"Str:D","p":["*%_"]},"m":0,"k":"m"},{"m":1,"k":"m","n":"words","s":{"r":"Seq:D","p":["$limit","*%_"]}},{"k":"m","m":1,"s":{"r":"Seq:D","p":["*%_"]},"n":"words"},{"s":{"p":["*%_"],"r":"Mu"},"n":"WORDS_AUTODEREF","m":0,"k":"m"},{"k":"m","m":1,"n":"encode","s":{"r":"Blob:D","p":["Str:D $encoding = \"utf8\"",":$replacement",":$translate-nl = Bool::False",":$strict","*%_"]}},{"m":0,"k":"m","s":{"p":["*%_"],"r":"NFC:D"},"n":"NFC"},{"s":{"p":["*%_"],"r":"NFD:D"},"n":"NFD","m":0,"k":"m"},{"k":"m","m":0,"s":{"r":"NFKC:D","p":["*%_"]},"n":"NFKC"},{"s":{"r":"NFKD:D","p":["*%_"]},"n":"NFKD","k":"m","m":0},{"k":"m","m":0,"s":{"r":"Mu","p":["*%_"]},"n":"unival"},{"k":"m","m":0,"n":"univals","s":{"p":["*%_"],"r":"Mu"}},{"s":{"p":[":&filter = { ... }","Mu :$where = Bool::True","*%_"],"r":"Str:D"},"n":"wordcase","k":"m","m":0},{"n":"trans","s":{"p":["Pair:D \\what","*%n"],"r":"Str:D"},"m":1,"k":"m"},{"s":{"r":"Str:D","p":["*@changes",":c(:$complement)",":s(:$squash)",":d(:$delete)","*%_"]},"n":"trans","k":"m","m":1},{"k":"m","m":0,"s":{"p":["*%_"],"r":"Str:D"},"n":"parse-names"},{"k":"m","m":0,"s":{"p":["*%_"],"r":"Str:D"},"n":"uniparse"},{"k":"m","m":1,"s":{"r":"Mu","p":["$steps where { ... }","*%_"]},"n":"indent"},{"m":1,"k":"m","n":"indent","s":{"p":["$steps where { ... }","*%_"],"r":"Mu"}},{"k":"m","m":1,"s":{"r":"Mu","p":["$steps where { ... }","*%_"]},"n":"indent"},{"m":1,"k":"m","n":"indent","s":{"r":"Mu","p":["Whatever $steps","*%_"]}},{"m":1,"k":"m","s":{"p":["*%_"],"r":"Int:D"},"n":"codes"},{"k":"m","m":1,"n":"codes","s":{"r":"Int:D","p":["*%_"]}},{"k":"m","m":1,"s":{"r":"Int:D","p":["*%_"]},"n":"chars"},{"n":"chars","s":{"r":"Int:D","p":["*%_"]},"m":1,"k":"m"},{"k":"m","m":1,"s":{"r":"Str:D","p":["*%_"]},"n":"uc"},{"m":1,"k":"m","n":"uc","s":{"r":"Str:D","p":["*%_"]}},{"n":"lc","s":{"r":"Str:D","p":["*%_"]},"m":1,"k":"m"},{"k":"m","m":1,"n":"lc","s":{"p":["*%_"],"r":"Str:D"}},{"m":1,"k":"m","s":{"p":["*%_"],"r":"Str:D"},"n":"tc"},{"m":1,"k":"m","n":"tc","s":{"r":"Str:D","p":["*%_"]}},{"k":"m","m":1,"s":{"r":"Str:D","p":["*%_"]},"n":"fc"},{"s":{"p":["*%_"],"r":"Str:D"},"n":"fc","k":"m","m":1},{"k":"m","m":1,"n":"tclc","s":{"p":["*%_"],"r":"Str:D"}},{"k":"m","m":1,"s":{"r":"Str:D","p":["*%_"]},"n":"tclc"},{"k":"m","m":1,"n":"flip","s":{"p":["*%_"],"r":"Str:D"}},{"m":1,"k":"m","s":{"r":"Str:D","p":["*%_"]},"n":"flip"},{"k":"m","m":1,"n":"ord","s":{"r":"Int:D","p":["*%_"]}},{"s":{"p":["*%_"],"r":"Nil"},"n":"ord","k":"m","m":1},{"n":"WHY","s":{"r":"Mu","p":["*%_"]},"k":"m","m":1},{"k":"m","m":1,"n":"WHY","s":{"r":"Int","p":["*%_"]}},{"k":"m","m":1,"n":"WHICH","s":{"p":["*%_"],"r":"ValueObjAt:D"}},{"s":{"r":"ObjAt:D","p":["*%_"]},"n":"WHICH","k":"m","m":1},{"m":1,"k":"m","n":"WHICH","s":{"r":"ValueObjAt:D","p":["*%_"]}},{"n":"Bool","s":{"p":["*%_"],"r":"Bool"},"m":1,"k":"m"},{"k":"m","m":1,"s":{"p":["*%_"],"r":"Mu"},"n":"Bool"},{"k":"m","m":1,"s":{"r":"Bool:D","p":["*%_"]},"n":"Bool"},{"k":"m","m":1,"n":"Str","s":{"r":"Mu","p":["*%_"]}},{"s":{"p":["*%_"],"r":"Mu"},"n":"Str","m":1,"k":"m"},{"n":"Str","s":{"p":["*%_"],"r":"Str:D"},"m":1,"k":"m"},{"s":{"p":["*%_"],"r":"Mu"},"n":"Stringy","k":"m","m":1},{"n":"Stringy","s":{"p":["*%_"],"r":"Mu"},"k":"m","m":1},{"n":"Stringy","s":{"r":"Str:D","p":["*%_"]},"m":1,"k":"m"},{"s":{"p":["*%_"],"r":"Mu"},"n":"DUMP","m":1,"k":"m"},{"k":"m","m":1,"s":{"r":"Mu","p":[":$indent-step = 4",":%ctx","*%_"]},"n":"DUMP"},{"n":"DUMP","s":{"r":"Str:D","p":["*%_"]},"k":"m","m":1},{"s":{"r":"Mu","p":["\\topic","*%_"]},"n":"ACCEPTS","m":1,"k":"m"},{"n":"ACCEPTS","s":{"p":["Mu:U \\topic","*%_"],"r":"Mu"},"k":"m","m":1},{"k":"m","m":1,"s":{"r":"Mu","p":["Mu:D \\a","*%_"]},"n":"ACCEPTS"},{"k":"m","m":1,"s":{"p":["Mu:U $","*%_"],"r":"Bool"},"n":"ACCEPTS"},{"k":"m","m":1,"n":"ACCEPTS","s":{"r":"Bool:D","p":["\\topic","*%_"]}},{"k":"m","m":1,"s":{"r":"Bool:D","p":["Str:D \\other","*%_"]},"n":"ACCEPTS"},{"s":{"r":"Bool:D","p":["Any:D \\other","*%_"]},"n":"ACCEPTS","m":1,"k":"m"},{"n":"chop","s":{"r":"Mu","p":["*%_"]},"k":"m","m":1},{"k":"m","m":1,"s":{"p":["$n","*%_"],"r":"Mu"},"n":"chop"},{"k":"m","m":1,"n":"chop","s":{"p":["*%_"],"r":"Str:D"}},{"n":"chop","s":{"p":["$chopping","*%_"],"r":"Str:D"},"m":1,"k":"m"},{"k":"m","m":1,"n":"Numeric","s":{"p":["*%_"],"r":"Mu"}},{"k":"m","m":1,"s":{"r":"Numeric:D","p":["*%_"]},"n":"Numeric"},{"s":{"p":["*%_"],"r":"Mu"},"n":"gist","k":"m","m":1},{"m":1,"k":"m","n":"gist","s":{"p":["*%_"],"r":"Mu"}},{"k":"m","m":1,"n":"gist","s":{"p":["*%_"],"r":"Str:D"}},{"s":{"p":["*%_"],"r":"Mu"},"n":"perl","m":1,"k":"m"},{"m":1,"k":"m","n":"perl","s":{"p":["*%_"],"r":"Mu"}},{"k":"m","m":1,"s":{"p":["*%_"],"r":"Str:D"},"n":"perl"},{"n":"ords","s":{"p":["*%_"],"r":"Mu"},"k":"m","m":1},{"n":"ords","s":{"p":["*%_"],"r":"Mu"},"k":"m","m":1},{"k":"m","m":1,"s":{"r":"Seq:D","p":["Regex:D $pat","$limit is copy = Inf",":$v is copy",":$k",":$kv",":$p",":$skip-empty","*%_"]},"n":"split"},{"n":"split","s":{"p":["Str(Cool) $match",":$v is copy",":$k",":$kv",":$p",":$skip-empty","*%_"],"r":"Seq:D"},"m":1,"k":"m"},{"n":"split","s":{"r":"Mu","p":["Str(Cool) $match","$limit is copy = Inf",":$v is copy",":$k",":$kv",":$p",":$skip-empty","*%_"]},"k":"m","m":1},{"m":1,"k":"m","s":{"p":["@needles","$parts is copy = Inf",":$v is copy",":$k",":$kv",":$p",":$skip-empty","*%_"],"r":"Seq:D"},"n":"split"},{"s":{"p":["\\from","*%_"],"r":"Mu"},"n":"substr","k":"m","m":1},{"n":"substr","s":{"p":["\\from","\\chars","*%_"],"r":"Mu"},"k":"m","m":1},{"k":"m","m":1,"s":{"p":["Int:D \\start","*%_"],"r":"Str:D"},"n":"substr"},{"m":1,"k":"m","n":"substr","s":{"p":["Int:D \\start","Int:D \\want","*%_"],"r":"Str:D"}},{"s":{"p":["Int:D \\start","Callable:D \\want","*%_"],"r":"Str:D"},"n":"substr","m":1,"k":"m"},{"s":{"p":["Callable:D \\start","*%_"],"r":"Str:D"},"n":"substr","m":1,"k":"m"},{"s":{"r":"Str:D","p":["Callable:D \\start","Int:D \\want","*%_"]},"n":"substr","m":1,"k":"m"},{"s":{"r":"Str:D","p":["Callable:D \\start","Callable:D \\want","*%_"]},"n":"substr","k":"m","m":1},{"s":{"r":"Str:D","p":["Range:D \\start","*%_"]},"n":"substr","m":1,"k":"m"},{"n":"substr","s":{"r":"Mu","p":["Regex:D $","$","*%_"]},"k":"m","m":1},{"k":"m","m":1,"n":"substr","s":{"r":"Str:D","p":["\\start","*%_"]}},{"m":1,"k":"m","s":{"p":["\\from","\\want","*%_"],"r":"Str:D"},"n":"substr"},{"s":{"r":"Mu","p":["*%_"]},"n":"substr-rw","k":"m","m":1},{"s":{"p":["\\from","*%_"],"r":"Mu"},"n":"substr-rw","k":"m","m":1},{"k":"m","m":1,"n":"substr-rw","s":{"r":"Mu","p":["\\from","\\chars","*%_"]}},{"m":1,"k":"m","s":{"p":["\\start","$want = Inf","*%_"],"r":"Mu"},"n":"substr-rw"},{"n":"BUILDALL","s":{"p":["@auto","%init","*%_"],"r":"Mu"},"k":"s","m":0},{"n":"!match-x","s":{"r":"Mu","p":["\\slash","\\iterator","$x","*%_"]},"m":0,"k":"m"},{"n":"!match-list","s":{"r":"Mu","p":["\\slash","\\cursor","\\move","\\post","*%_"]},"k":"m","m":0},{"m":0,"k":"m","s":{"r":"Mu","p":["\\slash","\\cursor","*%_"]},"n":"!match-one"},{"m":0,"k":"m","s":{"p":["\\slash","\\cursor","\\move","\\post","$nth","%opts","*%_"],"r":"Mu"},"n":"!match-nth"},{"m":0,"k":"m","s":{"r":"Mu","p":["\\matches","$replacement","\\cds","\\SDS","\\word_by_word","\\space","\\case","\\mark","*%_"]},"n":"!APPLY-MATCHES"},{"s":{"r":"Mu","p":["\\slash","\\source","\\indexes","*%_"]},"n":"!match-nth-iterator","k":"m","m":0},{"n":"!match-nth-tail","s":{"p":["\\slash","\\cursor","\\move","int $tail","*%_"],"r":"Mu"},"m":0,"k":"m"},{"n":"!match-x-range","s":{"p":["\\slash","\\iterator","$min","$max","*%_"],"r":"Mu"},"k":"m","m":0},{"k":"m","m":0,"s":{"p":["\\v","\\k","\\kv","\\p","*%_"],"r":"Mu"},"n":"!ensure-split-sanity"},{"n":"!match-nth-range","s":{"r":"Mu","p":["\\slash","\\iterator","$min","$max","*%_"]},"m":0,"k":"m"},{"n":"!match-last","s":{"r":"Mu","p":["\\slash","\\cursor","\\move","*%_"]},"k":"m","m":0},{"n":"!RINDEX-OOR","s":{"p":["$pos","*%_"],"r":"Mu"},"k":"m","m":0},{"m":0,"k":"m","s":{"p":["\\slash","$pattern","str $name","$value","\\opts","*%_"],"r":"Mu"},"n":"!match-pattern"},{"m":0,"k":"m","n":"!match-nth-int","s":{"r":"Mu","p":["\\slash","\\cursor","\\move","\\post","int $nth","*%_"]}},{"s":{"r":"Mu","p":["\\slash","\\cursor","str $name","$value","\\opts","*%_"]},"n":"!match-cursor","m":0,"k":"m"},{"n":"!INDEX-OOR","s":{"r":"Mu","p":["$pos","*%_"]},"k":"m","m":0},{"k":"m","m":0,"s":{"r":"Mu","p":["\\slash","\\cursor","\\as","*%_"]},"n":"!match-as-one"},{"m":0,"k":"m","n":"!SUBST","s":{"p":["\\caller_dollar_slash","$matcher","$replacement",":global(:$g)",":ii(:$samecase)",":ss(:$samespace)",":mm(:$samemark)","*%options"],"r":"Mu"}},{"s":{"r":"Nil","p":["\\limit","*%_"]},"n":"!ensure-limit-sanity","m":0,"k":"m"}],"k":"c","t":"Str","n":"Thread::THREAD_ERROR"},{"k":"c","m":[{"k":"m","m":0,"n":"new","s":{"p":["\\op",":$dwim-left",":$dwim-right","*%_"],"r":"Mu"}},{"s":{"r":"Mu","p":["*%_"]},"n":"name","k":"m","m":0},{"n":"infix","s":{"r":"Mu","p":["\\left","\\right","*%_"]},"k":"m","m":1},{"k":"m","m":1,"s":{"p":["Associative:D \\left","Associative:D \\right","*%_"],"r":"Associative:D"},"n":"infix"},{"m":1,"k":"m","s":{"r":"Mu","p":["Associative:D \\left","List:D \\right","*%_"]},"n":"infix"},{"n":"infix","s":{"r":"Associative:D","p":["Associative:D \\left","\\right","*%_"]},"k":"m","m":1},{"n":"infix","s":{"p":["List:D \\left","Associative:D \\right","*%_"],"r":"Mu"},"m":1,"k":"m"},{"s":{"r":"Associative:D","p":["\\left","Associative:D \\right","*%_"]},"n":"infix","m":1,"k":"m"},{"n":"infix","s":{"p":["Positional:D \\left","\\right","*%_"],"r":"Positional:D"},"k":"m","m":1},{"k":"m","m":1,"s":{"p":["\\left","Positional:D \\right","*%_"],"r":"Positional:D"},"n":"infix"},{"m":1,"k":"m","n":"infix","s":{"p":["Iterable:D \\left","Iterable:D \\right","*%_"],"r":"Iterable:D"}},{"n":"infix","s":{"r":"Mu","p":["\\object","*%_"]},"k":"m","m":1},{"n":"operator","s":{"r":"Mu","p":["*%_"]},"k":"m","m":0},{"n":"dwim-left","s":{"r":"Mu","p":["*%_"]},"k":"m","m":0},{"s":{"r":"Mu","p":["*%_"]},"n":"dwim-right","m":0,"k":"m"},{"n":"assigns","s":{"r":"Mu","p":["*%_"]},"k":"m","m":0},{"s":{"p":["@auto","%init","*%_"],"r":"Mu"},"n":"BUILDALL","m":0,"k":"s"},{"k":"m","m":0,"s":{"p":["\\left","\\right","*%_"],"r":"Mu"},"n":"!str-associatives"},{"m":0,"k":"m","s":{"r":"Mu","p":["Iterator:D \\left","Iterator:D \\right","*%_"]},"n":"!iterators-left"},{"n":"!right-exhausted","s":{"p":["Iterator:D \\iterator","int $right-elems","*%_"],"r":"Mu"},"k":"m","m":0},{"m":0,"k":"m","n":"!associatives","s":{"r":"Mu","p":["@keys","\\left","\\right","*%_"]}},{"s":{"p":["\\left","\\right","*%_"],"r":"Mu"},"n":"!pair-mu","m":0,"k":"m"},{"n":"!predictive-iterators","s":{"p":["PredictiveIterator:D \\left","PredictiveIterator:D \\right","*%_"],"r":"Mu"},"m":0,"k":"m"},{"n":"!iterators-left-right","s":{"p":["Iterator:D \\left","Iterator:D \\right","*%_"],"r":"Mu"},"m":0,"k":"m"},{"k":"m","m":0,"n":"!iterators","s":{"p":["Iterator:D \\left","Iterator:D \\right","*%_"],"r":"Mu"}},{"m":0,"k":"m","s":{"r":"Mu","p":["\\left","\\right","*%_"]},"n":"!pair-pair"},{"k":"m","m":0,"n":"!obj-associatives","s":{"r":"Mu","p":["\\left","\\right","*%_"]}},{"s":{"p":["Iterator:D \\left","Iterator:D \\right","*%_"],"r":"Mu"},"n":"!iterators-right","m":0,"k":"m"},{"n":"!left-exhausted","s":{"r":"Mu","p":["Iterator:D \\iterator","int $left-elems","*%_"]},"m":0,"k":"m"},{"n":"!mu-pair","s":{"p":["\\left","\\right","*%_"],"r":"Mu"},"m":0,"k":"m"}],"a":[{"t":"Mu","n":"$.operator","k":"v"},{"n":"$.dwim-left","t":"int8","k":"v"},{"t":"int8","n":"$.dwim-right","k":"v"},{"k":"v","n":"$.assigns","t":"int8"}],"b":"A","n":"Hyper","t":"Hyper"},{"n":"&infix:<∋>","t":"Sub+{is-pure}+{Precedence}","k":"v"},{"k":"s","m":1,"s":{"p":["\\a","\\b"],"r":"Bool:D"},"n":"infix:<∋>"},{"k":"v","t":"Sub+{is-pure}+{Precedence}","n":"&infix:</>"},{"n":"infix:</>","s":{"p":[],"r":"Mu"},"k":"s","m":1},{"s":{"r":"Mu","p":["$x"]},"n":"infix:</>","m":1,"k":"s"},{"s":{"r":"Mu","p":["\\a","\\b"]},"n":"infix:</>","m":1,"k":"s"},{"s":{"r":"Mu","p":["Real \\a","Real \\b"]},"n":"infix:</>","k":"s","m":1},{"s":{"r":"Mu","p":["Num:D \\a","Num:D \\b"]},"n":"infix:</>","k":"s","m":1},{"k":"s","m":1,"n":"infix:</>","s":{"r":"num","p":["num $a","num $b"]}},{"n":"infix:</>","s":{"p":["Range:D \\r","Real:D \\v"],"r":"Mu"},"m":1,"k":"s"},{"s":{"r":"Mu","p":["Rational:D \\a","Rational:D \\b"]},"n":"infix:</>","k":"s","m":1},{"k":"s","m":1,"s":{"r":"Mu","p":["Rational:D \\a","Int:D \\b"]},"n":"infix:</>"},{"m":1,"k":"s","n":"infix:</>","s":{"r":"Mu","p":["Int:D \\a","Rational:D \\b"]}},{"k":"s","m":1,"n":"infix:</>","s":{"p":["Int:D \\a","Int:D \\b"],"r":"Mu"}},{"m":1,"k":"s","n":"infix:</>","s":{"r":"Complex:D","p":["Complex:D \\a","Complex:D \\b"]}},{"s":{"r":"Complex:D","p":["Complex:D \\a","Real \\b"]},"n":"infix:</>","m":1,"k":"s"},{"n":"infix:</>","s":{"p":["Real \\a","Complex:D \\b"],"r":"Complex:D"},"m":1,"k":"s"},{"t":"Sub","n":"&grep","k":"v"},{"m":1,"k":"s","n":"grep","s":{"p":["Mu $test","+\\values is raw","*%a"],"r":"Mu"}},{"k":"s","m":1,"n":"grep","s":{"r":"Mu","p":["Bool:D $t","|"]}},{"k":"ro","m":[{"s":{"p":["*%_"],"r":"Mu"},"n":"slip-one","m":0,"k":"m"}],"a":[{"n":"$!slipping","t":"int","k":"v"},{"k":"v","n":"$!slip-iter","t":"Mu"}],"b":"C","t":"SlippyIterator","n":"SlippyIterator"},{"d":"TITLE\nclass Routine\n\nSUBTITLE\nCode object with its own lexical scope and return handling\n\n    class Routine is Block { }\n\nA Routine is a code object meant for larger unities of code than Block.\nRoutine is the common superclass for Sub (and therefore operators) and\nMethod, the two primary code objects for code reuse.\n\nRoutines serve as a scope limiter for return (i.e. a return returns from\nthe innermost outer Routine).\n\nThe routine level is also the one at which multiness (multi subs and multi\nmethods) are handled. Subroutines can also be declared anon. See the\ndocumentation on the anon declarator for more information.\n\n","a":[{"t":"List","n":"@!dispatchees","k":"v"},{"t":"Mu","n":"$!dispatcher_cache","k":"v"},{"k":"v","t":"Mu","n":"$!dispatcher"},{"t":"int","n":"$!rw","k":"v"},{"n":"$!inline_info","t":"Mu","k":"v"},{"k":"v","t":"int","n":"$!yada"},{"k":"v","n":"$!package","t":"Mu"},{"k":"v","t":"int","n":"$!onlystar"},{"t":"List","n":"@!dispatch_order","k":"v"},{"k":"v","n":"$!dispatch_cache","t":"Mu"},{"k":"v","t":"Mu","n":"$!why"},{"n":"$!do","t":"Code","k":"v"},{"n":"$!signature","t":"Signature","k":"v"},{"k":"v","n":"@!compstuff","t":"List"}],"b":"A","k":"c","m":[{"n":"onlystar","s":{"r":"Mu","p":["*%_"]},"m":0,"k":"m"},{"k":"m","m":0,"s":{"r":"Mu","p":["*%_"]},"n":"candidates"},{"n":"cando","s":{"r":"Mu","p":["Capture:D $c","*%_"]},"k":"m","m":0},{"k":"m","m":0,"s":{"p":["*%_"],"r":"Mu"},"n":"multi"},{"k":"m","m":0,"s":{"r":"Nil","p":["*%_"]},"n":"soft"},{"m":0,"k":"m","n":"wrap","s":{"r":"Mu","p":["&wrapper","*%_"]}},{"k":"m","m":0,"n":"unwrap","s":{"p":["$handle","*%_"],"r":"Mu"}},{"k":"m","m":0,"s":{"p":["*%_"],"r":"Mu"},"n":"yada"},{"k":"m","m":0,"s":{"p":["*%_"],"r":"Mu"},"n":"package"},{"k":"m","m":0,"n":"leave","s":{"r":"Mu","p":["*@","*%_"]}},{"s":{"p":["*%_"],"r":"Mu"},"n":"gist","m":1,"k":"m"},{"n":"gist","s":{"r":"Mu","p":["*%_"]},"k":"m","m":1},{"m":1,"k":"m","s":{"r":"Mu","p":["*%_"]},"n":"gist"},{"m":1,"k":"m","n":"perl","s":{"r":"Mu","p":["*%_"]}},{"m":1,"k":"m","n":"perl","s":{"r":"Mu","p":["*%_"]}},{"n":"perl","s":{"p":["*%_"],"r":"Mu"},"m":1,"k":"m"},{"m":1,"k":"m","n":"perl","s":{"r":"Mu","p":["*%_"]}},{"m":1,"k":"m","s":{"p":["*%_"],"r":"Mu"},"n":"perl"},{"m":0,"k":"s","s":{"r":"Mu","p":["@auto","%init","*%_"]},"n":"BUILDALL"},{"s":{"r":"Mu","p":["Failure:D \\failure","*%_"]},"n":"POSITIONS","k":"m","m":1},{"k":"m","m":1,"s":{"p":["Any:D \\list","*%_"],"r":"Mu"},"n":"POSITIONS"},{"n":"has-phaser","s":{"p":["Str:D \\name","*%_"],"r":"Mu"},"k":"m","m":0},{"s":{"r":"Mu","p":["Str:D $name","*%_"]},"n":"phasers","k":"m","m":0},{"s":{"p":["*%_"],"r":"Mu"},"n":"WHY","k":"m","m":0},{"k":"m","m":1,"n":"perl","s":{"r":"Mu","p":["*%_"]}},{"m":1,"k":"m","s":{"r":"Mu","p":["*%_"]},"n":"perl"},{"m":1,"k":"m","s":{"r":"Mu","p":["*%_"]},"n":"perl"},{"s":{"p":["*%_"],"r":"Mu"},"n":"perl","k":"m","m":1},{"s":{"r":"Mu","p":["*%_"]},"n":"of","m":0,"k":"m"},{"m":0,"k":"m","s":{"r":"Nil","p":["Str $name","*%_"]},"n":"fire_if_phasers"},{"m":0,"k":"m","n":"set_why","s":{"p":["$why","*%_"],"r":"Nil"}},{"n":"returns","s":{"p":["*%_"],"r":"Mu"},"m":0,"k":"m"},{"s":{"r":"Mu","p":["*%_"]},"n":"has-phasers","m":0,"k":"m"},{"m":0,"k":"m","s":{"r":"Nil","p":["Str:D \\name","&block","*%_"]},"n":"add_phaser"},{"k":"m","m":0,"s":{"p":["Str $name","*%_"],"r":"Nil"},"n":"fire_phasers"},{"s":{"r":"Mu","p":["@auto","%init","*%_"]},"n":"BUILDALL","m":0,"k":"s"},{"m":0,"k":"m","n":"static_id","s":{"r":"Mu","p":["*%_"]}},{"m":0,"k":"m","n":"returns","s":{"r":"Mu","p":["*%_"]}},{"k":"m","m":0,"n":"cando","s":{"p":["Capture:D $c","*%_"],"r":"Mu"}},{"s":{"p":["*%_"],"r":"Mu"},"n":"outer","m":0,"k":"m"},{"k":"m","m":1,"s":{"p":["*%attrinit"],"r":"Mu"},"n":"new"},{"m":1,"k":"m","n":"new","s":{"p":["$","*@","*%_"],"r":"Mu"}},{"s":{"r":"Mu","p":["*%_"]},"n":"new","k":"m","m":1},{"n":"count","s":{"p":["*%_"],"r":"Mu"},"k":"m","m":0},{"k":"m","m":1,"n":"ACCEPTS","s":{"p":["\\topic","*%_"],"r":"Mu"}},{"s":{"r":"Mu","p":["Mu:U \\topic","*%_"]},"n":"ACCEPTS","m":1,"k":"m"},{"m":1,"k":"m","n":"ACCEPTS","s":{"p":["Mu:D \\a","*%_"],"r":"Mu"}},{"n":"ACCEPTS","s":{"r":"Bool","p":["Mu:U $","*%_"]},"m":1,"k":"m"},{"s":{"r":"Bool:D","p":["\\topic","*%_"]},"n":"ACCEPTS","k":"m","m":1},{"k":"m","m":1,"n":"ACCEPTS","s":{"p":["Mu $topic is raw","*%_"],"r":"Mu"}},{"k":"m","m":1,"s":{"r":"Mu","p":["*%_"]},"n":"perl"},{"n":"perl","s":{"p":["*%_"],"r":"Mu"},"m":1,"k":"m"},{"s":{"r":"Mu","p":["*%_"]},"n":"perl","k":"m","m":1},{"m":0,"k":"m","s":{"r":"Mu","p":["*%_"]},"n":"of"},{"k":"m","m":0,"n":"file","s":{"r":"Mu","p":["*%_"]}},{"m":0,"k":"m","n":"signature","s":{"r":"Mu","p":["*%_"]}},{"m":0,"k":"m","n":"Capture","s":{"r":"Mu","p":["*%_"]}},{"k":"m","m":1,"n":"Str","s":{"r":"Mu","p":["*%_"]}},{"s":{"p":["*%_"],"r":"Mu"},"n":"Str","k":"m","m":1},{"k":"m","m":1,"n":"Str","s":{"p":["*%_"],"r":"Mu"}},{"m":0,"k":"m","s":{"p":["|primers is raw"],"r":"Mu"},"n":"assuming"},{"k":"m","m":1,"n":"prec","s":{"p":["*%_"],"r":"Mu"}},{"m":1,"k":"m","n":"prec","s":{"p":["Str:D $","*%_"],"r":"Mu"}},{"s":{"r":"Mu","p":["*%_"]},"n":"arity","k":"m","m":0},{"n":"line","s":{"p":["*%_"],"r":"Mu"},"k":"m","m":0},{"k":"s","m":0,"n":"BUILDALL","s":{"r":"Mu","p":["@auto","%init","*%_"]}}],"t":"Routine","n":"Routine"},{"k":"v","n":"&atan2","t":"Sub"},{"m":1,"k":"s","n":"atan2","s":{"r":"Mu","p":["Real \\a","Real \\b = 1e0"]}},{"m":1,"k":"s","n":"atan2","s":{"p":["\\a","\\b = 1e0"],"r":"Mu"}},{"s":{"p":["Num:D $a","Num:D $b = 1e0"],"r":"Mu"},"n":"atan2","m":1,"k":"s"},{"n":"&prefix:<->","t":"Sub+{is-pure}+{Precedence}","k":"v"},{"s":{"p":["\\a"],"r":"Mu"},"n":"prefix:<->","k":"s","m":1},{"s":{"r":"Mu","p":["Real:D \\a"]},"n":"prefix:<->","k":"s","m":1},{"s":{"p":["Int:D \\a"],"r":"Int:D"},"n":"prefix:<->","k":"s","m":1},{"s":{"r":"int","p":["int $a"]},"n":"prefix:<->","m":1,"k":"s"},{"m":1,"k":"s","s":{"r":"Mu","p":["Num:D \\a"]},"n":"prefix:<->"},{"s":{"r":"num","p":["num $a"]},"n":"prefix:<->","k":"s","m":1},{"m":1,"k":"s","s":{"p":["Rat:D \\a"],"r":"Rat:D"},"n":"prefix:<->"},{"s":{"p":["FatRat:D \\a"],"r":"FatRat:D"},"n":"prefix:<->","m":1,"k":"s"},{"m":1,"k":"s","n":"prefix:<->","s":{"r":"Complex:D","p":["Complex:D \\a"]}},{"n":"prefix:<->","s":{"r":"Duration:D","p":["Duration:D $a"]},"m":1,"k":"s"},{"d":"TITLE\nclass Bag\n\nSUBTITLE\nImmutable collection of distinct objects with integer weights\n\n    class Bag does Baggy { }\n\nA Bag is an immutable bag/multiset implementing Associative, meaning a\ncollection of distinct elements in no particular order that each have an\ninteger weight assigned to them signifying how many copies of that element\nare considered \"in the bag\". (For mutable bags, see BagHash instead.)\n\nBags are often used for performing weighted random selections - see .pick\nand .roll.\n\nObjects/values of any type are allowed as bag elements. Within a Bag, items\nthat would compare positively with the === operator are considered the same\nelement, with the number of how many there are as its weight. But of course\nyou can also easily get back the expanded list of items (without the\norder):\n\n    my $breakfast = bag <spam eggs spam spam bacon spam>;\n\n    say $breakfast.elems;      # OUTPUT: «3␤»\n    say $breakfast.keys.sort;  # OUTPUT: «bacon eggs spam␤»\n\n    say $breakfast.total;      # OUTPUT: «6␤»\n    say $breakfast.kxxv.sort;  # OUTPUT: «bacon eggs spam spam spam spam␤»\n\n\nBags can be treated as object hashes using the { } postcircumfix operator,\nor the < >  operator for literal string keys, which returns the\ncorresponding integer weight for keys that are elements of the bag, and 0\nfor keys that aren't:\n\n    my $breakfast = bag <spam eggs spam spam bacon spam>;\n    say $breakfast<bacon>;    # OUTPUT: «1␤»\n    say $breakfast<spam>;     # OUTPUT: «4␤»\n    say $breakfast<sausage>;  # OUTPUT: «0␤»\n\nCreating Bag objects\n\nBags can be composed using the bag subroutine (or Bag.new, for which it is\na shorthand). Any positional parameters, regardless of their type, become\nelements of the bag:\n\n    my $n = bag \"a\" => 0, \"b\" => 1, \"c\" => 2, \"c\" => 2;\n    say $n.keys.perl;        # OUTPUT: «(:c(2), :b(1), :a(0)).Seq␤»\n    say $n.keys.map(&WHAT);  # OUTPUT: «((Pair) (Pair) (Pair))␤»\n    say $n.values.perl;      # OUTPUT: «(2, 1, 1).Seq␤»\n\nAlternatively, the .Bag coercer (or its functional form, Bag()) can be\ncalled on an existing object to coerce it to a Bag. Its semantics depend on\nthe type and contents of the object. In general it evaluates the object in\nlist context and creates a bag with the resulting items as elements,\nalthough for Hash-like objects or Pair items, only the keys become elements\nof the bag, and the (cumulative) values become the associated integer\nweights:\n\n    my $n = (\"a\" => 0, \"b\" => 1, \"c\" => 2, \"c\" => 2).Bag;\n    say $n.keys.perl;        # OUTPUT: «(\"b\", \"c\").Seq␤»\n    say $n.keys.map(&WHAT);  # OUTPUT: «((Str) (Str))␤»\n    say $n.values.perl;      # OUTPUT: «(1, 4).Seq␤»\n\nFurthermore, you can get a Bag by using bag operators (see next section) on\nobjects of other types such as List, which will act like they internally\ncall .Bag on them before performing the operation. Be aware of the tight\nprecedence of those operators though, which may require you to use\nparentheses around arguments:\n\n    say (1..5) (+) 4;  # OUTPUT: «bag(1, 2, 3, 4(2), 5)␤»\n\nOf course, you can also create a Bag with the .new method.\n\n    my $breakfast = Bag.new( <spam eggs spam spam bacon spam> );\n\nSince 6.d (2019.03 and later) you can also use this syntax for\nparameterization of the Bag, to specify which type of values are\nacceptable:\n\n    # only allow strings (Str) in the Bag\n    my $breakfast = Bag[Str].new( <spam eggs spam spam bacon spam> );\n\n    # only allow whole numbers (Int) in the Bag\n    my $breakfast = Bag[Int].new( <spam eggs spam spam bacon spam> );\n    # Type check failed in binding; expected Int but got Str (\"spam\")\n\nFinally, you can create Bag masquerading as a hash by using the is trait:\n\n    my %b is Bag = <a b c>;\n    say %b<a>;  # True\n    say %b<d>;  # False\n\nSince 6.d (2019.03 and later), this syntax also allows you to specify the\ntype of values you would like to allow:\n\n    # limit to strings\n    my %b is Bag[Str] = <a b c>;\n    say %b<a>;  # True\n    say %b<d>;  # False\n\n    # limit to whole numbers\n    my %b is Bag[Int] = <a b c>;\n    # Type check failed in binding; expected Int but got Str (\"a\")\n\nOperators\n\nRaku provides common set and bag operators, which can take Bags (or any\nother collections) as input, and return result as Bool, Set or Bag values.\nFor example:\n\n    my ($a, $b) = bag(2, 2, 4), bag(2, 3, 3, 4);\n\n    say $a (<) $b;   # OUTPUT: «False␤»\n    say $a (<+) $b;  # OUTPUT: «False␤»\n    say $a (^) $b;   # OUTPUT: «bag(3(2), 2)␤»\n    say $a (+) $b;   # OUTPUT: «bag(2(3), 4(2), 3(2))␤»\n\n    # Unicode versions:\n    say $a ⊂ $b;  # OUTPUT: «False␤»\n    say $a ≼ $b;  # OUTPUT: «False␤»\n    say $a ⊖ $b;  # OUTPUT: «bag(3(2), 2)␤»\n    say $a ⊎ $b;  # OUTPUT: «bag(2(3), 4(2), 3(2))␤»\n\n\nSee Set/Bag Operators for a complete list of set and bag operators with\ndetailed explanations.\n\nSubroutines\n\n  sub bag\n\n    sub bag(*@args --> Bag)\n\nCreates a new Bag from @args.\n\nNote on reverse and ordering\n\nThis method is inherited from Any, however, Mixes do not have an inherent\norder and you should not trust it returning a consistent output.\n\nSee also\n\nSets, Bags, and Mixes","k":"c","m":[{"k":"m","m":0,"s":{"p":["*%_"],"r":"Int:D"},"n":"total"},{"k":"m","m":1,"s":{"r":"Mu","p":["&test","\\list","*%_"]},"n":"classify-list"},{"m":1,"k":"m","s":{"r":"Mu","p":["%test","|c is raw"]},"n":"classify-list"},{"m":1,"k":"m","n":"classify-list","s":{"r":"Mu","p":["@test","|c is raw"]}},{"m":1,"k":"m","s":{"r":"Mu","p":["&test","**@list","|c is raw"]},"n":"classify-list"},{"s":{"p":["&test","\\list","*%_"],"r":"Mu"},"n":"categorize-list","k":"m","m":1},{"n":"categorize-list","s":{"p":["%test","|c is raw"],"r":"Mu"},"m":1,"k":"m"},{"m":1,"k":"m","s":{"p":["@test","|c is raw"],"r":"Mu"},"n":"categorize-list"},{"m":1,"k":"m","n":"categorize-list","s":{"p":["&test","**@list","|c is raw"],"r":"Mu"}},{"m":0,"k":"m","n":"of","s":{"p":["*%_"],"r":"Mu"}},{"s":{"p":["*@pairs","*%_"],"r":"Baggy:D"},"n":"new-from-pairs","m":0,"k":"m"},{"s":{"r":"Mu","p":["*%_"]},"n":"kxxv","k":"m","m":1},{"n":"default","s":{"p":["*%_"],"r":"Int"},"m":0,"k":"m"},{"m":1,"k":"m","n":"grabpairs","s":{"p":["$count?","*%_"],"r":"Mu"}},{"s":{"r":"Mu","p":["*%_"]},"n":"grabpairs","m":1,"k":"m"},{"s":{"r":"Mu","p":["Callable:D $calculate","*%_"]},"n":"grabpairs","k":"m","m":1},{"n":"grabpairs","s":{"r":"Mu","p":["Whatever $","*%_"]},"m":1,"k":"m"},{"k":"m","m":1,"n":"grabpairs","s":{"p":["\\count","*%_"],"r":"Mu"}},{"s":{"r":"Mu","p":["*%_"]},"n":"pickpairs","k":"m","m":1},{"m":1,"k":"m","n":"pickpairs","s":{"p":["Callable:D $calculate","*%_"],"r":"Mu"}},{"s":{"p":["Whatever $","*%_"],"r":"Mu"},"n":"pickpairs","m":1,"k":"m"},{"k":"m","m":1,"n":"pickpairs","s":{"r":"Mu","p":["\\count","*%_"]}},{"n":"grab","s":{"r":"Mu","p":["|c is raw"]},"k":"m","m":1},{"k":"m","m":1,"s":{"r":"Mu","p":["*%_"]},"n":"pick"},{"s":{"r":"Mu","p":["Callable:D $calculate","*%_"]},"n":"pick","k":"m","m":1},{"k":"m","m":1,"s":{"p":["Whatever $","*%_"],"r":"Mu"},"n":"pick"},{"s":{"r":"Mu","p":["\\count","*%_"]},"n":"pick","m":1,"k":"m"},{"m":1,"k":"m","s":{"p":["*%_"],"r":"Mu"},"n":"roll"},{"n":"roll","s":{"r":"Mu","p":["Whatever $","*%_"]},"k":"m","m":1},{"n":"roll","s":{"p":["Callable:D $calculate","*%_"],"r":"Mu"},"k":"m","m":1},{"n":"roll","s":{"p":["\\count","*%_"],"r":"Mu"},"m":1,"k":"m"},{"s":{"r":"Mu","p":["*%_"]},"n":"RAW-HASH","k":"m","m":0},{"m":0,"k":"m","s":{"p":["*%_"],"r":"Mu"},"n":"keyof"},{"s":{"r":"Mu","p":["\\elems","*%_"]},"n":"SET-SELF","k":"m","m":0},{"k":"m","m":1,"s":{"r":"Bag:D","p":["*@pairs",":$INITIALIZE!","*%_"]},"n":"STORE"},{"n":"STORE","s":{"p":["\\objects","\\values",":$INITIALIZE!","*%_"],"r":"Bag:D"},"m":1,"k":"m"},{"k":"m","m":1,"s":{"p":["|"],"r":"Mu"},"n":"STORE"},{"s":{"r":"Int:D","p":["*%_"]},"n":"Int","k":"m","m":0},{"n":"Num","s":{"r":"Num:D","p":["*%_"]},"m":0,"k":"m"},{"n":"Numeric","s":{"r":"Numeric:D","p":["*%_"]},"m":0,"k":"m"},{"n":"Real","s":{"r":"Real:D","p":["*%_"]},"m":0,"k":"m"},{"k":"m","m":0,"s":{"r":"Mu","p":["*%_"]},"n":"Capture"},{"k":"m","m":0,"s":{"p":["Cool $format = \"\\%s\\t\\%s\"","$sep = \"\\n\"","*%_"],"r":"Mu"},"n":"fmt"},{"m":1,"k":"m","n":"Setty","s":{"r":"Mu","p":["*%_"]}},{"s":{"r":"Mu","p":["*%_"]},"n":"Setty","m":1,"k":"m"},{"m":1,"k":"m","n":"Baggy","s":{"p":["*%_"],"r":"Mu"}},{"k":"m","m":1,"s":{"r":"Mu","p":["*%_"]},"n":"Baggy"},{"m":1,"k":"m","s":{"p":["*%_"],"r":"Mu"},"n":"Mixy"},{"k":"m","m":1,"n":"Mixy","s":{"r":"Mu","p":["*%_"]}},{"k":"m","m":1,"n":"WHICH","s":{"r":"ValueObjAt:D","p":["*%_"]}},{"s":{"p":["*%_"],"r":"ObjAt:D"},"n":"WHICH","m":1,"k":"m"},{"m":1,"k":"m","n":"WHICH","s":{"p":["*%_"],"r":"ValueObjAt:D"}},{"n":"DELETE-KEY","s":{"r":"Nil","p":["$","*%_"]},"m":1,"k":"m"},{"n":"DELETE-KEY","s":{"p":["$","*%_"],"r":"Mu"},"m":1,"k":"m"},{"m":1,"k":"m","n":"DELETE-KEY","s":{"r":"Mu","p":["\\k","*%_"]}},{"m":1,"k":"m","s":{"r":"Mu","p":["\\k","*%_"]},"n":"DELETE-KEY"},{"s":{"r":"Bag:D","p":["*%_"]},"n":"Bag","m":1,"k":"m"},{"m":1,"k":"m","n":"Bag","s":{"p":["*%_"],"r":"Mu"}},{"s":{"r":"BagHash:D","p":["*%_"]},"n":"BagHash","m":1,"k":"m"},{"m":1,"k":"m","n":"BagHash","s":{"p":["*%_"],"r":"Mu"}},{"k":"m","m":1,"s":{"p":["*%_"],"r":"Mix:D"},"n":"Mix"},{"s":{"r":"Mu","p":["*%_"]},"n":"Mix","k":"m","m":1},{"s":{"p":["*%_"],"r":"Mu"},"n":"Mix","k":"m","m":1},{"m":1,"k":"m","s":{"r":"MixHash:D","p":["*%_"]},"n":"MixHash"},{"k":"m","m":1,"n":"MixHash","s":{"p":["*%_"],"r":"Mu"}},{"n":"MixHash","s":{"p":["*%_"],"r":"Mu"},"k":"m","m":1},{"s":{"r":"Mu","p":["\\topic","*%_"]},"n":"ACCEPTS","k":"m","m":1},{"k":"m","m":1,"n":"ACCEPTS","s":{"p":["Mu:U \\topic","*%_"],"r":"Mu"}},{"m":1,"k":"m","n":"ACCEPTS","s":{"p":["Mu:D \\a","*%_"],"r":"Mu"}},{"m":1,"k":"m","s":{"r":"Bool","p":["Mu:U $","*%_"]},"n":"ACCEPTS"},{"n":"ACCEPTS","s":{"p":["\\topic","*%_"],"r":"Bool:D"},"m":1,"k":"m"},{"n":"ACCEPTS","s":{"p":["\\other","*%_"],"r":"Bool:D"},"k":"m","m":1},{"s":{"r":"Bool:D","p":["Baggy:D \\other","*%_"]},"n":"ACCEPTS","k":"m","m":1},{"k":"m","m":1,"s":{"p":["\\other","*%_"],"r":"Bool:D"},"n":"ACCEPTS"},{"m":1,"k":"m","s":{"p":["$key","*%_"],"r":"Mu"},"n":"AT-KEY"},{"n":"AT-KEY","s":{"r":"Mu","p":["\\key","*%_"]},"k":"m","m":1},{"n":"AT-KEY","s":{"r":"Mu","p":["\\k","*%_"]},"m":1,"k":"m"},{"m":1,"k":"m","s":{"p":["$key","*%_"],"r":"Mu"},"n":"AT-KEY"},{"k":"m","m":1,"s":{"p":["$","*%_"],"r":"Bool"},"n":"EXISTS-KEY"},{"k":"m","m":1,"s":{"r":"Bool","p":["$","*%_"]},"n":"EXISTS-KEY"},{"n":"EXISTS-KEY","s":{"p":["\\k","*%_"],"r":"Mu"},"m":1,"k":"m"},{"k":"m","m":1,"n":"new","s":{"p":["*%attrinit"],"r":"Mu"}},{"m":1,"k":"m","n":"new","s":{"r":"Mu","p":["$","*@","*%_"]}},{"s":{"p":["*%_"],"r":"Baggy:D"},"n":"new","k":"m","m":1},{"k":"m","m":1,"s":{"r":"Baggy:D","p":["\\value","*%_"]},"n":"new"},{"k":"m","m":1,"s":{"p":["**@args","*%_"],"r":"Mu"},"n":"new"},{"n":"iterator","s":{"r":"Mu","p":["*%_"]},"k":"m","m":1},{"k":"m","m":1,"s":{"p":["*%_"],"r":"Mu"},"n":"iterator"},{"m":1,"k":"m","s":{"p":["*%_"],"r":"Mu"},"n":"iterator"},{"k":"m","m":1,"n":"keys","s":{"r":"Mu","p":["*%_"]}},{"n":"keys","s":{"p":["*%_"],"r":"Mu"},"m":1,"k":"m"},{"s":{"p":["*%_"],"r":"Mu"},"n":"keys","k":"m","m":1},{"k":"m","m":1,"s":{"p":["*%_"],"r":"Mu"},"n":"kv"},{"m":1,"k":"m","n":"kv","s":{"r":"Mu","p":["*%_"]}},{"s":{"r":"Mu","p":["*%_"]},"n":"kv","k":"m","m":1},{"n":"values","s":{"p":["*%_"],"r":"Mu"},"m":1,"k":"m"},{"n":"values","s":{"p":["*%_"],"r":"Mu"},"m":1,"k":"m"},{"m":1,"k":"m","s":{"p":["*%_"],"r":"Mu"},"n":"values"},{"m":1,"k":"m","s":{"r":"Mu","p":["*%_"]},"n":"antipairs"},{"k":"m","m":1,"n":"antipairs","s":{"p":["*%_"],"r":"Mu"}},{"n":"antipairs","s":{"r":"Mu","p":["*%_"]},"m":1,"k":"m"},{"n":"invert","s":{"p":["*%_"],"r":"Mu"},"k":"m","m":1},{"s":{"r":"Mu","p":["*%_"]},"n":"invert","m":1,"k":"m"},{"s":{"r":"Mu","p":["*%_"]},"n":"invert","m":1,"k":"m"},{"s":{"r":"Int","p":["*%_"]},"n":"elems","k":"m","m":1},{"n":"elems","s":{"r":"Mu","p":["*%_"]},"m":1,"k":"m"},{"k":"m","m":1,"s":{"r":"Int:D","p":["*%_"]},"n":"elems"},{"s":{"r":"Bool","p":["*%_"]},"n":"Bool","k":"m","m":1},{"s":{"r":"Mu","p":["*%_"]},"n":"Bool","k":"m","m":1},{"n":"Bool","s":{"r":"Bool:D","p":["*%_"]},"m":1,"k":"m"},{"k":"m","m":1,"s":{"p":["*%_"],"r":"Mu"},"n":"hash"},{"m":1,"k":"m","s":{"r":"Mu","p":["*%_"]},"n":"hash"},{"m":1,"k":"m","n":"hash","s":{"r":"Hash:D","p":["*%_"]}},{"n":"Hash","s":{"p":["*%_"],"r":"Mu"},"m":1,"k":"m"},{"m":1,"k":"m","n":"Hash","s":{"r":"Hash:D","p":["*%_"]}},{"m":1,"k":"m","n":"Str","s":{"p":["*%_"],"r":"Mu"}},{"n":"Str","s":{"r":"Mu","p":["*%_"]},"k":"m","m":1},{"m":1,"k":"m","s":{"p":["*%_"],"r":"Str:D"},"n":"Str"},{"n":"gist","s":{"r":"Mu","p":["*%_"]},"k":"m","m":1},{"n":"gist","s":{"p":["*%_"],"r":"Mu"},"k":"m","m":1},{"n":"gist","s":{"p":["*%_"],"r":"Str:D"},"m":1,"k":"m"},{"s":{"p":["*%_"],"r":"Mu"},"n":"perl","m":1,"k":"m"},{"n":"perl","s":{"p":["*%_"],"r":"Mu"},"k":"m","m":1},{"n":"perl","s":{"p":["*%_"],"r":"Str:D"},"m":1,"k":"m"},{"n":"Set","s":{"r":"Set:D","p":["*%_"]},"k":"m","m":1},{"n":"Set","s":{"p":["*%_"],"r":"Mu"},"k":"m","m":1},{"n":"SetHash","s":{"p":["*%_"],"r":"SetHash:D"},"m":1,"k":"m"},{"s":{"p":["*%_"],"r":"Mu"},"n":"SetHash","m":1,"k":"m"},{"s":{"r":"Mu","p":["*%_"]},"n":"list","m":1,"k":"m"},{"k":"m","m":1,"s":{"p":["*%_"],"r":"Mu"},"n":"list"},{"s":{"r":"Mu","p":["*%_"]},"n":"list","k":"m","m":1},{"m":1,"k":"m","n":"list","s":{"p":["*%_"],"r":"Mu"}},{"m":1,"k":"m","n":"pairs","s":{"p":["*%_"],"r":"Mu"}},{"s":{"p":["*%_"],"r":"Mu"},"n":"pairs","k":"m","m":1},{"n":"pairs","s":{"p":["*%_"],"r":"Mu"},"k":"m","m":1},{"s":{"r":"Mu","p":["@auto","%init","*%_"]},"n":"BUILDALL","k":"s","m":0},{"m":0,"k":"m","s":{"p":["\\type","*%_"],"r":"Mu"},"n":"!HASHIFY"},{"k":"m","m":0,"s":{"r":"Baggy:D","p":["\\type","\\iterator","*%_"]},"n":"!create-from-iterator"}],"a":[{"t":"ValueObjAt","n":"$!WHICH","k":"v"},{"n":"$!total","t":"Int","k":"v"},{"k":"v","n":"$!elems","t":"Rakudo::Internals::IterationSet"}],"b":"A","t":"Bag","n":"Bag"},{"d":"TITLE\nclass PseudoStash\n\nSUBTITLE\nStash type for pseudo-packages\n\n    class PseudoStash is Map { }\n\nPseudoStash is the stash type (hanging off .WHO) that backs various\npseudo-packages. So, when you do MY:: or CALLER::, that gives back a\nPseudoStash. In most cases, Package:: gives back a Stash. Neither of these\nare objects the user is expected to create by themselves, but in case you\nhave one, you can just use it like a hash.\n\n    my $a = 42;\n    my $b = q/$a/;\n    say MY::{$b};\n    #OUTPUT: «42␤»\n\n\nThis shows how you can use a PseudoStash to look up variables, by name, at\nruntime.","m":[{"m":0,"k":"m","s":{"r":"Mu","p":["*%_"]},"n":"new"},{"m":0,"k":"m","s":{"p":["$key","\\value","*%_"],"r":"Mu"},"n":"BIND-KEY"},{"s":{"p":["$key","*%_"],"r":"Mu"},"n":"EXISTS-KEY","k":"m","m":0},{"k":"m","m":1,"s":{"p":["*%_"],"r":"ValueObjAt:D"},"n":"WHICH"},{"m":1,"k":"m","n":"WHICH","s":{"p":["*%_"],"r":"ObjAt:D"}},{"m":1,"k":"m","s":{"r":"ValueObjAt:D","p":["*%_"]},"n":"WHICH"},{"n":"WHICH","s":{"r":"ObjAt:D","p":["*%_"]},"m":1,"k":"m"},{"s":{"p":["$key","*%_"],"r":"Mu"},"n":"AT-KEY","k":"m","m":1},{"m":1,"k":"m","n":"AT-KEY","s":{"p":["\\key","*%_"],"r":"Mu"}},{"k":"m","m":1,"n":"AT-KEY","s":{"p":["Str:D \\key","*%_"],"r":"Mu"}},{"k":"m","m":1,"n":"AT-KEY","s":{"p":["\\key","*%_"],"r":"Mu"}},{"m":1,"k":"m","n":"AT-KEY","s":{"r":"Mu","p":["$key","*%_"]}},{"m":1,"k":"m","n":"ASSIGN-KEY","s":{"r":"Mu","p":["\\key","Mu \\assignee","*%_"]}},{"k":"m","m":1,"n":"ASSIGN-KEY","s":{"r":"Mu","p":["\\key","Mu \\value","*%_"]}},{"n":"ASSIGN-KEY","s":{"r":"Mu","p":["$key","Mu \\value","*%_"]},"k":"m","m":1},{"m":0,"k":"s","s":{"p":["@auto","%init","*%_"],"r":"Mu"},"n":"BUILDALL"},{"n":"clone","s":{"p":["*%_"],"r":"Map:D"},"m":0,"k":"m"},{"n":"iterator","s":{"r":"Iterator:D","p":["*%_"]},"k":"m","m":0},{"m":0,"k":"m","s":{"r":"Mu","p":["*%_"]},"n":"hash"},{"k":"m","m":1,"n":"ASSIGN-KEY","s":{"p":["\\key","Mu \\assignee","*%_"],"r":"Mu"}},{"s":{"r":"Mu","p":["\\key","Mu \\value","*%_"]},"n":"ASSIGN-KEY","m":1,"k":"m"},{"s":{"r":"Mu","p":["*%_"]},"n":"Str","m":1,"k":"m"},{"s":{"p":["*%_"],"r":"Mu"},"n":"Str","m":1,"k":"m"},{"n":"Str","s":{"r":"Str:D","p":["*%_"]},"m":1,"k":"m"},{"n":"SetHash","s":{"p":["*%_"],"r":"SetHash:D"},"m":1,"k":"m"},{"n":"SetHash","s":{"r":"SetHash:D","p":["*%_"]},"m":1,"k":"m"},{"n":"SetHash","s":{"r":"Mu","p":["*%_"]},"k":"m","m":1},{"k":"m","m":0,"n":"Capture","s":{"p":["*%_"],"r":"Mu"}},{"k":"m","m":0,"s":{"p":["*%_"],"r":"Mu"},"n":"flat"},{"n":"sort","s":{"p":["*%_"],"r":"Mu"},"k":"m","m":1},{"m":1,"k":"m","s":{"r":"Mu","p":["&by","*%_"]},"n":"sort"},{"m":1,"k":"m","s":{"p":["*%_"],"r":"Seq:D"},"n":"sort"},{"k":"m","m":1,"n":"WHICH","s":{"p":["*%_"],"r":"ValueObjAt:D"}},{"s":{"r":"ObjAt:D","p":["*%_"]},"n":"WHICH","m":1,"k":"m"},{"s":{"p":["*%_"],"r":"ValueObjAt:D"},"n":"WHICH","k":"m","m":1},{"k":"m","m":1,"s":{"p":["*%_"],"r":"Mix:D"},"n":"Mix"},{"n":"Mix","s":{"r":"Mix:D","p":["*%_"]},"m":1,"k":"m"},{"k":"m","m":1,"s":{"r":"Mu","p":["*%_"]},"n":"Mix"},{"m":1,"k":"m","s":{"p":["*%_"],"r":"Set:D"},"n":"Set"},{"k":"m","m":1,"s":{"r":"Set:D","p":["*%_"]},"n":"Set"},{"k":"m","m":1,"n":"Set","s":{"p":["*%_"],"r":"Mu"}},{"n":"Bag","s":{"r":"Bag:D","p":["*%_"]},"m":1,"k":"m"},{"k":"m","m":1,"n":"Bag","s":{"p":["*%_"],"r":"Bag:D"}},{"s":{"r":"Mu","p":["*%_"]},"n":"Bag","k":"m","m":1},{"k":"m","m":1,"s":{"r":"Mu","p":["*%_"]},"n":"values"},{"n":"values","s":{"r":"Mu","p":["*%_"]},"k":"m","m":1},{"k":"m","m":1,"s":{"p":["*%_"],"r":"Seq:D"},"n":"values"},{"m":1,"k":"m","s":{"r":"Mu","p":["*%_"]},"n":"roll"},{"s":{"r":"Mu","p":["$n","*%_"]},"n":"roll","m":1,"k":"m"},{"s":{"p":["*%_"],"r":"Mu"},"n":"roll","m":1,"k":"m"},{"n":"roll","s":{"p":["Callable:D $calculate","*%_"],"r":"Mu"},"m":1,"k":"m"},{"m":1,"k":"m","n":"roll","s":{"r":"Mu","p":["Whatever $","*%_"]}},{"s":{"p":["$count","*%_"],"r":"Mu"},"n":"roll","k":"m","m":1},{"s":{"p":["*%_"],"r":"Mu"},"n":"pairs","k":"m","m":1},{"n":"pairs","s":{"r":"Mu","p":["*%_"]},"k":"m","m":1},{"n":"pairs","s":{"r":"Seq:D","p":["*%_"]},"m":1,"k":"m"},{"n":"head","s":{"p":["*%_"],"r":"Mu"},"k":"m","m":1},{"n":"head","s":{"p":["Callable:D $w","*%_"],"r":"Mu"},"m":1,"k":"m"},{"n":"head","s":{"p":["$n","*%_"],"r":"Mu"},"k":"m","m":1},{"n":"head","s":{"p":["*%_"],"r":"Mu"},"k":"m","m":1},{"k":"m","m":1,"n":"kv","s":{"p":["*%_"],"r":"Mu"}},{"s":{"p":["*%_"],"r":"Mu"},"n":"kv","k":"m","m":1},{"k":"m","m":1,"n":"kv","s":{"r":"Seq:D","p":["*%_"]}},{"n":"IterationBuffer","s":{"p":["*%_"],"r":"IterationBuffer:D"},"m":0,"k":"m"},{"k":"m","m":1,"s":{"p":["Map:D \\map",":$INITIALIZE!","*%_"],"r":"Map:D"},"n":"STORE"},{"m":1,"k":"m","s":{"p":["\\to_store",":$INITIALIZE!","*%_"],"r":"Map:D"},"n":"STORE"},{"s":{"r":"Map:D","p":["\\keys","\\values",":$INITIALIZE!","*%_"]},"n":"STORE","k":"m","m":1},{"m":1,"k":"m","s":{"r":"Mu","p":["|"]},"n":"STORE"},{"k":"m","m":0,"n":"FLATTENABLE_LIST","s":{"r":"Mu","p":["*%_"]}},{"n":"pick","s":{"p":["*%_"],"r":"Mu"},"m":1,"k":"m"},{"n":"pick","s":{"r":"Mu","p":["$n","*%_"]},"k":"m","m":1},{"s":{"p":["*%_"],"r":"Mu"},"n":"pick","m":1,"k":"m"},{"k":"m","m":1,"n":"keys","s":{"p":["*%_"],"r":"Mu"}},{"m":1,"k":"m","s":{"r":"Mu","p":["*%_"]},"n":"keys"},{"m":1,"k":"m","n":"keys","s":{"p":["*%_"],"r":"Seq:D"}},{"m":0,"k":"m","n":"keyof","s":{"p":["*%_"],"r":"Mu"}},{"n":"elems","s":{"p":["*%_"],"r":"Int:D"},"m":0,"k":"m"},{"m":1,"k":"m","n":"gist","s":{"p":["*%_"],"r":"Mu"}},{"s":{"p":["*%_"],"r":"Mu"},"n":"gist","m":1,"k":"m"},{"k":"m","m":1,"n":"gist","s":{"r":"Str:D","p":["*%_"]}},{"n":"List","s":{"p":["*%_"],"r":"List:D"},"k":"m","m":0},{"s":{"r":"Bool","p":["*%_"]},"n":"Bool","m":1,"k":"m"},{"k":"m","m":1,"n":"Bool","s":{"r":"Mu","p":["*%_"]}},{"k":"m","m":1,"s":{"r":"Bool:D","p":["*%_"]},"n":"Bool"},{"m":1,"k":"m","n":"new","s":{"p":["*%attrinit"],"r":"Mu"}},{"s":{"r":"Mu","p":["$","*@","*%_"]},"n":"new","m":1,"k":"m"},{"m":1,"k":"m","s":{"p":["*%_"],"r":"Map:D"},"n":"new"},{"k":"m","m":1,"n":"new","s":{"r":"Map:D","p":["*@args","*%_"]}},{"m":0,"k":"m","n":"list","s":{"p":["*%_"],"r":"List:D"}},{"m":0,"k":"m","n":"hyper","s":{"r":"Mu","p":["Int(Cool) :$batch = 64","Int(Cool) :$degree = 4","*%_"]}},{"n":"fmt","s":{"r":"Str:D","p":["Cool $format = \"\\%s\\t\\%s\"","$sep = \"\\n\"","*%_"]},"m":0,"k":"m"},{"m":0,"k":"m","s":{"p":["Int(Cool) :$batch = 64","Int(Cool) :$degree = 4","*%_"],"r":"Mu"},"n":"race"},{"n":"item","s":{"r":"Mu","p":["*%_"]},"m":0,"k":"m"},{"s":{"r":"Mu","p":["*%_"]},"n":"invert","k":"m","m":1},{"k":"m","m":1,"s":{"p":["*%_"],"r":"Mu"},"n":"invert"},{"s":{"p":["*%_"],"r":"Seq:D"},"n":"invert","m":1,"k":"m"},{"s":{"p":["\\topic","*%_"],"r":"Mu"},"n":"ACCEPTS","m":1,"k":"m"},{"k":"m","m":1,"s":{"p":["Mu:U \\topic","*%_"],"r":"Mu"},"n":"ACCEPTS"},{"m":1,"k":"m","s":{"r":"Mu","p":["Mu:D \\a","*%_"]},"n":"ACCEPTS"},{"s":{"p":["Mu:U $","*%_"],"r":"Bool"},"n":"ACCEPTS","m":1,"k":"m"},{"m":1,"k":"m","s":{"p":["\\topic","*%_"],"r":"Bool:D"},"n":"ACCEPTS"},{"m":1,"k":"m","n":"ACCEPTS","s":{"r":"Bool:D","p":["$topic","*%_"]}},{"k":"m","m":1,"s":{"r":"Bool:D","p":["Cool:D $topic","*%_"]},"n":"ACCEPTS"},{"n":"ACCEPTS","s":{"r":"Bool:D","p":["Positional $topic","*%_"]},"k":"m","m":1},{"m":1,"k":"m","n":"ACCEPTS","s":{"r":"Bool:D","p":["Regex $topic","*%_"]}},{"m":1,"k":"m","n":"ACCEPTS","s":{"p":["Map:D \\m","*%_"],"r":"Bool:D"}},{"s":{"p":["$","*%_"],"r":"Bool"},"n":"EXISTS-KEY","k":"m","m":1},{"k":"m","m":1,"s":{"p":["$","*%_"],"r":"Bool"},"n":"EXISTS-KEY"},{"s":{"p":["Str:D \\key","*%_"],"r":"Bool:D"},"n":"EXISTS-KEY","k":"m","m":1},{"k":"m","m":1,"s":{"r":"Bool:D","p":["\\key","*%_"]},"n":"EXISTS-KEY"},{"k":"m","m":0,"s":{"r":"Mu","p":["*%_"]},"n":"of"},{"m":1,"k":"m","s":{"r":"Mu","p":["*%_"]},"n":"perl"},{"m":1,"k":"m","s":{"r":"Mu","p":["*%_"]},"n":"perl"},{"k":"m","m":1,"s":{"p":["*%_"],"r":"Str:D"},"n":"perl"},{"m":1,"k":"m","s":{"p":["*%_"],"r":"Mu"},"n":"Numeric"},{"s":{"p":["*%_"],"r":"Int:D"},"n":"Numeric","m":1,"k":"m"},{"n":"lazy-if","s":{"p":["$flag","*%_"],"r":"Mu"},"k":"m","m":0},{"s":{"p":["*%_"],"r":"Mu"},"n":"Map","k":"m","m":1},{"k":"m","m":1,"s":{"p":["*%_"],"r":"Mu"},"n":"Map"},{"s":{"p":["*%_"],"r":"Mu"},"n":"FLATTENABLE_HASH","k":"m","m":0},{"m":1,"k":"m","n":"Hash","s":{"r":"Mu","p":["*%_"]}},{"s":{"r":"Mu","p":["*%_"]},"n":"Hash","k":"m","m":1},{"s":{"p":["*%_"],"r":"Hash:D"},"n":"Hash","k":"m","m":1},{"s":{"r":"Mu","p":["$key","*%_"]},"n":"AT-KEY","k":"m","m":1},{"s":{"r":"Mu","p":["\\key","*%_"]},"n":"AT-KEY","k":"m","m":1},{"m":1,"k":"m","n":"AT-KEY","s":{"r":"Mu","p":["Str:D \\key","*%_"]}},{"k":"m","m":1,"n":"AT-KEY","s":{"r":"Mu","p":["\\key","*%_"]}},{"k":"m","m":0,"n":"lazy","s":{"r":"Mu","p":["*%_"]}},{"n":"antipairs","s":{"p":["*%_"],"r":"Mu"},"k":"m","m":1},{"s":{"r":"Mu","p":["*%_"]},"n":"antipairs","k":"m","m":1},{"k":"m","m":1,"s":{"r":"Seq:D","p":["*%_"]},"n":"antipairs"},{"n":"Int","s":{"r":"Mu","p":["*%_"]},"m":1,"k":"m"},{"m":1,"k":"m","n":"Int","s":{"r":"Int:D","p":["*%_"]}},{"k":"m","m":1,"n":"MixHash","s":{"p":["*%_"],"r":"MixHash:D"}},{"n":"MixHash","s":{"r":"MixHash:D","p":["*%_"]},"m":1,"k":"m"},{"n":"MixHash","s":{"r":"Mu","p":["*%_"]},"m":1,"k":"m"},{"k":"m","m":1,"n":"BagHash","s":{"r":"BagHash:D","p":["*%_"]}},{"k":"m","m":1,"n":"BagHash","s":{"p":["*%_"],"r":"BagHash:D"}},{"m":1,"k":"m","n":"BagHash","s":{"r":"Mu","p":["*%_"]}},{"k":"s","m":0,"s":{"r":"Mu","p":["@auto","%init","*%_"]},"n":"BUILDALL"}],"k":"c","a":[{"n":"$!ctx","t":"Mu","k":"v"},{"k":"v","t":"int","n":"$!mode"},{"k":"v","t":"Mu","n":"$!storage"}],"b":"C","t":"PseudoStash","n":"PseudoStash"},{"n":"&nextcallee","t":"Sub","k":"v"},{"n":"nextcallee","s":{"p":[],"r":"Mu"},"k":"s","m":0},{"t":"IO","n":"IO","d":"TITLE\nrole IO\n\nSUBTITLE\nInput/output related routines\n\nThe role provides no methods, but exists so that IO() coercers, which\ncoerce to IO::Path, correctly type-check the resultant value. The role is\nimplemented by IO::Path and IO::Special.\n\nSee also the related classes IO::Handle and IO::Path.","k":"ro","b":"C"},{"t":"IO::Path","n":"IO::Path","d":"TITLE\nclass IO::Path\n\nSUBTITLE\nFile or directory path\n\n    class IO::Path is Cool does IO { }\n\n\nIO::Path is the workhorse of IO operations.\n\nConceptually, an IO::Path object consists of a volume, a directory, and a\nbasename. It supports both purely textual operations, and operations that\naccess the filesystem, e.g. to resolve a path, or to read all content of a\nfile.\n\nAt creation, each IO::Path object is given information about the current\nworking directory the path might be relative to using the $.CWD attribute\n(defaults to $*CWD), as well as what operating system semantics should be\nused for path manipulation using the special IO::Spec type given in the\n$.SPEC attribute.\n\nThe $.SPEC defaults to the value of $*SPEC, which uses the object suitable\nfor the operating system the code is currently running on. This is the\ndefault most code will be comfortable with.\n\nIn certain situations, e.g. testing, you may wish to force $*SPEC to use\none of the specific SPEC modules: IO::Spec::Unix, IO::Spec::Win32,\nIO::Spec::Cygwin, and IO::Spec::QNX, or to create IO::Path objects via\nshortcut subclasses IO::Path::Unix, IO::Path::Win32, IO::Path::Cygwin, and\nIO::Path::QNX that pre-set the $.SPEC attribute for you.\n\nThe rest of this document silently assumes Unix semantics in its examples,\nunless stated otherwise.\n\n","b":"C","a":[{"n":"$.SPEC","t":"IO::Spec","k":"v"},{"t":"Str","n":"$.CWD","k":"v"},{"k":"v","t":"Str","n":"$.path"},{"n":"$!is-absolute","t":"Bool","k":"v"},{"n":"$!abspath","t":"Str","k":"v"},{"t":"Associative","n":"%!parts","k":"v"}],"k":"c","m":[{"n":"BUILD","s":{"p":[":path($!path)!",":SPEC($!SPEC)!",":CWD($!CWD)!","*%_"],"r":"Nil"},"m":0,"k":"s"},{"k":"m","m":1,"n":"new","s":{"p":["Str $path",":$SPEC = { ... }","Str:D :$CWD","*%_"],"r":"Mu"}},{"n":"new","s":{"r":"Mu","p":["Str $path",":$SPEC = { ... }",":$CWD = { ... }","*%_"]},"m":1,"k":"m"},{"n":"new","s":{"r":"Mu","p":["Cool $path",":$SPEC = { ... }",":$CWD = { ... }","*%_"]},"k":"m","m":1},{"n":"new","s":{"r":"Mu","p":[":$basename!",":$dirname = \"\"",":$volume = \"\"",":$SPEC = { ... }",":$CWD = { ... }","*%_"]},"m":1,"k":"m"},{"m":1,"k":"m","n":"new","s":{"r":"Mu","p":["*%_"]}},{"s":{"r":"Mu","p":["*%_"]},"n":"is-absolute","m":0,"k":"m"},{"m":0,"k":"m","n":"is-relative","s":{"r":"Mu","p":["*%_"]}},{"m":0,"k":"m","s":{"p":["*%_"],"r":"Mu"},"n":"parts"},{"m":0,"k":"m","n":"volume","s":{"r":"Mu","p":["*%_"]}},{"m":0,"k":"m","s":{"p":["*%_"],"r":"Mu"},"n":"dirname"},{"n":"basename","s":{"r":"Mu","p":["*%_"]},"m":0,"k":"m"},{"k":"m","m":1,"s":{"r":"Mu","p":["*%_"]},"n":"extension"},{"n":"extension","s":{"r":"Mu","p":["Int :$parts!","*%_"]},"m":1,"k":"m"},{"k":"m","m":1,"s":{"p":["Range :$parts!","*%_"],"r":"Mu"},"n":"extension"},{"n":"extension","s":{"p":["Str $subst","Int :$parts = 1","Str :$joiner = { ... }","*%_"],"r":"Mu"},"k":"m","m":1},{"s":{"r":"Mu","p":["Str $subst","Range :$parts","Str :$joiner = { ... }","*%_"]},"n":"extension","k":"m","m":1},{"k":"m","m":0,"n":"Numeric","s":{"p":["*%_"],"r":"Mu"}},{"n":"sibling","s":{"p":["\\sibling","*%_"],"r":"Mu"},"m":0,"k":"m"},{"m":0,"k":"m","n":"succ","s":{"p":["*%_"],"r":"Mu"}},{"n":"pred","s":{"r":"Mu","p":["*%_"]},"k":"m","m":0},{"n":"open","s":{"r":"Mu","p":["|c is raw"]},"k":"m","m":0},{"n":"watch","s":{"r":"Mu","p":["*%_"]},"k":"m","m":0},{"s":{"p":["*%_"],"r":"Mu"},"n":"absolute","m":1,"k":"m"},{"s":{"p":["$CWD","*%_"],"r":"Mu"},"n":"absolute","k":"m","m":1},{"s":{"r":"Mu","p":["$CWD = { ... }","*%_"]},"n":"relative","m":0,"k":"m"},{"s":{"p":["*%_"],"r":"Mu"},"n":"cleanup","m":0,"k":"m"},{"m":0,"k":"m","s":{"p":[":$completely","*%_"],"r":"Mu"},"n":"resolve"},{"k":"m","m":1,"s":{"r":"Mu","p":["Int:D $depth where { ... }","*%_"]},"n":"parent"},{"n":"parent","s":{"p":["*%_"],"r":"Mu"},"m":1,"k":"m"},{"n":"child","s":{"r":"Mu","p":["\\child","*%_"]},"m":0,"k":"m"},{"n":"add","s":{"p":["\\what","*%_"],"r":"Mu"},"m":0,"k":"m"},{"k":"m","m":1,"s":{"r":"Mu","p":["$path",":$test!","*%_"]},"n":"chdir"},{"k":"m","m":1,"n":"chdir","s":{"p":["IO $path","|c is raw"],"r":"Mu"}},{"m":1,"k":"m","s":{"r":"Mu","p":["$path is copy",":$d = Bool::True",":$r",":$w",":$x","*%_"]},"n":"chdir"},{"k":"m","m":0,"n":"rename","s":{"p":["$to",":$createonly","*%_"],"r":"Bool"}},{"m":0,"k":"m","n":"copy","s":{"r":"Bool","p":["$to",":$createonly","*%_"]}},{"k":"m","m":0,"s":{"r":"Bool","p":["|c is raw"]},"n":"move"},{"n":"chmod","s":{"r":"Bool","p":["$mode","*%_"]},"k":"m","m":0},{"n":"unlink","s":{"r":"Bool","p":["*%_"]},"m":0,"k":"m"},{"s":{"r":"Bool","p":["$name","*%_"]},"n":"symlink","k":"m","m":0},{"n":"link","s":{"r":"Bool","p":["$name","*%_"]},"k":"m","m":0},{"s":{"r":"Mu","p":["$mode = 511","*%_"]},"n":"mkdir","k":"m","m":0},{"s":{"p":["*%_"],"r":"Bool"},"n":"rmdir","m":0,"k":"m"},{"n":"dir","s":{"p":["Mu :$test = { ... }","*%_"],"r":"Mu"},"k":"m","m":1},{"n":"slurp","s":{"r":"Mu","p":[":$enc",":$bin","*%_"]},"m":1,"k":"m"},{"m":0,"k":"m","s":{"r":"Mu","p":["$data",":$enc",":$append",":$createonly","*%_"]},"n":"spurt"},{"k":"m","m":0,"s":{"r":"Mu","p":[":$chomp = Bool::True",":$enc = \"utf8\"",":$nl-in = { ... }","|c is raw"]},"n":"lines"},{"n":"comb","s":{"r":"Mu","p":[":$chomp = Bool::True",":$enc = \"utf8\"",":$nl-in = { ... }","|c is raw"]},"m":0,"k":"m"},{"m":0,"k":"m","n":"split","s":{"p":[":$chomp = Bool::True",":$enc = \"utf8\"",":$nl-in = { ... }","|c is raw"],"r":"Mu"}},{"s":{"r":"Mu","p":[":$chomp = Bool::True",":$enc = \"utf8\"",":$nl-in = { ... }","|c is raw"]},"n":"words","m":0,"k":"m"},{"k":"m","m":0,"s":{"r":"Bool:D","p":["*%_"]},"n":"e"},{"k":"m","m":0,"n":"d","s":{"r":"Bool:D","p":["*%_"]}},{"k":"m","m":0,"n":"f","s":{"p":["*%_"],"r":"Bool:D"}},{"k":"m","m":0,"n":"s","s":{"r":"Int:D","p":["*%_"]}},{"s":{"r":"Bool:D","p":["*%_"]},"n":"l","k":"m","m":0},{"k":"m","m":0,"s":{"p":["*%_"],"r":"Bool:D"},"n":"r"},{"s":{"r":"Bool:D","p":["*%_"]},"n":"w","k":"m","m":0},{"k":"m","m":0,"s":{"p":["*%_"],"r":"Bool:D"},"n":"rw"},{"n":"x","s":{"p":["*%_"],"r":"Bool:D"},"m":0,"k":"m"},{"s":{"p":["*%_"],"r":"Bool:D"},"n":"rwx","k":"m","m":0},{"s":{"p":["*%_"],"r":"Bool:D"},"n":"z","k":"m","m":0},{"m":0,"k":"m","n":"modified","s":{"r":"Instant:D","p":["*%_"]}},{"k":"m","m":0,"n":"accessed","s":{"p":["*%_"],"r":"Instant:D"}},{"k":"m","m":0,"n":"changed","s":{"r":"Instant:D","p":["*%_"]}},{"k":"m","m":0,"n":"mode","s":{"p":["*%_"],"r":"IntStr:D"}},{"m":1,"k":"m","n":"ACCEPTS","s":{"p":["\\topic","*%_"],"r":"Mu"}},{"s":{"p":["Mu:U \\topic","*%_"],"r":"Mu"},"n":"ACCEPTS","k":"m","m":1},{"s":{"p":["Mu:D \\a","*%_"],"r":"Mu"},"n":"ACCEPTS","k":"m","m":1},{"s":{"r":"Bool","p":["Mu:U $","*%_"]},"n":"ACCEPTS","m":1,"k":"m"},{"s":{"r":"Bool:D","p":["\\topic","*%_"]},"n":"ACCEPTS","m":1,"k":"m"},{"n":"ACCEPTS","s":{"p":["Cool:D \\other","*%_"],"r":"Mu"},"m":1,"k":"m"},{"m":1,"k":"m","s":{"r":"Mu","p":["*%_"]},"n":"Str"},{"m":1,"k":"m","n":"Str","s":{"p":["*%_"],"r":"Mu"}},{"k":"m","m":1,"s":{"p":["*%_"],"r":"Mu"},"n":"Str"},{"m":1,"k":"m","n":"gist","s":{"r":"Mu","p":["*%_"]}},{"s":{"p":["*%_"],"r":"Mu"},"n":"gist","m":1,"k":"m"},{"n":"gist","s":{"r":"Mu","p":["*%_"]},"m":1,"k":"m"},{"n":"perl","s":{"p":["*%_"],"r":"Mu"},"k":"m","m":1},{"m":1,"k":"m","n":"perl","s":{"r":"Mu","p":["*%_"]}},{"k":"m","m":1,"n":"perl","s":{"p":["*%_"],"r":"Mu"}},{"k":"m","m":1,"n":"IO","s":{"p":["*%_"],"r":"Mu"}},{"s":{"r":"Mu","p":["*%_"]},"n":"IO","m":1,"k":"m"},{"m":1,"k":"m","s":{"p":["*%_"],"r":"Mu"},"n":"IO"},{"n":"SPEC","s":{"p":["*%_"],"r":"Mu"},"m":0,"k":"m"},{"m":0,"k":"m","s":{"p":["*%_"],"r":"Mu"},"n":"CWD"},{"n":"path","s":{"p":["*%_"],"r":"Mu"},"m":0,"k":"m"},{"k":"s","m":0,"n":"BUILDALL","s":{"r":"Mu","p":["@auto","%init","*%_"]}},{"m":0,"k":"m","s":{"r":"Mu","p":["$path",":$SPEC = { ... }",":$CWD = { ... }","*%_"]},"n":"!new-from-absolute-path"},{"s":{"r":"Mu","p":["$path","*%_"]},"n":"!set-absolute","k":"m","m":0}]},{"n":"IO::Path::Unix","t":"IO::Path::Unix","k":"c","m":[{"k":"m","m":0,"n":"new","s":{"p":["|c is raw"],"r":"Mu"}},{"s":{"r":"Mu","p":["*%_"]},"n":"perl","m":1,"k":"m"},{"m":1,"k":"m","n":"perl","s":{"r":"Mu","p":["*%_"]}},{"k":"m","m":1,"s":{"p":["*%_"],"r":"Mu"},"n":"perl"},{"m":1,"k":"m","s":{"p":["*%_"],"r":"Mu"},"n":"perl"},{"s":{"p":["@auto","%init","*%_"],"r":"Mu"},"n":"BUILDALL","k":"s","m":0},{"n":"basename","s":{"p":["*%_"],"r":"Mu"},"k":"m","m":0},{"k":"m","m":0,"n":"cleanup","s":{"r":"Mu","p":["*%_"]}},{"n":"Str","s":{"p":["*%_"],"r":"Mu"},"k":"m","m":1},{"k":"m","m":1,"s":{"p":["*%_"],"r":"Mu"},"n":"Str"},{"s":{"p":["*%_"],"r":"Mu"},"n":"Str","k":"m","m":1},{"s":{"r":"Mu","p":["|c is raw"]},"n":"open","k":"m","m":0},{"m":0,"k":"m","n":"relative","s":{"r":"Mu","p":["$CWD = { ... }","*%_"]}},{"n":"pred","s":{"r":"Mu","p":["*%_"]},"m":0,"k":"m"},{"s":{"p":[":$chomp = Bool::True",":$enc = \"utf8\"",":$nl-in = { ... }","|c is raw"],"r":"Mu"},"n":"words","m":0,"k":"m"},{"m":0,"k":"m","s":{"p":["*%_"],"r":"Bool:D"},"n":"e"},{"n":"rw","s":{"p":["*%_"],"r":"Bool:D"},"m":0,"k":"m"},{"m":0,"k":"m","n":"split","s":{"p":[":$chomp = Bool::True",":$enc = \"utf8\"",":$nl-in = { ... }","|c is raw"],"r":"Mu"}},{"k":"m","m":0,"s":{"p":["$name","*%_"],"r":"Bool"},"n":"symlink"},{"m":1,"k":"m","s":{"p":["*%_"],"r":"Mu"},"n":"IO"},{"m":1,"k":"m","s":{"r":"Mu","p":["*%_"]},"n":"IO"},{"m":1,"k":"m","n":"IO","s":{"r":"Mu","p":["*%_"]}},{"s":{"p":["*%_"],"r":"Bool:D"},"n":"z","k":"m","m":0},{"s":{"r":"Bool:D","p":["*%_"]},"n":"w","k":"m","m":0},{"s":{"p":[":$completely","*%_"],"r":"Mu"},"n":"resolve","m":0,"k":"m"},{"m":0,"k":"m","s":{"r":"Bool","p":["*%_"]},"n":"rmdir"},{"n":"f","s":{"p":["*%_"],"r":"Bool:D"},"k":"m","m":0},{"s":{"r":"Mu","p":["*%_"]},"n":"is-relative","k":"m","m":0},{"n":"move","s":{"p":["|c is raw"],"r":"Bool"},"k":"m","m":0},{"s":{"p":["Mu :$test = { ... }","*%_"],"r":"Mu"},"n":"dir","k":"m","m":1},{"m":1,"k":"m","n":"slurp","s":{"r":"Mu","p":[":$enc",":$bin","*%_"]}},{"s":{"p":["$to",":$createonly","*%_"],"r":"Bool"},"n":"rename","k":"m","m":0},{"m":0,"k":"m","s":{"r":"Bool","p":["$to",":$createonly","*%_"]},"n":"copy"},{"k":"m","m":0,"s":{"r":"Mu","p":["*%_"]},"n":"is-absolute"},{"m":0,"k":"m","s":{"r":"Mu","p":[":$chomp = Bool::True",":$enc = \"utf8\"",":$nl-in = { ... }","|c is raw"]},"n":"lines"},{"m":0,"k":"m","s":{"r":"Mu","p":["*%_"]},"n":"parts"},{"k":"m","m":0,"s":{"p":["*%_"],"r":"Int:D"},"n":"s"},{"n":"unlink","s":{"p":["*%_"],"r":"Bool"},"m":0,"k":"m"},{"s":{"r":"IntStr:D","p":["*%_"]},"n":"mode","m":0,"k":"m"},{"k":"m","m":1,"s":{"p":["*%_"],"r":"Mu"},"n":"gist"},{"k":"m","m":1,"n":"gist","s":{"p":["*%_"],"r":"Mu"}},{"s":{"r":"Mu","p":["*%_"]},"n":"gist","k":"m","m":1},{"s":{"p":["*%_"],"r":"Mu"},"n":"volume","m":0,"k":"m"},{"m":0,"k":"m","s":{"p":["*%_"],"r":"Mu"},"n":"watch"},{"m":0,"k":"m","s":{"p":["\\child","*%_"],"r":"Mu"},"n":"child"},{"n":"accessed","s":{"r":"Instant:D","p":["*%_"]},"k":"m","m":0},{"k":"m","m":0,"n":"rwx","s":{"r":"Bool:D","p":["*%_"]}},{"n":"new","s":{"p":["Str $path",":$SPEC = { ... }","Str:D :$CWD","*%_"],"r":"Mu"},"k":"m","m":1},{"k":"m","m":1,"n":"new","s":{"r":"Mu","p":["Str $path",":$SPEC = { ... }",":$CWD = { ... }","*%_"]}},{"n":"new","s":{"r":"Mu","p":["Cool $path",":$SPEC = { ... }",":$CWD = { ... }","*%_"]},"m":1,"k":"m"},{"m":1,"k":"m","s":{"r":"Mu","p":[":$basename!",":$dirname = \"\"",":$volume = \"\"",":$SPEC = { ... }",":$CWD = { ... }","*%_"]},"n":"new"},{"n":"new","s":{"p":["*%_"],"r":"Mu"},"k":"m","m":1},{"m":0,"k":"m","n":"link","s":{"p":["$name","*%_"],"r":"Bool"}},{"m":0,"k":"m","n":"spurt","s":{"p":["$data",":$enc",":$append",":$createonly","*%_"],"r":"Mu"}},{"s":{"r":"Bool:D","p":["*%_"]},"n":"x","k":"m","m":0},{"s":{"r":"Mu","p":["*%_"]},"n":"absolute","k":"m","m":1},{"m":1,"k":"m","n":"absolute","s":{"p":["$CWD","*%_"],"r":"Mu"}},{"m":1,"k":"m","s":{"r":"Mu","p":["\\topic","*%_"]},"n":"ACCEPTS"},{"m":1,"k":"m","s":{"r":"Mu","p":["Mu:U \\topic","*%_"]},"n":"ACCEPTS"},{"k":"m","m":1,"n":"ACCEPTS","s":{"p":["Mu:D \\a","*%_"],"r":"Mu"}},{"k":"m","m":1,"s":{"r":"Bool","p":["Mu:U $","*%_"]},"n":"ACCEPTS"},{"k":"m","m":1,"n":"ACCEPTS","s":{"p":["\\topic","*%_"],"r":"Bool:D"}},{"n":"ACCEPTS","s":{"r":"Mu","p":["Cool:D \\other","*%_"]},"k":"m","m":1},{"k":"m","m":0,"s":{"p":["*%_"],"r":"Bool:D"},"n":"d"},{"n":"add","s":{"p":["\\what","*%_"],"r":"Mu"},"m":0,"k":"m"},{"n":"path","s":{"r":"Mu","p":["*%_"]},"k":"m","m":0},{"n":"r","s":{"r":"Bool:D","p":["*%_"]},"m":0,"k":"m"},{"n":"SPEC","s":{"r":"Mu","p":["*%_"]},"m":0,"k":"m"},{"s":{"r":"Mu","p":["*%_"]},"n":"extension","k":"m","m":1},{"m":1,"k":"m","s":{"r":"Mu","p":["Int :$parts!","*%_"]},"n":"extension"},{"m":1,"k":"m","s":{"p":["Range :$parts!","*%_"],"r":"Mu"},"n":"extension"},{"n":"extension","s":{"p":["Str $subst","Int :$parts = 1","Str :$joiner = { ... }","*%_"],"r":"Mu"},"m":1,"k":"m"},{"s":{"p":["Str $subst","Range :$parts","Str :$joiner = { ... }","*%_"],"r":"Mu"},"n":"extension","m":1,"k":"m"},{"s":{"p":["$path",":$test!","*%_"],"r":"Mu"},"n":"chdir","m":1,"k":"m"},{"n":"chdir","s":{"r":"Mu","p":["IO $path","|c is raw"]},"m":1,"k":"m"},{"s":{"p":["$path is copy",":$d = Bool::True",":$r",":$w",":$x","*%_"],"r":"Mu"},"n":"chdir","m":1,"k":"m"},{"k":"m","m":0,"s":{"p":["*%_"],"r":"Mu"},"n":"Numeric"},{"m":0,"k":"m","n":"mkdir","s":{"r":"Mu","p":["$mode = 511","*%_"]}},{"m":0,"k":"m","s":{"p":["*%_"],"r":"Instant:D"},"n":"changed"},{"n":"dirname","s":{"r":"Mu","p":["*%_"]},"m":0,"k":"m"},{"s":{"r":"Bool:D","p":["*%_"]},"n":"l","m":0,"k":"m"},{"s":{"p":["*%_"],"r":"Mu"},"n":"perl","m":1,"k":"m"},{"s":{"p":["*%_"],"r":"Mu"},"n":"perl","m":1,"k":"m"},{"k":"m","m":1,"n":"perl","s":{"r":"Mu","p":["*%_"]}},{"m":0,"k":"m","s":{"p":["$mode","*%_"],"r":"Bool"},"n":"chmod"},{"k":"m","m":0,"s":{"r":"Mu","p":["*%_"]},"n":"CWD"},{"s":{"p":[":$chomp = Bool::True",":$enc = \"utf8\"",":$nl-in = { ... }","|c is raw"],"r":"Mu"},"n":"comb","k":"m","m":0},{"s":{"r":"Mu","p":["\\sibling","*%_"]},"n":"sibling","m":0,"k":"m"},{"n":"modified","s":{"r":"Instant:D","p":["*%_"]},"k":"m","m":0},{"n":"parent","s":{"p":["Int:D $depth where { ... }","*%_"],"r":"Mu"},"k":"m","m":1},{"s":{"r":"Mu","p":["*%_"]},"n":"parent","m":1,"k":"m"},{"k":"m","m":0,"s":{"p":["*%_"],"r":"Mu"},"n":"succ"},{"k":"s","m":0,"n":"BUILD","s":{"p":[":path($!path)!",":SPEC($!SPEC)!",":CWD($!CWD)!","*%_"],"r":"Nil"}},{"n":"BUILDALL","s":{"p":["@auto","%init","*%_"],"r":"Mu"},"m":0,"k":"s"}],"a":[{"k":"v","n":"$.SPEC","t":"IO::Spec"},{"k":"v","t":"Str","n":"$.CWD"},{"k":"v","n":"$.path","t":"Str"},{"k":"v","t":"Bool","n":"$!is-absolute"},{"n":"$!abspath","t":"Str","k":"v"},{"t":"Associative","n":"%!parts","k":"v"}],"b":"C","d":"TITLE\nclass IO::Path::Unix\n\nSUBTITLE\nIO::Path pre-loaded with IO::Spec::Unix\n\n    class IO::Path::Unix is IO::Path { }\n\nThis sub-class of IO::Path, pre-loaded with IO::Spec::Unix in the $.SPEC\nattribute.\n\n"},{"n":"IO::Path::QNX","t":"IO::Path::QNX","k":"c","m":[{"n":"new","s":{"r":"Mu","p":["|c is raw"]},"m":0,"k":"m"},{"n":"perl","s":{"r":"Mu","p":["*%_"]},"m":1,"k":"m"},{"s":{"r":"Mu","p":["*%_"]},"n":"perl","m":1,"k":"m"},{"s":{"p":["*%_"],"r":"Mu"},"n":"perl","m":1,"k":"m"},{"n":"perl","s":{"r":"Mu","p":["*%_"]},"m":1,"k":"m"},{"k":"s","m":0,"n":"BUILDALL","s":{"p":["@auto","%init","*%_"],"r":"Mu"}},{"k":"m","m":0,"s":{"r":"Mu","p":["*%_"]},"n":"basename"},{"n":"cleanup","s":{"p":["*%_"],"r":"Mu"},"k":"m","m":0},{"k":"m","m":1,"s":{"p":["*%_"],"r":"Mu"},"n":"Str"},{"k":"m","m":1,"s":{"p":["*%_"],"r":"Mu"},"n":"Str"},{"k":"m","m":1,"s":{"p":["*%_"],"r":"Mu"},"n":"Str"},{"s":{"r":"Mu","p":["|c is raw"]},"n":"open","m":0,"k":"m"},{"s":{"r":"Mu","p":["$CWD = { ... }","*%_"]},"n":"relative","k":"m","m":0},{"m":0,"k":"m","s":{"r":"Mu","p":["*%_"]},"n":"pred"},{"s":{"p":[":$chomp = Bool::True",":$enc = \"utf8\"",":$nl-in = { ... }","|c is raw"],"r":"Mu"},"n":"words","k":"m","m":0},{"n":"e","s":{"r":"Bool:D","p":["*%_"]},"k":"m","m":0},{"s":{"p":["*%_"],"r":"Bool:D"},"n":"rw","k":"m","m":0},{"s":{"p":[":$chomp = Bool::True",":$enc = \"utf8\"",":$nl-in = { ... }","|c is raw"],"r":"Mu"},"n":"split","k":"m","m":0},{"n":"symlink","s":{"p":["$name","*%_"],"r":"Bool"},"m":0,"k":"m"},{"n":"IO","s":{"p":["*%_"],"r":"Mu"},"k":"m","m":1},{"m":1,"k":"m","n":"IO","s":{"r":"Mu","p":["*%_"]}},{"k":"m","m":1,"s":{"p":["*%_"],"r":"Mu"},"n":"IO"},{"k":"m","m":0,"s":{"p":["*%_"],"r":"Bool:D"},"n":"z"},{"k":"m","m":0,"s":{"p":["*%_"],"r":"Bool:D"},"n":"w"},{"m":0,"k":"m","n":"resolve","s":{"p":[":$completely","*%_"],"r":"Mu"}},{"n":"rmdir","s":{"r":"Bool","p":["*%_"]},"k":"m","m":0},{"n":"f","s":{"p":["*%_"],"r":"Bool:D"},"k":"m","m":0},{"s":{"p":["*%_"],"r":"Mu"},"n":"is-relative","m":0,"k":"m"},{"n":"move","s":{"r":"Bool","p":["|c is raw"]},"m":0,"k":"m"},{"k":"m","m":1,"s":{"p":["Mu :$test = { ... }","*%_"],"r":"Mu"},"n":"dir"},{"m":1,"k":"m","s":{"r":"Mu","p":[":$enc",":$bin","*%_"]},"n":"slurp"},{"k":"m","m":0,"s":{"r":"Bool","p":["$to",":$createonly","*%_"]},"n":"rename"},{"k":"m","m":0,"s":{"r":"Bool","p":["$to",":$createonly","*%_"]},"n":"copy"},{"m":0,"k":"m","n":"is-absolute","s":{"p":["*%_"],"r":"Mu"}},{"s":{"r":"Mu","p":[":$chomp = Bool::True",":$enc = \"utf8\"",":$nl-in = { ... }","|c is raw"]},"n":"lines","k":"m","m":0},{"m":0,"k":"m","s":{"r":"Mu","p":["*%_"]},"n":"parts"},{"s":{"r":"Int:D","p":["*%_"]},"n":"s","k":"m","m":0},{"s":{"r":"Bool","p":["*%_"]},"n":"unlink","k":"m","m":0},{"m":0,"k":"m","n":"mode","s":{"p":["*%_"],"r":"IntStr:D"}},{"m":1,"k":"m","n":"gist","s":{"r":"Mu","p":["*%_"]}},{"n":"gist","s":{"p":["*%_"],"r":"Mu"},"k":"m","m":1},{"s":{"r":"Mu","p":["*%_"]},"n":"gist","k":"m","m":1},{"s":{"r":"Mu","p":["*%_"]},"n":"volume","k":"m","m":0},{"m":0,"k":"m","n":"watch","s":{"p":["*%_"],"r":"Mu"}},{"s":{"p":["\\child","*%_"],"r":"Mu"},"n":"child","m":0,"k":"m"},{"m":0,"k":"m","s":{"r":"Instant:D","p":["*%_"]},"n":"accessed"},{"n":"rwx","s":{"r":"Bool:D","p":["*%_"]},"m":0,"k":"m"},{"s":{"p":["Str $path",":$SPEC = { ... }","Str:D :$CWD","*%_"],"r":"Mu"},"n":"new","k":"m","m":1},{"s":{"r":"Mu","p":["Str $path",":$SPEC = { ... }",":$CWD = { ... }","*%_"]},"n":"new","k":"m","m":1},{"s":{"r":"Mu","p":["Cool $path",":$SPEC = { ... }",":$CWD = { ... }","*%_"]},"n":"new","k":"m","m":1},{"m":1,"k":"m","n":"new","s":{"r":"Mu","p":[":$basename!",":$dirname = \"\"",":$volume = \"\"",":$SPEC = { ... }",":$CWD = { ... }","*%_"]}},{"n":"new","s":{"p":["*%_"],"r":"Mu"},"m":1,"k":"m"},{"k":"m","m":0,"s":{"p":["$name","*%_"],"r":"Bool"},"n":"link"},{"s":{"p":["$data",":$enc",":$append",":$createonly","*%_"],"r":"Mu"},"n":"spurt","m":0,"k":"m"},{"m":0,"k":"m","n":"x","s":{"p":["*%_"],"r":"Bool:D"}},{"s":{"r":"Mu","p":["*%_"]},"n":"absolute","k":"m","m":1},{"s":{"r":"Mu","p":["$CWD","*%_"]},"n":"absolute","m":1,"k":"m"},{"n":"ACCEPTS","s":{"p":["\\topic","*%_"],"r":"Mu"},"m":1,"k":"m"},{"m":1,"k":"m","s":{"p":["Mu:U \\topic","*%_"],"r":"Mu"},"n":"ACCEPTS"},{"k":"m","m":1,"n":"ACCEPTS","s":{"r":"Mu","p":["Mu:D \\a","*%_"]}},{"n":"ACCEPTS","s":{"r":"Bool","p":["Mu:U $","*%_"]},"m":1,"k":"m"},{"m":1,"k":"m","s":{"p":["\\topic","*%_"],"r":"Bool:D"},"n":"ACCEPTS"},{"s":{"p":["Cool:D \\other","*%_"],"r":"Mu"},"n":"ACCEPTS","k":"m","m":1},{"k":"m","m":0,"s":{"p":["*%_"],"r":"Bool:D"},"n":"d"},{"n":"add","s":{"p":["\\what","*%_"],"r":"Mu"},"k":"m","m":0},{"s":{"r":"Mu","p":["*%_"]},"n":"path","k":"m","m":0},{"m":0,"k":"m","n":"r","s":{"r":"Bool:D","p":["*%_"]}},{"k":"m","m":0,"n":"SPEC","s":{"p":["*%_"],"r":"Mu"}},{"m":1,"k":"m","n":"extension","s":{"r":"Mu","p":["*%_"]}},{"n":"extension","s":{"r":"Mu","p":["Int :$parts!","*%_"]},"k":"m","m":1},{"n":"extension","s":{"p":["Range :$parts!","*%_"],"r":"Mu"},"m":1,"k":"m"},{"m":1,"k":"m","n":"extension","s":{"r":"Mu","p":["Str $subst","Int :$parts = 1","Str :$joiner = { ... }","*%_"]}},{"s":{"p":["Str $subst","Range :$parts","Str :$joiner = { ... }","*%_"],"r":"Mu"},"n":"extension","m":1,"k":"m"},{"k":"m","m":1,"n":"chdir","s":{"r":"Mu","p":["$path",":$test!","*%_"]}},{"m":1,"k":"m","n":"chdir","s":{"p":["IO $path","|c is raw"],"r":"Mu"}},{"n":"chdir","s":{"r":"Mu","p":["$path is copy",":$d = Bool::True",":$r",":$w",":$x","*%_"]},"m":1,"k":"m"},{"n":"Numeric","s":{"p":["*%_"],"r":"Mu"},"m":0,"k":"m"},{"n":"mkdir","s":{"r":"Mu","p":["$mode = 511","*%_"]},"k":"m","m":0},{"n":"changed","s":{"r":"Instant:D","p":["*%_"]},"m":0,"k":"m"},{"n":"dirname","s":{"r":"Mu","p":["*%_"]},"k":"m","m":0},{"s":{"r":"Bool:D","p":["*%_"]},"n":"l","m":0,"k":"m"},{"n":"perl","s":{"p":["*%_"],"r":"Mu"},"k":"m","m":1},{"m":1,"k":"m","s":{"r":"Mu","p":["*%_"]},"n":"perl"},{"k":"m","m":1,"s":{"r":"Mu","p":["*%_"]},"n":"perl"},{"m":0,"k":"m","s":{"p":["$mode","*%_"],"r":"Bool"},"n":"chmod"},{"k":"m","m":0,"s":{"p":["*%_"],"r":"Mu"},"n":"CWD"},{"m":0,"k":"m","n":"comb","s":{"r":"Mu","p":[":$chomp = Bool::True",":$enc = \"utf8\"",":$nl-in = { ... }","|c is raw"]}},{"m":0,"k":"m","s":{"p":["\\sibling","*%_"],"r":"Mu"},"n":"sibling"},{"m":0,"k":"m","s":{"r":"Instant:D","p":["*%_"]},"n":"modified"},{"s":{"p":["Int:D $depth where { ... }","*%_"],"r":"Mu"},"n":"parent","m":1,"k":"m"},{"n":"parent","s":{"p":["*%_"],"r":"Mu"},"k":"m","m":1},{"n":"succ","s":{"p":["*%_"],"r":"Mu"},"m":0,"k":"m"},{"s":{"p":[":path($!path)!",":SPEC($!SPEC)!",":CWD($!CWD)!","*%_"],"r":"Nil"},"n":"BUILD","m":0,"k":"s"},{"n":"BUILDALL","s":{"p":["@auto","%init","*%_"],"r":"Mu"},"m":0,"k":"s"}],"a":[{"n":"$.SPEC","t":"IO::Spec","k":"v"},{"k":"v","n":"$.CWD","t":"Str"},{"t":"Str","n":"$.path","k":"v"},{"n":"$!is-absolute","t":"Bool","k":"v"},{"t":"Str","n":"$!abspath","k":"v"},{"n":"%!parts","t":"Associative","k":"v"}],"b":"C","d":"TITLE\nclass IO::Path::QNX\n\nSUBTITLE\nIO::Path pre-loaded with IO::Spec::QNX\n\n    class IO::Path::QNX is IO::Path { }\n\nThis sub-class of IO::Path, pre-loaded with IO::Spec::QNX in the $.SPEC\nattribute.\n\n"},{"n":"IO::Path::Cygwin","t":"IO::Path::Cygwin","m":[{"s":{"p":["|c is raw"],"r":"Mu"},"n":"new","m":0,"k":"m"},{"n":"perl","s":{"p":["*%_"],"r":"Mu"},"k":"m","m":1},{"n":"perl","s":{"p":["*%_"],"r":"Mu"},"m":1,"k":"m"},{"s":{"p":["*%_"],"r":"Mu"},"n":"perl","k":"m","m":1},{"m":1,"k":"m","n":"perl","s":{"p":["*%_"],"r":"Mu"}},{"k":"s","m":0,"n":"BUILDALL","s":{"p":["@auto","%init","*%_"],"r":"Mu"}},{"k":"m","m":0,"s":{"p":["*%_"],"r":"Mu"},"n":"basename"},{"k":"m","m":0,"s":{"p":["*%_"],"r":"Mu"},"n":"cleanup"},{"m":1,"k":"m","s":{"r":"Mu","p":["*%_"]},"n":"Str"},{"k":"m","m":1,"n":"Str","s":{"p":["*%_"],"r":"Mu"}},{"s":{"r":"Mu","p":["*%_"]},"n":"Str","k":"m","m":1},{"m":0,"k":"m","n":"open","s":{"r":"Mu","p":["|c is raw"]}},{"s":{"p":["$CWD = { ... }","*%_"],"r":"Mu"},"n":"relative","m":0,"k":"m"},{"s":{"p":["*%_"],"r":"Mu"},"n":"pred","m":0,"k":"m"},{"k":"m","m":0,"n":"words","s":{"p":[":$chomp = Bool::True",":$enc = \"utf8\"",":$nl-in = { ... }","|c is raw"],"r":"Mu"}},{"m":0,"k":"m","n":"e","s":{"r":"Bool:D","p":["*%_"]}},{"n":"rw","s":{"r":"Bool:D","p":["*%_"]},"k":"m","m":0},{"s":{"p":[":$chomp = Bool::True",":$enc = \"utf8\"",":$nl-in = { ... }","|c is raw"],"r":"Mu"},"n":"split","m":0,"k":"m"},{"m":0,"k":"m","n":"symlink","s":{"r":"Bool","p":["$name","*%_"]}},{"s":{"p":["*%_"],"r":"Mu"},"n":"IO","m":1,"k":"m"},{"m":1,"k":"m","s":{"r":"Mu","p":["*%_"]},"n":"IO"},{"n":"IO","s":{"p":["*%_"],"r":"Mu"},"k":"m","m":1},{"k":"m","m":0,"s":{"p":["*%_"],"r":"Bool:D"},"n":"z"},{"k":"m","m":0,"s":{"p":["*%_"],"r":"Bool:D"},"n":"w"},{"m":0,"k":"m","s":{"r":"Mu","p":[":$completely","*%_"]},"n":"resolve"},{"m":0,"k":"m","n":"rmdir","s":{"r":"Bool","p":["*%_"]}},{"k":"m","m":0,"s":{"p":["*%_"],"r":"Bool:D"},"n":"f"},{"k":"m","m":0,"s":{"p":["*%_"],"r":"Mu"},"n":"is-relative"},{"m":0,"k":"m","n":"move","s":{"r":"Bool","p":["|c is raw"]}},{"n":"dir","s":{"r":"Mu","p":["Mu :$test = { ... }","*%_"]},"m":1,"k":"m"},{"n":"slurp","s":{"p":[":$enc",":$bin","*%_"],"r":"Mu"},"m":1,"k":"m"},{"n":"rename","s":{"p":["$to",":$createonly","*%_"],"r":"Bool"},"m":0,"k":"m"},{"k":"m","m":0,"n":"copy","s":{"r":"Bool","p":["$to",":$createonly","*%_"]}},{"k":"m","m":0,"n":"is-absolute","s":{"r":"Mu","p":["*%_"]}},{"n":"lines","s":{"r":"Mu","p":[":$chomp = Bool::True",":$enc = \"utf8\"",":$nl-in = { ... }","|c is raw"]},"m":0,"k":"m"},{"s":{"p":["*%_"],"r":"Mu"},"n":"parts","k":"m","m":0},{"k":"m","m":0,"n":"s","s":{"r":"Int:D","p":["*%_"]}},{"k":"m","m":0,"n":"unlink","s":{"p":["*%_"],"r":"Bool"}},{"n":"mode","s":{"r":"IntStr:D","p":["*%_"]},"m":0,"k":"m"},{"n":"gist","s":{"r":"Mu","p":["*%_"]},"k":"m","m":1},{"m":1,"k":"m","n":"gist","s":{"p":["*%_"],"r":"Mu"}},{"s":{"p":["*%_"],"r":"Mu"},"n":"gist","m":1,"k":"m"},{"n":"volume","s":{"r":"Mu","p":["*%_"]},"k":"m","m":0},{"s":{"r":"Mu","p":["*%_"]},"n":"watch","k":"m","m":0},{"m":0,"k":"m","n":"child","s":{"p":["\\child","*%_"],"r":"Mu"}},{"k":"m","m":0,"n":"accessed","s":{"p":["*%_"],"r":"Instant:D"}},{"s":{"r":"Bool:D","p":["*%_"]},"n":"rwx","k":"m","m":0},{"s":{"p":["Str $path",":$SPEC = { ... }","Str:D :$CWD","*%_"],"r":"Mu"},"n":"new","m":1,"k":"m"},{"s":{"r":"Mu","p":["Str $path",":$SPEC = { ... }",":$CWD = { ... }","*%_"]},"n":"new","m":1,"k":"m"},{"m":1,"k":"m","n":"new","s":{"p":["Cool $path",":$SPEC = { ... }",":$CWD = { ... }","*%_"],"r":"Mu"}},{"s":{"p":[":$basename!",":$dirname = \"\"",":$volume = \"\"",":$SPEC = { ... }",":$CWD = { ... }","*%_"],"r":"Mu"},"n":"new","k":"m","m":1},{"n":"new","s":{"p":["*%_"],"r":"Mu"},"k":"m","m":1},{"n":"link","s":{"r":"Bool","p":["$name","*%_"]},"m":0,"k":"m"},{"k":"m","m":0,"n":"spurt","s":{"p":["$data",":$enc",":$append",":$createonly","*%_"],"r":"Mu"}},{"k":"m","m":0,"n":"x","s":{"r":"Bool:D","p":["*%_"]}},{"n":"absolute","s":{"p":["*%_"],"r":"Mu"},"k":"m","m":1},{"n":"absolute","s":{"p":["$CWD","*%_"],"r":"Mu"},"m":1,"k":"m"},{"k":"m","m":1,"n":"ACCEPTS","s":{"r":"Mu","p":["\\topic","*%_"]}},{"s":{"p":["Mu:U \\topic","*%_"],"r":"Mu"},"n":"ACCEPTS","k":"m","m":1},{"k":"m","m":1,"n":"ACCEPTS","s":{"p":["Mu:D \\a","*%_"],"r":"Mu"}},{"s":{"p":["Mu:U $","*%_"],"r":"Bool"},"n":"ACCEPTS","m":1,"k":"m"},{"n":"ACCEPTS","s":{"p":["\\topic","*%_"],"r":"Bool:D"},"k":"m","m":1},{"n":"ACCEPTS","s":{"r":"Mu","p":["Cool:D \\other","*%_"]},"k":"m","m":1},{"k":"m","m":0,"s":{"r":"Bool:D","p":["*%_"]},"n":"d"},{"m":0,"k":"m","s":{"p":["\\what","*%_"],"r":"Mu"},"n":"add"},{"s":{"r":"Mu","p":["*%_"]},"n":"path","m":0,"k":"m"},{"s":{"r":"Bool:D","p":["*%_"]},"n":"r","k":"m","m":0},{"s":{"r":"Mu","p":["*%_"]},"n":"SPEC","k":"m","m":0},{"s":{"p":["*%_"],"r":"Mu"},"n":"extension","k":"m","m":1},{"k":"m","m":1,"n":"extension","s":{"p":["Int :$parts!","*%_"],"r":"Mu"}},{"k":"m","m":1,"s":{"r":"Mu","p":["Range :$parts!","*%_"]},"n":"extension"},{"n":"extension","s":{"r":"Mu","p":["Str $subst","Int :$parts = 1","Str :$joiner = { ... }","*%_"]},"m":1,"k":"m"},{"k":"m","m":1,"n":"extension","s":{"p":["Str $subst","Range :$parts","Str :$joiner = { ... }","*%_"],"r":"Mu"}},{"k":"m","m":1,"n":"chdir","s":{"p":["$path",":$test!","*%_"],"r":"Mu"}},{"n":"chdir","s":{"r":"Mu","p":["IO $path","|c is raw"]},"k":"m","m":1},{"k":"m","m":1,"s":{"p":["$path is copy",":$d = Bool::True",":$r",":$w",":$x","*%_"],"r":"Mu"},"n":"chdir"},{"m":0,"k":"m","n":"Numeric","s":{"p":["*%_"],"r":"Mu"}},{"n":"mkdir","s":{"r":"Mu","p":["$mode = 511","*%_"]},"m":0,"k":"m"},{"n":"changed","s":{"p":["*%_"],"r":"Instant:D"},"k":"m","m":0},{"k":"m","m":0,"s":{"r":"Mu","p":["*%_"]},"n":"dirname"},{"k":"m","m":0,"n":"l","s":{"p":["*%_"],"r":"Bool:D"}},{"k":"m","m":1,"s":{"p":["*%_"],"r":"Mu"},"n":"perl"},{"m":1,"k":"m","n":"perl","s":{"r":"Mu","p":["*%_"]}},{"n":"perl","s":{"r":"Mu","p":["*%_"]},"k":"m","m":1},{"s":{"p":["$mode","*%_"],"r":"Bool"},"n":"chmod","m":0,"k":"m"},{"s":{"p":["*%_"],"r":"Mu"},"n":"CWD","k":"m","m":0},{"k":"m","m":0,"s":{"r":"Mu","p":[":$chomp = Bool::True",":$enc = \"utf8\"",":$nl-in = { ... }","|c is raw"]},"n":"comb"},{"m":0,"k":"m","s":{"p":["\\sibling","*%_"],"r":"Mu"},"n":"sibling"},{"n":"modified","s":{"p":["*%_"],"r":"Instant:D"},"k":"m","m":0},{"m":1,"k":"m","n":"parent","s":{"r":"Mu","p":["Int:D $depth where { ... }","*%_"]}},{"k":"m","m":1,"n":"parent","s":{"r":"Mu","p":["*%_"]}},{"m":0,"k":"m","s":{"r":"Mu","p":["*%_"]},"n":"succ"},{"m":0,"k":"s","s":{"r":"Nil","p":[":path($!path)!",":SPEC($!SPEC)!",":CWD($!CWD)!","*%_"]},"n":"BUILD"},{"n":"BUILDALL","s":{"r":"Mu","p":["@auto","%init","*%_"]},"k":"s","m":0}],"k":"c","b":"C","a":[{"t":"IO::Spec","n":"$.SPEC","k":"v"},{"k":"v","n":"$.CWD","t":"Str"},{"t":"Str","n":"$.path","k":"v"},{"n":"$!is-absolute","t":"Bool","k":"v"},{"n":"$!abspath","t":"Str","k":"v"},{"k":"v","n":"%!parts","t":"Associative"}],"d":"TITLE\nclass IO::Path::Cygwin\n\nSUBTITLE\nIO::Path pre-loaded with IO::Spec::Cygwin\n\n    class IO::Path::Cygwin is IO::Path { }\n\nThis sub-class of IO::Path, pre-loaded with IO::Spec::Cygwin in the $.SPEC\nattribute.\n\n"},{"n":"IO::Path::Win32","t":"IO::Path::Win32","k":"c","m":[{"s":{"r":"Mu","p":["|c is raw"]},"n":"new","k":"m","m":0},{"k":"m","m":1,"s":{"r":"Mu","p":["*%_"]},"n":"perl"},{"n":"perl","s":{"p":["*%_"],"r":"Mu"},"k":"m","m":1},{"m":1,"k":"m","s":{"r":"Mu","p":["*%_"]},"n":"perl"},{"n":"perl","s":{"p":["*%_"],"r":"Mu"},"k":"m","m":1},{"k":"s","m":0,"n":"BUILDALL","s":{"r":"Mu","p":["@auto","%init","*%_"]}},{"m":0,"k":"m","n":"basename","s":{"r":"Mu","p":["*%_"]}},{"m":0,"k":"m","n":"cleanup","s":{"r":"Mu","p":["*%_"]}},{"k":"m","m":1,"n":"Str","s":{"p":["*%_"],"r":"Mu"}},{"n":"Str","s":{"r":"Mu","p":["*%_"]},"m":1,"k":"m"},{"m":1,"k":"m","n":"Str","s":{"r":"Mu","p":["*%_"]}},{"n":"open","s":{"p":["|c is raw"],"r":"Mu"},"m":0,"k":"m"},{"s":{"p":["$CWD = { ... }","*%_"],"r":"Mu"},"n":"relative","m":0,"k":"m"},{"k":"m","m":0,"s":{"p":["*%_"],"r":"Mu"},"n":"pred"},{"n":"words","s":{"r":"Mu","p":[":$chomp = Bool::True",":$enc = \"utf8\"",":$nl-in = { ... }","|c is raw"]},"k":"m","m":0},{"n":"e","s":{"r":"Bool:D","p":["*%_"]},"k":"m","m":0},{"k":"m","m":0,"n":"rw","s":{"r":"Bool:D","p":["*%_"]}},{"m":0,"k":"m","s":{"p":[":$chomp = Bool::True",":$enc = \"utf8\"",":$nl-in = { ... }","|c is raw"],"r":"Mu"},"n":"split"},{"k":"m","m":0,"n":"symlink","s":{"p":["$name","*%_"],"r":"Bool"}},{"s":{"p":["*%_"],"r":"Mu"},"n":"IO","k":"m","m":1},{"s":{"r":"Mu","p":["*%_"]},"n":"IO","k":"m","m":1},{"m":1,"k":"m","n":"IO","s":{"r":"Mu","p":["*%_"]}},{"s":{"p":["*%_"],"r":"Bool:D"},"n":"z","k":"m","m":0},{"n":"w","s":{"r":"Bool:D","p":["*%_"]},"m":0,"k":"m"},{"m":0,"k":"m","n":"resolve","s":{"p":[":$completely","*%_"],"r":"Mu"}},{"s":{"p":["*%_"],"r":"Bool"},"n":"rmdir","k":"m","m":0},{"k":"m","m":0,"s":{"r":"Bool:D","p":["*%_"]},"n":"f"},{"s":{"p":["*%_"],"r":"Mu"},"n":"is-relative","m":0,"k":"m"},{"k":"m","m":0,"n":"move","s":{"p":["|c is raw"],"r":"Bool"}},{"n":"dir","s":{"p":["Mu :$test = { ... }","*%_"],"r":"Mu"},"k":"m","m":1},{"n":"slurp","s":{"r":"Mu","p":[":$enc",":$bin","*%_"]},"k":"m","m":1},{"m":0,"k":"m","n":"rename","s":{"r":"Bool","p":["$to",":$createonly","*%_"]}},{"m":0,"k":"m","n":"copy","s":{"p":["$to",":$createonly","*%_"],"r":"Bool"}},{"s":{"p":["*%_"],"r":"Mu"},"n":"is-absolute","k":"m","m":0},{"k":"m","m":0,"n":"lines","s":{"p":[":$chomp = Bool::True",":$enc = \"utf8\"",":$nl-in = { ... }","|c is raw"],"r":"Mu"}},{"m":0,"k":"m","n":"parts","s":{"r":"Mu","p":["*%_"]}},{"s":{"r":"Int:D","p":["*%_"]},"n":"s","k":"m","m":0},{"k":"m","m":0,"n":"unlink","s":{"p":["*%_"],"r":"Bool"}},{"k":"m","m":0,"s":{"p":["*%_"],"r":"IntStr:D"},"n":"mode"},{"m":1,"k":"m","s":{"r":"Mu","p":["*%_"]},"n":"gist"},{"m":1,"k":"m","s":{"r":"Mu","p":["*%_"]},"n":"gist"},{"m":1,"k":"m","n":"gist","s":{"p":["*%_"],"r":"Mu"}},{"k":"m","m":0,"n":"volume","s":{"p":["*%_"],"r":"Mu"}},{"k":"m","m":0,"n":"watch","s":{"r":"Mu","p":["*%_"]}},{"n":"child","s":{"r":"Mu","p":["\\child","*%_"]},"k":"m","m":0},{"m":0,"k":"m","n":"accessed","s":{"r":"Instant:D","p":["*%_"]}},{"m":0,"k":"m","n":"rwx","s":{"p":["*%_"],"r":"Bool:D"}},{"k":"m","m":1,"s":{"r":"Mu","p":["Str $path",":$SPEC = { ... }","Str:D :$CWD","*%_"]},"n":"new"},{"s":{"p":["Str $path",":$SPEC = { ... }",":$CWD = { ... }","*%_"],"r":"Mu"},"n":"new","k":"m","m":1},{"m":1,"k":"m","s":{"r":"Mu","p":["Cool $path",":$SPEC = { ... }",":$CWD = { ... }","*%_"]},"n":"new"},{"k":"m","m":1,"s":{"p":[":$basename!",":$dirname = \"\"",":$volume = \"\"",":$SPEC = { ... }",":$CWD = { ... }","*%_"],"r":"Mu"},"n":"new"},{"s":{"r":"Mu","p":["*%_"]},"n":"new","k":"m","m":1},{"k":"m","m":0,"s":{"p":["$name","*%_"],"r":"Bool"},"n":"link"},{"s":{"r":"Mu","p":["$data",":$enc",":$append",":$createonly","*%_"]},"n":"spurt","m":0,"k":"m"},{"s":{"p":["*%_"],"r":"Bool:D"},"n":"x","k":"m","m":0},{"k":"m","m":1,"n":"absolute","s":{"p":["*%_"],"r":"Mu"}},{"m":1,"k":"m","s":{"p":["$CWD","*%_"],"r":"Mu"},"n":"absolute"},{"n":"ACCEPTS","s":{"r":"Mu","p":["\\topic","*%_"]},"k":"m","m":1},{"s":{"r":"Mu","p":["Mu:U \\topic","*%_"]},"n":"ACCEPTS","m":1,"k":"m"},{"k":"m","m":1,"n":"ACCEPTS","s":{"p":["Mu:D \\a","*%_"],"r":"Mu"}},{"k":"m","m":1,"n":"ACCEPTS","s":{"p":["Mu:U $","*%_"],"r":"Bool"}},{"m":1,"k":"m","s":{"r":"Bool:D","p":["\\topic","*%_"]},"n":"ACCEPTS"},{"k":"m","m":1,"n":"ACCEPTS","s":{"p":["Cool:D \\other","*%_"],"r":"Mu"}},{"n":"d","s":{"r":"Bool:D","p":["*%_"]},"m":0,"k":"m"},{"k":"m","m":0,"n":"add","s":{"p":["\\what","*%_"],"r":"Mu"}},{"m":0,"k":"m","s":{"p":["*%_"],"r":"Mu"},"n":"path"},{"s":{"p":["*%_"],"r":"Bool:D"},"n":"r","m":0,"k":"m"},{"s":{"r":"Mu","p":["*%_"]},"n":"SPEC","k":"m","m":0},{"s":{"r":"Mu","p":["*%_"]},"n":"extension","k":"m","m":1},{"n":"extension","s":{"p":["Int :$parts!","*%_"],"r":"Mu"},"k":"m","m":1},{"k":"m","m":1,"s":{"r":"Mu","p":["Range :$parts!","*%_"]},"n":"extension"},{"n":"extension","s":{"p":["Str $subst","Int :$parts = 1","Str :$joiner = { ... }","*%_"],"r":"Mu"},"k":"m","m":1},{"m":1,"k":"m","n":"extension","s":{"r":"Mu","p":["Str $subst","Range :$parts","Str :$joiner = { ... }","*%_"]}},{"m":1,"k":"m","s":{"r":"Mu","p":["$path",":$test!","*%_"]},"n":"chdir"},{"s":{"r":"Mu","p":["IO $path","|c is raw"]},"n":"chdir","m":1,"k":"m"},{"k":"m","m":1,"n":"chdir","s":{"p":["$path is copy",":$d = Bool::True",":$r",":$w",":$x","*%_"],"r":"Mu"}},{"k":"m","m":0,"s":{"p":["*%_"],"r":"Mu"},"n":"Numeric"},{"k":"m","m":0,"s":{"p":["$mode = 511","*%_"],"r":"Mu"},"n":"mkdir"},{"k":"m","m":0,"s":{"p":["*%_"],"r":"Instant:D"},"n":"changed"},{"s":{"p":["*%_"],"r":"Mu"},"n":"dirname","m":0,"k":"m"},{"n":"l","s":{"p":["*%_"],"r":"Bool:D"},"m":0,"k":"m"},{"m":1,"k":"m","s":{"p":["*%_"],"r":"Mu"},"n":"perl"},{"k":"m","m":1,"n":"perl","s":{"r":"Mu","p":["*%_"]}},{"s":{"p":["*%_"],"r":"Mu"},"n":"perl","k":"m","m":1},{"n":"chmod","s":{"r":"Bool","p":["$mode","*%_"]},"k":"m","m":0},{"n":"CWD","s":{"r":"Mu","p":["*%_"]},"m":0,"k":"m"},{"k":"m","m":0,"n":"comb","s":{"r":"Mu","p":[":$chomp = Bool::True",":$enc = \"utf8\"",":$nl-in = { ... }","|c is raw"]}},{"k":"m","m":0,"n":"sibling","s":{"r":"Mu","p":["\\sibling","*%_"]}},{"n":"modified","s":{"r":"Instant:D","p":["*%_"]},"m":0,"k":"m"},{"m":1,"k":"m","s":{"r":"Mu","p":["Int:D $depth where { ... }","*%_"]},"n":"parent"},{"m":1,"k":"m","s":{"r":"Mu","p":["*%_"]},"n":"parent"},{"m":0,"k":"m","s":{"r":"Mu","p":["*%_"]},"n":"succ"},{"k":"s","m":0,"s":{"r":"Nil","p":[":path($!path)!",":SPEC($!SPEC)!",":CWD($!CWD)!","*%_"]},"n":"BUILD"},{"n":"BUILDALL","s":{"r":"Mu","p":["@auto","%init","*%_"]},"k":"s","m":0}],"a":[{"k":"v","n":"$.SPEC","t":"IO::Spec"},{"n":"$.CWD","t":"Str","k":"v"},{"n":"$.path","t":"Str","k":"v"},{"t":"Bool","n":"$!is-absolute","k":"v"},{"k":"v","t":"Str","n":"$!abspath"},{"n":"%!parts","t":"Associative","k":"v"}],"b":"C","d":"TITLE\nclass IO::Path::Win32\n\nSUBTITLE\nIO::Path pre-loaded with IO::Spec::Win32\n\n    class IO::Path::Win32 is IO::Path { }\n\nThis sub-class of IO::Path, pre-loaded with IO::Spec::Win32 in the $.SPEC\nattribute.\n\n"},{"n":"IO::Pipe","t":"IO::Pipe","b":"A","a":[{"k":"v","n":"$.proc","t":"Mu"},{"k":"v","t":"Mu","n":"$!on-read"},{"t":"Mu","n":"$!on-write","k":"v"},{"k":"v","t":"Mu","n":"$!on-close"},{"k":"v","t":"Mu","n":"$!on-native-descriptor"},{"k":"v","n":"$!eof","t":"Mu"},{"k":"v","n":"$!closed","t":"Mu"},{"n":"$.path","t":"Mu","k":"v"},{"k":"v","n":"$!PIO","t":"Mu"},{"k":"v","t":"Mu","n":"$.chomp"},{"k":"v","n":"$.nl-in","t":"Mu"},{"n":"$.nl-out","t":"Str:D","k":"v"},{"k":"v","t":"Str","n":"$.encoding"},{"n":"$!decoder","t":"Encoding::Decoder","k":"v"},{"t":"Encoding::Encoder","n":"$!encoder","k":"v"},{"k":"v","t":"int","n":"$!out-buffer"}],"m":[{"m":0,"k":"m","n":"TWEAK","s":{"p":[":on-close($!on-close)!",":$enc",":$bin",":on-read($!on-read)",":on-write($!on-write)",":on-native-descriptor($!on-native-descriptor)","*%_"],"r":"Nil"}},{"s":{"p":["$","*%_"],"r":"Mu"},"n":"READ","k":"m","m":0},{"n":"EOF","s":{"r":"Mu","p":["*%_"]},"k":"m","m":0},{"n":"WRITE","s":{"p":["$data","*%_"],"r":"Mu"},"k":"m","m":0},{"m":0,"k":"m","n":"flush","s":{"r":"Bool","p":["*%_"]}},{"k":"m","m":0,"s":{"r":"Mu","p":["*%_"]},"n":"close"},{"n":"opened","s":{"p":["*%_"],"r":"Mu"},"k":"m","m":0},{"k":"m","m":0,"s":{"r":"Mu","p":["*%_"]},"n":"t"},{"n":"native-descriptor","s":{"p":["*%_"],"r":"Mu"},"k":"m","m":0},{"m":0,"k":"m","s":{"r":"Mu","p":["*%_"]},"n":"IO"},{"s":{"r":"Mu","p":["*%_"]},"n":"path","m":0,"k":"m"},{"m":0,"k":"m","n":"proc","s":{"p":["*%_"],"r":"Mu"}},{"m":0,"k":"s","n":"BUILDALL","s":{"r":"Mu","p":["@auto","%init","*%_"]}},{"s":{"r":"Mu","p":["*%_"]},"n":"Str","m":1,"k":"m"},{"s":{"p":["*%_"],"r":"Mu"},"n":"Str","k":"m","m":1},{"s":{"p":["*%_"],"r":"Mu"},"n":"Str","m":1,"k":"m"},{"n":"get","s":{"p":["*%_"],"r":"Mu"},"m":0,"k":"m"},{"k":"m","m":0,"n":"WRITE","s":{"r":"Bool","p":["Blob:D $buf","*%_"]}},{"n":"print","s":{"r":"Bool","p":["Str:D \\x","*%_"]},"m":1,"k":"m"},{"n":"print","s":{"r":"Bool","p":["**@list is raw","*%_"]},"k":"m","m":1},{"m":1,"k":"m","n":"print","s":{"r":"Mu","p":["Junction:D \\j","*%_"]}},{"s":{"p":[":$r",":$w",":$x",":$a",":$update",":$rw",":$rx",":$ra",":$mode is copy",":$create is copy",":$append is copy",":$truncate is copy",":$exclusive is copy",":$bin",":$enc is copy",":$chomp = { ... }",":$nl-in is copy = { ... }","Str:D :$nl-out is copy = { ... }",":$out-buffer is copy","*%_"],"r":"Mu"},"n":"open","m":0,"k":"m"},{"k":"m","m":1,"s":{"r":"Mu","p":["*%_"]},"n":"say"},{"k":"m","m":1,"n":"say","s":{"p":["Str:D $x","*%_"],"r":"Bool"}},{"k":"m","m":1,"s":{"p":["\\x","*%_"],"r":"Bool"},"n":"say"},{"n":"say","s":{"r":"Mu","p":["|"]},"m":1,"k":"m"},{"k":"m","m":1,"n":"Supply","s":{"r":"Mu","p":["*%_"]}},{"s":{"r":"Supply:D","p":[":$size = { ... }","*%_"]},"n":"Supply","k":"m","m":1},{"m":0,"k":"m","s":{"r":"Mu","p":[":$close","|c is raw"]},"n":"split"},{"m":0,"k":"m","n":"t","s":{"p":["*%_"],"r":"Mu"}},{"s":{"p":["$limit",":$close","*%_"],"r":"Mu"},"n":"words","m":1,"k":"m"},{"s":{"p":[":$close","*%_"],"r":"Mu"},"n":"words","k":"m","m":1},{"k":"m","m":0,"n":"EOF","s":{"r":"Mu","p":["*%_"]}},{"k":"m","m":0,"n":"IO","s":{"p":["*%_"],"r":"Mu"}},{"n":"getc","s":{"r":"Mu","p":["*%_"]},"m":0,"k":"m"},{"s":{"p":["*%_"],"r":"Mu"},"n":"native-descriptor","m":0,"k":"m"},{"s":{"p":["*%_"],"r":"Mu"},"n":"nl-out","k":"m","m":0},{"m":0,"k":"m","n":"READ","s":{"p":["Int:D $bytes","*%_"],"r":"Mu"}},{"k":"m","m":0,"s":{"p":["*%_"],"r":"Bool"},"n":"unlock"},{"m":0,"k":"m","s":{"r":"Mu","p":[":$close",":$bin","*%_"]},"n":"slurp"},{"s":{"r":"Mu","p":["Int(Cool:D) $chars = { ... }","*%_"]},"n":"readchars","k":"m","m":0},{"n":"lines","s":{"p":["$limit",":$close","*%_"],"r":"Mu"},"k":"m","m":1},{"s":{"p":[":$close","*%_"],"r":"Mu"},"n":"lines","m":1,"k":"m"},{"m":1,"k":"m","s":{"r":"Bool","p":["Str:D \\x","*%_"]},"n":"put"},{"s":{"p":["**@list is raw","*%_"],"r":"Bool"},"n":"put","m":1,"k":"m"},{"k":"m","m":1,"s":{"r":"Mu","p":["Junction:D \\j","*%_"]},"n":"put"},{"n":"opened","s":{"r":"Mu","p":["*%_"]},"k":"m","m":0},{"n":"tell","s":{"r":"Int:D","p":["*%_"]},"k":"m","m":0},{"m":1,"k":"m","s":{"p":["*%_"],"r":"Mu"},"n":"gist"},{"k":"m","m":1,"s":{"r":"Mu","p":["*%_"]},"n":"gist"},{"s":{"r":"Mu","p":["*%_"]},"n":"gist","k":"m","m":1},{"m":0,"k":"m","n":"nl-in","s":{"p":["*%_"],"r":"Mu"}},{"n":"flush","s":{"r":"Bool","p":["*%_"]},"m":0,"k":"m"},{"n":"write","s":{"p":["Blob:D $buf","*%_"],"r":"Bool"},"k":"m","m":0},{"m":0,"k":"m","n":"lock","s":{"p":["Bool:D :$non-blocking = Bool::False","Bool:D :$shared = Bool::False","*%_"],"r":"Bool"}},{"k":"m","m":0,"s":{"p":["|c is raw"],"r":"Mu"},"n":"printf"},{"n":"chomp","s":{"p":["*%_"],"r":"Mu"},"m":0,"k":"m"},{"m":1,"k":"m","s":{"p":["Int:D $offset","SeekType:D $whence = SeekType::SeekFromBeginning","*%_"],"r":"Bool"},"n":"seek"},{"n":"spurt","s":{"r":"Mu","p":["Blob $data",":$close","*%_"]},"k":"m","m":1},{"k":"m","m":1,"n":"spurt","s":{"r":"Mu","p":["Cool $data",":$close","*%_"]}},{"m":0,"k":"m","n":"path","s":{"r":"Mu","p":["*%_"]}},{"n":"read","s":{"p":["Int(Cool:D) $bytes = { ... }","*%_"],"r":"Mu"},"k":"m","m":0},{"s":{"r":"Buf:D","p":[":$bin! where { ... }",":$close","*%_"]},"n":"slurp-rest","k":"m","m":1},{"n":"slurp-rest","s":{"p":[":$enc",":$bin",":$close","*%_"],"r":"Str:D"},"k":"m","m":1},{"m":0,"k":"m","n":"close","s":{"p":["*%_"],"r":"Bool"}},{"s":{"r":"Mu","p":["*%_"]},"n":"eof","k":"m","m":0},{"k":"m","m":1,"s":{"p":["*%_"],"r":"Mu"},"n":"encoding"},{"n":"encoding","s":{"p":["$new-encoding is copy",":$replacement",":$strict","Bool:D :$translate-nl = Bool::True","*%_"],"r":"Mu"},"m":1,"k":"m"},{"s":{"p":["*%_"],"r":"Mu"},"n":"out-buffer","m":0,"k":"m"},{"k":"m","m":0,"n":"comb","s":{"p":[":$close","|c is raw"],"r":"Mu"}},{"n":"print-nl","s":{"p":["*%_"],"r":"Bool"},"m":0,"k":"m"},{"k":"s","m":0,"s":{"p":["*%_"],"r":"Mu"},"n":"DESTROY"},{"k":"s","m":0,"s":{"p":["@auto","%init","*%_"],"r":"Mu"},"n":"BUILDALL"},{"k":"s","m":0,"n":"TWEAK","s":{"p":[":$encoding",":$bin",":path($!path) = Nil","*%_"],"r":"Mu"}}],"k":"c","d":"TITLE\nclass IO::Pipe\n\nSUBTITLE\nBuffered inter-process string or binary stream\n\n    class IO::Pipe is IO::Handle {}\n\nAn IO::Pipe object closely corresponds to a UNIX pipe. It has one end where\nit consumes string or binary data, and another where it reproduces the same\ndata. It is buffered, so that a write without a read doesn't immediately\nblock.\n\nPipes can be easily constructed with sub run and Proc::Async.new.\n\n"},{"d":"TITLE\nclass IO::Handle\n\nSUBTITLE\nOpened file or stream\n\n    class IO::Handle { }\n\nInstances of IO::Handle encapsulate an handle to manipulate input/output\nresources. Usually there is no need to create directly an IO::Handle\ninstance, since it will be done by other roles and methods. For instance,\nan IO::Path object provides an open method that returns an IO::Handle:\n\n    my $fh = '/tmp/log.txt'.IO.open;\n    say $fh.^name; # OUTPUT: IO::Handle\n\nThe first line is pretty much equivalent to the following piece of code:\n\n    my $fh = IO::Handle.new( :path( '/tmp/log.txt'.IO.path ) ).open;\n\n","m":[{"m":0,"k":"s","s":{"p":[":$encoding",":$bin",":path($!path) = Nil","*%_"],"r":"Mu"},"n":"TWEAK"},{"s":{"r":"Mu","p":[":$r",":$w",":$x",":$a",":$update",":$rw",":$rx",":$ra",":$mode is copy",":$create is copy",":$append is copy",":$truncate is copy",":$exclusive is copy",":$bin",":$enc is copy",":$chomp = { ... }",":$nl-in is copy = { ... }","Str:D :$nl-out is copy = { ... }",":$out-buffer is copy","*%_"]},"n":"open","m":0,"k":"m"},{"k":"m","m":0,"n":"out-buffer","s":{"p":["*%_"],"r":"Mu"}},{"k":"m","m":0,"s":{"p":["*%_"],"r":"Mu"},"n":"nl-in"},{"n":"close","s":{"r":"Bool","p":["*%_"]},"k":"m","m":0},{"s":{"p":["*%_"],"r":"Mu"},"n":"eof","k":"m","m":0},{"s":{"r":"Mu","p":["*%_"]},"n":"EOF","k":"m","m":0},{"n":"READ","s":{"r":"Mu","p":["Int:D $bytes","*%_"]},"m":0,"k":"m"},{"s":{"p":["*%_"],"r":"Mu"},"n":"get","m":0,"k":"m"},{"m":0,"k":"m","n":"getc","s":{"p":["*%_"],"r":"Mu"}},{"m":0,"k":"m","n":"comb","s":{"r":"Mu","p":[":$close","|c is raw"]}},{"k":"m","m":0,"n":"split","s":{"r":"Mu","p":[":$close","|c is raw"]}},{"k":"m","m":1,"n":"words","s":{"r":"Mu","p":["$limit",":$close","*%_"]}},{"m":1,"k":"m","n":"words","s":{"r":"Mu","p":[":$close","*%_"]}},{"k":"m","m":1,"s":{"r":"Mu","p":["$limit",":$close","*%_"]},"n":"lines"},{"m":1,"k":"m","s":{"p":[":$close","*%_"],"r":"Mu"},"n":"lines"},{"k":"m","m":0,"s":{"p":["Int(Cool:D) $bytes = { ... }","*%_"],"r":"Mu"},"n":"read"},{"m":0,"k":"m","n":"readchars","s":{"p":["Int(Cool:D) $chars = { ... }","*%_"],"r":"Mu"}},{"m":1,"k":"m","s":{"r":"Bool","p":["Int:D $offset","SeekType:D $whence = SeekType::SeekFromBeginning","*%_"]},"n":"seek"},{"m":0,"k":"m","s":{"r":"Int:D","p":["*%_"]},"n":"tell"},{"k":"m","m":0,"s":{"r":"Bool","p":["Blob:D $buf","*%_"]},"n":"write"},{"s":{"r":"Bool","p":["Blob:D $buf","*%_"]},"n":"WRITE","k":"m","m":0},{"n":"opened","s":{"r":"Mu","p":["*%_"]},"m":0,"k":"m"},{"n":"t","s":{"p":["*%_"],"r":"Mu"},"m":0,"k":"m"},{"n":"lock","s":{"r":"Bool","p":["Bool:D :$non-blocking = Bool::False","Bool:D :$shared = Bool::False","*%_"]},"m":0,"k":"m"},{"m":0,"k":"m","s":{"p":["*%_"],"r":"Bool"},"n":"unlock"},{"n":"printf","s":{"p":["|c is raw"],"r":"Mu"},"m":0,"k":"m"},{"m":1,"k":"m","n":"print","s":{"r":"Bool","p":["Str:D \\x","*%_"]}},{"n":"print","s":{"p":["**@list is raw","*%_"],"r":"Bool"},"m":1,"k":"m"},{"n":"print","s":{"p":["Junction:D \\j","*%_"],"r":"Mu"},"k":"m","m":1},{"m":1,"k":"m","s":{"r":"Bool","p":["Str:D \\x","*%_"]},"n":"put"},{"m":1,"k":"m","s":{"r":"Bool","p":["**@list is raw","*%_"]},"n":"put"},{"k":"m","m":1,"s":{"r":"Mu","p":["Junction:D \\j","*%_"]},"n":"put"},{"k":"m","m":0,"s":{"p":["*%_"],"r":"Bool"},"n":"print-nl"},{"k":"m","m":1,"n":"slurp-rest","s":{"p":[":$bin! where { ... }",":$close","*%_"],"r":"Buf:D"}},{"s":{"r":"Str:D","p":[":$enc",":$bin",":$close","*%_"]},"n":"slurp-rest","k":"m","m":1},{"s":{"p":[":$close",":$bin","*%_"],"r":"Mu"},"n":"slurp","m":0,"k":"m"},{"k":"m","m":1,"s":{"r":"Mu","p":["Blob $data",":$close","*%_"]},"n":"spurt"},{"m":1,"k":"m","s":{"p":["Cool $data",":$close","*%_"],"r":"Mu"},"n":"spurt"},{"m":0,"k":"m","n":"path","s":{"r":"Mu","p":["*%_"]}},{"s":{"r":"Mu","p":["*%_"]},"n":"IO","m":0,"k":"m"},{"n":"flush","s":{"p":["*%_"],"r":"Bool"},"m":0,"k":"m"},{"m":1,"k":"m","s":{"r":"Mu","p":["*%_"]},"n":"encoding"},{"m":1,"k":"m","s":{"r":"Mu","p":["$new-encoding is copy",":$replacement",":$strict","Bool:D :$translate-nl = Bool::True","*%_"]},"n":"encoding"},{"m":0,"k":"s","s":{"p":["*%_"],"r":"Mu"},"n":"DESTROY"},{"k":"m","m":0,"n":"native-descriptor","s":{"p":["*%_"],"r":"Mu"}},{"n":"Supply","s":{"r":"Mu","p":["*%_"]},"m":1,"k":"m"},{"k":"m","m":1,"s":{"r":"Supply:D","p":[":$size = { ... }","*%_"]},"n":"Supply"},{"s":{"p":["*%_"],"r":"Mu"},"n":"say","m":1,"k":"m"},{"n":"say","s":{"p":["Str:D $x","*%_"],"r":"Bool"},"k":"m","m":1},{"k":"m","m":1,"s":{"p":["\\x","*%_"],"r":"Bool"},"n":"say"},{"n":"say","s":{"r":"Mu","p":["|"]},"k":"m","m":1},{"m":1,"k":"m","n":"Str","s":{"r":"Mu","p":["*%_"]}},{"s":{"p":["*%_"],"r":"Mu"},"n":"Str","m":1,"k":"m"},{"n":"Str","s":{"r":"Mu","p":["*%_"]},"k":"m","m":1},{"s":{"r":"Mu","p":["*%_"]},"n":"gist","m":1,"k":"m"},{"m":1,"k":"m","n":"gist","s":{"r":"Mu","p":["*%_"]}},{"m":1,"k":"m","s":{"p":["*%_"],"r":"Mu"},"n":"gist"},{"k":"m","m":0,"n":"chomp","s":{"r":"Mu","p":["*%_"]}},{"m":0,"k":"m","s":{"p":["*%_"],"r":"Mu"},"n":"nl-out"},{"k":"s","m":0,"s":{"p":["@auto","%init","*%_"],"r":"Mu"},"n":"BUILDALL"},{"m":0,"k":"m","n":"!slurp-all-chars","s":{"p":["*%_"],"r":"Mu"}},{"s":{"r":"Mu","p":["$buffer is copy","*%_"]},"n":"!set-out-buffer-size","m":0,"k":"m"},{"n":"!get-line-slow-path","s":{"r":"Mu","p":["*%_"]},"k":"m","m":0},{"m":0,"k":"m","s":{"r":"Mu","p":["$close","*%_"]},"n":"!LINES-ITERATOR"},{"s":{"p":["*%_"],"r":"Mu"},"n":"!close-all-open-handles","k":"m","m":0},{"n":"!forget-about-closing","s":{"p":["int $fileno","*%_"],"r":"Nil"},"m":0,"k":"m"},{"k":"m","m":0,"n":"!remember-to-close","s":{"p":["*%_"],"r":"Nil"}},{"s":{"p":["$bytes","*%_"],"r":"Mu"},"n":"!read-slow-path","k":"m","m":0},{"k":"m","m":0,"s":{"r":"Mu","p":["$chars","*%_"]},"n":"!readchars-slow-path"}],"k":"c","b":"A","a":[{"t":"Mu","n":"$.path","k":"v"},{"k":"v","n":"$!PIO","t":"Mu"},{"k":"v","t":"Mu","n":"$.chomp"},{"n":"$.nl-in","t":"Mu","k":"v"},{"t":"Str:D","n":"$.nl-out","k":"v"},{"n":"$.encoding","t":"Str","k":"v"},{"k":"v","n":"$!decoder","t":"Encoding::Decoder"},{"t":"Encoding::Encoder","n":"$!encoder","k":"v"},{"n":"$!out-buffer","t":"int","k":"v"}],"t":"IO::Handle","n":"IO::Handle"},{"n":"IO::Spec","t":"IO::Spec","b":"A","m":[{"s":{"r":"Mu","p":["*%_"]},"n":"select","m":1,"k":"m"},{"k":"m","m":1,"n":"select","s":{"p":["$token","*%_"],"r":"Mu"}},{"k":"s","m":0,"s":{"p":["@auto","%init","*%_"],"r":"Mu"},"n":"BUILDALL"}],"k":"c","d":"TITLE\nclass IO::Spec\n\nSUBTITLE\nPlatform specific operations on file and directory paths\n\n    class IO::Spec { }\n\nObjects of this class are not used directly but as a sub-class specific to\nthe platform perl is running on via the $*SPEC variable which will contain\nan object of the appropriate type.\n\nThe sub-classes are documented separately, with the platform-specific\ndifferences documented in IO::Spec::Cygwin, IO::Spec::QNX, IO::Spec::Unix\nand IO::Spec::Win32.\n\nNOTE: the IO::Spec::* classes provide low-level path operations. Unless\nyou're creating your own high-level path manipulation routines, you don't\nneed to use IO::Spec::*. Use IO::Path instead.\n\nNOTE2: no special validation is done by these classes (e.g. check whether\npath contains a null character). It is the job of higher-level classes,\nlike IO::Path, to do that.\n\n"},{"b":"A","m":[{"s":{"p":["$patharg",":$parent","*%_"],"r":"Mu"},"n":"canonpath","k":"m","m":0},{"n":"catdir","s":{"p":["*@dirs","*%_"],"r":"Mu"},"k":"m","m":0},{"n":"dir-sep","s":{"r":"Mu","p":["*%_"]},"m":0,"k":"m"},{"n":"devnull","s":{"p":["*%_"],"r":"Mu"},"k":"m","m":0},{"s":{"r":"Mu","p":["*%_"]},"n":"rootdir","m":0,"k":"m"},{"m":0,"k":"m","s":{"r":"Mu","p":["Cool:D $path","*%_"]},"n":"splitdir"},{"k":"m","m":0,"s":{"r":"Mu","p":["\\path","*%_"]},"n":"basename"},{"n":"tmpdir","s":{"r":"Mu","p":["*%_"]},"m":0,"k":"m"},{"n":"path","s":{"p":["*%_"],"r":"Mu"},"m":0,"k":"m"},{"s":{"p":["$path","*%_"],"r":"Mu"},"n":"is-absolute","m":0,"k":"m"},{"k":"m","m":0,"n":"split","s":{"p":["Cool:D $path is copy","*%_"],"r":"Mu"}},{"n":"join","s":{"r":"Mu","p":["Str \\vol","Str $dir is copy","Str $file is copy","*%_"]},"m":0,"k":"m"},{"n":"splitpath","s":{"r":"Mu","p":["$path",":$nofile = Bool::False","*%_"]},"m":0,"k":"m"},{"n":"catpath","s":{"r":"Mu","p":["Str $vol is copy","Str \\dir","Str \\file","*%_"]},"k":"m","m":0},{"k":"m","m":0,"n":"rel2abs","s":{"r":"Mu","p":["$path is copy","$base? is copy",":$omit-volume","*%_"]}},{"k":"s","m":0,"n":"BUILDALL","s":{"p":["@auto","%init","*%_"],"r":"Mu"}},{"n":"catpath","s":{"r":"Mu","p":["$","\\dirname","\\file","*%_"]},"m":0,"k":"m"},{"s":{"r":"Mu","p":["*%_"]},"n":"updir","k":"m","m":0},{"s":{"r":"Mu","p":["*%_"]},"n":"path","k":"m","m":0},{"k":"m","m":0,"n":"splitdir","s":{"p":["Cool:D $path","*%_"],"r":"Mu"}},{"k":"m","m":0,"n":"curupdir","s":{"r":"Mu","p":["*%_"]}},{"k":"m","m":0,"n":"join","s":{"r":"Mu","p":["$","\\dir","\\file","*%_"]}},{"n":"extension","s":{"p":["\\path","*%_"],"r":"Mu"},"k":"m","m":0},{"k":"m","m":0,"s":{"r":"Mu","p":["*%_"]},"n":"curdir"},{"m":0,"k":"m","s":{"r":"Mu","p":["*%_"]},"n":"tmpdir"},{"k":"m","m":0,"n":"rel2abs","s":{"r":"Mu","p":["\\path","$base? is copy","*%_"]}},{"s":{"r":"Mu","p":["*@parts","*%_"]},"n":"catdir","k":"m","m":0},{"n":"split","s":{"p":["Cool:D $path","*%_"],"r":"Mu"},"k":"m","m":0},{"k":"m","m":0,"n":"abs2rel","s":{"r":"Mu","p":["$path is copy","$base is copy = { ... }","*%_"]}},{"s":{"r":"Mu","p":["\\path","*%_"]},"n":"basename","k":"m","m":0},{"m":0,"k":"m","n":"splitpath","s":{"r":"Mu","p":["$path",":$nofile = Bool::False","*%_"]}},{"s":{"r":"Mu","p":["\\path","*%_"]},"n":"is-absolute","k":"m","m":0},{"k":"m","m":0,"n":"devnull","s":{"p":["*%_"],"r":"Mu"}},{"k":"m","m":0,"s":{"p":["*%_"],"r":"Mu"},"n":"dir-sep"},{"k":"m","m":0,"s":{"r":"Mu","p":["*%_"]},"n":"rootdir"},{"m":0,"k":"m","n":"canonpath","s":{"r":"Str:D","p":["$patharg",":$parent","*%_"]}},{"n":"catfile","s":{"r":"Mu","p":["|c is raw"]},"k":"m","m":0},{"n":"BUILDALL","s":{"p":["@auto","%init","*%_"],"r":"Mu"},"m":0,"k":"s"},{"m":1,"k":"m","s":{"r":"Mu","p":["*%_"]},"n":"select"},{"n":"select","s":{"p":["$token","*%_"],"r":"Mu"},"m":1,"k":"m"},{"s":{"p":["@auto","%init","*%_"],"r":"Mu"},"n":"BUILDALL","k":"s","m":0},{"n":"!canon-cat","s":{"p":["$first","*@rest",":$parent","*%_"],"r":"Str:D"},"k":"m","m":0}],"k":"c","d":"TITLE\nclass IO::Spec::Win32\n\nSUBTITLE\nPlatform specific operations on file and directory paths for Windows\n\n    class IO::Spec::Win32 is IO::Spec { }\n\nObjects of this class are used not directly but as a sub-class specific to\nthe platform Raku is running on via the $*SPEC variable, which will contain\nan object of the appropriate type.\n\nNOTE: the IO::Spec::* classes provide low-level path operations. Unless\nyou're creating your own high-level path manipulation routines, you don't\nneed to use IO::Spec::*. Use IO::Path instead.\n\nNOTE2: no special validation is done by these classes (e.g. check whether\npath contains a null character). It is the job of higher-level classes,\nlike IO::Path, to do that.\n\n","n":"IO::Spec::Win32","t":"IO::Spec::Win32"},{"d":"TITLE\nclass IO::Spec::Cygwin\n\nSUBTITLE\nPlatform specific operations on file and directory paths for Cygwin\n\n    class IO::Spec::QNX is IO::Spec { }\n\nThis sub-class of IO::Spec will be available from the $*SPEC variable for a\nperl running on Cygwin .\n\nNOTE: the IO::Spec::* classes provide low-level path operations. Unless\nyou're creating your own high-level path manipulation routines, you don't\nneed to use IO::Spec::*. Use IO::Path instead.\n\nNOTE2: no special validation is done by these classes (e.g. check whether\npath contains a null character). It is the job of higher-level classes,\nlike IO::Path, to do that.\n\n","b":"A","m":[{"s":{"p":["$patharg",":$parent","*%_"],"r":"Mu"},"n":"canonpath","m":0,"k":"m"},{"n":"catdir","s":{"r":"Mu","p":["*@paths","*%_"]},"k":"m","m":0},{"n":"is-absolute","s":{"p":["$path","*%_"],"r":"Mu"},"k":"m","m":0},{"n":"tmpdir","s":{"p":["*%_"],"r":"Mu"},"m":0,"k":"m"},{"s":{"r":"Mu","p":["|c is raw"]},"n":"abs2rel","k":"m","m":0},{"k":"m","m":0,"n":"rel2abs","s":{"r":"Mu","p":["|c is raw"]}},{"k":"m","m":0,"n":"splitpath","s":{"p":["|c is raw"],"r":"Mu"}},{"k":"m","m":0,"n":"catpath","s":{"p":["|c is raw"],"r":"Mu"}},{"s":{"p":["Cool:D $path","*%_"],"r":"Mu"},"n":"split","k":"m","m":0},{"k":"m","m":0,"n":"join","s":{"r":"Mu","p":["|c is raw"]}},{"n":"BUILDALL","s":{"p":["@auto","%init","*%_"],"r":"Mu"},"m":0,"k":"s"},{"s":{"p":["$","\\dirname","\\file","*%_"],"r":"Mu"},"n":"catpath","m":0,"k":"m"},{"m":0,"k":"m","n":"updir","s":{"r":"Mu","p":["*%_"]}},{"n":"path","s":{"r":"Mu","p":["*%_"]},"k":"m","m":0},{"m":0,"k":"m","s":{"p":["Cool:D $path","*%_"],"r":"Mu"},"n":"splitdir"},{"n":"curupdir","s":{"r":"Mu","p":["*%_"]},"k":"m","m":0},{"n":"join","s":{"p":["$","\\dir","\\file","*%_"],"r":"Mu"},"k":"m","m":0},{"m":0,"k":"m","n":"extension","s":{"r":"Mu","p":["\\path","*%_"]}},{"m":0,"k":"m","s":{"p":["*%_"],"r":"Mu"},"n":"curdir"},{"m":0,"k":"m","s":{"r":"Mu","p":["*%_"]},"n":"tmpdir"},{"m":0,"k":"m","s":{"p":["\\path","$base? is copy","*%_"],"r":"Mu"},"n":"rel2abs"},{"m":0,"k":"m","s":{"r":"Mu","p":["*@parts","*%_"]},"n":"catdir"},{"k":"m","m":0,"s":{"r":"Mu","p":["Cool:D $path","*%_"]},"n":"split"},{"m":0,"k":"m","n":"abs2rel","s":{"r":"Mu","p":["$path is copy","$base is copy = { ... }","*%_"]}},{"m":0,"k":"m","n":"basename","s":{"r":"Mu","p":["\\path","*%_"]}},{"m":0,"k":"m","s":{"p":["$path",":$nofile = Bool::False","*%_"],"r":"Mu"},"n":"splitpath"},{"m":0,"k":"m","s":{"p":["\\path","*%_"],"r":"Mu"},"n":"is-absolute"},{"s":{"p":["*%_"],"r":"Mu"},"n":"devnull","m":0,"k":"m"},{"n":"dir-sep","s":{"r":"Mu","p":["*%_"]},"k":"m","m":0},{"s":{"r":"Mu","p":["*%_"]},"n":"rootdir","m":0,"k":"m"},{"m":0,"k":"m","n":"canonpath","s":{"r":"Str:D","p":["$patharg",":$parent","*%_"]}},{"n":"catfile","s":{"p":["|c is raw"],"r":"Mu"},"k":"m","m":0},{"s":{"r":"Mu","p":["@auto","%init","*%_"]},"n":"BUILDALL","m":0,"k":"s"},{"n":"select","s":{"r":"Mu","p":["*%_"]},"k":"m","m":1},{"k":"m","m":1,"s":{"p":["$token","*%_"],"r":"Mu"},"n":"select"},{"k":"s","m":0,"s":{"p":["@auto","%init","*%_"],"r":"Mu"},"n":"BUILDALL"}],"k":"c","t":"IO::Spec::Cygwin","n":"IO::Spec::Cygwin"},{"n":"IO::Spec::QNX","t":"IO::Spec::QNX","b":"A","k":"c","m":[{"k":"m","m":0,"s":{"r":"Mu","p":["$patharg",":$parent","*%_"]},"n":"canonpath"},{"n":"BUILDALL","s":{"p":["@auto","%init","*%_"],"r":"Mu"},"k":"s","m":0},{"k":"m","m":0,"s":{"p":["$","\\dirname","\\file","*%_"],"r":"Mu"},"n":"catpath"},{"k":"m","m":0,"s":{"p":["*%_"],"r":"Mu"},"n":"updir"},{"m":0,"k":"m","n":"path","s":{"p":["*%_"],"r":"Mu"}},{"m":0,"k":"m","n":"splitdir","s":{"p":["Cool:D $path","*%_"],"r":"Mu"}},{"n":"curupdir","s":{"p":["*%_"],"r":"Mu"},"k":"m","m":0},{"n":"join","s":{"r":"Mu","p":["$","\\dir","\\file","*%_"]},"k":"m","m":0},{"n":"extension","s":{"r":"Mu","p":["\\path","*%_"]},"k":"m","m":0},{"s":{"r":"Mu","p":["*%_"]},"n":"curdir","k":"m","m":0},{"k":"m","m":0,"s":{"r":"Mu","p":["*%_"]},"n":"tmpdir"},{"m":0,"k":"m","s":{"p":["\\path","$base? is copy","*%_"],"r":"Mu"},"n":"rel2abs"},{"k":"m","m":0,"s":{"r":"Mu","p":["*@parts","*%_"]},"n":"catdir"},{"k":"m","m":0,"s":{"r":"Mu","p":["Cool:D $path","*%_"]},"n":"split"},{"s":{"p":["$path is copy","$base is copy = { ... }","*%_"],"r":"Mu"},"n":"abs2rel","m":0,"k":"m"},{"n":"basename","s":{"p":["\\path","*%_"],"r":"Mu"},"m":0,"k":"m"},{"n":"splitpath","s":{"p":["$path",":$nofile = Bool::False","*%_"],"r":"Mu"},"k":"m","m":0},{"m":0,"k":"m","n":"is-absolute","s":{"p":["\\path","*%_"],"r":"Mu"}},{"s":{"p":["*%_"],"r":"Mu"},"n":"devnull","m":0,"k":"m"},{"n":"dir-sep","s":{"r":"Mu","p":["*%_"]},"m":0,"k":"m"},{"s":{"r":"Mu","p":["*%_"]},"n":"rootdir","m":0,"k":"m"},{"k":"m","m":0,"n":"canonpath","s":{"r":"Str:D","p":["$patharg",":$parent","*%_"]}},{"k":"m","m":0,"n":"catfile","s":{"p":["|c is raw"],"r":"Mu"}},{"s":{"r":"Mu","p":["@auto","%init","*%_"]},"n":"BUILDALL","k":"s","m":0},{"m":1,"k":"m","s":{"r":"Mu","p":["*%_"]},"n":"select"},{"m":1,"k":"m","n":"select","s":{"p":["$token","*%_"],"r":"Mu"}},{"n":"BUILDALL","s":{"r":"Mu","p":["@auto","%init","*%_"]},"m":0,"k":"s"}],"d":"TITLE\nclass IO::Spec::QNX\n\nSUBTITLE\nPlatform specific operations on file and directory paths QNX\n\n    class IO::Spec::QNX is IO::Spec { }\n\nThis sub-class of IO::Spec specific to QNX will be available via $*SPEC if\nthe perl is running on QNX.\n\nNOTE: the IO::Spec::* classes provide low-level path operations. Unless\nyou're creating your own high-level path manipulation routines, you don't\nneed to use IO::Spec::*. Use IO::Path instead.\n\nNOTE2: no special validation is done by these classes (e.g. check whether\npath contains a null character). It is the job of higher-level classes,\nlike IO::Path, to do that.\n\n"},{"k":"c","m":[{"m":0,"k":"m","n":"canonpath","s":{"r":"Str:D","p":["$patharg",":$parent","*%_"]}},{"n":"dir-sep","s":{"r":"Mu","p":["*%_"]},"k":"m","m":0},{"m":0,"k":"m","s":{"r":"Mu","p":["*%_"]},"n":"curdir"},{"s":{"r":"Mu","p":["*%_"]},"n":"updir","m":0,"k":"m"},{"m":0,"k":"m","n":"curupdir","s":{"p":["*%_"],"r":"Mu"}},{"k":"m","m":0,"s":{"p":["*%_"],"r":"Mu"},"n":"rootdir"},{"s":{"r":"Mu","p":["*%_"]},"n":"devnull","m":0,"k":"m"},{"m":0,"k":"m","n":"basename","s":{"r":"Mu","p":["\\path","*%_"]}},{"m":0,"k":"m","s":{"p":["\\path","*%_"],"r":"Mu"},"n":"extension"},{"k":"m","m":0,"s":{"r":"Mu","p":["*%_"]},"n":"tmpdir"},{"m":0,"k":"m","s":{"p":["\\path","*%_"],"r":"Mu"},"n":"is-absolute"},{"n":"path","s":{"p":["*%_"],"r":"Mu"},"k":"m","m":0},{"k":"m","m":0,"n":"splitpath","s":{"p":["$path",":$nofile = Bool::False","*%_"],"r":"Mu"}},{"s":{"r":"Mu","p":["Cool:D $path","*%_"]},"n":"split","m":0,"k":"m"},{"k":"m","m":0,"n":"join","s":{"r":"Mu","p":["$","\\dir","\\file","*%_"]}},{"k":"m","m":0,"s":{"r":"Mu","p":["$","\\dirname","\\file","*%_"]},"n":"catpath"},{"k":"m","m":0,"n":"catdir","s":{"p":["*@parts","*%_"],"r":"Mu"}},{"k":"m","m":0,"n":"splitdir","s":{"p":["Cool:D $path","*%_"],"r":"Mu"}},{"n":"catfile","s":{"p":["|c is raw"],"r":"Mu"},"m":0,"k":"m"},{"n":"abs2rel","s":{"r":"Mu","p":["$path is copy","$base is copy = { ... }","*%_"]},"m":0,"k":"m"},{"m":0,"k":"m","s":{"p":["\\path","$base? is copy","*%_"],"r":"Mu"},"n":"rel2abs"},{"n":"BUILDALL","s":{"r":"Mu","p":["@auto","%init","*%_"]},"m":0,"k":"s"},{"n":"select","s":{"r":"Mu","p":["*%_"]},"m":1,"k":"m"},{"n":"select","s":{"p":["$token","*%_"],"r":"Mu"},"k":"m","m":1},{"s":{"r":"Mu","p":["@auto","%init","*%_"]},"n":"BUILDALL","k":"s","m":0}],"b":"A","d":"TITLE\nclass IO::Spec::Unix\n\nSUBTITLE\nPlatform specific operations on file and directory paths for POSIX\n\n    class IO::Spec::Unix is IO::Spec  { }\n\nOn object of this type is available via the variable $*SPEC if the Raku\ninterpreter is running on a Unix-like platform.\n\nThe IO::Spec::* classes provide low-level path operations. Unless you're\ncreating your own high-level path manipulation routines, you don't need to\nuse IO::Spec::*. Use IO::Path instead.\n\nBeware that no special validation is done by these classes (e.g. check\nwhether path contains a null character). It is the job of higher-level\nclasses, like IO::Path, to do that.\n\n","n":"IO::Spec::Unix","t":"IO::Spec::Unix"},{"b":"A","m":[{"m":0,"k":"m","n":"watch-path","s":{"p":["$path",":$scheduler = { ... }","*%_"],"r":"Mu"}},{"k":"s","m":0,"n":"BUILDALL","s":{"p":["@auto","%init","*%_"],"r":"Mu"}}],"k":"c","d":"TITLE\nclass IO::Notification\n\nSUBTITLE\nAsynchronous notification for file and directory changes    \n\n    enum FileChangeEvent (:FileChanged(1), :FileRenamed(2));\n\n\n    class IO::Notification  {\n        class Change {\n            has $.path;\n            has $.event;\n        }\n        ...\n    }\n\n\nIO::Notification.watch-path($path) produces a Supply of\nIO::Notification::Change events for a file or directory.\n\nHere is a small example that prints the first ten FileChanged-notifications\nfor the current working directory:\n\n    my $finish = Promise.new;\n    my $count = 0;\n    IO::Notification.watch-path($*CWD).act( -> $change {\n        $count++ if $change.event ~~ FileChanged;\n        say \"($count) $change.path(): $change.event()\";\n        $finish.keep if $count >= 10;\n    });\n    await $finish;\n\n\nThe type of the change is very much dependent both on the platform and on\nspecific system calls that were used initiate the change. At this point in\ntime you should not rely on the type of change in general, and test your\nparticular situation.\n\n","n":"IO::Notification","t":"IO::Notification"},{"n":"IO::Notification::Change","t":"IO::Notification::Change","b":"A","a":[{"n":"$.path","t":"Mu","k":"v"},{"k":"v","t":"Mu","n":"$.event"}],"m":[{"k":"m","m":0,"s":{"p":["*%_"],"r":"Mu"},"n":"IO"},{"s":{"p":["*%_"],"r":"Mu"},"n":"gist","k":"m","m":1},{"k":"m","m":1,"n":"gist","s":{"p":["*%_"],"r":"Mu"}},{"n":"gist","s":{"r":"Mu","p":["*%_"]},"k":"m","m":1},{"s":{"p":["*%_"],"r":"Mu"},"n":"path","m":0,"k":"m"},{"n":"event","s":{"r":"Mu","p":["*%_"]},"m":0,"k":"m"},{"s":{"p":["@auto","%init","*%_"],"r":"Mu"},"n":"BUILDALL","k":"s","m":0}],"k":"c"},{"d":"TITLE\nclass IO::Special\n\nSUBTITLE\nPath to special I/O device\n\n    class IO::Special does IO { }\n\n\nUsed as a $.path attribute in filehandles for special standard input $*IN\nand output $*OUT and $*ERR. Provides a bridged interface of IO::Handle,\nmostly file tests and stringification.\n\n","m":[{"s":{"p":["Str:D \\what","*%_"],"r":"IO::Special:D"},"n":"new","m":0,"k":"m"},{"n":"IO","s":{"r":"IO::Special:D","p":["*%_"]},"m":0,"k":"m"},{"k":"m","m":0,"n":"e","s":{"p":["*%_"],"r":"Bool"}},{"k":"m","m":0,"n":"d","s":{"p":["*%_"],"r":"Bool"}},{"n":"f","s":{"r":"Bool","p":["*%_"]},"m":0,"k":"m"},{"m":0,"k":"m","n":"s","s":{"p":["*%_"],"r":"Int"}},{"m":0,"k":"m","s":{"p":["*%_"],"r":"Bool"},"n":"l"},{"s":{"r":"Bool:D","p":["*%_"]},"n":"r","k":"m","m":0},{"n":"w","s":{"r":"Bool:D","p":["*%_"]},"k":"m","m":0},{"m":0,"k":"m","s":{"r":"Bool","p":["*%_"]},"n":"x"},{"m":0,"k":"m","s":{"r":"Instant","p":["*%_"]},"n":"modified"},{"s":{"r":"Instant","p":["*%_"]},"n":"accessed","m":0,"k":"m"},{"k":"m","m":0,"s":{"r":"Instant","p":["*%_"]},"n":"changed"},{"n":"mode","s":{"p":["*%_"],"r":"Nil"},"m":0,"k":"m"},{"s":{"r":"ValueObjAt:D","p":["*%_"]},"n":"WHICH","m":1,"k":"m"},{"m":1,"k":"m","n":"WHICH","s":{"p":["*%_"],"r":"ObjAt:D"}},{"m":1,"k":"m","s":{"r":"ValueObjAt","p":["*%_"]},"n":"WHICH"},{"k":"m","m":1,"s":{"r":"Mu","p":["*%_"]},"n":"Str"},{"m":1,"k":"m","n":"Str","s":{"r":"Mu","p":["*%_"]}},{"s":{"r":"Mu","p":["*%_"]},"n":"Str","m":1,"k":"m"},{"m":1,"k":"m","s":{"p":["*%_"],"r":"Mu"},"n":"perl"},{"k":"m","m":1,"s":{"p":["*%_"],"r":"Mu"},"n":"perl"},{"s":{"p":["*%_"],"r":"Mu"},"n":"perl","k":"m","m":1},{"n":"what","s":{"p":["*%_"],"r":"Mu"},"m":0,"k":"m"},{"n":"BUILDALL","s":{"p":["@auto","%init","*%_"],"r":"Mu"},"m":0,"k":"s"}],"k":"c","a":[{"k":"v","n":"$.what","t":"Str"}],"b":"A","t":"IO::Special","n":"IO::Special"},{"k":"ro","m":[{"m":0,"k":"m","s":{"r":"Mu","p":["Cool $limit? is copy",":$bin","*%_"]},"n":"recv"},{"m":0,"k":"m","n":"read","s":{"r":"Mu","p":["Int(Cool) $bufsize","*%_"]}},{"k":"m","m":0,"s":{"p":["*%_"],"r":"Mu"},"n":"nl-in"},{"k":"m","m":0,"n":"get","s":{"r":"Mu","p":["*%_"]}},{"n":"lines","s":{"p":["*%_"],"r":"Mu"},"m":0,"k":"m"},{"n":"print","s":{"p":["Str(Cool) $string","*%_"],"r":"Bool"},"m":0,"k":"m"},{"s":{"p":["Str(Cool) $string","*%_"],"r":"Bool"},"n":"put","k":"m","m":0},{"k":"m","m":0,"s":{"p":["Blob:D $buf","*%_"],"r":"Bool"},"n":"write"},{"s":{"p":["*%_"],"r":"Bool"},"n":"close","m":0,"k":"m"},{"s":{"p":["*%_"],"r":"Mu"},"n":"native-descriptor","k":"m","m":0},{"k":"m","m":0,"s":{"r":"Nil","p":["*%_"]},"n":"!ensure-coders"}],"a":[{"k":"v","t":"Mu","n":"$!PIO"},{"k":"v","t":"Str","n":"$.encoding"},{"n":"$.nl-in","t":"Mu","k":"v"},{"t":"Str:D","n":"$.nl-out","k":"v"},{"k":"v","t":"Encoding::Decoder","n":"$!decoder"},{"t":"Encoding::Encoder","n":"$!encoder","k":"v"}],"b":"C","d":"TITLE\nrole IO::Socket\n\nSUBTITLE\nNetwork socket\n\n    role IO::Socket { ... }\n\nIO::Socket contains read and write methods for sockets. It is usually used\nthrough IO::Socket::INET.\n\n","n":"IO::Socket","t":"IO::Socket"},{"a":[{"n":"$!VMIO","t":"Mu","k":"v"},{"t":"int","n":"$!udp","k":"v"},{"k":"v","t":"Mu","n":"$.enc"},{"k":"v","t":"Mu","n":"$!encoder"},{"n":"$!close-promise","t":"Mu","k":"v"},{"t":"Mu","n":"$!close-vow","k":"v"},{"k":"v","n":"$.peer-host","t":"Str"},{"n":"$.peer-port","t":"IO::Socket::Async::Port-Number","k":"v"},{"n":"$.socket-host","t":"Str","k":"v"},{"k":"v","n":"$.socket-port","t":"IO::Socket::Async::Port-Number"}],"b":"A","m":[{"k":"m","m":0,"s":{"p":["*%_"],"r":"Mu"},"n":"new"},{"s":{"p":["$str",":$scheduler = { ... }","*%_"],"r":"Mu"},"n":"print","k":"m","m":0},{"m":0,"k":"m","n":"write","s":{"p":["Blob $b",":$scheduler = { ... }","*%_"],"r":"Mu"}},{"s":{"p":["*%_"],"r":"Bool"},"n":"close","m":0,"k":"m"},{"m":0,"k":"m","s":{"p":["$host","$port where { ... }",":$enc = \"utf-8\"",":$scheduler = { ... }","*%_"],"r":"Mu"},"n":"connect"},{"k":"m","m":0,"n":"listen","s":{"p":["$host","$port where { ... }","$backlog = 128",":$enc = \"utf-8\"",":$scheduler = { ... }","*%_"],"r":"Mu"}},{"k":"m","m":0,"s":{"r":"Int","p":["*%_"]},"n":"native-descriptor"},{"m":0,"k":"m","s":{"p":[":$broadcast",":$enc = \"utf-8\"",":$scheduler = { ... }","*%_"],"r":"Mu"},"n":"udp"},{"k":"m","m":0,"n":"bind-udp","s":{"p":["$host","$port where { ... }",":$broadcast",":$enc = \"utf-8\"",":$scheduler = { ... }","*%_"],"r":"Mu"}},{"s":{"p":["$host","$port where { ... }","$str",":$scheduler = { ... }","*%_"],"r":"Mu"},"n":"print-to","k":"m","m":0},{"n":"write-to","s":{"r":"Mu","p":["$host","$port where { ... }","Blob $b",":$scheduler = { ... }","*%_"]},"m":0,"k":"m"},{"k":"m","m":1,"n":"Supply","s":{"r":"Mu","p":["*%_"]}},{"n":"Supply","s":{"p":[":$bin",":$buf = { ... }",":$datagram",":$enc",":$scheduler = { ... }","*%_"],"r":"Mu"},"k":"m","m":1},{"m":0,"k":"m","s":{"p":["*%_"],"r":"Mu"},"n":"enc"},{"m":0,"k":"m","n":"peer-host","s":{"p":["*%_"],"r":"Mu"}},{"s":{"p":["*%_"],"r":"Mu"},"n":"peer-port","m":0,"k":"m"},{"n":"socket-host","s":{"r":"Mu","p":["*%_"]},"m":0,"k":"m"},{"k":"m","m":0,"s":{"p":["*%_"],"r":"Mu"},"n":"socket-port"},{"m":0,"k":"s","n":"BUILDALL","s":{"r":"Mu","p":["@auto","%init","*%_"]}}],"k":"c","d":"TITLE\nclass IO::Socket::Async\n\nSUBTITLE\nAsynchronous socket in TCP or UDP\n\n    class IO::Socket::Async {}\n\nIO::Socket::Async|/type/IO::Socket::Async provides asynchronous sockets,\nfor both the server and the client side.\n\nHere is a simple example of a simple \"hello world\" HTTP server that listens\non port 3333:\n\n    react {\n        whenever IO::Socket::Async.listen('0.0.0.0', 3333) -> $conn {\n            whenever $conn.Supply.lines -> $line {\n                $conn.print: qq:heredoc/END/;\n                    HTTP/1.1 200 OK\n                    Content-Type: text/html; charset=UTF-8\n                    Content-Encoding: UTF-8\n\n                    <html>\n                    <body>\n                        <h1>Hello World!</h1>\n                        <p>{ $line }</p>\n                    </body>\n                    </html>\n                    END\n                $conn.close;\n            }\n        }\n        CATCH {\n            default {\n                say .^name, ': ', .Str;\n                say \"handled in $?LINE\";\n            }\n        }\n    }\n\n\nAnd a client that connects to it, and prints out what the server answers:\n\n    await IO::Socket::Async.connect('127.0.0.1', 3333).then( -> $promise {\n        given $promise.result {\n            .print(\"Lorem ipsum dolor sit amet, consectetur adipiscing elit.\\n\");\n            react {\n                whenever .Supply() -> $v {\n                    $v.print;\n                    done;\n                }\n            }\n            .close;\n        }\n    });\n\n\nIO::Socket::Async can also send and receive UDP messages An example server\nthat outputs all the data it receives would be:\n\n    my $socket = IO::Socket::Async.bind-udp('localhost', 3333);\n\n    react {\n        whenever $socket.Supply -> $v {\n            if $v.chars > 0 {\n                say $v;\n            }\n        }\n    }\n\n\nAnd an associated client might be:\n\n    my $socket = IO::Socket::Async.udp();\n    await $socket.print-to('localhost', 3333, \"Hello, Raku!\");\n\n\nThe CATCH phaser can be included to deal specifically with problems that\nmight occur in this kind of sockets, such as a port being already taken:\n\n    react {\n        whenever IO::Socket::Async.listen('0.0.0.0', 3000) -> $conn {\n            whenever $conn.Supply.lines -> $line {\n                $conn.print: qq:heredoc/END/;\n                    HTTP/1.1 200 OK\n                    Content-Type: text/html; charset=UTF-8\n                    Content-Encoding: UTF-8\n\n                    <html>\n                    <body>\n                        <h1>Hello World!</h1>\n                        <p>{ $line }</p>\n                    </body>\n                    </html>\n                    END\n                $conn.close;\n            }\n            QUIT {\n                default {\n                    say .^name, '→ ', .Str;\n                    say \"handled in line $?LINE\";\n                }\n            }\n        }\n\n    }\n    # Will print this, if address 3000 is already in use:\n    # X::AdHoc→ address already in use\n    # handled in 23\n\n\nMain difference with using other phasers such as CATCH is that this kind of\nexception will be caught within the whenever block and will put exiting the\nprogram, or not, under your control.\n\n","n":"IO::Socket::Async","t":"IO::Socket::Async"},{"b":"A","a":[{"k":"v","t":"Promise","n":"$!VMIO-tobe"},{"n":"$.socket-host","t":"Promise","k":"v"},{"k":"v","n":"$.socket-port","t":"Promise"},{"t":"Callable","n":"&!on-close","k":"v"}],"k":"c","m":[{"m":0,"k":"s","n":"TWEAK","s":{"p":["Promise :VMIO-tobe($!VMIO-tobe)","Promise :socket-host($!socket-host)","Promise :socket-port($!socket-port)","*%_"],"r":"Mu"}},{"k":"m","m":0,"n":"new","s":{"r":"Mu","p":["&on-close","Promise :$VMIO-tobe","Promise :$socket-host","Promise :$socket-port","*%_"]}},{"m":0,"k":"m","s":{"r":"Int","p":["*%_"]},"n":"native-descriptor"},{"s":{"p":["*%_"],"r":"Mu"},"n":"socket-host","k":"m","m":0},{"k":"m","m":0,"n":"socket-port","s":{"p":["*%_"],"r":"Mu"}},{"k":"s","m":0,"s":{"p":["@auto","%init","*%_"],"r":"Mu"},"n":"BUILDALL"},{"s":{"p":["*%_"],"r":"Bool"},"n":"close","m":0,"k":"m"},{"n":"new","s":{"p":["*%attrinit"],"r":"Mu"},"m":1,"k":"m"},{"n":"new","s":{"p":["$","*@","*%_"],"r":"Mu"},"k":"m","m":1},{"m":1,"k":"m","s":{"r":"Tap:D","p":["*%_"]},"n":"new"},{"m":1,"k":"m","s":{"p":["&on-close","*%_"],"r":"Tap:D"},"n":"new"},{"n":"BUILD","s":{"p":[":on-close(&!on-close)","*%_"],"r":"Nil"},"m":0,"k":"s"},{"k":"s","m":0,"s":{"p":["@auto","%init","*%_"],"r":"Mu"},"n":"BUILDALL"}],"t":"IO::Socket::Async::ListenSocket","n":"IO::Socket::Async::ListenSocket"},{"k":"ss","t":"Int","n":"IO::Socket::Async::Port-Number"},{"t":"IO::Socket::INET","n":"IO::Socket::INET","d":"TITLE\nclass IO::Socket::INET\n\nSUBTITLE\nTCP Socket\n\n    class IO::Socket::INET does IO::Socket {}\n\n\nIO::Socket::INET provides TCP sockets, both the server and the client\nside.\n\nFor UDP support, please see IO::Socket::Async.\n\nHere is an example of a very simplistic \"echo\" server that listens on\nlocalhost, port 3333:\n\n    my $listen = IO::Socket::INET.new( :listen,\n                                       :localhost<localhost>,\n                                       :localport(3333) );\n    loop {\n        my $conn = $listen.accept;\n        try {\n            while my $buf = $conn.recv(:bin) {\n                $conn.write: $buf;\n            }\n        }\n        $conn.close;\n\n        CATCH {\n              default { .payload.say;      }\n        }\n\n    }\n\n\nAnd a client that connects to it, and prints out what the server answers:\n\n    my $conn = IO::Socket::INET.new( :host<localhost>,\n                                     :port(3333) );\n    $conn.print: 'Hello, Raku';\n    say $conn.recv;\n    $conn.close;\n\n\nPlease bear in mind that this is a synchronous connection; an attempt by\nany of the nodes to write without the other reading will produce an Could\nnot receive data from socket: Connection reset by peer error.\n\n","b":"A","a":[{"k":"v","n":"$.host","t":"Str"},{"t":"Int","n":"$.port","k":"v"},{"t":"Str","n":"$.localhost","k":"v"},{"t":"Int","n":"$.localport","k":"v"},{"k":"v","n":"$.backlog","t":"Int"},{"t":"Bool","n":"$.listening","k":"v"},{"t":"Mu","n":"$.family","k":"v"},{"k":"v","n":"$.proto","t":"Mu"},{"t":"Mu","n":"$.type","k":"v"},{"n":"$!PIO","t":"Mu","k":"v"},{"k":"v","n":"$.encoding","t":"Str"},{"t":"Mu","n":"$.nl-in","k":"v"},{"t":"Str:D","n":"$.nl-out","k":"v"},{"k":"v","t":"Encoding::Decoder","n":"$!decoder"},{"n":"$!encoder","t":"Encoding::Encoder","k":"v"}],"k":"c","m":[{"m":0,"k":"m","n":"connect","s":{"r":"Mu","p":["$host","$port","*%_"]}},{"n":"listen","s":{"r":"Mu","p":["$localhost","$localport","*%_"]},"m":0,"k":"m"},{"n":"accept","s":{"r":"Mu","p":["*%_"]},"k":"m","m":0},{"s":{"r":"Mu","p":["Cool $limit? is copy",":$bin","*%_"]},"n":"recv","m":0,"k":"m"},{"m":0,"k":"m","n":"read","s":{"r":"Mu","p":["Int(Cool) $bufsize","*%_"]}},{"n":"nl-in","s":{"r":"Mu","p":["*%_"]},"m":0,"k":"m"},{"k":"m","m":0,"s":{"r":"Mu","p":["*%_"]},"n":"get"},{"n":"lines","s":{"p":["*%_"],"r":"Mu"},"k":"m","m":0},{"m":0,"k":"m","s":{"r":"Bool","p":["Str(Cool) $string","*%_"]},"n":"print"},{"m":0,"k":"m","n":"put","s":{"r":"Bool","p":["Str(Cool) $string","*%_"]}},{"k":"m","m":0,"n":"write","s":{"p":["Blob:D $buf","*%_"],"r":"Bool"}},{"s":{"r":"Bool","p":["*%_"]},"n":"close","m":0,"k":"m"},{"m":0,"k":"m","s":{"r":"Mu","p":["*%_"]},"n":"native-descriptor"},{"n":"new","s":{"r":"Mu","p":["*%attrinit"]},"k":"m","m":1},{"m":1,"k":"m","n":"new","s":{"p":["$","*@","*%_"],"r":"Mu"}},{"k":"m","m":1,"s":{"r":"IO::Socket::INET:D","p":["Bool :$listen! where { ... }","Str :$localhost is copy","Int :$localport is copy","Int :$family where { ... } = 2","*%rest"]},"n":"new"},{"k":"m","m":1,"n":"new","s":{"p":["Str:D :$host! is copy","Int :$port is copy","Int :$family where { ... } = 2","*%rest"],"r":"IO::Socket::INET:D"}},{"n":"new","s":{"p":["*%_"],"r":"Mu"},"k":"m","m":1},{"n":"host","s":{"r":"Mu","p":["*%_"]},"k":"m","m":0},{"m":0,"k":"m","n":"port","s":{"p":["*%_"],"r":"Mu"}},{"m":0,"k":"m","n":"localhost","s":{"p":["*%_"],"r":"Mu"}},{"m":0,"k":"m","s":{"r":"Mu","p":["*%_"]},"n":"localport"},{"k":"m","m":0,"n":"backlog","s":{"p":["*%_"],"r":"Mu"}},{"k":"m","m":0,"s":{"r":"Mu","p":["*%_"]},"n":"listening"},{"n":"family","s":{"r":"Mu","p":["*%_"]},"m":0,"k":"m"},{"k":"m","m":0,"n":"proto","s":{"r":"Mu","p":["*%_"]}},{"s":{"r":"Mu","p":["*%_"]},"n":"type","m":0,"k":"m"},{"s":{"r":"Mu","p":["*%_"]},"n":"encoding","m":0,"k":"m"},{"n":"nl-out","s":{"p":["*%_"],"r":"Mu"},"m":0,"k":"m"},{"m":0,"k":"s","s":{"p":["@auto","%init","*%_"],"r":"Mu"},"n":"BUILDALL"},{"n":"!initialize","s":{"p":["*%_"],"r":"Mu"},"m":0,"k":"m"},{"k":"m","m":0,"s":{"p":["*%_"],"r":"Nil"},"n":"!ensure-coders"}]},{"n":"IO::ArgFiles","t":"IO::ArgFiles","m":[{"n":"BUILDALL","s":{"r":"Mu","p":["@auto","%init","*%_"]},"k":"s","m":0},{"s":{"r":"Mu","p":["|"]},"n":"EOF","m":1,"k":"m"},{"m":0,"k":"m","s":{"r":"Mu","p":["*%_"]},"n":"IO"},{"m":0,"k":"m","s":{"p":["*%_"],"r":"Mu"},"n":"getc"},{"s":{"r":"Mu","p":["|"]},"n":"READ","m":1,"k":"m"},{"n":"next-handle","s":{"r":"Mu","p":["*%_"]},"k":"m","m":0},{"s":{"p":["*%_"],"r":"Mu"},"n":"unlock","k":"m","m":0},{"m":0,"k":"m","s":{"p":["*%_"],"r":"Int:D"},"n":"native-descriptor"},{"s":{"p":["*%_"],"r":"Mu"},"n":"slurp","m":0,"k":"m"},{"n":"WRITE","s":{"p":["|"],"r":"Mu"},"m":1,"k":"m"},{"k":"m","m":1,"n":"Str","s":{"p":["*%_"],"r":"Mu"}},{"k":"m","m":1,"n":"Str","s":{"r":"Mu","p":["*%_"]}},{"n":"Str","s":{"r":"Mu","p":["*%_"]},"m":1,"k":"m"},{"s":{"p":["*%_"],"r":"Mu"},"n":"Str","k":"m","m":1},{"s":{"r":"IO::CatHandle","p":["*%_"]},"n":"open","m":0,"k":"m"},{"m":1,"k":"m","s":{"r":"Mu","p":["|"]},"n":"print"},{"m":0,"k":"m","s":{"p":["*%_"],"r":"Mu"},"n":"get"},{"k":"m","m":1,"s":{"p":["|"],"r":"Mu"},"n":"say"},{"m":1,"k":"m","s":{"r":"Mu","p":["*%_"]},"n":"Supply"},{"m":1,"k":"m","n":"Supply","s":{"r":"Supply:D","p":[":$size = { ... }","*%_"]}},{"m":1,"k":"m","n":"Supply","s":{"r":"Supply:D","p":[":$size = { ... }","*%_"]}},{"m":0,"k":"m","s":{"p":["|c is raw"],"r":"Mu"},"n":"split"},{"n":"words","s":{"p":["$limit",":$close","*%_"],"r":"Mu"},"m":1,"k":"m"},{"s":{"r":"Mu","p":[":$close","*%_"]},"n":"words","k":"m","m":1},{"k":"m","m":1,"s":{"r":"Mu","p":["$limit",":$close","*%_"]},"n":"words"},{"n":"words","s":{"r":"Mu","p":[":$close!","*%_"]},"k":"m","m":1},{"k":"m","m":1,"n":"words","s":{"p":["*%_"],"r":"Mu"}},{"s":{"r":"Bool:D","p":["*%_"]},"n":"t","m":0,"k":"m"},{"n":"flush","s":{"p":["|"],"r":"Mu"},"m":1,"k":"m"},{"m":1,"k":"m","s":{"p":["*%_"],"r":"Mu"},"n":"gist"},{"k":"m","m":1,"n":"gist","s":{"p":["*%_"],"r":"Mu"}},{"s":{"r":"Mu","p":["*%_"]},"n":"gist","k":"m","m":1},{"m":1,"k":"m","n":"gist","s":{"r":"Mu","p":["*%_"]}},{"n":"nl-in","s":{"p":["*%_"],"r":"Mu"},"m":0,"k":"m"},{"n":"handles","s":{"r":"Seq:D","p":["*%_"]},"m":0,"k":"m"},{"s":{"r":"Mu","p":["|"]},"n":"write","k":"m","m":1},{"s":{"r":"Mu","p":["Int(Cool:D) $chars = { ... }","*%_"]},"n":"readchars","m":0,"k":"m"},{"n":"opened","s":{"r":"Bool:D","p":["*%_"]},"m":0,"k":"m"},{"s":{"r":"Mu","p":["|"]},"n":"put","k":"m","m":1},{"n":"lines","s":{"p":["$limit",":$close","*%_"],"r":"Mu"},"m":1,"k":"m"},{"k":"m","m":1,"s":{"p":[":$close","*%_"],"r":"Mu"},"n":"lines"},{"m":1,"k":"m","n":"lines","s":{"r":"Mu","p":["$limit",":$close","*%_"]}},{"k":"m","m":1,"s":{"r":"Mu","p":[":$close!","*%_"]},"n":"lines"},{"k":"m","m":1,"s":{"p":["*%_"],"r":"Mu"},"n":"lines"},{"m":0,"k":"m","s":{"p":["*%_"],"r":"Int:D"},"n":"tell"},{"k":"m","m":0,"n":"path","s":{"p":["*%_"],"r":"Mu"}},{"n":"close","s":{"p":["*%_"],"r":"Bool"},"m":0,"k":"m"},{"n":"slurp-rest","s":{"p":["|"],"r":"Mu"},"m":0,"k":"m"},{"s":{"p":["Int(Cool:D) $bytes = { ... }","*%_"],"r":"Mu"},"n":"read","k":"m","m":0},{"m":0,"k":"m","n":"DESTROY","s":{"p":["*%_"],"r":"Mu"}},{"k":"m","m":0,"n":"chomp","s":{"p":["*%_"],"r":"Mu"}},{"m":0,"k":"m","n":"lock","s":{"p":["|c is raw"],"r":"Mu"}},{"k":"m","m":0,"s":{"r":"Mu","p":["*@handles",":&on-switch",":$chomp = Bool::True",":$nl-in = { ... }","Str :$encoding","Bool :$bin","*%_"]},"n":"new"},{"n":"seek","s":{"p":["|c is raw"],"r":"Mu"},"k":"m","m":0},{"n":"printf","s":{"r":"Mu","p":["|"]},"k":"m","m":1},{"n":"comb","s":{"p":["|c is raw"],"r":"Mu"},"m":0,"k":"m"},{"k":"m","m":1,"n":"out-buffer","s":{"p":["|"],"r":"Mu"}},{"m":1,"k":"m","n":"print-nl","s":{"p":["|"],"r":"Mu"}},{"m":0,"k":"m","n":"eof","s":{"p":["*%_"],"r":"Bool:D"}},{"n":"on-switch","s":{"p":["*%_"],"r":"Mu"},"k":"m","m":0},{"n":"encoding","s":{"r":"Mu","p":["*%_"]},"m":1,"k":"m"},{"k":"m","m":1,"s":{"r":"Mu","p":["$enc is copy","*%_"]},"n":"encoding"},{"m":1,"k":"m","n":"perl","s":{"p":["*%_"],"r":"Mu"}},{"k":"m","m":1,"n":"perl","s":{"r":"Mu","p":["*%_"]}},{"s":{"p":["*%_"],"r":"Mu"},"n":"perl","k":"m","m":1},{"m":0,"k":"s","n":"BUILDALL","s":{"p":["@auto","%init","*%_"],"r":"Mu"}},{"s":{"p":["*%_"],"r":"Mu"},"n":"Str","k":"m","m":1},{"s":{"r":"Mu","p":["*%_"]},"n":"Str","m":1,"k":"m"},{"m":1,"k":"m","s":{"r":"Mu","p":["*%_"]},"n":"Str"},{"k":"m","m":0,"n":"get","s":{"p":["*%_"],"r":"Mu"}},{"n":"WRITE","s":{"p":["Blob:D $buf","*%_"],"r":"Bool"},"k":"m","m":0},{"n":"print","s":{"p":["Str:D \\x","*%_"],"r":"Bool"},"m":1,"k":"m"},{"n":"print","s":{"r":"Bool","p":["**@list is raw","*%_"]},"k":"m","m":1},{"n":"print","s":{"p":["Junction:D \\j","*%_"],"r":"Mu"},"k":"m","m":1},{"n":"open","s":{"r":"Mu","p":[":$r",":$w",":$x",":$a",":$update",":$rw",":$rx",":$ra",":$mode is copy",":$create is copy",":$append is copy",":$truncate is copy",":$exclusive is copy",":$bin",":$enc is copy",":$chomp = { ... }",":$nl-in is copy = { ... }","Str:D :$nl-out is copy = { ... }",":$out-buffer is copy","*%_"]},"m":0,"k":"m"},{"s":{"r":"Mu","p":["*%_"]},"n":"say","k":"m","m":1},{"m":1,"k":"m","s":{"p":["Str:D $x","*%_"],"r":"Bool"},"n":"say"},{"m":1,"k":"m","s":{"p":["\\x","*%_"],"r":"Bool"},"n":"say"},{"m":1,"k":"m","n":"say","s":{"r":"Mu","p":["|"]}},{"m":1,"k":"m","n":"Supply","s":{"p":["*%_"],"r":"Mu"}},{"s":{"p":[":$size = { ... }","*%_"],"r":"Supply:D"},"n":"Supply","m":1,"k":"m"},{"s":{"r":"Mu","p":[":$close","|c is raw"]},"n":"split","k":"m","m":0},{"n":"t","s":{"r":"Mu","p":["*%_"]},"m":0,"k":"m"},{"m":1,"k":"m","s":{"r":"Mu","p":["$limit",":$close","*%_"]},"n":"words"},{"s":{"r":"Mu","p":[":$close","*%_"]},"n":"words","m":1,"k":"m"},{"k":"m","m":0,"n":"EOF","s":{"r":"Mu","p":["*%_"]}},{"k":"m","m":0,"s":{"r":"Mu","p":["*%_"]},"n":"IO"},{"s":{"p":["*%_"],"r":"Mu"},"n":"getc","m":0,"k":"m"},{"k":"m","m":0,"s":{"r":"Mu","p":["*%_"]},"n":"native-descriptor"},{"k":"m","m":0,"s":{"p":["*%_"],"r":"Mu"},"n":"nl-out"},{"m":0,"k":"m","n":"READ","s":{"r":"Mu","p":["Int:D $bytes","*%_"]}},{"k":"m","m":0,"n":"unlock","s":{"r":"Bool","p":["*%_"]}},{"k":"m","m":0,"n":"slurp","s":{"p":[":$close",":$bin","*%_"],"r":"Mu"}},{"s":{"p":["Int(Cool:D) $chars = { ... }","*%_"],"r":"Mu"},"n":"readchars","k":"m","m":0},{"k":"m","m":1,"s":{"r":"Mu","p":["$limit",":$close","*%_"]},"n":"lines"},{"k":"m","m":1,"s":{"p":[":$close","*%_"],"r":"Mu"},"n":"lines"},{"n":"put","s":{"r":"Bool","p":["Str:D \\x","*%_"]},"k":"m","m":1},{"m":1,"k":"m","s":{"p":["**@list is raw","*%_"],"r":"Bool"},"n":"put"},{"n":"put","s":{"p":["Junction:D \\j","*%_"],"r":"Mu"},"k":"m","m":1},{"m":0,"k":"m","s":{"p":["*%_"],"r":"Mu"},"n":"opened"},{"n":"tell","s":{"p":["*%_"],"r":"Int:D"},"m":0,"k":"m"},{"k":"m","m":1,"n":"gist","s":{"p":["*%_"],"r":"Mu"}},{"k":"m","m":1,"n":"gist","s":{"r":"Mu","p":["*%_"]}},{"s":{"r":"Mu","p":["*%_"]},"n":"gist","k":"m","m":1},{"n":"nl-in","s":{"p":["*%_"],"r":"Mu"},"k":"m","m":0},{"m":0,"k":"m","s":{"r":"Bool","p":["*%_"]},"n":"flush"},{"m":0,"k":"m","n":"write","s":{"p":["Blob:D $buf","*%_"],"r":"Bool"}},{"s":{"p":["Bool:D :$non-blocking = Bool::False","Bool:D :$shared = Bool::False","*%_"],"r":"Bool"},"n":"lock","k":"m","m":0},{"n":"printf","s":{"p":["|c is raw"],"r":"Mu"},"m":0,"k":"m"},{"n":"chomp","s":{"r":"Mu","p":["*%_"]},"m":0,"k":"m"},{"m":1,"k":"m","s":{"p":["Int:D $offset","SeekType:D $whence = SeekType::SeekFromBeginning","*%_"],"r":"Bool"},"n":"seek"},{"m":1,"k":"m","s":{"p":["Blob $data",":$close","*%_"],"r":"Mu"},"n":"spurt"},{"m":1,"k":"m","n":"spurt","s":{"p":["Cool $data",":$close","*%_"],"r":"Mu"}},{"m":0,"k":"m","s":{"p":["*%_"],"r":"Mu"},"n":"path"},{"k":"m","m":0,"n":"read","s":{"p":["Int(Cool:D) $bytes = { ... }","*%_"],"r":"Mu"}},{"n":"slurp-rest","s":{"p":[":$bin! where { ... }",":$close","*%_"],"r":"Buf:D"},"k":"m","m":1},{"m":1,"k":"m","s":{"p":[":$enc",":$bin",":$close","*%_"],"r":"Str:D"},"n":"slurp-rest"},{"n":"close","s":{"r":"Bool","p":["*%_"]},"m":0,"k":"m"},{"k":"m","m":0,"s":{"r":"Mu","p":["*%_"]},"n":"eof"},{"s":{"r":"Mu","p":["*%_"]},"n":"encoding","m":1,"k":"m"},{"m":1,"k":"m","s":{"p":["$new-encoding is copy",":$replacement",":$strict","Bool:D :$translate-nl = Bool::True","*%_"],"r":"Mu"},"n":"encoding"},{"s":{"r":"Mu","p":["*%_"]},"n":"out-buffer","m":0,"k":"m"},{"n":"comb","s":{"r":"Mu","p":[":$close","|c is raw"]},"m":0,"k":"m"},{"s":{"p":["*%_"],"r":"Bool"},"n":"print-nl","m":0,"k":"m"},{"s":{"p":["*%_"],"r":"Mu"},"n":"DESTROY","m":0,"k":"s"},{"m":0,"k":"s","n":"BUILDALL","s":{"p":["@auto","%init","*%_"],"r":"Mu"}},{"k":"s","m":0,"n":"TWEAK","s":{"p":[":$encoding",":$bin",":path($!path) = Nil","*%_"],"r":"Mu"}}],"k":"c","b":"A","a":[{"t":"Mu","n":"$!handles","k":"v"},{"n":"$!active-handle","t":"Mu","k":"v"},{"k":"v","t":"Mu","n":"$.chomp"},{"k":"v","n":"$.nl-in","t":"Mu"},{"k":"v","t":"Str","n":"$.encoding"},{"t":"Callable","n":"&.on-switch","k":"v"},{"k":"v","n":"$.path","t":"Mu"},{"k":"v","n":"$!PIO","t":"Mu"},{"n":"$.chomp","t":"Mu","k":"v"},{"t":"Mu","n":"$.nl-in","k":"v"},{"k":"v","n":"$.nl-out","t":"Str:D"},{"t":"Str","n":"$.encoding","k":"v"},{"n":"$!decoder","t":"Encoding::Decoder","k":"v"},{"k":"v","t":"Encoding::Encoder","n":"$!encoder"},{"k":"v","t":"int","n":"$!out-buffer"}],"d":"TITLE\nclass IO::ArgFiles\n\nSUBTITLE\nIterate over contents of files specified on command line\n\n    class IO::ArgFiles is IO::CatHandle { }\n\nThis class exists for backwards compatibility reasons and provides no\nadditional methods to IO::CatHandle, so it can be used in the same way as\nit, for instance, in this way:\n\n    my $argfiles = IO::ArgFiles.new(@*ARGS);\n    .say for $argfiles.lines;\n\n\nIf invoked with perl6 io-argfiles.p6 *.p6 it will print the contents of all\nthe files with that extension in the directory. However, that is totally\nequivalent to:\n\n    my $argfiles = IO::CatHandle.new(@*ARGS);\n    .say for $argfiles.lines;\n\n\nVariables\n\n  $*ARGFILES\n\nThis class is the magic behind the $*ARGFILES variable, which provides a\nway to iterate over files passed in to the program on the command line\n(i.e. elements of @*ARGS). Thus the examples above can be simplified like\nso:\n\n    .say for $*ARGFILES.lines;\n\n    # or\n    while ! $*ARGFILES.eof {\n        say $*ARGFILES.get;\n    }\n\n    # or\n    say $*ARGFILES.slurp;\n\nSave one of the variations above in a file, say argfiles.p6. Then create\nanother file (named, say sonnet18.txt with the contents:\n\n    Shall I compare thee to a summer's day?\n\n\nRunning the command\n\n    $ perl6 argfiles.p6 sonnet18.txt\n\n\nwill then give the output\n\n    Shall I compare thee to a summer's day?\n\n\nAs of 6.d language, $*ARGFILES inside sub MAIN is always set to $*IN, even\nwhen @*ARGS is not empty. That means that\n\n    sub MAIN () {\n        .say for $*ARGFILES.lines;\n    }\n\n\nwhich can be used as cat *.p6 | perl6 argfiles-main.p6, for instance, is\ntotally equivalent to:\n\n    sub MAIN () {\n        .say for $*IN.lines;\n    }\n\n\nand, in fact, can't be used to process the arguments in the command line,\nsince, in this case, it would result in an usage error.\n\nBear in mind that the object $*ARGFILES is going to contain a handle for\nevery argument in a command line, even if that argument is not a valid\nfile. You can retrieve them via the .handles method.\n\n    for $*ARGFILES.handles -> $fh {\n        say $fh;\n    }\n\n\nThat code will fail if any of the arguments is not the valid name of a\nfile. You will have to deal with that case at another level, checking that\n@*ARGS contains valid file names, for instance."},{"n":"IO::CatHandle","t":"IO::CatHandle","b":"A","a":[{"k":"v","t":"Mu","n":"$!handles"},{"k":"v","n":"$!active-handle","t":"Mu"},{"k":"v","n":"$.chomp","t":"Mu"},{"t":"Mu","n":"$.nl-in","k":"v"},{"n":"$.encoding","t":"Str","k":"v"},{"k":"v","t":"Callable","n":"&.on-switch"},{"t":"Mu","n":"$.path","k":"v"},{"k":"v","n":"$!PIO","t":"Mu"},{"k":"v","t":"Mu","n":"$.chomp"},{"n":"$.nl-in","t":"Mu","k":"v"},{"k":"v","n":"$.nl-out","t":"Str:D"},{"k":"v","t":"Str","n":"$.encoding"},{"n":"$!decoder","t":"Encoding::Decoder","k":"v"},{"k":"v","t":"Encoding::Encoder","n":"$!encoder"},{"k":"v","n":"$!out-buffer","t":"int"}],"m":[{"n":"new","s":{"p":["*@handles",":&on-switch",":$chomp = Bool::True",":$nl-in = { ... }","Str :$encoding","Bool :$bin","*%_"],"r":"Mu"},"m":0,"k":"m"},{"s":{"r":"Mu","p":["*%_"]},"n":"next-handle","m":0,"k":"m"},{"k":"m","m":0,"n":"handles","s":{"p":["*%_"],"r":"Seq:D"}},{"s":{"r":"Mu","p":["*%_"]},"n":"chomp","k":"m","m":0},{"s":{"p":["|c is raw"],"r":"Mu"},"n":"comb","k":"m","m":0},{"m":0,"k":"m","n":"split","s":{"r":"Mu","p":["|c is raw"]}},{"m":0,"k":"m","s":{"r":"Mu","p":["*%_"]},"n":"get"},{"s":{"r":"Mu","p":["*%_"]},"n":"getc","m":0,"k":"m"},{"s":{"r":"Mu","p":["Int(Cool:D) $bytes = { ... }","*%_"]},"n":"read","k":"m","m":0},{"n":"readchars","s":{"p":["Int(Cool:D) $chars = { ... }","*%_"],"r":"Mu"},"k":"m","m":0},{"n":"slurp","s":{"r":"Mu","p":["*%_"]},"k":"m","m":0},{"k":"m","m":0,"s":{"r":"Mu","p":["|"]},"n":"slurp-rest"},{"n":"DESTROY","s":{"r":"Mu","p":["*%_"]},"k":"m","m":0},{"n":"close","s":{"r":"Bool","p":["*%_"]},"m":0,"k":"m"},{"n":"encoding","s":{"p":["*%_"],"r":"Mu"},"m":1,"k":"m"},{"k":"m","m":1,"n":"encoding","s":{"r":"Mu","p":["$enc is copy","*%_"]}},{"s":{"r":"Bool:D","p":["*%_"]},"n":"eof","k":"m","m":0},{"s":{"r":"Mu","p":["*%_"]},"n":"IO","m":0,"k":"m"},{"s":{"p":["*%_"],"r":"Mu"},"n":"path","k":"m","m":0},{"k":"m","m":0,"s":{"r":"Bool:D","p":["*%_"]},"n":"opened"},{"m":0,"k":"m","n":"lock","s":{"r":"Mu","p":["|c is raw"]}},{"n":"nl-in","s":{"r":"Mu","p":["*%_"]},"m":0,"k":"m"},{"k":"m","m":0,"n":"seek","s":{"r":"Mu","p":["|c is raw"]}},{"s":{"p":["*%_"],"r":"Int:D"},"n":"tell","m":0,"k":"m"},{"n":"t","s":{"r":"Bool:D","p":["*%_"]},"m":0,"k":"m"},{"k":"m","m":0,"n":"unlock","s":{"p":["*%_"],"r":"Mu"}},{"k":"m","m":0,"s":{"r":"Int:D","p":["*%_"]},"n":"native-descriptor"},{"k":"m","m":0,"s":{"p":["*%_"],"r":"IO::CatHandle"},"n":"open"},{"m":1,"k":"m","s":{"p":["|"],"r":"Mu"},"n":"flush"},{"k":"m","m":1,"n":"out-buffer","s":{"p":["|"],"r":"Mu"}},{"k":"m","m":1,"n":"print","s":{"p":["|"],"r":"Mu"}},{"s":{"r":"Mu","p":["|"]},"n":"printf","k":"m","m":1},{"m":1,"k":"m","s":{"p":["|"],"r":"Mu"},"n":"print-nl"},{"n":"put","s":{"r":"Mu","p":["|"]},"m":1,"k":"m"},{"m":1,"k":"m","n":"say","s":{"r":"Mu","p":["|"]}},{"n":"write","s":{"p":["|"],"r":"Mu"},"m":1,"k":"m"},{"m":1,"k":"m","s":{"p":["|"],"r":"Mu"},"n":"WRITE"},{"n":"READ","s":{"p":["|"],"r":"Mu"},"m":1,"k":"m"},{"n":"EOF","s":{"p":["|"],"r":"Mu"},"m":1,"k":"m"},{"k":"m","m":1,"s":{"r":"Mu","p":["*%_"]},"n":"perl"},{"m":1,"k":"m","n":"perl","s":{"r":"Mu","p":["*%_"]}},{"k":"m","m":1,"n":"perl","s":{"r":"Mu","p":["*%_"]}},{"n":"words","s":{"r":"Mu","p":["$limit",":$close","*%_"]},"k":"m","m":1},{"m":1,"k":"m","s":{"p":[":$close","*%_"],"r":"Mu"},"n":"words"},{"k":"m","m":1,"s":{"r":"Mu","p":["$limit",":$close","*%_"]},"n":"words"},{"n":"words","s":{"r":"Mu","p":[":$close!","*%_"]},"m":1,"k":"m"},{"m":1,"k":"m","n":"words","s":{"r":"Mu","p":["*%_"]}},{"n":"lines","s":{"p":["$limit",":$close","*%_"],"r":"Mu"},"k":"m","m":1},{"s":{"r":"Mu","p":[":$close","*%_"]},"n":"lines","m":1,"k":"m"},{"n":"lines","s":{"p":["$limit",":$close","*%_"],"r":"Mu"},"m":1,"k":"m"},{"m":1,"k":"m","n":"lines","s":{"p":[":$close!","*%_"],"r":"Mu"}},{"s":{"r":"Mu","p":["*%_"]},"n":"lines","m":1,"k":"m"},{"n":"Supply","s":{"p":["*%_"],"r":"Mu"},"k":"m","m":1},{"k":"m","m":1,"n":"Supply","s":{"p":[":$size = { ... }","*%_"],"r":"Supply:D"}},{"s":{"p":[":$size = { ... }","*%_"],"r":"Supply:D"},"n":"Supply","k":"m","m":1},{"s":{"p":["*%_"],"r":"Mu"},"n":"gist","m":1,"k":"m"},{"k":"m","m":1,"n":"gist","s":{"r":"Mu","p":["*%_"]}},{"k":"m","m":1,"s":{"p":["*%_"],"r":"Mu"},"n":"gist"},{"m":1,"k":"m","s":{"p":["*%_"],"r":"Mu"},"n":"gist"},{"k":"m","m":1,"s":{"p":["*%_"],"r":"Mu"},"n":"Str"},{"s":{"r":"Mu","p":["*%_"]},"n":"Str","k":"m","m":1},{"n":"Str","s":{"p":["*%_"],"r":"Mu"},"k":"m","m":1},{"m":1,"k":"m","s":{"r":"Mu","p":["*%_"]},"n":"Str"},{"k":"m","m":0,"s":{"p":["*%_"],"r":"Mu"},"n":"on-switch"},{"s":{"r":"Mu","p":["@auto","%init","*%_"]},"n":"BUILDALL","k":"s","m":0},{"n":"Str","s":{"r":"Mu","p":["*%_"]},"m":1,"k":"m"},{"s":{"r":"Mu","p":["*%_"]},"n":"Str","k":"m","m":1},{"m":1,"k":"m","s":{"r":"Mu","p":["*%_"]},"n":"Str"},{"n":"get","s":{"r":"Mu","p":["*%_"]},"m":0,"k":"m"},{"m":0,"k":"m","n":"WRITE","s":{"r":"Bool","p":["Blob:D $buf","*%_"]}},{"n":"print","s":{"r":"Bool","p":["Str:D \\x","*%_"]},"m":1,"k":"m"},{"n":"print","s":{"r":"Bool","p":["**@list is raw","*%_"]},"m":1,"k":"m"},{"n":"print","s":{"p":["Junction:D \\j","*%_"],"r":"Mu"},"k":"m","m":1},{"s":{"p":[":$r",":$w",":$x",":$a",":$update",":$rw",":$rx",":$ra",":$mode is copy",":$create is copy",":$append is copy",":$truncate is copy",":$exclusive is copy",":$bin",":$enc is copy",":$chomp = { ... }",":$nl-in is copy = { ... }","Str:D :$nl-out is copy = { ... }",":$out-buffer is copy","*%_"],"r":"Mu"},"n":"open","k":"m","m":0},{"m":1,"k":"m","n":"say","s":{"p":["*%_"],"r":"Mu"}},{"s":{"p":["Str:D $x","*%_"],"r":"Bool"},"n":"say","k":"m","m":1},{"s":{"r":"Bool","p":["\\x","*%_"]},"n":"say","k":"m","m":1},{"k":"m","m":1,"s":{"r":"Mu","p":["|"]},"n":"say"},{"n":"Supply","s":{"p":["*%_"],"r":"Mu"},"m":1,"k":"m"},{"k":"m","m":1,"n":"Supply","s":{"p":[":$size = { ... }","*%_"],"r":"Supply:D"}},{"n":"split","s":{"p":[":$close","|c is raw"],"r":"Mu"},"m":0,"k":"m"},{"k":"m","m":0,"n":"t","s":{"p":["*%_"],"r":"Mu"}},{"n":"words","s":{"r":"Mu","p":["$limit",":$close","*%_"]},"m":1,"k":"m"},{"s":{"r":"Mu","p":[":$close","*%_"]},"n":"words","m":1,"k":"m"},{"s":{"r":"Mu","p":["*%_"]},"n":"EOF","k":"m","m":0},{"k":"m","m":0,"s":{"p":["*%_"],"r":"Mu"},"n":"IO"},{"k":"m","m":0,"s":{"r":"Mu","p":["*%_"]},"n":"getc"},{"k":"m","m":0,"s":{"p":["*%_"],"r":"Mu"},"n":"native-descriptor"},{"k":"m","m":0,"n":"nl-out","s":{"p":["*%_"],"r":"Mu"}},{"s":{"p":["Int:D $bytes","*%_"],"r":"Mu"},"n":"READ","m":0,"k":"m"},{"n":"unlock","s":{"p":["*%_"],"r":"Bool"},"m":0,"k":"m"},{"k":"m","m":0,"n":"slurp","s":{"p":[":$close",":$bin","*%_"],"r":"Mu"}},{"m":0,"k":"m","s":{"r":"Mu","p":["Int(Cool:D) $chars = { ... }","*%_"]},"n":"readchars"},{"n":"lines","s":{"p":["$limit",":$close","*%_"],"r":"Mu"},"k":"m","m":1},{"n":"lines","s":{"r":"Mu","p":[":$close","*%_"]},"k":"m","m":1},{"m":1,"k":"m","n":"put","s":{"r":"Bool","p":["Str:D \\x","*%_"]}},{"m":1,"k":"m","s":{"p":["**@list is raw","*%_"],"r":"Bool"},"n":"put"},{"n":"put","s":{"r":"Mu","p":["Junction:D \\j","*%_"]},"k":"m","m":1},{"m":0,"k":"m","n":"opened","s":{"p":["*%_"],"r":"Mu"}},{"n":"tell","s":{"p":["*%_"],"r":"Int:D"},"m":0,"k":"m"},{"s":{"p":["*%_"],"r":"Mu"},"n":"gist","m":1,"k":"m"},{"n":"gist","s":{"p":["*%_"],"r":"Mu"},"m":1,"k":"m"},{"s":{"r":"Mu","p":["*%_"]},"n":"gist","m":1,"k":"m"},{"k":"m","m":0,"n":"nl-in","s":{"p":["*%_"],"r":"Mu"}},{"m":0,"k":"m","s":{"r":"Bool","p":["*%_"]},"n":"flush"},{"m":0,"k":"m","n":"write","s":{"r":"Bool","p":["Blob:D $buf","*%_"]}},{"m":0,"k":"m","n":"lock","s":{"r":"Bool","p":["Bool:D :$non-blocking = Bool::False","Bool:D :$shared = Bool::False","*%_"]}},{"s":{"p":["|c is raw"],"r":"Mu"},"n":"printf","m":0,"k":"m"},{"m":0,"k":"m","n":"chomp","s":{"r":"Mu","p":["*%_"]}},{"k":"m","m":1,"s":{"p":["Int:D $offset","SeekType:D $whence = SeekType::SeekFromBeginning","*%_"],"r":"Bool"},"n":"seek"},{"m":1,"k":"m","s":{"p":["Blob $data",":$close","*%_"],"r":"Mu"},"n":"spurt"},{"s":{"r":"Mu","p":["Cool $data",":$close","*%_"]},"n":"spurt","k":"m","m":1},{"m":0,"k":"m","s":{"r":"Mu","p":["*%_"]},"n":"path"},{"n":"read","s":{"r":"Mu","p":["Int(Cool:D) $bytes = { ... }","*%_"]},"m":0,"k":"m"},{"m":1,"k":"m","s":{"p":[":$bin! where { ... }",":$close","*%_"],"r":"Buf:D"},"n":"slurp-rest"},{"s":{"p":[":$enc",":$bin",":$close","*%_"],"r":"Str:D"},"n":"slurp-rest","k":"m","m":1},{"s":{"p":["*%_"],"r":"Bool"},"n":"close","m":0,"k":"m"},{"k":"m","m":0,"n":"eof","s":{"p":["*%_"],"r":"Mu"}},{"s":{"p":["*%_"],"r":"Mu"},"n":"encoding","k":"m","m":1},{"s":{"p":["$new-encoding is copy",":$replacement",":$strict","Bool:D :$translate-nl = Bool::True","*%_"],"r":"Mu"},"n":"encoding","m":1,"k":"m"},{"n":"out-buffer","s":{"r":"Mu","p":["*%_"]},"k":"m","m":0},{"m":0,"k":"m","n":"comb","s":{"r":"Mu","p":[":$close","|c is raw"]}},{"m":0,"k":"m","n":"print-nl","s":{"p":["*%_"],"r":"Bool"}},{"m":0,"k":"s","s":{"r":"Mu","p":["*%_"]},"n":"DESTROY"},{"s":{"r":"Mu","p":["@auto","%init","*%_"]},"n":"BUILDALL","m":0,"k":"s"},{"m":0,"k":"s","n":"TWEAK","s":{"r":"Mu","p":[":$encoding",":$bin",":path($!path) = Nil","*%_"]}},{"k":"m","m":0,"n":"!SET-SELF","s":{"r":"Mu","p":["@handles","&!on-switch","$!chomp","$!nl-in","$encoding","$bin","*%_"]}},{"n":"!WORDS","s":{"r":"Mu","p":["*%_"]},"m":0,"k":"m"},{"s":{"p":["*%_"],"r":"Mu"},"n":"!LINES","k":"m","m":0}],"k":"c","d":"TITLE\nclass IO::CatHandle\n\nSUBTITLE\nUse multiple IO handles as if they were one\n\n    class IO::CatHandle is IO::Handle { }\n\nThis class has been available in Rakudo since version 2017.06.\n\nThe IO::CatHandle|/type/IO::CatHandle class provides a means to create an\nIO::Handle that seamlessly gathers input from multiple IO::Handle and\nIO::Pipe sources.\n\nAll of the IO::Handle's methods are implemented, and while attempt to use\nwrite methods will (currently) throw and exception, an IO::CatHandle is\nusable anywhere a read-only IO::Handle can be used.\n\n"},{"n":"PositionalBindFailover","t":"PositionalBindFailover","a":[{"k":"v","t":"Mu","n":"$!list"}],"b":"C","m":[{"m":0,"k":"m","s":{"p":["*%_"],"r":"Mu"},"n":"cache"},{"n":"iterator","s":{"p":["*%_"],"r":"Mu"},"k":"m","m":0}],"k":"ro","d":"TITLE\nrole PositionalBindFailover\n\nSUBTITLE\nFailover for binding to a Positional\n\n    role PositionalBindFailover { ... }\n\nThis role provides an interface by which an object can be coerced into a\nPositional when binding to Positional parameters.\n\nFor example, Seq type is not Positional, but you can still write the\nfollowing, because it does PositionalBindFailover role:\n\n    sub fifths(@a) {        # @a is constraint to Positional\n        @a[4];\n    }\n    my $seq := gather {     # a Seq, which is not Positional\n        take $_ for 1..*;\n    }\n    say fifths($seq);       # OUTPUT: «5␤»\n\nThe invocation of fifths in the example above would ordinarily give a type\nerror, because $seq is of type Seq, which doesn't do the Positional\ninterface that the @-sigil implies.\n\nBut the signature binder recognizes that Seq does the\nPositionalBindFailover role, and calls its cache method to coerce it to a\nList, which does the Positional role.\n\nThe same happens with custom classes that do the role; they simply need to\nprovide an iterator method that produces an Iterator:\n\n    class Foo does PositionalBindFailover {\n        method iterator {\n            class :: does Iterator {\n                method pull-one {\n                    return 42 unless $++;\n                    IterationEnd\n                }\n            }.new\n        }\n    }\n\n    sub first-five (@a) { @a[^5].say }\n    first-five Foo.new; # OUTPUT: # OUTPUT: «(42 Nil Nil Nil Nil)␤»\n\n"},{"n":"Variable","t":"Variable","b":"A","a":[{"t":"str","n":"$.name","k":"v"},{"n":"$.scope","t":"str","k":"v"},{"k":"v","t":"Mu","n":"$.var"},{"t":"Mu","n":"$.block","k":"v"},{"n":"$.slash","t":"Mu","k":"v"},{"k":"v","n":"$.implicit-lexical-usage","t":"Mu"}],"m":[{"s":{"p":["|c is raw"],"r":"Mu"},"n":"throw","m":0,"k":"s"},{"s":{"r":"Mu","p":["&block","$caller-levels = 3","*%_"]},"n":"willdo","m":0,"k":"s"},{"n":"native","s":{"r":"Mu","p":["Mu $what","*%_"]},"k":"s","m":0},{"m":0,"k":"m","s":{"r":"Mu","p":["*%_"]},"n":"name"},{"k":"m","m":0,"s":{"p":["*%_"],"r":"Mu"},"n":"scope"},{"s":{"p":["*%_"],"r":"Mu"},"n":"var","m":0,"k":"m"},{"n":"block","s":{"r":"Mu","p":["*%_"]},"k":"m","m":0},{"m":0,"k":"m","n":"slash","s":{"r":"Mu","p":["*%_"]}},{"m":0,"k":"m","n":"implicit-lexical-usage","s":{"r":"Mu","p":["*%_"]}},{"k":"s","m":0,"s":{"r":"Mu","p":["@auto","%init","*%_"]},"n":"BUILDALL"}],"k":"c","d":"TITLE\nclass Variable\n\nSUBTITLE\nObject representation of a variable for use in traits\n\n    class Variable {}\n\nVariables have a wealth of compile-time information, but at runtime,\naccesses to a variable usually act on the value stored inside it, not the\nvariable itself. The runtime class of a variable is Scalar.\n\nClass Variable holds the compile-time information that traits can use to\nintrospect and manipulate variables.\n\nTraits\n\n  trait is default\n\nSets the default value with which a variable is initialized, and to which\nit is reset when Nil is assigned to it. Trait arguments are evaluated at\ncompile time. Closures won't do what you expect: they are stored as is and\nneed to be called by hand.\n\n    my Int $x is default(42);\n    say $x;     # OUTPUT: «42␤»\n    $x = 5;\n    say $x;     # OUTPUT: «5␤»\n    # explicit reset:\n    $x = Nil;\n    say $x;     # OUTPUT: «42␤»\n\nThe trait is default can be used also with subscripting things like arrays\nand hashes:\n\n    my @array is default( 'N/A' );\n    @array[22].say;  # OUTPUT: N/A\n    @array = Nil;\n    @array.say;      # OUTPUT: [N/A]\n    @array[4].say;   # OUTPUT: N/A\n\n    my %hash is default( 'no-value-here' );\n    %hash<non-existent-key>.say; # OUTPUT: no-value-here\n    %hash<foo> = 'bar';\n    %hash<>.say;                 # OUTPUT: {foo => bar}\n    %hash<wrong-key>.say;        # OUTPUT: no-value-here\n\n\n  trait is dynamic\n\n    multi sub trait_mod:<is>(Variable:D, :$dynamic)\n\nMarks a variable as dynamic, that is, accessible from inner dynamic scopes\nwithout being in an inner lexical scope.\n\n    sub introspect() {\n        say $CALLER::x;\n    }\n    my $x is dynamic = 23;\n    introspect;         # OUTPUT: «23␤»\n    {\n        # not dynamic\n        my $x;\n        introspect()    # dies with an exception of type X::Caller::NotDynamic\n    }\n\n\nThe is dynamic trait is a rather cumbersome way of creating and accessing\ndynamic variables. A much easier way is to use the * twigil:\n\n    sub introspect() {\n        say $*x;\n    }\n    my $*x = 23;\n    introspect;         # OUTPUT: «23␤»\n    {\n        # not dynamic\n        my $x;\n        introspect()    # dies with an exception of type X::Dynamic::NotFound\n    }\n\n\n  trait of\n\n    multi sub trait_mod:<of>(Mu:U $target, Mu:U $type)\n\nSets the type constraint of a container bound to a variable.\n\n    my $i of Int = 42;\n    $i = \"forty plus two\";\n    CATCH { default { say .^name, ' ', .Str } }\n    # OUTPUT: «X::TypeCheck::Assignment Type check failed in assignment to $i; expected Int but got Str (\"forty plus two\")␤»\n\nYou can use any value defined in compile time as a type constraint,\nincluding constants:\n\n    constant \\T = Int;\n    my $i of T = 42;\n\nwhich would be equivalent to the previous definition.\n\n"},{"d":"TITLE\nclass Array\n\nSUBTITLE\nSequence of itemized values\n\n    class Array is List {}\n\nAn Array is a List which forces all its elements to be scalar containers,\nwhich means you can assign to array elements.\n\nArray implements Positional and as such provides support for subscripts.\n\nNote from version 6.d, .perl can be called on multi-dimensional arrays.\n\n","a":[{"k":"v","t":"Mu","n":"$!descriptor"},{"n":"$!reified","t":"Mu","k":"v"},{"n":"$!todo","t":"Mu","k":"v"}],"b":"C","k":"c","m":[{"s":{"p":["*%_"],"r":"Iterator:D"},"n":"iterator","k":"m","m":0},{"n":"from-iterator","s":{"r":"Array:D","p":["Iterator $iter","*%_"]},"k":"m","m":0},{"k":"m","m":0,"n":"from-list","s":{"r":"Array:D","p":["Mu \\list","*%_"]}},{"n":"new","s":{"p":[":$shape!","*%_"],"r":"Array:D"},"k":"m","m":1},{"k":"m","m":1,"n":"new","s":{"r":"Array:D","p":["*%_"]}},{"s":{"p":["\\values",":$shape!","*%_"],"r":"Array:D"},"n":"new","k":"m","m":1},{"s":{"r":"Array:D","p":["\\values","*%_"]},"n":"new","k":"m","m":1},{"n":"new","s":{"p":["**@values is raw",":$shape!","*%_"],"r":"Array:D"},"k":"m","m":1},{"m":1,"k":"m","s":{"p":["**@values is raw","*%_"],"r":"Array:D"},"n":"new"},{"n":"STORE","s":{"r":"Array:D","p":["Iterable:D \\iterable","*%_"]},"m":1,"k":"m"},{"m":1,"k":"m","n":"STORE","s":{"p":["Mu \\item","*%_"],"r":"Array:D"}},{"s":{"p":["*%_"],"r":"Array::ArrayReificationTarget:D"},"n":"reification-target","m":0,"k":"m"},{"k":"m","m":0,"s":{"p":["*%_"],"r":"Mu"},"n":"FLATTENABLE_LIST"},{"m":0,"k":"m","n":"shape","s":{"p":["*%_"],"r":"List:D"}},{"m":0,"k":"m","n":"pop","s":{"r":"Mu","p":["*%_"]}},{"n":"shift","s":{"p":["*%_"],"r":"Mu"},"m":0,"k":"m"},{"m":1,"k":"m","s":{"p":["*%_"],"r":"Mu"},"n":"grab"},{"m":1,"k":"m","n":"grab","s":{"p":["Callable:D $calculate","*%_"],"r":"Mu"}},{"s":{"r":"Seq:D","p":["Whatever $","*%_"]},"n":"grab","m":1,"k":"m"},{"m":1,"k":"m","n":"grab","s":{"r":"Seq:D","p":["\\count","*%_"]}},{"m":0,"k":"m","n":"GRAB_ONE","s":{"p":["*%_"],"r":"Mu"}},{"s":{"p":["*%_"],"r":"Mu"},"n":"name","k":"m","m":0},{"k":"m","m":0,"n":"of","s":{"r":"Mu","p":["*%_"]}},{"k":"m","m":0,"s":{"r":"Mu","p":["*%_"]},"n":"default"},{"s":{"p":["*%_"],"r":"Mu"},"n":"dynamic","m":0,"k":"m"},{"s":{"r":"Mu","p":["*%twiddles"]},"n":"clone","k":"m","m":1},{"n":"clone","s":{"r":"Mu","p":["*%twiddles"]},"k":"m","m":1},{"s":{"p":["*%_"],"r":"Array:D"},"n":"clone","m":1,"k":"m"},{"k":"m","m":1,"s":{"p":["*%_"],"r":"Mu"},"n":"Slip"},{"n":"Slip","s":{"p":["*%_"],"r":"Slip:D"},"m":1,"k":"m"},{"n":"Slip","s":{"r":"Slip:D","p":["*%_"]},"m":1,"k":"m"},{"k":"m","m":1,"s":{"r":"Mu","p":["*%_"]},"n":"flat"},{"m":1,"k":"m","n":"flat","s":{"p":["*%_"],"r":"Mu"}},{"k":"m","m":1,"n":"flat","s":{"p":["*%_"],"r":"Mu"}},{"n":"List","s":{"p":["*%_"],"r":"Mu"},"k":"m","m":1},{"m":1,"k":"m","n":"List","s":{"r":"List:D","p":["*%_"]}},{"m":1,"k":"m","n":"List","s":{"r":"List:D","p":[":$view","*%_"]}},{"k":"m","m":1,"n":"AT-POS","s":{"r":"Mu","p":["int \\pos","*%_"]}},{"n":"AT-POS","s":{"p":["Int:D \\pos","*%_"],"r":"Mu"},"m":1,"k":"m"},{"n":"AT-POS","s":{"r":"Mu","p":["Num:D \\pos","*%_"]},"k":"m","m":1},{"k":"m","m":1,"n":"AT-POS","s":{"p":["Any:D \\pos","*%_"],"r":"Mu"}},{"k":"m","m":1,"s":{"p":["int \\pos","*%_"],"r":"Mu"},"n":"AT-POS"},{"m":1,"k":"m","s":{"p":["Int:D \\pos","*%_"],"r":"Mu"},"n":"AT-POS"},{"k":"m","m":1,"s":{"p":["Num:D \\pos","*%_"],"r":"Mu"},"n":"AT-POS"},{"k":"m","m":1,"s":{"p":["Any:D \\pos","*%_"],"r":"Mu"},"n":"AT-POS"},{"s":{"r":"Mu","p":["Any:U \\pos","*%_"]},"n":"AT-POS","k":"m","m":1},{"n":"AT-POS","s":{"p":["\\one","\\two","*%_"],"r":"Mu"},"m":1,"k":"m"},{"k":"m","m":1,"n":"AT-POS","s":{"p":["\\one","\\two","\\three","*%_"],"r":"Mu"}},{"s":{"p":["**@indices","*%_"],"r":"Mu"},"n":"AT-POS","k":"m","m":1},{"s":{"r":"Mu","p":["int $pos","*%_"]},"n":"AT-POS","k":"m","m":1},{"m":1,"k":"m","s":{"p":["Int:D $pos","*%_"],"r":"Mu"},"n":"AT-POS"},{"n":"AT-POS","s":{"r":"Mu","p":["int $pos","*%_"]},"k":"m","m":1},{"m":1,"k":"m","s":{"r":"Mu","p":["Int:D $pos","*%_"]},"n":"AT-POS"},{"m":1,"k":"m","s":{"p":["\\pos","Mu \\assignee","*%_"],"r":"Mu"},"n":"ASSIGN-POS"},{"n":"ASSIGN-POS","s":{"p":["int \\pos","Mu \\assignee","*%_"],"r":"Mu"},"m":1,"k":"m"},{"k":"m","m":1,"s":{"r":"Mu","p":["Int:D \\pos","Mu \\assignee","*%_"]},"n":"ASSIGN-POS"},{"m":1,"k":"m","s":{"p":["Num:D \\pos","Mu \\assignee","*%_"],"r":"Mu"},"n":"ASSIGN-POS"},{"s":{"r":"Mu","p":["Any:D \\pos","Mu \\assignee","*%_"]},"n":"ASSIGN-POS","k":"m","m":1},{"m":1,"k":"m","n":"ASSIGN-POS","s":{"p":["Any:U \\pos","Mu \\assignee","*%_"],"r":"Mu"}},{"n":"ASSIGN-POS","s":{"p":["\\one","\\two","Mu \\assignee","*%_"],"r":"Mu"},"k":"m","m":1},{"n":"ASSIGN-POS","s":{"p":["\\one","\\two","\\three","Mu \\assignee","*%_"],"r":"Mu"},"m":1,"k":"m"},{"s":{"p":["**@indices","*%_"],"r":"Mu"},"n":"ASSIGN-POS","k":"m","m":1},{"m":1,"k":"m","n":"ASSIGN-POS","s":{"p":["int $pos","Mu \\assignee","*%_"],"r":"Mu"}},{"n":"ASSIGN-POS","s":{"p":["Int:D $pos","Mu \\assignee","*%_"],"r":"Mu"},"k":"m","m":1},{"n":"BIND-POS","s":{"p":["**@indices is raw","*%_"],"r":"Mu"},"k":"m","m":1},{"s":{"r":"Mu","p":["int $pos","Mu \\bindval","*%_"]},"n":"BIND-POS","k":"m","m":1},{"m":1,"k":"m","s":{"p":["Int:D $pos","Mu \\bindval","*%_"],"r":"Mu"},"n":"BIND-POS"},{"s":{"r":"Nil","p":["$pos","*%_"]},"n":"DELETE-POS","m":1,"k":"m"},{"m":1,"k":"m","s":{"p":["$pos","*%_"],"r":"Mu"},"n":"DELETE-POS"},{"m":1,"k":"m","s":{"p":["\\one","\\two","*%_"],"r":"Mu"},"n":"DELETE-POS"},{"k":"m","m":1,"n":"DELETE-POS","s":{"r":"Mu","p":["\\one","\\two","\\three","*%_"]}},{"m":1,"k":"m","s":{"p":["**@indices","*%_"],"r":"Mu"},"n":"DELETE-POS"},{"s":{"r":"Mu","p":["int $pos","*%_"]},"n":"DELETE-POS","m":1,"k":"m"},{"n":"DELETE-POS","s":{"r":"Mu","p":["Int:D $pos","*%_"]},"m":1,"k":"m"},{"k":"m","m":1,"n":"push","s":{"p":["|values is raw"],"r":"Mu"}},{"n":"push","s":{"p":["Slip \\value","*%_"],"r":"Array:D"},"m":1,"k":"m"},{"m":1,"k":"m","n":"push","s":{"p":["\\value","*%_"],"r":"Array:D"}},{"k":"m","m":1,"n":"push","s":{"r":"Array:D","p":["**@values is raw","*%_"]}},{"k":"m","m":1,"n":"append","s":{"r":"Mu","p":["|values is raw"]}},{"n":"append","s":{"r":"Array:D","p":["\\value","*%_"]},"k":"m","m":1},{"k":"m","m":1,"s":{"p":["**@values is raw","*%_"],"r":"Array:D"},"n":"append"},{"n":"unshift","s":{"p":["|values is raw"],"r":"Mu"},"k":"m","m":1},{"n":"unshift","s":{"p":["Slip \\value","*%_"],"r":"Array:D"},"m":1,"k":"m"},{"k":"m","m":1,"n":"unshift","s":{"r":"Array:D","p":["\\value","*%_"]}},{"k":"m","m":1,"s":{"p":["**@values is raw","*%_"],"r":"Array:D"},"n":"unshift"},{"n":"prepend","s":{"r":"Mu","p":["|values is raw"]},"m":1,"k":"m"},{"n":"prepend","s":{"r":"Array:D","p":["\\value","*%_"]},"m":1,"k":"m"},{"k":"m","m":1,"n":"prepend","s":{"p":["**@values is raw","*%_"],"r":"Array:D"}},{"n":"splice","s":{"r":"Array:D","p":["*%_"]},"k":"m","m":1},{"s":{"p":["Whatever $","*%_"],"r":"Array:D"},"n":"splice","m":1,"k":"m"},{"s":{"p":["Callable:D $offset","*%_"],"r":"Array:D"},"n":"splice","m":1,"k":"m"},{"s":{"r":"Array:D","p":["Int:D $offset","*%_"]},"n":"splice","k":"m","m":1},{"n":"splice","s":{"p":["Whatever $","Whatever $","*%_"],"r":"Array:D"},"k":"m","m":1},{"m":1,"k":"m","n":"splice","s":{"r":"Array:D","p":["Whatever $","Int:D $size","*%_"]}},{"s":{"p":["Whatever $","Callable:D $size","*%_"],"r":"Array:D"},"n":"splice","k":"m","m":1},{"k":"m","m":1,"n":"splice","s":{"p":["Callable:D $offset","Callable:D $size","*%_"],"r":"Array:D"}},{"n":"splice","s":{"r":"Array:D","p":["Callable:D $offset","Whatever $","*%_"]},"m":1,"k":"m"},{"n":"splice","s":{"p":["Callable:D $offset","Int:D $size","*%_"],"r":"Array:D"},"k":"m","m":1},{"m":1,"k":"m","n":"splice","s":{"p":["Int:D $offset","Whatever $","*%_"],"r":"Array:D"}},{"n":"splice","s":{"p":["Int:D $offset","Callable:D $size","*%_"],"r":"Array:D"},"m":1,"k":"m"},{"s":{"p":["Int:D $offset","Int:D $size","*%_"],"r":"Array:D"},"n":"splice","k":"m","m":1},{"k":"m","m":1,"s":{"r":"Array:D","p":["Whatever $offset","Whatever $size","**@new","*%_"]},"n":"splice"},{"n":"splice","s":{"r":"Array:D","p":["Whatever $offset","Callable:D $size","**@new","*%_"]},"k":"m","m":1},{"s":{"p":["Whatever $offset","Int:D $size","**@new","*%_"],"r":"Array:D"},"n":"splice","m":1,"k":"m"},{"m":1,"k":"m","s":{"r":"Array:D","p":["Callable:D $offset","Whatever $size","**@new","*%_"]},"n":"splice"},{"k":"m","m":1,"s":{"r":"Array:D","p":["Callable:D $offset","Callable:D $size","**@new","*%_"]},"n":"splice"},{"k":"m","m":1,"s":{"r":"Array:D","p":["Callable:D $offset","Int:D $size","**@new","*%_"]},"n":"splice"},{"s":{"p":["Int:D $offset","Whatever $size","**@new","*%_"],"r":"Array:D"},"n":"splice","k":"m","m":1},{"s":{"p":["Int:D $offset","Callable:D $size","**@new","*%_"],"r":"Array:D"},"n":"splice","m":1,"k":"m"},{"s":{"r":"Array:D","p":["Int:D $offset","Int:D $size","**@new","*%_"]},"n":"splice","k":"m","m":1},{"m":1,"k":"m","s":{"r":"Array:D","p":["Whatever $","Whatever $","@new","*%_"]},"n":"splice"},{"k":"m","m":1,"s":{"r":"Array:D","p":["Whatever $","Int:D $size","@new","*%_"]},"n":"splice"},{"n":"splice","s":{"r":"Array:D","p":["Whatever $","Callable:D $size","@new","*%_"]},"k":"m","m":1},{"k":"m","m":1,"s":{"r":"Array:D","p":["Callable:D $offset","Callable:D $size","@new","*%_"]},"n":"splice"},{"k":"m","m":1,"s":{"p":["Callable:D $offset","Whatever $","@new","*%_"],"r":"Array:D"},"n":"splice"},{"s":{"p":["Callable:D $offset","Int:D $size","@new","*%_"],"r":"Array:D"},"n":"splice","m":1,"k":"m"},{"s":{"r":"Array:D","p":["Int:D $offset","Whatever $","@new","*%_"]},"n":"splice","m":1,"k":"m"},{"m":1,"k":"m","n":"splice","s":{"p":["Int:D $offset","Callable:D $size","@new","*%_"],"r":"Array:D"}},{"s":{"r":"Array:D","p":["Int:D $offset","Int:D $size","@new","*%_"]},"n":"splice","k":"m","m":1},{"k":"m","m":1,"n":"tail","s":{"r":"Mu","p":["*%_"]}},{"n":"tail","s":{"r":"Mu","p":["$n","*%_"]},"k":"m","m":1},{"s":{"r":"Mu","p":["*%_"]},"n":"tail","k":"m","m":1},{"k":"m","m":1,"s":{"r":"Seq:D","p":["$n","*%_"]},"n":"tail"},{"m":1,"k":"m","n":"tail","s":{"r":"Mu","p":["$n","*%_"]}},{"m":1,"k":"m","n":"perl","s":{"p":["*%_"],"r":"Mu"}},{"m":1,"k":"m","s":{"r":"Mu","p":["*%_"]},"n":"perl"},{"m":1,"k":"m","s":{"r":"Str:D","p":["*%_"]},"n":"perl"},{"n":"perl","s":{"p":["*%_"],"r":"Str:D"},"m":1,"k":"m"},{"m":1,"k":"m","s":{"r":"ValueObjAt:D","p":["*%_"]},"n":"WHICH"},{"n":"WHICH","s":{"p":["*%_"],"r":"ObjAt:D"},"k":"m","m":1},{"s":{"r":"ObjAt:D","p":["*%_"]},"n":"WHICH","k":"m","m":1},{"s":{"p":["@auto","%init","*%_"],"r":"Mu"},"n":"BUILDALL","m":0,"k":"s"},{"k":"m","m":0,"s":{"p":["*%_"],"r":"List:D"},"n":"eager"},{"k":"m","m":0,"s":{"p":["**@things is raw","*%_"],"r":"List:D"},"n":"new"},{"k":"m","m":0,"s":{"p":["|"],"r":"Mu"},"n":"from-slurpy"},{"k":"m","m":0,"s":{"p":["|"],"r":"Mu"},"n":"push"},{"n":"list","s":{"p":["*%_"],"r":"Mu"},"m":1,"k":"m"},{"m":1,"k":"m","s":{"r":"Mu","p":["*%_"]},"n":"list"},{"n":"list","s":{"p":["*%_"],"r":"Mu"},"m":1,"k":"m"},{"n":"hyper","s":{"r":"Mu","p":["Int(Cool) :$batch = 64","Int(Cool) :$degree = 4","*%_"]},"k":"m","m":0},{"n":"from-iterator","s":{"p":["Iterator $iter","*%_"],"r":"List:D"},"m":0,"k":"m"},{"k":"m","m":0,"n":"rotate","s":{"p":["Int(Cool) $rotate = 1","*%_"],"r":"Mu"}},{"s":{"p":["*%_"],"r":"Str:D"},"n":"fmt","m":1,"k":"m"},{"k":"m","m":1,"n":"fmt","s":{"p":["Str(Cool) $format","*%_"],"r":"Str:D"}},{"m":1,"k":"m","n":"fmt","s":{"p":["Str(Cool) $format","$separator","*%_"],"r":"Str:D"}},{"n":"item","s":{"r":"Mu","p":["*%_"]},"k":"m","m":0},{"n":"ACCEPTS","s":{"p":["\\topic","*%_"],"r":"Mu"},"k":"m","m":1},{"m":1,"k":"m","n":"ACCEPTS","s":{"p":["Mu:U \\topic","*%_"],"r":"Mu"}},{"n":"ACCEPTS","s":{"r":"Mu","p":["Mu:D \\a","*%_"]},"k":"m","m":1},{"n":"ACCEPTS","s":{"r":"Bool","p":["Mu:U $","*%_"]},"k":"m","m":1},{"s":{"r":"Bool:D","p":["\\topic","*%_"]},"n":"ACCEPTS","m":1,"k":"m"},{"m":1,"k":"m","n":"ACCEPTS","s":{"p":["Iterable:U $","*%_"],"r":"Bool"}},{"m":1,"k":"m","n":"ACCEPTS","s":{"r":"Bool:D","p":["Iterable:D $topic","*%_"]}},{"k":"m","m":1,"s":{"r":"Mu","p":["$topic","*%_"]},"n":"ACCEPTS"},{"k":"m","m":0,"s":{"r":"Mu","p":["Int(Cool) :$batch = 64","Int(Cool) :$degree = 4","*%_"]},"n":"race"},{"k":"m","m":0,"s":{"p":["Str(Cool) $separator = \"\"","*%_"],"r":"Mu"},"n":"join"},{"m":1,"k":"m","n":"invert","s":{"p":["*%_"],"r":"Mu"}},{"m":1,"k":"m","n":"invert","s":{"p":["*%_"],"r":"Mu"}},{"s":{"p":["*%_"],"r":"Seq:D"},"n":"invert","m":1,"k":"m"},{"s":{"r":"Mu","p":["Int:D \\pos","\\what","*%_"]},"n":"ASSIGN-POS","m":0,"k":"m"},{"m":0,"k":"m","n":"sink","s":{"p":["*%_"],"r":"Nil"}},{"n":"reverse","s":{"r":"Seq:D","p":["*%_"]},"k":"m","m":0},{"n":"FLATTENABLE_HASH","s":{"p":["*%_"],"r":"Mu"},"k":"m","m":0},{"k":"m","m":1,"s":{"p":["*%_"],"r":"Mu"},"n":"Numeric"},{"m":1,"k":"m","s":{"r":"Int:D","p":["*%_"]},"n":"Numeric"},{"s":{"r":"Mu","p":["*%_"]},"n":"to","k":"m","m":0},{"s":{"p":["*%_"],"r":"Bool"},"n":"is-lazy","k":"m","m":1},{"m":1,"k":"m","n":"is-lazy","s":{"r":"Bool:D","p":["*%_"]}},{"n":"perl","s":{"p":["*%_"],"r":"Mu"},"m":1,"k":"m"},{"s":{"p":["*%_"],"r":"Mu"},"n":"perl","m":1,"k":"m"},{"m":1,"k":"m","s":{"p":["*%_"],"r":"Str:D"},"n":"perl"},{"s":{"p":["*%_"],"r":"Mu"},"n":"of","m":0,"k":"m"},{"s":{"r":"Mu","p":["$flag","*%_"]},"n":"lazy-if","m":0,"k":"m"},{"n":"BagHash","s":{"r":"BagHash:D","p":["*%_"]},"k":"m","m":1},{"k":"m","m":1,"n":"BagHash","s":{"p":["*%_"],"r":"Mu"}},{"k":"m","m":0,"s":{"r":"Mu","p":["|"]},"n":"prepend"},{"k":"m","m":1,"n":"end","s":{"p":["*%_"],"r":"Int"}},{"k":"m","m":1,"s":{"p":["*%_"],"r":"Mu"},"n":"end"},{"s":{"p":["*%_"],"r":"Int:D"},"n":"end","m":1,"k":"m"},{"n":"MixHash","s":{"p":["*%_"],"r":"MixHash:D"},"k":"m","m":1},{"n":"MixHash","s":{"p":["*%_"],"r":"Mu"},"m":1,"k":"m"},{"n":"lazy","s":{"p":["*%_"],"r":"Mu"},"m":0,"k":"m"},{"m":1,"k":"m","s":{"p":["*%_"],"r":"Mu"},"n":"Int"},{"m":1,"k":"m","n":"Int","s":{"p":["*%_"],"r":"Int:D"}},{"m":1,"k":"m","s":{"r":"Mu","p":["*%_"]},"n":"antipairs"},{"s":{"p":["*%_"],"r":"Mu"},"n":"antipairs","k":"m","m":1},{"m":1,"k":"m","n":"antipairs","s":{"r":"Seq:D","p":["*%_"]}},{"n":"reification-target","s":{"p":["*%_"],"r":"Mu"},"m":0,"k":"m"},{"k":"m","m":0,"n":"iterator","s":{"r":"Iterator:D","p":["*%_"]}},{"n":"Capture","s":{"r":"Capture:D","p":["*%_"]},"m":0,"k":"m"},{"k":"m","m":1,"s":{"r":"Mu","p":["*%_"]},"n":"Str"},{"k":"m","m":1,"s":{"r":"Mu","p":["*%_"]},"n":"Str"},{"k":"m","m":1,"s":{"r":"Str:D","p":["*%_"]},"n":"Str"},{"s":{"r":"Mu","p":["*%_"]},"n":"Slip","m":1,"k":"m"},{"m":1,"k":"m","n":"Slip","s":{"p":["*%_"],"r":"Slip:D"}},{"k":"m","m":1,"n":"SetHash","s":{"p":["*%_"],"r":"SetHash:D"}},{"s":{"r":"Mu","p":["*%_"]},"n":"SetHash","k":"m","m":1},{"s":{"r":"Mu","p":["*%_"]},"n":"tail","k":"m","m":1},{"n":"tail","s":{"r":"Mu","p":["$n","*%_"]},"k":"m","m":1},{"m":1,"k":"m","s":{"p":["*%_"],"r":"Mu"},"n":"tail"},{"k":"m","m":1,"s":{"r":"Seq:D","p":["$n","*%_"]},"n":"tail"},{"s":{"r":"Mu","p":["|"]},"n":"pop","m":0,"k":"m"},{"n":"Supply","s":{"p":["*%_"],"r":"Mu"},"k":"m","m":1},{"s":{"p":["*%_"],"r":"Supply:D"},"n":"Supply","k":"m","m":1},{"n":"permutations","s":{"r":"Seq:D","p":["*%_"]},"m":1,"k":"m"},{"s":{"p":["*%_"],"r":"Mu"},"n":"Array","k":"m","m":1},{"k":"m","m":1,"s":{"p":["*%_"],"r":"Array:D"},"n":"Array"},{"s":{"p":["*%_"],"r":"Bag:D"},"n":"Bag","m":1,"k":"m"},{"k":"m","m":1,"s":{"p":["*%_"],"r":"Mu"},"n":"Bag"},{"n":"EXISTS-POS","s":{"r":"Bool","p":["Any:D $","*%_"]},"m":1,"k":"m"},{"s":{"p":["Any:U $pos","*%_"],"r":"Mu"},"n":"EXISTS-POS","m":1,"k":"m"},{"n":"EXISTS-POS","s":{"r":"Bool:D","p":["int \\pos","*%_"]},"k":"m","m":1},{"n":"EXISTS-POS","s":{"p":["Int:D \\pos","*%_"],"r":"Bool:D"},"k":"m","m":1},{"n":"EXISTS-POS","s":{"p":["Num:D \\pos","*%_"],"r":"Bool:D"},"k":"m","m":1},{"n":"EXISTS-POS","s":{"r":"Bool:D","p":["Any:D \\pos","*%_"]},"k":"m","m":1},{"n":"EXISTS-POS","s":{"p":["Any:U \\pos","*%_"],"r":"Mu"},"m":1,"k":"m"},{"k":"m","m":1,"n":"EXISTS-POS","s":{"r":"Bool:D","p":["\\one","\\two","*%_"]}},{"s":{"r":"Bool:D","p":["\\one","\\two","\\three","*%_"]},"n":"EXISTS-POS","m":1,"k":"m"},{"n":"EXISTS-POS","s":{"r":"Bool:D","p":["**@indices","*%_"]},"k":"m","m":1},{"s":{"r":"Mu","p":["int $pos","*%_"]},"n":"EXISTS-POS","m":1,"k":"m"},{"s":{"r":"Bool:D","p":["Int:D $pos","*%_"]},"n":"EXISTS-POS","m":1,"k":"m"},{"s":{"p":["*%_"],"r":"Seq:D"},"n":"combinations","m":1,"k":"m"},{"k":"m","m":1,"s":{"p":["$of","*%_"],"r":"Seq:D"},"n":"combinations"},{"n":"combinations","s":{"p":["Range:D $ofrange","*%_"],"r":"Seq:D"},"m":1,"k":"m"},{"m":0,"k":"m","s":{"p":["*%_"],"r":"Mu"},"n":"flat"},{"k":"m","m":0,"n":"append","s":{"p":["|"],"r":"Mu"}},{"m":0,"k":"m","s":{"p":["|"],"r":"Mu"},"n":"from-slurpy-flat"},{"m":1,"k":"m","n":"sort","s":{"r":"Mu","p":["*%_"]}},{"n":"sort","s":{"p":["&by","*%_"],"r":"Mu"},"k":"m","m":1},{"k":"m","m":1,"s":{"r":"Seq:D","p":["*%_"]},"n":"sort"},{"m":1,"k":"m","n":"sort","s":{"p":["&by","*%_"],"r":"Seq:D"}},{"m":0,"k":"m","n":"from-slurpy-onearg","s":{"r":"Mu","p":["|"]}},{"n":"Set","s":{"r":"Set:D","p":["*%_"]},"m":1,"k":"m"},{"s":{"p":["*%_"],"r":"Mu"},"n":"Set","m":1,"k":"m"},{"k":"m","m":1,"s":{"p":["*%_"],"r":"Mix:D"},"n":"Mix"},{"m":1,"k":"m","s":{"r":"Mu","p":["*%_"]},"n":"Mix"},{"s":{"p":["*%_"],"r":"Mu"},"n":"from","k":"m","m":0},{"s":{"r":"Mu","p":["*%_"]},"n":"FLATTENABLE_LIST","m":0,"k":"m"},{"m":1,"k":"m","n":"kv","s":{"r":"Mu","p":["*%_"]}},{"m":1,"k":"m","s":{"r":"Mu","p":["*%_"]},"n":"kv"},{"s":{"p":["*%_"],"r":"Seq:D"},"n":"kv","m":1,"k":"m"},{"n":"STORE","s":{"p":["Iterable:D \\iterable",":$INITIALIZE!","*%_"],"r":"List:D"},"m":1,"k":"m"},{"n":"STORE","s":{"p":["Iterable:D \\iterable","*%_"],"r":"List:D"},"k":"m","m":1},{"k":"m","m":1,"n":"STORE","s":{"p":["Mu \\item","*%_"],"r":"List:D"}},{"k":"m","m":1,"s":{"p":["*%_"],"r":"Mu"},"n":"values"},{"n":"values","s":{"p":["*%_"],"r":"Mu"},"m":1,"k":"m"},{"k":"m","m":1,"s":{"p":["*%_"],"r":"Seq:D"},"n":"values"},{"s":{"r":"Mu","p":["|"]},"n":"unshift","m":0,"k":"m"},{"s":{"r":"Mu","p":["*%_"]},"n":"roll","k":"m","m":1},{"n":"roll","s":{"p":["Whatever $","*%_"],"r":"Mu"},"k":"m","m":1},{"n":"roll","s":{"p":["\\number","*%_"],"r":"Mu"},"k":"m","m":1},{"k":"m","m":1,"n":"pairs","s":{"r":"Mu","p":["*%_"]}},{"m":1,"k":"m","n":"pairs","s":{"r":"Mu","p":["*%_"]}},{"s":{"r":"Seq:D","p":["*%_"]},"n":"pairs","m":1,"k":"m"},{"k":"m","m":1,"s":{"p":["*%_"],"r":"Mu"},"n":"gist"},{"s":{"p":["*%_"],"r":"Mu"},"n":"gist","k":"m","m":1},{"n":"gist","s":{"r":"Str:D","p":["*%_"]},"k":"m","m":1},{"k":"m","m":0,"n":"BIND-POS","s":{"p":["Int:D \\pos","\\what","*%_"],"r":"Mu"}},{"k":"m","m":1,"n":"AT-POS","s":{"p":["int \\pos","*%_"],"r":"Mu"}},{"s":{"r":"Mu","p":["Int:D \\pos","*%_"]},"n":"AT-POS","k":"m","m":1},{"k":"m","m":1,"s":{"r":"Mu","p":["Num:D \\pos","*%_"]},"n":"AT-POS"},{"s":{"r":"Mu","p":["Any:D \\pos","*%_"]},"n":"AT-POS","k":"m","m":1},{"k":"m","m":1,"n":"AT-POS","s":{"p":["int \\pos","*%_"],"r":"Mu"}},{"n":"AT-POS","s":{"r":"Mu","p":["Int:D \\pos","*%_"]},"k":"m","m":1},{"s":{"r":"Mu","p":["Num:D \\pos","*%_"]},"n":"AT-POS","k":"m","m":1},{"k":"m","m":1,"s":{"r":"Mu","p":["Any:D \\pos","*%_"]},"n":"AT-POS"},{"k":"m","m":1,"s":{"r":"Mu","p":["Any:U \\pos","*%_"]},"n":"AT-POS"},{"k":"m","m":1,"n":"AT-POS","s":{"p":["\\one","\\two","*%_"],"r":"Mu"}},{"n":"AT-POS","s":{"p":["\\one","\\two","\\three","*%_"],"r":"Mu"},"k":"m","m":1},{"s":{"r":"Mu","p":["**@indices","*%_"]},"n":"AT-POS","k":"m","m":1},{"s":{"r":"Mu","p":["int $pos","*%_"]},"n":"AT-POS","m":1,"k":"m"},{"m":1,"k":"m","n":"AT-POS","s":{"p":["Int:D $pos","*%_"],"r":"Mu"}},{"k":"m","m":0,"n":"CALL-ME","s":{"r":"Mu","p":["|c is raw"]}},{"n":"chrs","s":{"r":"Mu","p":["*%_"]},"k":"m","m":1},{"m":1,"k":"m","s":{"p":["*%_"],"r":"Str:D"},"n":"chrs"},{"k":"m","m":0,"n":"sum","s":{"r":"Mu","p":["*%_"]}},{"m":0,"k":"m","s":{"r":"Mu","p":["|"]},"n":"shift"},{"n":"keys","s":{"p":["*%_"],"r":"Mu"},"m":1,"k":"m"},{"m":1,"k":"m","s":{"p":["*%_"],"r":"Mu"},"n":"keys"},{"m":1,"k":"m","s":{"p":["*%_"],"r":"Seq:D"},"n":"keys"},{"s":{"p":["*%_"],"r":"Mu"},"n":"pick","m":1,"k":"m"},{"m":1,"k":"m","s":{"p":["Callable:D $calculate","*%_"],"r":"Mu"},"n":"pick"},{"k":"m","m":1,"n":"pick","s":{"r":"Mu","p":["$number is copy","*%_"]}},{"s":{"r":"Bool","p":["*%_"]},"n":"Bool","m":1,"k":"m"},{"k":"m","m":1,"s":{"p":["*%_"],"r":"Mu"},"n":"Bool"},{"k":"m","m":1,"s":{"p":["*%_"],"r":"Bool:D"},"n":"Bool"},{"m":1,"k":"m","s":{"r":"Int","p":["*%_"]},"n":"elems"},{"k":"m","m":1,"n":"elems","s":{"p":["*%_"],"r":"Mu"}},{"m":1,"k":"m","n":"elems","s":{"r":"Int:D","p":["*%_"]}},{"k":"m","m":1,"n":"List","s":{"p":["*%_"],"r":"Mu"}},{"k":"m","m":1,"n":"List","s":{"p":["*%_"],"r":"List:D"}},{"s":{"p":["@auto","%init","*%_"],"r":"Mu"},"n":"BUILDALL","m":0,"k":"s"},{"k":"m","m":0,"s":{"p":["int $offset","int $size","*%_"],"r":"Array:D"},"n":"!splice-offset-size"},{"m":0,"k":"m","s":{"r":"Array:D","p":["int $offset","int $size","@new","*%_"]},"n":"!splice-offset-size-new"},{"m":0,"k":"m","n":"!difficult-shape","s":{"r":"Array:D","p":["\\shape","*%_"]}},{"s":{"r":"Array:D","p":["@values","*%_"]},"n":"!prepend-list","m":0,"k":"m"},{"k":"m","m":0,"n":"!append-list","s":{"p":["@values","*%_"],"r":"Array:D"}},{"k":"m","m":0,"s":{"r":"Mu","p":["int $pos","*%_"]},"n":"!AT_POS_CONTAINER"},{"k":"m","m":0,"n":"!ASSIGN_POS_SLOW_PATH","s":{"r":"Mu","p":["Int:D $pos","Mu \\assignee","*%_"]}},{"k":"m","m":0,"n":"!INDEX_OOR","s":{"r":"Mu","p":["$pos","*%_"]}},{"s":{"p":["$got","$offset","*%_"],"r":"Mu"},"n":"!splice-size-fail","m":0,"k":"m"},{"s":{"p":["Int:D $pos","Mu \\assignee_decont","*%_"],"r":"Mu"},"n":"!ASSIGN_POS_FAST_PATH","m":0,"k":"m"},{"m":0,"k":"m","n":"!splice-offset-fail","s":{"p":["$got","*%_"],"r":"Mu"}},{"s":{"p":["int $pos","*%_"],"r":"Mu"},"n":"!AT_POS_SLOW","m":0,"k":"m"},{"s":{"r":"Array:D","p":["int $offset","*%_"]},"n":"!splice-offset","k":"m","m":0},{"n":"!splice-save","s":{"r":"Array:D","p":["int $offset","int $size","\\removed","*%_"]},"m":0,"k":"m"}],"t":"Array","n":"Array"},{"k":"v","n":"&not","t":"Sub"},{"k":"s","m":1,"s":{"p":["Mu $x"],"r":"Mu"},"n":"not"},{"t":"Sub","n":"&rmdir","k":"v"},{"k":"s","m":1,"n":"rmdir","s":{"p":["*@filenames"],"r":"Mu"}},{"t":"num32","n":"num32","k":"n"},{"k":"v","n":"&infix:<lcm>","t":"Sub+{is-pure}+{Precedence}"},{"m":1,"k":"s","n":"infix:<lcm>","s":{"r":"Mu","p":["Int:D $x = 1"]}},{"k":"s","m":1,"s":{"r":"Mu","p":["\\a","\\b"]},"n":"infix:<lcm>"},{"s":{"r":"Int:D","p":["Int:D \\a","Int:D \\b"]},"n":"infix:<lcm>","m":1,"k":"s"},{"s":{"p":["int $a","int $b"],"r":"int"},"n":"infix:<lcm>","m":1,"k":"s"},{"k":"e","n":"SeekFromEnd","t":"SeekType"},{"n":"NaN","t":"Num","k":"c","m":[{"s":{"r":"Mu","p":["*%_"]},"n":"Capture","k":"m","m":0},{"s":{"p":["*%_"],"r":"Mu"},"n":"Num","k":"m","m":0},{"s":{"r":"Mu","p":["*%_"]},"n":"Bridge","m":0,"k":"m"},{"m":0,"k":"m","n":"Range","s":{"r":"Mu","p":["*%_"]}},{"n":"Int","s":{"r":"Mu","p":["*%_"]},"m":0,"k":"m"},{"k":"m","m":0,"s":{"p":["Real $epsilon = 1e-06",":$fat","*%_"],"r":"Mu"},"n":"Rat"},{"s":{"p":["Real $epsilon = 1e-06","*%_"],"r":"Mu"},"n":"FatRat","m":0,"k":"m"},{"k":"m","m":0,"s":{"r":"Mu","p":["*%_"]},"n":"succ"},{"k":"m","m":0,"s":{"p":["*%_"],"r":"Mu"},"n":"pred"},{"m":0,"k":"m","n":"isNaN","s":{"r":"Mu","p":["*%_"]}},{"k":"m","m":0,"s":{"p":["*%_"],"r":"Mu"},"n":"abs"},{"m":1,"k":"m","n":"log","s":{"r":"Mu","p":["*%_"]}},{"k":"m","m":1,"n":"log","s":{"r":"Mu","p":["Num \\base","*%_"]}},{"n":"log","s":{"r":"Mu","p":["*%_"]},"m":1,"k":"m"},{"m":1,"k":"m","s":{"r":"Mu","p":["Real $base","*%_"]},"n":"log"},{"n":"log","s":{"r":"Mu","p":["Cool $base","*%_"]},"k":"m","m":1},{"k":"m","m":1,"s":{"p":["Numeric $base","*%_"],"r":"Mu"},"n":"log"},{"k":"m","m":1,"s":{"p":["*%_"],"r":"Mu"},"n":"sqrt"},{"k":"m","m":0,"n":"rand","s":{"r":"Mu","p":["*%_"]}},{"s":{"r":"Mu","p":["*%_"]},"n":"ceiling","k":"m","m":0},{"s":{"r":"Mu","p":["*%_"]},"n":"floor","k":"m","m":0},{"n":"sin","s":{"r":"Mu","p":["*%_"]},"k":"m","m":1},{"k":"m","m":1,"s":{"p":["*%_"],"r":"Mu"},"n":"asin"},{"s":{"r":"Mu","p":["*%_"]},"n":"cos","m":1,"k":"m"},{"m":1,"k":"m","n":"acos","s":{"p":["*%_"],"r":"Mu"}},{"m":1,"k":"m","s":{"p":["*%_"],"r":"Mu"},"n":"tan"},{"n":"atan","s":{"p":["*%_"],"r":"Mu"},"m":1,"k":"m"},{"m":1,"k":"m","s":{"r":"Mu","p":["*%_"]},"n":"sec"},{"n":"asec","s":{"r":"Mu","p":["*%_"]},"m":1,"k":"m"},{"k":"m","m":0,"n":"cosec","s":{"r":"Mu","p":["*%_"]}},{"k":"m","m":0,"s":{"r":"Mu","p":["*%_"]},"n":"acosec"},{"s":{"r":"Mu","p":["*%_"]},"n":"cotan","k":"m","m":0},{"s":{"r":"Mu","p":["*%_"]},"n":"acotan","m":0,"k":"m"},{"k":"m","m":1,"n":"sinh","s":{"r":"Mu","p":["*%_"]}},{"m":1,"k":"m","s":{"r":"Mu","p":["*%_"]},"n":"asinh"},{"k":"m","m":1,"n":"cosh","s":{"p":["*%_"],"r":"Mu"}},{"n":"acosh","s":{"p":["*%_"],"r":"Mu"},"k":"m","m":1},{"m":1,"k":"m","n":"tanh","s":{"r":"Mu","p":["*%_"]}},{"n":"atanh","s":{"p":["*%_"],"r":"Mu"},"m":1,"k":"m"},{"m":1,"k":"m","s":{"p":["*%_"],"r":"Mu"},"n":"atanh"},{"s":{"p":["*%_"],"r":"Mu"},"n":"sech","k":"m","m":1},{"n":"asech","s":{"r":"Mu","p":["*%_"]},"m":1,"k":"m"},{"n":"cosech","s":{"p":["*%_"],"r":"Mu"},"k":"m","m":1},{"n":"acosech","s":{"r":"Mu","p":["*%_"]},"m":1,"k":"m"},{"m":1,"k":"m","s":{"r":"Mu","p":["*%_"]},"n":"cotanh"},{"m":1,"k":"m","s":{"p":["*%_"],"r":"Mu"},"n":"acotanh"},{"k":"m","m":0,"s":{"r":"Bool:D","p":["*%_"]},"n":"is-prime"},{"m":0,"k":"m","n":"narrow","s":{"p":["*%_"],"r":"Mu"}},{"m":0,"k":"m","n":"sign","s":{"p":["*%_"],"r":"Mu"}},{"s":{"r":"Mu","p":["*%_"]},"n":"conj","k":"m","m":0},{"k":"m","m":1,"n":"atan2","s":{"p":["Num:D $x = 1e0","*%_"],"r":"Mu"}},{"n":"atan2","s":{"r":"Mu","p":["Real $x = 1e0","*%_"]},"k":"m","m":1},{"m":1,"k":"m","n":"atan2","s":{"p":["Cool $x = 1e0","*%_"],"r":"Mu"}},{"k":"m","m":1,"n":"round","s":{"r":"Mu","p":["*%_"]}},{"s":{"r":"Mu","p":["$scale","*%_"]},"n":"round","m":1,"k":"m"},{"m":0,"k":"m","s":{"r":"Mu","p":["Real $angle","*%_"]},"n":"unpolar"},{"m":0,"k":"m","s":{"p":["*%_"],"r":"Mu"},"n":"cis"},{"s":{"r":"Mu","p":["*%_"]},"n":"Complex","m":0,"k":"m"},{"s":{"p":["*%_"],"r":"Mu"},"n":"exp","k":"m","m":1},{"s":{"p":["*%_"],"r":"Mu"},"n":"exp","k":"m","m":1},{"m":1,"k":"m","n":"exp","s":{"p":["$base","*%_"],"r":"Mu"}},{"m":0,"k":"m","s":{"p":["*%_"],"r":"Mu"},"n":"truncate"},{"m":0,"k":"m","s":{"r":"Mu","p":["+@mods","*%_"]},"n":"polymod"},{"n":"base","s":{"p":["Int:D $base","$digits? is copy","*%_"],"r":"Mu"},"k":"m","m":0},{"m":0,"k":"m","s":{"r":"Mu","p":["*%_"]},"n":"log10"},{"n":"roots","s":{"p":["Cool $n","*%_"],"r":"Mu"},"m":0,"k":"m"},{"k":"m","m":1,"s":{"r":"ValueObjAt:D","p":["*%_"]},"n":"WHICH"},{"k":"m","m":1,"n":"WHICH","s":{"r":"ObjAt:D","p":["*%_"]}},{"k":"m","m":1,"n":"WHICH","s":{"p":["*%_"],"r":"ValueObjAt:D"}},{"s":{"p":["*%_"],"r":"Bool"},"n":"Bool","m":1,"k":"m"},{"n":"Bool","s":{"r":"Mu","p":["*%_"]},"m":1,"k":"m"},{"n":"Bool","s":{"p":["*%_"],"r":"Mu"},"k":"m","m":1},{"k":"m","m":1,"n":"Bool","s":{"r":"Mu","p":["*%_"]}},{"k":"m","m":1,"s":{"r":"Mu","p":["*%attrinit"]},"n":"new"},{"k":"m","m":1,"n":"new","s":{"p":["$","*@","*%_"],"r":"Mu"}},{"s":{"p":["*%_"],"r":"Mu"},"n":"new","m":1,"k":"m"},{"k":"m","m":1,"s":{"p":["$n","*%_"],"r":"Mu"},"n":"new"},{"k":"m","m":1,"s":{"p":["*%_"],"r":"Mu"},"n":"perl"},{"k":"m","m":1,"n":"perl","s":{"r":"Mu","p":["*%_"]}},{"n":"perl","s":{"r":"Mu","p":["*%_"]},"m":1,"k":"m"},{"k":"m","m":1,"s":{"r":"Mu","p":["*%_"]},"n":"Str"},{"s":{"p":["*%_"],"r":"Mu"},"n":"Str","m":1,"k":"m"},{"n":"Str","s":{"p":["*%_"],"r":"Mu"},"m":1,"k":"m"},{"m":1,"k":"m","n":"Str","s":{"r":"Mu","p":["*%_"]}},{"k":"m","m":1,"s":{"r":"Mu","p":["*%_"]},"n":"Real"},{"s":{"p":["*%_"],"r":"Mu"},"n":"Real","m":1,"k":"m"},{"k":"m","m":1,"n":"Real","s":{"p":["*%_"],"r":"Mu"}},{"m":1,"k":"m","s":{"p":["*%_"],"r":"Mu"},"n":"Real"},{"m":1,"k":"m","s":{"r":"Mu","p":["*%_"]},"n":"Numeric"},{"n":"Numeric","s":{"p":["*%_"],"r":"Mu"},"m":1,"k":"m"},{"n":"Numeric","s":{"r":"Mu","p":["*%_"]},"m":1,"k":"m"},{"n":"ACCEPTS","s":{"r":"Mu","p":["\\topic","*%_"]},"k":"m","m":1},{"n":"ACCEPTS","s":{"r":"Mu","p":["Mu:U \\topic","*%_"]},"k":"m","m":1},{"m":1,"k":"m","s":{"p":["Mu:D \\a","*%_"],"r":"Mu"},"n":"ACCEPTS"},{"n":"ACCEPTS","s":{"r":"Bool","p":["Mu:U $","*%_"]},"k":"m","m":1},{"n":"ACCEPTS","s":{"r":"Bool:D","p":["\\topic","*%_"]},"k":"m","m":1},{"s":{"p":["Any:D \\a","*%_"],"r":"Mu"},"n":"ACCEPTS","m":1,"k":"m"},{"s":{"r":"Mu","p":["*%_"]},"n":"gist","k":"m","m":1},{"s":{"r":"Mu","p":["*%_"]},"n":"gist","k":"m","m":1},{"m":1,"k":"m","n":"gist","s":{"r":"Mu","p":["*%_"]}},{"n":"DUMP","s":{"p":["*%_"],"r":"Mu"},"k":"m","m":1},{"n":"DUMP","s":{"r":"Mu","p":[":$indent-step = 4",":%ctx","*%_"]},"k":"m","m":1},{"k":"m","m":1,"s":{"r":"Mu","p":["*%_"]},"n":"DUMP"},{"k":"s","m":0,"s":{"r":"Mu","p":["@auto","%init","*%_"]},"n":"BUILDALL"}],"b":"C"},{"t":"Sub+{is-pure}+{Precedence}","n":"&infix:<(cont)>","k":"v"},{"s":{"r":"Bool:D","p":["\\a","\\b"]},"n":"infix:<(cont)>","k":"s","m":1},{"n":"&rand","t":"Sub","k":"v"},{"n":"rand","s":{"r":"Num:D","p":[]},"k":"s","m":1},{"n":"UInt","t":"Int","k":"ss"},{"k":"v","t":"Sub+{is-pure}","n":"&sinh"},{"s":{"p":["Numeric \\x"],"r":"Mu"},"n":"sinh","k":"s","m":1},{"n":"sinh","s":{"r":"Mu","p":["Cool \\x"]},"m":1,"k":"s"},{"m":1,"k":"s","n":"sinh","s":{"p":["num $x"],"r":"num"}},{"b":"C","k":"ro","m":[{"k":"m","m":0,"s":{"p":["*%_"],"r":"Str"},"n":"name"},{"n":"alternative-names","s":{"r":"Mu","p":["*%_"]},"k":"m","m":0},{"s":{"p":["*%options"],"r":"Encoding::Encoder"},"n":"encoder","k":"m","m":0},{"k":"m","m":0,"s":{"p":["*%options"],"r":"Encoding::Decoder"},"n":"decoder"}],"d":"TITLE\nrole Encoding\n\nSUBTITLE\nSupport for character encodings.\n\n    role Encoding { ... }\n\nThe Encoding role is implemented by classes that provide a character\nencoding, such as ASCII or UTF-8. Besides being used by the built-in\ncharacter encodings, it may also be implemented by users to provide new\nencodings. Instances of objects doing this role are typically obtained\nusing Encoding::Registry. For a list of supported encodings, see\nIO::Handle.\n\nAll methods provided by this role are stubs; they should be implemented by\nconsumers of the role.\n\n","n":"Encoding","t":"Encoding"},{"d":"TITLE\nclass Encoding::Registry\n\nSUBTITLE\nManagement of available encodings\n\n    class Encoding::Registry {}\n\nEncoding::Registry is initialized with a list of encoding that is available\nfor any Raku application, namely:\n\n  * utf8\n\n  * utf8-c8\n\n  * utf16\n\n  * utf16le\n\n  * utf16be\n\n  * utf32, utf-32\n\n  * ascii\n\n  * iso-8859-1, iso_8859-1:1987, iso_8859-1, iso-ir-100, latin1, latin-1,\n  csisolatin1, l1, ibm819, cp819\n\n  * windows-1251\n\n  * windows-1252\n\n  * windows-932\n\n","k":"c","m":[{"k":"m","m":0,"s":{"p":["Encoding $enc","*%_"],"r":"Nil"},"n":"register"},{"s":{"p":["$name","*%_"],"r":"Mu"},"n":"find","k":"m","m":0},{"m":0,"k":"s","n":"BUILDALL","s":{"p":["@auto","%init","*%_"],"r":"Mu"}}],"b":"A","t":"Encoding::Registry","n":"Encoding::Registry"},{"n":"Encoding::Builtin","t":"Encoding::Builtin","m":[{"k":"m","m":0,"n":"new","s":{"p":["*%_"],"r":"Mu"}},{"s":{"p":["\\name","\\alternatives","*%_"],"r":"Mu"},"n":"SET-SELF","k":"m","m":0},{"n":"alternative-names","s":{"p":["*%_"],"r":"Mu"},"m":0,"k":"m"},{"s":{"r":"Encoding::Decoder","p":[":$replacement",":$translate-nl",":$strict","*%_"]},"n":"decoder","k":"m","m":0},{"s":{"p":[":$replacement",":$translate-nl",":$strict","*%_"],"r":"Encoding::Encoder"},"n":"encoder","m":0,"k":"m"},{"k":"m","m":0,"n":"name","s":{"r":"Mu","p":["*%_"]}},{"n":"BUILDALL","s":{"p":["@auto","%init","*%_"],"r":"Mu"},"k":"s","m":0},{"k":"m","m":0,"n":"!rep-char","s":{"r":"Mu","p":["$replacement","*%_"]}},{"n":"!buf-type","s":{"r":"Mu","p":["*%_"]},"k":"m","m":0}],"k":"c","a":[{"k":"v","t":"Str","n":"$.name"},{"k":"v","t":"Mu","n":"$!alternative-names"}],"b":"A"},{"m":[{"m":0,"k":"m","n":"encode-chars","s":{"r":"Blob:D","p":["Str:D $","*%_"]}}],"k":"ro","b":"C","t":"Encoding::Encoder","n":"Encoding::Encoder"},{"b":"A","a":[{"k":"v","t":"Encoding::Encoder","n":"$!delegate"}],"m":[{"m":0,"k":"m","n":"new","s":{"p":["Encoding::Encoder $delegate","*%_"],"r":"Mu"}},{"k":"m","m":0,"s":{"r":"Blob:D","p":["Str:D $str","*%_"]},"n":"encode-chars"},{"s":{"r":"Mu","p":["@auto","%init","*%_"]},"n":"BUILDALL","k":"s","m":0},{"k":"m","m":0,"s":{"p":["Encoding::Encoder $delegate","*%_"],"r":"Mu"},"n":"!setup"}],"k":"c","n":"Encoding::Encoder::TranslateNewlineWrapper","t":"Encoding::Encoder::TranslateNewlineWrapper"},{"n":"Encoding::Encoder::Builtin","t":"Encoding::Encoder::Builtin","b":"A","a":[{"k":"v","t":"str","n":"$!encoding"},{"t":"Blob","n":"$!type","k":"v"},{"t":"Mu","n":"$!replacement","k":"v"},{"t":"int","n":"$!config","k":"v"}],"k":"c","m":[{"s":{"p":["Str $encoding","Blob:U $type",":$replacement",":$strict","*%_"],"r":"Mu"},"n":"new","k":"m","m":0},{"s":{"p":["str $str","*%_"],"r":"Blob:D"},"n":"encode-chars","k":"m","m":0},{"n":"BUILDALL","s":{"p":["@auto","%init","*%_"],"r":"Mu"},"m":0,"k":"s"},{"k":"m","m":0,"n":"!setup","s":{"r":"Mu","p":["$encoding","$type",":$replacement",":$strict","*%_"]}}]},{"b":"C","k":"ro","m":[{"k":"m","m":0,"n":"add-bytes","s":{"r":"Nil","p":["Blob:D $bytes","*%_"]}},{"s":{"p":["*%_"],"r":"Str:D"},"n":"consume-available-chars","k":"m","m":0},{"k":"m","m":0,"s":{"r":"Str:D","p":["*%_"]},"n":"consume-all-chars"},{"n":"consume-exactly-chars","s":{"r":"Str","p":["int $chars","Bool:D :$eof = Bool::False","*%_"]},"m":0,"k":"m"},{"n":"set-line-separators","s":{"r":"Nil","p":["@seps","*%_"]},"m":0,"k":"m"},{"n":"consume-line-chars","s":{"r":"Str","p":["Bool:D :$chomp = Bool::False","Bool:D :$eof = Bool::False","*%_"]},"m":0,"k":"m"},{"m":0,"k":"m","n":"is-empty","s":{"p":["*%_"],"r":"Bool"}},{"k":"m","m":0,"n":"bytes-available","s":{"p":["*%_"],"r":"Int:D"}},{"n":"consume-exactly-bytes","s":{"p":["int $bytes","*%_"],"r":"Blob"},"k":"m","m":0}],"t":"Encoding::Decoder","n":"Encoding::Decoder"},{"t":"Encoding::Decoder::Builtin","n":"Encoding::Decoder::Builtin","b":"A","k":"c","m":[{"n":"new","s":{"r":"Mu","p":["str $encoding",":$translate-nl",":$replacement",":$strict","*%_"]},"k":"m","m":0},{"m":0,"k":"m","s":{"p":["Blob:D $bytes","*%_"],"r":"Nil"},"n":"add-bytes"},{"s":{"r":"Str:D","p":["*%_"]},"n":"consume-available-chars","m":0,"k":"m"},{"n":"consume-all-chars","s":{"p":["*%_"],"r":"Str:D"},"k":"m","m":0},{"k":"m","m":0,"s":{"r":"Str","p":["int $chars","Bool:D :$eof = Bool::False","*%_"]},"n":"consume-exactly-chars"},{"k":"m","m":0,"n":"set-line-separators","s":{"p":["@seps","*%_"],"r":"Nil"}},{"k":"m","m":0,"s":{"r":"Str","p":["Bool:D :$chomp = Bool::False","Bool:D :$eof = Bool::False","*%_"]},"n":"consume-line-chars"},{"n":"is-empty","s":{"p":["*%_"],"r":"Mu"},"k":"m","m":0},{"n":"bytes-available","s":{"p":["*%_"],"r":"Mu"},"k":"m","m":0},{"n":"consume-exactly-bytes","s":{"p":["int $bytes","*%_"],"r":"Blob"},"m":0,"k":"m"},{"k":"s","m":0,"s":{"p":["@auto","%init","*%_"],"r":"Mu"},"n":"BUILDALL"}]},{"k":"v","n":"&round","t":"Sub+{is-pure}"},{"s":{"p":["$a"],"r":"Mu"},"n":"round","m":1,"k":"s"},{"k":"s","m":1,"s":{"r":"Mu","p":["$a","$scale"]},"n":"round"},{"n":"SIGUSR2","t":"Signal","k":"e"},{"n":"&samemark","t":"Sub","k":"v"},{"n":"samemark","s":{"p":["$s","$pat"],"r":"Str:D"},"m":1,"k":"s"},{"d":"TITLE\nrole Associative\n\nSUBTITLE\nObject that supports looking up values by key\n\n    role Associative[::TValue = Mu, ::TKey = Str(Any)] { }\n\nA common role for types that support name-based lookup through\npostcircumfix:<{ }>, for example Hash and Map. It is used for type checks\nin operators that expect to find specific methods to call. See Subscripts\nfor details.\n\nThe % sigil restricts variables to objects that do Associative, so you will\nhave to mix in that role if you want to use it for your classes.\n\n    class Whatever {};\n    my %whatever := Whatever.new;\n    # OUTPUT: «Type check failed in binding; expected Associative but got Whatever\n\n\nPlease note that we are using binding := here, since by default %\nassignments expect a Hash in the right-hand side. However, with the\nAssociative role:\n\n    class Whatever is Associative {};\n    my %whatever := Whatever.new;\n\nwill be syntactically correct.\n\n","k":"ro","m":[{"k":"m","m":0,"s":{"r":"Mu","p":["*%_"]},"n":"of"},{"m":0,"k":"m","s":{"p":["*%_"],"r":"Mu"},"n":"keyof"}],"b":"C","t":"Associative","n":"Associative"},{"k":"v","n":"&infix:<+^>","t":"Sub+{is-pure}+{Precedence}"},{"m":1,"k":"s","n":"infix:<+^>","s":{"p":[],"r":"Mu"}},{"m":1,"k":"s","n":"infix:<+^>","s":{"r":"Mu","p":["$x"]}},{"n":"infix:<+^>","s":{"p":["$x","$y"],"r":"Mu"},"m":1,"k":"s"},{"k":"s","m":1,"s":{"r":"Int:D","p":["Int:D \\a","Int:D \\b"]},"n":"infix:<+^>"},{"m":1,"k":"s","n":"infix:<+^>","s":{"r":"int","p":["int $a","int $b"]}},{"k":"v","n":"&prefix:<?>","t":"Sub+{is-pure}+{Precedence}"},{"m":1,"k":"s","s":{"p":["Bool:D \\a"],"r":"Mu"},"n":"prefix:<?>"},{"k":"s","m":1,"s":{"p":["Bool:U \\a"],"r":"Mu"},"n":"prefix:<?>"},{"k":"s","m":1,"n":"prefix:<?>","s":{"r":"Mu","p":["Mu \\a"]}},{"n":"Proc","t":"Proc","a":[{"n":"$.in","t":"IO::Pipe","k":"v"},{"t":"IO::Pipe","n":"$.out","k":"v"},{"n":"$.err","t":"IO::Pipe","k":"v"},{"t":"Mu","n":"$.exitcode","k":"v"},{"t":"Mu","n":"$.signal","k":"v"},{"n":"$.pid","t":"Mu","k":"v"},{"t":"Positional","n":"@.command","k":"v"},{"k":"v","t":"Proc::Async","n":"$!proc"},{"n":"$!w","t":"Bool","k":"v"},{"t":"Positional","n":"@!pre-spawn","k":"v"},{"k":"v","n":"@!post-spawn","t":"Positional"},{"k":"v","n":"$!active-handles","t":"Mu"},{"n":"&!start-stdout","t":"Callable","k":"v"},{"k":"v","n":"&!start-stderr","t":"Callable"},{"n":"$!finished","t":"Mu","k":"v"}],"b":"A","k":"c","m":[{"k":"s","m":0,"s":{"r":"Nil","p":[":$in = \"-\"",":$out = \"-\"",":$err = \"-\"",":$exitcode","Bool :$bin","Bool :$chomp = Bool::True","Bool :$merge",":$command","Str :$enc","Str:D :$nl = \"\\n\"",":$signal","*%_"]},"n":"BUILD"},{"s":{"r":"Bool:D","p":["*@args where { ... }",":$cwd = { ... }",":$env","*%_"]},"n":"spawn","k":"m","m":0},{"n":"shell","s":{"p":["$cmd",":$cwd = { ... }",":$env","*%_"],"r":"Bool:D"},"k":"m","m":0},{"s":{"p":["$new_status","*%_"],"r":"Mu"},"n":"status","k":"m","m":1},{"k":"m","m":1,"s":{"p":["*%_"],"r":"Mu"},"n":"status"},{"n":"exitcode","s":{"p":["*%_"],"r":"Mu"},"m":0,"k":"m"},{"s":{"p":["*%_"],"r":"Nil"},"n":"sink","m":0,"k":"m"},{"m":1,"k":"m","s":{"p":["*%_"],"r":"Mu"},"n":"Numeric"},{"m":1,"k":"m","s":{"r":"Mu","p":["*%_"]},"n":"Numeric"},{"k":"m","m":1,"n":"Bool","s":{"r":"Bool","p":["*%_"]}},{"k":"m","m":1,"n":"Bool","s":{"r":"Mu","p":["*%_"]}},{"k":"m","m":1,"s":{"p":["*%_"],"r":"Mu"},"n":"Bool"},{"s":{"p":["*%_"],"r":"Mu"},"n":"in","k":"m","m":0},{"m":0,"k":"m","s":{"p":["*%_"],"r":"Mu"},"n":"out"},{"m":0,"k":"m","s":{"r":"Mu","p":["*%_"]},"n":"err"},{"k":"m","m":0,"s":{"p":["*%_"],"r":"Mu"},"n":"signal"},{"k":"m","m":0,"n":"pid","s":{"p":["*%_"],"r":"Mu"}},{"s":{"p":["*%_"],"r":"Mu"},"n":"command","k":"m","m":0},{"n":"BUILDALL","s":{"p":["@auto","%init","*%_"],"r":"Mu"},"k":"s","m":0},{"k":"m","m":0,"n":"!set-status","s":{"p":["$new_status","*%_"],"r":"Mu"}},{"n":"!status","s":{"r":"Mu","p":["*%_"]},"k":"m","m":0},{"m":0,"k":"m","s":{"r":"Mu","p":["*%_"]},"n":"!await-if-last-handle"},{"m":0,"k":"m","s":{"r":"Bool:D","p":["@args","$cwd","$env","*%_"]},"n":"!spawn-internal"},{"s":{"r":"Mu","p":["*%_"]},"n":"!wait-for-finish","m":0,"k":"m"}],"d":"TITLE\nclass Proc\n\nSUBTITLE\nRunning process (filehandle-based interface)\n\n    class Proc {}\n\nProc is a representation of an invocation of an external process. It\nprovides access to the input, output and error stream as well as the exit\ncode. It is typically created through the run subroutine:\n\n    my $proc = run 'echo', 'Hallo world', :out;\n    my $captured-output = $proc.out.slurp: :close;\n    say \"Output was $captured-output.perl()\";# OUTPUT: «Output was \"Hallo world\\n\"␤»\n\n\nPiping several commands is easy too. To achieve the equivalent of the pipe\necho \"Hello, world\" | cat -n in Raku, and capture the output from the\nsecond command, you can do\n\n    my $p1 = run 'echo', 'Hello, world', :out;\n    my $p2 = run 'cat', '-n', :in($p1.out), :out;\n    say $p2.out.get;\n\n\nYou can also feed the :in (standard input) pipe directly from your program,\nby setting it to True, which will make the pipe available via .in method on\nthe Proc:\n\n    my $p = run \"cat\", \"-n\", :in, :out;\n    $p.in.say: \"Hello,\\nworld!\";\n    $p.in.close;\n    say $p.out.slurp: :close;\n    # OUTPUT: «1  Hello,␤\n    #          2  world!␤»\n\n\nIn order to capture the standard error, :err can be supplied:\n\n    my $p = run \"ls\", \"-l\", \".\", \"qqrq\", :out, :err;\n    my $captured-output = $p.out.slurp: :close;\n    my $captured-error  = $p.err.slurp: :close;\n    my $exit-code       = $p.exitcode;\n\n\nIn sink context, a Proc will call its sink method, throwing an exception if\nthe process has exited with an exit code different from zero:\n\n    shell 'exit 1'\n    # OUTPUT: «(exit code 1) The spawned command 'exit 1' exited unsuccessfully (exit code: 1)␤»\n\n\nNote: Versions of Rakudo older than 2017.04 do not have .slurp available on\nIO::Pipe objects; use .slurp-rest instead.\n\nUse Proc::Async for non-blocking operations.\n\n"},{"b":"A","a":[{"t":"Mu","n":"$!ready_promise","k":"v"},{"t":"Mu","n":"$!ready_vow","k":"v"},{"k":"v","n":"$!handle_available_promise","t":"Mu"},{"k":"v","n":"$!stdout_descriptor_vow","t":"Mu"},{"k":"v","n":"$!stderr_descriptor_vow","t":"Mu"},{"k":"v","t":"Mu","n":"$!stdout_descriptor_used"},{"k":"v","n":"$!stderr_descriptor_used","t":"Mu"},{"n":"$.path","t":"Mu","k":"v"},{"t":"Positional","n":"@.args","k":"v"},{"n":"@.command","t":"List","k":"v"},{"n":"$.w","t":"Mu","k":"v"},{"k":"v","n":"$.enc","t":"Mu"},{"t":"Mu","n":"$.translate-nl","k":"v"},{"k":"v","t":"Bool","n":"$.started"},{"k":"v","t":"Mu","n":"$!stdout_supply"},{"k":"v","t":"CharsOrBytes","n":"$!stdout_type"},{"k":"v","t":"Mu","n":"$!stderr_supply"},{"k":"v","t":"CharsOrBytes","n":"$!stderr_type"},{"k":"v","t":"Mu","n":"$!merge_supply"},{"t":"CharsOrBytes","n":"$!merge_type","k":"v"},{"k":"v","t":"Mu","n":"$!stdin-fd"},{"k":"v","n":"$!stdout-fd","t":"Mu"},{"n":"$!stderr-fd","t":"Mu","k":"v"},{"k":"v","n":"$!process_handle","t":"Mu"},{"k":"v","t":"Mu","n":"$!exit_promise"},{"k":"v","t":"Positional","n":"@!promises"},{"t":"Mu","n":"$!encoder","k":"v"},{"n":"@!close-after-exit","t":"Positional","k":"v"}],"m":[{"k":"m","m":1,"s":{"r":"Mu","p":["*@args where { ... }","*%_"]},"n":"new"},{"m":0,"k":"s","s":{"r":"Nil","p":["*%_"]},"n":"TWEAK"},{"m":1,"k":"m","n":"stdout","s":{"p":[":$bin!","*%_"],"r":"Mu"}},{"n":"stdout","s":{"r":"Mu","p":[":$enc",":$translate-nl","*%_"]},"m":1,"k":"m"},{"n":"stderr","s":{"r":"Mu","p":[":$bin!","*%_"]},"k":"m","m":1},{"k":"m","m":1,"n":"stderr","s":{"p":[":$enc",":$translate-nl","*%_"],"r":"Mu"}},{"m":1,"k":"m","s":{"r":"Mu","p":[":$bin!","*%_"]},"n":"Supply"},{"k":"m","m":1,"n":"Supply","s":{"r":"Mu","p":[":$enc",":$translate-nl","*%_"]}},{"s":{"p":["IO::Handle:D $handle","*%_"],"r":"Nil"},"n":"bind-stdin","m":1,"k":"m"},{"k":"m","m":1,"s":{"r":"Nil","p":["Proc::Async::Pipe:D $pipe","*%_"]},"n":"bind-stdin"},{"s":{"p":["IO::Handle:D $handle","*%_"],"r":"Nil"},"n":"bind-stdout","k":"m","m":0},{"m":0,"k":"m","s":{"r":"Nil","p":["IO::Handle:D $handle","*%_"]},"n":"bind-stderr"},{"k":"m","m":0,"n":"ready","s":{"p":["*%_"],"r":"Promise"}},{"s":{"r":"Promise","p":["*%_"]},"n":"pid","m":0,"k":"m"},{"s":{"p":[":$scheduler = { ... }",":$ENV",":$cwd = { ... }","*%_"],"r":"Mu"},"n":"start","k":"m","m":0},{"m":0,"k":"m","s":{"p":["$str",":$scheduler = { ... }","*%_"],"r":"Mu"},"n":"print"},{"m":0,"k":"m","s":{"p":["\\x","|c is raw"],"r":"Mu"},"n":"put"},{"m":0,"k":"m","s":{"p":["\\x","|c is raw"],"r":"Mu"},"n":"say"},{"s":{"r":"Mu","p":["Blob:D $b",":$scheduler = { ... }","*%_"]},"n":"write","k":"m","m":0},{"s":{"r":"Mu","p":["*%_"]},"n":"close-stdin","m":0,"k":"m"},{"n":"kill","s":{"r":"Mu","p":["Signal:D \\signal = Signal::SIGHUP","*%_"]},"m":1,"k":"m"},{"s":{"r":"Mu","p":["Int:D \\signal","*%_"]},"n":"kill","m":1,"k":"m"},{"k":"m","m":1,"n":"kill","s":{"r":"Mu","p":["Str:D \\signal","*%_"]}},{"k":"m","m":0,"s":{"p":["*%_"],"r":"Mu"},"n":"path"},{"n":"args","s":{"p":["*%_"],"r":"Mu"},"m":0,"k":"m"},{"k":"m","m":0,"s":{"p":["*%_"],"r":"Mu"},"n":"command"},{"n":"w","s":{"r":"Mu","p":["*%_"]},"m":0,"k":"m"},{"n":"enc","s":{"r":"Mu","p":["*%_"]},"k":"m","m":0},{"n":"translate-nl","s":{"p":["*%_"],"r":"Mu"},"k":"m","m":0},{"m":0,"k":"m","n":"started","s":{"r":"Mu","p":["*%_"]}},{"m":0,"k":"s","n":"BUILDALL","s":{"r":"Mu","p":["@auto","%init","*%_"]}},{"s":{"p":["\\channel","*%_"],"r":"Mu"},"n":"!pipe-cbs","k":"m","m":0},{"m":0,"k":"m","n":"!capture","s":{"r":"Mu","p":["\\callbacks","\\std","\\the-supply","*%_"]}},{"s":{"p":[":$scheduler",":$ENV",":$cwd","*%_"],"r":"Mu"},"n":"!start-internal","k":"m","m":0},{"k":"m","m":0,"n":"!wrap-decoder","s":{"r":"Mu","p":["Supply:D $bin-supply","$enc","\\fd-vow","\\permit-channel",":$translate-nl","*%_"]}},{"m":0,"k":"m","n":"!pipe","s":{"r":"Mu","p":["\\what","\\the-supply","\\type","\\value","\\fd-vow","\\permit-channel","*%_"]}}],"k":"c","d":"TITLE\nclass Proc::Async\n\nSUBTITLE\nRunning process (asynchronous interface)\n\n    class Proc::Async {}\n\n\nProc::Async allows you to run external commands asynchronously, capturing\nstandard output and error handles, and optionally write to its standard\ninput.\n\n    my $file = ‘foo’.IO;\n    spurt $file, “and\\nCamelia\\n♡\\nme\\n”;\n\n    my $proc = Proc::Async.new: :w, ‘tac’, ‘--’, $file, ‘-’;\n    # my $proc = Proc::Async.new: :w, ‘sleep’, 15; # uncomment to try timeouts\n\n    react {\n        whenever $proc.stdout.lines { # split input on \\r\\n, \\n, and \\r\n            say ‘line: ’, $_\n        }\n        whenever $proc.stderr { # chunks\n            say ‘stderr: ’, $_\n        }\n        whenever $proc.ready {\n            say ‘PID: ’, $_ # Only in Rakudo 2018.04 and newer, otherwise Nil\n        }\n        whenever $proc.start {\n            say ‘Proc finished: exitcode=’, .exitcode, ‘ signal=’, .signal;\n            done # gracefully jump from the react block\n        }\n        whenever $proc.print: “I\\n♥\\nCamelia\\n” {\n            $proc.close-stdin\n        }\n        whenever signal(SIGTERM).merge: signal(SIGINT) {\n            once {\n                say ‘Signal received, asking the process to stop’;\n                $proc.kill; # sends SIGHUP, change appropriately\n                whenever signal($_).zip: Promise.in(2).Supply {\n                    say ‘Kill it!’;\n                    $proc.kill: SIGKILL\n                }\n            }\n        }\n        whenever Promise.in(5) {\n            say ‘Timeout. Asking the process to stop’;\n            $proc.kill; # sends SIGHUP, change appropriately\n            whenever Promise.in(2) {\n                say ‘Timeout. Forcing the process to stop’;\n                $proc.kill: SIGKILL\n            }\n        }\n    }\n\n    say ‘Program finished’;\n\n\nExample above produces the following output:\n\n    line: me\n    line: ♡\n    line: Camelia\n    line: and\n    line: Camelia\n    line: ♥\n    line: I\n    Proc finished. Exit code: 0\n    Program finished\n\n\nAlternatively, you can use Proc::Async without using a react block:\n\n    # command with arguments\n    my $proc = Proc::Async.new('echo', 'foo', 'bar');\n\n    # subscribe to new output from out and err handles:\n    $proc.stdout.tap(-> $v { print \"Output: $v\" }, quit => { say 'caught exception ' ~ .^name });\n    $proc.stderr.tap(-> $v { print \"Error:  $v\" });\n\n    say \"Starting...\";\n    my $promise = $proc.start;\n\n    # wait for the external program to terminate\n    await $promise;\n    say \"Done.\";\n\nThis produces the following output:\n\n    Starting...\n    Output: foo bar\n    Done.\n\n\nAn example that opens an external program for writing:\n\n    my $prog = Proc::Async.new(:w, 'hexdump', '-C');\n    my $promise = $prog.start;\n    await $prog.write(Buf.new(12, 42));\n    $prog.close-stdin;\n    await $promise;\n\nAn example of piping several commands like echo \"Hello, world\" | cat -n:\n\n    my $proc-echo = Proc::Async.new: 'echo', 'Hello, world';\n    my $proc-cat = Proc::Async.new: 'cat', '-n';\n    $proc-cat.bind-stdin: $proc-echo.stdout;\n    await $proc-echo.start, $proc-cat.start;\n\n","n":"Proc::Async","t":"Proc::Async"},{"a":[{"n":"$.native-descriptor","t":"Promise","k":"v"},{"k":"v","t":"Callable","n":"&!on-nd-used"},{"n":"$!tappable","t":"Tappable","k":"v"}],"b":"A","m":[{"k":"s","m":0,"s":{"r":"Mu","p":[":native-descriptor($!native-descriptor)!",":on-nd-used(&!on-nd-used)","*%_"]},"n":"BUILD"},{"m":0,"k":"m","n":"native-descriptor","s":{"p":["*%_"],"r":"Mu"}},{"k":"m","m":0,"n":"new","s":{"r":"Mu","p":["$delegate","$native-descriptor","&on-tap","&on-nd-used","*%_"]}},{"k":"s","m":0,"n":"BUILDALL","s":{"r":"Mu","p":["@auto","%init","*%_"]}},{"s":{"r":"Mu","p":["*%_"]},"n":"Promise","k":"m","m":0},{"n":"words","s":{"r":"Mu","p":["*%_"]},"k":"m","m":0},{"k":"m","m":1,"s":{"p":["*%_"],"r":"Mu"},"n":"Supply"},{"k":"m","m":1,"n":"Supply","s":{"p":["*%_"],"r":"Mu"}},{"n":"batch","s":{"p":["Int(Cool) :$elems = 0",":$seconds","*%_"],"r":"Mu"},"m":0,"k":"m"},{"n":"on-close","s":{"r":"Mu","p":["&on-close","*%_"]},"k":"m","m":0},{"n":"stable","s":{"p":["$time",":$scheduler = { ... }","*%_"],"r":"Mu"},"k":"m","m":0},{"m":0,"k":"m","s":{"p":["*%_"],"r":"Mu"},"n":"wait"},{"m":0,"k":"m","n":"tail","s":{"p":["Int(Cool) $number = 1","*%_"],"r":"Mu"}},{"k":"m","m":0,"s":{"p":["*%_"],"r":"Mu"},"n":"Capture"},{"k":"m","m":0,"n":"schedule-on","s":{"r":"Mu","p":["Scheduler $scheduler","*%_"]}},{"n":"squish","s":{"r":"Mu","p":[":&as",":&with is copy","*%_"]},"m":0,"k":"m"},{"m":0,"k":"m","s":{"p":["*%_"],"r":"Mu"},"n":"Seq"},{"s":{"p":["&with","*%_"],"r":"Mu"},"n":"reduce","k":"m","m":0},{"k":"m","m":1,"n":"sort","s":{"p":["*%_"],"r":"Mu"}},{"n":"sort","s":{"r":"Mu","p":["&by","*%_"]},"m":1,"k":"m"},{"n":"sort","s":{"r":"Mu","p":["*%_"]},"k":"m","m":1},{"k":"m","m":1,"n":"sort","s":{"r":"Mu","p":["&by","*%_"]}},{"m":0,"k":"m","s":{"r":"Mu","p":["&emit = { ... }",":&done = { ... }",":&quit = { ... }",":&tap = { ... }","*%_"]},"n":"tap"},{"m":0,"k":"m","s":{"r":"Mu","p":["**@s",":&with","*%_"]},"n":"zip"},{"k":"m","m":0,"n":"flat","s":{"r":"Mu","p":["*%_"]}},{"m":0,"k":"m","s":{"r":"Awaitable::Handle","p":["*%_"]},"n":"get-await-handle"},{"k":"m","m":0,"n":"minmax","s":{"r":"Mu","p":["&by = { ... }","*%_"]}},{"k":"m","m":0,"s":{"r":"Mu","p":["&startee","*%_"]},"n":"start"},{"m":0,"k":"m","n":"interval","s":{"p":["$interval","$delay = 0",":$scheduler = { ... }","*%_"],"r":"Mu"}},{"m":0,"k":"m","s":{"r":"Mu","p":[":$chomp = Bool::True","*%_"]},"n":"lines"},{"k":"m","m":0,"s":{"r":"Mu","p":["Int(Cool) $number = 1","*%_"]},"n":"head"},{"k":"m","m":0,"s":{"r":"Mu","p":["&mapper","*%_"]},"n":"map"},{"n":"migrate","s":{"p":["*%_"],"r":"Mu"},"k":"m","m":0},{"m":0,"k":"m","n":"zip-latest","s":{"r":"Mu","p":["**@s",":&with",":$initial","*%_"]}},{"k":"m","m":0,"n":"from-list","s":{"p":["+@values",":$scheduler = CurrentThreadScheduler","*%_"],"r":"Mu"}},{"s":{"r":"Mu","p":["$seconds?","*%_"]},"n":"elems","m":0,"k":"m"},{"n":"live","s":{"p":["*%_"],"r":"Mu"},"k":"m","m":0},{"s":{"r":"Mu","p":["&when_done","*%_"]},"n":"grab","k":"m","m":0},{"s":{"r":"Mu","p":["*%_"]},"n":"share","k":"m","m":0},{"s":{"r":"Tappable","p":["*%_"]},"n":"Tappable","m":0,"k":"m"},{"m":0,"k":"m","n":"max","s":{"p":["&by = { ... }","*%_"],"r":"Mu"}},{"n":"serial","s":{"r":"Mu","p":["*%_"]},"k":"m","m":0},{"s":{"r":"Mu","p":["*%_"]},"n":"serialize","k":"m","m":0},{"n":"categorize","s":{"p":["&mapper","*%_"],"r":"Mu"},"k":"m","m":1},{"n":"categorize","s":{"p":["%mapper","*%_"],"r":"Mu"},"k":"m","m":1},{"n":"categorize","s":{"p":["@mapper","*%_"],"r":"Mu"},"k":"m","m":1},{"m":0,"k":"m","n":"act","s":{"p":["&actor","*%others"],"r":"Mu"}},{"s":{"r":"Mu","p":["*%_"]},"n":"list","m":1,"k":"m"},{"m":1,"k":"m","s":{"r":"Mu","p":["*%_"]},"n":"list"},{"s":{"p":["*%_"],"r":"Mu"},"n":"list","k":"m","m":1},{"n":"new","s":{"r":"Mu","p":["*%_"]},"k":"m","m":1},{"k":"m","m":1,"n":"new","s":{"p":["Tappable $tappable","*%_"],"r":"Mu"}},{"k":"m","m":0,"s":{"p":["&with","*%_"],"r":"Mu"},"n":"produce"},{"s":{"p":["$elems","$seconds","$delay = 0",":$scheduler = { ... }",":$control",":$status",":$bleed",":$vent-at","*%_"],"r":"Mu"},"n":"throttle","m":1,"k":"m"},{"m":1,"k":"m","n":"throttle","s":{"r":"Mu","p":["$elems","Callable:D $process","$delay = 0",":$scheduler = { ... }",":$control",":$status",":$bleed",":$vent-at","*%_"]}},{"k":"m","m":1,"s":{"p":["&mapper","*%_"],"r":"Mu"},"n":"classify"},{"m":1,"k":"m","n":"classify","s":{"r":"Mu","p":["%mapper","*%_"]}},{"s":{"p":["@mapper","*%_"],"r":"Mu"},"n":"classify","k":"m","m":1},{"s":{"r":"Mu","p":["&producer",":&closing",":$scheduler = CurrentThreadScheduler","*%_"]},"n":"on-demand","m":0,"k":"m"},{"n":"grep","s":{"r":"Mu","p":["Mu $test","*%_"]},"k":"m","m":0},{"s":{"r":"Mu","p":["*%_"]},"n":"sanitize","m":0,"k":"m"},{"n":"delayed","s":{"r":"Mu","p":["$time",":$scheduler = { ... }","*%_"]},"m":0,"k":"m"},{"s":{"r":"Mu","p":["*%_"]},"n":"Channel","k":"m","m":0},{"k":"m","m":0,"s":{"p":["*%_"],"r":"Mu"},"n":"reverse"},{"n":"rotor","s":{"r":"Mu","p":["Int:D $batch",":$partial","*%_"]},"k":"m","m":1},{"n":"rotor","s":{"p":["*@cycle",":$partial","*%_"],"r":"Mu"},"m":1,"k":"m"},{"n":"rotor","s":{"p":["Int:D $batch",":$partial","*%_"],"r":"Mu"},"m":1,"k":"m"},{"k":"m","m":1,"s":{"r":"Mu","p":["*@cycle",":$partial","*%_"]},"n":"rotor"},{"m":0,"k":"m","n":"unique","s":{"r":"Mu","p":[":&as",":&with",":$expires","*%_"]}},{"n":"merge","s":{"p":["*@s","*%_"],"r":"Mu"},"k":"m","m":0},{"n":"do","s":{"r":"Mu","p":["&side-effect","*%_"]},"m":0,"k":"m"},{"s":{"r":"Mu","p":["Int(Cool) $number = 1","*%_"]},"n":"skip","m":0,"k":"m"},{"n":"min","s":{"p":["&by = { ... }","*%_"],"r":"Mu"},"m":0,"k":"m"},{"m":0,"k":"s","s":{"p":["Tappable :tappable($!tappable)!","*%_"],"r":"Nil"},"n":"BUILD"},{"n":"BUILDALL","s":{"r":"Mu","p":["@auto","%init","*%_"]},"m":0,"k":"s"}],"k":"c","t":"Proc::Async::Pipe","n":"Proc::Async::Pipe"},{"t":"Sub+{is-pure}+{Precedence}","n":"&infix:<(|)>","k":"v"},{"s":{"r":"Mu","p":[]},"n":"infix:<(|)>","m":1,"k":"s"},{"k":"s","m":1,"n":"infix:<(|)>","s":{"r":"Mu","p":["QuantHash:D \\a"]}},{"m":1,"k":"s","s":{"p":["\\a"],"r":"Mu"},"n":"infix:<(|)>"},{"n":"infix:<(|)>","s":{"r":"Mu","p":["Setty:D \\a","Setty:D \\b"]},"k":"s","m":1},{"k":"s","m":1,"n":"infix:<(|)>","s":{"r":"Mu","p":["Setty:D \\a","Mixy:D \\b"]}},{"m":1,"k":"s","n":"infix:<(|)>","s":{"p":["Setty:D \\a","Baggy:D \\b"],"r":"Mu"}},{"n":"infix:<(|)>","s":{"r":"Mu","p":["Mixy:D \\a","Mixy:D \\b"]},"m":1,"k":"s"},{"n":"infix:<(|)>","s":{"r":"Mu","p":["Mixy:D \\a","Baggy:D \\b"]},"k":"s","m":1},{"s":{"p":["Mixy:D \\a","Setty:D \\b"],"r":"Mu"},"n":"infix:<(|)>","k":"s","m":1},{"m":1,"k":"s","n":"infix:<(|)>","s":{"p":["Baggy:D \\a","Mixy:D \\b"],"r":"Mu"}},{"n":"infix:<(|)>","s":{"p":["Baggy:D \\a","Baggy:D \\b"],"r":"Mu"},"m":1,"k":"s"},{"s":{"r":"Mu","p":["Baggy:D \\a","Setty:D \\b"]},"n":"infix:<(|)>","k":"s","m":1},{"m":1,"k":"s","n":"infix:<(|)>","s":{"p":["Map:D \\a","Map:D \\b"],"r":"Mu"}},{"n":"infix:<(|)>","s":{"r":"Mu","p":["Iterable:D \\a","Iterable:D \\b"]},"k":"s","m":1},{"k":"s","m":1,"n":"infix:<(|)>","s":{"p":["Failure:D \\a","$"],"r":"Mu"}},{"n":"infix:<(|)>","s":{"p":["$","Failure:D \\b"],"r":"Mu"},"m":1,"k":"s"},{"k":"s","m":1,"s":{"r":"Mu","p":["\\a","\\b"]},"n":"infix:<(|)>"},{"n":"infix:<(|)>","s":{"r":"Mu","p":["**@p"]},"m":1,"k":"s"},{"t":"Sub","n":"&symlink","k":"v"},{"s":{"p":["$target","$name"],"r":"Mu"},"n":"symlink","m":1,"k":"s"},{"t":"Sub","n":"&shell","k":"v"},{"s":{"r":"Mu","p":["$cmd",":$in = \"-\"",":$out = \"-\"",":$err = \"-\"","Bool :$bin","Bool :$chomp = Bool::True","Bool :$merge","Str :$enc","Str:D :$nl = \"\\n\"",":$cwd = { ... }",":$env"]},"n":"shell","m":1,"k":"s"},{"b":"C","a":[{"k":"v","n":"@!list","t":"List"},{"k":"v","n":"%!hash","t":"Hash"}],"m":[{"n":"ast","s":{"p":["*%_"],"r":"Mu"},"m":0,"k":"m"},{"k":"m","m":0,"n":"made","s":{"p":["*%_"],"r":"Mu"}},{"m":0,"k":"m","s":{"r":"Mu","p":["*%_"]},"n":"STR"},{"n":"MATCH","s":{"p":["*%_"],"r":"Mu"},"m":0,"k":"m"},{"s":{"p":["*%_"],"r":"Mu"},"n":"CURSOR_NEXT","m":0,"k":"m"},{"s":{"p":["*%_"],"r":"Mu"},"n":"CURSOR_OVERLAP","m":0,"k":"m"},{"m":0,"k":"m","s":{"p":["*%_"],"r":"Mu"},"n":"CURSOR_MORE"},{"k":"m","m":1,"n":"INTERPOLATE","s":{"r":"Mu","p":["Callable:D \\var","$","$","$","$","$","*%_"]}},{"k":"m","m":1,"n":"INTERPOLATE","s":{"p":["Iterable:D \\var","int \\im","int \\monkey","int \\s","$","\\context","*%_"],"r":"Mu"}},{"k":"m","m":1,"s":{"p":["Associative:D \\var","int \\im","$","$","$","\\context","*%_"],"r":"Mu"},"n":"INTERPOLATE"},{"m":1,"k":"m","s":{"p":["Regex:D \\var","int \\im","int \\monkey","$","$","$","*%_"],"r":"Mu"},"n":"INTERPOLATE"},{"n":"INTERPOLATE","s":{"p":["Mu:D \\var","int \\im","int \\monkey","$","$","\\context","*%_"],"r":"Mu"},"k":"m","m":1},{"n":"INTERPOLATE","s":{"p":["Mu:U \\var","$","$","$","$","$","*%_"],"r":"Mu"},"m":1,"k":"m"},{"s":{"r":"Mu","p":["Associative:D $","$","$","$","$","$","*%_"]},"n":"INTERPOLATE_ASSERTION","m":1,"k":"m"},{"s":{"p":["Iterable:D \\var","int \\im","int \\monkey","int \\s","$","\\context","*%_"],"r":"Mu"},"n":"INTERPOLATE_ASSERTION","k":"m","m":1},{"k":"m","m":1,"n":"INTERPOLATE_ASSERTION","s":{"r":"Mu","p":["Mu:D \\var","int \\im","int \\monkey","$","$","\\context","*%_"]}},{"k":"m","m":0,"s":{"r":"Mu","p":["$rule","|c is raw"]},"n":"CALL_SUBRULE"},{"n":"DYNQUANT_LIMITS","s":{"r":"Mu","p":["$mm","*%_"]},"m":0,"k":"m"},{"m":0,"k":"m","s":{"r":"Mu","p":["$grammar","$name","|"]},"n":"OTHERGRAMMAR"},{"m":0,"k":"m","s":{"r":"Mu","p":["$name","|c is raw"]},"n":"INDMETHOD"},{"k":"m","m":0,"n":"INDRULE","s":{"p":["$rule","|c is raw"],"r":"Mu"}},{"k":"m","m":0,"n":"RECURSE","s":{"p":["*%_"],"r":"Mu"}},{"k":"s","m":0,"n":"BUILD","s":{"p":[":$orig = \"\"",":$from = 0",":to(:$pos)",":ast(:$made)",":$shared",":$braid",":$list",":$hash","*%_"],"r":"Mu"}},{"m":0,"k":"m","s":{"p":["*%_"],"r":"Mu"},"n":"clone"},{"s":{"p":["*%_"],"r":"Bool"},"n":"Bool","k":"m","m":1},{"m":1,"k":"m","n":"Bool","s":{"p":["*%_"],"r":"Mu"}},{"k":"m","m":0,"s":{"p":["*%_"],"r":"Mu"},"n":"prematch"},{"n":"postmatch","s":{"r":"Mu","p":["*%_"]},"m":0,"k":"m"},{"s":{"r":"Mu","p":["*%_"]},"n":"caps","m":0,"k":"m"},{"s":{"r":"Mu","p":["*%_"]},"n":"chunks","k":"m","m":0},{"k":"m","m":1,"s":{"r":"ValueObjAt:D","p":["*%_"]},"n":"WHICH"},{"s":{"p":["*%_"],"r":"ObjAt:D"},"n":"WHICH","m":1,"k":"m"},{"n":"WHICH","s":{"r":"ValueObjAt:D","p":["*%_"]},"k":"m","m":1},{"m":1,"k":"m","s":{"p":["*%_"],"r":"ObjAt:D"},"n":"WHICH"},{"m":1,"k":"m","n":"Numeric","s":{"r":"Mu","p":["*%_"]}},{"k":"m","m":1,"s":{"p":["*%_"],"r":"Mu"},"n":"Numeric"},{"n":"Numeric","s":{"p":["*%_"],"r":"Mu"},"k":"m","m":1},{"s":{"r":"Mu","p":["\\topic","*%_"]},"n":"ACCEPTS","m":1,"k":"m"},{"m":1,"k":"m","s":{"p":["Mu:U \\topic","*%_"],"r":"Mu"},"n":"ACCEPTS"},{"k":"m","m":1,"n":"ACCEPTS","s":{"r":"Mu","p":["Mu:D \\a","*%_"]}},{"s":{"p":["Mu:U $","*%_"],"r":"Bool"},"n":"ACCEPTS","m":1,"k":"m"},{"s":{"p":["\\topic","*%_"],"r":"Bool:D"},"n":"ACCEPTS","m":1,"k":"m"},{"s":{"r":"Mu","p":["$","*%_"]},"n":"ACCEPTS","k":"m","m":1},{"k":"m","m":1,"s":{"r":"Mu","p":["*%_"]},"n":"perl"},{"m":1,"k":"m","s":{"r":"Mu","p":["*%_"]},"n":"perl"},{"s":{"r":"Mu","p":["*%_"]},"n":"perl","m":1,"k":"m"},{"n":"perl","s":{"p":["*%_"],"r":"Mu"},"k":"m","m":1},{"k":"m","m":1,"n":"gist","s":{"r":"Mu","p":["*%_"]}},{"s":{"r":"Mu","p":["*%_"]},"n":"gist","m":1,"k":"m"},{"s":{"p":["*%_"],"r":"Mu"},"n":"gist","k":"m","m":1},{"n":"gist","s":{"p":["$d = 0","*%_"],"r":"Mu"},"k":"m","m":1},{"s":{"r":"Mu","p":["@auto","%init","*%_"]},"n":"BUILDALL","k":"s","m":0},{"s":{"r":"Mu","p":["*%_"]},"n":"list","k":"m","m":0},{"n":"EXISTS-KEY","s":{"r":"Bool","p":["$","*%_"]},"m":1,"k":"m"},{"m":1,"k":"m","n":"EXISTS-KEY","s":{"r":"Bool","p":["$","*%_"]}},{"n":"EXISTS-KEY","s":{"r":"Mu","p":["Str:D \\key","*%_"]},"k":"m","m":1},{"m":1,"k":"m","n":"EXISTS-KEY","s":{"p":["\\key","*%_"],"r":"Mu"}},{"k":"m","m":1,"s":{"p":["$key","*%_"],"r":"Mu"},"n":"AT-KEY"},{"m":1,"k":"m","n":"AT-KEY","s":{"p":["\\key","*%_"],"r":"Mu"}},{"k":"m","m":1,"n":"AT-KEY","s":{"p":["Str:D \\key","*%_"],"r":"Mu"}},{"m":1,"k":"m","s":{"p":["\\key","*%_"],"r":"Mu"},"n":"AT-KEY"},{"m":1,"k":"m","n":"perl","s":{"p":["*%_"],"r":"Mu"}},{"k":"m","m":1,"s":{"r":"Mu","p":["*%_"]},"n":"perl"},{"k":"m","m":1,"s":{"r":"Mu","p":["*%_"]},"n":"perl"},{"s":{"p":["*%_"],"r":"Mu"},"n":"Numeric","m":1,"k":"m"},{"n":"Numeric","s":{"p":["*%_"],"r":"Mu"},"k":"m","m":1},{"k":"m","m":0,"n":"FLATTENABLE_HASH","s":{"r":"Mu","p":["*%_"]}},{"k":"m","m":1,"n":"antipairs","s":{"r":"Mu","p":["*%_"]}},{"s":{"p":["*%_"],"r":"Mu"},"n":"antipairs","k":"m","m":1},{"m":1,"k":"m","s":{"p":["*%_"],"r":"Mu"},"n":"antipairs"},{"s":{"r":"Mu","p":["*%_"]},"n":"Capture","m":0,"k":"m"},{"s":{"p":["*%_"],"r":"Mu"},"n":"hash","k":"m","m":0},{"k":"m","m":1,"n":"Str","s":{"r":"Mu","p":["*%_"]}},{"s":{"p":["*%_"],"r":"Mu"},"n":"Str","m":1,"k":"m"},{"s":{"p":["*%_"],"r":"Mu"},"n":"Str","m":1,"k":"m"},{"k":"m","m":1,"s":{"p":["*%_"],"r":"ValueObjAt:D"},"n":"WHICH"},{"n":"WHICH","s":{"r":"ObjAt:D","p":["*%_"]},"m":1,"k":"m"},{"n":"WHICH","s":{"p":["*%_"],"r":"ValueObjAt:D"},"m":1,"k":"m"},{"s":{"r":"Mu","p":["*%_"]},"n":"values","k":"m","m":1},{"m":1,"k":"m","n":"values","s":{"r":"Mu","p":["*%_"]}},{"s":{"r":"Mu","p":["*%_"]},"n":"values","m":1,"k":"m"},{"n":"pairs","s":{"r":"Mu","p":["*%_"]},"m":1,"k":"m"},{"m":1,"k":"m","s":{"r":"Mu","p":["*%_"]},"n":"pairs"},{"s":{"p":["*%_"],"r":"Mu"},"n":"pairs","k":"m","m":1},{"m":0,"k":"m","s":{"p":["*%_"],"r":"Mu"},"n":"FLATTENABLE_LIST"},{"m":1,"k":"m","s":{"p":["*%_"],"r":"Mu"},"n":"kv"},{"k":"m","m":1,"n":"kv","s":{"r":"Mu","p":["*%_"]}},{"s":{"r":"Mu","p":["*%_"]},"n":"kv","k":"m","m":1},{"k":"m","m":0,"s":{"r":"Mu","p":["|c is raw"]},"n":"from-args"},{"m":1,"k":"m","n":"AT-POS","s":{"p":["int \\pos","*%_"],"r":"Mu"}},{"m":1,"k":"m","s":{"r":"Mu","p":["Int:D \\pos","*%_"]},"n":"AT-POS"},{"k":"m","m":1,"s":{"r":"Mu","p":["Num:D \\pos","*%_"]},"n":"AT-POS"},{"s":{"r":"Mu","p":["Any:D \\pos","*%_"]},"n":"AT-POS","k":"m","m":1},{"n":"AT-POS","s":{"r":"Mu","p":["int \\pos","*%_"]},"m":1,"k":"m"},{"n":"AT-POS","s":{"r":"Mu","p":["Int:D \\pos","*%_"]},"k":"m","m":1},{"k":"m","m":1,"n":"AT-POS","s":{"p":["Num:D \\pos","*%_"],"r":"Mu"}},{"s":{"p":["Any:D \\pos","*%_"],"r":"Mu"},"n":"AT-POS","m":1,"k":"m"},{"m":1,"k":"m","n":"AT-POS","s":{"p":["Any:U \\pos","*%_"],"r":"Mu"}},{"k":"m","m":1,"s":{"r":"Mu","p":["\\one","\\two","*%_"]},"n":"AT-POS"},{"k":"m","m":1,"n":"AT-POS","s":{"r":"Mu","p":["\\one","\\two","\\three","*%_"]}},{"s":{"p":["**@indices","*%_"],"r":"Mu"},"n":"AT-POS","m":1,"k":"m"},{"m":1,"k":"m","n":"AT-POS","s":{"r":"Mu","p":["int \\pos","*%_"]}},{"k":"m","m":1,"n":"AT-POS","s":{"p":["Int:D \\pos","*%_"],"r":"Mu"}},{"m":1,"k":"m","s":{"r":"Mu","p":["*%_"]},"n":"keys"},{"k":"m","m":1,"n":"keys","s":{"p":["*%_"],"r":"Mu"}},{"n":"keys","s":{"r":"Mu","p":["*%_"]},"k":"m","m":1},{"k":"m","m":1,"n":"gist","s":{"r":"Mu","p":["*%_"]}},{"s":{"p":["*%_"],"r":"Mu"},"n":"gist","m":1,"k":"m"},{"k":"m","m":1,"n":"gist","s":{"r":"Mu","p":["*%_"]}},{"k":"m","m":0,"n":"elems","s":{"p":["*%_"],"r":"Mu"}},{"m":1,"k":"m","n":"Bool","s":{"p":["*%_"],"r":"Bool"}},{"s":{"p":["*%_"],"r":"Mu"},"n":"Bool","m":1,"k":"m"},{"n":"Bool","s":{"p":["*%_"],"r":"Mu"},"m":1,"k":"m"},{"s":{"p":["@auto","%init","*%_"],"r":"Mu"},"n":"BUILDALL","k":"s","m":0},{"m":0,"k":"s","s":{"r":"Nil","p":[":@list",":%hash","*%_"]},"n":"BUILD"},{"n":"!MATCH","s":{"p":["*%_"],"r":"Mu"},"m":0,"k":"m"},{"k":"m","m":0,"s":{"p":["*%_"],"r":"Mu"},"n":"!MATCH-CAPTURES"},{"n":"!MATCH-EMPTY","s":{"r":"Mu","p":["*%_"]},"k":"m","m":0},{"s":{"r":"Mu","p":["*%_"]},"n":"!MATCH-PASS","m":0,"k":"m"}],"k":"c","n":"Cursor","t":"Match"},{"k":"n","t":"int8","n":"int8"},{"m":[{"m":1,"k":"m","n":"new","s":{"r":"Mu","p":["*%_"]}},{"m":1,"k":"m","n":"new","s":{"r":"Mu","p":["Real \\re","Real \\im","*%_"]}},{"k":"m","m":0,"n":"reals","s":{"p":["*%_"],"r":"Mu"}},{"s":{"r":"Mu","p":["*%_"]},"n":"isNaN","m":0,"k":"m"},{"n":"coerce-to-real","s":{"p":["$exception-target","*%_"],"r":"Mu"},"m":0,"k":"m"},{"m":0,"k":"m","s":{"p":["*%_"],"r":"Mu"},"n":"Num"},{"k":"m","m":0,"s":{"r":"Mu","p":["*%_"]},"n":"Int"},{"m":0,"k":"m","n":"Rat","s":{"p":["$epsilon?","*%_"],"r":"Mu"}},{"s":{"p":["$epsilon?","*%_"],"r":"Mu"},"n":"FatRat","m":0,"k":"m"},{"n":"Complex","s":{"p":["*%_"],"r":"Mu"},"k":"m","m":0},{"m":0,"k":"m","s":{"p":["*%_"],"r":"Mu"},"n":"conj"},{"k":"m","m":0,"s":{"r":"Mu","p":["*%_"]},"n":"abs"},{"k":"m","m":0,"s":{"r":"Mu","p":["*%_"]},"n":"polar"},{"s":{"r":"Mu","p":["*%_"]},"n":"cis","m":0,"k":"m"},{"k":"m","m":0,"s":{"p":["*%_"],"r":"Mu"},"n":"sqrt"},{"n":"roots","s":{"r":"Mu","p":["$n","*%_"]},"m":0,"k":"m"},{"k":"m","m":0,"s":{"p":["*%_"],"r":"Mu"},"n":"sin"},{"k":"m","m":0,"s":{"p":["*%_"],"r":"Mu"},"n":"asin"},{"m":0,"k":"m","s":{"p":["*%_"],"r":"Mu"},"n":"cos"},{"n":"acos","s":{"p":["*%_"],"r":"Mu"},"k":"m","m":0},{"s":{"p":["*%_"],"r":"Mu"},"n":"tan","m":0,"k":"m"},{"k":"m","m":0,"n":"atan","s":{"r":"Mu","p":["*%_"]}},{"k":"m","m":0,"s":{"r":"Mu","p":["*%_"]},"n":"sec"},{"s":{"p":["*%_"],"r":"Mu"},"n":"asec","m":0,"k":"m"},{"s":{"r":"Mu","p":["*%_"]},"n":"cosec","k":"m","m":0},{"n":"acosec","s":{"p":["*%_"],"r":"Mu"},"m":0,"k":"m"},{"m":0,"k":"m","n":"cotan","s":{"r":"Mu","p":["*%_"]}},{"n":"acotan","s":{"p":["*%_"],"r":"Mu"},"m":0,"k":"m"},{"s":{"p":["*%_"],"r":"Mu"},"n":"sinh","k":"m","m":0},{"k":"m","m":0,"n":"asinh","s":{"p":["*%_"],"r":"Mu"}},{"n":"cosh","s":{"p":["*%_"],"r":"Mu"},"m":0,"k":"m"},{"k":"m","m":0,"s":{"p":["*%_"],"r":"Mu"},"n":"acosh"},{"n":"tanh","s":{"r":"Mu","p":["*%_"]},"m":0,"k":"m"},{"k":"m","m":0,"s":{"p":["*%_"],"r":"Mu"},"n":"atanh"},{"n":"sech","s":{"r":"Mu","p":["*%_"]},"m":0,"k":"m"},{"n":"asech","s":{"r":"Mu","p":["*%_"]},"k":"m","m":0},{"m":0,"k":"m","n":"cosech","s":{"r":"Mu","p":["*%_"]}},{"m":0,"k":"m","s":{"p":["*%_"],"r":"Mu"},"n":"acosech"},{"k":"m","m":0,"s":{"r":"Mu","p":["*%_"]},"n":"cotanh"},{"k":"m","m":0,"s":{"p":["*%_"],"r":"Mu"},"n":"acotanh"},{"n":"floor","s":{"r":"Mu","p":["*%_"]},"k":"m","m":0},{"m":0,"k":"m","s":{"r":"Mu","p":["*%_"]},"n":"ceiling"},{"k":"m","m":1,"s":{"p":["*%_"],"r":"Mu"},"n":"round"},{"s":{"p":["$scale","*%_"],"r":"Mu"},"n":"round","k":"m","m":1},{"m":0,"k":"m","s":{"r":"Mu","p":["*%_"]},"n":"truncate"},{"s":{"r":"Mu","p":["*%_"]},"n":"narrow","k":"m","m":0},{"m":1,"k":"m","n":"log","s":{"p":["*%_"],"r":"Mu"}},{"m":1,"k":"m","s":{"p":["Cool $base","*%_"],"r":"Mu"},"n":"log"},{"n":"log","s":{"p":["Numeric $base","*%_"],"r":"Mu"},"m":1,"k":"m"},{"s":{"r":"Mu","p":["*%_"]},"n":"log10","m":0,"k":"m"},{"m":1,"k":"m","n":"exp","s":{"p":["*%_"],"r":"Mu"}},{"n":"exp","s":{"r":"Mu","p":["$base","*%_"]},"k":"m","m":1},{"m":0,"k":"m","n":"succ","s":{"p":["*%_"],"r":"Mu"}},{"n":"pred","s":{"r":"Mu","p":["*%_"]},"m":0,"k":"m"},{"k":"m","m":1,"n":"WHICH","s":{"r":"ValueObjAt:D","p":["*%_"]}},{"n":"WHICH","s":{"r":"ObjAt:D","p":["*%_"]},"k":"m","m":1},{"k":"m","m":1,"n":"WHICH","s":{"r":"ValueObjAt:D","p":["*%_"]}},{"n":"Real","s":{"r":"Mu","p":["*%_"]},"k":"m","m":1},{"s":{"p":["*%_"],"r":"Mu"},"n":"Real","m":1,"k":"m"},{"n":"Real","s":{"p":["*%_"],"r":"Mu"},"m":1,"k":"m"},{"k":"m","m":1,"n":"Bool","s":{"p":["*%_"],"r":"Bool"}},{"s":{"r":"Mu","p":["*%_"]},"n":"Bool","m":1,"k":"m"},{"s":{"r":"Mu","p":["*%_"]},"n":"Bool","m":1,"k":"m"},{"k":"m","m":1,"n":"Bool","s":{"r":"Mu","p":["*%_"]}},{"n":"Str","s":{"r":"Mu","p":["*%_"]},"k":"m","m":1},{"m":1,"k":"m","n":"Str","s":{"r":"Mu","p":["*%_"]}},{"m":1,"k":"m","n":"Str","s":{"r":"Mu","p":["*%_"]}},{"m":1,"k":"m","s":{"p":["*%_"],"r":"Mu"},"n":"perl"},{"k":"m","m":1,"s":{"p":["*%_"],"r":"Mu"},"n":"perl"},{"s":{"r":"Mu","p":["*%_"]},"n":"perl","m":1,"k":"m"},{"m":1,"k":"m","n":"Numeric","s":{"r":"Mu","p":["*%_"]}},{"n":"Numeric","s":{"p":["*%_"],"r":"Mu"},"m":1,"k":"m"},{"s":{"r":"Mu","p":["*%_"]},"n":"Numeric","k":"m","m":1},{"k":"m","m":1,"s":{"p":["\\topic","*%_"],"r":"Mu"},"n":"ACCEPTS"},{"k":"m","m":1,"n":"ACCEPTS","s":{"p":["Mu:U \\topic","*%_"],"r":"Mu"}},{"k":"m","m":1,"n":"ACCEPTS","s":{"r":"Mu","p":["Mu:D \\a","*%_"]}},{"m":1,"k":"m","s":{"r":"Bool","p":["Mu:U $","*%_"]},"n":"ACCEPTS"},{"s":{"r":"Bool:D","p":["\\topic","*%_"]},"n":"ACCEPTS","k":"m","m":1},{"s":{"p":["Any:D \\a","*%_"],"r":"Mu"},"n":"ACCEPTS","m":1,"k":"m"},{"s":{"r":"Mu","p":["*%_"]},"n":"gist","m":1,"k":"m"},{"s":{"r":"Mu","p":["*%_"]},"n":"gist","k":"m","m":1},{"n":"gist","s":{"r":"Mu","p":["*%_"]},"m":1,"k":"m"},{"m":1,"k":"m","s":{"r":"Mu","p":["*%_"]},"n":"DUMP"},{"n":"DUMP","s":{"r":"Mu","p":[":$indent-step = 4",":%ctx","*%_"]},"m":1,"k":"m"},{"k":"m","m":1,"s":{"p":["*%_"],"r":"Mu"},"n":"DUMP"},{"n":"re","s":{"p":["*%_"],"r":"Mu"},"m":0,"k":"m"},{"s":{"r":"Mu","p":["*%_"]},"n":"im","k":"m","m":0},{"s":{"p":["@auto","%init","*%_"],"r":"Mu"},"n":"BUILDALL","k":"s","m":0},{"n":"!SET-SELF","s":{"r":"Mu","p":["\\re","\\im","*%_"]},"k":"m","m":0}],"k":"c","b":"C","a":[{"k":"v","t":"num","n":"$.re"},{"t":"num","n":"$.im","k":"v"}],"d":"TITLE\nclass Complex\n\nSUBTITLE\nComplex number\n\n    class Complex is Cool does Numeric {}\n\nRepresents a number in the complex plane.\n\nComplex objects are immutable.\n\nOperators\n\n  postfix i\n\nAdding a trailing i to a number literal makes it a Complex, for example:\n\n    say 2i;     # same as Complex.new(0, 2);\n    say 1-2e3i; # same as Complex.new(1, -2e3);\n\n","n":"Complex","t":"Complex"},{"t":"int32","n":"int32","k":"n"},{"d":"TITLE\nclass Signature\n\nSUBTITLE\nParameter list pattern\n\n    class Signature { }\n\nA signature is a static description of the parameter list of a code object.\nThat is, it describes what and how many arguments you need to pass to the\ncode or function in order to call it.\n\nPassing arguments to a signature binds the arguments, contained in a\nCapture, to the signature.\n\n \n\nSignature literals\n\nSignatures appear inside parentheses after subroutine and method names, on\nblocks after a ->  or <->  arrow, as the input to variable declarators like\nmy, or as a separate term starting with a colon.\n\n    sub f($x) { }\n    #    ^^^^ Signature of sub f\n    my method x() { }\n    #          ^^ Signature of a method\n    my $s = sub (*@a) { }\n    #           ^^^^^ Signature of an anonymous function\n\n    for <a b c> -> $x { }\n    #              ^^   Signature of a Block\n\n    my ($a, @b) = 5, (6, 7, 8);\n    #  ^^^^^^^^ Signature of a variable declarator\n\n    my $sig = :($a, $b);\n    #          ^^^^^^^^ Standalone Signature object\n\nSignature literals can be used to define the signature of a callback or a\nclosure.\n\n    sub f(&c:(Int)) { }\n    sub will-work(Int) { }\n    sub won't-work(Str) { }\n    f(&will-work);\n\n    f(&won't-work);\n    CATCH { default { put .^name, ': ', .Str } };\n    # OUTPUT: «X::TypeCheck::Binding::Parameter: Constraint type check failed in binding to parameter '&c'␤»\n\n    f(-> Int { 'this works too' } );\n\nSmartmatching signatures against a List is supported.\n\n    my $sig = :(Int $i, Str $s);\n    say (10, 'answer') ~~ $sig;\n    # OUTPUT: «True␤»\n    my $sub = sub ( Str $s, Int $i ) { return $s xx $i };\n    say $sub.signature ~~ :( Str, Int );\n    # OUTPUT: «True␤»\n    given $sig {\n        when :(Str, Int) { say 'mismatch' }\n        when :($, $)     { say 'match' }\n        default          { say 'no match' }\n    }\n    # OUTPUT: «match␤»\n\nIt matches the second when clause since :($, $) represents a Signature with\ntwo scalar, anonymous, arguments, which is a more general version of $sig.\n\nWhen smartmatching against a Hash, the signature is assumed to consist of\nthe keys of the Hash.\n\n    my %h = left => 1, right => 2;\n    say %h ~~ :(:$left, :$right);\n    # OUTPUT: «True␤»\n\nSignature literals can contain string/numeric literals\n\n    my $sig = :('Þor', Str, Int);\n    say <Þor Hammer 1> ~~ $sig; # OUTPUT: «True␤»\n\nAnd they can also contain the invocant marker\n\n    class Foo {\n        method bar( $self: ){ \"baz\" }\n    };\n    say Foo.^methods.first(*.name eq 'bar').signature ~~ :($: *%) ;\n    # OUTPUT: «True␤»\n\n  Parameter separators\n\nA signature consists of zero or more parameters, separated by commas.\n\n    my $sig = :($a, @b, %c);\n    sub add($a, $b) { $a + $b };\n\nAs an exception the first parameter may be followed by a colon instead of a\ncomma to mark the invocant of a method. The invocant is the object that was\nused to call the method, which is usually bound to self. By specifying it\nin the signature, you can change the variable name it is bound to.\n\n    method ($a: @b, %c) {};       # first argument is the invocant\n\n    class Foo {\n        method whoami($me:) {\n            \"Well I'm class $me.^name(), of course!\"\n        }\n    }\n    say Foo.whoami; # OUTPUT: «Well I'm class Foo, of course!␤»\n\n \n\n  Type constraints\n\nParameters can optionally have a type constraint (the default is Any).\nThese can be used to restrict the allowed input to a function.\n\n    my $sig = :(Int $a, Str $b);\n\n\nType constraints can have any compile-time defined value\n\n    subset Positive-integer of Int where * > 0;\n    sub divisors(Positive-integer $n) { $_ if $n %% $_ for 1..$n };\n    divisors 2.5;\n    # ERROR «Type check failed in binding to parameter '$n';\n    # expected Positive-integer but got Rat (2.5) $n)»\n    divisors -3;\n    # ERROR: «Constraint type check failed in binding to parameter '$n';\n    # expected Positive-integer but got Int (-3)»\n\n\nPlease note that in the code above type constraints are enforced at two\ndifferent levels: the first level checks if it belongs to the type in which\nthe subset is based, in this case Int. If it fails, a Type check error is\nproduced. Once that filter is cleared, the constraint that defined the\nsubset is checked, producing a Constraint type check error if it fails.\n\n Anonymous arguments are fine too, if you don't actually need to refer to a\nparameter by name, for instance to distinguish between different signatures\nin a multi or to check the signature of a Callable.\n\n    my $sig = :($, @, %a);          # two anonymous and a \"normal\" parameter\n    $sig = :(Int, Positional);      # just a type is also fine (two parameters)\n    sub baz(Str) { \"Got passed a Str\" }\n\nType constraints may also be type captures.\n\n In addition to those nominal types, additional constraints can be placed\non parameters in the form of code blocks which must return a true value to\npass the type check\n\n    sub f(Real $x where { $x > 0 }, Real $y where { $y >= $x }) { }\n\nThe code in where clauses has some limitations: anything that produces\nside-effects (e.g., printing output, pulling from an iterator, or\nincreasing a state variable) is not supported and may produce surprising\nresults if used. Also, the code of the where clause may run more than once\nfor a single typecheck in some implementations.\n\nThe where clause doesn't need to be a code block, anything on the right of\nthe where-clause will be used to smartmatch the argument against it. So you\ncan also write:\n\n    multi factorial(Int $ where 0) { 1 }\n    multi factorial(Int $x)        { $x * factorial($x - 1) }\n\nThe first of those can be shortened to\n\n    multi factorial(0) { 1 }\n\ni.e., you can use a literal directly as a type and value constraint on an\nanonymous parameter.\n\nTip: pay attention to not accidentally leave off a block when you, say,\nhave several conditions:\n\n    -> $y where   .so && .name    {}( sub one   {} ); # WRONG!!\n    -> $y where { .so && .name }  {}( sub two   {} ); # OK!\n    -> $y where   .so &  .name.so {}( sub three {} ); # Also good\n\nThe first version is wrong and will issue a warning about a sub object\ncoerced to string. The reason is the expression is equivalent to ($y ~~\n($y.so && $y.name)); that is \"call .so, and if that is True, call .name; if\nthat is also True use its value for smartmatching…\". It's the result of\n(.so && .name) it will be smartmatched against, but we want to check that\nboth .so and .name are truthy values. That is why an explicit Block or a\nJunction is the right version.\n\nAll previous arguments that are not part of a sub-signature in a Signature\nare accessible in a where-clause that follows an argument. Therefore, the\nwhere-clause of the last argument has access to all arguments of a\nsignature that are not part of a sub-signature. For a sub-signature place\nthe where-clause inside the sub-signature.\n\n    sub foo($a, $b where * == $a ** 2) { say \"$b is a square of $a\" }\n    foo 2, 4; # OUTPUT: «4 is a square of 2␤»»\n    # foo 2, 3;\n    # OUTPUT: «Constraint type check failed in binding to parameter '$b'…»\n\n    Constraining optional arguments\n\nOptional arguments can have constraints, too. Any where clause on any\nparameter will be executed, even if it's optional and not provided by the\ncaller. In that case you may have to guard against undefined values within\nthe where clause.\n\n    sub f(Int $a, UInt $i? where { !$i.defined or $i > 5 }) { ... }\n\n    Constraining slurpy arguments\n\nSlurpy arguments can not have type constraints. A where-clause in\nconjunction with a Junction can be used to that effect.\n\n    sub f(*@a where {$_.all ~~ Int}) { say @a };\n    f(42);\n    f(<a>);\n    CATCH { default { say .^name, ' ==> ', .Str }  }\n    # OUTPUT: «[42]␤Constraint type check failed in binding to parameter '@a' ...»\n\n\n    Constraining named arguments\n\nConstraints against Named arguments apply to the value part of the\ncolon-pair.\n\n    sub f(Int :$i){};\n    f :i<forty-two>;\n    CATCH { default { say .^name, ' ==> ', .Str }  }\n    # OUTPUT: «X::TypeCheck::Binding::Parameter ==> Type check failed in\n    # binding to parameter '$i'; expected Int but got Str (\"forty-two\")␤»\n\n  \n\n    Constraining argument definiteness\n\nNormally, a type constraint only checks whether the value of the parameter\nis of the correct type. Crucially, both object instances and type objects\nwill satisfy such a constraint as illustrated below:\n\n    say  42.^name;    # OUTPUT: «Int␤»\n    say  42 ~~ Int;   # OUTPUT: «True␤»\n    say Int ~~ Int;   # OUTPUT: «True␤»\n\nNote how both 42 and Int satisfy the match.\n\nSometimes we need to distinguish between these object instances (42) and\ntype objects (Int). Consider the following code:\n\n    sub limit-lines(Str $s, Int $limit) {\n        my @lines = $s.lines;\n        @lines[0 .. min @lines.elems, $limit].join(\"\\n\")\n    }\n    say (limit-lines \"a \\n b \\n c \\n d \\n\", 3).perl; # \"a \\n b \\n c \\n d \"\n    say limit-lines Str, 3;\n    CATCH { default { put .^name, ': ', .Str } };\n    # OUTPUT: «X::Multi::NoMatch: Cannot resolve caller lines(Str: );\n    # none of these signatures match:\n    #     (Str:D $: :$count!, *%_)\n    #     (Str:D $: $limit, *%_)\n    #     (Str:D $: *%_)»\n    say limit-lines \"a \\n b\", Int; # Always returns the max number of lines\n\nHere we really only want to deal with string instances, not type objects.\nTo do this, we can use the :D type constraint. This constraint checks that\nthe value passed is an object instance, in a similar fashion to calling its\nDEFINITE (meta)method.\n\nTo warm up, let's apply :D to the right-hand side of our humble Int\nexample:\n\n    say  42 ~~ Int:D;  # OUTPUT: «True␤»\n    say Int ~~ Int:D;  # OUTPUT: «False␤»\n\nNote how only 42 matches Int:D in the above.\n\nReturning to limit-lines, we can now amend its signature to catch the error\nearly:\n\n    sub limit-lines(Str:D $s, Int $limit) { };\n    say limit-lines Str, 3;\n    CATCH { default { put .^name ~ '--' ~ .Str } };\n    # OUTPUT: «Parameter '$s' of routine 'limit-lines' must be an object instance of type 'Str',\n    #          not a type object of type 'Str'.  Did you forget a '.new'?»\n\nThis is much better than the way the program failed before, since here the\nreason for failure is clearer.\n\nIt's also possible that type objects are the only ones that make sense for\na routine to accept. This can be done with the :U type constraint, which\nchecks whether the value passed is a type object rather than an object\ninstance. Here's our Int example again, this time with :U applied:\n\n    say  42 ~~ Int:U;  # OUTPUT: «False␤»\n    say Int ~~ Int:U;  # OUTPUT: «True␤»\n\nNow 42 fails to match Int:U while Int succeeds.\n\nHere's a more practical example:\n\n    sub can-turn-into(Str $string, Any:U $type) {\n       return so $string.$type;\n    }\n    say can-turn-into(\"3\", Int);        # OUTPUT: «True␤»\n    say can-turn-into(\"6.5\", Int);      # OUTPUT: «True␤»\n    say can-turn-into(\"6.5\", Num);      # OUTPUT: «True␤»\n    say can-turn-into(\"a string\", Num); # OUTPUT: «False␤»\n\nCalling can-turn-into with an object instance as its second parameter will\nyield a constraint violation as intended:\n\n    say can-turn-into(\"a string\", 123);\n    # OUTPUT: «Parameter '$type' of routine 'can-turn-into' must be a type object\n    # of type 'Any', not an object instance of type 'Int'...»\n\n\nFor explicitly indicating the normal behavior, that is, not constraining\nwhether the argument will be an instance or a type object, :_ can be used,\nbut this is unnecessary. :(Num:_ $) is the same as :(Num $).\n\nTo recap, here is a quick illustration of these type constraints, also\nknown collectively as type smileys:\n\n    # Checking a type object\n    say Int ~~ Any:D;    # OUTPUT: «False␤»\n    say Int ~~ Any:U;    # OUTPUT: «True␤»\n    say Int ~~ Any:_;    # OUTPUT: «True␤»\n\n    # Checking an object instance\n    say 42 ~~ Any:D;     # OUTPUT: «True␤»\n    say 42 ~~ Any:U;     # OUTPUT: «False␤»\n    say 42 ~~ Any:_;     # OUTPUT: «True␤»\n\n    # Checking a user-supplied class\n    class Foo {};\n    say Foo ~~ Any:D;    # OUTPUT: «False␤»\n    say Foo ~~ Any:U;    # OUTPUT: «True␤»\n    say Foo ~~ Any:_;    # OUTPUT: «True␤»\n\n    # Checking an instance of a class\n    my $f = Foo.new;\n    say $f  ~~ Any:D;    # OUTPUT: «True␤»\n    say $f  ~~ Any:U;    # OUTPUT: «False␤»\n    say $f  ~~ Any:_;    # OUTPUT: «True␤»\n\nThe Classes and Objects document further elaborates on the concepts of\ninstances and type objects and discovering them with the .DEFINITE method.\n\nKeep in mind all parameters have values; even optional ones have default\nvalues that are the type object of the constrained type for explicit type\nconstraints. If no explicit type constraint exists, the default value is an\nAny type object for methods, submethods, and subroutines, and a Mu type\nobject for blocks. This means that if you use the :D type smiley, you'd\nneed to provide a default value or make the parameter required. Otherwise,\nthe default value would be a type object, which would fail the definiteness\nconstraint.\n\n    sub divide (Int:D :$a = 2, Int:D :$b!) { say $a/$b }\n    divide :1a, :2b; # OUTPUT: «0.5␤»\n\nThe default value will kick in when that particular parameter, either\npositional or named, gets no value at all.\n\n    sub f($a = 42){\n      my $b is default('answer');\n      say $a;\n      $b = $a;\n      say $b\n    };\n    f;     # OUTPUT: «42␤42␤»\n    f Nil; # OUTPUT: «Nil␤answer␤»\n\n$a has 42 as its default value. With no value, $a will be assigned the\ndefault value declared in the Signature. However, in the second case, it\ndoes receive a value, which happens to be Nil. Assigning Nil to any\nvariable resets it to its default value, which has been declared as\n'answer' by use of the default trait. That explains what happens the second\ntime we call f. Routine parameters and variables deal differently with\ndefault value, which is in part clarified by the different way default\nvalues are declared in each case (using = for parameters, using the default\ntrait for variables).\n\nNote: in 6.c language, the default value of :U/:D constrained variables was\na type object with such a constraint, which is not initializable, thus you\ncannot use the .= operator, for example.\n\n    use v6.c;\n    my Int:D $x .= new: 42;\n    # OUTPUT: You cannot create an instance of this type (Int:D)\n    # in block <unit> at -e line 1\n\n\nIn the 6.d language, the default default is the type object without the\nsmiley constraint:\n\n    use v6.d;\n    my Int:D $x .= new: 42; # OUTPUT: «42␤»\n\n\nA closing remark on terminology: this section is about the use of the type\nsmileys :D and :U to constrain the definiteness of arguments. Occasionally\ndefinedness is used as a synonym for definiteness; this may be confusing,\nsince the terms have subtly different meanings.\n\nAs explained above, definiteness is concerned with the distinction between\ntype objects and object instances. A type object is always indefinite,\nwhile an object instance is always definite. Whether an object is a type\nobject/indefinite or an object instance/definite can be verified using the\nDEFINITE (meta)method.\n\nDefiniteness should be distinguished from definedness, which is concerned\nwith the difference between defined and undefined objects. Whether an\nobject is defined or undefined can be verified using the defined-method,\nwhich is implemented in class Mu. By default a type object is considered\nundefined, while an object instance is considered defined; that is:\n.defined returns False on a type object, and True otherwise. But this\ndefault behavior may be overridden by subclasses. An example of a subclass\nthat overrides the default .defined behavior is Failure, so that even an\ninstantiated Failure acts as an undefined value:\n\n    my $a = Failure;                # Initialize with type object\n    my $b = Failure.new(\"foo\");     # Initialize with object instance\n    say $a.DEFINITE;                # Output: «False␤» : indefinite type object\n    say $b.DEFINITE;                # Output: «True␤»  : definite object instance\n    say $a.defined;                 # Output: «False␤» : default response\n    say $b.defined;                 # Output: «False␤» : .defined override\n\n    Constraining signatures of Callables\n\nThe signature of a Callable parameter can be constrained by specifying a\nSignature literal right after the parameter (no whitespace allowed):\n\n    sub f(&c:(Int, Str))  { say c(10, 'ten') };\n    sub g(Int $i, Str $s) { $s ~ $i };\n    f(&g);\n    # OUTPUT: «ten10␤»\n\nThis shorthand syntax is available only for parameters with the & sigil.\nFor others, you need to use the long version:\n\n    sub f($c where .signature ~~ :(Int, Str))  { say $c(10, 'ten') }\n    sub g(Num $i, Str $s) { $s ~ $i }\n    sub h(Int $i, Str $s) { $s ~ $i }\n    # f(&g); # Constraint type check failed\n    f(&h);   # OUTPUT: «ten10␤»\n\n    Constraining return types\n\nThere are multiple ways to constrain return types on a Routine. All\nversions below are currently valid and will force a type check on\nsuccessful execution of a routine.\n\nNil and Failure are always allowed as return types, regardless of any type\nconstraint. This allows Failure to be returned and passed on down the call\nchain.\n\n    sub foo(--> Int) { Nil };\n    say foo.perl; # OUTPUT: «Nil␤»\n\nType captures are not supported.\n\n \n\n    Return type arrow: -->\n\nThis form of indicating return types (or constants) in the signature is\npreferred, since it can handle constant values while the others can't. For\nconsistency, it is the only form accepted on this site.\n\nThe return type arrow has to be placed at the end of the parameter list,\nwith or without a , before it.\n\n    sub greeting1(Str $name  --> Str) { say \"Hello, $name\" } # Valid\n    sub greeting2(Str $name, --> Str) { say \"Hello, $name\" } # Valid\n\n    sub favorite-number1(--> 42) {        } # OUTPUT: 42\n    sub favorite-number2(--> 42) { return } # OUTPUT: 42\n\n\nIf the type constraint is a constant expression, it is used as the return\nvalue of the routine. Any return statement in that routine has to be\nargumentless.\n\n    sub foo(Str $word --> 123) { say $word; return; }\n    my $value = foo(\"hello\"); # OUTPUT: hello\n    say $value;               # OUTPUT: 123\n\n\n    # The code below will not compile\n    sub foo(Str $word --> 123) { say $word; return $word; }\n    my $value = foo(\"hello\");\n    say $value;\n\n\n    returns\n\nThe keyword returns following a signature declaration has the same function\nas --> with the caveat that this form does not work with constant values.\nYou cannot use it in a block either. That is why the pointy arrow form is\nalways preferred.\n\n    sub greeting(Str $name) returns Str { say \"Hello, $name\" } # Valid\n\n\n    sub favorite-number returns 42 {        } # This will fail.\n\n\n    of\n\nof is just the real name of the returns keyword.\n\n    sub foo() of Int { 42 }; # Valid\n\n\n    sub foo() of 42 {  };    # This will fail.\n\n\n    prefix(C-like) form\n\nThis is similar to placing type constraints on variables like my Type $var\n= 20;, except the $var is a definition for a routine.\n\n    my Int sub bar { 1 };     # Valid\n\n\n    my 42 sub bad-answer {};  # This will fail.\n\n\n    Coercion type\n\nTo accept one type but coerce it automatically to another, use the accepted\ntype as an argument to the target type. If the accepted type is Any it can\nbe omitted.\n\n    sub f(Int(Str) $want-int, Str() $want-str) {\n        say $want-int.^name ~ ' ' ~ $want-str.^name\n    }\n    f '10', 10;\n    # OUTPUT: «Int Str␤»\n\n    use MONKEY;\n    augment class Str { method Date() { Date.new(self) } };\n    sub foo(Date(Str) $d) { say $d.^name; say $d };\n    foo \"2016-12-01\";\n    # OUTPUT: «Date␤2016-12-01␤»\n\nThe coercion is performed by calling the method with the name of the type\nto coerce to, if it exists (e.g. Foo(Bar) coercer, would call method Foo).\nThe method is assumed to return the correct type—no additional checks on\nthe result are currently performed.\n\nCoercion can also be performed on return types:\n\n    sub square-str (Int $x --> Str(Int)) {\n        $x²\n    }\n\n    for 2,4, *²  … 256 -> $a {\n        say $a, \"² is \", square-str( $a ).chars, \" figures long\";\n    }\n\n    # OUTPUT: «2² is 1 figures long␤\n    #          4² is 2 figures long␤\n    #          16² is 3 figures long␤\n    #          256² is 5 figures long␤»\n\n\nIn this example, coercing the return type to String allows us to directly\napply string methods, such as the number of characters.\n\n  \n\n  Slurpy (A.K.A. variadic) parameters\n\nA function is variadic if it can take a varying number of arguments; that\nis, its arity is not fixed. Therefore, optional, named, and slurpy\nparameters are variadic. An array or hash parameter can be marked as slurpy\nby leading single (*) or double asterisk (**) or a leading plus (+). A\nslurpy parameter can bind to an arbitrary number of arguments (zero or\nmore), and it will result in a type that is compatible with the sigil.\n\nThese are called \"slurpy\" because they slurp up any remaining arguments to\na function, like someone slurping up noodles.\n\n    $ = :($a, @b);  # exactly two arguments, where the second one must be Positional\n    $ = :($a, *@b); # at least one argument, @b slurps up any beyond that\n    $ = :(*%h);     # no positional arguments, but any number of named arguments\n\n    sub one-arg (@)  { }\n    sub slurpy  (*@) { }\n    one-arg (5, 6, 7); # ok, same as one-arg((5, 6, 7))\n    slurpy  (5, 6, 7); # ok\n    slurpy   5, 6, 7 ; # ok\n    # one-arg(5, 6, 7) ; # X::TypeCheck::Argument\n    # one-arg  5, 6, 7 ; # X::TypeCheck::Argument\n\n    sub named-names (*%named-args) { %named-args.keys };\n    say named-names :foo(42) :bar<baz>; # OUTPUT: «foo bar␤»\n\n\nPositional and named slurpies can be combined; named arguments (i.e.,\nPairs) are collected in the specified hash, positional arguments in the\narray:\n\n    sub combined-slurpy (*@a, *%h) { { array => @a, hash => %h } }\n    # or: sub combined-slurpy (*%h, *@a) { ... }\n\n    say combined-slurpy(one => 1, two => 2);\n    # OUTPUT: «{array => [], hash => {one => 1, two => 2}}␤»\n    say combined-slurpy(one => 1, two => 2, 3, 4);\n    # OUTPUT: «{array => [3 4], hash => {one => 1, two => 2}}␤»\n    say combined-slurpy(one => 1, two => 2, 3, 4, five => 5);\n    # OUTPUT: «{array => [3 4], hash => {five => 5, one => 1, two => 2}}␤»\n    say combined-slurpy(one => 1, two => 2, 3, 4, five => 5, 6);\n    # OUTPUT: «{array => [3 4 6], hash => {five => 5, one => 1, two => 2}}␤»\n\n\nNote that positional parameters aren't allowed after slurpy parameters:\n\n    :(*@args, $last);\n    # ===SORRY!=== Error while compiling:\n    # Cannot put required parameter $last after variadic parameters\n\n\nNormally a slurpy parameter will create an Array (or compatible type),\ncreate a new Scalar container for each argument, and assign the value from\neach argument to those Scalars. If the original argument also had an\nintermediary Scalar it is bypassed during this process, and is not\navailable inside the called function.\n\nSigiled parameters will always impose a context on the collected arguments.\nSigilless parameters can also be used slurpily, preceded by a + sign, to\nwork with whatever initial type they started with:\n\n    sub zipi( +zape ) {\n        zape.^name => zape\n    };\n    say zipi( \"Hey \"); # OUTPUT: «List => (Hey )␤»\n    say zipi( 1...* ); # OUTPUT: «Seq => (...)␤»\n\n\nSlurpy parameters have special behaviors when combined with some traits and\nmodifiers, as described in the section on slurpy array parameters.\n\n  Types of slurpy array parameters\n\nThere are three variations to slurpy array parameters.\n\n  * The single asterisk form flattens passed arguments.\n\n  * The double asterisk form does not flatten arguments.\n\n  * The plus form flattens according to the single argument rule.\n\nEach will be described in detail in the next few sections. As the\ndifference between each is a bit nuanced, examples are provided for each to\ndemonstrate how each slurpy convention varies from the others.\n\n    Flattened slurpy\n\nSlurpy parameters declared with one asterisk will flatten arguments by\ndissolving one or more layers of bare Iterables.\n\n    my @array = <a b c>;\n    my $list := <d e f>;\n    sub a(*@a)  { @a.perl.say };\n    a(@array);                 # OUTPUT: «[\"a\", \"b\", \"c\"]»\n    a(1, $list, [2, 3]);       # OUTPUT: «[1, \"d\", \"e\", \"f\", 2, 3]»\n    a([1, 2]);                 # OUTPUT: «[1, 2]»\n    a(1, [1, 2], ([3, 4], 5)); # OUTPUT: «[1, 1, 2, 3, 4, 5]»\n    a(($_ for 1, 2, 3));       # OUTPUT: «[1, 2, 3]»\n\n\nA single asterisk slurpy flattens all given iterables, effectively hoisting\nany object created with commas up to the top level.\n\n    Unflattened slurpy\n\nSlurpy parameters declared with two stars do not flatten any Iterable\narguments within the list, but keep the arguments more or less as-is:\n\n    my @array = <a b c>;\n    my $list := <d e f>;\n    sub b(**@b) { @b.perl.say };\n    b(@array);                 # OUTPUT: «[[\"a\", \"b\", \"c\"],]␤»\n    b(1, $list, [2, 3]);       # OUTPUT: «[1, (\"d\", \"e\", \"f\"), [2, 3]]␤»\n    b([1, 2]);                 # OUTPUT: «[[1, 2],]␤»\n    b(1, [1, 2], ([3, 4], 5)); # OUTPUT: «[1, [1, 2], ([3, 4], 5)]␤»\n    b(($_ for 1, 2, 3));       # OUTPUT: «[(1, 2, 3),]␤»\n\n\nThe double asterisk slurpy hides the nested comma objects and leaves them\nas-is in the slurpy array.\n\n    Single argument rule slurpy\n\nA slurpy parameter created using a plus engages the \"single argument rule\",\nwhich decides how to handle the slurpy argument based upon context.\nBasically, if only a single argument is passed and that argument is\nIterable, that argument is used to fill the slurpy parameter array. In any\nother case, +@ works like **@.\n\n    my @array = <a b c>;\n    my $list := <d e f>;\n    sub c(+@b) { @b.perl.say };\n    c(@array);                 # OUTPUT: «[\"a\", \"b\", \"c\"]␤»\n    c(1, $list, [2, 3]);       # OUTPUT: «[1, (\"d\", \"e\", \"f\"), [2, 3]]␤»\n    c([1, 2]);                 # OUTPUT: «[1, 2]␤»\n    c(1, [1, 2], ([3, 4], 5)); # OUTPUT: «[1, [1, 2], ([3, 4], 5)]␤»\n    c(($_ for 1, 2, 3));       # OUTPUT: «[1, 2, 3]␤»\n\n\nFor additional discussion and examples, see Slurpy Conventions for\nFunctions.\n\n  Type captures\n\nType captures allow deferring the specification of a type constraint to the\ntime the function is called. They allow referring to a type both in the\nsignature and the function body.\n\n    sub f(::T $p1, T $p2, ::C){\n        # $p1 and $p2 are of the same type T, that we don't know yet\n        # C will hold a type we derive from a type object or value\n        my C $division = $p1 / $p2;\n        return sub (T $p1) {\n            $division * $p1;\n        }\n    }\n\n    # The first parameter is Int and so must be the 2nd.\n    # We derive the 3rd type from calling the operator that is used in &f.\n    my &s = f(10, 2, Int.new / Int.new);\n    say s(2); # 10 / 2 * 2 == 10\n\n \n\n  Positional vs. named arguments\n\nAn argument can be positional or named. By default, arguments are\npositional, except slurpy hash and arguments marked with a leading colon :.\nThe latter is called a colon-pair. Check the following signatures and what\nthey denote:\n\n    $ = :($a);               # a positional argument\n    $ = :(:$a);              # a named argument of name 'a'\n    $ = :(*@a);              # a slurpy positional argument\n    $ = :(*%h);              # a slurpy named argument\n\nOn the caller side, positional arguments are passed in the same order as\nthe arguments are declared.\n\n    sub pos($x, $y) { \"x=$x y=$y\" }\n    pos(4, 5);                          # OUTPUT: «x=4 y=5»\n\nIn the case of named arguments and parameters, only the name is used for\nmapping arguments to parameters. If a fat arrow is used to construct a Pair\nonly those with valid identifiers as keys are recognized as named\narguments.\n\n    sub named(:$x, :$y) { \"x=$x y=$y\" }\n    named( y => 5, x => 4);             # OUTPUT: «x=4 y=5»\n\n\nYou can invoke the routine using a variable with the same name as the named\nargument; in that case : will be used for the invocation so that the name\nof the variable is understood as the key of the argument.\n\n    sub named-shortcut( :$shortcut ) {\n        say \"Looks like $shortcut\"\n    }\n    named-shortcut( shortcut => \"to here\"); # OUTPUT: «Looks like to here␤»\n    my $shortcut = \"Þor is mighty\";\n    named-shortcut( :$shortcut );           # OUTPUT: «Looks like Þor is mighty␤»\n\nIt is possible to have a different name for a named argument than the\nvariable name:\n\n    sub named(:official($private)) { \"Official business!\" if $private }\n    named :official;\n\n  Argument aliases\n\nThe colon-pair syntax can be used to provide aliases for arguments:\n\n    sub alias-named(:color(:$colour), :type(:class($kind))) {\n        say $colour ~ \" \" ~ $kind\n    }\n    alias-named(color => \"red\", type => \"A\");    # both names can be used\n    alias-named(colour => \"green\", type => \"B\"); # more than two names are ok\n    alias-named(color => \"white\", class => \"C\"); # every alias is independent\n\nThe presence of the colon : will decide whether we are creating a new named\nargument or not. :$colour will not only be the name of the aliased\nvariable, but also a new named argument (used in the second invocation).\nHowever, $kind will just be the name of the aliased variable, that does not\ncreate a new named argument. More uses of aliases can be found in sub\nMAIN.\n\nA function with named arguments can be called dynamically, dereferencing a\nPair with | to turn it into a named argument.\n\n    multi f(:$named) { note &?ROUTINE.signature };\n    multi f(:$also-named) { note &?ROUTINE.signature };\n    for 'named', 'also-named' -> $n {\n        f(|($n => rand))                # OUTPUT: «(:$named)␤(:$also-named)␤»\n    }\n\n    my $pair = :named(1);\n    f |$pair;                           # OUTPUT: «(:$named)␤»\n\nThe same can be used to convert a Hash into named arguments.\n\n    sub f(:$also-named) { note &?ROUTINE.signature };\n    my %pairs = also-named => 4;\n    f |%pairs;                              # OUTPUT: «(:$also-named)␤»\n\nA Hash that contains a list may prove problematic when slipped into named\narguments. To avoid the extra layer of containers coerce to Map before\nslipping.\n\n    class C { has $.x; has $.y; has @.z };\n    my %h = <x y z> Z=> (5, 20, [1,2]);\n    say C.new(|%h.Map);\n    # OUTPUT: «C.new(x => 5, y => 20, z => [1, 2])␤»\n\nYou can create as many aliases to a named argument as you want:\n\n    sub alias-named(:color(:$colour),\n                    :variety(:style(:sort(:type(:class($kind)))))) {\n        return $colour ~ \" \" ~ $kind\n    }\n    say alias-named(color => \"red\", style => \"A\");\n    say alias-named(colour => \"green\", variety => \"B\");\n    say alias-named(color => \"white\", class => \"C\");\n\n\n  Optional and mandatory arguments\n\nPositional parameters are mandatory by default, and can be made optional\nwith a default value or a trailing question mark:\n\n    $ = :(Str $id);         # required parameter\n    $ = :($base = 10);      # optional parameter, default value 10\n    $ = :(Int $x?);         # optional parameter, default is the Int type object\n\n Named parameters are optional by default, and can be made mandatory with a\ntrailing exclamation mark:\n\n    $ = :(:%config);        # optional parameter\n    $ = :(:$debug = False); # optional parameter, defaults to False\n    $ = :(:$name!);         # mandatory 'name' named parameter\n\nDefault values can depend on previous parameters, and are (at least\nnotionally) computed anew for each call\n\n    $ = :($goal, $accuracy = $goal / 100);\n    $ = :(:$excludes = ['.', '..']);        # a new Array for every call\n\n  Dynamic variables\n\nDynamic variables are allowed in signatures although they don't provide\nspecial behavior because argument binding does connect two scopes anyway.\n\n  Destructuring arguments\n\nNon-scalar parameters can be followed or substituted by a sub-signature in\nparentheses, which will destructure the argument given. The destructuring\nof a list is just its elements:\n\n    sub first(@array ($first, *@rest)) { $first }\n\nor\n\n    sub first([$f, *@]) { $f }\n\nWhile the destructuring of a hash is its pairs:\n\n    sub all-dimensions(% (:length(:$x), :width(:$y), :depth(:$z))) {\n        $x andthen $y andthen $z andthen True\n    }\n\nPointy loops can also destructure hashes, allowing assignment to\nvariables:\n\n    my %hhgttu = (:40life, :41universe, :42everything);\n    for %hhgttu -> (:$key, :$value) {\n      say \"$key → $value\";\n    }\n    # OUTPUT: «universe → 41␤life → 40␤everything → 42␤»\n\nIn general, an object is destructured based on its attributes. A common\nidiom is to unpack a Pair's key and value in a for loop:\n\n    for <Peter Paul Merry>.pairs -> (:key($index), :value($guest)) { }\n\nHowever, this unpacking of objects as their attributes is only the default\nbehavior. To make an object get destructured differently, change its\nCapture method.\n\n  Sub-signatures\n\nTo match against a compound parameter use a sub-signature following the\nargument name in parentheses.\n\n    sub foo(|c(Int, Str)){\n       put \"called with {c.perl}\"\n    };\n    foo(42, \"answer\");\n    # OUTPUT: «called with \\(42, \"answer\")␤»\n\n  Long names\n\nTo exclude certain parameters from being considered in multiple dispatch,\nseparate them with a double semicolon.\n\n    multi sub f(Int $i, Str $s;; :$b) { say \"$i, $s, {$b.perl}\" };\n    f(10, 'answer');\n    # OUTPUT: «10, answer, Any␤»\n\n  Capture parameters\n\nPrefixing a parameter with a vertical bar | makes the parameter a Capture,\nusing up all the remaining positional and named arguments.\n\nThis is often used in proto definitions (like proto foo (|) {*}) to\nindicate that the routine's multi definitions can have any type\nconstraints. See proto for an example.\n\nIf bound to a variable arguments can be forwarded as a whole using the slip\noperator |.\n\n    sub a(Int $i, Str $s) { say $i.^name ~ ' ' ~ $s.^name }\n    sub b(|c) { say c.^name; a(|c) }\n    b(42, \"answer\");\n    # OUTPUT: «Capture␤Int Str␤»\n\n  Parameter traits and modifiers\n\nBy default, parameters are bound to their argument and marked as read-only.\nOne can change that with traits on the parameter.\n\n The is copy trait causes the argument to be copied, and allows it to be\nmodified inside the routine\n\n    sub count-up($x is copy) {\n        $x = ∞ if $x ~~ Whatever;\n        .say for 1..$x;\n    }\n\n The is rw trait, which stands for is read-write, makes the parameter bind\nto a variable (or other writable container). Assigning to the parameter\nchanges the value of the variable at the caller side.\n\n    sub swap($x is rw, $y is rw) {\n        ($x, $y) = ($y, $x);\n    }\n\nOn slurpy parameters, is rw is reserved for future use by language\ndesigners.\n\n The is raw trait is automatically applied to parameters declared with a\nbackslash as a \"sigil\", and may also be used to make normally sigiled\nparameters behave like these do. In the special case of slurpies, which\nnormally produce an Array full of Scalars as described above, is raw will\ninstead cause the parameter to produce a List. Each element of that list\nwill be bound directly as raw parameter.\n\n To explicitly ask for a read-only parameter use the is readonly trait.\nPlease note that this applies only to the container. The object inside can\nvery well have mutator methods and Raku will not enforce immutability on\nthe attributes of the object.\n\nTraits can be followed by the where clause:\n\n    sub ip-expand-ipv6($ip is copy where m:i/^<[a..f\\d\\:]>**3..39$/) { }\n\n","k":"c","m":[{"k":"m","m":0,"s":{"r":"Mu","p":["*%_"]},"n":"Capture"},{"n":"arity","s":{"p":["*%_"],"r":"Mu"},"m":0,"k":"m"},{"s":{"p":["*%_"],"r":"Mu"},"n":"count","k":"m","m":0},{"n":"params","s":{"p":["*%_"],"r":"Mu"},"m":0,"k":"m"},{"k":"m","m":1,"s":{"r":"Mu","p":["*%attrinit"]},"n":"new"},{"s":{"r":"Mu","p":["$","*@","*%_"]},"n":"new","m":1,"k":"m"},{"m":1,"k":"m","s":{"p":[":@params","Mu :$returns","Int:D :$arity = { ... }","Num:D :$count = { ... }","*%_"],"r":"Mu"},"n":"new"},{"m":1,"k":"m","n":"ACCEPTS","s":{"r":"Mu","p":["\\topic","*%_"]}},{"m":1,"k":"m","s":{"r":"Mu","p":["Mu:U \\topic","*%_"]},"n":"ACCEPTS"},{"m":1,"k":"m","s":{"r":"Mu","p":["Mu:D \\a","*%_"]},"n":"ACCEPTS"},{"k":"m","m":1,"s":{"p":["Mu:U $","*%_"],"r":"Bool"},"n":"ACCEPTS"},{"s":{"p":["\\topic","*%_"],"r":"Bool:D"},"n":"ACCEPTS","m":1,"k":"m"},{"m":1,"k":"m","s":{"p":["Mu \\topic","*%_"],"r":"Mu"},"n":"ACCEPTS"},{"m":1,"k":"m","s":{"p":["Capture $topic","*%_"],"r":"Mu"},"n":"ACCEPTS"},{"m":1,"k":"m","n":"ACCEPTS","s":{"r":"Mu","p":["Signature:D $topic","*%_"]}},{"k":"m","m":1,"n":"perl","s":{"r":"Mu","p":["*%_"]}},{"m":1,"k":"m","s":{"p":["*%_"],"r":"Mu"},"n":"perl"},{"k":"m","m":1,"s":{"p":["*%_"],"r":"Mu"},"n":"perl"},{"s":{"r":"Mu","p":["*%_"]},"n":"gist","k":"m","m":1},{"n":"gist","s":{"p":["*%_"],"r":"Mu"},"k":"m","m":1},{"s":{"p":["*%_"],"r":"Mu"},"n":"gist","k":"m","m":1},{"m":0,"k":"s","s":{"p":["@auto","%init","*%_"],"r":"Mu"},"n":"BUILDALL"},{"k":"m","m":0,"s":{"p":["@params","Mu $returns","$arity","$count","*%_"],"r":"Mu"},"n":"!SET-SELF"},{"s":{"p":["*%_"],"r":"Mu"},"n":"!deftype","k":"m","m":0},{"n":"!gistperl","s":{"p":["$perl","Mu:U :$elide-type = Mu","*%_"],"r":"Mu"},"m":0,"k":"m"}],"a":[{"k":"v","n":"@!params","t":"List"},{"t":"Mu","n":"$!returns","k":"v"},{"n":"$!arity","t":"int","k":"v"},{"k":"v","t":"Num","n":"$!count"},{"t":"Code","n":"$!code","k":"v"}],"b":"A","t":"Signature","n":"Signature"},{"k":"v","n":"&infix:<≤>","t":"Sub+{is-pure}"},{"s":{"p":["$?"],"r":"Mu"},"n":"infix:«<=»","k":"s","m":1},{"m":1,"k":"s","n":"infix:«<=»","s":{"p":["\\a","\\b"],"r":"Mu"}},{"m":1,"k":"s","n":"infix:«<=»","s":{"p":["Real \\a","Real \\b"],"r":"Mu"}},{"s":{"r":"Bool:D","p":["Int:D \\a","Int:D \\b"]},"n":"infix:«<=»","k":"s","m":1},{"m":1,"k":"s","n":"infix:«<=»","s":{"p":["int $a","int $b"],"r":"Bool:D"}},{"s":{"r":"Bool:D","p":["Num:D \\a","Num:D \\b"]},"n":"infix:«<=»","m":1,"k":"s"},{"m":1,"k":"s","s":{"r":"Bool:D","p":["num $a","num $b"]},"n":"infix:«<=»"},{"n":"infix:«<=»","s":{"r":"Bool:D","p":["Rational:D \\a","Rational:D \\b"]},"m":1,"k":"s"},{"n":"infix:«<=»","s":{"r":"Bool:D","p":["Rational:D \\a","Int:D \\b"]},"m":1,"k":"s"},{"k":"s","m":1,"s":{"r":"Bool:D","p":["Int:D \\a","Rational:D \\b"]},"n":"infix:«<=»"},{"m":1,"k":"s","s":{"r":"Bool:D","p":["Instant:D $a","Instant:D $b"]},"n":"infix:«<=»"},{"k":"s","m":1,"s":{"p":["DateTime:D \\a","DateTime:D \\b"],"r":"Bool:D"},"n":"infix:«<=»"},{"m":1,"k":"s","s":{"r":"Bool:D","p":["Date:D $a","Date:D $b"]},"n":"infix:«<=»"},{"m":1,"k":"s","s":{"r":"Mu","p":["Version:D \\a","Version:D \\b"]},"n":"infix:«<=»"},{"k":"e","t":"Signal","n":"SIGCONT"},{"k":"c","m":[{"s":{"p":["*%_"],"r":"Mu"},"n":"Capture","k":"m","m":0},{"n":"Num","s":{"r":"Mu","p":["*%_"]},"m":0,"k":"m"},{"s":{"r":"Mu","p":["*%_"]},"n":"Bridge","k":"m","m":0},{"n":"Range","s":{"p":["*%_"],"r":"Mu"},"k":"m","m":0},{"m":0,"k":"m","s":{"r":"Mu","p":["*%_"]},"n":"Int"},{"n":"Rat","s":{"r":"Mu","p":["Real $epsilon = 1e-06",":$fat","*%_"]},"k":"m","m":0},{"k":"m","m":0,"s":{"r":"Mu","p":["Real $epsilon = 1e-06","*%_"]},"n":"FatRat"},{"m":0,"k":"m","s":{"p":["*%_"],"r":"Mu"},"n":"succ"},{"k":"m","m":0,"s":{"r":"Mu","p":["*%_"]},"n":"pred"},{"s":{"r":"Mu","p":["*%_"]},"n":"isNaN","m":0,"k":"m"},{"s":{"r":"Mu","p":["*%_"]},"n":"abs","k":"m","m":0},{"s":{"p":["*%_"],"r":"Mu"},"n":"log","k":"m","m":1},{"k":"m","m":1,"n":"log","s":{"r":"Mu","p":["Num \\base","*%_"]}},{"m":1,"k":"m","n":"log","s":{"r":"Mu","p":["*%_"]}},{"m":1,"k":"m","n":"log","s":{"p":["Real $base","*%_"],"r":"Mu"}},{"n":"log","s":{"p":["Cool $base","*%_"],"r":"Mu"},"k":"m","m":1},{"s":{"r":"Mu","p":["Numeric $base","*%_"]},"n":"log","k":"m","m":1},{"s":{"p":["*%_"],"r":"Mu"},"n":"sqrt","k":"m","m":1},{"k":"m","m":0,"n":"rand","s":{"p":["*%_"],"r":"Mu"}},{"n":"ceiling","s":{"r":"Mu","p":["*%_"]},"m":0,"k":"m"},{"k":"m","m":0,"n":"floor","s":{"r":"Mu","p":["*%_"]}},{"n":"sin","s":{"r":"Mu","p":["*%_"]},"m":1,"k":"m"},{"s":{"r":"Mu","p":["*%_"]},"n":"asin","m":1,"k":"m"},{"k":"m","m":1,"n":"cos","s":{"p":["*%_"],"r":"Mu"}},{"m":1,"k":"m","s":{"p":["*%_"],"r":"Mu"},"n":"acos"},{"n":"tan","s":{"r":"Mu","p":["*%_"]},"m":1,"k":"m"},{"n":"atan","s":{"p":["*%_"],"r":"Mu"},"m":1,"k":"m"},{"n":"sec","s":{"p":["*%_"],"r":"Mu"},"m":1,"k":"m"},{"s":{"p":["*%_"],"r":"Mu"},"n":"asec","k":"m","m":1},{"s":{"p":["*%_"],"r":"Mu"},"n":"cosec","k":"m","m":0},{"k":"m","m":0,"n":"acosec","s":{"r":"Mu","p":["*%_"]}},{"k":"m","m":0,"n":"cotan","s":{"p":["*%_"],"r":"Mu"}},{"n":"acotan","s":{"r":"Mu","p":["*%_"]},"m":0,"k":"m"},{"s":{"p":["*%_"],"r":"Mu"},"n":"sinh","k":"m","m":1},{"k":"m","m":1,"n":"asinh","s":{"p":["*%_"],"r":"Mu"}},{"k":"m","m":1,"s":{"r":"Mu","p":["*%_"]},"n":"cosh"},{"s":{"r":"Mu","p":["*%_"]},"n":"acosh","k":"m","m":1},{"n":"tanh","s":{"p":["*%_"],"r":"Mu"},"k":"m","m":1},{"k":"m","m":1,"s":{"p":["*%_"],"r":"Mu"},"n":"atanh"},{"m":1,"k":"m","n":"atanh","s":{"p":["*%_"],"r":"Mu"}},{"m":1,"k":"m","n":"sech","s":{"p":["*%_"],"r":"Mu"}},{"n":"asech","s":{"p":["*%_"],"r":"Mu"},"k":"m","m":1},{"m":1,"k":"m","n":"cosech","s":{"r":"Mu","p":["*%_"]}},{"n":"acosech","s":{"r":"Mu","p":["*%_"]},"k":"m","m":1},{"m":1,"k":"m","n":"cotanh","s":{"r":"Mu","p":["*%_"]}},{"n":"acotanh","s":{"p":["*%_"],"r":"Mu"},"k":"m","m":1},{"k":"m","m":0,"s":{"p":["*%_"],"r":"Bool:D"},"n":"is-prime"},{"k":"m","m":0,"s":{"p":["*%_"],"r":"Mu"},"n":"narrow"},{"m":0,"k":"m","n":"sign","s":{"r":"Mu","p":["*%_"]}},{"s":{"p":["*%_"],"r":"Mu"},"n":"conj","k":"m","m":0},{"m":1,"k":"m","s":{"r":"Mu","p":["Num:D $x = 1e0","*%_"]},"n":"atan2"},{"m":1,"k":"m","n":"atan2","s":{"p":["Real $x = 1e0","*%_"],"r":"Mu"}},{"s":{"p":["Cool $x = 1e0","*%_"],"r":"Mu"},"n":"atan2","m":1,"k":"m"},{"k":"m","m":1,"n":"round","s":{"p":["*%_"],"r":"Mu"}},{"n":"round","s":{"r":"Mu","p":["$scale","*%_"]},"m":1,"k":"m"},{"k":"m","m":0,"n":"unpolar","s":{"p":["Real $angle","*%_"],"r":"Mu"}},{"n":"cis","s":{"p":["*%_"],"r":"Mu"},"k":"m","m":0},{"n":"Complex","s":{"p":["*%_"],"r":"Mu"},"m":0,"k":"m"},{"s":{"r":"Mu","p":["*%_"]},"n":"exp","m":1,"k":"m"},{"n":"exp","s":{"p":["*%_"],"r":"Mu"},"k":"m","m":1},{"s":{"p":["$base","*%_"],"r":"Mu"},"n":"exp","m":1,"k":"m"},{"s":{"p":["*%_"],"r":"Mu"},"n":"truncate","k":"m","m":0},{"m":0,"k":"m","s":{"r":"Mu","p":["+@mods","*%_"]},"n":"polymod"},{"m":0,"k":"m","s":{"p":["Int:D $base","$digits? is copy","*%_"],"r":"Mu"},"n":"base"},{"s":{"p":["*%_"],"r":"Mu"},"n":"log10","k":"m","m":0},{"m":0,"k":"m","n":"roots","s":{"p":["Cool $n","*%_"],"r":"Mu"}},{"n":"WHICH","s":{"p":["*%_"],"r":"ValueObjAt:D"},"k":"m","m":1},{"n":"WHICH","s":{"p":["*%_"],"r":"ObjAt:D"},"k":"m","m":1},{"n":"WHICH","s":{"r":"ValueObjAt:D","p":["*%_"]},"k":"m","m":1},{"k":"m","m":1,"s":{"r":"Bool","p":["*%_"]},"n":"Bool"},{"n":"Bool","s":{"r":"Mu","p":["*%_"]},"k":"m","m":1},{"s":{"r":"Mu","p":["*%_"]},"n":"Bool","m":1,"k":"m"},{"s":{"r":"Mu","p":["*%_"]},"n":"Bool","k":"m","m":1},{"n":"new","s":{"r":"Mu","p":["*%attrinit"]},"m":1,"k":"m"},{"n":"new","s":{"p":["$","*@","*%_"],"r":"Mu"},"k":"m","m":1},{"m":1,"k":"m","s":{"r":"Mu","p":["*%_"]},"n":"new"},{"n":"new","s":{"r":"Mu","p":["$n","*%_"]},"m":1,"k":"m"},{"m":1,"k":"m","s":{"p":["*%_"],"r":"Mu"},"n":"perl"},{"m":1,"k":"m","s":{"p":["*%_"],"r":"Mu"},"n":"perl"},{"k":"m","m":1,"n":"perl","s":{"p":["*%_"],"r":"Mu"}},{"k":"m","m":1,"n":"Str","s":{"r":"Mu","p":["*%_"]}},{"n":"Str","s":{"r":"Mu","p":["*%_"]},"k":"m","m":1},{"n":"Str","s":{"r":"Mu","p":["*%_"]},"m":1,"k":"m"},{"m":1,"k":"m","n":"Str","s":{"p":["*%_"],"r":"Mu"}},{"m":1,"k":"m","n":"Real","s":{"r":"Mu","p":["*%_"]}},{"m":1,"k":"m","s":{"p":["*%_"],"r":"Mu"},"n":"Real"},{"m":1,"k":"m","s":{"p":["*%_"],"r":"Mu"},"n":"Real"},{"s":{"r":"Mu","p":["*%_"]},"n":"Real","m":1,"k":"m"},{"s":{"p":["*%_"],"r":"Mu"},"n":"Numeric","k":"m","m":1},{"m":1,"k":"m","n":"Numeric","s":{"p":["*%_"],"r":"Mu"}},{"m":1,"k":"m","s":{"p":["*%_"],"r":"Mu"},"n":"Numeric"},{"m":1,"k":"m","s":{"r":"Mu","p":["\\topic","*%_"]},"n":"ACCEPTS"},{"s":{"r":"Mu","p":["Mu:U \\topic","*%_"]},"n":"ACCEPTS","m":1,"k":"m"},{"s":{"r":"Mu","p":["Mu:D \\a","*%_"]},"n":"ACCEPTS","m":1,"k":"m"},{"s":{"r":"Bool","p":["Mu:U $","*%_"]},"n":"ACCEPTS","k":"m","m":1},{"m":1,"k":"m","s":{"p":["\\topic","*%_"],"r":"Bool:D"},"n":"ACCEPTS"},{"s":{"p":["Any:D \\a","*%_"],"r":"Mu"},"n":"ACCEPTS","m":1,"k":"m"},{"k":"m","m":1,"n":"gist","s":{"r":"Mu","p":["*%_"]}},{"k":"m","m":1,"n":"gist","s":{"p":["*%_"],"r":"Mu"}},{"m":1,"k":"m","s":{"r":"Mu","p":["*%_"]},"n":"gist"},{"s":{"p":["*%_"],"r":"Mu"},"n":"DUMP","k":"m","m":1},{"m":1,"k":"m","s":{"r":"Mu","p":[":$indent-step = 4",":%ctx","*%_"]},"n":"DUMP"},{"m":1,"k":"m","n":"DUMP","s":{"p":["*%_"],"r":"Mu"}},{"m":0,"k":"s","s":{"p":["@auto","%init","*%_"],"r":"Mu"},"n":"BUILDALL"}],"b":"C","t":"Num","n":"\uD835\uDC52"},{"k":"v","n":"&callframe","t":"Sub"},{"m":0,"k":"s","s":{"r":"Mu","p":["Int:D $level = 0"]},"n":"callframe"},{"n":"&infix:<≅>","t":"Sub","k":"v"},{"k":"s","m":1,"n":"infix:<=~=>","s":{"p":["$?"],"r":"Mu"}},{"n":"infix:<=~=>","s":{"p":["\\a","\\b",":$tolerance = { ... }"],"r":"Mu"},"k":"s","m":1},{"m":1,"k":"s","n":"infix:<≅>","s":{"p":["Inf","Inf"],"r":"Mu"}},{"n":"infix:<≅>","s":{"r":"Mu","p":["-Inf","-Inf"]},"m":1,"k":"s"},{"s":{"r":"Bool:D","p":["Complex:D \\a","Complex:D \\b"]},"n":"infix:<≅>","k":"s","m":1},{"k":"s","m":1,"n":"infix:<≅>","s":{"p":["Complex:D \\a","Num(Real) \\b"],"r":"Bool:D"}},{"k":"s","m":1,"n":"infix:<≅>","s":{"p":["Num(Real) \\a","Complex:D \\b"],"r":"Bool:D"}},{"n":"&cotanh","t":"Sub+{is-pure}","k":"v"},{"n":"cotanh","s":{"p":["Numeric \\x"],"r":"Mu"},"m":1,"k":"s"},{"s":{"r":"Mu","p":["Cool \\x"]},"n":"cotanh","k":"s","m":1},{"m":1,"k":"s","s":{"r":"num","p":["num $x"]},"n":"cotanh"},{"k":"e","n":"SIGBREAK","t":"Signal"},{"n":"&exp","t":"Sub+{is-pure}","k":"v"},{"s":{"p":["Numeric $x"],"r":"Mu"},"n":"exp","m":1,"k":"s"},{"m":1,"k":"s","s":{"p":["Numeric $x","Numeric $base"],"r":"Mu"},"n":"exp"},{"t":"Sub+{is-pure}+{Precedence}","n":"&infix:<⊖>","k":"v"},{"m":1,"k":"s","n":"infix:<(^)>","s":{"r":"Mu","p":[]}},{"m":1,"k":"s","n":"infix:<(^)>","s":{"r":"Mu","p":["QuantHash:D \\a"]}},{"s":{"r":"Mu","p":["\\a"]},"n":"infix:<(^)>","m":1,"k":"s"},{"k":"s","m":1,"n":"infix:<(^)>","s":{"r":"Mu","p":["Setty:D \\a","Setty:D \\b"]}},{"m":1,"k":"s","s":{"r":"Mu","p":["Setty:D \\a","Mixy:D \\b"]},"n":"infix:<(^)>"},{"n":"infix:<(^)>","s":{"p":["Setty:D \\a","Baggy:D \\b"],"r":"Mu"},"k":"s","m":1},{"m":1,"k":"s","s":{"r":"Mu","p":["Mixy:D \\a","Mixy:D \\b"]},"n":"infix:<(^)>"},{"n":"infix:<(^)>","s":{"p":["Mixy:D \\a","Baggy:D \\b"],"r":"Mu"},"k":"s","m":1},{"k":"s","m":1,"n":"infix:<(^)>","s":{"r":"Mu","p":["Mixy:D \\a","Setty:D \\b"]}},{"n":"infix:<(^)>","s":{"r":"Mu","p":["Baggy:D \\a","Mixy:D \\b"]},"m":1,"k":"s"},{"n":"infix:<(^)>","s":{"p":["Baggy:D \\a","Baggy:D \\b"],"r":"Mu"},"m":1,"k":"s"},{"s":{"p":["Baggy:D \\a","Setty:D \\b"],"r":"Mu"},"n":"infix:<(^)>","k":"s","m":1},{"k":"s","m":1,"n":"infix:<(^)>","s":{"r":"Mu","p":["Map:D \\a","Map:D \\b"]}},{"k":"s","m":1,"n":"infix:<(^)>","s":{"r":"Mu","p":["Failure:D \\a","$"]}},{"n":"infix:<(^)>","s":{"p":["$","Failure:D \\b"],"r":"Mu"},"m":1,"k":"s"},{"k":"s","m":1,"s":{"p":["\\a","\\b"],"r":"Mu"},"n":"infix:<(^)>"},{"s":{"r":"Mu","p":["**@p"]},"n":"infix:<(^)>","m":1,"k":"s"},{"k":"c","m":[{"n":"iterator","s":{"r":"Mu","p":["*%_"]},"k":"m","m":0},{"s":{"p":["*%_"],"r":"Mu"},"n":"of","k":"m","m":0},{"n":"new-from-pairs","s":{"r":"Setty:D","p":["*@pairs","*%_"]},"k":"m","m":0},{"s":{"p":["*%_"],"r":"Bool"},"n":"default","k":"m","m":0},{"s":{"r":"Int:D","p":["*%_"]},"n":"elems","k":"m","m":0},{"m":0,"k":"m","n":"total","s":{"p":["*%_"],"r":"Int:D"}},{"k":"m","m":1,"n":"grab","s":{"r":"Mu","p":["$count?","*%_"]}},{"m":1,"k":"m","s":{"p":["$count?","*%_"],"r":"Mu"},"n":"grabpairs"},{"m":1,"k":"m","s":{"r":"Mu","p":["*%_"]},"n":"pick"},{"s":{"r":"Mu","p":["Callable:D $calculate","*%_"]},"n":"pick","m":1,"k":"m"},{"k":"m","m":1,"n":"pick","s":{"r":"Mu","p":["Whatever $","*%_"]}},{"n":"pick","s":{"r":"Mu","p":["$count","*%_"]},"k":"m","m":1},{"k":"m","m":1,"s":{"p":["*%_"],"r":"Mu"},"n":"pickpairs"},{"k":"m","m":1,"s":{"r":"Mu","p":["Callable:D $calculate","*%_"]},"n":"pickpairs"},{"s":{"p":["Whatever $","*%_"],"r":"Mu"},"n":"pickpairs","m":1,"k":"m"},{"m":1,"k":"m","n":"pickpairs","s":{"p":["\\count","*%_"],"r":"Mu"}},{"m":1,"k":"m","s":{"p":["*%_"],"r":"Mu"},"n":"roll"},{"n":"roll","s":{"r":"Mu","p":["Callable:D $calculate","*%_"]},"k":"m","m":1},{"s":{"p":["Whatever $","*%_"],"r":"Mu"},"n":"roll","k":"m","m":1},{"n":"roll","s":{"r":"Mu","p":["$count","*%_"]},"k":"m","m":1},{"s":{"p":["*%_"],"r":"Mu"},"n":"RAW-HASH","m":0,"k":"m"},{"k":"m","m":0,"n":"keyof","s":{"p":["*%_"],"r":"Mu"}},{"m":0,"k":"m","s":{"p":["\\elems","*%_"],"r":"Mu"},"n":"SET-SELF"},{"k":"m","m":1,"s":{"r":"Set:D","p":["*@pairs",":$INITIALIZE!","*%_"]},"n":"STORE"},{"m":1,"k":"m","s":{"p":["\\objects","\\bools",":$INITIALIZE!","*%_"],"r":"Set:D"},"n":"STORE"},{"k":"m","m":1,"s":{"p":["|"],"r":"Mu"},"n":"STORE"},{"k":"m","m":0,"n":"Int","s":{"r":"Int:D","p":["*%_"]}},{"m":0,"k":"m","n":"Num","s":{"p":["*%_"],"r":"Num:D"}},{"n":"Numeric","s":{"r":"Numeric:D","p":["*%_"]},"m":0,"k":"m"},{"m":0,"k":"m","s":{"r":"Real:D","p":["*%_"]},"n":"Real"},{"s":{"r":"Mu","p":["*%_"]},"n":"Capture","m":0,"k":"m"},{"k":"m","m":0,"n":"fmt","s":{"r":"Mu","p":["Cool $format = \"\\%s\\t\\%s\"","$sep = \"\\n\"","*%_"]}},{"n":"Setty","s":{"p":["*%_"],"r":"Mu"},"m":1,"k":"m"},{"k":"m","m":1,"s":{"r":"Mu","p":["*%_"]},"n":"Setty"},{"k":"m","m":1,"n":"Baggy","s":{"r":"Mu","p":["*%_"]}},{"n":"Baggy","s":{"r":"Mu","p":["*%_"]},"m":1,"k":"m"},{"n":"Mixy","s":{"r":"Mu","p":["*%_"]},"k":"m","m":1},{"s":{"p":["*%_"],"r":"Mu"},"n":"Mixy","m":1,"k":"m"},{"s":{"p":["*%_"],"r":"ValueObjAt:D"},"n":"WHICH","m":1,"k":"m"},{"s":{"p":["*%_"],"r":"ObjAt:D"},"n":"WHICH","k":"m","m":1},{"s":{"p":["*%_"],"r":"ValueObjAt:D"},"n":"WHICH","k":"m","m":1},{"m":1,"k":"m","n":"kv","s":{"p":["*%_"],"r":"Mu"}},{"n":"kv","s":{"r":"Mu","p":["*%_"]},"k":"m","m":1},{"s":{"r":"Mu","p":["*%_"]},"n":"kv","k":"m","m":1},{"k":"m","m":1,"s":{"p":["*%_"],"r":"Mu"},"n":"values"},{"n":"values","s":{"r":"Mu","p":["*%_"]},"m":1,"k":"m"},{"n":"values","s":{"r":"Mu","p":["*%_"]},"m":1,"k":"m"},{"n":"Set","s":{"p":["*%_"],"r":"Set:D"},"m":1,"k":"m"},{"s":{"p":["*%_"],"r":"Mu"},"n":"Set","k":"m","m":1},{"n":"SetHash","s":{"r":"SetHash:D","p":["*%_"]},"m":1,"k":"m"},{"m":1,"k":"m","s":{"p":["*%_"],"r":"Mu"},"n":"SetHash"},{"n":"AT-KEY","s":{"r":"Mu","p":["$key","*%_"]},"k":"m","m":1},{"n":"AT-KEY","s":{"p":["\\key","*%_"],"r":"Mu"},"k":"m","m":1},{"m":1,"k":"m","s":{"p":["\\k","*%_"],"r":"Bool:D"},"n":"AT-KEY"},{"n":"AT-KEY","s":{"r":"Mu","p":["$key","*%_"]},"m":1,"k":"m"},{"m":1,"k":"m","s":{"p":["\\key","Mu \\assignee","*%_"],"r":"Mu"},"n":"ASSIGN-KEY"},{"n":"ASSIGN-KEY","s":{"p":["\\k","\\v","*%_"],"r":"Mu"},"m":1,"k":"m"},{"m":1,"k":"m","s":{"r":"Nil","p":["$","*%_"]},"n":"DELETE-KEY"},{"m":1,"k":"m","s":{"p":["$","*%_"],"r":"Mu"},"n":"DELETE-KEY"},{"m":1,"k":"m","s":{"r":"Mu","p":["\\k","*%_"]},"n":"DELETE-KEY"},{"n":"new","s":{"r":"Mu","p":["*%attrinit"]},"k":"m","m":1},{"s":{"r":"Mu","p":["$","*@","*%_"]},"n":"new","m":1,"k":"m"},{"n":"new","s":{"r":"Setty:D","p":["*%_"]},"m":1,"k":"m"},{"s":{"r":"Setty:D","p":["\\value","*%_"]},"n":"new","m":1,"k":"m"},{"s":{"r":"Setty:D","p":["**@args","*%_"]},"n":"new","k":"m","m":1},{"m":1,"k":"m","s":{"p":["*%_"],"r":"Mu"},"n":"keys"},{"m":1,"k":"m","n":"keys","s":{"r":"Mu","p":["*%_"]}},{"n":"keys","s":{"p":["*%_"],"r":"Mu"},"m":1,"k":"m"},{"n":"antipairs","s":{"p":["*%_"],"r":"Mu"},"k":"m","m":1},{"m":1,"k":"m","s":{"r":"Mu","p":["*%_"]},"n":"antipairs"},{"m":1,"k":"m","s":{"p":["*%_"],"r":"Mu"},"n":"antipairs"},{"k":"m","m":1,"n":"minpairs","s":{"p":["*%_"],"r":"Mu"}},{"m":1,"k":"m","n":"minpairs","s":{"p":["*%_"],"r":"Mu"}},{"k":"m","m":1,"n":"maxpairs","s":{"r":"Mu","p":["*%_"]}},{"n":"maxpairs","s":{"r":"Mu","p":["*%_"]},"k":"m","m":1},{"m":1,"k":"m","n":"Bool","s":{"r":"Bool","p":["*%_"]}},{"s":{"r":"Mu","p":["*%_"]},"n":"Bool","k":"m","m":1},{"k":"m","m":1,"n":"Bool","s":{"r":"Bool:D","p":["*%_"]}},{"n":"hash","s":{"p":["*%_"],"r":"Mu"},"m":1,"k":"m"},{"s":{"p":["*%_"],"r":"Mu"},"n":"hash","k":"m","m":1},{"s":{"p":["*%_"],"r":"Hash:D"},"n":"hash","m":1,"k":"m"},{"n":"Hash","s":{"r":"Mu","p":["*%_"]},"k":"m","m":1},{"m":1,"k":"m","s":{"r":"Hash:D","p":["*%_"]},"n":"Hash"},{"s":{"r":"Mu","p":["\\topic","*%_"]},"n":"ACCEPTS","k":"m","m":1},{"k":"m","m":1,"s":{"p":["Mu:U \\topic","*%_"],"r":"Mu"},"n":"ACCEPTS"},{"s":{"r":"Mu","p":["Mu:D \\a","*%_"]},"n":"ACCEPTS","m":1,"k":"m"},{"k":"m","m":1,"n":"ACCEPTS","s":{"r":"Bool","p":["Mu:U $","*%_"]}},{"n":"ACCEPTS","s":{"r":"Bool:D","p":["\\topic","*%_"]},"k":"m","m":1},{"k":"m","m":1,"s":{"r":"Mu","p":["\\other","*%_"]},"n":"ACCEPTS"},{"k":"m","m":1,"n":"ACCEPTS","s":{"p":["Setty:D \\other","*%_"],"r":"Mu"}},{"s":{"r":"Mu","p":["\\other","*%_"]},"n":"ACCEPTS","m":1,"k":"m"},{"m":1,"k":"m","n":"Str","s":{"p":["*%_"],"r":"Mu"}},{"m":1,"k":"m","s":{"p":["*%_"],"r":"Mu"},"n":"Str"},{"k":"m","m":1,"n":"Str","s":{"r":"Str:D","p":["*%_"]}},{"k":"m","m":1,"n":"gist","s":{"p":["*%_"],"r":"Mu"}},{"n":"gist","s":{"p":["*%_"],"r":"Mu"},"k":"m","m":1},{"n":"gist","s":{"p":["*%_"],"r":"Str:D"},"m":1,"k":"m"},{"n":"perl","s":{"r":"Mu","p":["*%_"]},"k":"m","m":1},{"n":"perl","s":{"p":["*%_"],"r":"Mu"},"m":1,"k":"m"},{"n":"perl","s":{"r":"Str:D","p":["*%_"]},"m":1,"k":"m"},{"m":1,"k":"m","s":{"p":["$","*%_"],"r":"Bool"},"n":"EXISTS-KEY"},{"m":1,"k":"m","n":"EXISTS-KEY","s":{"p":["$","*%_"],"r":"Bool"}},{"n":"EXISTS-KEY","s":{"r":"Bool:D","p":["\\k","*%_"]},"k":"m","m":1},{"m":1,"k":"m","n":"Bag","s":{"r":"Bag:D","p":["*%_"]}},{"n":"Bag","s":{"r":"Mu","p":["*%_"]},"k":"m","m":1},{"k":"m","m":1,"s":{"r":"BagHash:D","p":["*%_"]},"n":"BagHash"},{"n":"BagHash","s":{"p":["*%_"],"r":"Mu"},"m":1,"k":"m"},{"n":"Mix","s":{"p":["*%_"],"r":"Mix:D"},"k":"m","m":1},{"k":"m","m":1,"s":{"r":"Mu","p":["*%_"]},"n":"Mix"},{"k":"m","m":1,"s":{"r":"MixHash:D","p":["*%_"]},"n":"MixHash"},{"s":{"p":["*%_"],"r":"Mu"},"n":"MixHash","k":"m","m":1},{"k":"m","m":1,"s":{"r":"Mu","p":["*%_"]},"n":"list"},{"m":1,"k":"m","n":"list","s":{"p":["*%_"],"r":"Mu"}},{"n":"list","s":{"p":["*%_"],"r":"Mu"},"m":1,"k":"m"},{"m":1,"k":"m","s":{"r":"Mu","p":["*%_"]},"n":"list"},{"s":{"p":["*%_"],"r":"Mu"},"n":"pairs","k":"m","m":1},{"n":"pairs","s":{"r":"Mu","p":["*%_"]},"m":1,"k":"m"},{"n":"pairs","s":{"p":["*%_"],"r":"Mu"},"m":1,"k":"m"},{"n":"BUILDALL","s":{"r":"Mu","p":["@auto","%init","*%_"]},"m":0,"k":"s"},{"s":{"r":"Mu","p":["\\type","*%_"]},"n":"!HASHIFY","m":0,"k":"m"},{"m":0,"k":"m","n":"!create-from-iterator","s":{"p":["\\type","\\iterator","*%_"],"r":"Setty:D"}}],"b":"A","a":[{"t":"ValueObjAt","n":"$!WHICH","k":"v"},{"n":"$!elems","t":"Rakudo::Internals::IterationSet","k":"v"}],"d":"TITLE\nclass Set\n\nSUBTITLE\nImmutable collection of distinct objects\n\n    class Set does Setty { }\n\nA Set is an immutable set, meaning a collection of distinct elements in no\nparticular order. (For mutable sets, see SetHash instead.)\n\nObjects/values of any type are allowed as set elements. Within a Set, every\nelement is guaranteed to be unique (in the sense that no two elements would\ncompare positively with the === operator):\n\n    my $fruits = set <peach apple orange apple apple>;\n\n    say $fruits.elems;      # OUTPUT: «3␤»\n    say $fruits.keys.sort;  # OUTPUT: «apple orange peach␤»\n\n\nSets can be treated as object hashes using the { } postcircumfix operator,\nwhich returns the value True for keys that are elements of the set, and\nFalse for keys that aren't:\n\n    my $fruits = set <peach apple orange apple apple>;\n    say $fruits<apple>;  # OUTPUT: «True␤»\n    say $fruits<kiwi>;   # OUTPUT: «False␤»\n\nCreating Set objects\n\nSets can be composed using the set subroutine (or Set.new, for which it is\na shorthand). Any positional parameters, regardless of their type, become\nelements of the set:\n\n    my $n = set \"zero\" => 0, \"one\" => 1, \"two\" => 2;\n    say $n.keys.perl;        # OUTPUT: «(:two(2), :zero(0), :one(1)).Seq␤»\n    say $n.keys.map(&WHAT);  # OUTPUT: «((Pair) (Pair) (Pair))␤»\n\nAlternatively, the .Set coercer (or its functional form, Set()) can be\ncalled on an existing object to coerce it to a Set. Its semantics depend on\nthe type and contents of the object. In general it evaluates the object in\nlist context and creates a set with the resulting items as elements,\nalthough for Hash-like objects or Pair items, only the keys become elements\nof the set - and keys mapped to values which boolify to False are skipped:\n\n    my $n = (\"zero\" => 0, \"one\" => 1, \"two\" => 2).Set;\n    say $n.keys.perl;        # OUTPUT: «(\"one\", \"two\").Seq␤»\n    say $n.keys.map(&WHAT);  # OUTPUT: «((Str) (Str))␤»\n\nFurthermore, you can get a Set by using set operators (see next section) on\nobjects of other types such as List, which will act like they internally\ncall .Set on them before performing the operation. Be aware of the tight\nprecedence of those operators though, which may require you to use\nparentheses around arguments:\n\n    say (1..5) (^) 4;  # OUTPUT: «set(1, 2, 3, 5)␤»\n\nOf course, you can also create a Set with the .new method.\n\n    my $fruits = Set.new( <peach apple orange apple apple> );\n\nSince 6.d (2019.03 and later) you can also use this syntax for\nparameterization of the Set, to specify which type of values are\nacceptable:\n\n    # only allow strings (Str) in the Set\n    my $fruits = Set[Str].new( <peach apple orange apple apple> );\n\n    # only allow whole numbers (Int) in the Set\n    my $fruits = Set[Int].new( <peach apple orange apple apple> );\n    # Type check failed in binding; expected Int but got Str (\"peach\")\n\nFinally, you can create Set masquerading as a hash by using the is trait:\n\n    my %s is Set = <a b c>;\n    say %s<a>;  # True\n    say %s<d>;  # False\n\nSince 6.d (2019.03 and later), this syntax also allows you to specify the\ntype of values you would like to allow:\n\n    # limit to strings\n    my %s is Set[Str] = <a b c>;\n    say %s<a>;  # True\n    say %s<d>;  # False\n\n    # limit to whole numbers\n    my %s is Set[Int] = <a b c>;\n    # Type check failed in binding; expected Int but got Str (\"a\")\n\nOperators\n\nRaku provides common set operators, which can take Sets (or any other\ncollections) as input, and return result sets as new Set objects. For\nexample:\n\n    my ($a, $b) = set(1, 2, 3), set(2, 4);\n\n    say $a (<) $b;  # OUTPUT: «False␤»\n    say $a (&) $b;  # OUTPUT: «set(2)␤»\n    say $a (^) $b;  # OUTPUT: «set(1, 3, 4)␤»\n\n    # Unicode versions:\n    say $a ⊂ $b;  # OUTPUT: «False␤»\n    say $a ∩ $b;  # OUTPUT: «set(2)␤»\n    say $a ⊖ $b;  # OUTPUT: «set(1, 3, 4)␤»\n\n\nSee Set/Bag Operators for a complete list of set operators with detailed\nexplanations.\n\nSubroutines\n\n  sub set\n\n    sub set(*@args --> Set)\n\nCreates a Set from the given @args\n\nSee Also\n\nSets, Bags, and Mixes","n":"Set","t":"Set"},{"n":"&rindex","t":"Sub","k":"v"},{"n":"rindex","s":{"r":"Mu","p":["Cool $s","Cool $needle","Cool $pos"]},"k":"s","m":1},{"n":"rindex","s":{"p":["Cool $s","Cool $needle"],"r":"Mu"},"k":"s","m":1},{"k":"v","t":"Sub","n":"&to-json"},{"k":"s","m":0,"n":"to-json","s":{"p":["|c is raw"],"r":"Mu"}},{"d":"TITLE\nrole Iterator\n\nSUBTITLE\nGeneric API for producing a sequence of values\n\n    constant IterationEnd\n    role Iterator { }\n\n\nA Iterator is an object that can generate or provide elements of a\nsequence. Users usually don't have to care about iterators, their usage is\nhidden behind iteration APIs such as for @list { }, map, grep, head, tail,\nskip and list indexing with .[$idx].\n\nThe main API is the pull-one method, which either returns the next value,\nor the sentinel value IterationEnd if no more elements are available. Each\nclass implementing Iterator must provide a pull-one method. All other\nnon-optional Iterator API methods are implemented in terms of pull-one, but\ncan also be overridden by consuming classes for performance or other\nreasons. There are also optional Iterator API methods that will only be\ncalled if they are implemented by the consuming class: these are not\nimplemented by the Iterator role.\n\nIterationEnd\n\nIterators only allow one iteration over the entire sequence. It's forbidden\nto make attempts to fetch more data, once IterationEnd has been generated,\nand behavior for doing so is undefined. For example, the following Seq will\nnot cause the die to be called under normal use, because pull-one will\nnever be called after it returns IterationEnd:\n\n    class SkippingArray is Array {\n        # skip all undefined values while iterating\n        method iterator {\n            class :: does Iterator {\n                has $.index is rw = 0;\n                has $.array is required;\n                method pull-one {\n                    $.index++ while !$.array.AT-POS($.index).defined && $.array.elems > $.index;\n                    $.array.elems > $.index ?? $.array.AT-POS($.index++) !! IterationEnd\n                }\n            }.new(array => self)\n        }\n    }\n\n    my @a := SkippingArray.new;\n\n    @a.append: 1, Any, 3, Int, 5, Mu, 7;\n\n    for @a -> $a, $b {\n        say [$a, $b];\n    }\n\n    # OUTPUT: «[1 3]␤[5 7]␤»\n\n\nThe only valid use of the sentinel value IterationEnd in a program is\nidentity comparison (using =:=) with the result of a method in the iterator\nAPI. Any other behavior is undefined and implementation dependent.\n\nPlease bear in mind that IterationEnd is a constant, so if you are going to\ncompare it against the value of a variable, this variable will have to be\nbound, not assigned. Comparing directly to the output of pull-one will\nwork.\n\n    my $it = (1,2).iterator;\n    $it.pull-one for ^2;\n    say $it.pull-one =:= IterationEnd; # OUTPUT: «True␤»\n\n\nHowever, if we use a variable we and we assign it, the result will be\nincorrect:\n\n    my $it = (1,2).iterator;\n    $it.pull-one for ^2;\n    my $is-it-the-end = $it.pull-one;\n    say $is-it-the-end =:= IterationEnd; # OUTPUT: «False␤»\n\n\nSo we'll have to bind the variable to make it work:\n\n    my $is-it-the-end := $it.pull-one;\n    say $is-it-the-end =:= IterationEnd; # OUTPUT: «True␤»\n\n\n","b":"C","m":[{"m":0,"k":"m","n":"pull-one","s":{"r":"Mu","p":["*%_"]}},{"n":"skip-one","s":{"r":"Mu","p":["*%_"]},"k":"m","m":0},{"s":{"p":["\\target","int $n","*%_"],"r":"Mu"},"n":"push-exactly","k":"m","m":0},{"k":"m","m":0,"n":"push-at-least","s":{"p":["\\target","int $n","*%_"],"r":"Mu"}},{"s":{"r":"Mu","p":["\\target","*%_"]},"n":"push-all","m":0,"k":"m"},{"k":"m","m":0,"n":"push-until-lazy","s":{"p":["\\target","*%_"],"r":"Mu"}},{"m":0,"k":"m","n":"skip-at-least","s":{"r":"Mu","p":["int $toskip","*%_"]}},{"n":"skip-at-least-pull-one","s":{"r":"Mu","p":["int $toskip","*%_"]},"k":"m","m":0},{"s":{"r":"Mu","p":["*%_"]},"n":"sink-all","k":"m","m":0},{"n":"is-lazy","s":{"r":"Bool","p":["*%_"]},"m":0,"k":"m"}],"k":"ro","t":"Iterator","n":"Iterator"},{"k":"v","t":"Sub+{is-pure}+{Precedence}","n":"&infix:<..>"},{"m":1,"k":"s","n":"infix:<..>","s":{"r":"Mu","p":["$min","$max"]}},{"n":"&asin","t":"Sub+{is-pure}","k":"v"},{"m":1,"k":"s","s":{"p":["Numeric \\x"],"r":"Mu"},"n":"asin"},{"s":{"r":"Mu","p":["Cool \\x"]},"n":"asin","m":1,"k":"s"},{"n":"asin","s":{"r":"num","p":["num $x"]},"m":1,"k":"s"},{"n":"&ceiling","t":"Sub+{is-pure}","k":"v"},{"m":1,"k":"s","s":{"r":"Mu","p":["$a"]},"n":"ceiling"},{"s":{"r":"Mu","p":["Numeric $a"]},"n":"ceiling","k":"s","m":1},{"k":"s","m":1,"n":"ceiling","s":{"p":["num $a"],"r":"num"}},{"k":"e","t":"SeekType","n":"SeekFromCurrent"},{"k":"v","n":"&proceed","t":"Sub+{Callable[Nil]}"},{"n":"proceed","s":{"r":"Nil","p":[]},"m":0,"k":"s"},{"t":"SoftRoutine","n":"SoftRoutine","b":"C","m":[{"n":"soft","s":{"r":"Bool","p":["*%_"]},"m":0,"k":"m"}],"k":"ro"},{"n":"&infix:<minmax>","t":"Sub+{is-pure}+{Precedence}","k":"v"},{"n":"infix:<minmax>","s":{"r":"Mu","p":["+\\args is raw"]},"m":1,"k":"s"},{"n":"SIGSEGV","t":"Signal","k":"e"},{"m":[{"s":{"r":"Mu","p":["Iterator:D $iter","*%_"]},"n":"new","m":0,"k":"m"},{"k":"m","m":0,"s":{"r":"Mu","p":["*%_"]},"n":"new-consumed"},{"m":0,"k":"m","s":{"r":"Mu","p":["*%_"]},"n":"iterator"},{"k":"m","m":0,"s":{"p":["*%_"],"r":"Mu"},"n":"Capture"},{"n":"elems","s":{"r":"Mu","p":["*%_"]},"k":"m","m":0},{"k":"m","m":0,"n":"Numeric","s":{"p":["*%_"],"r":"Mu"}},{"n":"Int","s":{"r":"Mu","p":["*%_"]},"m":0,"k":"m"},{"s":{"r":"Mu","p":["*%_"]},"n":"Bool","k":"m","m":0},{"k":"m","m":0,"n":"join","s":{"p":["$separator = \"\"","*%_"],"r":"Str:D"}},{"m":0,"k":"m","n":"sink","s":{"r":"Nil","p":["*%_"]}},{"m":1,"k":"m","s":{"r":"Mu","p":["&body","*%_"]},"n":"from-loop"},{"m":1,"k":"m","n":"from-loop","s":{"r":"Mu","p":["&body","&cond",":$repeat!","*%_"]}},{"n":"from-loop","s":{"r":"Mu","p":["&body","&cond","*%_"]},"k":"m","m":1},{"s":{"p":["&body","&cond","&afterwards","*%_"],"r":"Mu"},"n":"from-loop","k":"m","m":1},{"s":{"p":["|c is raw"],"r":"Mu"},"n":"fmt","m":0,"k":"m"},{"m":0,"k":"m","n":"cache","s":{"p":["*%_"],"r":"Mu"}},{"m":0,"k":"m","n":"item","s":{"r":"Mu","p":["*%_"]}},{"m":0,"k":"m","s":{"p":["*%_"],"r":"Mu"},"n":"flat"},{"m":0,"k":"m","n":"lazy-if","s":{"p":["$flag","*%_"],"r":"Mu"}},{"n":"lazy","s":{"r":"Mu","p":["*%_"]},"m":0,"k":"m"},{"n":"hyper","s":{"p":["Int(Cool) :$batch = 64","Int(Cool) :$degree = 4","*%_"],"r":"Mu"},"k":"m","m":0},{"n":"race","s":{"r":"Mu","p":["Int(Cool) :$batch = 64","Int(Cool) :$degree = 4","*%_"]},"k":"m","m":0},{"s":{"r":"Bool","p":["*%_"]},"n":"is-lazy","m":1,"k":"m"},{"m":1,"k":"m","n":"is-lazy","s":{"r":"Mu","p":["*%_"]}},{"s":{"p":["*%_"],"r":"Mu"},"n":"Seq","m":1,"k":"m"},{"s":{"r":"Mu","p":["*%_"]},"n":"Seq","k":"m","m":1},{"m":1,"k":"m","s":{"p":["*%_"],"r":"Mu"},"n":"perl"},{"m":1,"k":"m","n":"perl","s":{"p":["*%_"],"r":"Mu"}},{"m":1,"k":"m","n":"perl","s":{"p":["*%_"],"r":"Mu"}},{"s":{"p":["\\topic","*%_"],"r":"Mu"},"n":"ACCEPTS","k":"m","m":1},{"m":1,"k":"m","s":{"p":["Mu:U \\topic","*%_"],"r":"Mu"},"n":"ACCEPTS"},{"s":{"r":"Mu","p":["Mu:D \\a","*%_"]},"n":"ACCEPTS","k":"m","m":1},{"s":{"r":"Bool","p":["Mu:U $","*%_"]},"n":"ACCEPTS","m":1,"k":"m"},{"k":"m","m":1,"s":{"p":["\\topic","*%_"],"r":"Bool:D"},"n":"ACCEPTS"},{"k":"m","m":1,"s":{"r":"Bool:D","p":["Iterable:D \\iterable","*%_"]},"n":"ACCEPTS"},{"k":"m","m":1,"n":"Array","s":{"p":["*%_"],"r":"Mu"}},{"s":{"p":["*%_"],"r":"Mu"},"n":"Array","k":"m","m":1},{"s":{"r":"Mu","p":["*%_"]},"n":"List","m":1,"k":"m"},{"k":"m","m":1,"s":{"p":["*%_"],"r":"Mu"},"n":"List"},{"n":"Slip","s":{"r":"Mu","p":["*%_"]},"k":"m","m":1},{"n":"Slip","s":{"r":"Mu","p":["*%_"]},"m":1,"k":"m"},{"m":1,"k":"m","s":{"r":"Mu","p":["*%_"]},"n":"Str"},{"n":"Str","s":{"r":"Mu","p":["*%_"]},"m":1,"k":"m"},{"n":"Str","s":{"p":["*%_"],"r":"Mu"},"m":1,"k":"m"},{"n":"Stringy","s":{"r":"Mu","p":["*%_"]},"k":"m","m":1},{"n":"Stringy","s":{"p":["*%_"],"r":"Mu"},"m":1,"k":"m"},{"k":"m","m":1,"s":{"r":"Mu","p":["*%_"]},"n":"Stringy"},{"n":"AT-POS","s":{"r":"Mu","p":["int \\pos","*%_"]},"k":"m","m":1},{"n":"AT-POS","s":{"p":["Int:D \\pos","*%_"],"r":"Mu"},"k":"m","m":1},{"m":1,"k":"m","s":{"p":["Num:D \\pos","*%_"],"r":"Mu"},"n":"AT-POS"},{"n":"AT-POS","s":{"r":"Mu","p":["Any:D \\pos","*%_"]},"m":1,"k":"m"},{"s":{"r":"Mu","p":["int \\pos","*%_"]},"n":"AT-POS","m":1,"k":"m"},{"s":{"r":"Mu","p":["Int:D \\pos","*%_"]},"n":"AT-POS","m":1,"k":"m"},{"k":"m","m":1,"s":{"p":["Num:D \\pos","*%_"],"r":"Mu"},"n":"AT-POS"},{"n":"AT-POS","s":{"p":["Any:D \\pos","*%_"],"r":"Mu"},"m":1,"k":"m"},{"k":"m","m":1,"s":{"p":["Any:U \\pos","*%_"],"r":"Mu"},"n":"AT-POS"},{"s":{"r":"Mu","p":["\\one","\\two","*%_"]},"n":"AT-POS","m":1,"k":"m"},{"k":"m","m":1,"n":"AT-POS","s":{"r":"Mu","p":["\\one","\\two","\\three","*%_"]}},{"m":1,"k":"m","s":{"p":["**@indices","*%_"],"r":"Mu"},"n":"AT-POS"},{"s":{"p":["Int:D $idx","*%_"],"r":"Mu"},"n":"AT-POS","m":1,"k":"m"},{"k":"m","m":1,"s":{"r":"Mu","p":["int $idx","*%_"]},"n":"AT-POS"},{"k":"m","m":1,"s":{"p":["Any:D $","*%_"],"r":"Bool"},"n":"EXISTS-POS"},{"n":"EXISTS-POS","s":{"p":["Any:U $pos","*%_"],"r":"Mu"},"m":1,"k":"m"},{"n":"EXISTS-POS","s":{"p":["int \\pos","*%_"],"r":"Bool:D"},"k":"m","m":1},{"n":"EXISTS-POS","s":{"r":"Bool:D","p":["Int:D \\pos","*%_"]},"k":"m","m":1},{"k":"m","m":1,"s":{"p":["Num:D \\pos","*%_"],"r":"Bool:D"},"n":"EXISTS-POS"},{"s":{"p":["Any:D \\pos","*%_"],"r":"Bool:D"},"n":"EXISTS-POS","k":"m","m":1},{"s":{"r":"Mu","p":["Any:U \\pos","*%_"]},"n":"EXISTS-POS","k":"m","m":1},{"m":1,"k":"m","s":{"r":"Bool:D","p":["\\one","\\two","*%_"]},"n":"EXISTS-POS"},{"m":1,"k":"m","n":"EXISTS-POS","s":{"r":"Bool:D","p":["\\one","\\two","\\three","*%_"]}},{"n":"EXISTS-POS","s":{"r":"Bool:D","p":["**@indices","*%_"]},"k":"m","m":1},{"s":{"r":"Mu","p":["Int:D $idx","*%_"]},"n":"EXISTS-POS","k":"m","m":1},{"m":1,"k":"m","s":{"r":"Mu","p":["int $idx","*%_"]},"n":"EXISTS-POS"},{"s":{"p":["*%_"],"r":"Mu"},"n":"eager","k":"m","m":1},{"m":1,"k":"m","n":"eager","s":{"r":"Mu","p":["*%_"]}},{"n":"gist","s":{"r":"Mu","p":["*%_"]},"k":"m","m":1},{"m":1,"k":"m","s":{"r":"Mu","p":["*%_"]},"n":"gist"},{"k":"m","m":1,"n":"gist","s":{"r":"Mu","p":["*%_"]}},{"m":1,"k":"m","s":{"p":["*%_"],"r":"Mu"},"n":"list"},{"k":"m","m":1,"s":{"p":["*%_"],"r":"Mu"},"n":"list"},{"s":{"r":"Mu","p":["*%_"]},"n":"list","m":1,"k":"m"},{"m":1,"k":"m","s":{"p":["*%_"],"r":"Mix:D"},"n":"Mix"},{"m":1,"k":"m","s":{"p":["*%_"],"r":"Mu"},"n":"Mix"},{"k":"m","m":1,"n":"MixHash","s":{"r":"MixHash:D","p":["*%_"]}},{"m":1,"k":"m","s":{"p":["*%_"],"r":"Mu"},"n":"MixHash"},{"k":"m","m":1,"n":"Bag","s":{"p":["*%_"],"r":"Bag:D"}},{"n":"Bag","s":{"r":"Mu","p":["*%_"]},"m":1,"k":"m"},{"k":"m","m":1,"s":{"p":["*%_"],"r":"BagHash:D"},"n":"BagHash"},{"m":1,"k":"m","n":"BagHash","s":{"r":"Mu","p":["*%_"]}},{"n":"Set","s":{"r":"Set:D","p":["*%_"]},"m":1,"k":"m"},{"s":{"p":["*%_"],"r":"Mu"},"n":"Set","k":"m","m":1},{"k":"m","m":1,"n":"SetHash","s":{"r":"SetHash:D","p":["*%_"]}},{"n":"SetHash","s":{"r":"Mu","p":["*%_"]},"k":"m","m":1},{"n":"BUILDALL","s":{"p":["@auto","%init","*%_"],"r":"Mu"},"k":"s","m":0}],"k":"c","a":[{"k":"v","t":"Iterator","n":"$!iter"},{"t":"Mu","n":"$!list","k":"v"}],"b":"C","d":"TITLE\nclass Seq\n\nSUBTITLE\nAn iterable, lazy sequence of values\n\n    class Seq is Cool does Iterable does PositionalBindFailover { }\n\nA Seq represents anything that can lazily produce a sequence of values. A\nSeq is born in a state where iterating it will consume the values. However,\ncalling .cache on a Seq will return a List that is still lazy, but stores\nthe generated values for later access. However, assigning a Seq to an array\nconsumes the Seq; alternatively, you can use the lazy statement prefix to\navoid it from being iterated during the assignment:\n\n    # The Seq created by gather ... take is consumed on the spot here.\n    my @a = gather do { say 'consuming...'; take 'one' };  # OUTPUT: «consuming...␤»\n\n    # The Seq here is only consumed as we iterate over @a later.\n    my @a = lazy gather do { say 'consuming...'; take 'one' };  # outputs nothing.\n    .say for @a;  # OUTPUT: «consuming...␤one␤»\n\n\nA typical use case is method lines in IO::Handle, which could use a lot of\nmemory if it stored all the lines read from the file. So\n\n    for open('README.md').lines -> $line {\n        say $line;\n    }\n\n\nwon't keep all lines from the file in memory.\n\nThis implies that you cannot iterate the same Seq object twice (otherwise\nit couldn't throw away old values), so this dies:\n\n    my @a = 1, 2, 3;\n    my @b = <a b c>;\n    my \\c = @a Z=> @b;\n    .say for c;\n    .say for c; # fails\n    CATCH { default { put .^name, ': ', .Str } };\n    # OUTPUT: «X::Seq::Consumed: This Seq has already been iterated, and its values consumed\n    # (you might solve this by adding .cache on usages of the Seq, or\n    # by assigning the Seq into an array)»\n\nA high-level construct to generate a Seq is gather/take, as well as many\nbuilt-in methods like map and grep, low-level constructors to create a Seq\nfrom an iterator or from looping constructs are available too.\n\nCaution: No program should ever assume a Seq may only be iterated once even\nif not cached by the program. Caching is a volatile state exposed to the\ndeveloper as an optimization. The Seq may become cached by many operations,\nincluding calling perl on the Seq (if called prior to a non-cached\niteration). From version 6.d, you .perl can be called on consumed <Seq>. If\na program assumes a Seq can only iterate once, but then is later changed to\ncall one of these operations during the loop, that assumption will fail.\n\n","n":"Seq","t":"Seq"},{"k":"v","n":"&index","t":"Sub"},{"s":{"p":["Cool $s","Cool $needle"],"r":"Mu"},"n":"index","k":"s","m":1},{"m":1,"k":"s","s":{"p":["Cool $s","Cool $needle","Cool $pos"],"r":"Mu"},"n":"index"},{"d":"TITLE\nrole Callable\n\nSUBTITLE\nInvocable code object\n\n    role Callable { ... }\n\nRole for objects which support calling them. It's used in Block, Routine,\nSub, Method, Submethod and Macro types.\n\nCallables can be stored in &-sigiled containers, the default type\nconstraint of such a container is Callable.\n\n    my &a = {;}; # Empty block needs a semicolon\n    my &b = -> {};\n    my &c = sub () {};\n    sub foo() {};\n    my &d = &foo;\n\n","k":"ro","m":[{"k":"m","m":0,"s":{"r":"Mu","p":["*%_"]},"n":"of"},{"k":"m","m":0,"s":{"p":["*%_"],"r":"Mu"},"n":"returns"},{"m":0,"k":"m","n":"Capture","s":{"r":"Mu","p":["*%_"]}}],"b":"C","t":"Callable","n":"Callable"},{"k":"v","t":"Sub+{is-pure}+{Precedence}","n":"&zip"},{"k":"s","m":1,"s":{"p":["+\\lol is raw",":&with!"],"r":"Seq:D"},"n":"infix:<Z>"},{"s":{"r":"Seq:D","p":["+\\lol is raw"]},"n":"infix:<Z>","m":1,"k":"s"},{"k":"v","n":"&prefix:<so>","t":"Sub+{is-pure}+{Precedence}"},{"n":"prefix:<so>","s":{"r":"Mu","p":["Bool:D \\a"]},"m":1,"k":"s"},{"n":"prefix:<so>","s":{"p":["Bool:U \\a"],"r":"Mu"},"m":1,"k":"s"},{"s":{"p":["Mu \\a"],"r":"Mu"},"n":"prefix:<so>","k":"s","m":1},{"n":"Deprecation","t":"Deprecation","a":[{"t":"str","n":"$.file","k":"v"},{"t":"str","n":"$.type","k":"v"},{"k":"v","t":"str","n":"$.package"},{"n":"$.name","t":"str","k":"v"},{"t":"str","n":"$.alternative","k":"v"},{"k":"v","n":"%.callsites","t":"Associative"},{"n":"$.from","t":"Version","k":"v"},{"k":"v","t":"Version","n":"$.removed"}],"b":"A","k":"c","m":[{"s":{"p":["*%_"],"r":"Mu"},"n":"DEPRECATIONS","k":"m","m":0},{"m":1,"k":"m","s":{"r":"Mu","p":["*%_"]},"n":"report"},{"m":1,"k":"m","s":{"p":["*%_"],"r":"Mu"},"n":"report"},{"n":"WHICH","s":{"p":["*%_"],"r":"ValueObjAt:D"},"m":1,"k":"m"},{"m":1,"k":"m","s":{"p":["*%_"],"r":"ObjAt:D"},"n":"WHICH"},{"s":{"r":"ValueObjAt:D","p":["*%_"]},"n":"WHICH","k":"m","m":1},{"n":"file","s":{"r":"Mu","p":["*%_"]},"k":"m","m":0},{"s":{"r":"Mu","p":["*%_"]},"n":"type","m":0,"k":"m"},{"s":{"p":["*%_"],"r":"Mu"},"n":"package","m":0,"k":"m"},{"n":"name","s":{"p":["*%_"],"r":"Mu"},"k":"m","m":0},{"k":"m","m":0,"n":"alternative","s":{"p":["*%_"],"r":"Mu"}},{"n":"callsites","s":{"r":"Mu","p":["*%_"]},"k":"m","m":0},{"n":"from","s":{"r":"Mu","p":["*%_"]},"k":"m","m":0},{"k":"m","m":0,"s":{"p":["*%_"],"r":"Mu"},"n":"removed"},{"m":0,"k":"s","n":"BUILDALL","s":{"p":["@auto","%init","*%_"],"r":"Mu"}}]},{"d":"TITLE\nclass Rat\n\nSUBTITLE\nRational number (limited-precision)\n\n    class Rat is Cool does Rational[Int, uint64] { }\n\nRat objects store rational numbers as a pair of a numerator and\ndenominator. Number literals with a dot but without exponent produce Rats.\n\n    say 3.1;          # OUTPUT: «3.1␤»      (same as: Rat.new(31, 10))\n    say 3.1.^name;    # OUTPUT: «Rat␤»\n    say 3.1.nude;     # OUTPUT: «(31 10)␤»\n\n    say <1/2>;        # OUTPUT: «0.5␤»      (same as: Rat.new(1, 2))\n    say <1/2>.^name;  # OUTPUT: «Rat␤»\n    say <1/2>.nude;   # OUTPUT: «(1 2)␤»\n\nThus arithmetic with short dotted-decimal numbers does not suffer from\nfloating point errors.\n\nTo prevent the numerator and denominator from becoming pathologically\nlarge, the denominator is limited to 64 bit storage. On overflow of the\ndenominator a Num (floating-point number) is returned instead.\n\nFor example this function crudely approximates a square root, and overflows\nthe denominator quickly:\n\n    sub approx-sqrt($n, $iterations) {\n        my $x = $n;\n        $x = ($x + $n / $x) / 2 for ^$iterations;\n        return $x;\n    }\n    say approx-sqrt(2, 5).^name;     # OUTPUT: «Rat␤»\n    say approx-sqrt(2, 10).^name;    # OUTPUT: «Num␤»\n\nIf you want arbitrary precision arithmetic with rational numbers, use the\nFatRat type instead.\n\nRat objects are immutable.\n\n","b":"C","a":[{"k":"v","n":"$.numerator","t":"Int"},{"t":"Int","n":"$.denominator","k":"v"}],"k":"c","m":[{"n":"Rat","s":{"p":["Real $?","*%_"],"r":"Rat:D"},"k":"m","m":0},{"m":0,"k":"m","n":"FatRat","s":{"p":["Real $?","*%_"],"r":"FatRat:D"}},{"s":{"r":"Mu","p":["Int:D \\nu = 0","Int:D \\de = 1","*%_"]},"n":"new","k":"m","m":0},{"k":"m","m":0,"n":"nude","s":{"p":["*%_"],"r":"Mu"}},{"n":"Num","s":{"r":"Num:D","p":["*%_"]},"m":0,"k":"m"},{"k":"m","m":0,"n":"floor","s":{"r":"Int:D","p":["*%_"]}},{"m":0,"k":"m","n":"ceiling","s":{"r":"Int:D","p":["*%_"]}},{"s":{"r":"Int:D","p":["*%_"]},"n":"Int","m":0,"k":"m"},{"m":0,"k":"m","s":{"p":["*%_"],"r":"Mu"},"n":"Bridge"},{"n":"Range","s":{"r":"Mu","p":["*%_"]},"k":"m","m":0},{"n":"isNaN","s":{"p":["*%_"],"r":"Bool:D"},"m":0,"k":"m"},{"m":0,"k":"m","s":{"r":"Bool:D","p":["*%_"]},"n":"is-prime"},{"k":"m","m":0,"s":{"p":["$base","$digits? is copy","*%_"],"r":"Mu"},"n":"base"},{"n":"base-repeating","s":{"r":"Mu","p":["$base = 10","*%_"]},"k":"m","m":0},{"m":0,"k":"m","n":"succ","s":{"p":["*%_"],"r":"Mu"}},{"n":"pred","s":{"r":"Mu","p":["*%_"]},"m":0,"k":"m"},{"s":{"p":["*%_"],"r":"Mu"},"n":"norm","k":"m","m":0},{"m":0,"k":"m","n":"narrow","s":{"p":["*%_"],"r":"Mu"}},{"s":{"r":"Mu","p":["*%_"]},"n":"abs","k":"m","m":0},{"k":"m","m":0,"s":{"p":["*%_"],"r":"Mu"},"n":"sign"},{"k":"m","m":0,"s":{"r":"Mu","p":["*%_"]},"n":"conj"},{"k":"m","m":0,"s":{"p":["*%_"],"r":"Mu"},"n":"sqrt"},{"n":"rand","s":{"r":"Mu","p":["*%_"]},"k":"m","m":0},{"m":0,"k":"m","n":"sin","s":{"r":"Mu","p":["*%_"]}},{"n":"asin","s":{"r":"Mu","p":["*%_"]},"m":0,"k":"m"},{"n":"cos","s":{"p":["*%_"],"r":"Mu"},"m":0,"k":"m"},{"n":"acos","s":{"r":"Mu","p":["*%_"]},"m":0,"k":"m"},{"k":"m","m":0,"s":{"r":"Mu","p":["*%_"]},"n":"tan"},{"n":"atan","s":{"r":"Mu","p":["*%_"]},"k":"m","m":0},{"m":1,"k":"m","s":{"p":["Real $x = 1e0","*%_"],"r":"Mu"},"n":"atan2"},{"k":"m","m":1,"s":{"r":"Mu","p":["Cool $x = 1e0","*%_"]},"n":"atan2"},{"k":"m","m":0,"s":{"p":["*%_"],"r":"Mu"},"n":"sec"},{"m":0,"k":"m","s":{"r":"Mu","p":["*%_"]},"n":"asec"},{"m":0,"k":"m","n":"cosec","s":{"r":"Mu","p":["*%_"]}},{"s":{"p":["*%_"],"r":"Mu"},"n":"acosec","m":0,"k":"m"},{"n":"cotan","s":{"r":"Mu","p":["*%_"]},"k":"m","m":0},{"n":"acotan","s":{"r":"Mu","p":["*%_"]},"k":"m","m":0},{"s":{"r":"Mu","p":["*%_"]},"n":"sinh","k":"m","m":0},{"s":{"r":"Mu","p":["*%_"]},"n":"asinh","k":"m","m":0},{"m":0,"k":"m","n":"cosh","s":{"p":["*%_"],"r":"Mu"}},{"n":"acosh","s":{"p":["*%_"],"r":"Mu"},"m":0,"k":"m"},{"n":"tanh","s":{"r":"Mu","p":["*%_"]},"k":"m","m":0},{"m":0,"k":"m","n":"atanh","s":{"r":"Mu","p":["*%_"]}},{"k":"m","m":0,"s":{"r":"Mu","p":["*%_"]},"n":"sech"},{"s":{"r":"Mu","p":["*%_"]},"n":"asech","k":"m","m":0},{"s":{"r":"Mu","p":["*%_"]},"n":"cosech","m":0,"k":"m"},{"n":"acosech","s":{"r":"Mu","p":["*%_"]},"m":0,"k":"m"},{"s":{"r":"Mu","p":["*%_"]},"n":"cotanh","m":0,"k":"m"},{"s":{"p":["*%_"],"r":"Mu"},"n":"acotanh","m":0,"k":"m"},{"s":{"p":["*%_"],"r":"Int:D"},"n":"round","k":"m","m":1},{"s":{"r":"Mu","p":["*%_"]},"n":"round","m":1,"k":"m"},{"k":"m","m":1,"s":{"r":"Mu","p":["$scale","*%_"]},"n":"round"},{"s":{"r":"Mu","p":["Real $angle","*%_"]},"n":"unpolar","k":"m","m":0},{"m":0,"k":"m","n":"cis","s":{"r":"Mu","p":["*%_"]}},{"n":"Complex","s":{"r":"Mu","p":["*%_"]},"m":0,"k":"m"},{"s":{"p":["*%_"],"r":"Mu"},"n":"log","m":1,"k":"m"},{"m":1,"k":"m","n":"log","s":{"r":"Mu","p":["Real $base","*%_"]}},{"k":"m","m":1,"s":{"p":["Cool $base","*%_"],"r":"Mu"},"n":"log"},{"s":{"p":["Numeric $base","*%_"],"r":"Mu"},"n":"log","k":"m","m":1},{"m":1,"k":"m","s":{"p":["*%_"],"r":"Mu"},"n":"exp"},{"k":"m","m":1,"n":"exp","s":{"r":"Mu","p":["$base","*%_"]}},{"k":"m","m":0,"n":"truncate","s":{"p":["*%_"],"r":"Mu"}},{"m":0,"k":"m","n":"polymod","s":{"p":["+@mods","*%_"],"r":"Mu"}},{"n":"log10","s":{"r":"Mu","p":["*%_"]},"k":"m","m":0},{"m":0,"k":"m","n":"roots","s":{"r":"Mu","p":["Cool $n","*%_"]}},{"m":1,"k":"m","n":"perl","s":{"r":"Mu","p":["*%_"]}},{"s":{"r":"Mu","p":["*%_"]},"n":"perl","k":"m","m":1},{"k":"m","m":1,"n":"perl","s":{"p":["*%_"],"r":"Str:D"}},{"n":"WHICH","s":{"r":"ValueObjAt:D","p":["*%_"]},"m":1,"k":"m"},{"n":"WHICH","s":{"p":["*%_"],"r":"ObjAt:D"},"m":1,"k":"m"},{"m":1,"k":"m","n":"WHICH","s":{"p":["*%_"],"r":"ValueObjAt:D"}},{"n":"Bool","s":{"p":["*%_"],"r":"Bool"},"m":1,"k":"m"},{"n":"Bool","s":{"r":"Mu","p":["*%_"]},"m":1,"k":"m"},{"s":{"p":["*%_"],"r":"Mu"},"n":"Bool","k":"m","m":1},{"s":{"r":"Mu","p":["*%_"]},"n":"Bool","m":1,"k":"m"},{"s":{"p":["*%_"],"r":"Mu"},"n":"Str","m":1,"k":"m"},{"n":"Str","s":{"p":["*%_"],"r":"Mu"},"m":1,"k":"m"},{"s":{"r":"Str:D","p":["*%_"]},"n":"Str","k":"m","m":1},{"k":"m","m":1,"s":{"r":"Mu","p":["*%_"]},"n":"Str"},{"s":{"p":["*%_"],"r":"Mu"},"n":"Real","k":"m","m":1},{"n":"Real","s":{"r":"Mu","p":["*%_"]},"m":1,"k":"m"},{"s":{"r":"Mu","p":["*%_"]},"n":"Real","m":1,"k":"m"},{"m":1,"k":"m","s":{"p":["*%_"],"r":"Mu"},"n":"Real"},{"m":1,"k":"m","s":{"r":"Mu","p":["*%_"]},"n":"Numeric"},{"m":1,"k":"m","s":{"p":["*%_"],"r":"Mu"},"n":"Numeric"},{"n":"Numeric","s":{"p":["*%_"],"r":"Mu"},"k":"m","m":1},{"n":"ACCEPTS","s":{"p":["\\topic","*%_"],"r":"Mu"},"k":"m","m":1},{"s":{"r":"Mu","p":["Mu:U \\topic","*%_"]},"n":"ACCEPTS","m":1,"k":"m"},{"n":"ACCEPTS","s":{"p":["Mu:D \\a","*%_"],"r":"Mu"},"m":1,"k":"m"},{"s":{"p":["Mu:U $","*%_"],"r":"Bool"},"n":"ACCEPTS","m":1,"k":"m"},{"k":"m","m":1,"n":"ACCEPTS","s":{"r":"Bool:D","p":["\\topic","*%_"]}},{"n":"ACCEPTS","s":{"p":["Any:D \\a","*%_"],"r":"Mu"},"k":"m","m":1},{"k":"m","m":1,"s":{"p":["*%_"],"r":"Mu"},"n":"gist"},{"k":"m","m":1,"n":"gist","s":{"p":["*%_"],"r":"Mu"}},{"k":"m","m":1,"s":{"r":"Mu","p":["*%_"]},"n":"gist"},{"m":1,"k":"m","n":"DUMP","s":{"r":"Mu","p":["*%_"]}},{"m":1,"k":"m","n":"DUMP","s":{"r":"Mu","p":[":$indent-step = 4",":%ctx","*%_"]}},{"m":1,"k":"m","s":{"p":["*%_"],"r":"Mu"},"n":"DUMP"},{"k":"m","m":0,"s":{"p":["*%_"],"r":"Mu"},"n":"numerator"},{"m":0,"k":"m","n":"denominator","s":{"r":"Mu","p":["*%_"]}},{"k":"s","m":0,"n":"BUILDALL","s":{"r":"Mu","p":["@auto","%init","*%_"]}},{"m":0,"k":"m","n":"!SLOW-STR","s":{"r":"Mu","p":["\\whole","\\fract","*%_"]}},{"k":"m","m":0,"n":"!STRINGIFY","s":{"r":"Mu","p":["\\whole","\\fract","Int:D $precision","*%_"]}}],"t":"Rat","n":"Rat"},{"t":"Sub","n":"&print","k":"v"},{"k":"s","m":1,"n":"print","s":{"r":"Bool","p":[]}},{"n":"print","s":{"p":["Junction:D \\j"],"r":"Mu"},"m":1,"k":"s"},{"k":"s","m":1,"n":"print","s":{"r":"Mu","p":["Str:D \\x"]}},{"k":"s","m":1,"n":"print","s":{"p":["\\x"],"r":"Mu"}},{"s":{"p":["**@args is raw"],"r":"Mu"},"n":"print","k":"s","m":1},{"n":"&spurt","t":"Sub","k":"v"},{"k":"s","m":1,"s":{"p":["IO::Handle:D $fh","|c is raw"],"r":"Mu"},"n":"spurt"},{"k":"s","m":1,"s":{"p":["$path","|c is raw"],"r":"Mu"},"n":"spurt"},{"t":"Sub","n":"&samewith","k":"v"},{"s":{"p":["|c is raw"],"r":"Mu"},"n":"samewith","k":"s","m":0},{"k":"e","t":"Signal","n":"SIGBUS"},{"t":"Sub","n":"&chmod","k":"v"},{"m":1,"k":"s","n":"chmod","s":{"p":["$mode","*@filenames"],"r":"Mu"}},{"k":"v","t":"Sub+{is-nodal}","n":"&postcircumfix:<[; ]>"},{"m":1,"k":"s","s":{"r":"Mu","p":["\\SELF","@indices"]},"n":"postcircumfix:<[; ]>"},{"m":1,"k":"s","n":"postcircumfix:<[; ]>","s":{"r":"Mu","p":["\\SELF","@indices","Mu \\assignee"]}},{"s":{"p":["\\SELF","@indices",":$BIND!"],"r":"Mu"},"n":"postcircumfix:<[; ]>","k":"s","m":1},{"m":1,"k":"s","n":"postcircumfix:<[; ]>","s":{"p":["\\SELF","@indices",":$delete!"],"r":"Mu"}},{"s":{"r":"Mu","p":["\\SELF","@indices",":$exists!"]},"n":"postcircumfix:<[; ]>","k":"s","m":1},{"n":"postcircumfix:<[; ]>","s":{"p":["\\SELF","@indices",":$kv!"],"r":"Mu"},"m":1,"k":"s"},{"n":"postcircumfix:<[; ]>","s":{"r":"Mu","p":["\\SELF","@indices",":$p!"]},"m":1,"k":"s"},{"s":{"r":"Mu","p":["\\SELF","@indices",":$k!"]},"n":"postcircumfix:<[; ]>","m":1,"k":"s"},{"m":1,"k":"s","s":{"p":["\\SELF","@indices",":$v!"],"r":"Mu"},"n":"postcircumfix:<[; ]>"},{"n":"SIGURG","t":"Signal","k":"e"},{"k":"v","n":"&goto","t":"Sub"},{"n":"goto","s":{"p":["Label:D \\x"],"r":"Nil"},"m":1,"k":"s"},{"n":"&infix:<≠>","t":"Sub+{is-pure}+{Precedence}","k":"v"},{"k":"s","m":1,"s":{"p":["$?"],"r":"Mu"},"n":"infix:<!=>"},{"n":"infix:<!=>","s":{"p":["Mu \\a","Mu \\b"],"r":"Mu"},"k":"s","m":1},{"m":1,"k":"s","n":"infix:<!=>","s":{"r":"Bool:D","p":["int $a","int $b"]}},{"m":1,"k":"s","n":"infix:<!=>","s":{"p":["Int:D \\a","Int:D \\b"],"r":"Bool:D"}},{"m":1,"k":"s","s":{"p":["num $a","num $b"],"r":"Bool:D"},"n":"infix:<!=>"},{"n":"infix:<!=>","s":{"p":["Instant:D $a","Instant:D $b"],"r":"Bool:D"},"m":1,"k":"s"},{"s":{"r":"Bool:D","p":["DateTime:D \\a","DateTime:D \\b"]},"n":"infix:<!=>","m":1,"k":"s"},{"m":1,"k":"s","s":{"r":"Mu","p":["Version:D \\a","Version:D \\b"]},"n":"infix:<!=>"},{"k":"v","n":"&infix:<⚛-=>","t":"Sub"},{"n":"infix:<⚛-=>","s":{"p":["atomicint $target is rw","int $add"],"r":"atomicint"},"m":1,"k":"s"},{"m":1,"k":"s","n":"infix:<⚛-=>","s":{"r":"atomicint","p":["atomicint $target is rw","Int:D $add"]}},{"s":{"r":"atomicint","p":["atomicint $target is rw","$add"]},"n":"infix:<⚛-=>","m":1,"k":"s"},{"d":"TITLE\nclass Mix\n\nSUBTITLE\nImmutable collection of distinct objects with Real weights\n\n    class Mix does Mixy { }\n\nA Mix is an immutable collection of distinct elements in no particular\norder that each have a real-number weight assigned to them. (For mutable\nmixes, see MixHash instead.)\n\nMixes are often used for performing weighted random selections - see\n.roll.\n\nObjects/values of any type are allowed as mix elements. Within a Mix, items\nthat would compare positively with the === operator are considered the same\nelement, with a combined weight.\n\n    my $recipe = (butter => 0.22, sugar => 0.1,\n                  flour => 0.275, sugar => 0.02).Mix;\n\n    say $recipe.elems;      # OUTPUT: «3␤»\n    say $recipe.keys.sort;  # OUTPUT: «butter flour sugar␤»\n    say $recipe.pairs.sort; # OUTPUT: «\"butter\" => 0.22 \"flour\" => 0.275 \"sugar\" => 0.12␤»\n    say $recipe.total;      # OUTPUT: «0.615␤»\n\n\nMixes can be treated as object hashes using the { } postcircumfix operator,\nwhich returns the corresponding numeric weight for keys that are elements\nof the mix, and 0 for keys that aren't:\n\n    my $recipe = (butter => 0.22, sugar => 0.1,\n                  flour => 0.275, sugar => 0.02).Mix;\n    say $recipe<butter>;     # OUTPUT: «0.22␤»\n    say $recipe<sugar>;      # OUTPUT: «0.12␤»\n    say $recipe<chocolate>;  # OUTPUT: «0␤»\n\nCreating Mix objects\n\nMixes can be composed using the mix subroutine (or Mix.new, for which it is\na shorthand). Any positional parameters, regardless of their type, become\nelements of the mix - with a weight of 1 for each time the parameter\noccurred:\n\n    my $n = mix \"a\", \"a\", \"b\" => 0, 3.14, π, π; # The Pair is a single element\n    say $n.keys.map: *.^name; # OUTPUT: «(Rat Pair Num Str)␤»\n    say $n.pairs;\n    # OUTPUT: «(3.14 => 1 (b => 0) => 1 3.141592653589793 => 2 a => 2)␤»\n\nAlternatively, the .Mix coercer (or its functional form, Mix()) can be\ncalled on an existing object to coerce it to a Mix. Its semantics depend on\nthe type and contents of the object. In general it evaluates the object in\nlist context and creates a mix with the resulting items as elements,\nalthough for Hash-like objects or Pair items, only the keys become elements\nof the mix, and the (cumulative) values become the associated numeric\nweights:\n\n    my $n = (\"a\", \"a\", \"b\" => 0, \"c\" => 3.14).Mix;\n    say $n.keys.map(&WHAT);  # OUTPUT: «((Str) (Str))␤»\n    say $n.pairs;            # OUTPUT: «(a => 2 c => 3.14)␤»\n\nElements with a 0 value, as b above, are simply eliminated from the Mix.\n\nAlternatively, since Mixes are Associative, we can use the % sigil to\ndeclare them; in that case, we can employ is to declare their type:\n\n    my %n is Mix = (\"a\", \"a\", \"b\" => 0, \"c\" => 3.14);\n    say %n.^name; # OUTPUT: «Mix␤»\n    say %n;       # OUTPUT: «Mix(a(2), c(3.14))␤»\n\nSince 6.d (2019.03 and later) it is also possible to specify the type of\nvalues you would like to allow in a Mix. This can either be done when\ncalling .new:\n\n    # only allow strings\n    my $n = Mix[Str].new: <a b b c c c>;\n\nor using the masquerading syntax:\n\n    # only allow strings\n    my %m is Mix[Str] = <a b b c c c>;\n    say %m<b>;  # 2\n    say %m<d>;  # 0\n\n    # only allow whole numbers\n    my %m is Mix[Int] = <a b b c c c>;\n    # Type check failed in binding; expected Int but got Str (\"a\")\n\nOperators\n\nMixes can use all kind of set operators returning either Bool or other\nMixes:\n\n    my $this-mix = (sugar => ⅓, spice => ¼, all-things-nice => ¾);\n    my $that-mix = ( sugar => 1, spice => 2);\n\n    say $that-mix (<) $this-mix;     # OUTPUT: «True␤»\n    say $that-mix (^) $this-mix;     # OUTPUT: «set(all-things-nice)␤»\n    say $that-mix (+) $this-mix;     # OUTPUT: «Bag(spice(2), sugar)␤»\n\n\nWith their equivalent Unicode operators:\n\n    say $that-mix ⊂ $this-mix;     # OUTPUT: «True␤»\n    say $that-mix ⊖ $this-mix;     # OUTPUT: «set(all-things-nice)␤»\n    say $that-mix ⊎ $this-mix;     # OUTPUT: «Bag(spice(2), sugar)␤»\n\n\nSee Set/Bag Operators for a complete list of set and bag operators with\ndetailed explanations.\n\n  sub mix\n\n    sub mix(*@args --> Mix)\n\nCreates a new Mix from @args.\n\n","b":"A","a":[{"k":"v","n":"$!WHICH","t":"ValueObjAt"},{"k":"v","t":"Real","n":"$!total"},{"k":"v","t":"Real","n":"$!total-positive"},{"t":"Rakudo::Internals::IterationSet","n":"$!elems","k":"v"}],"m":[{"s":{"r":"Real:D","p":["*%_"]},"n":"total","m":0,"k":"m"},{"m":1,"k":"m","n":"classify-list","s":{"p":["&test","\\list","*%_"],"r":"Mu"}},{"s":{"p":["%test","|c is raw"],"r":"Mu"},"n":"classify-list","m":1,"k":"m"},{"n":"classify-list","s":{"p":["@test","|c is raw"],"r":"Mu"},"k":"m","m":1},{"n":"classify-list","s":{"r":"Mu","p":["&test","**@list","|c is raw"]},"k":"m","m":1},{"n":"categorize-list","s":{"r":"Mu","p":["&test","\\list","*%_"]},"m":1,"k":"m"},{"n":"categorize-list","s":{"p":["%test","|c is raw"],"r":"Mu"},"k":"m","m":1},{"s":{"p":["@test","|c is raw"],"r":"Mu"},"n":"categorize-list","k":"m","m":1},{"s":{"r":"Mu","p":["&test","**@list","|c is raw"]},"n":"categorize-list","k":"m","m":1},{"s":{"r":"Mu","p":["*%_"]},"n":"of","k":"m","m":0},{"k":"m","m":0,"s":{"r":"Mixy:D","p":["*@pairs","*%_"]},"n":"new-from-pairs"},{"s":{"p":["*%_"],"r":"Mu"},"n":"kxxv","k":"m","m":1},{"s":{"r":"Mu","p":["*%_"]},"n":"kxxv","k":"m","m":1},{"k":"m","m":0,"n":"default","s":{"r":"Int","p":["*%_"]}},{"k":"m","m":1,"n":"grabpairs","s":{"r":"Real:D","p":["$count?","*%_"]}},{"s":{"r":"Mu","p":["*%_"]},"n":"grabpairs","m":1,"k":"m"},{"n":"grabpairs","s":{"p":["Callable:D $calculate","*%_"],"r":"Mu"},"m":1,"k":"m"},{"s":{"r":"Mu","p":["Whatever $","*%_"]},"n":"grabpairs","m":1,"k":"m"},{"k":"m","m":1,"s":{"p":["\\count","*%_"],"r":"Mu"},"n":"grabpairs"},{"s":{"r":"Mu","p":["*%_"]},"n":"pickpairs","m":1,"k":"m"},{"m":1,"k":"m","n":"pickpairs","s":{"p":["Callable:D $calculate","*%_"],"r":"Mu"}},{"m":1,"k":"m","s":{"p":["Whatever $","*%_"],"r":"Mu"},"n":"pickpairs"},{"s":{"p":["\\count","*%_"],"r":"Mu"},"n":"pickpairs","k":"m","m":1},{"n":"grab","s":{"r":"Real:D","p":["$count?","*%_"]},"k":"m","m":1},{"m":1,"k":"m","n":"grab","s":{"r":"Mu","p":["$count?","*%_"]}},{"s":{"p":["|c is raw"],"r":"Mu"},"n":"grab","k":"m","m":1},{"m":1,"k":"m","s":{"r":"Mu","p":["$count?","*%_"]},"n":"pick"},{"s":{"p":["*%_"],"r":"Mu"},"n":"pick","m":1,"k":"m"},{"k":"m","m":1,"n":"pick","s":{"r":"Mu","p":["Callable:D $calculate","*%_"]}},{"k":"m","m":1,"s":{"r":"Mu","p":["Whatever $","*%_"]},"n":"pick"},{"m":1,"k":"m","n":"pick","s":{"r":"Mu","p":["\\count","*%_"]}},{"n":"roll","s":{"p":["*%_"],"r":"Mu"},"k":"m","m":1},{"k":"m","m":1,"s":{"r":"Mu","p":["Whatever $","*%_"]},"n":"roll"},{"n":"roll","s":{"p":["Callable:D $calculate","*%_"],"r":"Mu"},"m":1,"k":"m"},{"k":"m","m":1,"s":{"r":"Mu","p":["$count","*%_"]},"n":"roll"},{"n":"roll","s":{"p":["*%_"],"r":"Mu"},"k":"m","m":1},{"k":"m","m":1,"n":"roll","s":{"p":["Whatever $","*%_"],"r":"Mu"}},{"k":"m","m":1,"n":"roll","s":{"p":["Callable:D $calculate","*%_"],"r":"Mu"}},{"s":{"r":"Mu","p":["\\count","*%_"]},"n":"roll","m":1,"k":"m"},{"m":0,"k":"m","s":{"p":["*%_"],"r":"Mu"},"n":"RAW-HASH"},{"m":0,"k":"m","s":{"p":["*%_"],"r":"Mu"},"n":"keyof"},{"m":0,"k":"m","s":{"p":["\\elems","*%_"],"r":"Mu"},"n":"SET-SELF"},{"s":{"p":["*@pairs",":$INITIALIZE!","*%_"],"r":"Mix:D"},"n":"STORE","k":"m","m":1},{"k":"m","m":1,"n":"STORE","s":{"p":["\\objects","\\values",":$INITIALIZE!","*%_"],"r":"Mix:D"}},{"k":"m","m":1,"n":"STORE","s":{"r":"Mu","p":["|"]}},{"k":"m","m":0,"n":"Int","s":{"p":["*%_"],"r":"Int:D"}},{"s":{"p":["*%_"],"r":"Num:D"},"n":"Num","k":"m","m":0},{"m":0,"k":"m","s":{"r":"Numeric:D","p":["*%_"]},"n":"Numeric"},{"m":0,"k":"m","s":{"p":["*%_"],"r":"Real:D"},"n":"Real"},{"k":"m","m":0,"s":{"p":["*%_"],"r":"Mu"},"n":"Capture"},{"n":"fmt","s":{"p":["Cool $format = \"\\%s\\t\\%s\"","$sep = \"\\n\"","*%_"],"r":"Mu"},"k":"m","m":0},{"n":"Setty","s":{"r":"Mu","p":["*%_"]},"m":1,"k":"m"},{"k":"m","m":1,"s":{"r":"Mu","p":["*%_"]},"n":"Setty"},{"s":{"r":"Mu","p":["*%_"]},"n":"Baggy","k":"m","m":1},{"m":1,"k":"m","s":{"r":"Mu","p":["*%_"]},"n":"Baggy"},{"s":{"p":["*%_"],"r":"Mu"},"n":"Mixy","m":1,"k":"m"},{"s":{"p":["*%_"],"r":"Mu"},"n":"Mixy","k":"m","m":1},{"k":"m","m":1,"s":{"p":["$","*%_"],"r":"Nil"},"n":"DELETE-KEY"},{"s":{"p":["$","*%_"],"r":"Mu"},"n":"DELETE-KEY","k":"m","m":1},{"s":{"p":["\\k","*%_"],"r":"Mu"},"n":"DELETE-KEY","m":1,"k":"m"},{"m":1,"k":"m","s":{"p":["\\k","*%_"],"r":"Mu"},"n":"DELETE-KEY"},{"m":1,"k":"m","s":{"r":"ValueObjAt:D","p":["*%_"]},"n":"WHICH"},{"m":1,"k":"m","s":{"p":["*%_"],"r":"ObjAt:D"},"n":"WHICH"},{"m":1,"k":"m","n":"WHICH","s":{"r":"ValueObjAt:D","p":["*%_"]}},{"n":"Mix","s":{"p":["*%_"],"r":"Mix:D"},"k":"m","m":1},{"k":"m","m":1,"s":{"r":"Mu","p":["*%_"]},"n":"Mix"},{"k":"m","m":1,"s":{"r":"Mu","p":["*%_"]},"n":"Mix"},{"k":"m","m":1,"s":{"r":"MixHash:D","p":["*%_"]},"n":"MixHash"},{"n":"MixHash","s":{"r":"Mu","p":["*%_"]},"k":"m","m":1},{"s":{"p":["*%_"],"r":"Mu"},"n":"MixHash","k":"m","m":1},{"s":{"r":"Mu","p":["*%_"]},"n":"hash","k":"m","m":1},{"s":{"p":["*%_"],"r":"Mu"},"n":"hash","m":1,"k":"m"},{"k":"m","m":1,"s":{"p":["*%_"],"r":"Hash:D"},"n":"hash"},{"m":1,"k":"m","s":{"p":["*%_"],"r":"Hash:D"},"n":"hash"},{"n":"Hash","s":{"r":"Mu","p":["*%_"]},"m":1,"k":"m"},{"n":"Hash","s":{"r":"Hash:D","p":["*%_"]},"k":"m","m":1},{"s":{"r":"Hash:D","p":["*%_"]},"n":"Hash","m":1,"k":"m"},{"m":1,"k":"m","s":{"r":"Set:D","p":["*%_"]},"n":"Set"},{"k":"m","m":1,"n":"Set","s":{"r":"Mu","p":["*%_"]}},{"n":"Set","s":{"r":"Mu","p":["*%_"]},"k":"m","m":1},{"s":{"r":"SetHash:D","p":["*%_"]},"n":"SetHash","k":"m","m":1},{"m":1,"k":"m","s":{"p":["*%_"],"r":"Mu"},"n":"SetHash"},{"n":"SetHash","s":{"r":"Mu","p":["*%_"]},"m":1,"k":"m"},{"k":"m","m":1,"n":"Bag","s":{"p":["*%_"],"r":"Bag:D"}},{"k":"m","m":1,"s":{"r":"Mu","p":["*%_"]},"n":"Bag"},{"n":"BagHash","s":{"p":["*%_"],"r":"BagHash:D"},"m":1,"k":"m"},{"m":1,"k":"m","s":{"p":["*%_"],"r":"Mu"},"n":"BagHash"},{"m":1,"k":"m","n":"ACCEPTS","s":{"p":["\\topic","*%_"],"r":"Mu"}},{"k":"m","m":1,"s":{"r":"Mu","p":["Mu:U \\topic","*%_"]},"n":"ACCEPTS"},{"s":{"r":"Mu","p":["Mu:D \\a","*%_"]},"n":"ACCEPTS","m":1,"k":"m"},{"s":{"p":["Mu:U $","*%_"],"r":"Bool"},"n":"ACCEPTS","k":"m","m":1},{"n":"ACCEPTS","s":{"p":["\\topic","*%_"],"r":"Bool:D"},"m":1,"k":"m"},{"m":1,"k":"m","s":{"p":["\\other","*%_"],"r":"Bool:D"},"n":"ACCEPTS"},{"m":1,"k":"m","n":"ACCEPTS","s":{"p":["Baggy:D \\other","*%_"],"r":"Bool:D"}},{"m":1,"k":"m","s":{"r":"Bool:D","p":["\\other","*%_"]},"n":"ACCEPTS"},{"n":"AT-KEY","s":{"p":["$key","*%_"],"r":"Mu"},"m":1,"k":"m"},{"m":1,"k":"m","n":"AT-KEY","s":{"p":["\\key","*%_"],"r":"Mu"}},{"s":{"p":["\\k","*%_"],"r":"Mu"},"n":"AT-KEY","m":1,"k":"m"},{"m":1,"k":"m","n":"AT-KEY","s":{"r":"Mu","p":["$key","*%_"]}},{"n":"EXISTS-KEY","s":{"p":["$","*%_"],"r":"Bool"},"m":1,"k":"m"},{"k":"m","m":1,"n":"EXISTS-KEY","s":{"r":"Bool","p":["$","*%_"]}},{"m":1,"k":"m","n":"EXISTS-KEY","s":{"r":"Mu","p":["\\k","*%_"]}},{"n":"new","s":{"p":["*%attrinit"],"r":"Mu"},"k":"m","m":1},{"k":"m","m":1,"n":"new","s":{"p":["$","*@","*%_"],"r":"Mu"}},{"s":{"r":"Baggy:D","p":["*%_"]},"n":"new","k":"m","m":1},{"k":"m","m":1,"n":"new","s":{"r":"Baggy:D","p":["\\value","*%_"]}},{"m":1,"k":"m","s":{"p":["**@args","*%_"],"r":"Mu"},"n":"new"},{"s":{"r":"Mu","p":["*%_"]},"n":"iterator","k":"m","m":1},{"n":"iterator","s":{"p":["*%_"],"r":"Mu"},"m":1,"k":"m"},{"k":"m","m":1,"n":"iterator","s":{"r":"Mu","p":["*%_"]}},{"k":"m","m":1,"s":{"p":["*%_"],"r":"Mu"},"n":"keys"},{"m":1,"k":"m","s":{"r":"Mu","p":["*%_"]},"n":"keys"},{"n":"keys","s":{"p":["*%_"],"r":"Mu"},"k":"m","m":1},{"n":"kv","s":{"r":"Mu","p":["*%_"]},"m":1,"k":"m"},{"n":"kv","s":{"p":["*%_"],"r":"Mu"},"m":1,"k":"m"},{"k":"m","m":1,"n":"kv","s":{"p":["*%_"],"r":"Mu"}},{"k":"m","m":1,"s":{"p":["*%_"],"r":"Mu"},"n":"values"},{"s":{"p":["*%_"],"r":"Mu"},"n":"values","m":1,"k":"m"},{"m":1,"k":"m","s":{"p":["*%_"],"r":"Mu"},"n":"values"},{"s":{"r":"Mu","p":["*%_"]},"n":"antipairs","k":"m","m":1},{"n":"antipairs","s":{"p":["*%_"],"r":"Mu"},"m":1,"k":"m"},{"m":1,"k":"m","n":"antipairs","s":{"p":["*%_"],"r":"Mu"}},{"k":"m","m":1,"n":"invert","s":{"p":["*%_"],"r":"Mu"}},{"s":{"r":"Mu","p":["*%_"]},"n":"invert","k":"m","m":1},{"n":"invert","s":{"p":["*%_"],"r":"Mu"},"k":"m","m":1},{"m":1,"k":"m","n":"elems","s":{"r":"Int","p":["*%_"]}},{"n":"elems","s":{"r":"Mu","p":["*%_"]},"k":"m","m":1},{"k":"m","m":1,"n":"elems","s":{"r":"Int:D","p":["*%_"]}},{"s":{"r":"Bool","p":["*%_"]},"n":"Bool","m":1,"k":"m"},{"s":{"r":"Mu","p":["*%_"]},"n":"Bool","k":"m","m":1},{"n":"Bool","s":{"p":["*%_"],"r":"Bool:D"},"m":1,"k":"m"},{"m":1,"k":"m","s":{"r":"Mu","p":["*%_"]},"n":"Str"},{"k":"m","m":1,"n":"Str","s":{"p":["*%_"],"r":"Mu"}},{"m":1,"k":"m","s":{"p":["*%_"],"r":"Str:D"},"n":"Str"},{"s":{"p":["*%_"],"r":"Mu"},"n":"gist","m":1,"k":"m"},{"m":1,"k":"m","n":"gist","s":{"p":["*%_"],"r":"Mu"}},{"n":"gist","s":{"r":"Str:D","p":["*%_"]},"k":"m","m":1},{"n":"perl","s":{"p":["*%_"],"r":"Mu"},"m":1,"k":"m"},{"m":1,"k":"m","s":{"r":"Mu","p":["*%_"]},"n":"perl"},{"k":"m","m":1,"n":"perl","s":{"p":["*%_"],"r":"Str:D"}},{"k":"m","m":1,"s":{"p":["*%_"],"r":"Mu"},"n":"list"},{"s":{"r":"Mu","p":["*%_"]},"n":"list","m":1,"k":"m"},{"n":"list","s":{"p":["*%_"],"r":"Mu"},"m":1,"k":"m"},{"n":"list","s":{"p":["*%_"],"r":"Mu"},"k":"m","m":1},{"s":{"r":"Mu","p":["*%_"]},"n":"pairs","m":1,"k":"m"},{"n":"pairs","s":{"r":"Mu","p":["*%_"]},"k":"m","m":1},{"k":"m","m":1,"n":"pairs","s":{"r":"Mu","p":["*%_"]}},{"m":0,"k":"s","s":{"r":"Mu","p":["@auto","%init","*%_"]},"n":"BUILDALL"},{"s":{"p":["\\type","\\iterator","*%_"],"r":"Baggy:D"},"n":"!create-from-iterator","m":0,"k":"m"},{"n":"!total-positive","s":{"r":"Real:D","p":["*%_"]},"k":"m","m":0},{"m":0,"k":"m","s":{"p":["\\type","*%_"],"r":"Mu"},"n":"!HASHIFY"}],"k":"c","t":"Mix","n":"Mix"},{"k":"c","m":[{"n":"Capture","s":{"r":"Mu","p":["*%_"]},"m":0,"k":"m"},{"s":{"p":["*%_"],"r":"Mu"},"n":"Num","m":0,"k":"m"},{"k":"m","m":0,"n":"Bridge","s":{"p":["*%_"],"r":"Mu"}},{"n":"Range","s":{"r":"Mu","p":["*%_"]},"k":"m","m":0},{"n":"Int","s":{"r":"Mu","p":["*%_"]},"m":0,"k":"m"},{"k":"m","m":0,"s":{"r":"Mu","p":["Real $epsilon = 1e-06",":$fat","*%_"]},"n":"Rat"},{"s":{"p":["Real $epsilon = 1e-06","*%_"],"r":"Mu"},"n":"FatRat","m":0,"k":"m"},{"s":{"p":["*%_"],"r":"Mu"},"n":"succ","k":"m","m":0},{"k":"m","m":0,"s":{"r":"Mu","p":["*%_"]},"n":"pred"},{"k":"m","m":0,"n":"isNaN","s":{"p":["*%_"],"r":"Mu"}},{"s":{"r":"Mu","p":["*%_"]},"n":"abs","k":"m","m":0},{"m":1,"k":"m","s":{"p":["*%_"],"r":"Mu"},"n":"log"},{"k":"m","m":1,"s":{"r":"Mu","p":["Num \\base","*%_"]},"n":"log"},{"n":"log","s":{"p":["*%_"],"r":"Mu"},"k":"m","m":1},{"k":"m","m":1,"n":"log","s":{"p":["Real $base","*%_"],"r":"Mu"}},{"s":{"p":["Cool $base","*%_"],"r":"Mu"},"n":"log","m":1,"k":"m"},{"m":1,"k":"m","s":{"p":["Numeric $base","*%_"],"r":"Mu"},"n":"log"},{"k":"m","m":1,"n":"sqrt","s":{"p":["*%_"],"r":"Mu"}},{"k":"m","m":0,"s":{"r":"Mu","p":["*%_"]},"n":"rand"},{"k":"m","m":0,"n":"ceiling","s":{"p":["*%_"],"r":"Mu"}},{"n":"floor","s":{"p":["*%_"],"r":"Mu"},"k":"m","m":0},{"m":1,"k":"m","n":"sin","s":{"r":"Mu","p":["*%_"]}},{"k":"m","m":1,"n":"asin","s":{"p":["*%_"],"r":"Mu"}},{"n":"cos","s":{"r":"Mu","p":["*%_"]},"k":"m","m":1},{"n":"acos","s":{"p":["*%_"],"r":"Mu"},"m":1,"k":"m"},{"n":"tan","s":{"p":["*%_"],"r":"Mu"},"m":1,"k":"m"},{"m":1,"k":"m","s":{"r":"Mu","p":["*%_"]},"n":"atan"},{"s":{"r":"Mu","p":["*%_"]},"n":"sec","m":1,"k":"m"},{"s":{"r":"Mu","p":["*%_"]},"n":"asec","m":1,"k":"m"},{"s":{"p":["*%_"],"r":"Mu"},"n":"cosec","k":"m","m":0},{"s":{"r":"Mu","p":["*%_"]},"n":"acosec","k":"m","m":0},{"k":"m","m":0,"s":{"p":["*%_"],"r":"Mu"},"n":"cotan"},{"m":0,"k":"m","s":{"p":["*%_"],"r":"Mu"},"n":"acotan"},{"m":1,"k":"m","n":"sinh","s":{"p":["*%_"],"r":"Mu"}},{"n":"asinh","s":{"p":["*%_"],"r":"Mu"},"m":1,"k":"m"},{"n":"cosh","s":{"p":["*%_"],"r":"Mu"},"k":"m","m":1},{"s":{"r":"Mu","p":["*%_"]},"n":"acosh","k":"m","m":1},{"n":"tanh","s":{"r":"Mu","p":["*%_"]},"m":1,"k":"m"},{"k":"m","m":1,"s":{"r":"Mu","p":["*%_"]},"n":"atanh"},{"n":"atanh","s":{"p":["*%_"],"r":"Mu"},"m":1,"k":"m"},{"m":1,"k":"m","n":"sech","s":{"r":"Mu","p":["*%_"]}},{"m":1,"k":"m","s":{"p":["*%_"],"r":"Mu"},"n":"asech"},{"s":{"r":"Mu","p":["*%_"]},"n":"cosech","m":1,"k":"m"},{"n":"acosech","s":{"p":["*%_"],"r":"Mu"},"m":1,"k":"m"},{"m":1,"k":"m","n":"cotanh","s":{"p":["*%_"],"r":"Mu"}},{"s":{"r":"Mu","p":["*%_"]},"n":"acotanh","k":"m","m":1},{"k":"m","m":0,"s":{"r":"Bool:D","p":["*%_"]},"n":"is-prime"},{"k":"m","m":0,"n":"narrow","s":{"p":["*%_"],"r":"Mu"}},{"m":0,"k":"m","n":"sign","s":{"r":"Mu","p":["*%_"]}},{"n":"conj","s":{"p":["*%_"],"r":"Mu"},"m":0,"k":"m"},{"m":1,"k":"m","s":{"p":["Num:D $x = 1e0","*%_"],"r":"Mu"},"n":"atan2"},{"k":"m","m":1,"s":{"r":"Mu","p":["Real $x = 1e0","*%_"]},"n":"atan2"},{"k":"m","m":1,"n":"atan2","s":{"r":"Mu","p":["Cool $x = 1e0","*%_"]}},{"k":"m","m":1,"n":"round","s":{"p":["*%_"],"r":"Mu"}},{"s":{"p":["$scale","*%_"],"r":"Mu"},"n":"round","k":"m","m":1},{"s":{"r":"Mu","p":["Real $angle","*%_"]},"n":"unpolar","k":"m","m":0},{"m":0,"k":"m","s":{"p":["*%_"],"r":"Mu"},"n":"cis"},{"m":0,"k":"m","s":{"p":["*%_"],"r":"Mu"},"n":"Complex"},{"m":1,"k":"m","n":"exp","s":{"r":"Mu","p":["*%_"]}},{"k":"m","m":1,"s":{"r":"Mu","p":["*%_"]},"n":"exp"},{"m":1,"k":"m","s":{"r":"Mu","p":["$base","*%_"]},"n":"exp"},{"k":"m","m":0,"s":{"r":"Mu","p":["*%_"]},"n":"truncate"},{"k":"m","m":0,"s":{"p":["+@mods","*%_"],"r":"Mu"},"n":"polymod"},{"s":{"p":["Int:D $base","$digits? is copy","*%_"],"r":"Mu"},"n":"base","k":"m","m":0},{"n":"log10","s":{"p":["*%_"],"r":"Mu"},"m":0,"k":"m"},{"m":0,"k":"m","s":{"p":["Cool $n","*%_"],"r":"Mu"},"n":"roots"},{"m":1,"k":"m","n":"WHICH","s":{"r":"ValueObjAt:D","p":["*%_"]}},{"m":1,"k":"m","n":"WHICH","s":{"r":"ObjAt:D","p":["*%_"]}},{"m":1,"k":"m","n":"WHICH","s":{"p":["*%_"],"r":"ValueObjAt:D"}},{"n":"Bool","s":{"r":"Bool","p":["*%_"]},"m":1,"k":"m"},{"n":"Bool","s":{"p":["*%_"],"r":"Mu"},"m":1,"k":"m"},{"s":{"r":"Mu","p":["*%_"]},"n":"Bool","m":1,"k":"m"},{"m":1,"k":"m","n":"Bool","s":{"p":["*%_"],"r":"Mu"}},{"k":"m","m":1,"s":{"p":["*%attrinit"],"r":"Mu"},"n":"new"},{"n":"new","s":{"r":"Mu","p":["$","*@","*%_"]},"m":1,"k":"m"},{"k":"m","m":1,"n":"new","s":{"p":["*%_"],"r":"Mu"}},{"k":"m","m":1,"n":"new","s":{"p":["$n","*%_"],"r":"Mu"}},{"s":{"p":["*%_"],"r":"Mu"},"n":"perl","k":"m","m":1},{"k":"m","m":1,"s":{"p":["*%_"],"r":"Mu"},"n":"perl"},{"s":{"r":"Mu","p":["*%_"]},"n":"perl","k":"m","m":1},{"n":"Str","s":{"p":["*%_"],"r":"Mu"},"m":1,"k":"m"},{"k":"m","m":1,"s":{"r":"Mu","p":["*%_"]},"n":"Str"},{"s":{"p":["*%_"],"r":"Mu"},"n":"Str","m":1,"k":"m"},{"s":{"r":"Mu","p":["*%_"]},"n":"Str","m":1,"k":"m"},{"n":"Real","s":{"r":"Mu","p":["*%_"]},"k":"m","m":1},{"m":1,"k":"m","n":"Real","s":{"r":"Mu","p":["*%_"]}},{"s":{"p":["*%_"],"r":"Mu"},"n":"Real","k":"m","m":1},{"s":{"p":["*%_"],"r":"Mu"},"n":"Real","k":"m","m":1},{"m":1,"k":"m","s":{"p":["*%_"],"r":"Mu"},"n":"Numeric"},{"k":"m","m":1,"s":{"r":"Mu","p":["*%_"]},"n":"Numeric"},{"n":"Numeric","s":{"p":["*%_"],"r":"Mu"},"k":"m","m":1},{"s":{"p":["\\topic","*%_"],"r":"Mu"},"n":"ACCEPTS","m":1,"k":"m"},{"n":"ACCEPTS","s":{"p":["Mu:U \\topic","*%_"],"r":"Mu"},"k":"m","m":1},{"m":1,"k":"m","n":"ACCEPTS","s":{"p":["Mu:D \\a","*%_"],"r":"Mu"}},{"s":{"p":["Mu:U $","*%_"],"r":"Bool"},"n":"ACCEPTS","k":"m","m":1},{"n":"ACCEPTS","s":{"r":"Bool:D","p":["\\topic","*%_"]},"k":"m","m":1},{"s":{"p":["Any:D \\a","*%_"],"r":"Mu"},"n":"ACCEPTS","m":1,"k":"m"},{"k":"m","m":1,"s":{"r":"Mu","p":["*%_"]},"n":"gist"},{"m":1,"k":"m","n":"gist","s":{"p":["*%_"],"r":"Mu"}},{"m":1,"k":"m","s":{"r":"Mu","p":["*%_"]},"n":"gist"},{"s":{"p":["*%_"],"r":"Mu"},"n":"DUMP","k":"m","m":1},{"m":1,"k":"m","n":"DUMP","s":{"p":[":$indent-step = 4",":%ctx","*%_"],"r":"Mu"}},{"n":"DUMP","s":{"p":["*%_"],"r":"Mu"},"m":1,"k":"m"},{"n":"BUILDALL","s":{"p":["@auto","%init","*%_"],"r":"Mu"},"k":"s","m":0}],"b":"C","t":"Num","n":"pi"},{"k":"v","t":"Sub+{is-pure}","n":"&infix:«>=»"},{"n":"infix:«>=»","s":{"p":["$?"],"r":"Mu"},"m":1,"k":"s"},{"m":1,"k":"s","n":"infix:«>=»","s":{"r":"Mu","p":["\\a","\\b"]}},{"k":"s","m":1,"n":"infix:«>=»","s":{"p":["Real \\a","Real \\b"],"r":"Mu"}},{"m":1,"k":"s","n":"infix:«>=»","s":{"p":["Int:D \\a","Int:D \\b"],"r":"Bool:D"}},{"m":1,"k":"s","s":{"r":"Bool:D","p":["int $a","int $b"]},"n":"infix:«>=»"},{"n":"infix:«>=»","s":{"r":"Bool:D","p":["Num:D \\a","Num:D \\b"]},"k":"s","m":1},{"k":"s","m":1,"s":{"r":"Bool:D","p":["num $a","num $b"]},"n":"infix:«>=»"},{"n":"infix:«>=»","s":{"r":"Bool:D","p":["Rational:D \\a","Rational:D \\b"]},"m":1,"k":"s"},{"k":"s","m":1,"s":{"p":["Rational:D \\a","Int:D \\b"],"r":"Bool:D"},"n":"infix:«>=»"},{"s":{"p":["Int:D \\a","Rational:D \\b"],"r":"Bool:D"},"n":"infix:«>=»","k":"s","m":1},{"n":"infix:«>=»","s":{"r":"Bool:D","p":["Instant:D $a","Instant:D $b"]},"k":"s","m":1},{"n":"infix:«>=»","s":{"p":["DateTime:D \\a","DateTime:D \\b"],"r":"Bool:D"},"m":1,"k":"s"},{"s":{"p":["Date:D $a","Date:D $b"],"r":"Bool:D"},"n":"infix:«>=»","m":1,"k":"s"},{"m":1,"k":"s","s":{"r":"Mu","p":["Version:D \\a","Version:D \\b"]},"n":"infix:«>=»"},{"k":"n","t":"atomicint","n":"atomicint"},{"t":"Sub","n":"&trim","k":"v"},{"s":{"p":["Cool:D $s"],"r":"Str:D"},"n":"trim","k":"s","m":1},{"k":"v","n":"&prefix:<⚛>","t":"Sub"},{"m":1,"k":"s","n":"prefix:<⚛>","s":{"r":"Mu","p":["$source is rw"]}},{"k":"s","m":1,"n":"prefix:<⚛>","s":{"p":["atomicint $source is rw"],"r":"Mu"}},{"n":"NumericEnumeration","t":"NumericEnumeration","b":"C","k":"ro"},{"k":"n","t":"uint64","n":"uint64"},{"k":"n","t":"uint","n":"uint"},{"t":"FileChangeEvent","n":"FileChanged","k":"e"},{"n":"&atomic-sub-fetch","t":"Sub","k":"v"},{"k":"s","m":1,"s":{"r":"atomicint","p":["atomicint $target is rw","int $add"]},"n":"atomic-sub-fetch"},{"s":{"r":"atomicint","p":["atomicint $target is rw","Int:D $add"]},"n":"atomic-sub-fetch","k":"s","m":1},{"m":1,"k":"s","n":"atomic-sub-fetch","s":{"r":"atomicint","p":["atomicint $target is rw","$add"]}},{"t":"Sub+{Precedence}","n":"&infix:<...>","k":"v"},{"s":{"r":"Mu","p":["\\a","Mu \\b"]},"n":"infix:<...>","k":"s","m":1},{"s":{"r":"Mu","p":["|lol is raw"]},"n":"infix:<...>","m":1,"k":"s"},{"d":"TITLE\nclass Parameter\n\nSUBTITLE\nElement of a Signature\n\n    class Parameter { }\n\nRepresents a parameter, for purpose of introspection.\n\nThe usual way to obtain a Parameter object is to create a signature, and\ncall .params on it to obtain a list of the Parameters.\n\n    my $sig   = :(Str $x);\n    my $param = $sig.params[0];\n    say $param.type;              # OUTPUT: «Str()␤»\n\nSee Signature for more information, and also for an explanation on what\nmost of the concepts related to parameters mean.\n\n","b":"A","a":[{"k":"v","n":"$!variable_name","t":"str"},{"n":"@!named_names","t":"Mu","k":"v"},{"k":"v","n":"@!type_captures","t":"Mu"},{"n":"$!flags","t":"int","k":"v"},{"k":"v","n":"$!nominal_type","t":"Mu"},{"t":"List","n":"@!post_constraints","k":"v"},{"n":"$!coerce_type","t":"Mu","k":"v"},{"t":"str","n":"$!coerce_method","k":"v"},{"n":"$!sub_signature","t":"Signature","k":"v"},{"n":"$!default_value","t":"Code","k":"v"},{"n":"$!container_descriptor","t":"Mu","k":"v"},{"t":"Mu","n":"$!attr_package","k":"v"},{"t":"Mu","n":"$!why","k":"v"}],"k":"c","m":[{"m":0,"k":"s","n":"BUILD","s":{"r":"Mu","p":["Str:D $name is copy = \"\"","Int:D $flags is copy = 0","Bool:D $named is copy = Bool::False","Bool:D $optional is copy = Bool::False","Bool:D $mandatory is copy = Bool::False","Bool:D $is-copy = Bool::False","Bool:D $is-raw = Bool::False","Bool:D $is-rw = Bool::False","Bool:D $multi-invocant = Bool::True","*%args"]}},{"m":0,"k":"m","n":"name","s":{"r":"Mu","p":["*%_"]}},{"n":"usage-name","s":{"r":"Mu","p":["*%_"]},"m":0,"k":"m"},{"n":"sigil","s":{"p":["*%_"],"r":"Mu"},"k":"m","m":0},{"n":"twigil","s":{"r":"Mu","p":["*%_"]},"k":"m","m":0},{"m":0,"k":"m","s":{"p":["*%_"],"r":"Mu"},"n":"modifier"},{"m":0,"k":"m","n":"constraint_list","s":{"p":["*%_"],"r":"Mu"}},{"m":0,"k":"m","n":"constraints","s":{"p":["*%_"],"r":"Mu"}},{"k":"m","m":0,"n":"type","s":{"p":["*%_"],"r":"Mu"}},{"m":0,"k":"m","s":{"p":["*%_"],"r":"Mu"},"n":"coerce_type"},{"k":"m","m":0,"n":"named_names","s":{"p":["*%_"],"r":"Mu"}},{"n":"named","s":{"p":["*%_"],"r":"Mu"},"k":"m","m":0},{"s":{"r":"Mu","p":["*%_"]},"n":"positional","k":"m","m":0},{"s":{"r":"Mu","p":["*%_"]},"n":"slurpy","m":0,"k":"m"},{"n":"optional","s":{"r":"Mu","p":["*%_"]},"k":"m","m":0},{"m":0,"k":"m","n":"raw","s":{"r":"Mu","p":["*%_"]}},{"m":0,"k":"m","n":"capture","s":{"p":["*%_"],"r":"Mu"}},{"m":0,"k":"m","n":"rw","s":{"p":["*%_"],"r":"Mu"}},{"m":0,"k":"m","s":{"p":["*%_"],"r":"Mu"},"n":"onearg"},{"m":0,"k":"m","s":{"r":"Mu","p":["*%_"]},"n":"copy"},{"k":"m","m":0,"s":{"r":"Mu","p":["*%_"]},"n":"readonly"},{"k":"m","m":0,"n":"invocant","s":{"p":["*%_"],"r":"Mu"}},{"n":"multi-invocant","s":{"r":"Mu","p":["*%_"]},"m":0,"k":"m"},{"m":0,"k":"m","s":{"r":"Mu","p":["*%_"]},"n":"default"},{"s":{"p":["*%_"],"r":"Mu"},"n":"type_captures","k":"m","m":0},{"n":"sub_signature","s":{"p":["*%_"],"r":"Mu"},"m":0,"k":"m"},{"k":"m","m":0,"s":{"p":["$why","*%_"],"r":"Nil"},"n":"set_why"},{"m":0,"k":"m","n":"set_default","s":{"r":"Nil","p":["Code:D $default","*%_"]}},{"n":"ACCEPTS","s":{"p":["\\topic","*%_"],"r":"Mu"},"m":1,"k":"m"},{"s":{"r":"Mu","p":["Mu:U \\topic","*%_"]},"n":"ACCEPTS","m":1,"k":"m"},{"s":{"p":["Mu:D \\a","*%_"],"r":"Mu"},"n":"ACCEPTS","m":1,"k":"m"},{"s":{"p":["Mu:U $","*%_"],"r":"Bool"},"n":"ACCEPTS","k":"m","m":1},{"s":{"p":["\\topic","*%_"],"r":"Bool:D"},"n":"ACCEPTS","k":"m","m":1},{"n":"ACCEPTS","s":{"r":"Mu","p":["Parameter:D \\other","*%_"]},"k":"m","m":1},{"n":"perl","s":{"r":"Mu","p":["*%_"]},"k":"m","m":1},{"m":1,"k":"m","s":{"r":"Mu","p":["*%_"]},"n":"perl"},{"m":1,"k":"m","n":"perl","s":{"p":["Mu:U :$elide-type = Any","*%_"],"r":"Mu"}},{"k":"s","m":0,"s":{"r":"Mu","p":["@auto","%init","*%_"]},"n":"BUILDALL"},{"k":"m","m":0,"s":{"p":["*%_"],"r":"Mu"},"n":"!flags"}],"t":"Parameter","n":"Parameter"},{"t":"Attribute","n":"Attribute","d":"TITLE\nclass Attribute\n\nSUBTITLE\nMember variable\n\n    class Attribute { }\n\nIn Raku lingo, an attribute refers to a per-instance/object storage slot.\nAn Attribute is used to talk about classes' and roles' attributes at the\nmetalevel.\n\nNormal usage of attributes does not require the user to use this class\nexplicitly.\n\nTraits\n\n  Trait is default\n\nAn attribute that is assigned Nil will revert to its default value set with\nthe trait is default. In the case of arrays or associatives, the argument\nof is default will set the default item value or hash value.\n\n    class C {\n        has $.a is default(42) is rw = 666\n    }\n    my $c = C.new;\n    say $c;\n    $c.a = Nil;\n    say $c;\n    # OUTPUT: «C.new(a => 666)␤C.new(a => 42)␤»\n    class Foo {\n        has @.bar is default(42) is rw\n    };\n    my $foo = Foo.new( bar => <a b c> );\n    $foo.bar =Nil;\n    say $foo; # OUTPUT: «Foo.new(bar => [42])␤»\n\n  Trait is required\n\nDefined as:\n\n    multi sub trait_mod:<is> (Attribute $attr, :$required!)\n\nThe trait is required will mark the attribute as to be filled with a value\nwhen the object is instantiated. Failing to do so will result in a runtime\nerror.\n\n    class C {\n        has $.a is required\n    }\n    my $c = C.new;\n    CATCH{ default { say .^name, ': ', .Str } }\n    # OUTPUT: «X::Attribute::Required: The attribute '$!a' is required, but you did not provide a value for it.␤»\n\nAvailable as of 6.d language version (early implementation exists in Rakudo\ncompiler 2018.08+): You can specify a reason why the attribute is\nrequired:\n\n    class D {\n        has $.a is required(\"it is a good idea\");\n    }\n    my $d = D.new;\n    CATCH{ default { say .^name, ': ', .Str } }\n    # OUTPUT: «X::Attribute::Required: The attribute '$!a' is required because it is a good idea,␤but you did not provide a value for it.␤»\n\n\nis required doesn't just affect the default constructor, it checks for the\nattribute at a lower level, so it will work for custom constructors written\nusing bless.\n\n  trait is DEPRECATED\n\n    multi sub trait_mod:<is>(Attribute:D $r, :$DEPRECATED!)\n\nMarks an attribute as deprecated, optionally with a message what to use\ninstead.\n\n    class C {\n        has $.foo is DEPRECATED(\"'bar'\");\n    }\n    my $c = C.new( foo => 42 );  # doesn't trigger with initialization (yet)\n    say $c.foo;                  # does trigger on usage\n\nAfter the program is finished, this will show something like this on\nSTDERR:\n\n    # Saw 1 occurrence of deprecated code.\n    # =====================================\n    # Method foo (from C) seen at:\n    # script.p6, line 5\n    # Please use 'bar' instead.\n\n  trait is rw\n\nDefined as:\n\n    multi sub trait_mod:<is> (Attribute:D $attr, :$rw!)\n\nMarks an attribute as read/write as opposed to the default readonly. The\ndefault accessor for the attribute will return a writable value.\n\n    class Boo {\n       has $.bar is rw;\n       has $.baz;\n    };\n\n    my $boo = Boo.new;\n    $boo.bar = 42; # works\n    $boo.baz = 42;\n    CATCH { default { put .^name, ': ', .Str } };\n    # OUTPUT: «X::Assignment::RO: Cannot modify an immutable Any␤»\n\n","k":"c","m":[{"m":0,"k":"m","n":"compose","s":{"r":"Mu","p":["Mu $package",":$compiler_services","*%_"]}},{"n":"apply_handles","s":{"p":["Mu $pkg","*%_"],"r":"Mu"},"k":"m","m":0},{"n":"get_value","s":{"p":["Mu $obj","*%_"],"r":"Mu"},"k":"m","m":0},{"k":"m","m":0,"n":"set_value","s":{"p":["Mu $obj","Mu \\value","*%_"],"r":"Mu"}},{"n":"container","s":{"r":"Mu","p":["*%_"]},"k":"m","m":0},{"m":0,"k":"m","s":{"p":["*%_"],"r":"Mu"},"n":"readonly"},{"m":0,"k":"m","n":"package","s":{"r":"Mu","p":["*%_"]}},{"s":{"p":["*%_"],"r":"Mu"},"n":"inlined","k":"m","m":0},{"m":0,"k":"m","n":"dimensions","s":{"r":"Mu","p":["*%_"]}},{"n":"WHY","s":{"p":["*%_"],"r":"Mu"},"k":"m","m":0},{"k":"m","m":0,"n":"set_why","s":{"r":"Mu","p":["$why","*%_"]}},{"k":"m","m":1,"n":"Str","s":{"r":"Mu","p":["*%_"]}},{"s":{"r":"Mu","p":["*%_"]},"n":"Str","k":"m","m":1},{"k":"m","m":1,"s":{"r":"Mu","p":["*%_"]},"n":"Str"},{"k":"m","m":1,"s":{"r":"Mu","p":["*%_"]},"n":"gist"},{"m":1,"k":"m","s":{"p":["*%_"],"r":"Mu"},"n":"gist"},{"s":{"r":"Mu","p":["*%_"]},"n":"gist","m":1,"k":"m"}],"b":"A"},{"a":[{"k":"v","t":"List","n":"@!list"},{"n":"%!hash","t":"Hash","k":"v"}],"b":"C","m":[{"m":0,"k":"m","n":"ast","s":{"r":"Mu","p":["*%_"]}},{"m":0,"k":"m","s":{"r":"Mu","p":["*%_"]},"n":"made"},{"n":"STR","s":{"p":["*%_"],"r":"Mu"},"m":0,"k":"m"},{"k":"m","m":0,"s":{"p":["*%_"],"r":"Mu"},"n":"MATCH"},{"k":"m","m":0,"n":"CURSOR_NEXT","s":{"r":"Mu","p":["*%_"]}},{"n":"CURSOR_OVERLAP","s":{"p":["*%_"],"r":"Mu"},"k":"m","m":0},{"m":0,"k":"m","s":{"p":["*%_"],"r":"Mu"},"n":"CURSOR_MORE"},{"n":"INTERPOLATE","s":{"p":["Callable:D \\var","$","$","$","$","$","*%_"],"r":"Mu"},"k":"m","m":1},{"k":"m","m":1,"s":{"p":["Iterable:D \\var","int \\im","int \\monkey","int \\s","$","\\context","*%_"],"r":"Mu"},"n":"INTERPOLATE"},{"s":{"r":"Mu","p":["Associative:D \\var","int \\im","$","$","$","\\context","*%_"]},"n":"INTERPOLATE","m":1,"k":"m"},{"k":"m","m":1,"s":{"r":"Mu","p":["Regex:D \\var","int \\im","int \\monkey","$","$","$","*%_"]},"n":"INTERPOLATE"},{"k":"m","m":1,"n":"INTERPOLATE","s":{"r":"Mu","p":["Mu:D \\var","int \\im","int \\monkey","$","$","\\context","*%_"]}},{"n":"INTERPOLATE","s":{"r":"Mu","p":["Mu:U \\var","$","$","$","$","$","*%_"]},"m":1,"k":"m"},{"m":1,"k":"m","s":{"r":"Mu","p":["Associative:D $","$","$","$","$","$","*%_"]},"n":"INTERPOLATE_ASSERTION"},{"n":"INTERPOLATE_ASSERTION","s":{"p":["Iterable:D \\var","int \\im","int \\monkey","int \\s","$","\\context","*%_"],"r":"Mu"},"k":"m","m":1},{"k":"m","m":1,"s":{"r":"Mu","p":["Mu:D \\var","int \\im","int \\monkey","$","$","\\context","*%_"]},"n":"INTERPOLATE_ASSERTION"},{"s":{"r":"Mu","p":["$rule","|c is raw"]},"n":"CALL_SUBRULE","k":"m","m":0},{"n":"DYNQUANT_LIMITS","s":{"p":["$mm","*%_"],"r":"Mu"},"m":0,"k":"m"},{"k":"m","m":0,"s":{"p":["$grammar","$name","|"],"r":"Mu"},"n":"OTHERGRAMMAR"},{"k":"m","m":0,"n":"INDMETHOD","s":{"p":["$name","|c is raw"],"r":"Mu"}},{"s":{"p":["$rule","|c is raw"],"r":"Mu"},"n":"INDRULE","m":0,"k":"m"},{"n":"RECURSE","s":{"p":["*%_"],"r":"Mu"},"m":0,"k":"m"},{"m":0,"k":"s","n":"BUILD","s":{"p":[":$orig = \"\"",":$from = 0",":to(:$pos)",":ast(:$made)",":$shared",":$braid",":$list",":$hash","*%_"],"r":"Mu"}},{"n":"clone","s":{"p":["*%_"],"r":"Mu"},"k":"m","m":0},{"k":"m","m":1,"s":{"r":"Bool","p":["*%_"]},"n":"Bool"},{"n":"Bool","s":{"p":["*%_"],"r":"Mu"},"m":1,"k":"m"},{"n":"prematch","s":{"r":"Mu","p":["*%_"]},"k":"m","m":0},{"s":{"r":"Mu","p":["*%_"]},"n":"postmatch","m":0,"k":"m"},{"s":{"r":"Mu","p":["*%_"]},"n":"caps","k":"m","m":0},{"m":0,"k":"m","s":{"r":"Mu","p":["*%_"]},"n":"chunks"},{"m":1,"k":"m","n":"WHICH","s":{"p":["*%_"],"r":"ValueObjAt:D"}},{"k":"m","m":1,"s":{"r":"ObjAt:D","p":["*%_"]},"n":"WHICH"},{"k":"m","m":1,"s":{"p":["*%_"],"r":"ValueObjAt:D"},"n":"WHICH"},{"k":"m","m":1,"n":"WHICH","s":{"r":"ObjAt:D","p":["*%_"]}},{"s":{"r":"Mu","p":["*%_"]},"n":"Numeric","m":1,"k":"m"},{"s":{"p":["*%_"],"r":"Mu"},"n":"Numeric","k":"m","m":1},{"k":"m","m":1,"n":"Numeric","s":{"r":"Mu","p":["*%_"]}},{"k":"m","m":1,"n":"ACCEPTS","s":{"r":"Mu","p":["\\topic","*%_"]}},{"k":"m","m":1,"s":{"p":["Mu:U \\topic","*%_"],"r":"Mu"},"n":"ACCEPTS"},{"n":"ACCEPTS","s":{"p":["Mu:D \\a","*%_"],"r":"Mu"},"m":1,"k":"m"},{"s":{"r":"Bool","p":["Mu:U $","*%_"]},"n":"ACCEPTS","m":1,"k":"m"},{"k":"m","m":1,"n":"ACCEPTS","s":{"r":"Bool:D","p":["\\topic","*%_"]}},{"m":1,"k":"m","n":"ACCEPTS","s":{"p":["$","*%_"],"r":"Mu"}},{"n":"perl","s":{"p":["*%_"],"r":"Mu"},"k":"m","m":1},{"m":1,"k":"m","n":"perl","s":{"r":"Mu","p":["*%_"]}},{"s":{"p":["*%_"],"r":"Mu"},"n":"perl","m":1,"k":"m"},{"m":1,"k":"m","s":{"r":"Mu","p":["*%_"]},"n":"perl"},{"s":{"p":["*%_"],"r":"Mu"},"n":"gist","k":"m","m":1},{"k":"m","m":1,"s":{"p":["*%_"],"r":"Mu"},"n":"gist"},{"k":"m","m":1,"s":{"r":"Mu","p":["*%_"]},"n":"gist"},{"m":1,"k":"m","n":"gist","s":{"p":["$d = 0","*%_"],"r":"Mu"}},{"m":0,"k":"s","s":{"p":["@auto","%init","*%_"],"r":"Mu"},"n":"BUILDALL"},{"k":"m","m":0,"n":"list","s":{"r":"Mu","p":["*%_"]}},{"k":"m","m":1,"n":"EXISTS-KEY","s":{"p":["$","*%_"],"r":"Bool"}},{"m":1,"k":"m","n":"EXISTS-KEY","s":{"p":["$","*%_"],"r":"Bool"}},{"m":1,"k":"m","s":{"r":"Mu","p":["Str:D \\key","*%_"]},"n":"EXISTS-KEY"},{"n":"EXISTS-KEY","s":{"p":["\\key","*%_"],"r":"Mu"},"k":"m","m":1},{"n":"AT-KEY","s":{"r":"Mu","p":["$key","*%_"]},"m":1,"k":"m"},{"m":1,"k":"m","n":"AT-KEY","s":{"p":["\\key","*%_"],"r":"Mu"}},{"m":1,"k":"m","s":{"p":["Str:D \\key","*%_"],"r":"Mu"},"n":"AT-KEY"},{"s":{"p":["\\key","*%_"],"r":"Mu"},"n":"AT-KEY","k":"m","m":1},{"m":1,"k":"m","s":{"p":["*%_"],"r":"Mu"},"n":"perl"},{"s":{"r":"Mu","p":["*%_"]},"n":"perl","k":"m","m":1},{"k":"m","m":1,"s":{"p":["*%_"],"r":"Mu"},"n":"perl"},{"m":1,"k":"m","s":{"p":["*%_"],"r":"Mu"},"n":"Numeric"},{"m":1,"k":"m","n":"Numeric","s":{"r":"Mu","p":["*%_"]}},{"m":0,"k":"m","n":"FLATTENABLE_HASH","s":{"r":"Mu","p":["*%_"]}},{"m":1,"k":"m","s":{"r":"Mu","p":["*%_"]},"n":"antipairs"},{"k":"m","m":1,"s":{"r":"Mu","p":["*%_"]},"n":"antipairs"},{"n":"antipairs","s":{"p":["*%_"],"r":"Mu"},"m":1,"k":"m"},{"m":0,"k":"m","n":"Capture","s":{"p":["*%_"],"r":"Mu"}},{"n":"hash","s":{"r":"Mu","p":["*%_"]},"m":0,"k":"m"},{"m":1,"k":"m","s":{"r":"Mu","p":["*%_"]},"n":"Str"},{"m":1,"k":"m","n":"Str","s":{"r":"Mu","p":["*%_"]}},{"m":1,"k":"m","n":"Str","s":{"p":["*%_"],"r":"Mu"}},{"n":"WHICH","s":{"r":"ValueObjAt:D","p":["*%_"]},"k":"m","m":1},{"k":"m","m":1,"n":"WHICH","s":{"r":"ObjAt:D","p":["*%_"]}},{"n":"WHICH","s":{"r":"ValueObjAt:D","p":["*%_"]},"k":"m","m":1},{"s":{"r":"Mu","p":["*%_"]},"n":"values","m":1,"k":"m"},{"m":1,"k":"m","s":{"r":"Mu","p":["*%_"]},"n":"values"},{"s":{"r":"Mu","p":["*%_"]},"n":"values","m":1,"k":"m"},{"k":"m","m":1,"s":{"p":["*%_"],"r":"Mu"},"n":"pairs"},{"s":{"r":"Mu","p":["*%_"]},"n":"pairs","k":"m","m":1},{"s":{"p":["*%_"],"r":"Mu"},"n":"pairs","k":"m","m":1},{"s":{"p":["*%_"],"r":"Mu"},"n":"FLATTENABLE_LIST","k":"m","m":0},{"n":"kv","s":{"r":"Mu","p":["*%_"]},"k":"m","m":1},{"n":"kv","s":{"p":["*%_"],"r":"Mu"},"m":1,"k":"m"},{"n":"kv","s":{"r":"Mu","p":["*%_"]},"k":"m","m":1},{"s":{"r":"Mu","p":["|c is raw"]},"n":"from-args","m":0,"k":"m"},{"m":1,"k":"m","n":"AT-POS","s":{"p":["int \\pos","*%_"],"r":"Mu"}},{"m":1,"k":"m","s":{"r":"Mu","p":["Int:D \\pos","*%_"]},"n":"AT-POS"},{"m":1,"k":"m","n":"AT-POS","s":{"r":"Mu","p":["Num:D \\pos","*%_"]}},{"k":"m","m":1,"n":"AT-POS","s":{"p":["Any:D \\pos","*%_"],"r":"Mu"}},{"m":1,"k":"m","s":{"r":"Mu","p":["int \\pos","*%_"]},"n":"AT-POS"},{"k":"m","m":1,"n":"AT-POS","s":{"p":["Int:D \\pos","*%_"],"r":"Mu"}},{"s":{"p":["Num:D \\pos","*%_"],"r":"Mu"},"n":"AT-POS","k":"m","m":1},{"n":"AT-POS","s":{"p":["Any:D \\pos","*%_"],"r":"Mu"},"m":1,"k":"m"},{"s":{"r":"Mu","p":["Any:U \\pos","*%_"]},"n":"AT-POS","m":1,"k":"m"},{"m":1,"k":"m","n":"AT-POS","s":{"p":["\\one","\\two","*%_"],"r":"Mu"}},{"m":1,"k":"m","n":"AT-POS","s":{"r":"Mu","p":["\\one","\\two","\\three","*%_"]}},{"n":"AT-POS","s":{"p":["**@indices","*%_"],"r":"Mu"},"k":"m","m":1},{"k":"m","m":1,"n":"AT-POS","s":{"p":["int \\pos","*%_"],"r":"Mu"}},{"s":{"r":"Mu","p":["Int:D \\pos","*%_"]},"n":"AT-POS","k":"m","m":1},{"k":"m","m":1,"n":"keys","s":{"r":"Mu","p":["*%_"]}},{"s":{"p":["*%_"],"r":"Mu"},"n":"keys","k":"m","m":1},{"s":{"r":"Mu","p":["*%_"]},"n":"keys","m":1,"k":"m"},{"s":{"p":["*%_"],"r":"Mu"},"n":"gist","m":1,"k":"m"},{"k":"m","m":1,"n":"gist","s":{"p":["*%_"],"r":"Mu"}},{"s":{"p":["*%_"],"r":"Mu"},"n":"gist","m":1,"k":"m"},{"m":0,"k":"m","s":{"r":"Mu","p":["*%_"]},"n":"elems"},{"m":1,"k":"m","n":"Bool","s":{"p":["*%_"],"r":"Bool"}},{"m":1,"k":"m","s":{"p":["*%_"],"r":"Mu"},"n":"Bool"},{"s":{"p":["*%_"],"r":"Mu"},"n":"Bool","m":1,"k":"m"},{"s":{"r":"Mu","p":["@auto","%init","*%_"]},"n":"BUILDALL","k":"s","m":0},{"k":"s","m":0,"n":"BUILD","s":{"r":"Nil","p":[":@list",":%hash","*%_"]}},{"k":"m","m":0,"n":"!MATCH","s":{"p":["*%_"],"r":"Mu"}},{"m":0,"k":"m","n":"!MATCH-CAPTURES","s":{"p":["*%_"],"r":"Mu"}},{"m":0,"k":"m","n":"!MATCH-EMPTY","s":{"r":"Mu","p":["*%_"]}},{"m":0,"k":"m","s":{"p":["*%_"],"r":"Mu"},"n":"!MATCH-PASS"}],"k":"c","d":"TITLE\nclass Match\n\nSUBTITLE\nResult of a successful regex match\n\n    class Match is Capture is Cool does NQPMatchRole {}\n\nMatch objects are the result of a successful regex match, this does include\nany zero-width match. They store a reference to the original string\n(.orig), positional and named captures, the positions of the start and end\nof the match in the original string, and a payload referred to as AST\n(abstract syntax tree), which can be used to build data structures from\ncomplex regexes and grammars.\n\nThe last match is also stored in the $¢ Match object, which is lexically\nscoped to the regex, that is, only available from within the regular\nexpression, as shown here:\n\n    my $c;\n    'abc' ~~ /.$${ $c = $¢ }/;\n    say $c; # OUTPUT: «｢c｣␤»\n\nIn this case, we are running the code among curly braces when the match\noccurs, in this case the last letter in the string (actually, the last,\nindicated by the double $, character); $c gets the value of the cursor $¢,\nwhich contains the Match; when used with say, the Match is stringified by\ncalling .Str on it. This $¢ offers a way of capturing the Match inside a\nregular expression; outside, you need to use $/\n\n    my $c; 'camelia' ~~ /<[ l m ]> {$c = $¢}/;\n    say $c; # OUTPUT: «｢m｣␤»\n    say $/; # OUTPUT: «｢m｣␤»\n\nNote: This feature works only from Raku version 2018.02. It would have\nreturned Nil with any previous version. Alternatively and prior to that\nversion, you could use $/ which, inside the regex, has the same value:\n\n    '123' ~~ / (\\d) { say $0; say $/; } \\d+ /; # OUTPUT: «｢1｣␤｢1｣␤ 0 => ｢1｣␤»\n\nThe main difference between $/ and $¢ is scope: the latter only has a value\ninside the regex:\n\n    '123' ~~ / (\\d) { say $/; say $¢; } \\d+ /; # OUTPUT: «｢1｣␤ 0 => ｢1｣␤｢1｣␤ 0 => ｢1｣␤»\n    say \"¢ → \", $¢, \"/ is $/\"; ; # OUTPUT: «¢ → Nil/ is 123␤»\n\n\nSubmatches are also Match objects (or lists of Match objects, if the\ncorresponding regex was quantified), so each match object can be seen as\nthe root of a tree of match objects.\n\nA Match object can also hold the result of a match in progress (while the\ngrammar engine is running), in which case the pos method returns the\ncurrent position. This view on Match objects is only visible if you call\ncode from within a regex.\n\nNote (deprecated): There is a synonym for this class, Cursor, defined as:\n\n    my constant Cursor = Match\n\nInitially, it was used to keep track of initial position in regex matches.\nIn current versions, it's an alias for Match.\n\n","n":"Match","t":"Match"},{"b":"C","k":"ro","m":[{"k":"m","m":0,"s":{"p":["Awaitable:D $a","*%_"],"r":"Mu"},"n":"await"},{"k":"m","m":0,"n":"await-all","s":{"p":["Iterable:D $i","*%_"],"r":"Mu"}}],"n":"Awaiter","t":"Awaiter"},{"b":"A","k":"c","m":[{"s":{"p":["Awaitable:D $a","*%_"],"r":"Mu"},"n":"await","m":0,"k":"m"},{"s":{"r":"Mu","p":["Iterable:D \\i","*%_"]},"n":"await-all","m":0,"k":"m"},{"s":{"p":["@auto","%init","*%_"],"r":"Mu"},"n":"BUILDALL","k":"s","m":0}],"n":"Awaiter::Blocking","t":"Awaiter::Blocking"},{"k":"v","t":"Sub+{is-pure}+{Precedence}","n":"&infix:<leg>"},{"n":"infix:<leg>","s":{"r":"Mu","p":["\\a","\\b"]},"m":1,"k":"s"},{"s":{"r":"Order:D","p":["Str:D \\a","Str:D \\b"]},"n":"infix:<leg>","m":1,"k":"s"},{"m":1,"k":"s","s":{"r":"Order:D","p":["str $a","str $b"]},"n":"infix:<leg>"},{"k":"v","t":"Sub","n":"&append"},{"m":1,"k":"s","s":{"p":["\\a","|elems is raw"],"r":"Mu"},"n":"append"},{"t":"Sub+{Callable[Bool:D]}+{is-pure}+{Precedence}","n":"&infix:<∈>","k":"v"},{"k":"s","m":1,"n":"infix:<(elem)>","s":{"p":["Str:D \\a","Map:D \\b"],"r":"Bool:D"}},{"k":"s","m":1,"n":"infix:<(elem)>","s":{"r":"Bool:D","p":["\\a","Map:D \\b"]}},{"s":{"p":["Int:D \\a","Range:D \\b"],"r":"Bool:D"},"n":"infix:<(elem)>","m":1,"k":"s"},{"k":"s","m":1,"n":"infix:<(elem)>","s":{"p":["\\a","Iterable:D \\b"],"r":"Bool:D"}},{"s":{"p":["\\a","Iterator:D \\b"],"r":"Bool:D"},"n":"infix:<(elem)>","k":"s","m":1},{"s":{"r":"Bool:D","p":["\\a","QuantHash:D \\b"]},"n":"infix:<(elem)>","m":1,"k":"s"},{"m":1,"k":"s","n":"infix:<(elem)>","s":{"p":["$","Failure:D \\b"],"r":"Mu"}},{"n":"infix:<(elem)>","s":{"r":"Mu","p":["Failure:D \\a","$"]},"k":"s","m":1},{"n":"infix:<(elem)>","s":{"p":["\\a","\\b"],"r":"Mu"},"m":1,"k":"s"},{"t":"Sub+{is-pure}","n":"&cos","k":"v"},{"k":"s","m":1,"n":"cos","s":{"p":["Numeric \\x"],"r":"Mu"}},{"m":1,"k":"s","n":"cos","s":{"r":"Mu","p":["Cool \\x"]}},{"k":"s","m":1,"n":"cos","s":{"p":["num $x"],"r":"num"}},{"t":"Submethod","n":"Submethod","d":"TITLE\nclass Submethod\n\nSUBTITLE\nMember function that is not inherited by subclasses\n\n    class Submethod is Routine {}\n\nA Submethod is a method that is not inherited by child classes. They are\ntypically used for per-class initialization and tear-down tasks which are\ncalled explicitly per class in an inheritance tree, usually for enforcing a\nparticular order. For example object construction with the BUILD submethod\nhappens from the least-derived to most-derived, so that the most-derived\n(child) classes can depend on the parent already being initialized.\n\nSubmethods are of type Submethod, and are declared with the submethod\ndeclarator:\n\n    class Area {\n        has $.size;\n        submethod BUILD(:$x, :$y, :$z) {\n            $!size = $x * $y * $z;\n        }\n    }\n\n","k":"c","m":[{"n":"gist","s":{"r":"Mu","p":["*%_"]},"k":"m","m":1},{"s":{"r":"Mu","p":["*%_"]},"n":"gist","k":"m","m":1},{"k":"m","m":1,"n":"gist","s":{"r":"Mu","p":["*%_"]}},{"s":{"r":"Mu","p":["*%_"]},"n":"gist","k":"m","m":1},{"k":"s","m":0,"n":"BUILDALL","s":{"r":"Mu","p":["@auto","%init","*%_"]}},{"n":"onlystar","s":{"r":"Mu","p":["*%_"]},"m":0,"k":"m"},{"m":0,"k":"m","s":{"p":["*@","*%_"],"r":"Mu"},"n":"leave"},{"s":{"p":["*%_"],"r":"Mu"},"n":"candidates","k":"m","m":0},{"s":{"p":["Capture:D $c","*%_"],"r":"Mu"},"n":"cando","m":0,"k":"m"},{"n":"unwrap","s":{"r":"Mu","p":["$handle","*%_"]},"k":"m","m":0},{"k":"m","m":0,"n":"multi","s":{"p":["*%_"],"r":"Mu"}},{"n":"perl","s":{"r":"Mu","p":["*%_"]},"k":"m","m":1},{"n":"perl","s":{"r":"Mu","p":["*%_"]},"k":"m","m":1},{"s":{"r":"Mu","p":["*%_"]},"n":"perl","m":1,"k":"m"},{"k":"m","m":1,"n":"perl","s":{"p":["*%_"],"r":"Mu"}},{"k":"m","m":1,"n":"perl","s":{"r":"Mu","p":["*%_"]}},{"m":0,"k":"m","s":{"r":"Nil","p":["*%_"]},"n":"soft"},{"n":"wrap","s":{"p":["&wrapper","*%_"],"r":"Mu"},"m":0,"k":"m"},{"k":"m","m":0,"n":"yada","s":{"r":"Mu","p":["*%_"]}},{"s":{"r":"Mu","p":["*%_"]},"n":"gist","m":1,"k":"m"},{"s":{"r":"Mu","p":["*%_"]},"n":"gist","k":"m","m":1},{"m":1,"k":"m","s":{"p":["*%_"],"r":"Mu"},"n":"gist"},{"k":"m","m":0,"n":"package","s":{"p":["*%_"],"r":"Mu"}},{"n":"BUILDALL","s":{"r":"Mu","p":["@auto","%init","*%_"]},"m":0,"k":"s"},{"k":"m","m":1,"s":{"r":"Mu","p":["Failure:D \\failure","*%_"]},"n":"POSITIONS"},{"n":"POSITIONS","s":{"p":["Any:D \\list","*%_"],"r":"Mu"},"k":"m","m":1},{"s":{"p":["Str:D \\name","*%_"],"r":"Mu"},"n":"has-phaser","k":"m","m":0},{"m":0,"k":"m","n":"phasers","s":{"p":["Str:D $name","*%_"],"r":"Mu"}},{"s":{"p":["*%_"],"r":"Mu"},"n":"WHY","m":0,"k":"m"},{"k":"m","m":1,"s":{"r":"Mu","p":["*%_"]},"n":"perl"},{"k":"m","m":1,"n":"perl","s":{"r":"Mu","p":["*%_"]}},{"m":1,"k":"m","s":{"r":"Mu","p":["*%_"]},"n":"perl"},{"k":"m","m":1,"n":"perl","s":{"p":["*%_"],"r":"Mu"}},{"k":"m","m":0,"n":"of","s":{"p":["*%_"],"r":"Mu"}},{"m":0,"k":"m","n":"fire_if_phasers","s":{"r":"Nil","p":["Str $name","*%_"]}},{"k":"m","m":0,"n":"set_why","s":{"p":["$why","*%_"],"r":"Nil"}},{"m":0,"k":"m","s":{"p":["*%_"],"r":"Mu"},"n":"returns"},{"k":"m","m":0,"s":{"p":["*%_"],"r":"Mu"},"n":"has-phasers"},{"n":"add_phaser","s":{"p":["Str:D \\name","&block","*%_"],"r":"Nil"},"k":"m","m":0},{"s":{"r":"Nil","p":["Str $name","*%_"]},"n":"fire_phasers","m":0,"k":"m"},{"s":{"r":"Mu","p":["@auto","%init","*%_"]},"n":"BUILDALL","m":0,"k":"s"},{"s":{"p":["*%_"],"r":"Mu"},"n":"static_id","k":"m","m":0},{"n":"returns","s":{"p":["*%_"],"r":"Mu"},"m":0,"k":"m"},{"s":{"p":["Capture:D $c","*%_"],"r":"Mu"},"n":"cando","m":0,"k":"m"},{"k":"m","m":0,"n":"outer","s":{"r":"Mu","p":["*%_"]}},{"k":"m","m":1,"n":"new","s":{"p":["*%attrinit"],"r":"Mu"}},{"m":1,"k":"m","s":{"p":["$","*@","*%_"],"r":"Mu"},"n":"new"},{"n":"new","s":{"p":["*%_"],"r":"Mu"},"m":1,"k":"m"},{"s":{"p":["*%_"],"r":"Mu"},"n":"count","m":0,"k":"m"},{"s":{"r":"Mu","p":["\\topic","*%_"]},"n":"ACCEPTS","k":"m","m":1},{"s":{"r":"Mu","p":["Mu:U \\topic","*%_"]},"n":"ACCEPTS","m":1,"k":"m"},{"k":"m","m":1,"s":{"p":["Mu:D \\a","*%_"],"r":"Mu"},"n":"ACCEPTS"},{"k":"m","m":1,"n":"ACCEPTS","s":{"p":["Mu:U $","*%_"],"r":"Bool"}},{"n":"ACCEPTS","s":{"p":["\\topic","*%_"],"r":"Bool:D"},"m":1,"k":"m"},{"k":"m","m":1,"s":{"p":["Mu $topic is raw","*%_"],"r":"Mu"},"n":"ACCEPTS"},{"n":"perl","s":{"p":["*%_"],"r":"Mu"},"m":1,"k":"m"},{"m":1,"k":"m","s":{"p":["*%_"],"r":"Mu"},"n":"perl"},{"n":"perl","s":{"p":["*%_"],"r":"Mu"},"k":"m","m":1},{"m":0,"k":"m","s":{"p":["*%_"],"r":"Mu"},"n":"of"},{"n":"file","s":{"p":["*%_"],"r":"Mu"},"k":"m","m":0},{"k":"m","m":0,"s":{"p":["*%_"],"r":"Mu"},"n":"signature"},{"n":"Capture","s":{"r":"Mu","p":["*%_"]},"k":"m","m":0},{"m":1,"k":"m","n":"Str","s":{"p":["*%_"],"r":"Mu"}},{"s":{"r":"Mu","p":["*%_"]},"n":"Str","m":1,"k":"m"},{"m":1,"k":"m","n":"Str","s":{"r":"Mu","p":["*%_"]}},{"k":"m","m":0,"s":{"r":"Mu","p":["|primers is raw"]},"n":"assuming"},{"s":{"p":["*%_"],"r":"Mu"},"n":"prec","k":"m","m":1},{"n":"prec","s":{"r":"Mu","p":["Str:D $","*%_"]},"k":"m","m":1},{"n":"arity","s":{"p":["*%_"],"r":"Mu"},"m":0,"k":"m"},{"k":"m","m":0,"s":{"p":["*%_"],"r":"Mu"},"n":"line"},{"m":0,"k":"s","s":{"p":["@auto","%init","*%_"],"r":"Mu"},"n":"BUILDALL"}],"a":[{"k":"v","n":"@!dispatchees","t":"List"},{"t":"Mu","n":"$!dispatcher_cache","k":"v"},{"k":"v","n":"$!dispatcher","t":"Mu"},{"n":"$!rw","t":"int","k":"v"},{"n":"$!inline_info","t":"Mu","k":"v"},{"k":"v","t":"int","n":"$!yada"},{"t":"Mu","n":"$!package","k":"v"},{"k":"v","t":"int","n":"$!onlystar"},{"k":"v","n":"@!dispatch_order","t":"List"},{"t":"Mu","n":"$!dispatch_cache","k":"v"},{"k":"v","n":"$!why","t":"Mu"},{"n":"$!do","t":"Code","k":"v"},{"k":"v","t":"Signature","n":"$!signature"},{"k":"v","n":"@!compstuff","t":"List"}],"b":"A"},{"d":"TITLE\nclass Tap\n\nSUBTITLE\nSubscription to a Supply\n\n    class Tap {}\n\nA Tap is a subscription to a Supply.\n\n    my $s = Supplier.new;\n    my $tap = $s.Supply.on-close({ say \"Tap closed\" }).tap(\n        -> $v { say \"the value is $v\" },\n        done    => { say \"Supply is done\" },\n        quit    => -> $ex { say \"Supply finished with error $ex\" },\n    );\n\n    # later\n    $tap.close;\n\n","a":[{"t":"Callable","n":"&!on-close","k":"v"}],"b":"A","k":"c","m":[{"m":0,"k":"s","s":{"p":[":on-close(&!on-close)","*%_"],"r":"Nil"},"n":"BUILD"},{"k":"m","m":0,"n":"close","s":{"p":["*%_"],"r":"Bool"}},{"s":{"r":"Mu","p":["*%attrinit"]},"n":"new","m":1,"k":"m"},{"n":"new","s":{"p":["$","*@","*%_"],"r":"Mu"},"k":"m","m":1},{"n":"new","s":{"p":["*%_"],"r":"Tap:D"},"k":"m","m":1},{"k":"m","m":1,"n":"new","s":{"r":"Tap:D","p":["&on-close","*%_"]}},{"m":0,"k":"s","n":"BUILDALL","s":{"p":["@auto","%init","*%_"],"r":"Mu"}}],"t":"Tap","n":"Tap"},{"n":"&tanh","t":"Sub+{is-pure}","k":"v"},{"s":{"p":["Numeric \\x"],"r":"Mu"},"n":"tanh","m":1,"k":"s"},{"s":{"p":["Cool \\x"],"r":"Mu"},"n":"tanh","m":1,"k":"s"},{"m":1,"k":"s","n":"tanh","s":{"p":["num $x"],"r":"num"}},{"t":"SocketType","n":"SOCK_PACKET","k":"e"},{"t":"Sub+{is-pure}+{Precedence}","n":"&prefix:<?^>","k":"v"},{"k":"s","m":1,"s":{"r":"Mu","p":["Mu \\a"]},"n":"prefix:<?^>"},{"k":"v","t":"Sub+{is-pure}+{Precedence}","n":"&infix:<gt>"},{"s":{"p":["$x?"],"r":"Mu"},"n":"infix:<gt>","k":"s","m":1},{"k":"s","m":1,"n":"infix:<gt>","s":{"p":["\\a","\\b"],"r":"Mu"}},{"m":1,"k":"s","s":{"p":["Blob:D \\a","Blob:D \\b"],"r":"Mu"},"n":"infix:<gt>"},{"s":{"p":["Str:D \\a","Str:D \\b"],"r":"Bool:D"},"n":"infix:<gt>","k":"s","m":1},{"m":1,"k":"s","s":{"p":["str $a","str $b"],"r":"Bool:D"},"n":"infix:<gt>"},{"n":"&gethostname","t":"Sub","k":"v"},{"s":{"r":"Str:D","p":[]},"n":"gethostname","m":1,"k":"s"},{"n":"&indices","t":"Sub","k":"v"},{"k":"s","m":1,"s":{"p":["Cool $s","|c is raw"],"r":"Mu"},"n":"indices"},{"t":"Sub","n":"&roll","k":"v"},{"m":1,"k":"s","n":"roll","s":{"p":["$n","+\\values is raw"],"r":"Mu"}},{"n":"&exit","t":"Sub","k":"v"},{"k":"s","m":1,"s":{"p":[],"r":"Mu"},"n":"exit"},{"m":1,"k":"s","s":{"r":"Mu","p":["$status"]},"n":"exit"},{"t":"Awaitable","n":"Awaitable","b":"C","k":"ro","m":[{"k":"m","m":0,"s":{"p":["*%_"],"r":"Mu"},"n":"get-await-handle"}]},{"a":[{"n":"$.already","t":"Bool","k":"v"},{"k":"v","t":"Bool","n":"$.success"},{"k":"v","n":"$.result","t":"Mu"},{"k":"v","n":"$.cause","t":"Exception"}],"b":"C","m":[{"n":"already-success","s":{"p":["Mu \\result","*%_"],"r":"Mu"},"k":"m","m":0},{"k":"m","m":0,"s":{"r":"Mu","p":["Mu \\cause","*%_"]},"n":"already-failure"},{"k":"m","m":0,"n":"subscribe-awaiter","s":{"p":["&subscriber","*%_"],"r":"Mu"}},{"n":"!ALREADY_FAILURE","s":{"p":["Mu \\cause","*%_"],"r":"Mu"},"k":"m","m":0},{"m":0,"k":"m","n":"!ALREADY_SUCCESS","s":{"p":["Mu \\result","*%_"],"r":"Mu"}}],"k":"ro","t":"Awaitable::Handle","n":"Awaitable::Handle"},{"n":"Backtrace","t":"Backtrace","a":[{"k":"v","n":"$!bt","t":"Mu"},{"k":"v","n":"$!frames","t":"Mu"},{"k":"v","n":"$!bt-next","t":"Int"}],"b":"A","k":"c","m":[{"s":{"r":"Mu","p":["*%_"]},"n":"RAKUDO_VERBOSE_STACKFRAME","k":"m","m":0},{"m":0,"k":"m","n":"AT-POS","s":{"p":["$pos","*%_"],"r":"Mu"}},{"m":0,"k":"m","n":"next-interesting-index","s":{"p":["Int $idx is copy = 0",":$named",":$noproto",":$setting","*%_"],"r":"Mu"}},{"m":0,"k":"m","n":"outer-caller-idx","s":{"p":["Int $startidx","*%_"],"r":"Mu"}},{"s":{"r":"Mu","p":[":$oneline","*%_"]},"n":"nice","k":"m","m":0},{"k":"m","m":0,"s":{"r":"Mu","p":["*%_"]},"n":"first-none-setting-line"},{"s":{"p":["*%_"],"r":"Mu"},"n":"concise","m":0,"k":"m"},{"m":0,"k":"m","s":{"p":["*%_"],"r":"Mu"},"n":"full"},{"k":"m","m":0,"n":"summary","s":{"p":["*%_"],"r":"Mu"}},{"s":{"p":["*%_"],"r":"Mu"},"n":"is-runtime","m":0,"k":"m"},{"s":{"r":"Mu","p":["*%attrinit"]},"n":"new","m":1,"k":"m"},{"k":"m","m":1,"s":{"p":["$","*@","*%_"],"r":"Mu"},"n":"new"},{"s":{"p":["*%_"],"r":"Mu"},"n":"new","m":1,"k":"m"},{"k":"m","m":1,"s":{"p":["Int:D $offset","*%_"],"r":"Mu"},"n":"new"},{"m":1,"k":"m","s":{"r":"Mu","p":["Mu \\ex","*%_"]},"n":"new"},{"k":"m","m":1,"s":{"p":["Mu \\ex","Int:D $offset","*%_"],"r":"Mu"},"n":"new"},{"k":"m","m":1,"n":"new","s":{"r":"Mu","p":["List:D $bt","*%_"]}},{"k":"m","m":1,"n":"new","s":{"p":["List:D $bt","Int:D $offset","*%_"],"r":"Mu"}},{"k":"m","m":1,"s":{"p":["*%_"],"r":"Mu"},"n":"gist"},{"s":{"r":"Mu","p":["*%_"]},"n":"gist","k":"m","m":1},{"s":{"r":"Mu","p":["*%_"]},"n":"gist","m":1,"k":"m"},{"s":{"p":["*%_"],"r":"Mu"},"n":"Str","m":1,"k":"m"},{"s":{"p":["*%_"],"r":"Mu"},"n":"Str","m":1,"k":"m"},{"s":{"p":["*%_"],"r":"Mu"},"n":"Str","m":1,"k":"m"},{"s":{"r":"Mu","p":["*%_"]},"n":"flat","m":1,"k":"m"},{"s":{"r":"Mu","p":["*%_"]},"n":"flat","k":"m","m":1},{"s":{"r":"Mu","p":["Hash:D \\hash","*%_"]},"n":"map","m":1,"k":"m"},{"n":"map","s":{"p":["Iterable:D \\iterable","*%_"],"r":"Mu"},"k":"m","m":1},{"k":"m","m":1,"s":{"r":"Mu","p":["|c is raw"]},"n":"map"},{"s":{"r":"Mu","p":["&block",":$label",":$item","*%_"]},"n":"map","m":1,"k":"m"},{"n":"map","s":{"p":["&block","*%_"],"r":"Mu"},"k":"m","m":1},{"s":{"r":"Mu","p":["Bool:D $t","*%_"]},"n":"first","k":"m","m":1},{"m":1,"k":"m","s":{"p":["Regex:D $test",":$end","*%a"],"r":"Mu"},"n":"first"},{"n":"first","s":{"p":["Callable:D $test",":$end","*%a is copy"],"r":"Mu"},"k":"m","m":1},{"n":"first","s":{"p":["Mu $test",":$end","*%a"],"r":"Mu"},"m":1,"k":"m"},{"m":1,"k":"m","n":"first","s":{"p":[":$end","*%a"],"r":"Mu"}},{"s":{"r":"Mu","p":["Mu $test","*%_"]},"n":"first","m":1,"k":"m"},{"s":{"p":["*%_"],"r":"Mu"},"n":"list","k":"m","m":1},{"s":{"r":"Mu","p":["*%_"]},"n":"list","k":"m","m":1},{"m":1,"k":"m","n":"list","s":{"r":"Mu","p":["*%_"]}},{"n":"BUILDALL","s":{"r":"Mu","p":["@auto","%init","*%_"]},"m":0,"k":"s"},{"k":"m","m":0,"n":"!SET-SELF","s":{"p":["$!bt","$!bt-next","*%_"],"r":"Mu"}}],"d":"TITLE\nclass Backtrace\n\nSUBTITLE\nSnapshot of the dynamic call stack\n\n    class Backtrace {}\n\nA backtrace contains the dynamic call stack, usually leading up to a point\nwhere an exception was thrown, and is a List of Backtrace::Frame objects.\nIts default stringification excludes backtrace frames that are deemed\nunnecessary or confusing; for example routines like &die are hidden by\ndefault. Being a list, you can also access individual elements.\n\n    sub zipi { { { die \"Something bad happened\" }() }() };\n    try {\n        zipi;\n    }\n    if ($!) {\n        say $!.backtrace[*-1].perl;\n    }\n\n\nThis will print the last frame in the list, pointing at the line where it's\nhappened.\n\n"},{"n":"Backtrace::Frame","t":"Backtrace::Frame","k":"c","m":[{"k":"m","m":0,"s":{"r":"Mu","p":["*%_"]},"n":"subtype"},{"s":{"r":"Mu","p":["*%_"]},"n":"package","k":"m","m":0},{"m":0,"k":"m","s":{"r":"Mu","p":["*%_"]},"n":"is-hidden"},{"m":0,"k":"m","s":{"p":["*%_"],"r":"Mu"},"n":"is-routine"},{"k":"m","m":0,"s":{"r":"Mu","p":["*%_"]},"n":"is-setting"},{"k":"m","m":1,"s":{"p":["*%attrinit"],"r":"Mu"},"n":"new"},{"k":"m","m":1,"s":{"r":"Mu","p":["$","*@","*%_"]},"n":"new"},{"m":1,"k":"m","s":{"p":["\\file","\\line","\\code","\\subname","*%_"],"r":"Mu"},"n":"new"},{"k":"m","m":1,"n":"new","s":{"p":["|c is raw"],"r":"Mu"}},{"n":"Str","s":{"r":"Mu","p":["*%_"]},"m":1,"k":"m"},{"s":{"p":["*%_"],"r":"Mu"},"n":"Str","m":1,"k":"m"},{"s":{"r":"Mu","p":["*%_"]},"n":"Str","m":1,"k":"m"},{"k":"m","m":0,"n":"file","s":{"r":"Mu","p":["*%_"]}},{"m":0,"k":"m","s":{"r":"Mu","p":["*%_"]},"n":"line"},{"k":"m","m":0,"s":{"r":"Mu","p":["*%_"]},"n":"code"},{"n":"subname","s":{"r":"Mu","p":["*%_"]},"k":"m","m":0},{"s":{"r":"Mu","p":["@auto","%init","*%_"]},"n":"BUILDALL","k":"s","m":0},{"n":"!SET-SELF","s":{"r":"Mu","p":["$!file","$!line","\\code","$!subname","*%_"]},"k":"m","m":0}],"a":[{"n":"$.file","t":"Str","k":"v"},{"k":"v","n":"$.line","t":"Int"},{"n":"$.code","t":"Mu","k":"v"},{"t":"Str","n":"$.subname","k":"v"}],"b":"A","d":"TITLE\nclass Backtrace::Frame\n\nSUBTITLE\nSingle frame of a Backtrace\n\n    class Backtrace::Frame { }\n\nA single backtrace frame. It identifies a location in the source code.\n\n"},{"t":"Sub","n":"&get","k":"v"},{"n":"get","s":{"p":["IO::Handle:D $fh = { ... }"],"r":"Mu"},"k":"s","m":1},{"d":"TITLE\nclass HyperSeq\n\nSUBTITLE\nAn object for performing batches of work in parallel with ordered output\n\n    class HyperSeq does Iterable does Sequence { }\n\nAn HyperSeq is the intermediate object used when the operator hyper is\ninvoked on a Seq. In general, it's not intended for direct consumption by\nthe developer.\n\n","b":"A","a":[{"k":"v","t":"HyperConfiguration","n":"$.configuration"},{"n":"$!work-stage-head","t":"Rakudo::Internals::HyperWorkStage","k":"v"},{"n":"$!list","t":"Mu","k":"v"}],"m":[{"k":"s","m":0,"n":"BUILD","s":{"r":"Mu","p":[":configuration($!configuration)!",":work-stage-head($!work-stage-head)!","*%_"]}},{"n":"iterator","s":{"p":["*%_"],"r":"Iterator"},"m":0,"k":"m"},{"s":{"p":["$matcher","*%options"],"r":"Mu"},"n":"grep","m":0,"k":"m"},{"k":"m","m":0,"n":"map","s":{"p":["$matcher","*%options"],"r":"Mu"}},{"m":0,"k":"m","n":"invert","s":{"p":["*%_"],"r":"Mu"}},{"m":0,"k":"m","s":{"r":"Mu","p":["*%_"]},"n":"hyper"},{"s":{"p":["*%_"],"r":"Mu"},"n":"race","k":"m","m":0},{"k":"m","m":0,"n":"is-lazy","s":{"p":["*%_"],"r":"Bool"}},{"n":"sink","s":{"p":["*%_"],"r":"Nil"},"k":"m","m":0},{"k":"m","m":0,"s":{"r":"Mu","p":["*%_"]},"n":"Numeric"},{"s":{"r":"Mu","p":["|c is raw"]},"n":"fmt","k":"m","m":0},{"k":"m","m":0,"n":"cache","s":{"r":"Mu","p":["*%_"]}},{"m":0,"k":"m","s":{"r":"Mu","p":["*%_"]},"n":"item"},{"k":"m","m":0,"s":{"r":"Mu","p":["*%_"]},"n":"flat"},{"k":"m","m":0,"n":"lazy-if","s":{"p":["$flag","*%_"],"r":"Mu"}},{"s":{"r":"Mu","p":["*%_"]},"n":"lazy","m":0,"k":"m"},{"k":"m","m":1,"s":{"r":"Mu","p":["*%_"]},"n":"serial"},{"n":"serial","s":{"r":"Mu","p":["*%_"]},"m":1,"k":"m"},{"k":"m","m":1,"n":"Array","s":{"r":"Mu","p":["*%_"]}},{"n":"Array","s":{"r":"Mu","p":["*%_"]},"k":"m","m":1},{"m":1,"k":"m","s":{"p":["*%_"],"r":"Mu"},"n":"List"},{"n":"List","s":{"p":["*%_"],"r":"Mu"},"k":"m","m":1},{"s":{"p":["*%_"],"r":"Mu"},"n":"Slip","k":"m","m":1},{"m":1,"k":"m","s":{"r":"Mu","p":["*%_"]},"n":"Slip"},{"m":1,"k":"m","n":"Str","s":{"p":["*%_"],"r":"Mu"}},{"k":"m","m":1,"n":"Str","s":{"p":["*%_"],"r":"Mu"}},{"s":{"p":["*%_"],"r":"Mu"},"n":"Str","m":1,"k":"m"},{"m":1,"k":"m","s":{"p":["*%_"],"r":"Mu"},"n":"Stringy"},{"n":"Stringy","s":{"p":["*%_"],"r":"Mu"},"m":1,"k":"m"},{"n":"Stringy","s":{"r":"Mu","p":["*%_"]},"k":"m","m":1},{"m":1,"k":"m","n":"AT-POS","s":{"p":["int \\pos","*%_"],"r":"Mu"}},{"s":{"p":["Int:D \\pos","*%_"],"r":"Mu"},"n":"AT-POS","k":"m","m":1},{"n":"AT-POS","s":{"p":["Num:D \\pos","*%_"],"r":"Mu"},"k":"m","m":1},{"n":"AT-POS","s":{"r":"Mu","p":["Any:D \\pos","*%_"]},"k":"m","m":1},{"s":{"p":["int \\pos","*%_"],"r":"Mu"},"n":"AT-POS","k":"m","m":1},{"k":"m","m":1,"s":{"r":"Mu","p":["Int:D \\pos","*%_"]},"n":"AT-POS"},{"m":1,"k":"m","s":{"r":"Mu","p":["Num:D \\pos","*%_"]},"n":"AT-POS"},{"s":{"r":"Mu","p":["Any:D \\pos","*%_"]},"n":"AT-POS","m":1,"k":"m"},{"s":{"r":"Mu","p":["Any:U \\pos","*%_"]},"n":"AT-POS","m":1,"k":"m"},{"s":{"r":"Mu","p":["\\one","\\two","*%_"]},"n":"AT-POS","k":"m","m":1},{"n":"AT-POS","s":{"p":["\\one","\\two","\\three","*%_"],"r":"Mu"},"k":"m","m":1},{"n":"AT-POS","s":{"p":["**@indices","*%_"],"r":"Mu"},"m":1,"k":"m"},{"n":"AT-POS","s":{"p":["Int:D $idx","*%_"],"r":"Mu"},"k":"m","m":1},{"n":"AT-POS","s":{"r":"Mu","p":["int $idx","*%_"]},"m":1,"k":"m"},{"m":1,"k":"m","n":"EXISTS-POS","s":{"r":"Bool","p":["Any:D $","*%_"]}},{"n":"EXISTS-POS","s":{"r":"Mu","p":["Any:U $pos","*%_"]},"k":"m","m":1},{"s":{"r":"Bool:D","p":["int \\pos","*%_"]},"n":"EXISTS-POS","k":"m","m":1},{"n":"EXISTS-POS","s":{"p":["Int:D \\pos","*%_"],"r":"Bool:D"},"k":"m","m":1},{"n":"EXISTS-POS","s":{"p":["Num:D \\pos","*%_"],"r":"Bool:D"},"m":1,"k":"m"},{"n":"EXISTS-POS","s":{"r":"Bool:D","p":["Any:D \\pos","*%_"]},"k":"m","m":1},{"k":"m","m":1,"s":{"p":["Any:U \\pos","*%_"],"r":"Mu"},"n":"EXISTS-POS"},{"k":"m","m":1,"n":"EXISTS-POS","s":{"p":["\\one","\\two","*%_"],"r":"Bool:D"}},{"m":1,"k":"m","s":{"p":["\\one","\\two","\\three","*%_"],"r":"Bool:D"},"n":"EXISTS-POS"},{"k":"m","m":1,"s":{"r":"Bool:D","p":["**@indices","*%_"]},"n":"EXISTS-POS"},{"k":"m","m":1,"s":{"p":["Int:D $idx","*%_"],"r":"Mu"},"n":"EXISTS-POS"},{"s":{"p":["int $idx","*%_"],"r":"Mu"},"n":"EXISTS-POS","k":"m","m":1},{"m":1,"k":"m","s":{"p":["*%_"],"r":"Mu"},"n":"eager"},{"n":"eager","s":{"p":["*%_"],"r":"Mu"},"m":1,"k":"m"},{"n":"gist","s":{"r":"Mu","p":["*%_"]},"m":1,"k":"m"},{"m":1,"k":"m","s":{"r":"Mu","p":["*%_"]},"n":"gist"},{"k":"m","m":1,"n":"gist","s":{"r":"Mu","p":["*%_"]}},{"s":{"r":"Mu","p":["*%_"]},"n":"list","k":"m","m":1},{"k":"m","m":1,"s":{"p":["*%_"],"r":"Mu"},"n":"list"},{"n":"list","s":{"r":"Mu","p":["*%_"]},"m":1,"k":"m"},{"s":{"r":"Mix:D","p":["*%_"]},"n":"Mix","m":1,"k":"m"},{"s":{"p":["*%_"],"r":"Mu"},"n":"Mix","k":"m","m":1},{"n":"MixHash","s":{"r":"MixHash:D","p":["*%_"]},"m":1,"k":"m"},{"k":"m","m":1,"n":"MixHash","s":{"p":["*%_"],"r":"Mu"}},{"n":"Bag","s":{"p":["*%_"],"r":"Bag:D"},"m":1,"k":"m"},{"m":1,"k":"m","s":{"r":"Mu","p":["*%_"]},"n":"Bag"},{"m":1,"k":"m","s":{"r":"BagHash:D","p":["*%_"]},"n":"BagHash"},{"m":1,"k":"m","s":{"r":"Mu","p":["*%_"]},"n":"BagHash"},{"s":{"r":"Set:D","p":["*%_"]},"n":"Set","k":"m","m":1},{"k":"m","m":1,"s":{"p":["*%_"],"r":"Mu"},"n":"Set"},{"m":1,"k":"m","n":"SetHash","s":{"r":"SetHash:D","p":["*%_"]}},{"k":"m","m":1,"s":{"p":["*%_"],"r":"Mu"},"n":"SetHash"},{"m":0,"k":"m","n":"configuration","s":{"p":["*%_"],"r":"Mu"}},{"k":"s","m":0,"n":"BUILDALL","s":{"p":["@auto","%init","*%_"],"r":"Mu"}}],"k":"c","t":"HyperSeq","n":"HyperSeq"},{"n":"Blob","t":"Blob","k":"ro","m":[{"m":0,"k":"m","s":{"p":["int $offset","Endian $?","*%_"],"r":"int"},"n":"read-int8"},{"m":0,"k":"m","s":{"p":["int $offset","Endian $endian = Endian::NativeEndian","*%_"],"r":"int"},"n":"read-int16"},{"m":0,"k":"m","s":{"r":"int","p":["int $offset","Endian $endian = Endian::NativeEndian","*%_"]},"n":"read-int32"},{"m":0,"k":"m","n":"read-int64","s":{"p":["int $offset","Endian $endian = Endian::NativeEndian","*%_"],"r":"int"}},{"m":0,"k":"m","s":{"r":"Int","p":["int $offset","Endian $endian = Endian::NativeEndian","*%_"]},"n":"read-int128"},{"n":"read-uint8","s":{"r":"uint","p":["int $offset","Endian $?","*%_"]},"k":"m","m":0},{"n":"read-uint16","s":{"r":"uint","p":["int $offset","Endian $endian = Endian::NativeEndian","*%_"]},"m":0,"k":"m"},{"m":0,"k":"m","s":{"p":["int $offset","Endian $endian = Endian::NativeEndian","*%_"],"r":"uint"},"n":"read-uint32"},{"n":"read-uint64","s":{"r":"uint","p":["int $offset","Endian $endian = Endian::NativeEndian","*%_"]},"k":"m","m":0},{"m":0,"k":"m","s":{"p":["int $offset","Endian $endian = Endian::NativeEndian","*%_"],"r":"uint"},"n":"read-uint128"},{"m":0,"k":"m","n":"read-num32","s":{"r":"num","p":["int $offset","Endian $endian = Endian::NativeEndian","*%_"]}},{"n":"read-num64","s":{"r":"num","p":["int $offset","Endian $endian = Endian::NativeEndian","*%_"]},"k":"m","m":0},{"m":0,"k":"m","n":"read-bits","s":{"r":"Int:D","p":["int $pos","Int:D $bits","*%_"]}},{"s":{"r":"UInt:D","p":["int $pos","Int:D $bits","*%_"]},"n":"read-ubits","k":"m","m":0},{"s":{"r":"Mu","p":["*%_"]},"n":"Capture","k":"m","m":0},{"s":{"p":["*%_"],"r":"Mu"},"n":"Numeric","k":"m","m":0},{"m":0,"k":"m","s":{"r":"Mu","p":["*%_"]},"n":"Int"},{"s":{"p":["*%_"],"r":"Mu"},"n":"bytes","k":"m","m":0},{"k":"m","m":0,"n":"chars","s":{"r":"Mu","p":["*%_"]}},{"s":{"r":"Mu","p":["*%_"]},"n":"reverse","m":0,"k":"m"},{"n":"COMPARE","s":{"r":"Mu","p":["Blob:D \\other","*%_"]},"m":0,"k":"m"},{"k":"m","m":0,"n":"SAME","s":{"p":["Blob:D \\other","*%_"],"r":"Mu"}},{"s":{"p":["$delim = \"\"","*%_"],"r":"Mu"},"n":"join","m":0,"k":"m"},{"k":"m","m":0,"s":{"r":"Mu","p":["*%_"]},"n":"contents"},{"n":"encoding","s":{"r":"Mu","p":["*%_"]},"k":"m","m":0},{"k":"m","m":0,"s":{"r":"Mu","p":["$action","$got","*%_"]},"n":"!fail-typecheck"},{"k":"m","m":0,"n":"!push-list","s":{"p":["\\action","\\to","\\from","*%_"],"r":"Mu"}},{"n":"!spread","s":{"p":["\\to","\\from","*%_"],"r":"Mu"},"k":"m","m":0},{"s":{"r":"Mu","p":["\\action","\\to","\\from","*%_"]},"n":"!unshift-list","m":0,"k":"m"},{"n":"!fail-range","s":{"p":["$got","*%_"],"r":"Mu"},"k":"m","m":0},{"m":0,"k":"m","s":{"p":["\\action","\\i","\\got","*%_"],"r":"Mu"},"n":"!fail-typecheck-element"}],"b":"C","d":"TITLE\nrole Blob\n\nSUBTITLE\nImmutable buffer for binary data ('Binary Large OBject')\n\n    role Blob[::T = uint8] does Positional[T] does Stringy { }\n\nThe Blob role is an immutable interface to binary types, and offers a\nlist-like interface to lists of integers, typically unsigned integers.\n\n"},{"d":"TITLE\nclass Cool\n\nSUBTITLE\nObject that can be treated as both a string and number\n\n    class Cool is Any { }\n\nCool, also known as the Convenient OO Loop, is a base class employed by a\nnumber of built-in classes whose instances can be meaningfully coerced to a\nstring and a number. For example, an Array can be used in mathematical\noperations, where its numerical representation is the number of elements it\ncontains. At the same time, it can be concatenated to a string, where its\nstringy representation is all of its elements joined by a space. Because\nArray is Cool, the appropriate coercion happens automatically.\n\n","b":"C","m":[{"m":0,"k":"m","s":{"p":["*%_"],"r":"Mu"},"n":"abs"},{"n":"conj","s":{"p":["*%_"],"r":"Mu"},"m":0,"k":"m"},{"k":"m","m":0,"n":"sqrt","s":{"r":"Mu","p":["*%_"]}},{"s":{"r":"Mu","p":["*%_"]},"n":"sign","m":0,"k":"m"},{"n":"rand","s":{"r":"Mu","p":["*%_"]},"k":"m","m":0},{"s":{"r":"Mu","p":["*%_"]},"n":"sin","k":"m","m":0},{"k":"m","m":0,"n":"asin","s":{"r":"Mu","p":["*%_"]}},{"k":"m","m":0,"n":"cos","s":{"r":"Mu","p":["*%_"]}},{"k":"m","m":0,"n":"acos","s":{"r":"Mu","p":["*%_"]}},{"k":"m","m":0,"n":"tan","s":{"p":["*%_"],"r":"Mu"}},{"k":"m","m":0,"n":"atan","s":{"r":"Mu","p":["*%_"]}},{"n":"atan2","s":{"r":"Mu","p":["$y = 1e0","*%_"]},"m":0,"k":"m"},{"s":{"r":"Mu","p":["*%_"]},"n":"sec","m":0,"k":"m"},{"k":"m","m":0,"s":{"r":"Mu","p":["*%_"]},"n":"asec"},{"n":"cosec","s":{"r":"Mu","p":["*%_"]},"m":0,"k":"m"},{"m":0,"k":"m","n":"acosec","s":{"r":"Mu","p":["*%_"]}},{"k":"m","m":0,"s":{"r":"Mu","p":["*%_"]},"n":"cotan"},{"s":{"r":"Mu","p":["*%_"]},"n":"acotan","m":0,"k":"m"},{"s":{"r":"Mu","p":["*%_"]},"n":"sinh","k":"m","m":0},{"m":0,"k":"m","n":"asinh","s":{"p":["*%_"],"r":"Mu"}},{"n":"cosh","s":{"r":"Mu","p":["*%_"]},"k":"m","m":0},{"k":"m","m":0,"s":{"p":["*%_"],"r":"Mu"},"n":"acosh"},{"s":{"r":"Mu","p":["*%_"]},"n":"tanh","m":0,"k":"m"},{"m":0,"k":"m","n":"atanh","s":{"p":["*%_"],"r":"Mu"}},{"s":{"r":"Mu","p":["*%_"]},"n":"sech","k":"m","m":0},{"k":"m","m":0,"n":"asech","s":{"r":"Mu","p":["*%_"]}},{"n":"cosech","s":{"r":"Mu","p":["*%_"]},"m":0,"k":"m"},{"m":0,"k":"m","n":"acosech","s":{"r":"Mu","p":["*%_"]}},{"m":0,"k":"m","n":"cotanh","s":{"p":["*%_"],"r":"Mu"}},{"k":"m","m":0,"n":"acotanh","s":{"r":"Mu","p":["*%_"]}},{"n":"cis","s":{"r":"Mu","p":["*%_"]},"k":"m","m":0},{"k":"m","m":0,"s":{"p":["*%_"],"r":"Bool:D"},"n":"is-prime"},{"m":1,"k":"m","n":"log","s":{"p":["*%_"],"r":"Mu"}},{"n":"log","s":{"p":["$base","*%_"],"r":"Mu"},"k":"m","m":1},{"s":{"p":["*%_"],"r":"Mu"},"n":"exp","m":1,"k":"m"},{"n":"exp","s":{"p":["$base","*%_"],"r":"Mu"},"m":1,"k":"m"},{"m":1,"k":"m","s":{"r":"Mu","p":["*%_"]},"n":"round"},{"k":"m","m":1,"n":"round","s":{"p":["$base","*%_"],"r":"Mu"}},{"k":"m","m":0,"s":{"r":"Mu","p":["Cool $n","*%_"]},"n":"roots"},{"s":{"p":["*%_"],"r":"Mu"},"n":"log10","m":0,"k":"m"},{"s":{"r":"Mu","p":["$n","*%_"]},"n":"unpolar","m":0,"k":"m"},{"m":0,"k":"m","n":"floor","s":{"p":["*%_"],"r":"Mu"}},{"k":"m","m":0,"n":"ceiling","s":{"p":["*%_"],"r":"Mu"}},{"m":0,"k":"m","n":"truncate","s":{"r":"Mu","p":["*%_"]}},{"s":{"p":["*%_"],"r":"Int:D"},"n":"chars","m":0,"k":"m"},{"m":0,"k":"m","s":{"p":["*%_"],"r":"Mu"},"n":"codes"},{"n":"fmt","s":{"r":"Mu","p":["$format = \"\\%s\"","*%_"]},"k":"m","m":0},{"s":{"p":["*%_"],"r":"Mu"},"n":"uc","m":0,"k":"m"},{"n":"lc","s":{"p":["*%_"],"r":"Mu"},"k":"m","m":0},{"n":"tc","s":{"p":["*%_"],"r":"Mu"},"m":0,"k":"m"},{"m":0,"k":"m","s":{"r":"Mu","p":["*%_"]},"n":"fc"},{"k":"m","m":0,"n":"tclc","s":{"r":"Mu","p":["*%_"]}},{"k":"m","m":0,"n":"wordcase","s":{"r":"Mu","p":["*%_"]}},{"m":0,"k":"m","s":{"r":"Mu","p":["*%_"]},"n":"uniname"},{"m":0,"k":"m","s":{"p":["*%_"],"r":"Mu"},"n":"uninames"},{"m":0,"k":"m","n":"unival","s":{"r":"Mu","p":["*%_"]}},{"m":0,"k":"m","s":{"p":["*%_"],"r":"Mu"},"n":"univals"},{"k":"m","m":0,"s":{"r":"Mu","p":["|c is raw"]},"n":"uniprop"},{"k":"m","m":0,"n":"uniprop-int","s":{"p":["|c is raw"],"r":"Mu"}},{"m":0,"k":"m","n":"uniprop-bool","s":{"r":"Mu","p":["|c is raw"]}},{"k":"m","m":0,"n":"uniprop-str","s":{"p":["|c is raw"],"r":"Mu"}},{"k":"m","m":0,"s":{"r":"Mu","p":["|c is raw"]},"n":"uniprops"},{"m":0,"k":"m","s":{"r":"Mu","p":["|c is raw"]},"n":"unimatch"},{"s":{"r":"Mu","p":["*%_"]},"n":"chomp","k":"m","m":0},{"n":"chop","s":{"r":"Mu","p":["*%_"]},"k":"m","m":1},{"s":{"p":["$n","*%_"],"r":"Mu"},"n":"chop","m":1,"k":"m"},{"s":{"p":["*%_"],"r":"Int:D"},"n":"ord","k":"m","m":0},{"k":"m","m":0,"n":"chr","s":{"r":"Mu","p":["*%_"]}},{"m":1,"k":"m","s":{"r":"Mu","p":["*%_"]},"n":"chrs"},{"k":"m","m":1,"s":{"r":"Mu","p":["*%_"]},"n":"ords"},{"s":{"r":"Mu","p":["*%_"]},"n":"flip","k":"m","m":0},{"n":"trans","s":{"r":"Mu","p":["|c is raw"]},"k":"m","m":0},{"m":0,"k":"m","s":{"p":["|c is raw"],"r":"Mu"},"n":"starts-with"},{"m":0,"k":"m","n":"ends-with","s":{"r":"Mu","p":["|c is raw"]}},{"s":{"r":"Mu","p":["\\from","*%_"]},"n":"substr","m":1,"k":"m"},{"n":"substr","s":{"p":["\\from","\\chars","*%_"],"r":"Mu"},"k":"m","m":1},{"s":{"r":"Mu","p":["*%_"]},"n":"substr-rw","m":1,"k":"m"},{"m":1,"k":"m","s":{"r":"Mu","p":["\\from","*%_"]},"n":"substr-rw"},{"k":"m","m":1,"n":"substr-rw","s":{"r":"Mu","p":["\\from","\\chars","*%_"]}},{"n":"substr-eq","s":{"r":"Mu","p":["|c is raw"]},"m":0,"k":"m"},{"k":"m","m":0,"s":{"p":["|c is raw"],"r":"Mu"},"n":"contains"},{"m":0,"k":"m","n":"indices","s":{"p":["|c is raw"],"r":"Mu"}},{"k":"m","m":0,"n":"index","s":{"p":["|c is raw"],"r":"Mu"}},{"s":{"r":"Mu","p":["|c is raw"]},"n":"rindex","k":"m","m":0},{"m":0,"k":"m","s":{"r":"Mu","p":["|c is raw"]},"n":"split"},{"s":{"p":["|c is raw"],"r":"Mu"},"n":"match","k":"m","m":0},{"k":"m","m":0,"n":"comb","s":{"r":"Mu","p":["|c is raw"]}},{"s":{"r":"Mu","p":["|c is raw"]},"n":"lines","m":0,"k":"m"},{"n":"words","s":{"p":["|c is raw"],"r":"Mu"},"m":0,"k":"m"},{"s":{"r":"Mu","p":["|c is raw"]},"n":"subst","m":0,"k":"m"},{"n":"subst-mutate","s":{"p":["|c is raw"],"r":"Mu"},"m":0,"k":"m"},{"n":"IO","s":{"r":"Mu","p":["*%_"]},"m":1,"k":"m"},{"k":"m","m":1,"n":"IO","s":{"p":["*%_"],"r":"Mu"}},{"n":"sprintf","s":{"p":["*@args","*%_"],"r":"Mu"},"k":"m","m":0},{"s":{"p":["*@args","*%_"],"r":"Mu"},"n":"printf","m":0,"k":"m"},{"m":0,"k":"m","n":"samecase","s":{"p":["Cool $pattern","*%_"],"r":"Mu"}},{"k":"m","m":0,"n":"path","s":{"r":"Mu","p":["*%_"]}},{"k":"m","m":0,"n":"trim","s":{"p":["*%_"],"r":"Mu"}},{"n":"trim-leading","s":{"p":["*%_"],"r":"Mu"},"m":0,"k":"m"},{"s":{"p":["*%_"],"r":"Mu"},"n":"trim-trailing","k":"m","m":0},{"m":0,"k":"m","s":{"p":["*%opts"],"r":"Mu"},"n":"EVAL"},{"m":1,"k":"m","n":"Int","s":{"r":"Mu","p":["*%_"]}},{"m":1,"k":"m","s":{"p":["*%_"],"r":"Mu"},"n":"UInt"},{"n":"Num","s":{"r":"Mu","p":["*%_"]},"m":0,"k":"m"},{"m":0,"k":"m","n":"Rat","s":{"r":"Mu","p":["*%_"]}},{"n":"FatRat","s":{"r":"Mu","p":["*%_"]},"k":"m","m":0},{"s":{"p":["*%_"],"r":"Mu"},"n":"Complex","m":0,"k":"m"},{"k":"m","m":1,"n":"Real","s":{"p":["*%_"],"r":"Mu"}},{"k":"m","m":1,"n":"Real","s":{"r":"Mu","p":["*%_"]}},{"s":{"r":"Mu","p":["@auto","%init","*%_"]},"n":"BUILDALL","k":"s","m":0}],"k":"c","t":"Cool","n":"Cool"},{"k":"v","n":"&postfix:<⚛-->","t":"Sub"},{"n":"postfix:<⚛-->","s":{"r":"atomicint","p":["atomicint $target is rw"]},"k":"s","m":1},{"k":"e","n":"SIGINT","t":"Signal"},{"n":"&infix:<~&>","t":"Sub+{is-pure}+{Precedence}","k":"v"},{"m":1,"k":"s","n":"infix:<~&>","s":{"r":"Mu","p":[]}},{"k":"s","m":1,"s":{"r":"Mu","p":["$x"]},"n":"infix:<~&>"},{"m":1,"k":"s","n":"infix:<~&>","s":{"p":["\\a","\\b"],"r":"Mu"}},{"m":1,"k":"s","s":{"r":"Mu","p":["Blob:D \\a","Blob:D \\b"]},"n":"infix:<~&>"},{"m":1,"k":"s","n":"infix:<~&>","s":{"r":"Str:D","p":["Str:D \\a","Str:D \\b"]}},{"s":{"r":"str","p":["str $a","str $b"]},"n":"infix:<~&>","k":"s","m":1},{"t":"Num","n":"tau","b":"C","m":[{"s":{"p":["*%_"],"r":"Mu"},"n":"Capture","m":0,"k":"m"},{"k":"m","m":0,"s":{"p":["*%_"],"r":"Mu"},"n":"Num"},{"m":0,"k":"m","s":{"p":["*%_"],"r":"Mu"},"n":"Bridge"},{"k":"m","m":0,"n":"Range","s":{"p":["*%_"],"r":"Mu"}},{"m":0,"k":"m","n":"Int","s":{"r":"Mu","p":["*%_"]}},{"n":"Rat","s":{"p":["Real $epsilon = 1e-06",":$fat","*%_"],"r":"Mu"},"m":0,"k":"m"},{"m":0,"k":"m","s":{"r":"Mu","p":["Real $epsilon = 1e-06","*%_"]},"n":"FatRat"},{"m":0,"k":"m","s":{"p":["*%_"],"r":"Mu"},"n":"succ"},{"s":{"r":"Mu","p":["*%_"]},"n":"pred","m":0,"k":"m"},{"k":"m","m":0,"n":"isNaN","s":{"r":"Mu","p":["*%_"]}},{"m":0,"k":"m","s":{"r":"Mu","p":["*%_"]},"n":"abs"},{"m":1,"k":"m","n":"log","s":{"r":"Mu","p":["*%_"]}},{"n":"log","s":{"p":["Num \\base","*%_"],"r":"Mu"},"k":"m","m":1},{"n":"log","s":{"r":"Mu","p":["*%_"]},"m":1,"k":"m"},{"k":"m","m":1,"n":"log","s":{"r":"Mu","p":["Real $base","*%_"]}},{"k":"m","m":1,"s":{"r":"Mu","p":["Cool $base","*%_"]},"n":"log"},{"s":{"r":"Mu","p":["Numeric $base","*%_"]},"n":"log","k":"m","m":1},{"s":{"p":["*%_"],"r":"Mu"},"n":"sqrt","m":1,"k":"m"},{"n":"rand","s":{"p":["*%_"],"r":"Mu"},"m":0,"k":"m"},{"s":{"p":["*%_"],"r":"Mu"},"n":"ceiling","m":0,"k":"m"},{"n":"floor","s":{"r":"Mu","p":["*%_"]},"k":"m","m":0},{"m":1,"k":"m","s":{"p":["*%_"],"r":"Mu"},"n":"sin"},{"n":"asin","s":{"p":["*%_"],"r":"Mu"},"m":1,"k":"m"},{"n":"cos","s":{"r":"Mu","p":["*%_"]},"k":"m","m":1},{"k":"m","m":1,"s":{"p":["*%_"],"r":"Mu"},"n":"acos"},{"k":"m","m":1,"s":{"r":"Mu","p":["*%_"]},"n":"tan"},{"k":"m","m":1,"n":"atan","s":{"r":"Mu","p":["*%_"]}},{"n":"sec","s":{"p":["*%_"],"r":"Mu"},"k":"m","m":1},{"s":{"r":"Mu","p":["*%_"]},"n":"asec","k":"m","m":1},{"s":{"r":"Mu","p":["*%_"]},"n":"cosec","m":0,"k":"m"},{"s":{"p":["*%_"],"r":"Mu"},"n":"acosec","k":"m","m":0},{"s":{"p":["*%_"],"r":"Mu"},"n":"cotan","k":"m","m":0},{"s":{"r":"Mu","p":["*%_"]},"n":"acotan","k":"m","m":0},{"k":"m","m":1,"n":"sinh","s":{"p":["*%_"],"r":"Mu"}},{"n":"asinh","s":{"r":"Mu","p":["*%_"]},"m":1,"k":"m"},{"k":"m","m":1,"s":{"p":["*%_"],"r":"Mu"},"n":"cosh"},{"n":"acosh","s":{"r":"Mu","p":["*%_"]},"m":1,"k":"m"},{"n":"tanh","s":{"r":"Mu","p":["*%_"]},"m":1,"k":"m"},{"n":"atanh","s":{"r":"Mu","p":["*%_"]},"m":1,"k":"m"},{"m":1,"k":"m","s":{"r":"Mu","p":["*%_"]},"n":"atanh"},{"s":{"p":["*%_"],"r":"Mu"},"n":"sech","m":1,"k":"m"},{"n":"asech","s":{"p":["*%_"],"r":"Mu"},"m":1,"k":"m"},{"m":1,"k":"m","n":"cosech","s":{"p":["*%_"],"r":"Mu"}},{"s":{"r":"Mu","p":["*%_"]},"n":"acosech","k":"m","m":1},{"k":"m","m":1,"n":"cotanh","s":{"r":"Mu","p":["*%_"]}},{"n":"acotanh","s":{"p":["*%_"],"r":"Mu"},"m":1,"k":"m"},{"n":"is-prime","s":{"p":["*%_"],"r":"Bool:D"},"m":0,"k":"m"},{"k":"m","m":0,"n":"narrow","s":{"r":"Mu","p":["*%_"]}},{"s":{"p":["*%_"],"r":"Mu"},"n":"sign","m":0,"k":"m"},{"m":0,"k":"m","s":{"r":"Mu","p":["*%_"]},"n":"conj"},{"m":1,"k":"m","n":"atan2","s":{"p":["Num:D $x = 1e0","*%_"],"r":"Mu"}},{"m":1,"k":"m","s":{"r":"Mu","p":["Real $x = 1e0","*%_"]},"n":"atan2"},{"m":1,"k":"m","s":{"r":"Mu","p":["Cool $x = 1e0","*%_"]},"n":"atan2"},{"s":{"r":"Mu","p":["*%_"]},"n":"round","m":1,"k":"m"},{"n":"round","s":{"p":["$scale","*%_"],"r":"Mu"},"m":1,"k":"m"},{"s":{"p":["Real $angle","*%_"],"r":"Mu"},"n":"unpolar","k":"m","m":0},{"n":"cis","s":{"r":"Mu","p":["*%_"]},"k":"m","m":0},{"m":0,"k":"m","n":"Complex","s":{"p":["*%_"],"r":"Mu"}},{"s":{"p":["*%_"],"r":"Mu"},"n":"exp","m":1,"k":"m"},{"k":"m","m":1,"s":{"r":"Mu","p":["*%_"]},"n":"exp"},{"s":{"p":["$base","*%_"],"r":"Mu"},"n":"exp","k":"m","m":1},{"s":{"p":["*%_"],"r":"Mu"},"n":"truncate","k":"m","m":0},{"k":"m","m":0,"n":"polymod","s":{"r":"Mu","p":["+@mods","*%_"]}},{"s":{"r":"Mu","p":["Int:D $base","$digits? is copy","*%_"]},"n":"base","m":0,"k":"m"},{"k":"m","m":0,"s":{"r":"Mu","p":["*%_"]},"n":"log10"},{"s":{"p":["Cool $n","*%_"],"r":"Mu"},"n":"roots","m":0,"k":"m"},{"m":1,"k":"m","n":"WHICH","s":{"r":"ValueObjAt:D","p":["*%_"]}},{"s":{"r":"ObjAt:D","p":["*%_"]},"n":"WHICH","k":"m","m":1},{"m":1,"k":"m","s":{"p":["*%_"],"r":"ValueObjAt:D"},"n":"WHICH"},{"k":"m","m":1,"s":{"r":"Bool","p":["*%_"]},"n":"Bool"},{"n":"Bool","s":{"r":"Mu","p":["*%_"]},"k":"m","m":1},{"s":{"r":"Mu","p":["*%_"]},"n":"Bool","k":"m","m":1},{"m":1,"k":"m","s":{"p":["*%_"],"r":"Mu"},"n":"Bool"},{"m":1,"k":"m","n":"new","s":{"r":"Mu","p":["*%attrinit"]}},{"m":1,"k":"m","n":"new","s":{"r":"Mu","p":["$","*@","*%_"]}},{"m":1,"k":"m","s":{"r":"Mu","p":["*%_"]},"n":"new"},{"k":"m","m":1,"s":{"r":"Mu","p":["$n","*%_"]},"n":"new"},{"s":{"p":["*%_"],"r":"Mu"},"n":"perl","k":"m","m":1},{"n":"perl","s":{"p":["*%_"],"r":"Mu"},"m":1,"k":"m"},{"m":1,"k":"m","n":"perl","s":{"p":["*%_"],"r":"Mu"}},{"k":"m","m":1,"n":"Str","s":{"r":"Mu","p":["*%_"]}},{"s":{"p":["*%_"],"r":"Mu"},"n":"Str","m":1,"k":"m"},{"n":"Str","s":{"p":["*%_"],"r":"Mu"},"k":"m","m":1},{"s":{"p":["*%_"],"r":"Mu"},"n":"Str","m":1,"k":"m"},{"k":"m","m":1,"s":{"p":["*%_"],"r":"Mu"},"n":"Real"},{"k":"m","m":1,"n":"Real","s":{"r":"Mu","p":["*%_"]}},{"s":{"p":["*%_"],"r":"Mu"},"n":"Real","m":1,"k":"m"},{"s":{"p":["*%_"],"r":"Mu"},"n":"Real","k":"m","m":1},{"m":1,"k":"m","n":"Numeric","s":{"p":["*%_"],"r":"Mu"}},{"n":"Numeric","s":{"p":["*%_"],"r":"Mu"},"k":"m","m":1},{"k":"m","m":1,"s":{"p":["*%_"],"r":"Mu"},"n":"Numeric"},{"m":1,"k":"m","n":"ACCEPTS","s":{"p":["\\topic","*%_"],"r":"Mu"}},{"k":"m","m":1,"s":{"p":["Mu:U \\topic","*%_"],"r":"Mu"},"n":"ACCEPTS"},{"n":"ACCEPTS","s":{"r":"Mu","p":["Mu:D \\a","*%_"]},"k":"m","m":1},{"s":{"r":"Bool","p":["Mu:U $","*%_"]},"n":"ACCEPTS","m":1,"k":"m"},{"k":"m","m":1,"n":"ACCEPTS","s":{"r":"Bool:D","p":["\\topic","*%_"]}},{"k":"m","m":1,"s":{"r":"Mu","p":["Any:D \\a","*%_"]},"n":"ACCEPTS"},{"n":"gist","s":{"r":"Mu","p":["*%_"]},"m":1,"k":"m"},{"s":{"p":["*%_"],"r":"Mu"},"n":"gist","m":1,"k":"m"},{"m":1,"k":"m","s":{"p":["*%_"],"r":"Mu"},"n":"gist"},{"m":1,"k":"m","n":"DUMP","s":{"r":"Mu","p":["*%_"]}},{"s":{"p":[":$indent-step = 4",":%ctx","*%_"],"r":"Mu"},"n":"DUMP","k":"m","m":1},{"s":{"p":["*%_"],"r":"Mu"},"n":"DUMP","m":1,"k":"m"},{"n":"BUILDALL","s":{"p":["@auto","%init","*%_"],"r":"Mu"},"m":0,"k":"s"}],"k":"c"},{"m":[{"n":"BUILD","s":{"p":[":async_handles(@!async_handles)","*%_"],"r":"Nil"},"m":0,"k":"s"},{"m":0,"k":"m","s":{"p":["*%_"],"r":"Mu"},"n":"cancel"},{"n":"cancelled","s":{"p":["*%_"],"r":"Mu"},"m":0,"k":"m"},{"m":0,"k":"s","s":{"p":["@auto","%init","*%_"],"r":"Mu"},"n":"BUILDALL"}],"k":"c","b":"A","a":[{"n":"$.cancelled","t":"Mu","k":"v"},{"n":"$!lock","t":"Mu","k":"v"},{"t":"Positional","n":"@!async_handles","k":"v"}],"d":"TITLE\nclass Cancellation\n\nSUBTITLE\nRemoval of a task from a Scheduler before normal completion\n\n    my class Cancellation {}\n\nA low level part of the Raku concurrency system. Some Scheduler objects\nreturn a Cancellation with the .cue method which can be used to cancel the\nscheduled execution before normal completion. Cancellation.cancelled is a\nboolean that is true after #cancel is called.\n\n","n":"Cancellation","t":"Cancellation"},{"n":"SIGPWR","t":"Signal","k":"e"},{"t":"Sub+{is-pure}+{Precedence}","n":"&infix:<−>","k":"v"},{"k":"s","m":1,"s":{"p":["$x = 0"],"r":"Mu"},"n":"infix:<->"},{"s":{"p":["\\a","\\b"],"r":"Mu"},"n":"infix:<->","m":1,"k":"s"},{"k":"s","m":1,"s":{"r":"Mu","p":["Real \\a","Real \\b"]},"n":"infix:<->"},{"m":1,"k":"s","n":"infix:<->","s":{"r":"Int:D","p":["Int:D \\a","Int:D \\b"]}},{"m":1,"k":"s","s":{"p":["int $a","int $b"],"r":"int"},"n":"infix:<->"},{"k":"s","m":1,"s":{"p":["Num:D \\a","Num:D \\b"],"r":"Mu"},"n":"infix:<->"},{"m":1,"k":"s","s":{"p":["num $a","num $b"],"r":"num"},"n":"infix:<->"},{"s":{"r":"Mu","p":["Range:D \\r","Real:D \\v"]},"n":"infix:<->","m":1,"k":"s"},{"s":{"p":["Rational:D \\a","Rational:D \\b"],"r":"Mu"},"n":"infix:<->","k":"s","m":1},{"k":"s","m":1,"n":"infix:<->","s":{"p":["Rational:D \\a","Int:D \\b"],"r":"Mu"}},{"n":"infix:<->","s":{"p":["Int:D \\a","Rational:D \\b"],"r":"Mu"},"k":"s","m":1},{"n":"infix:<->","s":{"r":"Complex:D","p":["Complex:D \\a","Complex:D \\b"]},"k":"s","m":1},{"s":{"r":"Complex:D","p":["Complex:D \\a","Num(Real) \\b"]},"n":"infix:<->","m":1,"k":"s"},{"k":"s","m":1,"n":"infix:<->","s":{"p":["Num(Real) \\a","Complex:D \\b"],"r":"Complex:D"}},{"k":"s","m":1,"s":{"p":["Instant:D $a","Instant:D $b"],"r":"Duration:D"},"n":"infix:<->"},{"n":"infix:<->","s":{"p":["Instant:D $a","Real:D $b"],"r":"Instant:D"},"k":"s","m":1},{"m":1,"k":"s","n":"infix:<->","s":{"r":"Duration:D","p":["Duration:D $a","Real $b"]}},{"k":"s","m":1,"s":{"r":"Duration:D","p":["Duration:D $a","Duration:D $b"]},"n":"infix:<->"},{"k":"s","m":1,"s":{"r":"Duration:D","p":["DateTime:D \\a","DateTime:D \\b"]},"n":"infix:<->"},{"n":"infix:<->","s":{"r":"DateTime:D","p":["DateTime:D \\a","Duration:D \\b"]},"k":"s","m":1},{"m":1,"k":"s","s":{"p":["Date:D $d","Int:D $x"],"r":"Date:D"},"n":"infix:<->"},{"k":"s","m":1,"s":{"r":"Int:D","p":["Date:D $a","Date:D $b"]},"n":"infix:<->"},{"k":"v","n":"&deepmap","t":"Sub"},{"k":"s","m":1,"s":{"r":"Mu","p":["\\op","\\obj"]},"n":"deepmap"},{"k":"s","m":1,"n":"deepmap","s":{"p":["\\op","Associative \\h"],"r":"Mu"}},{"k":"v","n":"&infix:<÷>","t":"Sub+{is-pure}+{Precedence}"},{"s":{"r":"Mu","p":[]},"n":"infix:</>","m":1,"k":"s"},{"n":"infix:</>","s":{"r":"Mu","p":["$x"]},"k":"s","m":1},{"n":"infix:</>","s":{"p":["\\a","\\b"],"r":"Mu"},"m":1,"k":"s"},{"s":{"r":"Mu","p":["Real \\a","Real \\b"]},"n":"infix:</>","k":"s","m":1},{"s":{"p":["Num:D \\a","Num:D \\b"],"r":"Mu"},"n":"infix:</>","m":1,"k":"s"},{"m":1,"k":"s","s":{"r":"num","p":["num $a","num $b"]},"n":"infix:</>"},{"s":{"p":["Range:D \\r","Real:D \\v"],"r":"Mu"},"n":"infix:</>","m":1,"k":"s"},{"m":1,"k":"s","n":"infix:</>","s":{"p":["Rational:D \\a","Rational:D \\b"],"r":"Mu"}},{"s":{"p":["Rational:D \\a","Int:D \\b"],"r":"Mu"},"n":"infix:</>","k":"s","m":1},{"m":1,"k":"s","s":{"r":"Mu","p":["Int:D \\a","Rational:D \\b"]},"n":"infix:</>"},{"n":"infix:</>","s":{"r":"Mu","p":["Int:D \\a","Int:D \\b"]},"k":"s","m":1},{"s":{"r":"Complex:D","p":["Complex:D \\a","Complex:D \\b"]},"n":"infix:</>","k":"s","m":1},{"s":{"p":["Complex:D \\a","Real \\b"],"r":"Complex:D"},"n":"infix:</>","k":"s","m":1},{"s":{"r":"Complex:D","p":["Real \\a","Complex:D \\b"]},"n":"infix:</>","m":1,"k":"s"},{"n":"Uni","t":"Uni","b":"A","k":"c","m":[{"k":"m","m":0,"s":{"p":["*@codes","*%_"],"r":"Mu"},"n":"new"},{"s":{"p":["*%_"],"r":"Mu"},"n":"list","m":0,"k":"m"},{"m":0,"k":"m","s":{"r":"Mu","p":["*%_"]},"n":"Uni"},{"m":0,"k":"m","s":{"p":["*%_"],"r":"Mu"},"n":"NFC"},{"s":{"r":"Mu","p":["*%_"]},"n":"NFD","m":0,"k":"m"},{"m":0,"k":"m","s":{"r":"Mu","p":["*%_"]},"n":"NFKC"},{"n":"NFKD","s":{"p":["*%_"],"r":"Mu"},"k":"m","m":0},{"k":"m","m":0,"s":{"p":["*%_"],"r":"Mu"},"n":"codes"},{"s":{"p":["*%_"],"r":"Mu"},"n":"elems","k":"m","m":0},{"n":"Numeric","s":{"p":["*%_"],"r":"Mu"},"k":"m","m":0},{"k":"m","m":0,"n":"Int","s":{"p":["*%_"],"r":"Mu"}},{"k":"m","m":0,"n":"of","s":{"r":"Mu","p":["*%_"]}},{"k":"m","m":1,"n":"Str","s":{"p":["*%_"],"r":"Mu"}},{"n":"Str","s":{"r":"Mu","p":["*%_"]},"k":"m","m":1},{"n":"Str","s":{"r":"Mu","p":["*%_"]},"k":"m","m":1},{"k":"m","m":1,"n":"Bool","s":{"r":"Bool","p":["*%_"]}},{"s":{"p":["*%_"],"r":"Mu"},"n":"Bool","k":"m","m":1},{"m":1,"k":"m","s":{"r":"Mu","p":["*%_"]},"n":"Bool"},{"s":{"p":["Any:D $","*%_"],"r":"Bool"},"n":"EXISTS-POS","m":1,"k":"m"},{"m":1,"k":"m","n":"EXISTS-POS","s":{"r":"Mu","p":["Any:U $pos","*%_"]}},{"n":"EXISTS-POS","s":{"r":"Bool:D","p":["int \\pos","*%_"]},"k":"m","m":1},{"s":{"r":"Bool:D","p":["Int:D \\pos","*%_"]},"n":"EXISTS-POS","m":1,"k":"m"},{"n":"EXISTS-POS","s":{"p":["Num:D \\pos","*%_"],"r":"Bool:D"},"m":1,"k":"m"},{"n":"EXISTS-POS","s":{"p":["Any:D \\pos","*%_"],"r":"Bool:D"},"m":1,"k":"m"},{"k":"m","m":1,"s":{"p":["Any:U \\pos","*%_"],"r":"Mu"},"n":"EXISTS-POS"},{"k":"m","m":1,"n":"EXISTS-POS","s":{"r":"Bool:D","p":["\\one","\\two","*%_"]}},{"s":{"r":"Bool:D","p":["\\one","\\two","\\three","*%_"]},"n":"EXISTS-POS","k":"m","m":1},{"k":"m","m":1,"s":{"r":"Bool:D","p":["**@indices","*%_"]},"n":"EXISTS-POS"},{"m":1,"k":"m","s":{"p":["int \\pos","*%_"],"r":"Mu"},"n":"EXISTS-POS"},{"k":"m","m":1,"n":"EXISTS-POS","s":{"p":["Int:D \\pos","*%_"],"r":"Mu"}},{"s":{"p":["int \\pos","*%_"],"r":"Mu"},"n":"AT-POS","m":1,"k":"m"},{"s":{"r":"Mu","p":["Int:D \\pos","*%_"]},"n":"AT-POS","m":1,"k":"m"},{"n":"AT-POS","s":{"p":["Num:D \\pos","*%_"],"r":"Mu"},"m":1,"k":"m"},{"s":{"r":"Mu","p":["Any:D \\pos","*%_"]},"n":"AT-POS","m":1,"k":"m"},{"s":{"p":["int \\pos","*%_"],"r":"Mu"},"n":"AT-POS","k":"m","m":1},{"s":{"r":"Mu","p":["Int:D \\pos","*%_"]},"n":"AT-POS","k":"m","m":1},{"n":"AT-POS","s":{"r":"Mu","p":["Num:D \\pos","*%_"]},"m":1,"k":"m"},{"n":"AT-POS","s":{"r":"Mu","p":["Any:D \\pos","*%_"]},"m":1,"k":"m"},{"k":"m","m":1,"s":{"p":["Any:U \\pos","*%_"],"r":"Mu"},"n":"AT-POS"},{"n":"AT-POS","s":{"p":["\\one","\\two","*%_"],"r":"Mu"},"m":1,"k":"m"},{"m":1,"k":"m","s":{"p":["\\one","\\two","\\three","*%_"],"r":"Mu"},"n":"AT-POS"},{"k":"m","m":1,"n":"AT-POS","s":{"r":"Mu","p":["**@indices","*%_"]}},{"m":1,"k":"m","s":{"r":"Mu","p":["int \\pos","*%_"]},"n":"AT-POS"},{"m":1,"k":"m","s":{"p":["Int:D \\pos","*%_"],"r":"Mu"},"n":"AT-POS"},{"s":{"p":["*%_"],"r":"Mu"},"n":"gist","k":"m","m":1},{"k":"m","m":1,"s":{"r":"Mu","p":["*%_"]},"n":"gist"},{"k":"m","m":1,"n":"gist","s":{"p":["*%_"],"r":"Mu"}},{"k":"m","m":1,"n":"perl","s":{"p":["*%_"],"r":"Mu"}},{"m":1,"k":"m","n":"perl","s":{"p":["*%_"],"r":"Mu"}},{"k":"m","m":1,"s":{"p":["*%_"],"r":"Mu"},"n":"perl"},{"s":{"r":"Mu","p":["@auto","%init","*%_"]},"n":"BUILDALL","m":0,"k":"s"}],"d":"TITLE\nclass Uni\n\nSUBTITLE\nA string of Unicode codepoints\n\n    class Uni does Positional[uint32] does Stringy { }\n\nUnlike Str, which is made of Grapheme clusters, Uni is string strictly made\nof Unicode codepoints. That is, base characters and combining characters\nare separate elements of a Uni instance.\n\nUni presents itself with a list-like interface of integer Codepoints.\n\nTypical usage of Uni is through one of its subclasses, NFC, NFD, NFKD and\nNFKC, which represent strings in one of the Unicode Normalization Forms of\nthe same name.\n\n"},{"n":"Method","t":"Method","a":[{"n":"@!dispatchees","t":"List","k":"v"},{"t":"Mu","n":"$!dispatcher_cache","k":"v"},{"n":"$!dispatcher","t":"Mu","k":"v"},{"k":"v","t":"int","n":"$!rw"},{"k":"v","t":"Mu","n":"$!inline_info"},{"t":"int","n":"$!yada","k":"v"},{"n":"$!package","t":"Mu","k":"v"},{"k":"v","t":"int","n":"$!onlystar"},{"k":"v","t":"List","n":"@!dispatch_order"},{"k":"v","n":"$!dispatch_cache","t":"Mu"},{"n":"$!why","t":"Mu","k":"v"},{"k":"v","t":"Code","n":"$!do"},{"n":"$!signature","t":"Signature","k":"v"},{"n":"@!compstuff","t":"List","k":"v"}],"b":"A","m":[{"n":"gist","s":{"r":"Mu","p":["*%_"]},"k":"m","m":1},{"k":"m","m":1,"s":{"p":["*%_"],"r":"Mu"},"n":"gist"},{"m":1,"k":"m","s":{"r":"Mu","p":["*%_"]},"n":"gist"},{"k":"m","m":1,"n":"gist","s":{"r":"Mu","p":["*%_"]}},{"n":"BUILDALL","s":{"r":"Mu","p":["@auto","%init","*%_"]},"m":0,"k":"s"},{"k":"m","m":0,"s":{"p":["*%_"],"r":"Mu"},"n":"onlystar"},{"m":0,"k":"m","n":"leave","s":{"p":["*@","*%_"],"r":"Mu"}},{"k":"m","m":0,"n":"candidates","s":{"p":["*%_"],"r":"Mu"}},{"s":{"r":"Mu","p":["Capture:D $c","*%_"]},"n":"cando","k":"m","m":0},{"n":"unwrap","s":{"r":"Mu","p":["$handle","*%_"]},"k":"m","m":0},{"k":"m","m":0,"s":{"p":["*%_"],"r":"Mu"},"n":"multi"},{"k":"m","m":1,"s":{"r":"Mu","p":["*%_"]},"n":"perl"},{"s":{"r":"Mu","p":["*%_"]},"n":"perl","m":1,"k":"m"},{"m":1,"k":"m","s":{"r":"Mu","p":["*%_"]},"n":"perl"},{"k":"m","m":1,"n":"perl","s":{"p":["*%_"],"r":"Mu"}},{"m":1,"k":"m","n":"perl","s":{"p":["*%_"],"r":"Mu"}},{"m":0,"k":"m","s":{"p":["*%_"],"r":"Nil"},"n":"soft"},{"s":{"r":"Mu","p":["&wrapper","*%_"]},"n":"wrap","m":0,"k":"m"},{"n":"yada","s":{"p":["*%_"],"r":"Mu"},"k":"m","m":0},{"m":1,"k":"m","n":"gist","s":{"r":"Mu","p":["*%_"]}},{"m":1,"k":"m","n":"gist","s":{"r":"Mu","p":["*%_"]}},{"m":1,"k":"m","n":"gist","s":{"p":["*%_"],"r":"Mu"}},{"n":"package","s":{"r":"Mu","p":["*%_"]},"m":0,"k":"m"},{"m":0,"k":"s","s":{"r":"Mu","p":["@auto","%init","*%_"]},"n":"BUILDALL"},{"s":{"p":["Failure:D \\failure","*%_"],"r":"Mu"},"n":"POSITIONS","k":"m","m":1},{"k":"m","m":1,"s":{"p":["Any:D \\list","*%_"],"r":"Mu"},"n":"POSITIONS"},{"s":{"r":"Mu","p":["Str:D \\name","*%_"]},"n":"has-phaser","m":0,"k":"m"},{"k":"m","m":0,"s":{"r":"Mu","p":["Str:D $name","*%_"]},"n":"phasers"},{"k":"m","m":0,"n":"WHY","s":{"r":"Mu","p":["*%_"]}},{"n":"perl","s":{"r":"Mu","p":["*%_"]},"m":1,"k":"m"},{"k":"m","m":1,"n":"perl","s":{"r":"Mu","p":["*%_"]}},{"m":1,"k":"m","n":"perl","s":{"r":"Mu","p":["*%_"]}},{"n":"perl","s":{"p":["*%_"],"r":"Mu"},"k":"m","m":1},{"m":0,"k":"m","n":"of","s":{"p":["*%_"],"r":"Mu"}},{"s":{"r":"Nil","p":["Str $name","*%_"]},"n":"fire_if_phasers","k":"m","m":0},{"m":0,"k":"m","s":{"r":"Nil","p":["$why","*%_"]},"n":"set_why"},{"m":0,"k":"m","n":"returns","s":{"r":"Mu","p":["*%_"]}},{"s":{"p":["*%_"],"r":"Mu"},"n":"has-phasers","m":0,"k":"m"},{"n":"add_phaser","s":{"r":"Nil","p":["Str:D \\name","&block","*%_"]},"m":0,"k":"m"},{"s":{"r":"Nil","p":["Str $name","*%_"]},"n":"fire_phasers","k":"m","m":0},{"s":{"p":["@auto","%init","*%_"],"r":"Mu"},"n":"BUILDALL","k":"s","m":0},{"n":"static_id","s":{"p":["*%_"],"r":"Mu"},"k":"m","m":0},{"n":"returns","s":{"p":["*%_"],"r":"Mu"},"k":"m","m":0},{"s":{"p":["Capture:D $c","*%_"],"r":"Mu"},"n":"cando","k":"m","m":0},{"s":{"r":"Mu","p":["*%_"]},"n":"outer","k":"m","m":0},{"m":1,"k":"m","s":{"p":["*%attrinit"],"r":"Mu"},"n":"new"},{"k":"m","m":1,"n":"new","s":{"p":["$","*@","*%_"],"r":"Mu"}},{"n":"new","s":{"r":"Mu","p":["*%_"]},"m":1,"k":"m"},{"n":"count","s":{"p":["*%_"],"r":"Mu"},"k":"m","m":0},{"k":"m","m":1,"n":"ACCEPTS","s":{"r":"Mu","p":["\\topic","*%_"]}},{"k":"m","m":1,"s":{"r":"Mu","p":["Mu:U \\topic","*%_"]},"n":"ACCEPTS"},{"m":1,"k":"m","n":"ACCEPTS","s":{"p":["Mu:D \\a","*%_"],"r":"Mu"}},{"n":"ACCEPTS","s":{"p":["Mu:U $","*%_"],"r":"Bool"},"m":1,"k":"m"},{"s":{"p":["\\topic","*%_"],"r":"Bool:D"},"n":"ACCEPTS","k":"m","m":1},{"m":1,"k":"m","n":"ACCEPTS","s":{"p":["Mu $topic is raw","*%_"],"r":"Mu"}},{"s":{"p":["*%_"],"r":"Mu"},"n":"perl","m":1,"k":"m"},{"s":{"r":"Mu","p":["*%_"]},"n":"perl","m":1,"k":"m"},{"n":"perl","s":{"p":["*%_"],"r":"Mu"},"k":"m","m":1},{"k":"m","m":0,"n":"of","s":{"r":"Mu","p":["*%_"]}},{"m":0,"k":"m","n":"file","s":{"r":"Mu","p":["*%_"]}},{"m":0,"k":"m","s":{"r":"Mu","p":["*%_"]},"n":"signature"},{"n":"Capture","s":{"p":["*%_"],"r":"Mu"},"k":"m","m":0},{"m":1,"k":"m","n":"Str","s":{"p":["*%_"],"r":"Mu"}},{"k":"m","m":1,"s":{"p":["*%_"],"r":"Mu"},"n":"Str"},{"n":"Str","s":{"p":["*%_"],"r":"Mu"},"m":1,"k":"m"},{"k":"m","m":0,"n":"assuming","s":{"p":["|primers is raw"],"r":"Mu"}},{"m":1,"k":"m","s":{"r":"Mu","p":["*%_"]},"n":"prec"},{"s":{"r":"Mu","p":["Str:D $","*%_"]},"n":"prec","k":"m","m":1},{"m":0,"k":"m","s":{"r":"Mu","p":["*%_"]},"n":"arity"},{"k":"m","m":0,"n":"line","s":{"p":["*%_"],"r":"Mu"}},{"n":"BUILDALL","s":{"p":["@auto","%init","*%_"],"r":"Mu"},"k":"s","m":0}],"k":"c","d":"TITLE\nclass Method\n\nSUBTITLE\nMember function\n\n    class Method is Routine { }\n\nA type for methods that behave the same way then Routine with some\nexceptions listed in the following. For details of a method's parameter\nlist see Signature.\n\nTo create a method outside a class definition, use the declarators my and\nmethod. If an identifier is provided the methods name will be injected into\nthe scope specified by the declarator.\n\n    my $m = method ($invocant: $param) {\n        say \"$invocant: '$param'\";\n    }\n    \"greeting\".$m(\"hello\");  # OUTPUT: «greeting: 'hello'␤»\n\n    <a b c>.&(my method (List:D:) { say self.perl; self }).say;\n    # OUTPUT: «(\"a\", \"b\", \"c\")␤(a b c)␤»\n\nThe invocant of a method defaults to self. A type constraint including a\ntype-smiley can be used and is honored both for methods defined in a class\nand for free floating methods. Call the latter with .& on an object.\n\n    my method m(Int:D: $b){\n        say self.^name\n    }\n    my $i = 1;\n    $i.&m(<a>);\n    # OUTPUT: «Int␤»\n\n "},{"k":"v","t":"Sub+{Precedence}","n":"&infix:<~~>"},{"s":{"r":"Mu","p":["Mu \\topic","Mu \\matcher"]},"n":"infix:<~~>","k":"s","m":1},{"s":{"r":"Mu","p":["Mu \\topic","Regex:D \\matcher"]},"n":"infix:<~~>","m":1,"k":"s"},{"t":"Junction","n":"Junction","d":"TITLE\nclass Junction\n\nSUBTITLE\nLogical superposition of values\n\n    class Junction is Mu { }\n\nA junction is an unordered composite value of zero or more values.\nJunctions autothread over many operations, which means that the operation\nis carried out for each junction element (also known as eigenstate), and\nthe result is junction of the return values of all those operators.\n\nJunctions collapse into a single value in boolean context, so when used in\na conditional, a negation or an explicit coercion to Bool through the so or\n? prefix operators. The semantics of this collapse depend on the junction\ntype, which can be all, any, one or none.\n\n  type  constructor  operator  True if ...\n  all   all          &         no value evaluates to False\n  any   any          |         at least one value evaluates to True\n  one   one          ^         exactly one value evaluates to True\n  none  none                   no value evaluates to True\n\n\nAs the table shows, in order to create junctions, you use the string that\nrepresents the type followed by any object, or else call .all, .none or\n.one on the object.\n\n    say so 3 == (1..30).one;         # OUTPUT: «True␤»\n    say so (\"a\" ^ \"b\" ^ \"c\") eq \"a\"; # OUTPUT: «True␤»\n\nJunctions are very special objects. They fall outside the Any hierarchy,\nbeing only, as any other object, subclasses of Mu. That enables a feature\nfor most methods: autothreading. Autothreading happens when a junction is\nbound to a parameter of a code object that doesn't accept values of type\nJunction. Instead of producing an error, the signature binding is repeated\nfor each value of the junction.\n\nExample:\n\n    my $j = 1|2;\n    if 3 == $j + 1 {\n        say 'yes';\n    }\n\nFirst autothreads over the infix:<+>  operator, producing the Junction 2|3.\nThe next autothreading step is over infix:<==> , which produces False|True.\nThe if conditional evaluates the junction in boolean context, which\ncollapses it to True. So the code prints yes\\n.\n\nThe type of a Junction does not affect the number of items in the resultant\nJunction after autothreading. For example, using a one Junction during Hash\nkey lookup, still results in a Junction with several items. It is only in\nboolean context would the type of the Junction come into play:\n\n    my %h = :42foo, :70bar;\n    say    %h{one <foo meow>}:exists; # OUTPUT: «one(True, False)␤»\n    say so %h{one <foo meow>}:exists; # OUTPUT: «True␤»\n    say    %h{one <foo  bar>}:exists; # OUTPUT: «one(True, True)␤»\n    say so %h{one <foo  bar>}:exists; # OUTPUT: «False␤»\n\nNote that the compiler is allowed, but not required, to parallelize\nautothreading (and Junction behavior in general), so it is usually an error\nto autothread junctions over code with side effects.\n\nAutothreading implies that the function that's autothreaded will also\nreturn a Junction of the values that it would usually return.\n\n    (1..3).head( 2|3 ).say; # OUTPUT: «any((1 2), (1 2 3))␤»\n\nSince .head returns a list, the autothreaded version returns a Junction of\nlists.\n\n    (1..3).contains( 2&3 ).say; # OUTPUT: «all(True, True)␤»\n\nLikewise, .contains returns a Boolean; thus, the autothreaded version\nreturns a Junction of Booleans. In general, all methods and routines that\ntake an argument of type T and return type TT, will also accept junctions\nof T, returning junctions of TT.\n\nImplementations are allowed to short-circuit Junctions. For example one or\nmore routine calls (a(), b(), or c()) in the code below might not get\nexecuted at all, if the result of the conditional has been fully determined\nfrom routine calls already performed (only one truthy return value is\nenough to know the entire Junction is true):\n\n    if a() | b() | c() {\n        say \"At least one of the routines was called and returned a truthy value\"\n    }\n\n\nJunctions are meant to be used as matchers in boolean context;\nintrospection of junctions is not supported. If you feel the urge to\nintrospect a junction, use a Set or a related type instead.\n\nUsage examples:\n\n    my @list = <1 2 \"Great\">;\n    @list.append(True).append(False);\n    my @bool_or_int = grep Bool|Int, @list;\n\n    sub is_prime(Int $x) returns Bool {\n        # 'so' is for boolean context\n        so $x %% none(2..$x.sqrt);\n    }\n    my @primes_ending_in_1 = grep &is_prime & / 1$ /, 2..100;\n    say @primes_ending_in_1;        # OUTPUT: «[11 31 41 61 71]␤»\n\n    my @exclude = <~ .git>;\n    for dir(\".\") { say .Str if .Str.ends-with(none @exclude) }\n\nSpecial care should be taken when using all with arguments that may produce\nan empty list:\n\n    my @a = ();\n    say so all(@a) # True, because there are 0 False's\n\nTo express \"all, but at least one\", you can use @a && all(@a)\n\n    my @a = ();\n    say so @a && all(@a);   # OUTPUT: «False␤»\n\nNegated operators are special-cased when it comes to autothreading. $a !op\n$b is rewritten internally as !($a op $b). The outer negation collapses any\njunctions, so the return value always a plain Bool.\n\n    my $word = 'yes';\n    my @negations = <no none never>;\n    if $word !eq any @negations {\n        say '\"yes\" is not a negation';\n    }\n\nNote that without this special-casing, an expression like $word ne any\n@words would always evaluate to True for non-trivial lists on one side.\n\nFor this purpose, infix:<ne>  counts as a negation of infix:<eq> .\n\nIn general it is more readable to use a positive comparison operator and a\nnegated junction:\n\n    my $word = 'yes';\n    my @negations = <no none never>;\n    if $word eq none @negations {\n        say '\"yes\" is not a negation';\n    }\n\nFailures and exceptions\n\nFailures are just values like any other, as far as Junctions are\nconcerned:\n\n    my $j = +any \"not a number\", \"42\", \"2.1\";\n    my @list = gather for $j -> $e {\n        take $e if $e.defined;\n    }\n    @list.say; # OUTPUT: «[42 2.1]␤»\n\nAbove, we've used prefix + operator on a Junction to coerce the strings\ninside of it to Numeric. Since the operator returns a Failure when a Str\nthat doesn't contain a number gets coerced to Numeric, one of the elements\nin the Junction is a Failure. Failures do not turn into exceptions until\nthey are used or sunk, but we can check for definedness to avoid that. That\nis what we do in the loop that runs over the elements of the junction,\nadding them to a list only if they are defined.\n\nThe exception will be thrown, if you try to use the Failure as a value—just\nlike as if this Failure were on its own and not part of the Junction:\n\n    my $j = +any \"not a number\", \"42\", \"2.1\";\n    try say $j == 42;\n    $! and say \"Got exception: $!.^name()\";\n    # OUTPUT: «Got exception: X::Str::Numeric␤»\n\n\nNote that if an exception gets thrown when any of the values in a Junction\nget computed, it will be thrown just as if the problematic value were\ncomputed on its own and not with a Junction; you can't just compute the\nvalues that work while ignoring exceptions:\n\n    sub calc ($_) { die when 13 }\n    my $j = any 1..42;\n    say try calc $j; # OUTPUT: «Nil␤»\n\nOnly one value above causes an exception, but the result of the try block\nis still a Nil. A possible way around it is to cheat and evaluate the\nvalues of the Junction individually and then re-create the Junction from\nthe result:\n\n    sub calc ($_) { die when 13 }\n    my $j = any 1..42;\n    $j = any (gather $j».take).grep: {Nil !=== try calc $_};\n    say so $j == 42; # OUTPUT: «True␤»\n\nSmartmatching\n\nNote that using Junctions on the right-hand side of ~~ works slightly\ndifferently than using Junctions with other operators.\n\nConsider this example:\n\n    say 25 == (25 | 42);    # OUTPUT: «any(True, False)␤» – Junction\n    say 25 ~~ (25 | 42);    # OUTPUT: «True␤»             – Bool\n\nThe reason is that == (and most other operators) are subject to\nauto-threading, and therefore you will get a Junction as a result. On the\nother hand, ~~ will call .ACCEPTS on the right-hand-side (in this case on a\nJunction) and the result will be a Bool.\n\n","m":[{"n":"INFIX-TWO","s":{"p":["Junction:D \\a","Junction:D \\b","*%_"],"r":"Mu"},"m":0,"k":"m"},{"m":1,"k":"m","s":{"p":["\\values","Str :$type!","*%_"],"r":"Mu"},"n":"new"},{"s":{"p":["Str:D \\type","\\values","*%_"],"r":"Mu"},"n":"new","m":1,"k":"m"},{"s":{"r":"Mu","p":["|c is raw"]},"n":"CALL-ME","k":"m","m":0},{"k":"m","m":0,"s":{"r":"Nil","p":["*%_"]},"n":"sink"},{"s":{"p":["&call","*%_"],"r":"Mu"},"n":"THREAD","m":0,"k":"m"},{"n":"AUTOTHREAD","s":{"r":"Mu","p":["&call","|args is raw"]},"m":0,"k":"m"},{"s":{"r":"Bool","p":["*%_"]},"n":"defined","m":1,"k":"m"},{"m":1,"k":"m","n":"defined","s":{"r":"Bool","p":["*%_"]}},{"k":"m","m":1,"s":{"r":"Mu","p":["*%_"]},"n":"defined"},{"m":1,"k":"m","n":"Bool","s":{"p":["*%_"],"r":"Bool"}},{"n":"Bool","s":{"r":"Mu","p":["*%_"]},"m":1,"k":"m"},{"n":"Bool","s":{"p":["*%_"],"r":"Mu"},"m":1,"k":"m"},{"m":1,"k":"m","s":{"r":"Mu","p":["\\topic","*%_"]},"n":"ACCEPTS"},{"s":{"r":"Mu","p":["Mu:U \\topic","*%_"]},"n":"ACCEPTS","m":1,"k":"m"},{"k":"m","m":1,"s":{"r":"Mu","p":["Mu:D \\topic","*%_"]},"n":"ACCEPTS"},{"k":"m","m":1,"n":"ACCEPTS","s":{"p":["\\topic","*%_"],"r":"Mu"}},{"s":{"r":"Mu","p":["Mu \\topic","*%_"]},"n":"ACCEPTS","m":1,"k":"m"},{"n":"Str","s":{"r":"Mu","p":["*%_"]},"k":"m","m":1},{"m":1,"k":"m","n":"Str","s":{"p":["*%_"],"r":"Mu"}},{"n":"Str","s":{"p":["*%_"],"r":"Mu"},"k":"m","m":1},{"k":"m","m":1,"n":"gist","s":{"p":["*%_"],"r":"Mu"}},{"k":"m","m":1,"s":{"r":"Mu","p":["*%_"]},"n":"gist"},{"k":"m","m":1,"n":"gist","s":{"r":"Mu","p":["*%_"]}},{"s":{"r":"Mu","p":["*%_"]},"n":"perl","m":1,"k":"m"},{"m":1,"k":"m","n":"perl","s":{"r":"Mu","p":["*%_"]}},{"s":{"p":["*%_"],"r":"Mu"},"n":"perl","m":1,"k":"m"},{"m":0,"k":"s","n":"BUILDALL","s":{"p":["@auto","%init","*%_"],"r":"Mu"}},{"s":{"r":"Mu","p":["\\type","\\values","*%_"]},"n":"!SET-SELF","k":"m","m":0}],"k":"c","a":[{"t":"Mu","n":"$!storage","k":"v"},{"t":"str","n":"$!type","k":"v"}],"b":"M"},{"t":"IterationBuffer","n":"IterationBuffer","b":"A","k":"c","m":[{"n":"clear","s":{"p":["*%_"],"r":"Nil"},"k":"m","m":0},{"s":{"p":["*%_"],"r":"Mu"},"n":"elems","m":0,"k":"m"},{"n":"push","s":{"r":"Mu","p":["Mu \\value","*%_"]},"m":0,"k":"m"},{"k":"m","m":0,"s":{"r":"Mu","p":["IterationBuffer:D \\buffer","*%_"]},"n":"append"},{"s":{"r":"Mu","p":["int $pos","*%_"]},"n":"AT-POS","m":1,"k":"m"},{"m":1,"k":"m","n":"AT-POS","s":{"p":["Int:D $pos","*%_"],"r":"Mu"}},{"m":1,"k":"m","s":{"r":"Mu","p":["int $pos","Mu \\value","*%_"]},"n":"BIND-POS"},{"n":"BIND-POS","s":{"r":"Mu","p":["Int:D $pos","Mu \\value","*%_"]},"k":"m","m":1},{"s":{"p":["*%_"],"r":"Mu"},"n":"List","k":"m","m":0},{"m":1,"k":"m","s":{"r":"Mu","p":["*%_"]},"n":"perl"},{"s":{"r":"Mu","p":["*%_"]},"n":"perl","k":"m","m":1},{"m":1,"k":"m","n":"perl","s":{"p":["*%_"],"r":"Mu"}},{"k":"s","m":0,"n":"BUILDALL","s":{"r":"Mu","p":["@auto","%init","*%_"]}}]},{"n":"&parse-names","t":"Sub","k":"v"},{"n":"parse-names","s":{"r":"Mu","p":["Str:D \\names"]},"m":0,"k":"s"},{"t":"SocketType","n":"SOCK_MAX","k":"e"},{"k":"v","t":"Sub+{is-pure}+{Precedence}","n":"&infix:<after>"},{"k":"s","m":1,"s":{"p":["$x?"],"r":"Bool"},"n":"infix:<after>"},{"m":1,"k":"s","s":{"r":"Bool:D","p":["\\a","\\b"]},"n":"infix:<after>"},{"k":"e","n":"SIGTTIN","t":"Signal"},{"n":"&infix:<ne>","t":"Sub+{is-pure}+{Precedence}","k":"v"},{"s":{"r":"Mu","p":["$x?"]},"n":"infix:<ne>","m":1,"k":"s"},{"k":"s","m":1,"n":"infix:<ne>","s":{"r":"Mu","p":["Mu \\a","Mu \\b"]}},{"k":"s","m":1,"n":"infix:<ne>","s":{"p":["\\a","\\b"],"r":"Mu"}},{"n":"infix:<ne>","s":{"p":["Blob:D \\a","Blob:D \\b"],"r":"Mu"},"k":"s","m":1},{"n":"infix:<ne>","s":{"p":["Str:D \\a","Str:D \\b"],"r":"Bool:D"},"m":1,"k":"s"},{"n":"infix:<ne>","s":{"p":["str $a","str $b"],"r":"Bool:D"},"m":1,"k":"s"},{"n":"Enumeration","t":"Enumeration","k":"ro","m":[{"n":"enums","s":{"p":["*%_"],"r":"Mu"},"m":0,"k":"m"},{"n":"pair","s":{"p":["*%_"],"r":"Mu"},"k":"m","m":0},{"m":0,"k":"m","n":"pred","s":{"p":["*%_"],"r":"Mu"}},{"s":{"p":["*%_"],"r":"Mu"},"n":"succ","k":"m","m":0}],"b":"C","a":[{"t":"Mu","n":"$.key","k":"v"},{"k":"v","t":"Mu","n":"$.value"},{"t":"int","n":"$!index","k":"v"}],"d":"TITLE\nrole Enumeration\n\nSUBTITLE\nWorking with the role behind the enum type\n\n    role Enumeration { }\n\nThis is the role implemented by the enum-pairs in the enum type. In\ngeneral, it is used to create constant sets, the elements of which become\nalso constant symbols in the current namespace and to establish a\nrelationship between the symbols belonging to the same set. In general, you\nwill find Enumeration in enum types:\n\n    enum norse-gods <Þor Oðin Loki>;\n    my $one-of-them = norse-gods.pick;\n    say $one-of-them ~~ Enumeration; # OUTPUT: «True␤»\n\nbut nothing prevents you from using it in your own programs if you want to\nrestrict somehow the relationship between the key and the value:\n\n    class DNA does Enumeration {\n        my %pairings = %( A => \"T\",\n                          T => \"A\",\n                          C => \"G\",\n                          G => \"C\" );\n\n        method new( $base-pair where \"A\" | \"C\" | \"G\" | \"T\" )  {\n            self.bless( key => $base-pair,\n                        value => %pairings{$base-pair});\n        }\n\n        multi method gist(::?CLASS:D:) {\n            return \"$!key → $!value\";\n        }\n\n    }\n\n    enum Chain ();\n    constant length = 16;\n    for <A C G T>.roll( length ) -> $letter {\n        my DNA $base = DNA.new( $letter );\n        Chain.HOW.add_enum_value( Chain, $base );\n    }\n\n    for ^length {\n        my $base = Chain.pick;\n        say \"{$base.key} and {$base.value}\";\n    }\n\n\nIn this code, DNA consumes the Enumeration role, which is from this point\nof view a pair of key and value; we can use the generated DNA objects to\ncompose an enum type from which elements can be picked one by one, with the\noutput shown below.\n\n    T and A\n    C and G\n    T and A\n    # and so on...\n\n\n"},{"n":"HardRoutine","t":"HardRoutine","m":[{"k":"m","m":0,"n":"soft","s":{"p":["*%_"],"r":"Bool"}}],"k":"ro","b":"C"},{"k":"n","n":"num64","t":"num64"},{"t":"Sub","n":"&nextsame","k":"v"},{"s":{"p":[],"r":"Mu"},"n":"nextsame","m":0,"k":"s"},{"k":"v","n":"&roots","t":"Sub+{is-pure}"},{"k":"s","m":1,"s":{"r":"Mu","p":["$x","Cool $n"]},"n":"roots"},{"s":{"p":["$x","Numeric $n"],"r":"Mu"},"n":"roots","m":1,"k":"s"},{"k":"e","t":"ProtocolFamily","n":"PF_UNIX"},{"k":"v","n":"&prefix:<^>","t":"Sub+{is-pure}+{Precedence}"},{"m":1,"k":"s","s":{"r":"Mu","p":["$max"]},"n":"prefix:<^>"},{"k":"v","n":"&uniprop-int","t":"Sub"},{"m":1,"k":"s","n":"uniprop-int","s":{"r":"Mu","p":["Str:D $str","Stringy:D $propname"]}},{"s":{"r":"Mu","p":["Int:D $code","Stringy:D $propname"]},"n":"uniprop-int","m":1,"k":"s"},{"t":"Sub+{is-pure}","n":"&none","k":"v"},{"k":"s","m":1,"n":"none","s":{"p":["@values"],"r":"Mu"}},{"k":"s","m":1,"s":{"r":"Mu","p":["+\\values is raw"]},"n":"none"},{"t":"Duration","n":"Duration","d":"TITLE\nclass Duration\n\nSUBTITLE\nLength of time\n\n    class Duration is Cool does Real { }\n\nA Duration represents a length of time in atomic seconds, with fractions.\nLike an Instant, it is epoch-agnostic.\n\nDurations can be subtracted from or added to Instants to yield another, new\nInstant. Subtracting one Instant from another yields a Duration. A Duration\ncan also result from mathematical operations between two Durations when it\nmakes sense (namely, the addition, subtraction, or modulus of two\nDurations). It can also be added, subtracted or divided modulo Real\nnumbers.\n\nThe type of object returned for other numeric operations is currently\nunspecified.","a":[{"t":"Rat","n":"$.tai","k":"v"}],"b":"C","m":[{"s":{"r":"Num:D","p":["*%_"]},"n":"Bridge","k":"m","m":0},{"s":{"r":"Num:D","p":["*%_"]},"n":"Num","m":0,"k":"m"},{"n":"Rat","s":{"r":"Rat:D","p":["*%_"]},"k":"m","m":0},{"m":0,"k":"m","s":{"p":["*%_"],"r":"Mu"},"n":"narrow"},{"n":"abs","s":{"r":"Mu","p":["*%_"]},"m":0,"k":"m"},{"n":"sign","s":{"r":"Mu","p":["*%_"]},"m":0,"k":"m"},{"k":"m","m":0,"s":{"p":["*%_"],"r":"Mu"},"n":"conj"},{"s":{"r":"Mu","p":["*%_"]},"n":"sqrt","m":0,"k":"m"},{"k":"m","m":0,"n":"rand","s":{"r":"Mu","p":["*%_"]}},{"s":{"r":"Mu","p":["*%_"]},"n":"sin","m":0,"k":"m"},{"m":0,"k":"m","s":{"r":"Mu","p":["*%_"]},"n":"asin"},{"m":0,"k":"m","n":"cos","s":{"r":"Mu","p":["*%_"]}},{"n":"acos","s":{"r":"Mu","p":["*%_"]},"m":0,"k":"m"},{"k":"m","m":0,"n":"tan","s":{"r":"Mu","p":["*%_"]}},{"m":0,"k":"m","n":"atan","s":{"r":"Mu","p":["*%_"]}},{"m":1,"k":"m","n":"atan2","s":{"r":"Mu","p":["Real $x = 1e0","*%_"]}},{"s":{"p":["Cool $x = 1e0","*%_"],"r":"Mu"},"n":"atan2","m":1,"k":"m"},{"k":"m","m":0,"s":{"p":["*%_"],"r":"Mu"},"n":"sec"},{"s":{"p":["*%_"],"r":"Mu"},"n":"asec","k":"m","m":0},{"m":0,"k":"m","n":"cosec","s":{"p":["*%_"],"r":"Mu"}},{"k":"m","m":0,"n":"acosec","s":{"p":["*%_"],"r":"Mu"}},{"n":"cotan","s":{"r":"Mu","p":["*%_"]},"k":"m","m":0},{"k":"m","m":0,"s":{"r":"Mu","p":["*%_"]},"n":"acotan"},{"k":"m","m":0,"s":{"p":["*%_"],"r":"Mu"},"n":"sinh"},{"s":{"p":["*%_"],"r":"Mu"},"n":"asinh","k":"m","m":0},{"k":"m","m":0,"n":"cosh","s":{"r":"Mu","p":["*%_"]}},{"m":0,"k":"m","s":{"r":"Mu","p":["*%_"]},"n":"acosh"},{"k":"m","m":0,"n":"tanh","s":{"r":"Mu","p":["*%_"]}},{"n":"atanh","s":{"p":["*%_"],"r":"Mu"},"k":"m","m":0},{"m":0,"k":"m","n":"sech","s":{"r":"Mu","p":["*%_"]}},{"s":{"p":["*%_"],"r":"Mu"},"n":"asech","k":"m","m":0},{"k":"m","m":0,"s":{"p":["*%_"],"r":"Mu"},"n":"cosech"},{"n":"acosech","s":{"r":"Mu","p":["*%_"]},"m":0,"k":"m"},{"s":{"p":["*%_"],"r":"Mu"},"n":"cotanh","k":"m","m":0},{"s":{"p":["*%_"],"r":"Mu"},"n":"acotanh","k":"m","m":0},{"s":{"r":"Mu","p":["*%_"]},"n":"floor","k":"m","m":0},{"n":"ceiling","s":{"p":["*%_"],"r":"Mu"},"k":"m","m":0},{"s":{"p":["*%_"],"r":"Mu"},"n":"round","k":"m","m":1},{"m":1,"k":"m","s":{"r":"Mu","p":["$scale","*%_"]},"n":"round"},{"n":"unpolar","s":{"p":["Real $angle","*%_"],"r":"Mu"},"m":0,"k":"m"},{"s":{"p":["*%_"],"r":"Mu"},"n":"cis","m":0,"k":"m"},{"n":"Complex","s":{"r":"Mu","p":["*%_"]},"m":0,"k":"m"},{"m":1,"k":"m","n":"log","s":{"r":"Mu","p":["*%_"]}},{"n":"log","s":{"r":"Mu","p":["Real $base","*%_"]},"m":1,"k":"m"},{"k":"m","m":1,"s":{"r":"Mu","p":["Cool $base","*%_"]},"n":"log"},{"m":1,"k":"m","n":"log","s":{"p":["Numeric $base","*%_"],"r":"Mu"}},{"k":"m","m":1,"n":"exp","s":{"p":["*%_"],"r":"Mu"}},{"s":{"p":["$base","*%_"],"r":"Mu"},"n":"exp","m":1,"k":"m"},{"m":0,"k":"m","n":"truncate","s":{"p":["*%_"],"r":"Mu"}},{"m":0,"k":"m","s":{"p":["*%_"],"r":"Mu"},"n":"isNaN"},{"s":{"r":"Mu","p":["+@mods","*%_"]},"n":"polymod","m":0,"k":"m"},{"s":{"p":["Int:D $base","$digits? is copy","*%_"],"r":"Mu"},"n":"base","k":"m","m":0},{"k":"m","m":0,"n":"Int","s":{"p":["*%_"],"r":"Mu"}},{"m":0,"k":"m","n":"log10","s":{"p":["*%_"],"r":"Mu"}},{"k":"m","m":0,"s":{"r":"Mu","p":["Cool $n","*%_"]},"n":"roots"},{"k":"m","m":0,"n":"FatRat","s":{"p":["*%_"],"r":"Mu"}},{"m":0,"k":"m","s":{"p":["*%_"],"r":"Mu"},"n":"succ"},{"n":"pred","s":{"p":["*%_"],"r":"Mu"},"k":"m","m":0},{"s":{"r":"Mu","p":["*%attrinit"]},"n":"new","k":"m","m":1},{"m":1,"k":"m","n":"new","s":{"r":"Mu","p":["$","*@","*%_"]}},{"s":{"r":"Duration:D","p":["Rat:D \\tai","*%_"]},"n":"new","k":"m","m":1},{"n":"new","s":{"r":"Duration:D","p":["\\value","*%_"]},"k":"m","m":1},{"k":"m","m":1,"s":{"p":["*%_"],"r":"Mu"},"n":"Str"},{"k":"m","m":1,"s":{"r":"Mu","p":["*%_"]},"n":"Str"},{"k":"m","m":1,"s":{"r":"Str:D","p":["*%_"]},"n":"Str"},{"s":{"r":"Mu","p":["*%_"]},"n":"Str","m":1,"k":"m"},{"n":"perl","s":{"r":"Mu","p":["*%_"]},"m":1,"k":"m"},{"k":"m","m":1,"n":"perl","s":{"r":"Mu","p":["*%_"]}},{"s":{"r":"Str:D","p":["*%_"]},"n":"perl","m":1,"k":"m"},{"m":1,"k":"m","s":{"p":["*%_"],"r":"Mu"},"n":"Real"},{"m":1,"k":"m","s":{"r":"Mu","p":["*%_"]},"n":"Real"},{"n":"Real","s":{"r":"Mu","p":["*%_"]},"k":"m","m":1},{"n":"Real","s":{"r":"Mu","p":["*%_"]},"m":1,"k":"m"},{"m":1,"k":"m","n":"Numeric","s":{"p":["*%_"],"r":"Mu"}},{"n":"Numeric","s":{"p":["*%_"],"r":"Mu"},"k":"m","m":1},{"m":1,"k":"m","n":"Numeric","s":{"p":["*%_"],"r":"Mu"}},{"n":"ACCEPTS","s":{"p":["\\topic","*%_"],"r":"Mu"},"k":"m","m":1},{"s":{"p":["Mu:U \\topic","*%_"],"r":"Mu"},"n":"ACCEPTS","m":1,"k":"m"},{"n":"ACCEPTS","s":{"r":"Mu","p":["Mu:D \\a","*%_"]},"k":"m","m":1},{"k":"m","m":1,"n":"ACCEPTS","s":{"p":["Mu:U $","*%_"],"r":"Bool"}},{"n":"ACCEPTS","s":{"p":["\\topic","*%_"],"r":"Bool:D"},"m":1,"k":"m"},{"s":{"r":"Mu","p":["Any:D \\a","*%_"]},"n":"ACCEPTS","k":"m","m":1},{"k":"m","m":1,"n":"Bool","s":{"r":"Bool","p":["*%_"]}},{"k":"m","m":1,"s":{"r":"Mu","p":["*%_"]},"n":"Bool"},{"m":1,"k":"m","s":{"r":"Mu","p":["*%_"]},"n":"Bool"},{"n":"gist","s":{"p":["*%_"],"r":"Mu"},"k":"m","m":1},{"k":"m","m":1,"n":"gist","s":{"r":"Mu","p":["*%_"]}},{"k":"m","m":1,"s":{"r":"Mu","p":["*%_"]},"n":"gist"},{"m":1,"k":"m","n":"DUMP","s":{"r":"Mu","p":["*%_"]}},{"m":1,"k":"m","s":{"r":"Mu","p":[":$indent-step = 4",":%ctx","*%_"]},"n":"DUMP"},{"k":"m","m":1,"s":{"p":["*%_"],"r":"Mu"},"n":"DUMP"},{"n":"tai","s":{"r":"Mu","p":["*%_"]},"k":"m","m":0},{"k":"s","m":0,"n":"BUILDALL","s":{"r":"Mu","p":["@auto","%init","*%_"]}}],"k":"c"},{"t":"Dateish","n":"Dateish","d":"TITLE\nrole Dateish\n\nSUBTITLE\nObject that can be treated as a date\n\n    role Dateish { ... }\n\nBoth Date and DateTime support accessing a year, month and day-of-month, as\nwell as related functionality such as calculating the day of the week.\n\n","b":"C","a":[{"n":"$.year","t":"Int","k":"v"},{"n":"$.month","t":"Int","k":"v"},{"k":"v","n":"$.day","t":"Int"},{"t":"Int","n":"$.daycount","k":"v"},{"t":"Callable","n":"&.formatter","k":"v"}],"m":[{"k":"m","m":0,"s":{"p":["*%_"],"r":"IO::Path:D"},"n":"IO"},{"k":"m","m":0,"s":{"p":["*%_"],"r":"Bool:D"},"n":"is-leap-year"},{"s":{"r":"Int:D","p":["*%_"]},"n":"days-in-month","m":0,"k":"m"},{"n":"daycount","s":{"p":["*%_"],"r":"Int:D"},"m":0,"k":"m"},{"k":"m","m":0,"s":{"p":["*%_"],"r":"Int:D"},"n":"day-of-month"},{"n":"day-of-week","s":{"p":["*%_"],"r":"Int:D"},"k":"m","m":0},{"s":{"p":["*%_"],"r":"Mu"},"n":"week","k":"m","m":0},{"m":0,"k":"m","n":"week-year","s":{"p":["*%_"],"r":"Int:D"}},{"n":"week-number","s":{"p":["*%_"],"r":"Int:D"},"m":0,"k":"m"},{"s":{"p":["*%_"],"r":"Int:D"},"n":"weekday-of-month","k":"m","m":0},{"k":"m","m":0,"s":{"p":["*%_"],"r":"Int:D"},"n":"day-of-year"},{"m":0,"k":"m","s":{"r":"Str:D","p":["*%_"]},"n":"yyyy-mm-dd"},{"s":{"r":"Mu","p":["*%unit"]},"n":"earlier","m":0,"k":"m"},{"m":0,"k":"m","s":{"p":["*%_"],"r":"Int:D"},"n":"!calculate-daycount"},{"m":0,"k":"m","n":"!truncate-ymd","s":{"r":"Mu","p":["Cool:D $unit","%parts? is copy","*%_"]}},{"k":"m","m":0,"n":"!DAYS-IN-MONTH","s":{"r":"Int:D","p":["\\year","\\month","*%_"]}},{"m":0,"k":"m","n":"!SET-DAYCOUNT","s":{"r":"Mu","p":["*%_"]}},{"n":"!year-Str","s":{"r":"Str:D","p":["*%_"]},"k":"m","m":0},{"s":{"r":"Nil","p":["$daycount","\\year","\\month","\\day","*%_"]},"n":"!ymd-from-daycount","k":"m","m":0}],"k":"ro"},{"k":"v","n":"&infix:«<=»","t":"Sub+{is-pure}"},{"n":"infix:«<=»","s":{"r":"Mu","p":["$?"]},"k":"s","m":1},{"n":"infix:«<=»","s":{"r":"Mu","p":["\\a","\\b"]},"m":1,"k":"s"},{"m":1,"k":"s","n":"infix:«<=»","s":{"p":["Real \\a","Real \\b"],"r":"Mu"}},{"m":1,"k":"s","n":"infix:«<=»","s":{"r":"Bool:D","p":["Int:D \\a","Int:D \\b"]}},{"m":1,"k":"s","n":"infix:«<=»","s":{"r":"Bool:D","p":["int $a","int $b"]}},{"n":"infix:«<=»","s":{"r":"Bool:D","p":["Num:D \\a","Num:D \\b"]},"m":1,"k":"s"},{"k":"s","m":1,"n":"infix:«<=»","s":{"r":"Bool:D","p":["num $a","num $b"]}},{"n":"infix:«<=»","s":{"p":["Rational:D \\a","Rational:D \\b"],"r":"Bool:D"},"k":"s","m":1},{"s":{"r":"Bool:D","p":["Rational:D \\a","Int:D \\b"]},"n":"infix:«<=»","m":1,"k":"s"},{"s":{"r":"Bool:D","p":["Int:D \\a","Rational:D \\b"]},"n":"infix:«<=»","m":1,"k":"s"},{"m":1,"k":"s","n":"infix:«<=»","s":{"p":["Instant:D $a","Instant:D $b"],"r":"Bool:D"}},{"m":1,"k":"s","s":{"r":"Bool:D","p":["DateTime:D \\a","DateTime:D \\b"]},"n":"infix:«<=»"},{"k":"s","m":1,"n":"infix:«<=»","s":{"p":["Date:D $a","Date:D $b"],"r":"Bool:D"}},{"m":1,"k":"s","s":{"r":"Mu","p":["Version:D \\a","Version:D \\b"]},"n":"infix:«<=»"},{"n":"&trait_mod:<handles>","t":"Sub","k":"v"},{"s":{"r":"Mu","p":["Attribute:D $target","$thunk"]},"n":"trait_mod:<handles>","k":"s","m":1},{"s":{"p":["Method:D $m","&thunk"],"r":"Mu"},"n":"trait_mod:<handles>","k":"s","m":1},{"k":"v","n":"&atomic-dec-fetch","t":"Sub"},{"n":"atomic-dec-fetch","s":{"r":"atomicint","p":["atomicint $target is rw"]},"m":1,"k":"s"},{"b":"A","m":[{"n":"new","s":{"r":"Mu","p":["*%_"]},"m":0,"k":"m"},{"m":0,"k":"m","s":{"p":["*%_"],"r":"Mu"},"n":"lock"},{"n":"unlock","s":{"p":["*%_"],"r":"Mu"},"m":0,"k":"m"},{"m":1,"k":"m","s":{"p":["&code","*%_"],"r":"Mu"},"n":"protect"},{"n":"condition","s":{"r":"Mu","p":["*%_"]},"k":"m","m":0},{"n":"BUILDALL","s":{"p":["@auto","%init","*%_"],"r":"Mu"},"m":0,"k":"s"}],"k":"c","d":"TITLE\nclass Lock\n\nSUBTITLE\nA low-level, re-entrant, mutual exclusion lock\n\n    class Lock {}\n\nA Lock is a low-level concurrency control construct. It provides mutual\nexclusion, meaning that only one thread may hold the lock at a time. Once\nthe lock is unlocked, another thread may then lock it.\n\nA Lock is typically used to protect access to one or more pieces of state.\nFor example, in this program:\n\n    my $x = 0;\n    my $l = Lock.new;\n    await (^10).map: {\n        start {\n            $l.protect({ $x++ });\n        }\n    }\n    say $x;         # OUTPUT: «10␤»\n\nThe Lock is used to protect operations on $x. An increment is not an atomic\noperation; without the lock, it would be possible for two threads to both\nread the number 5 and then both store back the number 6, thus losing an\nupdate. With the use of the Lock, only one thread may be running the\nincrement at a time.\n\nA Lock is re-entrant, meaning that a thread that holds the lock can lock it\nagain without blocking. That thread must unlock the same number of times\nbefore the lock can be obtained by another thread (it works by keeping a\nrecursion count).\n\nIt's important to understand that there is no direct connection between a\nLock and any particular piece of data; it is up to the programmer to ensure\nthat the Lock is held during all operations that involve the data in\nquestion. The OO::Monitors module, while not a complete solution to this\nproblem, does provide a way to avoid dealing with the lock explicitly and\nencourage a more structured approach.\n\nThe Lock class is backed by operating-system provided constructs, and so a\nthread that is waiting to acquire a lock is, from the point of view of the\noperating system, blocked.\n\nCode using high-level Raku concurrency constructs should avoid using Lock.\nWaiting to acquire a Lock blocks a real Thread, meaning that the thread\npool (used by numerous higher-level Raku concurrency mechanisms) cannot use\nthat thread in the meantime for anything else.\n\nAny await performed while a Lock is held will behave in a blocking manner;\nthe standard non-blocking behavior of await relies on the code following\nthe `await` resuming on a different Thread from the pool, which is\nincompatible with the requirement that a Lock be unlocked by the same\nthread that locked it. See Lock::Async for an alternative mechanism that\ndoes not have this shortcoming.\n\nBy their nature, Locks are not composable, and it is possible to end up\nwith hangs should circular dependencies on locks occur. Prefer to structure\nconcurrent programs such that they communicate results rather than modify\nshared data structures, using mechanisms like Promise, Channel and Supply.\n\n","n":"Lock","t":"Lock"},{"n":"Lock::ConditionVariable","t":"Lock::ConditionVariable","k":"c","m":[{"s":{"r":"Mu","p":["*%_"]},"n":"new","k":"m","m":0},{"m":0,"k":"m","n":"wait","s":{"p":["*%_"],"r":"Mu"}},{"n":"signal","s":{"r":"Mu","p":["*%_"]},"k":"m","m":0},{"m":0,"k":"m","n":"signal_all","s":{"p":["*%_"],"r":"Mu"}},{"k":"s","m":0,"s":{"r":"Mu","p":["@auto","%init","*%_"]},"n":"BUILDALL"}],"b":"A"},{"t":"Lock::Async","n":"Lock::Async","d":"TITLE\nclass Lock::Async\n\nSUBTITLE\nA non-blocking, non-re-entrant, mutual exclusion lock\n\n    class Lock::Async {}\n\nA Lock::Async instance provides a mutual exclusion mechanism: when the lock\nis held, any other code wishing to lock must wait until the holder calls\nunlock.\n\nUnlike Lock, which provides a traditional OS-backed mutual exclusion\nmechanism, Lock::Async works with the high-level concurrency features of\nRaku. The lock method returns a Promise, which will be kept when the lock\nis available. This Promise can be used with non-blocking await. This means\nthat a thread from the thread pool need not be consumed while waiting for\nthe Lock::Async to be available, and the code trying to obtain the lock\nwill be resumed once it is available.\n\nThe result is that it's quite possible to have many thousands of\noutstanding Lock::Async lock requests, but just a small number of threads\nin the pool. Attempting that with a traditional Lock would not go so well!\n\nThere is no requirement that a Lock::Async is locked and unlocked by the\nsame physical thread, meaning it is possible to do a non-blocking await\nwhile holding the lock. The flip side of this is Lock::Async is not\nre-entrant.\n\nWhile Lock::Async works in terms of higher-level Raku concurrency\nmechanisms, it should be considered a building block. Indeed, it lies at\nthe heart of the Supply concurrency model. Prefer to structure programs so\nthat they communicate results rather than mutate shared data structures,\nusing mechanisms like Promise, Channel and Supply.\n\n","a":[{"k":"v","n":"$!holder","t":"Lock::Async::Holder"}],"b":"A","m":[{"n":"lock","s":{"r":"Promise","p":["*%_"]},"m":0,"k":"m"},{"m":0,"k":"m","n":"unlock","s":{"p":["*%_"],"r":"Nil"}},{"s":{"p":["&code","*%_"],"r":"Mu"},"n":"protect","k":"m","m":1},{"n":"protect-or-queue-on-recursion","s":{"p":["&code","*%_"],"r":"Mu"},"m":0,"k":"m"},{"k":"m","m":0,"n":"with-lock-hidden-from-recursion-check","s":{"r":"Mu","p":["&code","*%_"]}},{"m":0,"k":"s","s":{"r":"Mu","p":["@auto","%init","*%_"]},"n":"BUILDALL"},{"k":"m","m":0,"s":{"r":"Mu","p":["IterationBuffer $*LOCK-ASYNC-RECURSION-LIST","&code","*%_"]},"n":"!run-under-recursion-list"},{"m":0,"k":"m","s":{"r":"Mu","p":["IterationBuffer \\rec-list","*%_"]},"n":"!search-recursion-list"},{"m":0,"k":"m","n":"!hidden-in-recursion-list","s":{"p":["IterationBuffer \\current","&code","*%_"],"r":"Mu"}},{"s":{"r":"Mu","p":["&code","*%_"]},"n":"!run-with-updated-recursion-list","m":0,"k":"m"},{"k":"m","m":0,"n":"!on-recursion-list","s":{"p":["*%_"],"r":"Mu"}}],"k":"c"},{"n":"&infix:<//>","t":"Sub+{Precedence}","k":"v"},{"n":"infix:<//>","s":{"p":["Mu $x = Any"],"r":"Mu"},"k":"s","m":1},{"s":{"p":["Mu \\a","&b"],"r":"Mu"},"n":"infix:<//>","m":1,"k":"s"},{"k":"s","m":1,"s":{"p":["Mu \\a","Mu \\b"],"r":"Mu"},"n":"infix:<//>"},{"t":"Sub","n":"&split","k":"v"},{"k":"s","m":1,"n":"split","s":{"r":"Mu","p":["$pat","Cool:D $target","|c is raw"]}},{"t":"Sub+{is-pure}+{Precedence}","n":"&infix:<*>","k":"v"},{"k":"s","m":1,"n":"infix:<*>","s":{"p":["$x = 1"],"r":"Mu"}},{"m":1,"k":"s","s":{"p":["\\a","\\b"],"r":"Mu"},"n":"infix:<*>"},{"n":"infix:<*>","s":{"p":["Real \\a","Real \\b"],"r":"Mu"},"k":"s","m":1},{"m":1,"k":"s","n":"infix:<*>","s":{"p":["Int:D \\a","Int:D \\b"],"r":"Int:D"}},{"k":"s","m":1,"n":"infix:<*>","s":{"p":["int $a","int $b"],"r":"int"}},{"k":"s","m":1,"s":{"r":"Mu","p":["Num:D \\a","Num:D \\b"]},"n":"infix:<*>"},{"m":1,"k":"s","n":"infix:<*>","s":{"p":["num $a","num $b"],"r":"num"}},{"k":"s","m":1,"s":{"r":"Mu","p":["Range:D \\r","Real:D \\v"]},"n":"infix:<*>"},{"m":1,"k":"s","s":{"r":"Mu","p":["Real:D \\v","Range:D \\r"]},"n":"infix:<*>"},{"s":{"r":"Mu","p":["Rational:D \\a","Rational:D \\b"]},"n":"infix:<*>","m":1,"k":"s"},{"s":{"p":["Rational:D \\a","Int:D \\b"],"r":"Mu"},"n":"infix:<*>","k":"s","m":1},{"n":"infix:<*>","s":{"r":"Mu","p":["Int:D \\a","Rational:D \\b"]},"k":"s","m":1},{"s":{"r":"Complex:D","p":["Complex:D \\a","Complex:D \\b"]},"n":"infix:<*>","m":1,"k":"s"},{"s":{"r":"Complex:D","p":["Complex:D \\a","Num(Real) \\b"]},"n":"infix:<*>","k":"s","m":1},{"s":{"r":"Complex:D","p":["Num(Real) \\a","Complex:D \\b"]},"n":"infix:<*>","k":"s","m":1},{"k":"v","n":"&categorize","t":"Sub"},{"m":1,"k":"s","n":"categorize","s":{"r":"Mu","p":["$test","+\\items is raw",":$into!","*%named"]}},{"m":1,"k":"s","n":"categorize","s":{"p":["$test","+\\items is raw","*%named"],"r":"Mu"}},{"n":"&infix:<⊍>","t":"Sub+{is-pure}+{Precedence}","k":"v"},{"m":1,"k":"s","s":{"r":"Mu","p":[]},"n":"infix:<(.)>"},{"s":{"r":"Mu","p":["Setty:D \\a"]},"n":"infix:<(.)>","k":"s","m":1},{"n":"infix:<(.)>","s":{"p":["Baggy:D \\a"],"r":"Mu"},"k":"s","m":1},{"s":{"p":["\\a"],"r":"Mu"},"n":"infix:<(.)>","m":1,"k":"s"},{"s":{"r":"Mu","p":["Setty:D \\a","Setty:D \\b"]},"n":"infix:<(.)>","k":"s","m":1},{"m":1,"k":"s","n":"infix:<(.)>","s":{"r":"Mu","p":["Mixy:D \\a","Mixy:D \\b"]}},{"s":{"p":["Mixy:D \\a","Baggy:D \\b"],"r":"Mu"},"n":"infix:<(.)>","k":"s","m":1},{"m":1,"k":"s","s":{"r":"Mu","p":["Mixy:D \\a","\\b"]},"n":"infix:<(.)>"},{"n":"infix:<(.)>","s":{"r":"Mu","p":["Setty:D \\a","Mixy:D \\b"]},"k":"s","m":1},{"m":1,"k":"s","s":{"r":"Mu","p":["Baggy:D \\a","Mixy:D \\b"]},"n":"infix:<(.)>"},{"k":"s","m":1,"s":{"p":["\\a","Mixy:D \\b"],"r":"Mu"},"n":"infix:<(.)>"},{"s":{"r":"Mu","p":["Baggy:D \\a","Baggy:D \\b"]},"n":"infix:<(.)>","k":"s","m":1},{"s":{"r":"Mu","p":["$","Failure:D \\b"]},"n":"infix:<(.)>","k":"s","m":1},{"k":"s","m":1,"s":{"p":["Failure:D \\a","$"],"r":"Mu"},"n":"infix:<(.)>"},{"m":1,"k":"s","n":"infix:<(.)>","s":{"r":"Mu","p":["\\a","\\b"]}},{"s":{"p":["**@p"],"r":"Mu"},"n":"infix:<(.)>","m":1,"k":"s"},{"k":"v","n":"&atomic-add-fetch","t":"Sub"},{"n":"atomic-add-fetch","s":{"p":["atomicint $target is rw","int $add"],"r":"atomicint"},"k":"s","m":1},{"k":"s","m":1,"n":"atomic-add-fetch","s":{"p":["atomicint $target is rw","Int:D $add"],"r":"atomicint"}},{"k":"s","m":1,"s":{"p":["atomicint $target is rw","$add"],"r":"atomicint"},"n":"atomic-add-fetch"},{"k":"v","n":"&atomic-fetch-sub","t":"Sub"},{"m":1,"k":"s","s":{"p":["atomicint $target is rw","int $add"],"r":"atomicint"},"n":"atomic-fetch-sub"},{"n":"atomic-fetch-sub","s":{"r":"atomicint","p":["atomicint $target is rw","Int:D $add"]},"k":"s","m":1},{"n":"atomic-fetch-sub","s":{"p":["atomicint $target is rw","$add"],"r":"atomicint"},"k":"s","m":1},{"k":"e","n":"SIGALRM","t":"Signal"},{"t":"num","n":"num","k":"n"},{"n":"&infix:<eqv>","t":"Sub+{is-pure}+{Precedence}","k":"v"},{"k":"s","m":1,"n":"infix:<eqv>","s":{"p":["$?"],"r":"Mu"}},{"k":"s","m":1,"s":{"p":["Any:U \\a","Any:U \\b"],"r":"Mu"},"n":"infix:<eqv>"},{"s":{"p":["Any:D \\a","Any:U \\b"],"r":"Bool"},"n":"infix:<eqv>","m":1,"k":"s"},{"n":"infix:<eqv>","s":{"p":["Any:U \\a","Any:D \\b"],"r":"Bool"},"m":1,"k":"s"},{"n":"infix:<eqv>","s":{"p":["Any:D \\a","Any:D \\b"],"r":"Mu"},"k":"s","m":1},{"k":"s","m":1,"n":"infix:<eqv>","s":{"p":["Iterable:D \\a","Iterable:D \\b"],"r":"Mu"}},{"m":1,"k":"s","s":{"p":["Stringy:D \\a","Stringy:D \\b"],"r":"Mu"},"n":"infix:<eqv>"},{"m":1,"k":"s","s":{"r":"Bool:D","p":["Numeric:D \\a","Numeric:D \\b"]},"n":"infix:<eqv>"},{"k":"s","m":1,"s":{"p":["Int:D $a","Int:D $b"],"r":"Bool:D"},"n":"infix:<eqv>"},{"n":"infix:<eqv>","s":{"r":"Bool:D","p":["int $a","int $b"]},"k":"s","m":1},{"n":"infix:<eqv>","s":{"r":"Mu","p":["Blob:D \\a","Blob:D \\b"]},"m":1,"k":"s"},{"k":"s","m":1,"n":"infix:<eqv>","s":{"p":["Str:D \\a","Str:D \\b"],"r":"Bool:D"}},{"n":"infix:<eqv>","s":{"p":["Capture:D \\a","Capture:D \\b"],"r":"Mu"},"k":"s","m":1},{"m":1,"k":"s","n":"infix:<eqv>","s":{"p":["Seq:D \\a","Seq:D \\b"],"r":"Mu"}},{"m":1,"k":"s","s":{"r":"Mu","p":["Range:D \\a","Range:D \\b"]},"n":"infix:<eqv>"},{"k":"s","m":1,"s":{"r":"Mu","p":["Pair:D \\a","Pair:D \\b"]},"n":"infix:<eqv>"},{"s":{"r":"Bool:D","p":["Map:D \\a","Map:D \\b"]},"n":"infix:<eqv>","m":1,"k":"s"},{"s":{"p":["Parameter:D \\a","Parameter:D \\b"],"r":"Mu"},"n":"infix:<eqv>","k":"s","m":1},{"m":1,"k":"s","n":"infix:<eqv>","s":{"r":"Mu","p":["Signature:D \\a","Signature:D \\b"]}},{"s":{"p":["Match:D \\a","Match:D \\b"],"r":"Mu"},"n":"infix:<eqv>","m":1,"k":"s"},{"m":1,"k":"s","n":"infix:<eqv>","s":{"r":"Mu","p":["IntStr:D $a","IntStr:D $b"]}},{"s":{"p":["IntStr:D $a","RatStr:D $b"],"r":"Bool"},"n":"infix:<eqv>","m":1,"k":"s"},{"k":"s","m":1,"s":{"p":["IntStr:D $a","NumStr:D $b"],"r":"Bool"},"n":"infix:<eqv>"},{"m":1,"k":"s","s":{"r":"Bool","p":["IntStr:D $a","ComplexStr:D $b"]},"n":"infix:<eqv>"},{"s":{"p":["RatStr:D $a","IntStr:D $b"],"r":"Bool"},"n":"infix:<eqv>","m":1,"k":"s"},{"m":1,"k":"s","s":{"r":"Mu","p":["RatStr:D $a","RatStr:D $b"]},"n":"infix:<eqv>"},{"s":{"p":["RatStr:D $a","NumStr:D $b"],"r":"Bool"},"n":"infix:<eqv>","m":1,"k":"s"},{"m":1,"k":"s","n":"infix:<eqv>","s":{"r":"Bool","p":["RatStr:D $a","ComplexStr:D $b"]}},{"k":"s","m":1,"s":{"r":"Bool","p":["NumStr:D $a","IntStr:D $b"]},"n":"infix:<eqv>"},{"k":"s","m":1,"s":{"p":["NumStr:D $a","RatStr:D $b"],"r":"Bool"},"n":"infix:<eqv>"},{"s":{"p":["NumStr:D $a","NumStr:D $b"],"r":"Mu"},"n":"infix:<eqv>","k":"s","m":1},{"m":1,"k":"s","n":"infix:<eqv>","s":{"r":"Bool","p":["NumStr:D $a","ComplexStr:D $b"]}},{"m":1,"k":"s","n":"infix:<eqv>","s":{"p":["ComplexStr:D $a","IntStr:D $b"],"r":"Bool"}},{"k":"s","m":1,"n":"infix:<eqv>","s":{"p":["ComplexStr:D $a","RatStr:D $b"],"r":"Bool"}},{"n":"infix:<eqv>","s":{"r":"Bool","p":["ComplexStr:D $a","NumStr:D $b"]},"m":1,"k":"s"},{"k":"s","m":1,"s":{"r":"Mu","p":["ComplexStr:D $a","ComplexStr:D $b"]},"n":"infix:<eqv>"},{"n":"infix:<eqv>","s":{"p":["Setty:D \\a","Setty:D \\b"],"r":"Bool:D"},"m":1,"k":"s"},{"m":1,"k":"s","n":"infix:<eqv>","s":{"p":["Baggy:D \\a","Baggy:D \\b"],"r":"Bool:D"}},{"m":1,"k":"s","n":"infix:<eqv>","s":{"p":["ObjAt:D $a","ObjAt:D $b"],"r":"Mu"}},{"k":"s","m":1,"n":"infix:<eqv>","s":{"r":"Mu","p":["Version:D \\a","Version:D \\b"]}},{"s":{"r":"Mu","p":["Promise:D \\a","Promise:D \\b"]},"n":"infix:<eqv>","k":"s","m":1},{"k":"v","n":"&truncate","t":"Sub"},{"m":1,"k":"s","n":"truncate","s":{"r":"Mu","p":["Real:D $x"]}},{"k":"s","m":1,"s":{"p":["Cool:D $x"],"r":"Mu"},"n":"truncate"},{"k":"ro","m":[{"n":"of","s":{"p":["*%_"],"r":"Mu"},"m":0,"k":"m"},{"k":"m","m":0,"s":{"r":"Setty:D","p":["*@pairs","*%_"]},"n":"new-from-pairs"},{"n":"default","s":{"p":["*%_"],"r":"Bool"},"k":"m","m":0},{"k":"m","m":0,"s":{"p":["*%_"],"r":"Int:D"},"n":"elems"},{"n":"total","s":{"r":"Int:D","p":["*%_"]},"m":0,"k":"m"},{"m":0,"k":"m","n":"RAW-HASH","s":{"r":"Mu","p":["*%_"]}},{"m":0,"k":"m","n":"!create-from-iterator","s":{"r":"Setty:D","p":["\\type","\\iterator","*%_"]}},{"k":"m","m":0,"n":"!HASHIFY","s":{"p":["\\type","*%_"],"r":"Mu"}}],"a":[{"n":"$!elems","t":"Rakudo::Internals::IterationSet","k":"v"}],"b":"C","d":"TITLE\nrole Setty\n\nSUBTITLE\nCollection of distinct objects\n\n    role Setty does QuantHash { }\n\nA role for collections which make sure that each element can only appear\nonce. See Set and SetHash.\n\n","n":"Setty","t":"Setty"},{"n":"Pod::Item","t":"Pod::Item","k":"c","m":[{"s":{"p":["*%_"],"r":"Mu"},"n":"level","k":"m","m":0},{"m":0,"k":"s","s":{"p":["@auto","%init","*%_"],"r":"Mu"},"n":"BUILDALL"},{"m":0,"k":"m","s":{"r":"Mu","p":["*%_"]},"n":"config"},{"k":"m","m":0,"n":"contents","s":{"p":["*%_"],"r":"Mu"}},{"k":"m","m":1,"s":{"p":["*%_"],"r":"Mu"},"n":"gist"},{"k":"m","m":1,"s":{"p":["*%_"],"r":"Mu"},"n":"gist"},{"m":1,"k":"m","n":"gist","s":{"p":["*%_"],"r":"Mu"}},{"n":"BUILD","s":{"r":"Nil","p":[":config(%!config)",":contents(@!contents)","*%_"]},"m":0,"k":"s"},{"s":{"p":["@auto","%init","*%_"],"r":"Mu"},"n":"BUILDALL","m":0,"k":"s"}],"a":[{"k":"v","n":"$.level","t":"Mu"},{"t":"Associative","n":"%.config","k":"v"},{"n":"@.contents","t":"Positional","k":"v"}],"b":"A","d":"TITLE\nclass Pod::Item\n\nSUBTITLE\nItem in a Pod enumeration list\n\n    class Pod::Item is Pod::Block { }\n\nClass for items in Pod enumeration lists.\n\n"},{"t":"Pod::Heading","n":"Pod::Heading","d":"TITLE\nclass Pod::Heading\n\nSUBTITLE\nHeading in a Pod document\n\n    class Pod::Heading is Pod::Block { }\n\nClass for headings in a Pod document.\n\n","m":[{"s":{"r":"Mu","p":["*%_"]},"n":"level","m":0,"k":"m"},{"s":{"r":"Mu","p":["@auto","%init","*%_"]},"n":"BUILDALL","k":"s","m":0},{"n":"config","s":{"r":"Mu","p":["*%_"]},"k":"m","m":0},{"m":0,"k":"m","n":"contents","s":{"r":"Mu","p":["*%_"]}},{"s":{"r":"Mu","p":["*%_"]},"n":"gist","m":1,"k":"m"},{"s":{"r":"Mu","p":["*%_"]},"n":"gist","m":1,"k":"m"},{"n":"gist","s":{"p":["*%_"],"r":"Mu"},"m":1,"k":"m"},{"k":"s","m":0,"s":{"r":"Nil","p":[":config(%!config)",":contents(@!contents)","*%_"]},"n":"BUILD"},{"n":"BUILDALL","s":{"r":"Mu","p":["@auto","%init","*%_"]},"k":"s","m":0}],"k":"c","a":[{"t":"Mu","n":"$.level","k":"v"},{"n":"%.config","t":"Associative","k":"v"},{"k":"v","n":"@.contents","t":"Positional"}],"b":"A"},{"n":"Pod::Defn","t":"Pod::Defn","m":[{"s":{"p":["*%_"],"r":"Mu"},"n":"term","k":"m","m":0},{"k":"s","m":0,"s":{"p":["@auto","%init","*%_"],"r":"Mu"},"n":"BUILDALL"},{"m":0,"k":"m","s":{"r":"Mu","p":["*%_"]},"n":"config"},{"s":{"r":"Mu","p":["*%_"]},"n":"contents","k":"m","m":0},{"s":{"r":"Mu","p":["*%_"]},"n":"gist","k":"m","m":1},{"m":1,"k":"m","n":"gist","s":{"r":"Mu","p":["*%_"]}},{"n":"gist","s":{"r":"Mu","p":["*%_"]},"k":"m","m":1},{"s":{"p":[":config(%!config)",":contents(@!contents)","*%_"],"r":"Nil"},"n":"BUILD","k":"s","m":0},{"m":0,"k":"s","s":{"p":["@auto","%init","*%_"],"r":"Mu"},"n":"BUILDALL"}],"k":"c","a":[{"n":"$.term","t":"Mu","k":"v"},{"n":"%.config","t":"Associative","k":"v"},{"k":"v","t":"Positional","n":"@.contents"}],"b":"A","d":"TITLE\nclass Pod::Defn\n\nSUBTITLE\nPod definition list\n\n    class Pod::Defn is Pod::Block { }\n\nClass for definition lists in a Pod document.\n\n"},{"b":"A","a":[{"k":"v","t":"Mu","n":"$.type"},{"k":"v","n":"@.meta","t":"Positional"},{"n":"%.config","t":"Associative","k":"v"},{"k":"v","n":"@.contents","t":"Positional"}],"k":"c","m":[{"s":{"p":["*%_"],"r":"Mu"},"n":"type","k":"m","m":0},{"n":"meta","s":{"p":["*%_"],"r":"Mu"},"m":0,"k":"m"},{"s":{"r":"Mu","p":["@auto","%init","*%_"]},"n":"BUILDALL","m":0,"k":"s"},{"m":0,"k":"m","n":"config","s":{"p":["*%_"],"r":"Mu"}},{"n":"contents","s":{"r":"Mu","p":["*%_"]},"k":"m","m":0},{"s":{"r":"Mu","p":["*%_"]},"n":"gist","m":1,"k":"m"},{"s":{"p":["*%_"],"r":"Mu"},"n":"gist","k":"m","m":1},{"s":{"p":["*%_"],"r":"Mu"},"n":"gist","m":1,"k":"m"},{"n":"BUILD","s":{"p":[":config(%!config)",":contents(@!contents)","*%_"],"r":"Nil"},"k":"s","m":0},{"k":"s","m":0,"s":{"r":"Mu","p":["@auto","%init","*%_"]},"n":"BUILDALL"}],"d":"TITLE\nclass Pod::FormattingCode\n\nSUBTITLE\nPod formatting code\n\n    class Pod::FormattingCode is Pod::Block { }\n\nClass for formatting codes in a Pod document.\n\n","n":"Pod::FormattingCode","t":"Pod::FormattingCode"},{"b":"A","a":[{"n":"%.config","t":"Associative","k":"v"},{"n":"@.contents","t":"Positional","k":"v"}],"m":[{"m":0,"k":"s","n":"BUILD","s":{"r":"Nil","p":[":config(%!config)",":contents(@!contents)","*%_"]}},{"m":1,"k":"m","s":{"r":"Mu","p":["*%_"]},"n":"gist"},{"m":1,"k":"m","n":"gist","s":{"r":"Mu","p":["*%_"]}},{"s":{"r":"Mu","p":["*%_"]},"n":"gist","k":"m","m":1},{"n":"config","s":{"p":["*%_"],"r":"Mu"},"k":"m","m":0},{"n":"contents","s":{"r":"Mu","p":["*%_"]},"k":"m","m":0},{"k":"s","m":0,"n":"BUILDALL","s":{"r":"Mu","p":["@auto","%init","*%_"]}}],"k":"c","d":"TITLE\nclass Pod::Block\n\nSUBTITLE\nBlock in a Pod document\n\n    class Pod::Block { }\n\nClass for a Pod block, and base class for most other Pod classes.\n\nA Pod block has contents (more pod blocks or strings) and a config hash.\n\nUseful subclasses:\n\n  Class                   Used for\n  Pod::Block::Para        paragraphs\n  Pod::Block::Named       named blocks\n  Pod::Block::Declarator  declarator blocks\n  Pod::Block::Code        code blocks\n  Pod::Block::Comment     comments\n  Pod::Block::Table       =begin/end table\n                          tabular data\n  Pod::Heading            =head1 etc. headings\n  Pod::Item               list items\n  Pod::Defn               definition lists\n  Pod::FormattingCode     formatting codes\n\n\n","n":"Pod::Block","t":"Pod::Block"},{"n":"Pod::Block::Declarator","t":"Pod::Block::Declarator","k":"c","m":[{"n":"BUILD","s":{"p":[":leading(@!leading)",":trailing(@!trailing)","*%_"],"r":"Nil"},"m":0,"k":"s"},{"s":{"r":"Mu","p":["$d","*%_"]},"n":"set_docee","k":"m","m":0},{"s":{"p":["*%_"],"r":"Mu"},"n":"Str","m":0,"k":"m"},{"n":"contents","s":{"p":["*%_"],"r":"Mu"},"k":"m","m":0},{"n":"leading","s":{"r":"Mu","p":["*%_"]},"k":"m","m":0},{"s":{"r":"Mu","p":["*%_"]},"n":"trailing","k":"m","m":0},{"s":{"r":"Mu","p":["$addition","*%_"]},"n":"_add_leading","k":"m","m":0},{"s":{"r":"Mu","p":["$addition","*%_"]},"n":"_add_trailing","k":"m","m":0},{"m":1,"k":"m","s":{"p":["*%_"],"r":"Mu"},"n":"gist"},{"m":1,"k":"m","n":"gist","s":{"p":["*%_"],"r":"Mu"}},{"s":{"p":["*%_"],"r":"Mu"},"n":"gist","m":1,"k":"m"},{"s":{"p":["*%_"],"r":"Mu"},"n":"gist","m":1,"k":"m"},{"s":{"p":["*%_"],"r":"Mu"},"n":"WHEREFORE","m":0,"k":"m"},{"k":"s","m":0,"s":{"r":"Mu","p":["@auto","%init","*%_"]},"n":"BUILDALL"},{"n":"config","s":{"r":"Mu","p":["*%_"]},"m":0,"k":"m"},{"m":0,"k":"m","n":"contents","s":{"p":["*%_"],"r":"Mu"}},{"n":"gist","s":{"p":["*%_"],"r":"Mu"},"k":"m","m":1},{"k":"m","m":1,"s":{"r":"Mu","p":["*%_"]},"n":"gist"},{"n":"gist","s":{"p":["*%_"],"r":"Mu"},"m":1,"k":"m"},{"m":0,"k":"s","s":{"p":[":config(%!config)",":contents(@!contents)","*%_"],"r":"Nil"},"n":"BUILD"},{"n":"BUILDALL","s":{"p":["@auto","%init","*%_"],"r":"Mu"},"k":"s","m":0}],"a":[{"k":"v","t":"Mu","n":"$.WHEREFORE"},{"k":"v","n":"@!leading","t":"Positional"},{"n":"@!trailing","t":"Positional","k":"v"},{"n":"%.config","t":"Associative","k":"v"},{"n":"@.contents","t":"Positional","k":"v"}],"b":"A","d":"TITLE\nclass Pod::Block::Declarator\n\nSUBTITLE\nDeclarator block in a Pod document\n\n    class Pod::Block::Declarator is Pod::Block { }\n\nClass for a declarator Pod block\n\n"},{"b":"A","a":[{"n":"%.config","t":"Associative","k":"v"},{"n":"@.contents","t":"Positional","k":"v"}],"m":[{"n":"BUILDALL","s":{"p":["@auto","%init","*%_"],"r":"Mu"},"m":0,"k":"s"},{"k":"m","m":0,"n":"config","s":{"r":"Mu","p":["*%_"]}},{"k":"m","m":0,"n":"contents","s":{"r":"Mu","p":["*%_"]}},{"m":1,"k":"m","s":{"r":"Mu","p":["*%_"]},"n":"gist"},{"m":1,"k":"m","n":"gist","s":{"p":["*%_"],"r":"Mu"}},{"m":1,"k":"m","n":"gist","s":{"p":["*%_"],"r":"Mu"}},{"n":"BUILD","s":{"p":[":config(%!config)",":contents(@!contents)","*%_"],"r":"Nil"},"k":"s","m":0},{"k":"s","m":0,"s":{"p":["@auto","%init","*%_"],"r":"Mu"},"n":"BUILDALL"}],"k":"c","d":"TITLE\nclass Pod::Block::Para\n\nSUBTITLE\nParagraph in a Pod document\n\n    class Pod::Block::Para is Pod::Block { }\n\nClass for a Pod paragraph.","n":"Pod::Block::Para","t":"Pod::Block::Para"},{"n":"Pod::Block::Table","t":"Pod::Block::Table","a":[{"n":"$.caption","t":"Mu","k":"v"},{"t":"Positional","n":"@.headers","k":"v"},{"k":"v","n":"%.config","t":"Associative"},{"t":"Positional","n":"@.contents","k":"v"}],"b":"A","m":[{"s":{"r":"Mu","p":["*%_"]},"n":"caption","k":"m","m":0},{"s":{"p":["*%_"],"r":"Mu"},"n":"headers","k":"m","m":0},{"m":0,"k":"s","s":{"p":["@auto","%init","*%_"],"r":"Mu"},"n":"BUILDALL"},{"n":"config","s":{"p":["*%_"],"r":"Mu"},"m":0,"k":"m"},{"k":"m","m":0,"n":"contents","s":{"p":["*%_"],"r":"Mu"}},{"m":1,"k":"m","s":{"p":["*%_"],"r":"Mu"},"n":"gist"},{"m":1,"k":"m","s":{"p":["*%_"],"r":"Mu"},"n":"gist"},{"k":"m","m":1,"n":"gist","s":{"p":["*%_"],"r":"Mu"}},{"s":{"p":[":config(%!config)",":contents(@!contents)","*%_"],"r":"Nil"},"n":"BUILD","m":0,"k":"s"},{"m":0,"k":"s","s":{"p":["@auto","%init","*%_"],"r":"Mu"},"n":"BUILDALL"}],"k":"c","d":"TITLE\nclass Pod::Block::Table\n\nSUBTITLE\nTable in a Pod document\n\n    class Pod::Block::Table is Pod::Block { }\n\nClass for a table in a Pod document.\n\n"},{"d":"TITLE\nclass Pod::Block::Comment\n\nSUBTITLE\nComment in a Pod document\n\n    class Pod::Block::Comment is Pod::Block { }\n\nClass for a Pod comment.","m":[{"m":0,"k":"s","n":"BUILDALL","s":{"p":["@auto","%init","*%_"],"r":"Mu"}},{"k":"m","m":0,"s":{"r":"Mu","p":["*%_"]},"n":"config"},{"m":0,"k":"m","n":"contents","s":{"r":"Mu","p":["*%_"]}},{"k":"m","m":1,"n":"gist","s":{"p":["*%_"],"r":"Mu"}},{"m":1,"k":"m","s":{"r":"Mu","p":["*%_"]},"n":"gist"},{"m":1,"k":"m","n":"gist","s":{"r":"Mu","p":["*%_"]}},{"k":"s","m":0,"n":"BUILD","s":{"r":"Nil","p":[":config(%!config)",":contents(@!contents)","*%_"]}},{"n":"BUILDALL","s":{"p":["@auto","%init","*%_"],"r":"Mu"},"k":"s","m":0}],"k":"c","b":"A","a":[{"t":"Associative","n":"%.config","k":"v"},{"n":"@.contents","t":"Positional","k":"v"}],"t":"Pod::Block::Comment","n":"Pod::Block::Comment"},{"t":"Pod::Block::Code","n":"Pod::Block::Code","d":"TITLE\nclass Pod::Block::Code\n\nSUBTITLE\nVerbatim code block in a Pod document\n\n    class Pod::Block::Code is Pod::Block { }\n\nClass for a code (verbatim) Pod block.\n\n","k":"c","m":[{"m":0,"k":"s","s":{"r":"Mu","p":["@auto","%init","*%_"]},"n":"BUILDALL"},{"n":"config","s":{"p":["*%_"],"r":"Mu"},"k":"m","m":0},{"k":"m","m":0,"n":"contents","s":{"r":"Mu","p":["*%_"]}},{"s":{"p":["*%_"],"r":"Mu"},"n":"gist","m":1,"k":"m"},{"k":"m","m":1,"n":"gist","s":{"p":["*%_"],"r":"Mu"}},{"n":"gist","s":{"p":["*%_"],"r":"Mu"},"m":1,"k":"m"},{"m":0,"k":"s","s":{"r":"Nil","p":[":config(%!config)",":contents(@!contents)","*%_"]},"n":"BUILD"},{"s":{"p":["@auto","%init","*%_"],"r":"Mu"},"n":"BUILDALL","k":"s","m":0}],"a":[{"t":"Associative","n":"%.config","k":"v"},{"k":"v","n":"@.contents","t":"Positional"}],"b":"A"},{"m":[{"m":0,"k":"m","s":{"r":"Mu","p":["*%_"]},"n":"name"},{"m":0,"k":"s","n":"BUILDALL","s":{"r":"Mu","p":["@auto","%init","*%_"]}},{"n":"config","s":{"p":["*%_"],"r":"Mu"},"m":0,"k":"m"},{"k":"m","m":0,"s":{"r":"Mu","p":["*%_"]},"n":"contents"},{"s":{"p":["*%_"],"r":"Mu"},"n":"gist","k":"m","m":1},{"k":"m","m":1,"s":{"r":"Mu","p":["*%_"]},"n":"gist"},{"s":{"p":["*%_"],"r":"Mu"},"n":"gist","m":1,"k":"m"},{"m":0,"k":"s","s":{"r":"Nil","p":[":config(%!config)",":contents(@!contents)","*%_"]},"n":"BUILD"},{"m":0,"k":"s","n":"BUILDALL","s":{"p":["@auto","%init","*%_"],"r":"Mu"}}],"k":"c","a":[{"k":"v","t":"Mu","n":"$.name"},{"k":"v","n":"%.config","t":"Associative"},{"t":"Positional","n":"@.contents","k":"v"}],"b":"A","d":"TITLE\nclass Pod::Block::Named\n\nSUBTITLE\nNamed block in a Pod document\n\n    class Pod::Block::Named is Pod::Block { }\n\nClass for a named Pod block. For example\n\n    =begin MySection\n    ...\n    =end MySection\n\n\ncreates a Pod::Block::Named with name MySection.\n\n","n":"Pod::Block::Named","t":"Pod::Block::Named"},{"t":"Pod::Config","n":"Pod::Config","k":"c","m":[{"k":"m","m":0,"n":"type","s":{"r":"Mu","p":["*%_"]}},{"k":"m","m":0,"n":"config","s":{"p":["*%_"],"r":"Mu"}},{"k":"s","m":0,"n":"BUILDALL","s":{"r":"Mu","p":["@auto","%init","*%_"]}}],"b":"A","a":[{"k":"v","n":"$.type","t":"Mu"},{"k":"v","n":"%.config","t":"Associative"}]},{"t":"Pod::Raw","n":"Pod::Raw","b":"A","a":[{"k":"v","t":"Mu","n":"$.target"},{"k":"v","n":"@.contents","t":"Positional"}],"k":"c","m":[{"m":0,"k":"m","s":{"r":"Mu","p":["*%_"]},"n":"target"},{"m":0,"k":"m","s":{"r":"Mu","p":["*%_"]},"n":"contents"},{"k":"s","m":0,"n":"BUILDALL","s":{"p":["@auto","%init","*%_"],"r":"Mu"}}]},{"k":"v","n":"&sqrt","t":"Sub+{is-pure}"},{"n":"sqrt","s":{"r":"Mu","p":["Numeric \\x"]},"k":"s","m":1},{"s":{"p":["Cool \\x"],"r":"Mu"},"n":"sqrt","m":1,"k":"s"},{"m":1,"k":"s","s":{"r":"num","p":["num $a"]},"n":"sqrt"},{"t":"Sub+{is-pure}+{Precedence}","n":"&infix:<∉>","k":"v"},{"s":{"p":["\\a","\\b"],"r":"Bool:D"},"n":"infix:<∉>","m":1,"k":"s"},{"k":"v","t":"Sub","n":"&trait_mod:<is>"},{"n":"trait_mod:<is>","s":{"p":["Mu:U $child","Mu:U $parent"],"r":"Mu"},"k":"s","m":1},{"n":"trait_mod:<is>","s":{"r":"Mu","p":["Mu:U \\child","Mu:U \\parent","@subtypes"]},"m":1,"k":"s"},{"m":1,"k":"s","s":{"p":["Mu:U $child",":$DEPRECATED!"],"r":"Mu"},"n":"trait_mod:<is>"},{"m":1,"k":"s","n":"trait_mod:<is>","s":{"r":"Mu","p":["Mu:U $type",":$rw!"]}},{"k":"s","m":1,"n":"trait_mod:<is>","s":{"p":["Mu:U $type",":$nativesize!"],"r":"Mu"}},{"n":"trait_mod:<is>","s":{"r":"Mu","p":["Mu:U $type",":$ctype!"]},"m":1,"k":"s"},{"m":1,"k":"s","s":{"p":["Mu:U $type",":$unsigned!"],"r":"Mu"},"n":"trait_mod:<is>"},{"k":"s","m":1,"s":{"r":"Mu","p":["Mu:U $type",":$hidden!"]},"n":"trait_mod:<is>"},{"k":"s","m":1,"n":"trait_mod:<is>","s":{"p":["Mu:U $type","Mu :$array_type!"],"r":"Mu"}},{"n":"trait_mod:<is>","s":{"r":"Mu","p":["Mu:U $type","Mu:U $parent","Block $"]},"m":1,"k":"s"},{"k":"s","m":1,"n":"trait_mod:<is>","s":{"p":["Mu:U $type","Mu:U $parent","Hash $"],"r":"Mu"}},{"m":1,"k":"s","n":"trait_mod:<is>","s":{"r":"Mu","p":["Mu:U $type","*%fail"]}},{"k":"s","m":1,"s":{"p":["Attribute:D $attr","|c is raw"],"r":"Mu"},"n":"trait_mod:<is>"},{"n":"trait_mod:<is>","s":{"p":["Attribute:D $attr",":$rw!"],"r":"Mu"},"k":"s","m":1},{"n":"trait_mod:<is>","s":{"p":["Attribute:D $attr",":$readonly!"],"r":"Mu"},"k":"s","m":1},{"k":"s","m":1,"n":"trait_mod:<is>","s":{"p":["Attribute:D $attr",":$required!"],"r":"Mu"}},{"s":{"p":["Attribute:D $attr","Mu :$default!"],"r":"Mu"},"n":"trait_mod:<is>","m":1,"k":"s"},{"m":1,"k":"s","n":"trait_mod:<is>","s":{"p":["Attribute:D $attr",":$box_target!"],"r":"Mu"}},{"s":{"p":["Attribute:D $attr",":$DEPRECATED!"],"r":"Mu"},"n":"trait_mod:<is>","m":1,"k":"s"},{"s":{"r":"Mu","p":["Attribute:D $attr",":$leading_docs!"]},"n":"trait_mod:<is>","m":1,"k":"s"},{"k":"s","m":1,"n":"trait_mod:<is>","s":{"r":"Mu","p":["Attribute:D $attr",":$trailing_docs!"]}},{"s":{"p":["Routine:D $r","|c is raw"],"r":"Mu"},"n":"trait_mod:<is>","k":"s","m":1},{"m":1,"k":"s","s":{"r":"Mu","p":["Routine:D $r",":$rw!"]},"n":"trait_mod:<is>"},{"n":"trait_mod:<is>","s":{"p":["Routine:D $r",":$raw!"],"r":"Mu"},"m":1,"k":"s"},{"n":"trait_mod:<is>","s":{"r":"Mu","p":["Routine:D $r",":$default!"]},"m":1,"k":"s"},{"n":"trait_mod:<is>","s":{"p":["Routine:D $r",":$DEPRECATED!"],"r":"Mu"},"k":"s","m":1},{"k":"s","m":1,"n":"trait_mod:<is>","s":{"p":["Routine:D $r","Mu :$inlinable!"],"r":"Mu"}},{"n":"trait_mod:<is>","s":{"r":"Mu","p":["Routine:D $r",":$onlystar!"]},"m":1,"k":"s"},{"m":1,"k":"s","s":{"p":["Routine:D $r",":prec(%spec)!"],"r":"Mu"},"n":"trait_mod:<is>"},{"m":1,"k":"s","s":{"p":["Routine:D $r",":&equiv!"],"r":"Mu"},"n":"trait_mod:<is>"},{"m":1,"k":"s","n":"trait_mod:<is>","s":{"p":["Routine:D $r",":&tighter!"],"r":"Mu"}},{"k":"s","m":1,"n":"trait_mod:<is>","s":{"r":"Mu","p":["Routine:D $r",":&looser!"]}},{"s":{"p":["Routine:D $r",":$assoc!"],"r":"Mu"},"n":"trait_mod:<is>","m":1,"k":"s"},{"m":1,"k":"s","s":{"p":["Parameter:D $param","|c is raw"],"r":"Mu"},"n":"trait_mod:<is>"},{"s":{"r":"Mu","p":["Parameter:D $param",":$readonly!"]},"n":"trait_mod:<is>","m":1,"k":"s"},{"s":{"p":["Parameter:D $param",":$rw!"],"r":"Mu"},"n":"trait_mod:<is>","k":"s","m":1},{"m":1,"k":"s","n":"trait_mod:<is>","s":{"p":["Parameter:D $param",":$copy!"],"r":"Mu"}},{"n":"trait_mod:<is>","s":{"r":"Mu","p":["Parameter:D $param",":$required!"]},"m":1,"k":"s"},{"s":{"p":["Parameter:D $param",":$raw!"],"r":"Mu"},"n":"trait_mod:<is>","m":1,"k":"s"},{"k":"s","m":1,"s":{"p":["Parameter:D $param",":$onearg!"],"r":"Mu"},"n":"trait_mod:<is>"},{"m":1,"k":"s","n":"trait_mod:<is>","s":{"p":["Parameter:D $param",":$leading_docs!"],"r":"Mu"}},{"n":"trait_mod:<is>","s":{"p":["Parameter:D $param",":$trailing_docs!"],"r":"Mu"},"m":1,"k":"s"},{"m":1,"k":"s","s":{"r":"Mu","p":["Routine:D \\r",":$export!",":$SYMBOL = { ... }"]},"n":"trait_mod:<is>"},{"s":{"r":"Mu","p":["Mu:U \\type",":$export!"]},"n":"trait_mod:<is>","k":"s","m":1},{"k":"s","m":1,"n":"trait_mod:<is>","s":{"p":["Mu \\sym",":$export!",":$SYMBOL!"],"r":"Mu"}},{"n":"trait_mod:<is>","s":{"p":["Block:D $r",":$leading_docs!"],"r":"Mu"},"m":1,"k":"s"},{"s":{"p":["Block:D $r",":$trailing_docs!"],"r":"Mu"},"n":"trait_mod:<is>","k":"s","m":1},{"n":"trait_mod:<is>","s":{"p":["Routine:D $r",":$leading_docs!"],"r":"Mu"},"m":1,"k":"s"},{"k":"s","m":1,"n":"trait_mod:<is>","s":{"r":"Mu","p":["Routine:D $r",":$trailing_docs!"]}},{"n":"trait_mod:<is>","s":{"r":"Mu","p":["Mu:U $docee",":$leading_docs!"]},"m":1,"k":"s"},{"s":{"r":"Mu","p":["Mu:U $docee",":$trailing_docs!"]},"n":"trait_mod:<is>","m":1,"k":"s"},{"s":{"r":"Mu","p":["Routine:D $r",":$hidden-from-backtrace!"]},"n":"trait_mod:<is>","m":1,"k":"s"},{"k":"s","m":1,"n":"trait_mod:<is>","s":{"p":["Routine:D $r",":$hidden-from-USAGE!"],"r":"Mu"}},{"k":"s","m":1,"s":{"r":"Mu","p":["Routine:D $r",":$pure!"]},"n":"trait_mod:<is>"},{"k":"s","m":1,"n":"trait_mod:<is>","s":{"p":["Routine:D $r",":$nodal!"],"r":"Mu"}},{"s":{"r":"Mu","p":["Variable:D $v","|c is raw"]},"n":"trait_mod:<is>","k":"s","m":1},{"n":"trait_mod:<is>","s":{"p":["Variable:D $v","Mu :$default!"],"r":"Mu"},"m":1,"k":"s"},{"n":"trait_mod:<is>","s":{"r":"Mu","p":["Variable:D $v",":$dynamic!"]},"m":1,"k":"s"},{"k":"s","m":1,"s":{"r":"Mu","p":["Variable:D $v",":$export!"]},"n":"trait_mod:<is>"},{"s":{"p":["Routine $r","Str :$equiv!"],"r":"Mu"},"n":"trait_mod:<is>","k":"s","m":1},{"s":{"p":["Routine $r","Str :$tighter!"],"r":"Mu"},"n":"trait_mod:<is>","k":"s","m":1},{"m":1,"k":"s","s":{"p":["Routine $r","Str :$looser!"],"r":"Mu"},"n":"trait_mod:<is>"},{"t":"Date","n":"Date","d":"TITLE\nclass Date\n\nSUBTITLE\nCalendar date\n\n    class Date { }\n\nA Date is an immutable object identifying a day in the Gregorian calendar.\n\nDate objects support addition and subtraction of integers, where an integer\nis interpreted as the number of days. You can compare Date objects with the\nnumeric comparison operators ==, <, <=, >, >=, != . Their stringification\nin YYYY-MM-DD format means that comparing them with the string operators\neq, lt, le etc. also gives the right result.\n\nDate.today creates an object the current day according to the system\nclock.\n\n    my $d = Date.new(2015, 12, 24); # Christmas Eve!\n    say $d;                         # OUTPUT: «2015-12-24␤»\n    say $d.year;                    # OUTPUT: «2015␤»\n    say $d.month;                   # OUTPUT: «12␤»\n    say $d.day;                     # OUTPUT: «24␤»\n    say $d.day-of-week;             # OUTPUT: «4␤» (Thursday)\n    say $d.later(days => 20);       # OUTPUT: «2016-01-13␤»\n    my $n = Date.new('2015-12-31'); # New Year's Eve\n    say $n - $d;                    # OUTPUT: «7␤», 7 days between New Years/Christmas Eve\n    say $n + 1;                     # OUTPUT: «2016-01-01␤»\n\nNote since version 6.d, .perl can be called on Date.\n\n","m":[{"s":{"r":"Date:D","p":["Int:D(Any):D $year","Int:D(Any):D $month","Int:D(Any):D $day",":&formatter","*%_"]},"n":"new","k":"m","m":1},{"n":"new","s":{"r":"Date:D","p":["Int:D(Any):D :$year!","Int:D(Any):D :$month = 1","Int:D(Any):D :$day = 1",":&formatter","*%_"]},"k":"m","m":1},{"k":"m","m":1,"s":{"p":["Str $date",":&formatter","*%_"],"r":"Date:D"},"n":"new"},{"s":{"p":["Dateish $d",":&formatter","*%_"],"r":"Date:D"},"n":"new","k":"m","m":1},{"m":1,"k":"m","n":"new","s":{"r":"Date:D","p":["Instant $i",":&formatter","*%_"]}},{"n":"new","s":{"r":"Mu","p":["*%_"]},"m":1,"k":"m"},{"k":"m","m":1,"s":{"r":"Date:D","p":["$daycount",":&formatter","*%_"]},"n":"new-from-daycount"},{"m":1,"k":"m","n":"new-from-daycount","s":{"r":"Date:D","p":["$daycount",":&formatter = { ... }","*%_"]}},{"n":"today","s":{"p":[":&formatter","*%_"],"r":"Date:D"},"m":0,"k":"m"},{"k":"m","m":0,"s":{"p":["Cool $unit","*%_"],"r":"Date:D"},"n":"truncated-to"},{"s":{"p":[":$earlier","*%unit"],"r":"Date:D"},"n":"later","k":"m","m":0},{"k":"m","m":0,"s":{"p":["*%_"],"r":"Date:D"},"n":"clone"},{"k":"m","m":0,"n":"new-from-diff","s":{"r":"Date:D","p":["Int:D $diff","*%_"]}},{"m":0,"k":"m","n":"succ","s":{"r":"Date:D","p":["*%_"]}},{"m":0,"k":"m","n":"pred","s":{"r":"Date:D","p":["*%_"]}},{"s":{"p":["*%_"],"r":"DateTime:D"},"n":"DateTime","m":1,"k":"m"},{"n":"DateTime","s":{"r":"DateTime:U","p":["*%_"]},"m":1,"k":"m"},{"k":"m","m":0,"s":{"p":["*%_"],"r":"Date"},"n":"Date"},{"s":{"p":["*%_"],"r":"IO::Path:D"},"n":"IO","m":0,"k":"m"},{"n":"is-leap-year","s":{"r":"Bool:D","p":["*%_"]},"k":"m","m":0},{"k":"m","m":0,"s":{"p":["*%_"],"r":"Int:D"},"n":"days-in-month"},{"m":0,"k":"m","s":{"r":"Int:D","p":["*%_"]},"n":"daycount"},{"k":"m","m":0,"s":{"p":["*%_"],"r":"Int:D"},"n":"day-of-month"},{"s":{"p":["*%_"],"r":"Int:D"},"n":"day-of-week","m":0,"k":"m"},{"m":0,"k":"m","n":"week","s":{"r":"Mu","p":["*%_"]}},{"s":{"r":"Int:D","p":["*%_"]},"n":"week-year","k":"m","m":0},{"m":0,"k":"m","n":"week-number","s":{"r":"Int:D","p":["*%_"]}},{"k":"m","m":0,"s":{"p":["*%_"],"r":"Int:D"},"n":"weekday-of-month"},{"k":"m","m":0,"n":"day-of-year","s":{"p":["*%_"],"r":"Int:D"}},{"m":0,"k":"m","n":"yyyy-mm-dd","s":{"p":["*%_"],"r":"Str:D"}},{"m":0,"k":"m","n":"earlier","s":{"r":"Mu","p":["*%unit"]}},{"m":1,"k":"m","n":"WHICH","s":{"p":["*%_"],"r":"ValueObjAt:D"}},{"s":{"p":["*%_"],"r":"ObjAt:D"},"n":"WHICH","k":"m","m":1},{"m":1,"k":"m","n":"WHICH","s":{"r":"ValueObjAt:D","p":["*%_"]}},{"m":1,"k":"m","n":"perl","s":{"r":"Mu","p":["*%_"]}},{"m":1,"k":"m","s":{"p":["*%_"],"r":"Mu"},"n":"perl"},{"m":1,"k":"m","n":"perl","s":{"r":"Str:D","p":["*%_"]}},{"s":{"p":["\\topic","*%_"],"r":"Mu"},"n":"ACCEPTS","k":"m","m":1},{"k":"m","m":1,"n":"ACCEPTS","s":{"r":"Mu","p":["Mu:U \\topic","*%_"]}},{"m":1,"k":"m","n":"ACCEPTS","s":{"r":"Mu","p":["Mu:D \\a","*%_"]}},{"n":"ACCEPTS","s":{"r":"Bool","p":["Mu:U $","*%_"]},"k":"m","m":1},{"m":1,"k":"m","n":"ACCEPTS","s":{"p":["\\topic","*%_"],"r":"Bool:D"}},{"m":1,"k":"m","s":{"r":"Bool:D","p":["DateTime:D $dt","*%_"]},"n":"ACCEPTS"},{"k":"m","m":1,"n":"Str","s":{"p":["*%_"],"r":"Mu"}},{"m":1,"k":"m","s":{"r":"Mu","p":["*%_"]},"n":"Str"},{"n":"Str","s":{"p":["*%_"],"r":"Str:D"},"k":"m","m":1},{"k":"m","m":1,"n":"gist","s":{"r":"Mu","p":["*%_"]}},{"s":{"p":["*%_"],"r":"Mu"},"n":"gist","k":"m","m":1},{"n":"gist","s":{"p":["*%_"],"r":"Str:D"},"k":"m","m":1},{"k":"m","m":0,"s":{"r":"Mu","p":["*%_"]},"n":"year"},{"n":"month","s":{"r":"Mu","p":["*%_"]},"m":0,"k":"m"},{"s":{"r":"Mu","p":["*%_"]},"n":"day","k":"m","m":0},{"k":"m","m":0,"n":"formatter","s":{"p":["*%_"],"r":"Mu"}},{"s":{"r":"Mu","p":["@auto","%init","*%_"]},"n":"BUILDALL","k":"s","m":0},{"n":"!year-Str","s":{"p":["*%_"],"r":"Str:D"},"k":"m","m":0},{"k":"m","m":0,"n":"!VALID-UNIT","s":{"r":"Mu","p":["$unit","*%_"]}},{"n":"!ymd-from-daycount","s":{"r":"Nil","p":["$daycount","\\year","\\month","\\day","*%_"]},"k":"m","m":0},{"n":"!formatter","s":{"p":["*%_"],"r":"Str:D"},"m":0,"k":"m"},{"k":"m","m":0,"n":"!clone-without-validating","s":{"p":["*%_"],"r":"Date:D"}},{"n":"!SET-SELF","s":{"p":["\\year","\\month","\\day","\\formatter","$daycount?","*%_"],"r":"Date:D"},"k":"m","m":0},{"m":0,"k":"m","s":{"p":["*%_"],"r":"Int:D"},"n":"!calculate-daycount"},{"m":0,"k":"m","n":"!DAYS-IN-MONTH","s":{"p":["\\year","\\month","*%_"],"r":"Int:D"}},{"s":{"r":"Mu","p":["Cool:D $unit","%parts? is copy","*%_"]},"n":"!truncate-ymd","m":0,"k":"m"},{"k":"m","m":0,"n":"!SET-DAYCOUNT","s":{"p":["*%_"],"r":"Mu"}}],"k":"c","a":[{"k":"v","t":"Int","n":"$.year"},{"n":"$.month","t":"Int","k":"v"},{"k":"v","n":"$.day","t":"Int"},{"n":"$.daycount","t":"Int","k":"v"},{"n":"&.formatter","t":"Callable","k":"v"}],"b":"A"},{"t":"Sub+{Callable[Instant:D]}","n":"&term:<now>","k":"v"},{"k":"s","m":0,"s":{"r":"Instant:D","p":[]},"n":"term:<now>"},{"n":"&infix:«(<=)»","t":"Sub+{Callable[Bool:D]}+{is-pure}+{Precedence}","k":"v"},{"n":"infix:«(<=)»","s":{"r":"Bool:D","p":["Setty:D \\a","Setty:D \\b"]},"m":1,"k":"s"},{"m":1,"k":"s","s":{"p":["Setty:D \\a","Mixy:D \\b"],"r":"Bool:D"},"n":"infix:«(<=)»"},{"s":{"p":["Setty:D \\a","Baggy:D \\b"],"r":"Bool:D"},"n":"infix:«(<=)»","m":1,"k":"s"},{"k":"s","m":1,"s":{"r":"Bool:D","p":["Setty:D \\a","\\b"]},"n":"infix:«(<=)»"},{"m":1,"k":"s","s":{"r":"Bool:D","p":["Mixy:D \\a","Mixy:D \\b"]},"n":"infix:«(<=)»"},{"k":"s","m":1,"s":{"p":["Mixy:D \\a","Baggy:D \\b"],"r":"Bool:D"},"n":"infix:«(<=)»"},{"m":1,"k":"s","n":"infix:«(<=)»","s":{"p":["Mixy:D \\a","Setty:D \\b"],"r":"Bool:D"}},{"n":"infix:«(<=)»","s":{"p":["Mixy:D \\a","\\b"],"r":"Bool:D"},"m":1,"k":"s"},{"n":"infix:«(<=)»","s":{"r":"Bool:D","p":["Baggy:D \\a","Mixy:D \\b"]},"m":1,"k":"s"},{"k":"s","m":1,"s":{"r":"Bool:D","p":["Baggy:D \\a","Baggy:D \\b"]},"n":"infix:«(<=)»"},{"k":"s","m":1,"s":{"p":["Baggy:D \\a","Setty:D \\b"],"r":"Bool:D"},"n":"infix:«(<=)»"},{"m":1,"k":"s","s":{"r":"Bool:D","p":["Baggy:D \\a","\\b"]},"n":"infix:«(<=)»"},{"k":"s","m":1,"n":"infix:«(<=)»","s":{"p":["Map:D \\a","Map:D \\b"],"r":"Bool:D"}},{"m":1,"k":"s","n":"infix:«(<=)»","s":{"r":"Bool:D","p":["Iterable:D \\a","Map:D \\b"]}},{"m":1,"k":"s","s":{"r":"Bool:D","p":["\\a","Mixy:D \\b"]},"n":"infix:«(<=)»"},{"s":{"r":"Bool:D","p":["\\a","Baggy:D \\b"]},"n":"infix:«(<=)»","m":1,"k":"s"},{"m":1,"k":"s","n":"infix:«(<=)»","s":{"r":"Bool:D","p":["\\a","Setty:D \\b"]}},{"k":"s","m":1,"s":{"p":["Failure:D \\a","$"],"r":"Mu"},"n":"infix:«(<=)»"},{"s":{"r":"Mu","p":["$","Failure:D \\b"]},"n":"infix:«(<=)»","m":1,"k":"s"},{"k":"s","m":1,"s":{"p":["\\a","\\b"],"r":"Bool:D"},"n":"infix:«(<=)»"},{"k":"v","n":"&postfix:<ⁿ>","t":"Sub+{is-pure}"},{"n":"postfix:<ⁿ>","s":{"r":"Mu","p":["\\a","\\b"]},"k":"s","m":1},{"t":"JSONException","n":"JSONException","m":[{"m":0,"k":"m","s":{"r":"Mu","p":["*%_"]},"n":"message"},{"m":0,"k":"m","n":"text","s":{"p":["*%_"],"r":"Mu"}},{"k":"s","m":0,"s":{"r":"Mu","p":["@auto","%init","*%_"]},"n":"BUILDALL"},{"n":"resume","s":{"r":"Bool","p":["*%_"]},"m":0,"k":"m"},{"s":{"r":"Mu","p":["*%_"]},"n":"reset-backtrace","m":0,"k":"m"},{"n":"is-compile-time","s":{"r":"Bool","p":["*%_"]},"m":0,"k":"m"},{"n":"throw","s":{"r":"Mu","p":["$bt?","*%_"]},"m":0,"k":"m"},{"s":{"r":"Mu","p":["*%_"]},"n":"fail","m":0,"k":"m"},{"s":{"r":"Mu","p":["*%_"]},"n":"Str","k":"m","m":1},{"n":"Str","s":{"p":["*%_"],"r":"Mu"},"m":1,"k":"m"},{"m":1,"k":"m","n":"Str","s":{"r":"Mu","p":["*%_"]}},{"k":"m","m":0,"s":{"p":["*%_"],"r":"Mu"},"n":"die"},{"n":"rethrow","s":{"r":"Mu","p":["*%_"]},"m":0,"k":"m"},{"s":{"r":"Mu","p":["*%_"]},"n":"backtrace","k":"m","m":0},{"s":{"r":"Mu","p":["*%_"]},"n":"gist","m":1,"k":"m"},{"s":{"p":["*%_"],"r":"Mu"},"n":"gist","k":"m","m":1},{"s":{"r":"Mu","p":["*%_"]},"n":"gist","m":1,"k":"m"},{"k":"m","m":0,"n":"vault-backtrace","s":{"p":["*%_"],"r":"Mu"}},{"m":0,"k":"s","s":{"r":"Mu","p":["@auto","%init","*%_"]},"n":"BUILDALL"}],"k":"c","a":[{"t":"Mu","n":"$.text","k":"v"},{"n":"$!ex","t":"Mu","k":"v"},{"k":"v","n":"$!bt","t":"Mu"}],"b":"A"},{"t":"Tappable","n":"Tappable","m":[{"k":"m","m":0,"s":{"r":"Mu","p":["&emit","&done","&quit","&tap","*%_"]},"n":"tap"},{"k":"m","m":0,"s":{"p":["*%_"],"r":"Mu"},"n":"live"},{"n":"serial","s":{"p":["*%_"],"r":"Mu"},"m":0,"k":"m"},{"s":{"r":"Mu","p":["*%_"]},"n":"sane","k":"m","m":0}],"k":"ro","b":"C"},{"n":"&ords","t":"Sub","k":"v"},{"k":"s","m":1,"s":{"r":"Mu","p":["Cool:D $s"]},"n":"ords"},{"k":"v","t":"Sub+{is-pure}+{Precedence}","n":"&infix:«(>=)»"},{"s":{"r":"Bool:D","p":["\\a","\\b"]},"n":"infix:«(>=)»","m":1,"k":"s"},{"k":"v","t":"Sub","n":"&keys"},{"n":"keys","s":{"r":"Mu","p":["$x"]},"m":1,"k":"s"},{"t":"Sub","n":"&lsb","k":"v"},{"k":"s","m":1,"s":{"p":["Int:D \\i"],"r":"Int:D"},"n":"lsb"},{"n":"&ord","t":"Sub","k":"v"},{"s":{"p":["Cool $s"],"r":"Mu"},"n":"ord","m":1,"k":"s"},{"t":"Sub","n":"&sort","k":"v"},{"n":"sort","s":{"p":["&by","@values"],"r":"Mu"},"m":1,"k":"s"},{"k":"s","m":1,"s":{"r":"Mu","p":["&by","+\\values is raw"]},"n":"sort"},{"s":{"r":"Mu","p":["@values"]},"n":"sort","m":1,"k":"s"},{"k":"s","m":1,"s":{"p":["+\\values is raw"],"r":"Mu"},"n":"sort"},{"n":"utf8","t":"utf8","b":"A","m":[{"m":0,"k":"m","s":{"p":["*%_"],"r":"Str"},"n":"encoding"},{"m":1,"k":"m","n":"STORE","s":{"p":["Iterable:D \\iterable",":$INITIALIZE","*%_"],"r":"Mu"}},{"n":"STORE","s":{"r":"Mu","p":["Any:D \\non-iterable",":$INITIALIZE","*%_"]},"m":1,"k":"m"},{"n":"allocate","s":{"p":["Int:D $elements","*%_"],"r":"Mu"},"k":"m","m":1},{"n":"allocate","s":{"p":["Int:D $elements","int $value","*%_"],"r":"Mu"},"m":1,"k":"m"},{"n":"allocate","s":{"p":["Int:D $elements","Int:D \\value","*%_"],"r":"Mu"},"k":"m","m":1},{"m":1,"k":"m","s":{"p":["Int:D $elements","Mu:D $got","*%_"],"r":"Mu"},"n":"allocate"},{"n":"allocate","s":{"p":["Int:D $elements","int @values","*%_"],"r":"Mu"},"m":1,"k":"m"},{"s":{"p":["Int:D $elements","Blob:D $blob","*%_"],"r":"Mu"},"n":"allocate","m":1,"k":"m"},{"s":{"p":["Int:D $elements","@values","*%_"],"r":"Mu"},"n":"allocate","m":1,"k":"m"},{"k":"m","m":0,"n":"read-int8","s":{"r":"int","p":["int $offset","Endian $?","*%_"]}},{"n":"read-int16","s":{"p":["int $offset","Endian $endian = Endian::NativeEndian","*%_"],"r":"int"},"m":0,"k":"m"},{"k":"m","m":0,"n":"read-int32","s":{"p":["int $offset","Endian $endian = Endian::NativeEndian","*%_"],"r":"int"}},{"n":"read-int64","s":{"r":"int","p":["int $offset","Endian $endian = Endian::NativeEndian","*%_"]},"k":"m","m":0},{"k":"m","m":0,"n":"read-int128","s":{"p":["int $offset","Endian $endian = Endian::NativeEndian","*%_"],"r":"Int"}},{"m":0,"k":"m","n":"read-uint8","s":{"p":["int $offset","Endian $?","*%_"],"r":"uint"}},{"k":"m","m":0,"s":{"p":["int $offset","Endian $endian = Endian::NativeEndian","*%_"],"r":"uint"},"n":"read-uint16"},{"k":"m","m":0,"n":"read-uint32","s":{"p":["int $offset","Endian $endian = Endian::NativeEndian","*%_"],"r":"uint"}},{"k":"m","m":0,"n":"read-uint64","s":{"p":["int $offset","Endian $endian = Endian::NativeEndian","*%_"],"r":"uint"}},{"n":"read-uint128","s":{"p":["int $offset","Endian $endian = Endian::NativeEndian","*%_"],"r":"uint"},"m":0,"k":"m"},{"s":{"r":"num","p":["int $offset","Endian $endian = Endian::NativeEndian","*%_"]},"n":"read-num32","k":"m","m":0},{"m":0,"k":"m","s":{"r":"num","p":["int $offset","Endian $endian = Endian::NativeEndian","*%_"]},"n":"read-num64"},{"m":0,"k":"m","s":{"p":["int $pos","Int:D $bits","*%_"],"r":"Int:D"},"n":"read-bits"},{"m":0,"k":"m","s":{"p":["int $pos","Int:D $bits","*%_"],"r":"UInt:D"},"n":"read-ubits"},{"n":"Capture","s":{"r":"Mu","p":["*%_"]},"m":0,"k":"m"},{"n":"Numeric","s":{"p":["*%_"],"r":"Mu"},"m":0,"k":"m"},{"m":0,"k":"m","n":"Int","s":{"p":["*%_"],"r":"Mu"}},{"s":{"p":["*%_"],"r":"Mu"},"n":"bytes","m":0,"k":"m"},{"n":"chars","s":{"p":["*%_"],"r":"Mu"},"k":"m","m":0},{"s":{"p":["$encoding = { ... }","*%_"],"r":"Mu"},"n":"decode","k":"m","m":1},{"k":"m","m":1,"n":"decode","s":{"p":["$encoding","Str :$replacement!","Bool:D :$strict = Bool::False","*%_"],"r":"Mu"}},{"m":1,"k":"m","s":{"r":"Mu","p":["$encoding","Bool:D :$strict = Bool::False","*%_"]},"n":"decode"},{"k":"m","m":1,"s":{"p":["Range:D $fromto","*%_"],"r":"Mu"},"n":"subbuf"},{"s":{"p":["Int:D $From","*%_"],"r":"Mu"},"n":"subbuf","k":"m","m":1},{"n":"subbuf","s":{"r":"Mu","p":["&From","*%_"]},"k":"m","m":1},{"n":"subbuf","s":{"p":["Int:D $From","Int:D $Length","*%_"],"r":"Mu"},"m":1,"k":"m"},{"s":{"r":"Mu","p":["Int:D $From","&End","*%_"]},"n":"subbuf","k":"m","m":1},{"m":1,"k":"m","s":{"p":["&From","Int:D $Length","*%_"],"r":"Mu"},"n":"subbuf"},{"s":{"r":"Mu","p":["&From","&End","*%_"]},"n":"subbuf","m":1,"k":"m"},{"s":{"r":"Mu","p":["\\from","Whatever $","*%_"]},"n":"subbuf","m":1,"k":"m"},{"m":1,"k":"m","s":{"p":["\\from","Numeric \\length","*%_"],"r":"Mu"},"n":"subbuf"},{"m":1,"k":"m","s":{"r":"Mu","p":["\\from","Any:U $","*%_"]},"n":"subbuf"},{"s":{"r":"Mu","p":["*%_"]},"n":"reverse","m":0,"k":"m"},{"s":{"p":["Blob:D \\other","*%_"],"r":"Mu"},"n":"COMPARE","m":0,"k":"m"},{"n":"SAME","s":{"r":"Mu","p":["Blob:D \\other","*%_"]},"k":"m","m":0},{"n":"join","s":{"r":"Mu","p":["$delim = \"\"","*%_"]},"m":0,"k":"m"},{"n":"unpack","s":{"p":["Str:D $template","*%_"],"r":"Mu"},"m":1,"k":"m"},{"m":1,"k":"m","n":"unpack","s":{"r":"Mu","p":["@template","*%_"]}},{"m":0,"k":"m","s":{"r":"Mu","p":["*%_"]},"n":"contents"},{"m":0,"k":"m","s":{"r":"Mu","p":["*%_"]},"n":"of"},{"n":"Str","s":{"r":"Mu","p":["*%_"]},"m":1,"k":"m"},{"m":1,"k":"m","n":"Str","s":{"r":"Mu","p":["*%_"]}},{"s":{"r":"Mu","p":["*%_"]},"n":"Str","m":1,"k":"m"},{"k":"m","m":1,"s":{"r":"Mu","p":["*%_"]},"n":"Str"},{"s":{"r":"Mu","p":["*%_"]},"n":"Stringy","m":1,"k":"m"},{"n":"Stringy","s":{"p":["*%_"],"r":"Mu"},"k":"m","m":1},{"k":"m","m":1,"s":{"r":"Mu","p":["*%_"]},"n":"Stringy"},{"k":"m","m":1,"s":{"r":"Mu","p":["*%_"]},"n":"Stringy"},{"k":"m","m":1,"n":"WHICH","s":{"p":["*%_"],"r":"ValueObjAt:D"}},{"k":"m","m":1,"s":{"r":"ObjAt:D","p":["*%_"]},"n":"WHICH"},{"s":{"r":"ValueObjAt:D","p":["*%_"]},"n":"WHICH","k":"m","m":1},{"k":"m","m":1,"n":"new","s":{"p":["*%attrinit"],"r":"Mu"}},{"s":{"r":"Mu","p":["$","*@","*%_"]},"n":"new","k":"m","m":1},{"n":"new","s":{"p":["*%_"],"r":"Mu"},"k":"m","m":1},{"s":{"p":["Blob:D $blob","*%_"],"r":"Mu"},"n":"new","k":"m","m":1},{"k":"m","m":1,"s":{"r":"Mu","p":["int @values","*%_"]},"n":"new"},{"s":{"p":["@values","*%_"],"r":"Mu"},"n":"new","k":"m","m":1},{"k":"m","m":1,"n":"new","s":{"p":["*@values","*%_"],"r":"Mu"}},{"s":{"p":["Any:D $","*%_"],"r":"Bool"},"n":"EXISTS-POS","k":"m","m":1},{"n":"EXISTS-POS","s":{"p":["Any:U $pos","*%_"],"r":"Mu"},"k":"m","m":1},{"s":{"p":["int \\pos","*%_"],"r":"Bool:D"},"n":"EXISTS-POS","k":"m","m":1},{"m":1,"k":"m","s":{"r":"Bool:D","p":["Int:D \\pos","*%_"]},"n":"EXISTS-POS"},{"m":1,"k":"m","s":{"p":["Num:D \\pos","*%_"],"r":"Bool:D"},"n":"EXISTS-POS"},{"s":{"p":["Any:D \\pos","*%_"],"r":"Bool:D"},"n":"EXISTS-POS","m":1,"k":"m"},{"s":{"p":["Any:U \\pos","*%_"],"r":"Mu"},"n":"EXISTS-POS","k":"m","m":1},{"n":"EXISTS-POS","s":{"p":["\\one","\\two","*%_"],"r":"Bool:D"},"m":1,"k":"m"},{"m":1,"k":"m","s":{"p":["\\one","\\two","\\three","*%_"],"r":"Bool:D"},"n":"EXISTS-POS"},{"m":1,"k":"m","n":"EXISTS-POS","s":{"p":["**@indices","*%_"],"r":"Bool:D"}},{"m":1,"k":"m","s":{"p":["int \\pos","*%_"],"r":"Mu"},"n":"EXISTS-POS"},{"m":1,"k":"m","s":{"p":["Int:D \\pos","*%_"],"r":"Mu"},"n":"EXISTS-POS"},{"m":1,"k":"m","s":{"p":["int \\pos","*%_"],"r":"Mu"},"n":"AT-POS"},{"m":1,"k":"m","n":"AT-POS","s":{"r":"Mu","p":["Int:D \\pos","*%_"]}},{"m":1,"k":"m","s":{"r":"Mu","p":["Num:D \\pos","*%_"]},"n":"AT-POS"},{"s":{"p":["Any:D \\pos","*%_"],"r":"Mu"},"n":"AT-POS","k":"m","m":1},{"n":"AT-POS","s":{"r":"Mu","p":["int \\pos","*%_"]},"k":"m","m":1},{"n":"AT-POS","s":{"p":["Int:D \\pos","*%_"],"r":"Mu"},"k":"m","m":1},{"k":"m","m":1,"n":"AT-POS","s":{"r":"Mu","p":["Num:D \\pos","*%_"]}},{"s":{"p":["Any:D \\pos","*%_"],"r":"Mu"},"n":"AT-POS","m":1,"k":"m"},{"n":"AT-POS","s":{"r":"Mu","p":["Any:U \\pos","*%_"]},"m":1,"k":"m"},{"n":"AT-POS","s":{"r":"Mu","p":["\\one","\\two","*%_"]},"k":"m","m":1},{"s":{"r":"Mu","p":["\\one","\\two","\\three","*%_"]},"n":"AT-POS","m":1,"k":"m"},{"n":"AT-POS","s":{"r":"Mu","p":["**@indices","*%_"]},"k":"m","m":1},{"k":"m","m":1,"s":{"p":["int \\pos","*%_"],"r":"Mu"},"n":"AT-POS"},{"n":"AT-POS","s":{"r":"Mu","p":["Int:D \\pos","*%_"]},"k":"m","m":1},{"n":"Bool","s":{"p":["*%_"],"r":"Bool"},"k":"m","m":1},{"m":1,"k":"m","n":"Bool","s":{"r":"Mu","p":["*%_"]}},{"s":{"r":"Mu","p":["*%_"]},"n":"Bool","k":"m","m":1},{"m":1,"k":"m","n":"elems","s":{"r":"Int","p":["*%_"]}},{"k":"m","m":1,"n":"elems","s":{"p":["*%_"],"r":"Mu"}},{"s":{"p":["*%_"],"r":"Mu"},"n":"elems","k":"m","m":1},{"s":{"p":["*%_"],"r":"Int"},"n":"elems","k":"m","m":1},{"n":"list","s":{"p":["*%_"],"r":"Mu"},"m":1,"k":"m"},{"k":"m","m":1,"s":{"r":"Mu","p":["*%_"]},"n":"list"},{"s":{"p":["*%_"],"r":"Mu"},"n":"list","k":"m","m":1},{"k":"m","m":1,"s":{"r":"Mu","p":["*%_"]},"n":"gist"},{"k":"m","m":1,"n":"gist","s":{"p":["*%_"],"r":"Mu"}},{"k":"m","m":1,"n":"gist","s":{"p":["*%_"],"r":"Mu"}},{"m":1,"k":"m","s":{"r":"Mu","p":["*%_"]},"n":"perl"},{"m":1,"k":"m","s":{"r":"Mu","p":["*%_"]},"n":"perl"},{"m":1,"k":"m","s":{"r":"Mu","p":["*%_"]},"n":"perl"},{"n":"ACCEPTS","s":{"r":"Mu","p":["\\topic","*%_"]},"m":1,"k":"m"},{"n":"ACCEPTS","s":{"p":["Mu:U \\topic","*%_"],"r":"Mu"},"k":"m","m":1},{"m":1,"k":"m","s":{"p":["Mu:D \\a","*%_"],"r":"Mu"},"n":"ACCEPTS"},{"k":"m","m":1,"n":"ACCEPTS","s":{"p":["Mu:U $","*%_"],"r":"Bool"}},{"s":{"r":"Bool:D","p":["\\topic","*%_"]},"n":"ACCEPTS","k":"m","m":1},{"k":"m","m":1,"s":{"p":["Blob:D \\Other","*%_"],"r":"Mu"},"n":"ACCEPTS"},{"n":"BUILDALL","s":{"p":["@auto","%init","*%_"],"r":"Mu"},"m":0,"k":"s"},{"k":"m","m":0,"s":{"p":["$action","$got","*%_"],"r":"Mu"},"n":"!fail-typecheck"},{"n":"!push-list","s":{"p":["\\action","\\to","\\from","*%_"],"r":"Mu"},"k":"m","m":0},{"n":"!spread","s":{"p":["\\to","\\from","*%_"],"r":"Mu"},"m":0,"k":"m"},{"n":"!unshift-list","s":{"p":["\\action","\\to","\\from","*%_"],"r":"Mu"},"m":0,"k":"m"},{"k":"m","m":0,"n":"!fail-range","s":{"r":"Mu","p":["$got","*%_"]}},{"s":{"p":["\\action","\\i","\\got","*%_"],"r":"Mu"},"n":"!fail-typecheck-element","k":"m","m":0}],"k":"c","d":"TITLE\nclass utf8\n\nSUBTITLE\nMutable uint8 buffer for utf8 binary data\n\n    class utf8 does Blob[uint8] is repr('VMArray') {}\n\nA utf8 is a subtype of Blob which is specifically uint8 data for holding\nUTF-8 encoded text.\n\n    my utf8 $b = \"hello\".encode;\n    say $b[1].fmt(\"0x%X\"); # OUTPUT: «0x65␤»"},{"t":"Sub+{is-pure}+{Precedence}","n":"&infix:<ge>","k":"v"},{"k":"s","m":1,"n":"infix:<ge>","s":{"p":["$x?"],"r":"Mu"}},{"k":"s","m":1,"n":"infix:<ge>","s":{"p":["\\a","\\b"],"r":"Mu"}},{"n":"infix:<ge>","s":{"p":["Blob:D \\a","Blob:D \\b"],"r":"Mu"},"k":"s","m":1},{"s":{"r":"Bool:D","p":["Str:D \\a","Str:D \\b"]},"n":"infix:<ge>","m":1,"k":"s"},{"k":"v","n":"&prefix:<|>","t":"Sub+{Precedence}"},{"s":{"p":["\\x"],"r":"Slip:D"},"n":"prefix:<|>","k":"s","m":1},{"k":"v","t":"Sub","n":"&trim-leading"},{"m":1,"k":"s","s":{"r":"Str:D","p":["Cool:D $s"]},"n":"trim-leading"},{"t":"Sub","n":"&signal","k":"v"},{"n":"signal","s":{"p":["Signal $signal","*@signals",":$scheduler = { ... }"],"r":"Mu"},"m":1,"k":"s"},{"n":"&uniprop-str","t":"Sub","k":"v"},{"n":"uniprop-str","s":{"r":"Mu","p":["Str:D $str","Stringy:D $propname"]},"m":1,"k":"s"},{"m":1,"k":"s","n":"uniprop-str","s":{"p":["Int:D $code","Stringy:D $propname"],"r":"Mu"}},{"t":"Sub+{is-pure}+{Precedence}","n":"&infix:<&>","k":"v"},{"m":1,"k":"s","n":"infix:<&>","s":{"r":"Mu","p":["+\\values is raw"]}},{"d":"TITLE\nclass DateTime\n\nSUBTITLE\nCalendar date with time\n\n    class DateTime does Dateish {}\n\nFor handling points in civil time, a DateTime object stores year, month,\nday, hour, minute (all Int), second (potentially fractional) and a time\nzone.\n\nIt provides methods for calculating with date and time.\n\nDateTime methods are immutable; if you are tempted to modify one, create a\nmodified copy instead.\n\nTime zones are handled as Integers in seconds offset from UTC, not by time\nzone name.\n\n    my $dt = DateTime.new(\n        year    => 2015,\n        month   => 11,\n        day     => 21,\n        hour    => 16,\n        minute  => 1,\n    );\n\n    say $dt;                            # OUTPUT: «2015-11-21T16:01:00Z␤»\n    say $dt.later(days => 20);          # OUTPUT: «2015-12-11T16:01:00Z␤»\n    say $dt.truncated-to('hour');       # OUTPUT: «2015-11-21T16:00:00Z␤»\n    say $dt.in-timezone(-8 * 3600);     # OUTPUT: «2015-11-21T08:01:00-0800␤»\n\n    my $now = DateTime.now(formatter => { sprintf \"%02d:%02d\", .hour, .minute });\n    say $now;                           # 12:45 (or something like that)\n\n\n","k":"c","m":[{"k":"m","m":1,"s":{"p":["\\y","\\mo","\\d","\\h","\\mi","\\s",":$timezone = 0",":&formatter","*%_"],"r":"DateTime:D"},"n":"new"},{"k":"m","m":1,"n":"new","s":{"r":"DateTime:D","p":[":$year!",":$month = 1",":$day = 1",":$hour = 0",":$minute = 0",":$second = 0",":$timezone = 0",":&formatter","*%_"]}},{"s":{"r":"DateTime:D","p":["Date:D :$date!","*%_"]},"n":"new","k":"m","m":1},{"s":{"r":"DateTime:D","p":["Instant:D $i",":$timezone = 0","*%_"]},"n":"new","m":1,"k":"m"},{"m":1,"k":"m","n":"new","s":{"r":"DateTime:D","p":["Numeric:D $time is copy",":$timezone = 0",":&formatter","*%_"]}},{"n":"new","s":{"r":"DateTime:D","p":["Str:D $datetime",":$timezone is copy",":&formatter","*%_"]},"k":"m","m":1},{"n":"new","s":{"r":"Mu","p":["*%_"]},"m":1,"k":"m"},{"k":"m","m":0,"n":"now","s":{"p":[":$timezone = { ... }",":&formatter","*%_"],"r":"DateTime:D"}},{"s":{"r":"DateTime:D","p":["*%_"]},"n":"clone","m":0,"k":"m"},{"k":"m","m":0,"n":"Instant","s":{"p":["*%_"],"r":"Instant:D"}},{"n":"posix","s":{"r":"Int:D","p":["$ignore-timezone?","*%_"]},"k":"m","m":0},{"m":0,"k":"m","s":{"p":["*%_"],"r":"Int:D"},"n":"offset"},{"s":{"p":["*%_"],"r":"Rat:D"},"n":"offset-in-minutes","k":"m","m":0},{"k":"m","m":0,"s":{"p":["*%_"],"r":"Rat:D"},"n":"offset-in-hours"},{"k":"m","m":0,"n":"hh-mm-ss","s":{"r":"Str:D","p":["*%_"]}},{"n":"later","s":{"p":[":$earlier","*%unit"],"r":"DateTime:D"},"k":"m","m":0},{"m":0,"k":"m","s":{"r":"DateTime:D","p":["Cool $unit","*%_"]},"n":"truncated-to"},{"k":"m","m":0,"s":{"p":["*%_"],"r":"Int:D"},"n":"whole-second"},{"s":{"r":"DateTime:D","p":["Int(Cool) $timezone","*%_"]},"n":"in-timezone","k":"m","m":0},{"k":"m","m":0,"n":"utc","s":{"r":"DateTime:D","p":["*%_"]}},{"m":0,"k":"m","n":"local","s":{"p":["*%_"],"r":"DateTime:D"}},{"n":"Date","s":{"r":"Date:D","p":["*%_"]},"k":"m","m":1},{"k":"m","m":1,"n":"Date","s":{"p":["*%_"],"r":"Date:U"}},{"k":"m","m":0,"s":{"r":"DateTime","p":["*%_"]},"n":"DateTime"},{"k":"m","m":0,"s":{"p":["*%_"],"r":"IO::Path:D"},"n":"IO"},{"s":{"r":"Bool:D","p":["*%_"]},"n":"is-leap-year","k":"m","m":0},{"k":"m","m":0,"s":{"p":["*%_"],"r":"Int:D"},"n":"days-in-month"},{"s":{"r":"Int:D","p":["*%_"]},"n":"daycount","m":0,"k":"m"},{"s":{"p":["*%_"],"r":"Int:D"},"n":"day-of-month","m":0,"k":"m"},{"m":0,"k":"m","s":{"p":["*%_"],"r":"Int:D"},"n":"day-of-week"},{"m":0,"k":"m","n":"week","s":{"r":"Mu","p":["*%_"]}},{"n":"week-year","s":{"r":"Int:D","p":["*%_"]},"k":"m","m":0},{"n":"week-number","s":{"p":["*%_"],"r":"Int:D"},"m":0,"k":"m"},{"m":0,"k":"m","s":{"r":"Int:D","p":["*%_"]},"n":"weekday-of-month"},{"n":"day-of-year","s":{"p":["*%_"],"r":"Int:D"},"m":0,"k":"m"},{"s":{"p":["*%_"],"r":"Str:D"},"n":"yyyy-mm-dd","m":0,"k":"m"},{"s":{"p":["*%unit"],"r":"Mu"},"n":"earlier","k":"m","m":0},{"n":"perl","s":{"r":"Mu","p":["*%_"]},"m":1,"k":"m"},{"m":1,"k":"m","s":{"p":["*%_"],"r":"Mu"},"n":"perl"},{"s":{"r":"Str:D","p":["*%_"]},"n":"perl","k":"m","m":1},{"k":"m","m":1,"s":{"r":"Mu","p":["*%_"]},"n":"Str"},{"k":"m","m":1,"n":"Str","s":{"r":"Mu","p":["*%_"]}},{"s":{"r":"Str:D","p":["*%_"]},"n":"Str","m":1,"k":"m"},{"s":{"r":"Mu","p":["*%_"]},"n":"gist","k":"m","m":1},{"n":"gist","s":{"p":["*%_"],"r":"Mu"},"k":"m","m":1},{"n":"gist","s":{"r":"Str:D","p":["*%_"]},"k":"m","m":1},{"n":"hour","s":{"r":"Mu","p":["*%_"]},"k":"m","m":0},{"k":"m","m":0,"n":"minute","s":{"r":"Mu","p":["*%_"]}},{"s":{"p":["*%_"],"r":"Mu"},"n":"second","k":"m","m":0},{"s":{"p":["*%_"],"r":"Mu"},"n":"timezone","k":"m","m":0},{"k":"m","m":0,"n":"year","s":{"p":["*%_"],"r":"Mu"}},{"m":0,"k":"m","n":"month","s":{"r":"Mu","p":["*%_"]}},{"k":"m","m":0,"s":{"r":"Mu","p":["*%_"]},"n":"day"},{"n":"formatter","s":{"r":"Mu","p":["*%_"]},"k":"m","m":0},{"s":{"r":"Mu","p":["@auto","%init","*%_"]},"n":"BUILDALL","k":"s","m":0},{"s":{"r":"Nil","p":["$daycount","\\year","\\month","\\day","*%_"]},"n":"!ymd-from-daycount","m":0,"k":"m"},{"n":"!VALID-UNIT","s":{"p":["$unit","*%_"],"r":"Mu"},"k":"m","m":0},{"k":"m","m":0,"n":"!formatter","s":{"p":["*%_"],"r":"Mu"}},{"n":"!SET-SELF","s":{"p":["Int:D \\year","Int:D \\month","Int:D \\day","Int:D \\hour","Int:D \\minute","\\second","Int:D \\timezone","&formatter","*%_"],"r":"DateTime:D"},"k":"m","m":0},{"s":{"r":"DateTime:D","p":["*%_"]},"n":"!clone-without-validating","k":"m","m":0},{"n":"!year-Str","s":{"p":["*%_"],"r":"Str:D"},"m":0,"k":"m"},{"n":"!check-leap-second","s":{"p":["*%_"],"r":"DateTime:D"},"m":0,"k":"m"},{"s":{"p":["\\year","\\month","*%_"],"r":"Int:D"},"n":"!DAYS-IN-MONTH","k":"m","m":0},{"n":"!truncate-ymd","s":{"p":["Cool:D $unit","%parts? is copy","*%_"],"r":"Mu"},"k":"m","m":0},{"n":"!SET-DAYCOUNT","s":{"p":["*%_"],"r":"Mu"},"k":"m","m":0},{"k":"m","m":0,"s":{"r":"Int:D","p":["*%_"]},"n":"!calculate-daycount"},{"m":0,"k":"m","s":{"r":"DateTime:D","p":["$year","$month","$day","$hour","$minute","$second","%extra",":$timezone = 0",":&formatter","*%_"]},"n":"!new-from-positional"}],"b":"A","a":[{"k":"v","t":"Int","n":"$.hour"},{"k":"v","t":"Int","n":"$.minute"},{"t":"Mu","n":"$.second","k":"v"},{"n":"$.timezone","t":"Int","k":"v"},{"k":"v","t":"Int","n":"$.year"},{"k":"v","n":"$.month","t":"Int"},{"t":"Int","n":"$.day","k":"v"},{"k":"v","n":"$.daycount","t":"Int"},{"n":"&.formatter","t":"Callable","k":"v"}],"t":"DateTime","n":"DateTime"},{"n":"Order","t":"Order","k":"e"},{"t":"Order","n":"Order::Less","k":"e"},{"k":"e","t":"Order","n":"Order::More"},{"k":"e","t":"Order","n":"Order::Same"},{"t":"Sub","n":"&unique","k":"v"},{"s":{"p":["+\\values is raw","|c is raw"],"r":"Mu"},"n":"unique","k":"s","m":1},{"k":"v","t":"Sub","n":"&combinations"},{"s":{"r":"Seq:D","p":["\\n","\\k"]},"n":"combinations","k":"s","m":1},{"m":1,"k":"s","s":{"r":"Seq:D","p":["\\n","Range:D \\k"]},"n":"combinations"},{"m":1,"k":"s","s":{"p":["Iterable \\n","\\k"],"r":"Seq:D"},"n":"combinations"},{"m":1,"k":"s","n":"combinations","s":{"r":"Seq:D","p":["\\n"]}},{"t":"Signal","n":"SIGTTOU","k":"e"},{"k":"v","t":"Sub","n":"&infix:<...^>"},{"n":"infix:<...^>","s":{"p":["\\a","Mu \\b"],"r":"Mu"},"m":1,"k":"s"},{"k":"v","t":"Sub","n":"&words"},{"n":"words","s":{"p":["$what = { ... }","|c is raw"],"r":"Mu"},"k":"s","m":1},{"k":"v","n":"&srand","t":"Sub"},{"n":"srand","s":{"p":["Int:D $seed"],"r":"Int:D"},"k":"s","m":1},{"k":"v","n":"&infix:<≥>","t":"Sub+{is-pure}"},{"m":1,"k":"s","n":"infix:«>=»","s":{"r":"Mu","p":["$?"]}},{"s":{"p":["\\a","\\b"],"r":"Mu"},"n":"infix:«>=»","m":1,"k":"s"},{"s":{"p":["Real \\a","Real \\b"],"r":"Mu"},"n":"infix:«>=»","m":1,"k":"s"},{"m":1,"k":"s","s":{"p":["Int:D \\a","Int:D \\b"],"r":"Bool:D"},"n":"infix:«>=»"},{"k":"s","m":1,"n":"infix:«>=»","s":{"r":"Bool:D","p":["int $a","int $b"]}},{"k":"s","m":1,"n":"infix:«>=»","s":{"p":["Num:D \\a","Num:D \\b"],"r":"Bool:D"}},{"k":"s","m":1,"n":"infix:«>=»","s":{"p":["num $a","num $b"],"r":"Bool:D"}},{"s":{"r":"Bool:D","p":["Rational:D \\a","Rational:D \\b"]},"n":"infix:«>=»","m":1,"k":"s"},{"k":"s","m":1,"n":"infix:«>=»","s":{"p":["Rational:D \\a","Int:D \\b"],"r":"Bool:D"}},{"n":"infix:«>=»","s":{"r":"Bool:D","p":["Int:D \\a","Rational:D \\b"]},"m":1,"k":"s"},{"m":1,"k":"s","s":{"p":["Instant:D $a","Instant:D $b"],"r":"Bool:D"},"n":"infix:«>=»"},{"s":{"p":["DateTime:D \\a","DateTime:D \\b"],"r":"Bool:D"},"n":"infix:«>=»","m":1,"k":"s"},{"k":"s","m":1,"s":{"r":"Bool:D","p":["Date:D $a","Date:D $b"]},"n":"infix:«>=»"},{"n":"infix:«>=»","s":{"p":["Version:D \\a","Version:D \\b"],"r":"Mu"},"m":1,"k":"s"},{"n":"SIGIO","t":"Signal","k":"e"},{"k":"e","n":"SOCK_STREAM","t":"SocketType"},{"k":"v","t":"Sub+{Precedence}","n":"&infix:<^^>"},{"m":1,"k":"s","n":"infix:<^^>","s":{"p":["Mu $x = Bool::False"],"r":"Mu"}},{"m":1,"k":"s","n":"infix:<^^>","s":{"p":["Mu \\a","&b"],"r":"Mu"}},{"k":"s","m":1,"n":"infix:<^^>","s":{"r":"Mu","p":["Mu \\a","Mu \\b"]}},{"m":1,"k":"s","n":"infix:<^^>","s":{"r":"Mu","p":["+@a"]}},{"t":"Sub+{is-pure}+{Precedence}","n":"&infix:<mod>","k":"v"},{"m":1,"k":"s","s":{"r":"Mu","p":["Real $a","Real $b"]},"n":"infix:<mod>"},{"k":"v","n":"&asec","t":"Sub+{is-pure}"},{"s":{"p":["Numeric \\x"],"r":"Mu"},"n":"asec","k":"s","m":1},{"k":"s","m":1,"n":"asec","s":{"r":"Mu","p":["Cool \\x"]}},{"k":"s","m":1,"n":"asec","s":{"r":"num","p":["num $x"]}},{"k":"v","n":"&abs","t":"Sub+{is-pure}"},{"m":1,"k":"s","n":"abs","s":{"r":"Mu","p":["\\a"]}},{"k":"s","m":1,"s":{"r":"Mu","p":["Real \\a"]},"n":"abs"},{"s":{"p":["Int:D \\a"],"r":"Int:D"},"n":"abs","k":"s","m":1},{"s":{"p":["int $a"],"r":"int"},"n":"abs","k":"s","m":1},{"k":"s","m":1,"n":"abs","s":{"r":"Mu","p":["Num:D \\a"]}},{"n":"abs","s":{"p":["num $a"],"r":"num"},"k":"s","m":1},{"m":1,"k":"s","s":{"p":["Complex:D \\a"],"r":"Num:D"},"n":"abs"},{"b":"C","k":"ro","n":"NumericStringyEnumeration","t":"NumericStringyEnumeration"},{"k":"v","n":"&printf","t":"Sub"},{"n":"printf","s":{"r":"Mu","p":["Cool:D $format","*@args"]},"k":"s","m":1},{"k":"e","n":"Bool","t":"Bool"},{"t":"Bool","n":"Bool::True","k":"e"},{"k":"e","t":"Bool","n":"Bool::False"},{"k":"v","t":"Sub+{is-pure}+{Precedence}","n":"&infix:<⊉>"},{"m":1,"k":"s","s":{"p":["\\a","\\b"],"r":"Bool:D"},"n":"infix:<⊉>"},{"t":"Sub+{is-pure}","n":"&acosh","k":"v"},{"k":"s","m":1,"n":"acosh","s":{"r":"Mu","p":["Numeric \\x"]}},{"m":1,"k":"s","n":"acosh","s":{"p":["Cool \\x"],"r":"Mu"}},{"k":"s","m":1,"n":"acosh","s":{"p":["num $x"],"r":"num"}},{"n":"&infix:<⊈>","t":"Sub+{is-pure}+{Precedence}","k":"v"},{"n":"infix:<⊈>","s":{"r":"Bool:D","p":["\\a","\\b"]},"m":1,"k":"s"},{"k":"v","t":"Sub+{Callable[Bool:D]}+{is-pure}+{Precedence}","n":"&infix:«(<+)»"},{"s":{"r":"Bool:D","p":["Setty:D \\a","QuantHash:D \\b"]},"n":"infix:«(<+)»","m":1,"k":"s"},{"n":"infix:«(<+)»","s":{"p":["Mixy:D \\a","Baggy:D \\b"],"r":"Bool:D"},"m":1,"k":"s"},{"n":"infix:«(<+)»","s":{"p":["Baggy:D \\a","Baggy:D \\b"],"r":"Bool:D"},"k":"s","m":1},{"k":"s","m":1,"n":"infix:«(<+)»","s":{"r":"Bool","p":["QuantHash:U $a","QuantHash:U $b"]}},{"s":{"r":"Bool","p":["QuantHash:U $a","QuantHash:D $b"]},"n":"infix:«(<+)»","m":1,"k":"s"},{"k":"s","m":1,"n":"infix:«(<+)»","s":{"r":"Bool:D","p":["QuantHash:D $a","QuantHash:U $b"]}},{"n":"infix:«(<+)»","s":{"r":"Bool:D","p":["QuantHash:D $a","QuantHash:D $b"]},"k":"s","m":1},{"n":"infix:«(<+)»","s":{"p":["$","Failure:D $b"],"r":"Mu"},"k":"s","m":1},{"s":{"p":["Failure:D $a","$"],"r":"Mu"},"n":"infix:«(<+)»","m":1,"k":"s"},{"k":"s","m":1,"n":"infix:«(<+)»","s":{"r":"Bool:D","p":["$a","$b"]}},{"n":"Perl","t":"Perl","a":[{"t":"Compiler","n":"$.compiler","k":"v"},{"k":"v","n":"$.name","t":"Str"},{"k":"v","t":"Str","n":"$.auth"},{"k":"v","n":"$.version","t":"Version"},{"n":"$.signature","t":"Blob","k":"v"},{"k":"v","t":"Str","n":"$.desc"}],"b":"A","k":"c","m":[{"k":"s","m":0,"s":{"p":[":name($!name) = \"Perl 6\"",":auth($!auth) = \"The Perl Foundation\"",":version($!version) = { ... }",":compiler($!compiler) = { ... }","*%_"],"r":"Nil"},"n":"BUILD"},{"k":"m","m":0,"s":{"p":["*%_"],"r":"Mu"},"n":"VMnames"},{"k":"m","m":0,"n":"DISTROnames","s":{"r":"Mu","p":["*%_"]}},{"n":"KERNELnames","s":{"p":["*%_"],"r":"Mu"},"m":0,"k":"m"},{"m":0,"k":"m","n":"Str","s":{"p":["*%_"],"r":"Mu"}},{"m":1,"k":"m","s":{"p":["*%_"],"r":"Mu"},"n":"gist"},{"n":"gist","s":{"p":["*%_"],"r":"Mu"},"m":1,"k":"m"},{"s":{"r":"Mu","p":["*%_"]},"n":"gist","k":"m","m":1},{"m":0,"k":"m","n":"compiler","s":{"r":"Mu","p":["*%_"]}},{"k":"m","m":0,"n":"name","s":{"p":["*%_"],"r":"Mu"}},{"k":"m","m":0,"s":{"r":"Mu","p":["*%_"]},"n":"auth"},{"s":{"r":"Mu","p":["*%_"]},"n":"version","m":0,"k":"m"},{"m":0,"k":"m","s":{"p":["*%_"],"r":"Mu"},"n":"signature"},{"s":{"p":["*%_"],"r":"Mu"},"n":"desc","k":"m","m":0},{"n":"BUILDALL","s":{"r":"Mu","p":["@auto","%init","*%_"]},"k":"s","m":0}],"d":"TITLE\nclass Perl\n\nSUBTITLE\nPerl related information\n\n    class Perl does Systemic { }\n\nBuilt-in class for providing perl related information. Usually accessed\nthrough the $*PERL dynamic variable.\n\n"},{"k":"v","n":"&join","t":"Sub"},{"n":"join","s":{"p":["$sep = \"\"","*@values"],"r":"Mu"},"k":"s","m":1},{"t":"Sub","n":"&reduce","k":"v"},{"n":"reduce","s":{"p":["&with","+\\list is raw"],"r":"Mu"},"k":"s","m":1},{"k":"c","m":[{"s":{"p":["Failure:D \\failure","*%_"],"r":"Mu"},"n":"POSITIONS","k":"m","m":1},{"n":"POSITIONS","s":{"r":"Mu","p":["\\list","*%_"]},"m":1,"k":"m"},{"k":"s","m":0,"n":"BUILDALL","s":{"p":["@auto","%init","*%_"],"r":"Mu"}},{"m":0,"k":"m","s":{"p":["*%_"],"r":"Mu"},"n":"static_id"},{"n":"returns","s":{"r":"Mu","p":["*%_"]},"k":"m","m":0},{"m":0,"k":"m","s":{"p":["Capture:D $c","*%_"],"r":"Mu"},"n":"cando"},{"m":0,"k":"m","s":{"r":"Mu","p":["*%_"]},"n":"outer"},{"k":"m","m":1,"s":{"r":"Mu","p":["*%attrinit"]},"n":"new"},{"n":"new","s":{"r":"Mu","p":["$","*@","*%_"]},"k":"m","m":1},{"n":"new","s":{"p":["*%_"],"r":"Mu"},"k":"m","m":1},{"m":0,"k":"m","n":"count","s":{"r":"Mu","p":["*%_"]}},{"n":"ACCEPTS","s":{"p":["\\topic","*%_"],"r":"Mu"},"m":1,"k":"m"},{"s":{"p":["Mu:U \\topic","*%_"],"r":"Mu"},"n":"ACCEPTS","m":1,"k":"m"},{"n":"ACCEPTS","s":{"p":["Mu:D \\a","*%_"],"r":"Mu"},"k":"m","m":1},{"k":"m","m":1,"s":{"r":"Bool","p":["Mu:U $","*%_"]},"n":"ACCEPTS"},{"m":1,"k":"m","s":{"r":"Bool:D","p":["\\topic","*%_"]},"n":"ACCEPTS"},{"m":1,"k":"m","s":{"p":["Mu $topic is raw","*%_"],"r":"Mu"},"n":"ACCEPTS"},{"k":"m","m":1,"n":"perl","s":{"p":["*%_"],"r":"Mu"}},{"m":1,"k":"m","n":"perl","s":{"r":"Mu","p":["*%_"]}},{"k":"m","m":1,"s":{"p":["*%_"],"r":"Mu"},"n":"perl"},{"k":"m","m":0,"n":"of","s":{"r":"Mu","p":["*%_"]}},{"m":0,"k":"m","s":{"r":"Mu","p":["*%_"]},"n":"file"},{"k":"m","m":0,"n":"signature","s":{"r":"Mu","p":["*%_"]}},{"n":"Capture","s":{"r":"Mu","p":["*%_"]},"k":"m","m":0},{"k":"m","m":1,"n":"Str","s":{"r":"Mu","p":["*%_"]}},{"n":"Str","s":{"r":"Mu","p":["*%_"]},"m":1,"k":"m"},{"s":{"p":["*%_"],"r":"Mu"},"n":"Str","m":1,"k":"m"},{"s":{"r":"Mu","p":["|primers is raw"]},"n":"assuming","m":0,"k":"m"},{"k":"m","m":1,"n":"prec","s":{"p":["*%_"],"r":"Mu"}},{"s":{"p":["Str:D $","*%_"],"r":"Mu"},"n":"prec","m":1,"k":"m"},{"s":{"r":"Mu","p":["*%_"]},"n":"arity","m":0,"k":"m"},{"n":"line","s":{"r":"Mu","p":["*%_"]},"k":"m","m":0},{"m":0,"k":"s","s":{"p":["@auto","%init","*%_"],"r":"Mu"},"n":"BUILDALL"}],"b":"A","a":[{"n":"$!do","t":"Code","k":"v"},{"k":"v","t":"Signature","n":"$!signature"},{"k":"v","n":"@!compstuff","t":"List"}],"d":"TITLE\nclass WhateverCode\n\nSUBTITLE\nCode object constructed by Whatever-currying\n\n    class WhateverCode is Code { }\n\nWhateverCode objects are the result of Whatever-currying. See the Whatever\ndocumentation for details.\n\nWhen you wish to control how a method or function interprets any Whatever\nstar, you may use multi dispatch with Whatever and WhateverCode parameters\nto do so, as in the following example:\n\n    class Cycle {\n          has $.pos;\n          has @.vals;\n    }\n\n    multi sub get-val(Cycle $c, Int $idx) {\n          $c.vals[$idx % $c.vals.elems]\n    }\n\n    # Define what to do with a stand-alone * as the second argument\n    multi sub get-val(Cycle $c, Whatever $idx) {\n        get-val($c, $c.pos);\n    }\n\n    # Define what to do with a * WhateverCode in an expression\n    multi sub get-val(Cycle $c, WhateverCode $idx) {\n        get-val($c, $idx($c.pos));\n    }\n\n    my Cycle $c .= new(:pos(2), :vals(0..^10));\n\n    say get-val($c, 3);   # OUTPUT: «3␤»\n    say get-val($c, *);   # OUTPUT: «2␤»\n    say get-val($c, *-1); # OUTPUT: «1␤»\n\nThe WhateverCode does the Callable role, so it should be possible to\nintrospect the type of Callable it contains; for instance, continuing the\nprevious example, we can add a multi that handles a WhateverCode with two\narguments via checking the signature:\n\n    # Define what to do with two * in an expression\n    multi sub get-val(Cycle $c, WhateverCode $idx where { .arity == 2 }) {\n        get-val($c, $idx($c.pos, $c.vals.elems));\n    }\n\n    say get-val($c, * + * div 2); # 2 + 10/2 = 7\n\n\nNote, though, that subexpressions may impose their own Whatever star\nrules:\n\n    my @a = (0, 1, 2);\n    say get-val($c, @a[*-1]) # 2, because the star belongs to the Array class\n\n\nThis can make the ownership of Whatever stars become confusing rather\nquickly, so be careful not to overdo it.\n\nYou may instead type-constrain using Callable type in order to accept any\nCallable, including WhateverCode:\n\n    sub run-with-rand (Callable $code) { $code(rand) };\n    run-with-rand *.say;           # OUTPUT: «0.773672071688484␤»\n    run-with-rand {.say};          # OUTPUT: «0.38673179353983␤»\n    run-with-rand sub { $^v.say }; # OUTPUT: «0.0589543603685792␤»\n\nType-constraining with &-sigiled parameter works equally well and is\nshorter to type:\n\n    sub run-with-rand (&code) { code time };","n":"WhateverCode","t":"WhateverCode"},{"n":"Any","t":"Any","b":"A","m":[{"s":{"r":"Bool","p":["$","*%_"]},"n":"EXISTS-KEY","m":1,"k":"m"},{"n":"EXISTS-KEY","s":{"r":"Bool","p":["$","*%_"]},"k":"m","m":1},{"m":1,"k":"m","n":"DELETE-KEY","s":{"r":"Nil","p":["$","*%_"]}},{"n":"DELETE-KEY","s":{"p":["$","*%_"],"r":"Mu"},"m":1,"k":"m"},{"m":1,"k":"m","s":{"p":["$pos","*%_"],"r":"Nil"},"n":"DELETE-POS"},{"s":{"r":"Mu","p":["$pos","*%_"]},"n":"DELETE-POS","m":1,"k":"m"},{"n":"DELETE-POS","s":{"r":"Mu","p":["\\one","\\two","*%_"]},"k":"m","m":1},{"m":1,"k":"m","n":"DELETE-POS","s":{"r":"Mu","p":["\\one","\\two","\\three","*%_"]}},{"s":{"r":"Mu","p":["**@indices","*%_"]},"n":"DELETE-POS","m":1,"k":"m"},{"s":{"p":["*%_"],"r":"Mu"},"n":"cache","m":0,"k":"m"},{"n":"list","s":{"p":["*%_"],"r":"Mu"},"m":1,"k":"m"},{"m":1,"k":"m","s":{"r":"Mu","p":["*%_"]},"n":"list"},{"n":"flat","s":{"p":["*%_"],"r":"Mu"},"k":"m","m":1},{"n":"eager","s":{"p":["*%_"],"r":"Mu"},"m":1,"k":"m"},{"s":{"p":["*%_"],"r":"Mu"},"n":"serial","k":"m","m":1},{"s":{"p":["*%_"],"r":"Mu"},"n":"List","m":1,"k":"m"},{"k":"m","m":1,"n":"Slip","s":{"p":["*%_"],"r":"Mu"}},{"n":"Array","s":{"r":"Mu","p":["*%_"]},"k":"m","m":1},{"k":"m","m":1,"n":"Seq","s":{"r":"Mu","p":["*%_"]}},{"k":"m","m":1,"n":"hash","s":{"r":"Mu","p":["*%_"]}},{"m":1,"k":"m","n":"hash","s":{"r":"Mu","p":["*%_"]}},{"s":{"p":["*%_"],"r":"Mu"},"n":"Hash","k":"m","m":1},{"k":"m","m":1,"s":{"p":["*%_"],"r":"Mu"},"n":"Map"},{"k":"m","m":1,"n":"elems","s":{"r":"Int","p":["*%_"]}},{"n":"elems","s":{"r":"Mu","p":["*%_"]},"k":"m","m":1},{"n":"end","s":{"p":["*%_"],"r":"Int"},"k":"m","m":1},{"m":1,"k":"m","n":"end","s":{"r":"Mu","p":["*%_"]}},{"m":1,"k":"m","s":{"p":["*%_"],"r":"Mu"},"n":"keys"},{"n":"keys","s":{"p":["*%_"],"r":"Mu"},"k":"m","m":1},{"k":"m","m":1,"s":{"r":"Mu","p":["*%_"]},"n":"kv"},{"m":1,"k":"m","s":{"p":["*%_"],"r":"Mu"},"n":"kv"},{"m":1,"k":"m","s":{"r":"Mu","p":["*%_"]},"n":"values"},{"m":1,"k":"m","s":{"r":"Mu","p":["*%_"]},"n":"values"},{"k":"m","m":1,"s":{"p":["*%_"],"r":"Mu"},"n":"pairs"},{"m":1,"k":"m","s":{"r":"Mu","p":["*%_"]},"n":"pairs"},{"k":"m","m":1,"s":{"p":["*%_"],"r":"Mu"},"n":"antipairs"},{"k":"m","m":1,"n":"antipairs","s":{"r":"Mu","p":["*%_"]}},{"k":"m","m":1,"n":"invert","s":{"p":["*%_"],"r":"Mu"}},{"k":"m","m":1,"n":"invert","s":{"p":["*%_"],"r":"Mu"}},{"m":1,"k":"m","s":{"r":"Mu","p":["*%_"]},"n":"pick"},{"m":1,"k":"m","s":{"p":["$n","*%_"],"r":"Mu"},"n":"pick"},{"s":{"r":"Mu","p":["*%_"]},"n":"roll","m":1,"k":"m"},{"m":1,"k":"m","n":"roll","s":{"r":"Mu","p":["$n","*%_"]}},{"s":{"p":["|"],"r":"Mu"},"n":"match","k":"m","m":0},{"k":"m","m":1,"s":{"p":["*%_"],"r":"Mu"},"n":"classify"},{"s":{"r":"Mu","p":["Whatever $","*%_"]},"n":"classify","k":"m","m":1},{"m":1,"k":"m","n":"classify","s":{"r":"Mu","p":["$test",":$into!",":&as","*%_"]}},{"s":{"r":"Mu","p":["$test",":&as","*%_"]},"n":"classify","k":"m","m":1},{"n":"categorize","s":{"r":"Mu","p":["*%_"]},"k":"m","m":1},{"n":"categorize","s":{"r":"Mu","p":["Whatever $","*%_"]},"m":1,"k":"m"},{"n":"categorize","s":{"r":"Mu","p":["$test",":$into!",":&as","*%_"]},"k":"m","m":1},{"m":1,"k":"m","n":"categorize","s":{"r":"Mu","p":["$test",":&as","*%_"]}},{"k":"m","m":0,"s":{"p":["*%_"],"r":"Mu"},"n":"reverse"},{"s":{"p":["|c is raw"],"r":"Mu"},"n":"combinations","m":0,"k":"m"},{"s":{"p":["|c is raw"],"r":"Mu"},"n":"permutations","m":0,"k":"m"},{"k":"m","m":0,"n":"join","s":{"p":["$separator = \"\"","*%_"],"r":"Mu"}},{"n":"nodemap","s":{"p":["&block","*%_"],"r":"Mu"},"m":0,"k":"m"},{"n":"duckmap","s":{"p":["&block","*%_"],"r":"Mu"},"k":"m","m":0},{"k":"m","m":0,"n":"deepmap","s":{"p":["&block","*%_"],"r":"Mu"}},{"s":{"p":["*%_"],"r":"Mu"},"n":"tree","k":"m","m":1},{"n":"tree","s":{"p":["*%_"],"r":"Mu"},"m":1,"k":"m"},{"n":"tree","s":{"p":["Whatever $","*%_"],"r":"Mu"},"m":1,"k":"m"},{"n":"tree","s":{"r":"Mu","p":["Int(Cool) $count","*%_"]},"k":"m","m":1},{"n":"tree","s":{"p":["@ (&first, *@rest)","*%_"],"r":"Mu"},"m":1,"k":"m"},{"m":1,"k":"m","s":{"r":"Mu","p":["&first","*@rest","*%_"]},"n":"tree"},{"m":1,"k":"m","n":"push","s":{"r":"Mu","p":["|values is raw"]}},{"s":{"p":["|values is raw"],"r":"Mu"},"n":"append","k":"m","m":1},{"m":1,"k":"m","s":{"p":["|values is raw"],"r":"Mu"},"n":"unshift"},{"n":"prepend","s":{"r":"Mu","p":["|values is raw"]},"k":"m","m":1},{"m":1,"k":"m","s":{"r":"Bool","p":["Any:D $","*%_"]},"n":"EXISTS-POS"},{"s":{"p":["Any:U $pos","*%_"],"r":"Mu"},"n":"EXISTS-POS","m":1,"k":"m"},{"m":1,"k":"m","n":"EXISTS-POS","s":{"p":["int \\pos","*%_"],"r":"Bool:D"}},{"k":"m","m":1,"n":"EXISTS-POS","s":{"r":"Bool:D","p":["Int:D \\pos","*%_"]}},{"m":1,"k":"m","n":"EXISTS-POS","s":{"p":["Num:D \\pos","*%_"],"r":"Bool:D"}},{"n":"EXISTS-POS","s":{"p":["Any:D \\pos","*%_"],"r":"Bool:D"},"m":1,"k":"m"},{"m":1,"k":"m","n":"EXISTS-POS","s":{"r":"Mu","p":["Any:U \\pos","*%_"]}},{"s":{"p":["\\one","\\two","*%_"],"r":"Bool:D"},"n":"EXISTS-POS","k":"m","m":1},{"n":"EXISTS-POS","s":{"r":"Bool:D","p":["\\one","\\two","\\three","*%_"]},"m":1,"k":"m"},{"s":{"p":["**@indices","*%_"],"r":"Bool:D"},"n":"EXISTS-POS","m":1,"k":"m"},{"n":"AT-POS","s":{"p":["int \\pos","*%_"],"r":"Mu"},"m":1,"k":"m"},{"n":"AT-POS","s":{"p":["Int:D \\pos","*%_"],"r":"Mu"},"m":1,"k":"m"},{"m":1,"k":"m","n":"AT-POS","s":{"p":["Num:D \\pos","*%_"],"r":"Mu"}},{"s":{"p":["Any:D \\pos","*%_"],"r":"Mu"},"n":"AT-POS","k":"m","m":1},{"m":1,"k":"m","n":"AT-POS","s":{"p":["int \\pos","*%_"],"r":"Mu"}},{"n":"AT-POS","s":{"p":["Int:D \\pos","*%_"],"r":"Mu"},"m":1,"k":"m"},{"s":{"r":"Mu","p":["Num:D \\pos","*%_"]},"n":"AT-POS","k":"m","m":1},{"s":{"p":["Any:D \\pos","*%_"],"r":"Mu"},"n":"AT-POS","k":"m","m":1},{"s":{"p":["Any:U \\pos","*%_"],"r":"Mu"},"n":"AT-POS","m":1,"k":"m"},{"n":"AT-POS","s":{"r":"Mu","p":["\\one","\\two","*%_"]},"k":"m","m":1},{"s":{"p":["\\one","\\two","\\three","*%_"],"r":"Mu"},"n":"AT-POS","m":1,"k":"m"},{"m":1,"k":"m","n":"AT-POS","s":{"r":"Mu","p":["**@indices","*%_"]}},{"s":{"p":["*%unexpected"],"r":"Mu"},"n":"ZEN-POS","k":"m","m":1},{"m":1,"k":"m","n":"ZEN-KEY","s":{"p":["*%unexpected"],"r":"Mu"}},{"s":{"r":"Mu","p":["\\pos","Mu \\assignee","*%_"]},"n":"ASSIGN-POS","k":"m","m":1},{"n":"ASSIGN-POS","s":{"r":"Mu","p":["int \\pos","Mu \\assignee","*%_"]},"m":1,"k":"m"},{"s":{"p":["Int:D \\pos","Mu \\assignee","*%_"],"r":"Mu"},"n":"ASSIGN-POS","m":1,"k":"m"},{"n":"ASSIGN-POS","s":{"r":"Mu","p":["Num:D \\pos","Mu \\assignee","*%_"]},"m":1,"k":"m"},{"n":"ASSIGN-POS","s":{"r":"Mu","p":["Any:D \\pos","Mu \\assignee","*%_"]},"k":"m","m":1},{"n":"ASSIGN-POS","s":{"p":["Any:U \\pos","Mu \\assignee","*%_"],"r":"Mu"},"m":1,"k":"m"},{"s":{"p":["\\one","\\two","Mu \\assignee","*%_"],"r":"Mu"},"n":"ASSIGN-POS","k":"m","m":1},{"n":"ASSIGN-POS","s":{"r":"Mu","p":["\\one","\\two","\\three","Mu \\assignee","*%_"]},"m":1,"k":"m"},{"k":"m","m":1,"s":{"r":"Mu","p":["**@indices","*%_"]},"n":"ASSIGN-POS"},{"s":{"r":"Mu","p":["**@indices is raw","*%_"]},"n":"BIND-POS","m":1,"k":"m"},{"k":"m","m":0,"s":{"p":["*%_"],"r":"Mu"},"n":"all"},{"k":"m","m":0,"s":{"r":"Mu","p":["*%_"]},"n":"any"},{"m":0,"k":"m","s":{"p":["*%_"],"r":"Mu"},"n":"one"},{"s":{"r":"Mu","p":["*%_"]},"n":"none","k":"m","m":0},{"m":1,"k":"m","n":"AT-KEY","s":{"p":["$key","*%_"],"r":"Mu"}},{"k":"m","m":1,"n":"AT-KEY","s":{"p":["\\key","*%_"],"r":"Mu"}},{"m":1,"k":"m","s":{"r":"Mu","p":["\\k","\\v","*%_"]},"n":"BIND-KEY"},{"n":"BIND-KEY","s":{"r":"Mu","p":["$key","$BIND","*%_"]},"m":1,"k":"m"},{"s":{"p":["\\key","Mu \\assignee","*%_"],"r":"Mu"},"n":"ASSIGN-KEY","m":1,"k":"m"},{"m":0,"k":"m","s":{"r":"Mu","p":["*%_"]},"n":"FLATTENABLE_LIST"},{"s":{"r":"Mu","p":["*%_"]},"n":"FLATTENABLE_HASH","k":"m","m":0},{"s":{"p":["*%_"],"r":"Set:D"},"n":"Set","m":1,"k":"m"},{"m":1,"k":"m","s":{"r":"SetHash:D","p":["*%_"]},"n":"SetHash"},{"m":1,"k":"m","n":"Bag","s":{"p":["*%_"],"r":"Bag:D"}},{"m":1,"k":"m","n":"BagHash","s":{"r":"BagHash:D","p":["*%_"]}},{"n":"Mix","s":{"r":"Mix:D","p":["*%_"]},"k":"m","m":1},{"s":{"r":"MixHash:D","p":["*%_"]},"n":"MixHash","k":"m","m":1},{"k":"m","m":1,"s":{"r":"Mu","p":["*%_"]},"n":"Supply"},{"s":{"r":"Str:D","p":["*%_"]},"n":"nl-out","m":0,"k":"m"},{"k":"m","m":0,"s":{"r":"Mu","p":["*%_"]},"n":"print-nl"},{"s":{"r":"Mu","p":["$flag","*%_"]},"n":"lazy-if","m":0,"k":"m"},{"s":{"p":["*%_"],"r":"Mu"},"n":"sum","k":"m","m":0},{"s":{"r":"Mu","p":["\\topic","*%_"]},"n":"ACCEPTS","k":"m","m":1},{"k":"m","m":1,"n":"ACCEPTS","s":{"p":["Mu:U \\topic","*%_"],"r":"Mu"}},{"m":1,"k":"m","n":"ACCEPTS","s":{"r":"Mu","p":["Mu:D \\a","*%_"]}},{"k":"m","m":1,"n":"ACCEPTS","s":{"p":["Mu:U $","*%_"],"r":"Bool"}},{"k":"m","m":1,"s":{"p":["\\topic","*%_"],"r":"Bool:D"},"n":"ACCEPTS"},{"k":"m","m":1,"n":"iterator","s":{"p":["*%_"],"r":"Mu"}},{"m":1,"k":"m","s":{"r":"Mu","p":["*%_"]},"n":"iterator"},{"m":1,"k":"m","n":"map","s":{"r":"Mu","p":["Hash:D \\hash","*%_"]}},{"m":1,"k":"m","s":{"p":["Iterable:D \\iterable","*%_"],"r":"Mu"},"n":"map"},{"s":{"r":"Mu","p":["|c is raw"]},"n":"map","k":"m","m":1},{"m":1,"k":"m","n":"map","s":{"r":"Mu","p":["&block",":$label",":$item","*%_"]}},{"m":1,"k":"m","n":"flatmap","s":{"p":["&block",":$label","*%_"],"r":"Mu"}},{"k":"m","m":1,"n":"grep","s":{"r":"Mu","p":["Bool:D $t","*%_"]}},{"n":"grep","s":{"p":["Mu $t","*%_"],"r":"Mu"},"m":1,"k":"m"},{"n":"first","s":{"p":["Bool:D $t","*%_"],"r":"Mu"},"m":1,"k":"m"},{"s":{"p":["Regex:D $test",":$end","*%a"],"r":"Mu"},"n":"first","k":"m","m":1},{"m":1,"k":"m","s":{"r":"Mu","p":["Callable:D $test",":$end","*%a is copy"]},"n":"first"},{"m":1,"k":"m","s":{"r":"Mu","p":["Mu $test",":$end","*%a"]},"n":"first"},{"n":"first","s":{"p":[":$end","*%a"],"r":"Mu"},"m":1,"k":"m"},{"s":{"p":["*%_"],"r":"Mu"},"n":"min","k":"m","m":1},{"k":"m","m":1,"s":{"r":"Mu","p":["&by","*%_"]},"n":"min"},{"s":{"r":"Mu","p":["*%_"]},"n":"max","m":1,"k":"m"},{"n":"max","s":{"p":["&by","*%_"],"r":"Mu"},"m":1,"k":"m"},{"m":1,"k":"m","s":{"r":"Mu","p":["*%_"]},"n":"minmax"},{"k":"m","m":1,"s":{"r":"Mu","p":["&by","*%_"]},"n":"minmax"},{"n":"sort","s":{"r":"Mu","p":["*%_"]},"k":"m","m":1},{"m":1,"k":"m","n":"sort","s":{"p":["&by","*%_"],"r":"Mu"}},{"s":{"p":["*%_"],"r":"Mu"},"n":"collate","k":"m","m":0},{"n":"reduce","s":{"r":"Nil","p":["&","*%_"]},"k":"m","m":1},{"s":{"p":["&with","*%_"],"r":"Mu"},"n":"reduce","k":"m","m":1},{"s":{"r":"Nil","p":["&","*%_"]},"n":"produce","k":"m","m":1},{"k":"m","m":1,"s":{"r":"Mu","p":["&with","*%_"]},"n":"produce"},{"s":{"r":"Mu","p":["*%_"]},"n":"unique","k":"m","m":1},{"s":{"r":"Mu","p":[":&as!",":&with!","*%_"]},"n":"unique","m":1,"k":"m"},{"k":"m","m":1,"s":{"r":"Mu","p":[":&as!","*%_"]},"n":"unique"},{"n":"unique","s":{"r":"Mu","p":[":&with!","*%_"]},"m":1,"k":"m"},{"s":{"r":"Mu","p":["*%_"]},"n":"repeated","k":"m","m":1},{"n":"repeated","s":{"p":[":&as!",":&with!","*%_"],"r":"Mu"},"m":1,"k":"m"},{"s":{"p":[":&as!","*%_"],"r":"Mu"},"n":"repeated","k":"m","m":1},{"n":"repeated","s":{"p":[":&with!","*%_"],"r":"Mu"},"m":1,"k":"m"},{"m":1,"k":"m","n":"squish","s":{"r":"Mu","p":[":&as!",":&with = { ... }","*%_"]}},{"k":"m","m":1,"s":{"r":"Mu","p":[":&with = { ... }","*%_"]},"n":"squish"},{"m":1,"k":"m","n":"pairup","s":{"p":["*%_"],"r":"Mu"}},{"n":"pairup","s":{"r":"Mu","p":["*%_"]},"m":1,"k":"m"},{"n":"toggle","s":{"r":"Mu","p":["Callable:D \\condition",":$off!","*%_"]},"k":"m","m":1},{"s":{"p":["Callable:D \\condition","*%_"],"r":"Mu"},"n":"toggle","m":1,"k":"m"},{"k":"m","m":1,"s":{"r":"Mu","p":["*@conditions",":$off","*%_"]},"n":"toggle"},{"n":"head","s":{"p":["*%_"],"r":"Mu"},"m":1,"k":"m"},{"s":{"r":"Mu","p":["Callable:D $w","*%_"]},"n":"head","k":"m","m":1},{"k":"m","m":1,"s":{"p":["$n","*%_"],"r":"Mu"},"n":"head"},{"m":1,"k":"m","n":"tail","s":{"r":"Mu","p":["*%_"]}},{"k":"m","m":1,"n":"tail","s":{"p":["$n","*%_"],"r":"Mu"}},{"k":"m","m":1,"s":{"p":["*%_"],"r":"Mu"},"n":"skip"},{"k":"m","m":1,"n":"skip","s":{"r":"Mu","p":["Whatever $","*%_"]}},{"m":1,"k":"m","s":{"r":"Mu","p":["Callable:D $w","*%_"]},"n":"skip"},{"s":{"r":"Mu","p":["$n","*%_"]},"n":"skip","k":"m","m":1},{"s":{"r":"Mu","p":["*%_"]},"n":"minpairs","k":"m","m":1},{"n":"maxpairs","s":{"p":["*%_"],"r":"Mu"},"m":1,"k":"m"},{"k":"m","m":1,"s":{"r":"Mu","p":["Int:D :$elems!","*%_"]},"n":"batch"},{"m":1,"k":"m","n":"batch","s":{"p":["Int:D $batch","*%_"],"r":"Mu"}},{"k":"m","m":1,"n":"rotor","s":{"r":"Mu","p":["Int:D $batch",":$partial","*%_"]}},{"m":1,"k":"m","n":"rotor","s":{"p":["*@cycle",":$partial","*%_"],"r":"Mu"}},{"s":{"r":"Mu","p":["Mu $test","%a","*%_"]},"n":"!first-accepts","k":"m","m":0},{"k":"m","m":0,"s":{"r":"Mu","p":["Callable:D $test","*%_"]},"n":"!grep-callable"},{"n":"!minmax-range-check","s":{"p":["\\value","\\mi","\\exmi","\\ma","\\exma","*%_"],"r":"Nil"},"m":0,"k":"m"},{"m":0,"k":"m","n":"!first-accepts-end","s":{"p":["Mu $test","%a","*%_"],"r":"Mu"}},{"m":0,"k":"m","s":{"p":["\\value","\\mi","\\exmi","\\ma","\\exma","*%_"],"r":"Nil"},"n":"!minmax-range-init"},{"s":{"r":"Mu","p":["Callable:D $test","*%_"]},"n":"!grep-k","m":0,"k":"m"},{"s":{"p":["$action","\\first","*%_"],"r":"Mu"},"n":"!iterator-and-first","k":"m","m":0},{"k":"m","m":0,"s":{"r":"Mu","p":["$test","*%_"]},"n":"!wrap-callable-for-grep"},{"s":{"p":["Callable:D $test","*%_"],"r":"Mu"},"n":"!grep-kv","m":0,"k":"m"},{"k":"m","m":0,"n":"!cmp-minmax-range-check","s":{"r":"Nil","p":["\\value","$cmp","\\mi","\\exmi","\\ma","\\exma","*%_"]}},{"m":0,"k":"m","n":"!grep-accepts","s":{"p":["Mu $test","*%_"],"r":"Mu"}},{"n":"!grep-p","s":{"p":["Callable:D $test","*%_"],"r":"Mu"},"k":"m","m":0},{"k":"m","m":0,"s":{"r":"Mu","p":["\\index","\\value","$what","%a","*%_"]},"n":"!first-result"}],"k":"c","d":"TITLE\nclass Any\n\nSUBTITLE\nThing/object\n\n    class Any is Mu {}\n\nWhile Mu is the root of the Raku class hierarchy, Any is the class that\nserves as a default base class for new classes, and as the base class for\nmost built-in classes.\n\nSince Raku intentionally confuses items and single-element lists, most\nmethods in Any are also present on class List, and coerce to List or a\nlist-like type.\n\n"},{"t":"Any::Repeated-As","n":"Any::Repeated-As","m":[{"s":{"r":"Mu","p":["\\list","&as","*%_"]},"n":"new","k":"m","m":0},{"k":"m","m":0,"s":{"p":["*%_"],"r":"Mu"},"n":"pull-one"},{"n":"push-all","s":{"p":["\\target","*%_"],"r":"Mu"},"m":0,"k":"m"},{"k":"m","m":0,"s":{"r":"Mu","p":["*%_"]},"n":"is-lazy"},{"k":"m","m":0,"s":{"p":["*%_"],"r":"Mu"},"n":"skip-one"},{"m":0,"k":"m","s":{"p":["\\target","int $n","*%_"],"r":"Mu"},"n":"push-exactly"},{"n":"push-at-least","s":{"p":["\\target","int $n","*%_"],"r":"Mu"},"m":0,"k":"m"},{"s":{"p":["\\target","*%_"],"r":"Mu"},"n":"push-until-lazy","m":0,"k":"m"},{"n":"skip-at-least","s":{"r":"Mu","p":["int $toskip","*%_"]},"k":"m","m":0},{"k":"m","m":0,"n":"skip-at-least-pull-one","s":{"r":"Mu","p":["int $toskip","*%_"]}},{"n":"sink-all","s":{"r":"Mu","p":["*%_"]},"m":0,"k":"m"},{"k":"s","m":0,"s":{"r":"Mu","p":["@auto","%init","*%_"]},"n":"BUILDALL"},{"k":"m","m":0,"s":{"p":["\\list","&!as","*%_"],"r":"Mu"},"n":"!SET-SELF"}],"k":"c","a":[{"k":"v","t":"Mu","n":"$!iter"},{"k":"v","t":"Callable","n":"&!as"},{"k":"v","n":"$!seen","t":"Mu"}],"b":"A"},{"k":"ro","m":[{"k":"m","m":0,"s":{"p":["\\list","Mu \\test","*%_"],"r":"Mu"},"n":"new"},{"n":"is-lazy","s":{"r":"Mu","p":["*%_"]},"k":"m","m":0},{"k":"m","m":0,"n":"!SET-SELF","s":{"r":"Mu","p":["\\list","Mu \\test","*%_"]}}],"a":[{"k":"v","t":"Mu","n":"$!iter"},{"n":"$!test","t":"Mu","k":"v"}],"b":"C","t":"Any::Grepper","n":"Any::Grepper"},{"n":"&parse-base","t":"Sub","k":"v"},{"m":1,"k":"s","n":"parse-base","s":{"p":["Str:D $str","Int:D $radix"],"r":"Mu"}},{"k":"v","t":"Sub","n":"&prepend"},{"m":1,"k":"s","n":"prepend","s":{"r":"Mu","p":["\\a","|elems is raw"]}},{"t":"VM","n":"VM","d":"TITLE\nclass VM\n\nSUBTITLE\nRaku Virtual Machine related information\n\n    class VM does Systemic { }\n\nBuilt-in class for providing information about the virtual machine in which\nRaku is running. Usually accessed through the $*VM dynamic variable.\n\n","b":"A","a":[{"k":"v","t":"Mu","n":"$.config"},{"n":"$.prefix","t":"Mu","k":"v"},{"n":"$.precomp-ext","t":"Mu","k":"v"},{"k":"v","t":"Mu","n":"$.precomp-target"},{"k":"v","n":"$.name","t":"Str"},{"k":"v","n":"$.auth","t":"Str"},{"k":"v","t":"Version","n":"$.version"},{"k":"v","n":"$.signature","t":"Blob"},{"t":"Str","n":"$.desc","k":"v"}],"k":"c","m":[{"m":0,"k":"s","s":{"r":"Nil","p":[":config($!config)",":$desc","*%_"]},"n":"BUILD"},{"m":0,"k":"m","n":"platform-library-name","s":{"p":["IO::Path $library","Version :$version","*%_"],"r":"Mu"}},{"s":{"p":["*%_"],"r":"Mu"},"n":"osname","m":1,"k":"m"},{"m":1,"k":"m","s":{"r":"Mu","p":["*%_"]},"n":"osname"},{"s":{"r":"Mu","p":["*%_"]},"n":"Str","k":"m","m":0},{"m":1,"k":"m","n":"gist","s":{"r":"Mu","p":["*%_"]}},{"s":{"p":["*%_"],"r":"Mu"},"n":"gist","k":"m","m":1},{"m":1,"k":"m","n":"gist","s":{"p":["*%_"],"r":"Mu"}},{"n":"config","s":{"p":["*%_"],"r":"Mu"},"m":0,"k":"m"},{"n":"prefix","s":{"r":"Mu","p":["*%_"]},"k":"m","m":0},{"k":"m","m":0,"s":{"r":"Mu","p":["*%_"]},"n":"precomp-ext"},{"s":{"r":"Mu","p":["*%_"]},"n":"precomp-target","m":0,"k":"m"},{"s":{"p":["*%_"],"r":"Mu"},"n":"name","k":"m","m":0},{"k":"m","m":0,"s":{"r":"Mu","p":["*%_"]},"n":"auth"},{"n":"version","s":{"p":["*%_"],"r":"Mu"},"m":0,"k":"m"},{"m":0,"k":"m","s":{"r":"Mu","p":["*%_"]},"n":"signature"},{"m":0,"k":"m","n":"desc","s":{"r":"Mu","p":["*%_"]}},{"k":"s","m":0,"n":"BUILDALL","s":{"r":"Mu","p":["@auto","%init","*%_"]}}]},{"k":"v","n":"&fc","t":"Sub"},{"n":"fc","s":{"r":"Mu","p":["Cool $s"]},"m":1,"k":"s"},{"n":"FatRat","t":"FatRat","b":"C","a":[{"k":"v","n":"$.numerator","t":"Int"},{"k":"v","n":"$.denominator","t":"Int"}],"k":"c","m":[{"k":"m","m":0,"s":{"r":"FatRat","p":["Real $?","*%_"]},"n":"FatRat"},{"n":"Rat","s":{"r":"Rat:D","p":["Real $?","*%_"]},"k":"m","m":0},{"m":0,"k":"m","n":"new","s":{"p":["Int:D \\nu = 0","Int:D \\de = 1","*%_"],"r":"Mu"}},{"m":0,"k":"m","n":"nude","s":{"r":"Mu","p":["*%_"]}},{"s":{"r":"Num:D","p":["*%_"]},"n":"Num","m":0,"k":"m"},{"s":{"r":"Int:D","p":["*%_"]},"n":"floor","m":0,"k":"m"},{"k":"m","m":0,"n":"ceiling","s":{"r":"Int:D","p":["*%_"]}},{"m":0,"k":"m","s":{"p":["*%_"],"r":"Int:D"},"n":"Int"},{"m":0,"k":"m","n":"Bridge","s":{"r":"Mu","p":["*%_"]}},{"n":"Range","s":{"r":"Mu","p":["*%_"]},"m":0,"k":"m"},{"m":0,"k":"m","s":{"p":["*%_"],"r":"Bool:D"},"n":"isNaN"},{"m":0,"k":"m","s":{"r":"Bool:D","p":["*%_"]},"n":"is-prime"},{"n":"base","s":{"r":"Mu","p":["$base","$digits? is copy","*%_"]},"m":0,"k":"m"},{"n":"base-repeating","s":{"r":"Mu","p":["$base = 10","*%_"]},"m":0,"k":"m"},{"k":"m","m":0,"s":{"p":["*%_"],"r":"Mu"},"n":"succ"},{"s":{"p":["*%_"],"r":"Mu"},"n":"pred","m":0,"k":"m"},{"s":{"p":["*%_"],"r":"Mu"},"n":"norm","m":0,"k":"m"},{"s":{"p":["*%_"],"r":"Mu"},"n":"narrow","m":0,"k":"m"},{"m":0,"k":"m","n":"abs","s":{"r":"Mu","p":["*%_"]}},{"k":"m","m":0,"s":{"r":"Mu","p":["*%_"]},"n":"sign"},{"k":"m","m":0,"s":{"r":"Mu","p":["*%_"]},"n":"conj"},{"k":"m","m":0,"s":{"p":["*%_"],"r":"Mu"},"n":"sqrt"},{"m":0,"k":"m","s":{"p":["*%_"],"r":"Mu"},"n":"rand"},{"s":{"r":"Mu","p":["*%_"]},"n":"sin","m":0,"k":"m"},{"n":"asin","s":{"r":"Mu","p":["*%_"]},"k":"m","m":0},{"n":"cos","s":{"p":["*%_"],"r":"Mu"},"k":"m","m":0},{"m":0,"k":"m","n":"acos","s":{"p":["*%_"],"r":"Mu"}},{"k":"m","m":0,"n":"tan","s":{"r":"Mu","p":["*%_"]}},{"k":"m","m":0,"n":"atan","s":{"p":["*%_"],"r":"Mu"}},{"k":"m","m":1,"s":{"p":["Real $x = 1e0","*%_"],"r":"Mu"},"n":"atan2"},{"m":1,"k":"m","s":{"r":"Mu","p":["Cool $x = 1e0","*%_"]},"n":"atan2"},{"k":"m","m":0,"n":"sec","s":{"p":["*%_"],"r":"Mu"}},{"k":"m","m":0,"s":{"p":["*%_"],"r":"Mu"},"n":"asec"},{"k":"m","m":0,"s":{"p":["*%_"],"r":"Mu"},"n":"cosec"},{"m":0,"k":"m","n":"acosec","s":{"r":"Mu","p":["*%_"]}},{"n":"cotan","s":{"p":["*%_"],"r":"Mu"},"m":0,"k":"m"},{"m":0,"k":"m","n":"acotan","s":{"p":["*%_"],"r":"Mu"}},{"m":0,"k":"m","n":"sinh","s":{"r":"Mu","p":["*%_"]}},{"k":"m","m":0,"n":"asinh","s":{"r":"Mu","p":["*%_"]}},{"m":0,"k":"m","n":"cosh","s":{"p":["*%_"],"r":"Mu"}},{"k":"m","m":0,"n":"acosh","s":{"p":["*%_"],"r":"Mu"}},{"m":0,"k":"m","n":"tanh","s":{"p":["*%_"],"r":"Mu"}},{"k":"m","m":0,"n":"atanh","s":{"p":["*%_"],"r":"Mu"}},{"n":"sech","s":{"r":"Mu","p":["*%_"]},"m":0,"k":"m"},{"k":"m","m":0,"s":{"r":"Mu","p":["*%_"]},"n":"asech"},{"k":"m","m":0,"n":"cosech","s":{"r":"Mu","p":["*%_"]}},{"s":{"p":["*%_"],"r":"Mu"},"n":"acosech","k":"m","m":0},{"n":"cotanh","s":{"p":["*%_"],"r":"Mu"},"m":0,"k":"m"},{"s":{"r":"Mu","p":["*%_"]},"n":"acotanh","m":0,"k":"m"},{"m":1,"k":"m","n":"round","s":{"p":["*%_"],"r":"Int:D"}},{"m":1,"k":"m","s":{"r":"Mu","p":["*%_"]},"n":"round"},{"k":"m","m":1,"s":{"p":["$scale","*%_"],"r":"Mu"},"n":"round"},{"k":"m","m":0,"s":{"r":"Mu","p":["Real $angle","*%_"]},"n":"unpolar"},{"k":"m","m":0,"n":"cis","s":{"r":"Mu","p":["*%_"]}},{"m":0,"k":"m","n":"Complex","s":{"p":["*%_"],"r":"Mu"}},{"s":{"p":["*%_"],"r":"Mu"},"n":"log","m":1,"k":"m"},{"n":"log","s":{"p":["Real $base","*%_"],"r":"Mu"},"m":1,"k":"m"},{"m":1,"k":"m","n":"log","s":{"p":["Cool $base","*%_"],"r":"Mu"}},{"n":"log","s":{"p":["Numeric $base","*%_"],"r":"Mu"},"k":"m","m":1},{"n":"exp","s":{"r":"Mu","p":["*%_"]},"m":1,"k":"m"},{"s":{"p":["$base","*%_"],"r":"Mu"},"n":"exp","k":"m","m":1},{"k":"m","m":0,"n":"truncate","s":{"r":"Mu","p":["*%_"]}},{"n":"polymod","s":{"r":"Mu","p":["+@mods","*%_"]},"m":0,"k":"m"},{"k":"m","m":0,"n":"log10","s":{"r":"Mu","p":["*%_"]}},{"s":{"p":["Cool $n","*%_"],"r":"Mu"},"n":"roots","m":0,"k":"m"},{"m":1,"k":"m","s":{"r":"Mu","p":["*%_"]},"n":"perl"},{"m":1,"k":"m","n":"perl","s":{"p":["*%_"],"r":"Mu"}},{"k":"m","m":1,"n":"perl","s":{"p":["*%_"],"r":"Str:D"}},{"n":"WHICH","s":{"r":"ValueObjAt:D","p":["*%_"]},"k":"m","m":1},{"n":"WHICH","s":{"p":["*%_"],"r":"ObjAt:D"},"k":"m","m":1},{"s":{"p":["*%_"],"r":"ValueObjAt:D"},"n":"WHICH","k":"m","m":1},{"s":{"r":"Bool","p":["*%_"]},"n":"Bool","m":1,"k":"m"},{"m":1,"k":"m","n":"Bool","s":{"r":"Mu","p":["*%_"]}},{"k":"m","m":1,"n":"Bool","s":{"r":"Mu","p":["*%_"]}},{"n":"Bool","s":{"r":"Mu","p":["*%_"]},"k":"m","m":1},{"m":1,"k":"m","s":{"p":["*%_"],"r":"Mu"},"n":"Str"},{"m":1,"k":"m","n":"Str","s":{"p":["*%_"],"r":"Mu"}},{"n":"Str","s":{"p":["*%_"],"r":"Str:D"},"m":1,"k":"m"},{"s":{"r":"Mu","p":["*%_"]},"n":"Str","k":"m","m":1},{"m":1,"k":"m","s":{"r":"Mu","p":["*%_"]},"n":"Real"},{"m":1,"k":"m","n":"Real","s":{"p":["*%_"],"r":"Mu"}},{"k":"m","m":1,"s":{"r":"Mu","p":["*%_"]},"n":"Real"},{"n":"Real","s":{"p":["*%_"],"r":"Mu"},"m":1,"k":"m"},{"s":{"r":"Mu","p":["*%_"]},"n":"Numeric","k":"m","m":1},{"n":"Numeric","s":{"p":["*%_"],"r":"Mu"},"k":"m","m":1},{"k":"m","m":1,"s":{"p":["*%_"],"r":"Mu"},"n":"Numeric"},{"k":"m","m":1,"s":{"r":"Mu","p":["\\topic","*%_"]},"n":"ACCEPTS"},{"k":"m","m":1,"s":{"r":"Mu","p":["Mu:U \\topic","*%_"]},"n":"ACCEPTS"},{"k":"m","m":1,"n":"ACCEPTS","s":{"r":"Mu","p":["Mu:D \\a","*%_"]}},{"k":"m","m":1,"s":{"p":["Mu:U $","*%_"],"r":"Bool"},"n":"ACCEPTS"},{"n":"ACCEPTS","s":{"p":["\\topic","*%_"],"r":"Bool:D"},"m":1,"k":"m"},{"k":"m","m":1,"s":{"r":"Mu","p":["Any:D \\a","*%_"]},"n":"ACCEPTS"},{"m":1,"k":"m","n":"gist","s":{"p":["*%_"],"r":"Mu"}},{"k":"m","m":1,"s":{"r":"Mu","p":["*%_"]},"n":"gist"},{"m":1,"k":"m","n":"gist","s":{"r":"Mu","p":["*%_"]}},{"k":"m","m":1,"s":{"r":"Mu","p":["*%_"]},"n":"DUMP"},{"s":{"r":"Mu","p":[":$indent-step = 4",":%ctx","*%_"]},"n":"DUMP","m":1,"k":"m"},{"m":1,"k":"m","n":"DUMP","s":{"p":["*%_"],"r":"Mu"}},{"s":{"p":["*%_"],"r":"Mu"},"n":"numerator","m":0,"k":"m"},{"n":"denominator","s":{"p":["*%_"],"r":"Mu"},"m":0,"k":"m"},{"s":{"p":["@auto","%init","*%_"],"r":"Mu"},"n":"BUILDALL","m":0,"k":"s"},{"s":{"p":["\\whole","\\fract","Int:D $precision","*%_"],"r":"Mu"},"n":"!STRINGIFY","k":"m","m":0},{"k":"m","m":0,"n":"!SLOW-STR","s":{"p":["\\whole","\\fract","*%_"],"r":"Mu"}}],"d":"TITLE\nclass FatRat\n\nSUBTITLE\nRational number (arbitrary-precision)\n\n    class FatRat is Cool does Rational[Int, Int] {}\n\nA FatRat is a rational number stored with arbitrary size numerator and\ndenominator. Arithmetic operations involving a FatRat and optionally Int or\nRat objects return a FatRat, avoiding loss of precision.\n\nSince, unlike Rat, FatRat arithmetics do not fall back Num at some point,\nthere is a risk that repeated arithmetic operations generate pathologically\nlarge numerators and denominators.\n\nThere are two common ways to generate FatRat objects: through the\nFatRat.new(Int, Int) constructor, which generates them from numerator and\ndenominator, or by calling the .FatRat method on an Int or Rat object.\n\n"},{"n":"&make","t":"Sub","k":"v"},{"n":"make","s":{"r":"Mu","p":["Mu \\made"]},"k":"s","m":0},{"t":"Sub+{is-pure}","n":"&acotan","k":"v"},{"s":{"p":["Numeric \\x"],"r":"Mu"},"n":"acotan","k":"s","m":1},{"s":{"p":["Cool \\x"],"r":"Mu"},"n":"acotan","k":"s","m":1},{"n":"acotan","s":{"r":"num","p":["num $x"]},"m":1,"k":"s"},{"k":"v","n":"&tan","t":"Sub+{is-pure}"},{"k":"s","m":1,"s":{"p":["Numeric \\x"],"r":"Mu"},"n":"tan"},{"s":{"r":"Mu","p":["Cool \\x"]},"n":"tan","k":"s","m":1},{"n":"tan","s":{"r":"num","p":["num $x"]},"k":"s","m":1},{"k":"e","t":"SeekType","n":"SeekType"},{"k":"e","t":"SeekType","n":"SeekType::SeekFromCurrent"},{"k":"e","t":"SeekType","n":"SeekType::SeekFromEnd"},{"t":"SeekType","n":"SeekType::SeekFromBeginning","k":"e"},{"n":"Supplier","t":"Supplier","k":"c","m":[{"n":"new","s":{"p":["*%_"],"r":"Mu"},"k":"m","m":0},{"n":"BUILD","s":{"r":"Nil","p":[":taplist($!taplist)!","*%_"]},"k":"s","m":0},{"k":"m","m":0,"s":{"p":["Mu \\value","*%_"],"r":"Nil"},"n":"emit"},{"n":"done","s":{"p":["*%_"],"r":"Nil"},"m":0,"k":"m"},{"n":"quit","s":{"p":["Exception $ex","*%_"],"r":"Mu"},"k":"m","m":1},{"m":1,"k":"m","s":{"r":"Mu","p":["$message","*%_"]},"n":"quit"},{"n":"Supply","s":{"p":["*%_"],"r":"Mu"},"k":"m","m":0},{"k":"m","m":0,"n":"unsanitized-supply","s":{"p":["*%_"],"r":"Mu"}},{"n":"BUILDALL","s":{"p":["@auto","%init","*%_"],"r":"Mu"},"k":"s","m":0}],"b":"A","a":[{"k":"v","n":"$!taplist","t":"Mu"}],"d":"TITLE\nclass Supplier\n\nSUBTITLE\nLive Supply factory\n\n    class Supplier { }\n\nThis is a factory for live Supply objects, which provides the mechanism for\nemitting new values onto the supplies:\n\n    my $supplier = Supplier.new;\n    my $supply_1 = $supplier.Supply;\n    $supply_1.tap(-> $v { say \"One $v\" });\n    my $supply_2 = $supplier.Supply;\n    $supply_2.tap(-> $v { say \"Two $v\" });\n    $supplier.emit(42);\n\nWill output:\n\n    One 42\n    Two 42\n\n\non demand supplies are created by the factory methods of the Supply class\nor by the supply keyword. A mixture of a live and on-demand Supply can be\ncreated with a Supplier::Preserving.\n\n"},{"t":"Supplier::Preserving","n":"Supplier::Preserving","d":"TITLE\nclass Supplier::Preserving\n\nSUBTITLE\nCached live Supply factory\n\n    class Supplier::Preserving is Supplier { }\n\nThis is a factory for live Supply-type objects, and it provides the\nmechanism for emitting new values onto the supplies, whereby values are\nkept when no consumer has tapped into the Supply. Any tapping will consume\nthe already stored and future values.\n\nStarting a preserving Supply and consuming its values after it is done:\n\n    my $p = Supplier::Preserving.new;\n    start for ^3 {\n        $p.emit($_);\n        LAST {\n            say „done after { now - BEGIN now}s“;\n            $p.done;\n        }\n    }\n    sleep 2;\n    react {\n        whenever $p.Supply { $_.say; }\n        whenever Promise.in(2) { done }\n    }\n    say „also done after { now - BEGIN now }s“\n\nWill output:\n\n    done after 0.0638467s\n    0\n    1\n    2\n    also done after 4.0534119s\n\n\n","b":"A","a":[{"t":"Mu","n":"$!taplist","k":"v"}],"m":[{"m":0,"k":"m","s":{"r":"Mu","p":["*%_"]},"n":"new"},{"n":"BUILDALL","s":{"r":"Mu","p":["@auto","%init","*%_"]},"k":"s","m":0},{"n":"unsanitized-supply","s":{"r":"Mu","p":["*%_"]},"k":"m","m":0},{"m":1,"k":"m","n":"quit","s":{"r":"Mu","p":["Exception $ex","*%_"]}},{"n":"quit","s":{"r":"Mu","p":["$message","*%_"]},"m":1,"k":"m"},{"k":"m","m":0,"s":{"r":"Mu","p":["*%_"]},"n":"Supply"},{"k":"m","m":0,"n":"emit","s":{"p":["Mu \\value","*%_"],"r":"Nil"}},{"n":"new","s":{"r":"Mu","p":["*%_"]},"k":"m","m":0},{"s":{"r":"Nil","p":["*%_"]},"n":"done","k":"m","m":0},{"n":"BUILD","s":{"r":"Nil","p":[":taplist($!taplist)!","*%_"]},"k":"s","m":0},{"s":{"r":"Mu","p":["@auto","%init","*%_"]},"n":"BUILDALL","m":0,"k":"s"}],"k":"c"},{"k":"v","n":"&atanh","t":"Sub+{is-pure}"},{"m":1,"k":"s","s":{"p":["Numeric \\x"],"r":"Mu"},"n":"atanh"},{"s":{"r":"Mu","p":["Cool \\x"]},"n":"atanh","k":"s","m":1},{"m":1,"k":"s","n":"atanh","s":{"p":["num $x"],"r":"num"}},{"k":"v","n":"&getc","t":"Sub"},{"k":"s","m":1,"n":"getc","s":{"p":["IO::Handle:D $fh = { ... }"],"r":"Mu"}},{"n":"CurrentThreadScheduler","t":"CurrentThreadScheduler","a":[{"n":"&.uncaught_handler","t":"Callable","k":"v"}],"b":"A","k":"c","m":[{"k":"m","m":0,"n":"handle_uncaught","s":{"r":"Mu","p":["$exception","*%_"]}},{"n":"cue","s":{"p":["&code",":$at",":$in",":$every",":$times = 1",":&catch is copy","*%_"],"r":"Mu"},"m":0,"k":"m"},{"k":"m","m":0,"n":"loads","s":{"p":["*%_"],"r":"Int"}},{"k":"m","m":0,"n":"uncaught_handler","s":{"p":["*%_"],"r":"Mu"}},{"n":"BUILDALL","s":{"p":["@auto","%init","*%_"],"r":"Mu"},"m":0,"k":"s"}],"d":"TITLE\nclass CurrentThreadScheduler\n\nSUBTITLE\nScheduler that synchronously executes code on the current thread\n\n    class CurrentThreadScheduler does Scheduler {}\n\n\nCurrentThreadScheduler executes tasks on the current threads. This means\nthat method cue blocks until the code has finished executing."},{"b":"C","m":[{"k":"m","m":0,"s":{"r":"Mu","p":["*%_"]},"n":"Capture"},{"s":{"p":["*%_"],"r":"Mu"},"n":"Num","m":0,"k":"m"},{"s":{"p":["*%_"],"r":"Mu"},"n":"Bridge","m":0,"k":"m"},{"m":0,"k":"m","s":{"r":"Mu","p":["*%_"]},"n":"Range"},{"m":0,"k":"m","n":"Int","s":{"r":"Mu","p":["*%_"]}},{"s":{"p":["Real $epsilon = 1e-06",":$fat","*%_"],"r":"Mu"},"n":"Rat","k":"m","m":0},{"s":{"p":["Real $epsilon = 1e-06","*%_"],"r":"Mu"},"n":"FatRat","m":0,"k":"m"},{"n":"succ","s":{"p":["*%_"],"r":"Mu"},"k":"m","m":0},{"s":{"p":["*%_"],"r":"Mu"},"n":"pred","k":"m","m":0},{"k":"m","m":0,"n":"isNaN","s":{"p":["*%_"],"r":"Mu"}},{"n":"abs","s":{"p":["*%_"],"r":"Mu"},"k":"m","m":0},{"k":"m","m":1,"n":"log","s":{"p":["*%_"],"r":"Mu"}},{"s":{"p":["Num \\base","*%_"],"r":"Mu"},"n":"log","k":"m","m":1},{"m":1,"k":"m","s":{"r":"Mu","p":["*%_"]},"n":"log"},{"n":"log","s":{"p":["Real $base","*%_"],"r":"Mu"},"k":"m","m":1},{"s":{"p":["Cool $base","*%_"],"r":"Mu"},"n":"log","k":"m","m":1},{"m":1,"k":"m","s":{"p":["Numeric $base","*%_"],"r":"Mu"},"n":"log"},{"k":"m","m":1,"s":{"r":"Mu","p":["*%_"]},"n":"sqrt"},{"s":{"p":["*%_"],"r":"Mu"},"n":"rand","k":"m","m":0},{"m":0,"k":"m","n":"ceiling","s":{"p":["*%_"],"r":"Mu"}},{"m":0,"k":"m","s":{"r":"Mu","p":["*%_"]},"n":"floor"},{"k":"m","m":1,"s":{"p":["*%_"],"r":"Mu"},"n":"sin"},{"k":"m","m":1,"s":{"r":"Mu","p":["*%_"]},"n":"asin"},{"k":"m","m":1,"n":"cos","s":{"p":["*%_"],"r":"Mu"}},{"m":1,"k":"m","n":"acos","s":{"r":"Mu","p":["*%_"]}},{"s":{"r":"Mu","p":["*%_"]},"n":"tan","k":"m","m":1},{"m":1,"k":"m","s":{"r":"Mu","p":["*%_"]},"n":"atan"},{"s":{"r":"Mu","p":["*%_"]},"n":"sec","k":"m","m":1},{"m":1,"k":"m","s":{"r":"Mu","p":["*%_"]},"n":"asec"},{"m":0,"k":"m","s":{"r":"Mu","p":["*%_"]},"n":"cosec"},{"k":"m","m":0,"n":"acosec","s":{"p":["*%_"],"r":"Mu"}},{"m":0,"k":"m","n":"cotan","s":{"p":["*%_"],"r":"Mu"}},{"k":"m","m":0,"s":{"r":"Mu","p":["*%_"]},"n":"acotan"},{"s":{"p":["*%_"],"r":"Mu"},"n":"sinh","k":"m","m":1},{"n":"asinh","s":{"r":"Mu","p":["*%_"]},"k":"m","m":1},{"s":{"p":["*%_"],"r":"Mu"},"n":"cosh","k":"m","m":1},{"m":1,"k":"m","n":"acosh","s":{"r":"Mu","p":["*%_"]}},{"n":"tanh","s":{"p":["*%_"],"r":"Mu"},"m":1,"k":"m"},{"s":{"r":"Mu","p":["*%_"]},"n":"atanh","m":1,"k":"m"},{"m":1,"k":"m","n":"atanh","s":{"r":"Mu","p":["*%_"]}},{"n":"sech","s":{"p":["*%_"],"r":"Mu"},"m":1,"k":"m"},{"n":"asech","s":{"p":["*%_"],"r":"Mu"},"m":1,"k":"m"},{"s":{"r":"Mu","p":["*%_"]},"n":"cosech","m":1,"k":"m"},{"n":"acosech","s":{"r":"Mu","p":["*%_"]},"k":"m","m":1},{"k":"m","m":1,"n":"cotanh","s":{"r":"Mu","p":["*%_"]}},{"k":"m","m":1,"s":{"r":"Mu","p":["*%_"]},"n":"acotanh"},{"k":"m","m":0,"s":{"p":["*%_"],"r":"Bool:D"},"n":"is-prime"},{"k":"m","m":0,"s":{"p":["*%_"],"r":"Mu"},"n":"narrow"},{"s":{"p":["*%_"],"r":"Mu"},"n":"sign","k":"m","m":0},{"k":"m","m":0,"s":{"r":"Mu","p":["*%_"]},"n":"conj"},{"m":1,"k":"m","n":"atan2","s":{"r":"Mu","p":["Num:D $x = 1e0","*%_"]}},{"m":1,"k":"m","n":"atan2","s":{"r":"Mu","p":["Real $x = 1e0","*%_"]}},{"n":"atan2","s":{"r":"Mu","p":["Cool $x = 1e0","*%_"]},"k":"m","m":1},{"n":"round","s":{"p":["*%_"],"r":"Mu"},"k":"m","m":1},{"s":{"r":"Mu","p":["$scale","*%_"]},"n":"round","k":"m","m":1},{"m":0,"k":"m","s":{"p":["Real $angle","*%_"],"r":"Mu"},"n":"unpolar"},{"s":{"r":"Mu","p":["*%_"]},"n":"cis","m":0,"k":"m"},{"k":"m","m":0,"s":{"p":["*%_"],"r":"Mu"},"n":"Complex"},{"m":1,"k":"m","n":"exp","s":{"p":["*%_"],"r":"Mu"}},{"s":{"r":"Mu","p":["*%_"]},"n":"exp","m":1,"k":"m"},{"s":{"p":["$base","*%_"],"r":"Mu"},"n":"exp","k":"m","m":1},{"s":{"r":"Mu","p":["*%_"]},"n":"truncate","k":"m","m":0},{"m":0,"k":"m","s":{"r":"Mu","p":["+@mods","*%_"]},"n":"polymod"},{"k":"m","m":0,"s":{"p":["Int:D $base","$digits? is copy","*%_"],"r":"Mu"},"n":"base"},{"m":0,"k":"m","n":"log10","s":{"r":"Mu","p":["*%_"]}},{"n":"roots","s":{"p":["Cool $n","*%_"],"r":"Mu"},"m":0,"k":"m"},{"s":{"r":"ValueObjAt:D","p":["*%_"]},"n":"WHICH","k":"m","m":1},{"m":1,"k":"m","n":"WHICH","s":{"p":["*%_"],"r":"ObjAt:D"}},{"k":"m","m":1,"n":"WHICH","s":{"r":"ValueObjAt:D","p":["*%_"]}},{"s":{"r":"Bool","p":["*%_"]},"n":"Bool","k":"m","m":1},{"m":1,"k":"m","n":"Bool","s":{"p":["*%_"],"r":"Mu"}},{"m":1,"k":"m","n":"Bool","s":{"p":["*%_"],"r":"Mu"}},{"s":{"p":["*%_"],"r":"Mu"},"n":"Bool","m":1,"k":"m"},{"s":{"r":"Mu","p":["*%attrinit"]},"n":"new","k":"m","m":1},{"k":"m","m":1,"n":"new","s":{"r":"Mu","p":["$","*@","*%_"]}},{"s":{"r":"Mu","p":["*%_"]},"n":"new","k":"m","m":1},{"s":{"p":["$n","*%_"],"r":"Mu"},"n":"new","m":1,"k":"m"},{"s":{"r":"Mu","p":["*%_"]},"n":"perl","m":1,"k":"m"},{"s":{"r":"Mu","p":["*%_"]},"n":"perl","m":1,"k":"m"},{"k":"m","m":1,"s":{"r":"Mu","p":["*%_"]},"n":"perl"},{"k":"m","m":1,"s":{"p":["*%_"],"r":"Mu"},"n":"Str"},{"k":"m","m":1,"s":{"p":["*%_"],"r":"Mu"},"n":"Str"},{"s":{"r":"Mu","p":["*%_"]},"n":"Str","m":1,"k":"m"},{"k":"m","m":1,"n":"Str","s":{"r":"Mu","p":["*%_"]}},{"k":"m","m":1,"n":"Real","s":{"p":["*%_"],"r":"Mu"}},{"m":1,"k":"m","s":{"r":"Mu","p":["*%_"]},"n":"Real"},{"n":"Real","s":{"r":"Mu","p":["*%_"]},"k":"m","m":1},{"s":{"r":"Mu","p":["*%_"]},"n":"Real","m":1,"k":"m"},{"k":"m","m":1,"s":{"r":"Mu","p":["*%_"]},"n":"Numeric"},{"m":1,"k":"m","n":"Numeric","s":{"r":"Mu","p":["*%_"]}},{"m":1,"k":"m","n":"Numeric","s":{"r":"Mu","p":["*%_"]}},{"s":{"p":["\\topic","*%_"],"r":"Mu"},"n":"ACCEPTS","m":1,"k":"m"},{"n":"ACCEPTS","s":{"r":"Mu","p":["Mu:U \\topic","*%_"]},"k":"m","m":1},{"k":"m","m":1,"n":"ACCEPTS","s":{"r":"Mu","p":["Mu:D \\a","*%_"]}},{"n":"ACCEPTS","s":{"p":["Mu:U $","*%_"],"r":"Bool"},"m":1,"k":"m"},{"s":{"p":["\\topic","*%_"],"r":"Bool:D"},"n":"ACCEPTS","m":1,"k":"m"},{"n":"ACCEPTS","s":{"r":"Mu","p":["Any:D \\a","*%_"]},"k":"m","m":1},{"s":{"r":"Mu","p":["*%_"]},"n":"gist","k":"m","m":1},{"s":{"r":"Mu","p":["*%_"]},"n":"gist","k":"m","m":1},{"n":"gist","s":{"r":"Mu","p":["*%_"]},"m":1,"k":"m"},{"m":1,"k":"m","n":"DUMP","s":{"p":["*%_"],"r":"Mu"}},{"k":"m","m":1,"s":{"p":[":$indent-step = 4",":%ctx","*%_"],"r":"Mu"},"n":"DUMP"},{"n":"DUMP","s":{"p":["*%_"],"r":"Mu"},"k":"m","m":1},{"s":{"r":"Mu","p":["@auto","%init","*%_"]},"n":"BUILDALL","m":0,"k":"s"}],"k":"c","n":"Inf","t":"Num"},{"k":"v","t":"Sub+{Precedence}","n":"&prefix:<++>"},{"n":"prefix:<++>","s":{"r":"Mu","p":["Mu:D $a is rw"]},"m":1,"k":"s"},{"m":1,"k":"s","s":{"p":["Mu:U $a is rw"],"r":"Mu"},"n":"prefix:<++>"},{"n":"prefix:<++>","s":{"p":["Int:D $a is rw"],"r":"Int:D"},"m":1,"k":"s"},{"m":1,"k":"s","n":"prefix:<++>","s":{"r":"int","p":["int $a is rw"]}},{"s":{"r":"Mu","p":["Bool $a is rw"]},"n":"prefix:<++>","m":1,"k":"s"},{"m":1,"k":"s","s":{"r":"Mu","p":["Num:D $a is rw"]},"n":"prefix:<++>"},{"k":"s","m":1,"n":"prefix:<++>","s":{"p":["Num:U $a is rw"],"r":"Mu"}},{"n":"prefix:<++>","s":{"r":"num","p":["num $a is rw"]},"m":1,"k":"s"},{"k":"e","t":"ProtocolType","n":"ProtocolType"},{"k":"e","n":"ProtocolType::PROTO_UDP","t":"ProtocolType"},{"n":"ProtocolType::PROTO_TCP","t":"ProtocolType","k":"e"},{"k":"e","t":"ProtocolFamily","n":"PF_INET6"},{"k":"v","t":"Sub","n":"&await"},{"k":"s","m":1,"n":"await","s":{"p":[],"r":"Mu"}},{"n":"await","s":{"r":"Mu","p":["Any:U $x"]},"m":1,"k":"s"},{"k":"s","m":1,"s":{"r":"Mu","p":["Any:D $x"]},"n":"await"},{"k":"s","m":1,"s":{"r":"Mu","p":["Promise:D $p"]},"n":"await"},{"n":"await","s":{"p":["Channel:D $c"],"r":"Mu"},"m":1,"k":"s"},{"s":{"p":["Supply:D $s"],"r":"Mu"},"n":"await","k":"s","m":1},{"m":1,"k":"s","s":{"r":"Mu","p":["Iterable:D $i"]},"n":"await"},{"k":"s","m":1,"n":"await","s":{"r":"Mu","p":["*@awaitables"]}},{"t":"Sub","n":"&die","k":"v"},{"s":{"r":"Nil","p":[]},"n":"die","m":1,"k":"s"},{"k":"s","m":1,"n":"die","s":{"p":["Exception:U $e"],"r":"Nil"}},{"n":"die","s":{"r":"Nil","p":["$payload"]},"k":"s","m":1},{"m":1,"k":"s","n":"die","s":{"r":"Nil","p":["|cap is raw (*@msg)"]}},{"m":1,"k":"s","s":{"r":"Nil","p":["Failure:D $f"]},"n":"die"},{"s":{"r":"Nil","p":["Failure:U $f"]},"n":"die","k":"s","m":1},{"n":"List","t":"List","k":"c","m":[{"m":0,"k":"m","n":"from-iterator","s":{"r":"List:D","p":["Iterator $iter","*%_"]}},{"s":{"r":"Mu","p":["|"]},"n":"from-slurpy","k":"m","m":0},{"k":"m","m":0,"s":{"p":["|"],"r":"Mu"},"n":"from-slurpy-onearg"},{"s":{"p":["|"],"r":"Mu"},"n":"from-slurpy-flat","m":0,"k":"m"},{"n":"new","s":{"r":"List:D","p":["**@things is raw","*%_"]},"m":0,"k":"m"},{"k":"m","m":0,"s":{"r":"Mu","p":["*%_"]},"n":"to"},{"s":{"p":["*%_"],"r":"Mu"},"n":"from","k":"m","m":0},{"k":"m","m":0,"n":"sum","s":{"r":"Mu","p":["*%_"]}},{"s":{"r":"Str:D","p":["*%_"]},"n":"fmt","k":"m","m":1},{"k":"m","m":1,"s":{"r":"Str:D","p":["Str(Cool) $format","*%_"]},"n":"fmt"},{"k":"m","m":1,"s":{"p":["Str(Cool) $format","$separator","*%_"],"r":"Str:D"},"n":"fmt"},{"m":0,"k":"m","n":"ASSIGN-POS","s":{"p":["Int:D \\pos","\\what","*%_"],"r":"Mu"}},{"m":0,"k":"m","n":"BIND-POS","s":{"p":["Int:D \\pos","\\what","*%_"],"r":"Mu"}},{"n":"reification-target","s":{"p":["*%_"],"r":"Mu"},"k":"m","m":0},{"m":0,"k":"m","n":"iterator","s":{"r":"Iterator:D","p":["*%_"]}},{"s":{"r":"Nil","p":["*%_"]},"n":"sink","k":"m","m":0},{"s":{"p":["Iterable:D \\iterable",":$INITIALIZE!","*%_"],"r":"List:D"},"n":"STORE","k":"m","m":1},{"s":{"r":"List:D","p":["Iterable:D \\iterable","*%_"]},"n":"STORE","m":1,"k":"m"},{"m":1,"k":"m","n":"STORE","s":{"r":"List:D","p":["Mu \\item","*%_"]}},{"k":"m","m":0,"s":{"r":"List:D","p":["*%_"]},"n":"eager"},{"s":{"p":["*%_"],"r":"Capture:D"},"n":"Capture","m":0,"k":"m"},{"k":"m","m":0,"s":{"p":["*%_"],"r":"Mu"},"n":"FLATTENABLE_LIST"},{"s":{"r":"Mu","p":["*%_"]},"n":"FLATTENABLE_HASH","k":"m","m":0},{"m":0,"k":"m","n":"CALL-ME","s":{"r":"Mu","p":["|c is raw"]}},{"n":"pick","s":{"p":["*%_"],"r":"Mu"},"k":"m","m":1},{"k":"m","m":1,"n":"pick","s":{"p":["Callable:D $calculate","*%_"],"r":"Mu"}},{"s":{"r":"Mu","p":["$number is copy","*%_"]},"n":"pick","m":1,"k":"m"},{"n":"roll","s":{"p":["*%_"],"r":"Mu"},"m":1,"k":"m"},{"k":"m","m":1,"s":{"r":"Mu","p":["Whatever $","*%_"]},"n":"roll"},{"s":{"p":["\\number","*%_"],"r":"Mu"},"n":"roll","k":"m","m":1},{"m":0,"k":"m","s":{"r":"Seq:D","p":["*%_"]},"n":"reverse"},{"n":"rotate","s":{"r":"Mu","p":["Int(Cool) $rotate = 1","*%_"]},"k":"m","m":0},{"s":{"r":"Seq:D","p":["*%_"]},"n":"combinations","k":"m","m":1},{"n":"combinations","s":{"p":["$of","*%_"],"r":"Seq:D"},"k":"m","m":1},{"m":1,"k":"m","s":{"p":["Range:D $ofrange","*%_"],"r":"Seq:D"},"n":"combinations"},{"m":1,"k":"m","s":{"r":"Seq:D","p":["*%_"]},"n":"permutations"},{"n":"join","s":{"r":"Mu","p":["Str(Cool) $separator = \"\"","*%_"]},"k":"m","m":0},{"m":0,"k":"m","s":{"r":"Mu","p":["|"]},"n":"push"},{"k":"m","m":0,"s":{"r":"Mu","p":["|"]},"n":"append"},{"s":{"r":"Mu","p":["|"]},"n":"unshift","m":0,"k":"m"},{"s":{"r":"Mu","p":["|"]},"n":"prepend","k":"m","m":0},{"s":{"r":"Mu","p":["|"]},"n":"shift","m":0,"k":"m"},{"s":{"p":["|"],"r":"Mu"},"n":"pop","m":0,"k":"m"},{"k":"m","m":0,"n":"of","s":{"p":["*%_"],"r":"Mu"}},{"m":0,"k":"m","n":"item","s":{"p":["*%_"],"r":"Mu"}},{"k":"m","m":0,"n":"flat","s":{"r":"Mu","p":["*%_"]}},{"n":"lazy-if","s":{"r":"Mu","p":["$flag","*%_"]},"k":"m","m":0},{"n":"lazy","s":{"r":"Mu","p":["*%_"]},"m":0,"k":"m"},{"n":"hyper","s":{"p":["Int(Cool) :$batch = 64","Int(Cool) :$degree = 4","*%_"],"r":"Mu"},"k":"m","m":0},{"s":{"p":["Int(Cool) :$batch = 64","Int(Cool) :$degree = 4","*%_"],"r":"Mu"},"n":"race","m":0,"k":"m"},{"s":{"p":["*%_"],"r":"Bool"},"n":"Bool","m":1,"k":"m"},{"m":1,"k":"m","n":"Bool","s":{"r":"Mu","p":["*%_"]}},{"k":"m","m":1,"n":"Bool","s":{"p":["*%_"],"r":"Bool:D"}},{"m":1,"k":"m","s":{"p":["*%_"],"r":"Mu"},"n":"Int"},{"n":"Int","s":{"r":"Int:D","p":["*%_"]},"k":"m","m":1},{"m":1,"k":"m","s":{"p":["*%_"],"r":"Int"},"n":"end"},{"m":1,"k":"m","n":"end","s":{"r":"Mu","p":["*%_"]}},{"m":1,"k":"m","n":"end","s":{"r":"Int:D","p":["*%_"]}},{"s":{"p":["*%_"],"r":"Mu"},"n":"Numeric","m":1,"k":"m"},{"k":"m","m":1,"s":{"r":"Int:D","p":["*%_"]},"n":"Numeric"},{"n":"Str","s":{"r":"Mu","p":["*%_"]},"m":1,"k":"m"},{"k":"m","m":1,"s":{"r":"Mu","p":["*%_"]},"n":"Str"},{"k":"m","m":1,"n":"Str","s":{"r":"Str:D","p":["*%_"]}},{"k":"m","m":1,"s":{"p":["*%_"],"r":"Int"},"n":"elems"},{"k":"m","m":1,"s":{"r":"Mu","p":["*%_"]},"n":"elems"},{"k":"m","m":1,"n":"elems","s":{"r":"Int:D","p":["*%_"]}},{"s":{"r":"Mu","p":["int \\pos","*%_"]},"n":"AT-POS","k":"m","m":1},{"m":1,"k":"m","s":{"p":["Int:D \\pos","*%_"],"r":"Mu"},"n":"AT-POS"},{"m":1,"k":"m","n":"AT-POS","s":{"r":"Mu","p":["Num:D \\pos","*%_"]}},{"n":"AT-POS","s":{"p":["Any:D \\pos","*%_"],"r":"Mu"},"k":"m","m":1},{"s":{"p":["int \\pos","*%_"],"r":"Mu"},"n":"AT-POS","k":"m","m":1},{"n":"AT-POS","s":{"r":"Mu","p":["Int:D \\pos","*%_"]},"m":1,"k":"m"},{"s":{"r":"Mu","p":["Num:D \\pos","*%_"]},"n":"AT-POS","k":"m","m":1},{"m":1,"k":"m","s":{"r":"Mu","p":["Any:D \\pos","*%_"]},"n":"AT-POS"},{"m":1,"k":"m","n":"AT-POS","s":{"p":["Any:U \\pos","*%_"],"r":"Mu"}},{"n":"AT-POS","s":{"p":["\\one","\\two","*%_"],"r":"Mu"},"m":1,"k":"m"},{"k":"m","m":1,"s":{"p":["\\one","\\two","\\three","*%_"],"r":"Mu"},"n":"AT-POS"},{"n":"AT-POS","s":{"r":"Mu","p":["**@indices","*%_"]},"m":1,"k":"m"},{"k":"m","m":1,"n":"AT-POS","s":{"p":["int $pos","*%_"],"r":"Mu"}},{"n":"AT-POS","s":{"p":["Int:D $pos","*%_"],"r":"Mu"},"m":1,"k":"m"},{"m":1,"k":"m","s":{"r":"Bool","p":["Any:D $","*%_"]},"n":"EXISTS-POS"},{"n":"EXISTS-POS","s":{"p":["Any:U $pos","*%_"],"r":"Mu"},"m":1,"k":"m"},{"k":"m","m":1,"n":"EXISTS-POS","s":{"p":["int \\pos","*%_"],"r":"Bool:D"}},{"n":"EXISTS-POS","s":{"r":"Bool:D","p":["Int:D \\pos","*%_"]},"k":"m","m":1},{"n":"EXISTS-POS","s":{"r":"Bool:D","p":["Num:D \\pos","*%_"]},"k":"m","m":1},{"s":{"p":["Any:D \\pos","*%_"],"r":"Bool:D"},"n":"EXISTS-POS","k":"m","m":1},{"m":1,"k":"m","n":"EXISTS-POS","s":{"r":"Mu","p":["Any:U \\pos","*%_"]}},{"s":{"p":["\\one","\\two","*%_"],"r":"Bool:D"},"n":"EXISTS-POS","m":1,"k":"m"},{"n":"EXISTS-POS","s":{"p":["\\one","\\two","\\three","*%_"],"r":"Bool:D"},"k":"m","m":1},{"s":{"r":"Bool:D","p":["**@indices","*%_"]},"n":"EXISTS-POS","k":"m","m":1},{"n":"EXISTS-POS","s":{"p":["int $pos","*%_"],"r":"Mu"},"k":"m","m":1},{"n":"EXISTS-POS","s":{"p":["Int:D $pos","*%_"],"r":"Bool:D"},"m":1,"k":"m"},{"n":"ACCEPTS","s":{"r":"Mu","p":["\\topic","*%_"]},"k":"m","m":1},{"n":"ACCEPTS","s":{"r":"Mu","p":["Mu:U \\topic","*%_"]},"k":"m","m":1},{"m":1,"k":"m","s":{"r":"Mu","p":["Mu:D \\a","*%_"]},"n":"ACCEPTS"},{"m":1,"k":"m","n":"ACCEPTS","s":{"p":["Mu:U $","*%_"],"r":"Bool"}},{"k":"m","m":1,"n":"ACCEPTS","s":{"p":["\\topic","*%_"],"r":"Bool:D"}},{"s":{"r":"Bool","p":["Iterable:U $","*%_"]},"n":"ACCEPTS","m":1,"k":"m"},{"k":"m","m":1,"n":"ACCEPTS","s":{"p":["Iterable:D $topic","*%_"],"r":"Bool:D"}},{"k":"m","m":1,"s":{"r":"Mu","p":["$topic","*%_"]},"n":"ACCEPTS"},{"s":{"r":"Mu","p":["*%_"]},"n":"list","k":"m","m":1},{"m":1,"k":"m","n":"list","s":{"r":"Mu","p":["*%_"]}},{"s":{"p":["*%_"],"r":"Mu"},"n":"list","m":1,"k":"m"},{"n":"values","s":{"r":"Mu","p":["*%_"]},"k":"m","m":1},{"n":"values","s":{"p":["*%_"],"r":"Mu"},"m":1,"k":"m"},{"m":1,"k":"m","n":"values","s":{"r":"Seq:D","p":["*%_"]}},{"m":1,"k":"m","n":"keys","s":{"r":"Mu","p":["*%_"]}},{"m":1,"k":"m","n":"keys","s":{"p":["*%_"],"r":"Mu"}},{"s":{"p":["*%_"],"r":"Seq:D"},"n":"keys","m":1,"k":"m"},{"n":"kv","s":{"p":["*%_"],"r":"Mu"},"m":1,"k":"m"},{"m":1,"k":"m","n":"kv","s":{"r":"Mu","p":["*%_"]}},{"m":1,"k":"m","n":"kv","s":{"r":"Seq:D","p":["*%_"]}},{"k":"m","m":1,"n":"pairs","s":{"r":"Mu","p":["*%_"]}},{"s":{"p":["*%_"],"r":"Mu"},"n":"pairs","m":1,"k":"m"},{"m":1,"k":"m","s":{"p":["*%_"],"r":"Seq:D"},"n":"pairs"},{"k":"m","m":1,"s":{"r":"Mu","p":["*%_"]},"n":"antipairs"},{"n":"antipairs","s":{"r":"Mu","p":["*%_"]},"m":1,"k":"m"},{"m":1,"k":"m","s":{"p":["*%_"],"r":"Seq:D"},"n":"antipairs"},{"m":1,"k":"m","s":{"p":["*%_"],"r":"Mu"},"n":"invert"},{"m":1,"k":"m","s":{"p":["*%_"],"r":"Mu"},"n":"invert"},{"s":{"p":["*%_"],"r":"Seq:D"},"n":"invert","k":"m","m":1},{"n":"gist","s":{"p":["*%_"],"r":"Mu"},"m":1,"k":"m"},{"s":{"p":["*%_"],"r":"Mu"},"n":"gist","m":1,"k":"m"},{"k":"m","m":1,"s":{"p":["*%_"],"r":"Str:D"},"n":"gist"},{"n":"perl","s":{"p":["*%_"],"r":"Mu"},"m":1,"k":"m"},{"m":1,"k":"m","s":{"r":"Mu","p":["*%_"]},"n":"perl"},{"m":1,"k":"m","s":{"p":["*%_"],"r":"Str:D"},"n":"perl"},{"n":"List","s":{"p":["*%_"],"r":"Mu"},"k":"m","m":1},{"s":{"p":["*%_"],"r":"List:D"},"n":"List","m":1,"k":"m"},{"k":"m","m":1,"s":{"r":"Mu","p":["*%_"]},"n":"Slip"},{"s":{"p":["*%_"],"r":"Slip:D"},"n":"Slip","m":1,"k":"m"},{"s":{"p":["*%_"],"r":"Mu"},"n":"Array","m":1,"k":"m"},{"n":"Array","s":{"p":["*%_"],"r":"Array:D"},"k":"m","m":1},{"k":"m","m":1,"n":"Supply","s":{"r":"Mu","p":["*%_"]}},{"n":"Supply","s":{"p":["*%_"],"r":"Supply:D"},"k":"m","m":1},{"m":1,"k":"m","n":"is-lazy","s":{"p":["*%_"],"r":"Bool"}},{"k":"m","m":1,"n":"is-lazy","s":{"p":["*%_"],"r":"Bool:D"}},{"m":1,"k":"m","n":"sort","s":{"p":["*%_"],"r":"Mu"}},{"s":{"p":["&by","*%_"],"r":"Mu"},"n":"sort","m":1,"k":"m"},{"s":{"p":["*%_"],"r":"Seq:D"},"n":"sort","m":1,"k":"m"},{"n":"sort","s":{"r":"Seq:D","p":["&by","*%_"]},"k":"m","m":1},{"n":"tail","s":{"r":"Mu","p":["*%_"]},"k":"m","m":1},{"s":{"p":["$n","*%_"],"r":"Mu"},"n":"tail","m":1,"k":"m"},{"n":"tail","s":{"p":["*%_"],"r":"Mu"},"k":"m","m":1},{"n":"tail","s":{"p":["$n","*%_"],"r":"Seq:D"},"k":"m","m":1},{"n":"chrs","s":{"r":"Mu","p":["*%_"]},"k":"m","m":1},{"k":"m","m":1,"n":"chrs","s":{"r":"Str:D","p":["*%_"]}},{"n":"Mix","s":{"p":["*%_"],"r":"Mix:D"},"k":"m","m":1},{"k":"m","m":1,"s":{"r":"Mu","p":["*%_"]},"n":"Mix"},{"m":1,"k":"m","s":{"p":["*%_"],"r":"MixHash:D"},"n":"MixHash"},{"n":"MixHash","s":{"p":["*%_"],"r":"Mu"},"k":"m","m":1},{"k":"m","m":1,"n":"Bag","s":{"r":"Bag:D","p":["*%_"]}},{"s":{"p":["*%_"],"r":"Mu"},"n":"Bag","m":1,"k":"m"},{"s":{"r":"BagHash:D","p":["*%_"]},"n":"BagHash","k":"m","m":1},{"s":{"p":["*%_"],"r":"Mu"},"n":"BagHash","k":"m","m":1},{"m":1,"k":"m","n":"Set","s":{"r":"Set:D","p":["*%_"]}},{"m":1,"k":"m","s":{"r":"Mu","p":["*%_"]},"n":"Set"},{"k":"m","m":1,"s":{"p":["*%_"],"r":"SetHash:D"},"n":"SetHash"},{"k":"m","m":1,"n":"SetHash","s":{"p":["*%_"],"r":"Mu"}},{"k":"s","m":0,"s":{"p":["@auto","%init","*%_"],"r":"Mu"},"n":"BUILDALL"},{"k":"m","m":0,"n":"!JUNCTIONIZE","s":{"p":["\\sep","Mu \\strings","\\i","\\elems","Mu \\initial","*%_"],"r":"Mu"}},{"m":0,"k":"m","n":"!AT_POS_SLOW","s":{"r":"Mu","p":["\\pos","*%_"]}}],"b":"C","a":[{"n":"$!reified","t":"Mu","k":"v"},{"k":"v","t":"Mu","n":"$!todo"}],"d":"TITLE\nclass List\n\nSUBTITLE\nSequence of values\n\n    my class List does Iterable does Positional { }\n\n\nList stores items sequentially and potentially lazily.\n\nIndexes into lists and arrays start at 0 by default.\n\nYou can assign to list elements if they are containers. Use Arrays to have\nevery value of the list stored in a container.\n\nList implements Positional and as such provides support for subscripts.\n\nItems, flattening and sigils\n\nIn Raku, assigning a List to a scalar variable does not lose information.\nThe difference is that iteration generally treats a list (or any other\nlist-like object, like a Seq or an Array) inside a scalar as a single\nelement.\n\n    my $s = (1, 2, 3);\n    for $s { }      # one iteration\n    for $s.list { } # three iterations\n\n    my $t = [1, 2, 3];\n    for $t { }      # one iteration\n    for $t.list { } # three iterations\n\n    my @a = 1, 2, 3;\n    for @a { }      # three iterations\n    for @a.item { } # one iteration\n\nThis operation is called itemization or putting in an item context. .item\ndoes the job for objects, as well as $( ... ) and, on array variables,\n$@a.\n\nLists generally don't interpolate (flatten) into other lists, except when\nthey are in list context and the single argument to an operation such as\nappend:\n\n    my $a = (1, 2, 3);\n    my $nested = ($a, $a);  # two elements\n\n    my $flat = $nested.map({ .Slip });  # six elements, with explicit Slip\n\n    my @b = <a b>;\n    @b.append: $a.list;     # The array variable @b has 5 elements, because\n                            # the list $a is the sole argument to append\n\n    say @b.elems;           # OUTPUT: «5␤»\n\n    my @c = <a b>;\n    @c.append: $a.list, 7;  # The array variable @c has 4 elements, because\n                            # the list $a wasn't the only argument and thus\n                            # wasn't flatten by the append operation\n\n    say @c.elems;           # OUTPUT: «4␤»\n\n    my @d = <a b>;\n    @d.append: $a;          # The array variable @d has 3 elements, because\n                            # $a is in an item context and as far as append is\n                            # concerned a single element\n\n    say @d.elems;           # OUTPUT: «3␤»\n\nThe same flattening behavior applies all objects that do the Iterable role,\nnotable hashes:\n\n    my %h = a => 1, b => 2;\n    my @b = %h;   say @b.elems;     # OUTPUT: «2␤»\n    my @c = %h, ; say @c.elems;     # OUTPUT: «1␤»\n    my @d = $%h;  say @d.elems;     # OUTPUT: «1␤»\n\nSlurpy parameters (*@a) flatten non-itemized sublists:\n\n    sub fe(*@flat) { @flat.elems }\n    say fe(<a b>, <d e>);           # OUTPUT: «4␤»\n    say fe(<a b>, <d e>.item);      # OUTPUT: «3␤»\n\n The empty list is created with (). Smartmatching against the empty list\nwill check for the absence of elements.\n\n    my @a;\n    for @a, @a.list, @a.Seq -> \\listoid {\n        say listoid ~~ ()\n    }\n    # OUTPUT: «True␤True␤True␤»\n\nCoercion to Bool also indicates if the List got any elements.\n\n    my @a;\n    say [@a.elems, @a.Bool, ?@a]; # OUTPUT: «[0 False False]␤»\n    @a.push: 42;\n    say [@a.elems, @a.Bool, ?@a]; # OUTPUT: «[1 True True]␤»\n    say 'empty' unless @a;        # no output\n\n"},{"n":"List::Reifier","t":"List::Reifier","a":[{"k":"v","t":"Mu","n":"$!reified"},{"k":"v","t":"Iterator","n":"$!current-iter"},{"t":"Mu","n":"$!future","k":"v"},{"k":"v","t":"Mu","n":"$!reification-target"}],"b":"A","k":"c","m":[{"m":0,"k":"m","n":"reify-at-least","s":{"p":["int $elems","*%_"],"r":"Mu"}},{"n":"reify-until-lazy","s":{"p":["*%_"],"r":"Mu"},"m":0,"k":"m"},{"m":0,"k":"m","s":{"r":"Mu","p":["*%_"]},"n":"reify-all"},{"m":0,"k":"m","s":{"p":["*%_"],"r":"Mu"},"n":"fully-reified"},{"k":"m","m":0,"n":"is-lazy","s":{"r":"Mu","p":["*%_"]}},{"k":"s","m":0,"s":{"p":["@auto","%init","*%_"],"r":"Mu"},"n":"BUILDALL"}]},{"t":"Signal","n":"SIGEMT","k":"e"},{"k":"v","t":"Sub+{is-pure}","n":"&all"},{"s":{"r":"Mu","p":["@values"]},"n":"all","m":1,"k":"s"},{"n":"all","s":{"p":["+\\values is raw"],"r":"Mu"},"k":"s","m":1},{"d":"TITLE\nrole Buf\n\nSUBTITLE\nMutable buffer for binary data\n\n    role Buf[::T = uint8] does Blob[T] is repr('VMArray') is array_type(T){ ... }\n\nA Buf does the role of a mutable sequence of (usually unsigned) integers.\n\n    my $b = Buf.new(1, 2, 3);\n    $b[1] = 42;\n\nHowever, it's a parameterized type, and you can instantiate with several\ninteger types:\n\n    my $b = Buf[int32].new( 3, -3, 0xff32, -44)\n    # OUTPUT: «Buf[int32]:0x<03 -3 FF32 -2C>»\n\n\nBy default, Buf uses 8-bit unsigned integers, that is, it is equivalent to\nBuf[uint8]. Some other types of Bufs which are used often get their own\nclass name.\n\n  buf8   Buf[uint8]\n  buf16  Buf[uint16]\n  buf32  Buf[uint32]\n  buf64  Buf[uint64]\n\n\nYou can use these in pretty much the same way you would with Buf:\n\n    my $buf = buf8.new(3,6, 254);\n    say $buf; # OUTPUT: «Buf[uint8]:0x<03 06 fe>␤»\n\nPlus there are some object methods, like encode that might return a buf8 in\nsome cases where it is the best representation for a particular encoding.\n\n","b":"C","k":"ro","m":[{"m":0,"k":"m","s":{"p":["int $offset","int8 $value","Endian $endian = Endian::NativeEndian","*%_"],"r":"Nil"},"n":"write-int8"},{"k":"m","m":0,"n":"write-int16","s":{"p":["int $offset","int16 $value","Endian $endian = Endian::NativeEndian","*%_"],"r":"Nil"}},{"m":0,"k":"m","s":{"p":["int $offset","int32 $value","Endian $endian = Endian::NativeEndian","*%_"],"r":"Nil"},"n":"write-int32"},{"k":"m","m":0,"n":"write-int64","s":{"r":"Nil","p":["int $offset","Int:D $value","Endian $endian = Endian::NativeEndian","*%_"]}},{"s":{"p":["int $offset","Int:D $value","Endian $endian = Endian::NativeEndian","*%_"],"r":"Nil"},"n":"write-int128","k":"m","m":0},{"k":"m","m":0,"n":"write-uint8","s":{"p":["int $offset","uint8 $value","Endian $endian = Endian::NativeEndian","*%_"],"r":"Nil"}},{"k":"m","m":0,"s":{"r":"Nil","p":["int $offset","uint16 $value","Endian $endian = Endian::NativeEndian","*%_"]},"n":"write-uint16"},{"s":{"p":["int $offset","uint32 $value","Endian $endian = Endian::NativeEndian","*%_"],"r":"Nil"},"n":"write-uint32","k":"m","m":0},{"k":"m","m":0,"s":{"r":"Nil","p":["int $offset","Int:D $value where { ... }","Endian $endian = Endian::NativeEndian","*%_"]},"n":"write-uint64"},{"m":0,"k":"m","n":"write-uint128","s":{"p":["int $offset","Int:D $value where { ... }","Endian $endian = Endian::NativeEndian","*%_"],"r":"Nil"}},{"s":{"p":["int $offset","num32 $value","Endian $endian = Endian::NativeEndian","*%_"],"r":"Nil"},"n":"write-num32","k":"m","m":0},{"m":0,"k":"m","s":{"r":"Nil","p":["int $offset","num64 $value","Endian $endian = Endian::NativeEndian","*%_"]},"n":"write-num64"},{"k":"m","m":0,"s":{"p":["int $pos","Int:D $bits","Int:D \\value","*%_"],"r":"Nil"},"n":"write-bits"},{"n":"write-ubits","s":{"r":"Nil","p":["int $pos","Int:D $bits","Int:D \\value where { ... }","*%_"]},"m":0,"k":"m"},{"s":{"r":"Mu","p":["Int:D $elements","*%_"]},"n":"reallocate","k":"m","m":0},{"k":"m","m":0,"s":{"r":"Mu","p":["$from = 0","$elems = { ... }","*%_"]},"n":"subbuf-rw"},{"k":"m","m":0,"s":{"r":"Mu","p":["@values","$action","*%_"]},"n":"!pend"},{"s":{"p":["\\offset","\\size","*%_"],"r":"Mu"},"n":"!remove","k":"m","m":0},{"n":"!splice-native","s":{"r":"Mu","p":["Int:D $offset","$size","\\x","*%_"]},"k":"m","m":0}],"t":"Buf","n":"Buf"},{"k":"v","n":"&acos","t":"Sub+{is-pure}"},{"k":"s","m":1,"n":"acos","s":{"r":"Mu","p":["Numeric \\x"]}},{"n":"acos","s":{"p":["Cool \\x"],"r":"Mu"},"m":1,"k":"s"},{"k":"s","m":1,"s":{"r":"num","p":["num $x"]},"n":"acos"},{"t":"Sub","n":"&infix:<!~~>","k":"v"},{"m":1,"k":"s","s":{"p":["Mu \\topic","Mu \\matcher"],"r":"Mu"},"n":"infix:<!~~>"},{"b":"A","a":[{"n":"$!past","t":"Mu","k":"v"},{"t":"Mu","n":"$!quasi_context","k":"v"},{"k":"v","n":"$!Str","t":"Mu"}],"k":"c","m":[{"k":"s","m":0,"n":"BUILD","s":{"r":"Nil","p":[":$past","*%_"]}},{"s":{"p":["$quasi_context","@unquote_asts","*%_"],"r":"Mu"},"n":"incarnate","m":0,"k":"m"},{"s":{"p":["@unquote_asts","*%_"],"r":"Mu"},"n":"evaluate_unquotes","k":"m","m":0},{"m":0,"k":"m","n":"is_quasi_ast","s":{"r":"Mu","p":["*%_"]}},{"m":0,"k":"m","n":"Str","s":{"p":["*%_"],"r":"Mu"}},{"m":0,"k":"s","s":{"p":["@auto","%init","*%_"],"r":"Mu"},"n":"BUILDALL"}],"d":"TITLE\nclass AST\n\nSUBTITLE\nAbstract representation of a piece of source code\n\n    class AST { }\n\nAn AST or Abstract Syntax Tree is a partially processed representation of a\nprogram. ASTs are return values of the quasi quoting construct, and are\ntypically used within macros to generate code that is inserted in the\ncalling location of the macro.\n\nThere is no API defined for ASTs yet. Hopefully that will emerge as part of\nthe work on macros.","n":"AST","t":"AST"},{"k":"v","t":"Sub+{is-pure}+{Precedence}","n":"&prefix:<!>"},{"m":1,"k":"s","n":"prefix:<!>","s":{"r":"Mu","p":["Bool \\a"]}},{"k":"s","m":1,"s":{"p":["Mu \\a"],"r":"Mu"},"n":"prefix:<!>"},{"n":"prefix:<!>","s":{"p":["Mu \\a",":$exists!"],"r":"Mu"},"m":1,"k":"s"},{"k":"v","n":"&slurp","t":"Sub"},{"s":{"p":["IO::Handle:D $fh = { ... }","|c is raw"],"r":"Mu"},"n":"slurp","k":"s","m":1},{"s":{"r":"Mu","p":["$path","|c is raw"]},"n":"slurp","m":1,"k":"s"},{"k":"e","t":"Signal","n":"SIGABRT"},{"n":"&run","t":"Sub","k":"v"},{"m":1,"k":"s","n":"run","s":{"r":"Mu","p":["*@args where { ... }",":$in = \"-\"",":$out = \"-\"",":$err = \"-\"","Bool :$bin","Bool :$chomp = Bool::True","Bool :$merge","Str :$enc","Str:D :$nl = \"\\n\"",":$cwd = { ... }",":$env"]}},{"b":"C","m":[{"n":"Capture","s":{"p":["*%_"],"r":"Mu"},"k":"m","m":0},{"n":"Num","s":{"r":"Mu","p":["*%_"]},"k":"m","m":0},{"n":"Bridge","s":{"r":"Mu","p":["*%_"]},"k":"m","m":0},{"k":"m","m":0,"s":{"r":"Mu","p":["*%_"]},"n":"Range"},{"s":{"p":["*%_"],"r":"Mu"},"n":"Int","k":"m","m":0},{"n":"Rat","s":{"r":"Mu","p":["Real $epsilon = 1e-06",":$fat","*%_"]},"m":0,"k":"m"},{"s":{"r":"Mu","p":["Real $epsilon = 1e-06","*%_"]},"n":"FatRat","m":0,"k":"m"},{"m":0,"k":"m","n":"succ","s":{"r":"Mu","p":["*%_"]}},{"s":{"p":["*%_"],"r":"Mu"},"n":"pred","m":0,"k":"m"},{"m":0,"k":"m","n":"isNaN","s":{"r":"Mu","p":["*%_"]}},{"n":"abs","s":{"r":"Mu","p":["*%_"]},"m":0,"k":"m"},{"s":{"r":"Mu","p":["*%_"]},"n":"log","m":1,"k":"m"},{"n":"log","s":{"p":["Num \\base","*%_"],"r":"Mu"},"k":"m","m":1},{"s":{"r":"Mu","p":["*%_"]},"n":"log","k":"m","m":1},{"m":1,"k":"m","n":"log","s":{"p":["Real $base","*%_"],"r":"Mu"}},{"m":1,"k":"m","n":"log","s":{"r":"Mu","p":["Cool $base","*%_"]}},{"s":{"p":["Numeric $base","*%_"],"r":"Mu"},"n":"log","m":1,"k":"m"},{"s":{"p":["*%_"],"r":"Mu"},"n":"sqrt","k":"m","m":1},{"k":"m","m":0,"s":{"r":"Mu","p":["*%_"]},"n":"rand"},{"n":"ceiling","s":{"r":"Mu","p":["*%_"]},"k":"m","m":0},{"n":"floor","s":{"r":"Mu","p":["*%_"]},"k":"m","m":0},{"s":{"r":"Mu","p":["*%_"]},"n":"sin","k":"m","m":1},{"n":"asin","s":{"p":["*%_"],"r":"Mu"},"m":1,"k":"m"},{"n":"cos","s":{"r":"Mu","p":["*%_"]},"k":"m","m":1},{"s":{"p":["*%_"],"r":"Mu"},"n":"acos","m":1,"k":"m"},{"s":{"r":"Mu","p":["*%_"]},"n":"tan","k":"m","m":1},{"m":1,"k":"m","n":"atan","s":{"r":"Mu","p":["*%_"]}},{"m":1,"k":"m","n":"sec","s":{"p":["*%_"],"r":"Mu"}},{"k":"m","m":1,"s":{"p":["*%_"],"r":"Mu"},"n":"asec"},{"s":{"r":"Mu","p":["*%_"]},"n":"cosec","m":0,"k":"m"},{"m":0,"k":"m","s":{"r":"Mu","p":["*%_"]},"n":"acosec"},{"s":{"r":"Mu","p":["*%_"]},"n":"cotan","k":"m","m":0},{"m":0,"k":"m","n":"acotan","s":{"r":"Mu","p":["*%_"]}},{"s":{"p":["*%_"],"r":"Mu"},"n":"sinh","m":1,"k":"m"},{"m":1,"k":"m","n":"asinh","s":{"r":"Mu","p":["*%_"]}},{"k":"m","m":1,"n":"cosh","s":{"r":"Mu","p":["*%_"]}},{"m":1,"k":"m","n":"acosh","s":{"r":"Mu","p":["*%_"]}},{"n":"tanh","s":{"p":["*%_"],"r":"Mu"},"k":"m","m":1},{"m":1,"k":"m","n":"atanh","s":{"p":["*%_"],"r":"Mu"}},{"s":{"r":"Mu","p":["*%_"]},"n":"atanh","k":"m","m":1},{"s":{"r":"Mu","p":["*%_"]},"n":"sech","k":"m","m":1},{"s":{"r":"Mu","p":["*%_"]},"n":"asech","k":"m","m":1},{"s":{"p":["*%_"],"r":"Mu"},"n":"cosech","k":"m","m":1},{"k":"m","m":1,"s":{"p":["*%_"],"r":"Mu"},"n":"acosech"},{"s":{"r":"Mu","p":["*%_"]},"n":"cotanh","k":"m","m":1},{"s":{"p":["*%_"],"r":"Mu"},"n":"acotanh","k":"m","m":1},{"m":0,"k":"m","n":"is-prime","s":{"p":["*%_"],"r":"Bool:D"}},{"m":0,"k":"m","n":"narrow","s":{"r":"Mu","p":["*%_"]}},{"n":"sign","s":{"r":"Mu","p":["*%_"]},"m":0,"k":"m"},{"s":{"p":["*%_"],"r":"Mu"},"n":"conj","k":"m","m":0},{"s":{"p":["Num:D $x = 1e0","*%_"],"r":"Mu"},"n":"atan2","m":1,"k":"m"},{"k":"m","m":1,"n":"atan2","s":{"p":["Real $x = 1e0","*%_"],"r":"Mu"}},{"n":"atan2","s":{"p":["Cool $x = 1e0","*%_"],"r":"Mu"},"m":1,"k":"m"},{"m":1,"k":"m","s":{"r":"Mu","p":["*%_"]},"n":"round"},{"s":{"p":["$scale","*%_"],"r":"Mu"},"n":"round","k":"m","m":1},{"s":{"r":"Mu","p":["Real $angle","*%_"]},"n":"unpolar","m":0,"k":"m"},{"m":0,"k":"m","s":{"p":["*%_"],"r":"Mu"},"n":"cis"},{"m":0,"k":"m","s":{"r":"Mu","p":["*%_"]},"n":"Complex"},{"k":"m","m":1,"s":{"r":"Mu","p":["*%_"]},"n":"exp"},{"k":"m","m":1,"n":"exp","s":{"p":["*%_"],"r":"Mu"}},{"k":"m","m":1,"s":{"r":"Mu","p":["$base","*%_"]},"n":"exp"},{"s":{"p":["*%_"],"r":"Mu"},"n":"truncate","m":0,"k":"m"},{"k":"m","m":0,"s":{"p":["+@mods","*%_"],"r":"Mu"},"n":"polymod"},{"s":{"p":["Int:D $base","$digits? is copy","*%_"],"r":"Mu"},"n":"base","m":0,"k":"m"},{"s":{"p":["*%_"],"r":"Mu"},"n":"log10","m":0,"k":"m"},{"m":0,"k":"m","n":"roots","s":{"r":"Mu","p":["Cool $n","*%_"]}},{"k":"m","m":1,"n":"WHICH","s":{"r":"ValueObjAt:D","p":["*%_"]}},{"n":"WHICH","s":{"r":"ObjAt:D","p":["*%_"]},"k":"m","m":1},{"m":1,"k":"m","s":{"r":"ValueObjAt:D","p":["*%_"]},"n":"WHICH"},{"s":{"r":"Bool","p":["*%_"]},"n":"Bool","m":1,"k":"m"},{"m":1,"k":"m","s":{"r":"Mu","p":["*%_"]},"n":"Bool"},{"k":"m","m":1,"n":"Bool","s":{"p":["*%_"],"r":"Mu"}},{"s":{"p":["*%_"],"r":"Mu"},"n":"Bool","k":"m","m":1},{"m":1,"k":"m","n":"new","s":{"p":["*%attrinit"],"r":"Mu"}},{"s":{"r":"Mu","p":["$","*@","*%_"]},"n":"new","k":"m","m":1},{"s":{"p":["*%_"],"r":"Mu"},"n":"new","k":"m","m":1},{"k":"m","m":1,"n":"new","s":{"r":"Mu","p":["$n","*%_"]}},{"s":{"p":["*%_"],"r":"Mu"},"n":"perl","m":1,"k":"m"},{"s":{"p":["*%_"],"r":"Mu"},"n":"perl","m":1,"k":"m"},{"k":"m","m":1,"n":"perl","s":{"r":"Mu","p":["*%_"]}},{"k":"m","m":1,"s":{"r":"Mu","p":["*%_"]},"n":"Str"},{"k":"m","m":1,"n":"Str","s":{"p":["*%_"],"r":"Mu"}},{"k":"m","m":1,"n":"Str","s":{"p":["*%_"],"r":"Mu"}},{"k":"m","m":1,"n":"Str","s":{"p":["*%_"],"r":"Mu"}},{"s":{"p":["*%_"],"r":"Mu"},"n":"Real","k":"m","m":1},{"n":"Real","s":{"p":["*%_"],"r":"Mu"},"k":"m","m":1},{"m":1,"k":"m","n":"Real","s":{"p":["*%_"],"r":"Mu"}},{"k":"m","m":1,"s":{"r":"Mu","p":["*%_"]},"n":"Real"},{"k":"m","m":1,"n":"Numeric","s":{"r":"Mu","p":["*%_"]}},{"s":{"p":["*%_"],"r":"Mu"},"n":"Numeric","m":1,"k":"m"},{"n":"Numeric","s":{"r":"Mu","p":["*%_"]},"k":"m","m":1},{"n":"ACCEPTS","s":{"r":"Mu","p":["\\topic","*%_"]},"k":"m","m":1},{"k":"m","m":1,"n":"ACCEPTS","s":{"r":"Mu","p":["Mu:U \\topic","*%_"]}},{"n":"ACCEPTS","s":{"p":["Mu:D \\a","*%_"],"r":"Mu"},"k":"m","m":1},{"k":"m","m":1,"s":{"p":["Mu:U $","*%_"],"r":"Bool"},"n":"ACCEPTS"},{"n":"ACCEPTS","s":{"p":["\\topic","*%_"],"r":"Bool:D"},"k":"m","m":1},{"n":"ACCEPTS","s":{"r":"Mu","p":["Any:D \\a","*%_"]},"k":"m","m":1},{"k":"m","m":1,"n":"gist","s":{"r":"Mu","p":["*%_"]}},{"n":"gist","s":{"p":["*%_"],"r":"Mu"},"m":1,"k":"m"},{"n":"gist","s":{"p":["*%_"],"r":"Mu"},"m":1,"k":"m"},{"k":"m","m":1,"s":{"p":["*%_"],"r":"Mu"},"n":"DUMP"},{"n":"DUMP","s":{"r":"Mu","p":[":$indent-step = 4",":%ctx","*%_"]},"m":1,"k":"m"},{"k":"m","m":1,"s":{"r":"Mu","p":["*%_"]},"n":"DUMP"},{"n":"BUILDALL","s":{"r":"Mu","p":["@auto","%init","*%_"]},"k":"s","m":0}],"k":"c","d":"TITLE\nclass Num\n\nSUBTITLE\nFloating-point number\n\n    class Num is Cool does Real { }\n\nA Num object stores a floating-point number. It is immutable. On most\nplatforms, it's an IEEE 754 64-bit floating point numbers, aka \"double\nprecision\".\n\n \n\n  Inf\n\nThe value Inf is an instance of Num and represents value that's too large\nto represent in 64-bit double-precision floating point number (roughly,\nabove 1.7976931348623158e308 for positive Inf and below\n-1.7976931348623157e308 for negative Inf) as well as returned from certain\noperations as defined by the IEEE 754-2008 standard.\n\n    say 2e300 ** 2e300; # OUTPUT: «Inf␤»\n    say (-1/0).Num;     # OUTPUT: «-Inf␤»\n\nThe ∞ U+221E Unicode character can be used instead of the word Inf and can\nbe handy when Inf would otherwise require an unspace, such as when writing\nComplex numbers:\n\n    say Inf+Inf\\i; # Backslash (unspace) before `i` required\n    say ∞+∞i;      # No backslash is needed\n\nNote that there are just two infinities (positive and negative), so even if\nan operation that would instinctively give a \"larger\" infinity is\nperformed, the result in still an infinity of the original magnitude. The\ninfinities can be compared, operated and used as an argument as if they\nwere simply a number that's too big to represent or to signify \"without\nbounds\" or limits:\n\n    say ∞²;                       # OUTPUT: «Inf␤»\n    say 42 + Inf === ∞;           # OUTPUT: «True␤»\n    say atan ∞;                   # OUTPUT: «1.5707963267949␤»\n    say -∞ < 42 < ∞;              # OUTPUT: «True␤»\n    my  $l := 1, 2, 4, 8 ... Inf; # Infinite sequence (no limits)\n\nIn some cases, it's used as an implicit value to represent \"all of them\"\n\n    say \"House of M\".comb(3,Inf).join(\"←X→\");\n    # OUTPUT: «Hou←X→se ←X→of ←X→M␤»\n\nIn the example above, Inf can be eliminated, since it's the default value\nfor the second argument of .comb, used to indicate how many parts should be\nreturned.\n\nDivision of an infinity by another infinity results in a NaN:\n\n    say ∞/∞;             # OUTPUT: «NaN␤»\n\n  NaN\n\nThe value NaN is an instance of Num and represents a floating point\nnot-a-number value, which is returned from some routines where a concrete\nnumber as the answer is not defined, but a Numeric value is still\nacceptable. NaN is defined and boolifies to True, but is not numerically\nequal to any value (including itself).\n\n    say cos ∞;     # OUTPUT: «NaN␤»\n    say (0/0).Num; # OUTPUT: «NaN␤»\n\nTo test for NaN, use isNaN method or === operator:\n\n    say (0/0).isNaN;       # OUTPUT: «True␤»\n    say (0/0).Num === NaN; # OUTPUT: «True␤»\n\n  method rand\n\n    method rand(Num:D: --> Num)\n\nReturns a pseudo random number between 0 and the invocant.\n\n  sub srand\n\n    sub srand(Int $seed --> Int:D)\n\nSeeds the pseudo random number generator used by Num.rand with the provided\nvalue. Note that srand is called with a platform dependent value when a\nRaku program is started.\n\n  method Capture\n\nDefined as:\n\n    method Capture()\n\nThrows X::Cannot::Capture.\n\n  Int\n\n    method Int(Num:D:)\n\nConverts the number to an Int. Fails with X::Numeric::CannotConvert if the\ninvocant is a NaN or Inf/-Inf. No rounding is performed.\n\n  Rat\n\n    method Rat(Num:D: Real $epsilon = 1e-6)\n\nConverts the number to a Rat with $epsilon precision. If the invocant is a\nInf, -Inf, or a NaN, converts them to a Rat with 0 denominator and 1, -1,\nor 0 numerator, respectively.\n\n  FatRat\n\n    method FatRat(Num:D: Real $epsilon = 1e-6)\n\nConverts the number to a FatRat with the precision $epsilon. If invocant is\na Inf, -Inf, or a NaN, converts them to a FatRat with 0 denominator and 1,\n-1, or 0 numerator, respectively.","n":"Num","t":"Num"},{"n":"&circumfix:<{ }>","t":"Sub","k":"v"},{"n":"circumfix:<{ }>","s":{"r":"Mu","p":["*@elems"]},"m":1,"k":"s"},{"n":"&infix:«~>»","t":"Sub","k":"v"},{"n":"infix:«~>»","s":{"p":["Str:D \\a","Int:D \\b"],"r":"Mu"},"k":"s","m":1},{"k":"s","m":1,"s":{"p":["str $a","int $b"],"r":"Mu"},"n":"infix:«~>»"},{"n":"SIGSYS","t":"Signal","k":"e"},{"n":"&infix:<?|>","t":"Sub+{is-pure}+{Precedence}","k":"v"},{"k":"s","m":1,"s":{"r":"Mu","p":["Mu $x = Bool::False"]},"n":"infix:<?|>"},{"s":{"r":"Mu","p":["Mu \\a","Mu \\b"]},"n":"infix:<?|>","k":"s","m":1},{"n":"&infix:<∌>","t":"Sub+{is-pure}+{Precedence}","k":"v"},{"k":"s","m":1,"n":"infix:<∌>","s":{"r":"Bool:D","p":["\\a","\\b"]}},{"t":"Sub","n":"&roundrobin","k":"v"},{"n":"roundrobin","s":{"r":"Seq:D","p":["+\\lol is raw"]},"m":1,"k":"s"},{"n":"&prefix:<+>","t":"Sub+{is-pure}+{Precedence}","k":"v"},{"k":"s","m":1,"n":"prefix:<+>","s":{"r":"Mu","p":["\\a"]}},{"a":[{"n":"$.tai","t":"Rat","k":"v"}],"b":"C","m":[{"k":"m","m":0,"s":{"r":"Mu","p":["\\tai","*%_"]},"n":"SET-SELF"},{"m":0,"k":"m","n":"new","s":{"p":["*@","*%_"],"r":"Mu"}},{"m":1,"k":"m","n":"from-posix","s":{"r":"Instant:D","p":["$posix","*%_"]}},{"m":1,"k":"m","n":"from-posix","s":{"p":["$posix","Bool $prefer-leap-second","*%_"],"r":"Instant:D"}},{"m":0,"k":"m","s":{"p":["*%_"],"r":"List:D"},"n":"to-posix"},{"s":{"r":"Mu","p":["*%_"]},"n":"Bridge","k":"m","m":0},{"k":"m","m":0,"n":"Num","s":{"p":["*%_"],"r":"Num:D"}},{"s":{"p":["*%_"],"r":"Rat:D"},"n":"Rat","k":"m","m":0},{"n":"Int","s":{"r":"Int:D","p":["*%_"]},"k":"m","m":0},{"s":{"p":["*%_"],"r":"Mu"},"n":"narrow","k":"m","m":0},{"s":{"r":"Date:D","p":["*%_"]},"n":"Date","m":0,"k":"m"},{"k":"m","m":0,"s":{"p":["*%_"],"r":"DateTime:D"},"n":"DateTime"},{"k":"m","m":0,"s":{"p":["*%_"],"r":"Instant"},"n":"Instant"},{"m":0,"k":"m","s":{"p":["*%_"],"r":"Mu"},"n":"abs"},{"n":"sign","s":{"p":["*%_"],"r":"Mu"},"m":0,"k":"m"},{"n":"conj","s":{"r":"Mu","p":["*%_"]},"k":"m","m":0},{"m":0,"k":"m","s":{"p":["*%_"],"r":"Mu"},"n":"sqrt"},{"m":0,"k":"m","n":"rand","s":{"r":"Mu","p":["*%_"]}},{"k":"m","m":0,"s":{"r":"Mu","p":["*%_"]},"n":"sin"},{"s":{"r":"Mu","p":["*%_"]},"n":"asin","m":0,"k":"m"},{"m":0,"k":"m","s":{"p":["*%_"],"r":"Mu"},"n":"cos"},{"k":"m","m":0,"n":"acos","s":{"r":"Mu","p":["*%_"]}},{"s":{"p":["*%_"],"r":"Mu"},"n":"tan","k":"m","m":0},{"m":0,"k":"m","n":"atan","s":{"p":["*%_"],"r":"Mu"}},{"n":"atan2","s":{"r":"Mu","p":["Real $x = 1e0","*%_"]},"m":1,"k":"m"},{"k":"m","m":1,"n":"atan2","s":{"p":["Cool $x = 1e0","*%_"],"r":"Mu"}},{"s":{"p":["*%_"],"r":"Mu"},"n":"sec","m":0,"k":"m"},{"m":0,"k":"m","s":{"p":["*%_"],"r":"Mu"},"n":"asec"},{"s":{"r":"Mu","p":["*%_"]},"n":"cosec","k":"m","m":0},{"k":"m","m":0,"s":{"r":"Mu","p":["*%_"]},"n":"acosec"},{"k":"m","m":0,"n":"cotan","s":{"p":["*%_"],"r":"Mu"}},{"k":"m","m":0,"n":"acotan","s":{"r":"Mu","p":["*%_"]}},{"m":0,"k":"m","s":{"r":"Mu","p":["*%_"]},"n":"sinh"},{"n":"asinh","s":{"r":"Mu","p":["*%_"]},"k":"m","m":0},{"k":"m","m":0,"n":"cosh","s":{"p":["*%_"],"r":"Mu"}},{"k":"m","m":0,"s":{"p":["*%_"],"r":"Mu"},"n":"acosh"},{"m":0,"k":"m","n":"tanh","s":{"p":["*%_"],"r":"Mu"}},{"n":"atanh","s":{"p":["*%_"],"r":"Mu"},"m":0,"k":"m"},{"s":{"p":["*%_"],"r":"Mu"},"n":"sech","m":0,"k":"m"},{"m":0,"k":"m","n":"asech","s":{"p":["*%_"],"r":"Mu"}},{"m":0,"k":"m","n":"cosech","s":{"r":"Mu","p":["*%_"]}},{"m":0,"k":"m","n":"acosech","s":{"p":["*%_"],"r":"Mu"}},{"n":"cotanh","s":{"r":"Mu","p":["*%_"]},"m":0,"k":"m"},{"n":"acotanh","s":{"p":["*%_"],"r":"Mu"},"m":0,"k":"m"},{"k":"m","m":0,"n":"floor","s":{"r":"Mu","p":["*%_"]}},{"k":"m","m":0,"n":"ceiling","s":{"p":["*%_"],"r":"Mu"}},{"n":"round","s":{"r":"Mu","p":["*%_"]},"m":1,"k":"m"},{"m":1,"k":"m","n":"round","s":{"p":["$scale","*%_"],"r":"Mu"}},{"k":"m","m":0,"n":"unpolar","s":{"p":["Real $angle","*%_"],"r":"Mu"}},{"m":0,"k":"m","n":"cis","s":{"r":"Mu","p":["*%_"]}},{"k":"m","m":0,"s":{"p":["*%_"],"r":"Mu"},"n":"Complex"},{"k":"m","m":1,"n":"log","s":{"r":"Mu","p":["*%_"]}},{"k":"m","m":1,"s":{"r":"Mu","p":["Real $base","*%_"]},"n":"log"},{"k":"m","m":1,"n":"log","s":{"p":["Cool $base","*%_"],"r":"Mu"}},{"k":"m","m":1,"s":{"p":["Numeric $base","*%_"],"r":"Mu"},"n":"log"},{"k":"m","m":1,"n":"exp","s":{"r":"Mu","p":["*%_"]}},{"s":{"r":"Mu","p":["$base","*%_"]},"n":"exp","m":1,"k":"m"},{"s":{"p":["*%_"],"r":"Mu"},"n":"truncate","k":"m","m":0},{"k":"m","m":0,"n":"isNaN","s":{"p":["*%_"],"r":"Mu"}},{"m":0,"k":"m","n":"polymod","s":{"p":["+@mods","*%_"],"r":"Mu"}},{"m":0,"k":"m","n":"base","s":{"p":["Int:D $base","$digits? is copy","*%_"],"r":"Mu"}},{"k":"m","m":0,"n":"log10","s":{"r":"Mu","p":["*%_"]}},{"n":"roots","s":{"r":"Mu","p":["Cool $n","*%_"]},"m":0,"k":"m"},{"k":"m","m":0,"n":"FatRat","s":{"r":"Mu","p":["*%_"]}},{"k":"m","m":0,"n":"succ","s":{"p":["*%_"],"r":"Mu"}},{"m":0,"k":"m","n":"pred","s":{"p":["*%_"],"r":"Mu"}},{"k":"m","m":1,"s":{"r":"Mu","p":["*%_"]},"n":"Str"},{"n":"Str","s":{"r":"Mu","p":["*%_"]},"m":1,"k":"m"},{"n":"Str","s":{"p":["*%_"],"r":"Str:D"},"k":"m","m":1},{"s":{"r":"Mu","p":["*%_"]},"n":"Str","m":1,"k":"m"},{"s":{"r":"Mu","p":["*%_"]},"n":"perl","k":"m","m":1},{"k":"m","m":1,"s":{"r":"Mu","p":["*%_"]},"n":"perl"},{"s":{"r":"Str:D","p":["*%_"]},"n":"perl","m":1,"k":"m"},{"m":1,"k":"m","n":"Real","s":{"r":"Mu","p":["*%_"]}},{"k":"m","m":1,"n":"Real","s":{"r":"Mu","p":["*%_"]}},{"k":"m","m":1,"n":"Real","s":{"p":["*%_"],"r":"Mu"}},{"s":{"p":["*%_"],"r":"Mu"},"n":"Real","m":1,"k":"m"},{"n":"Numeric","s":{"r":"Mu","p":["*%_"]},"k":"m","m":1},{"m":1,"k":"m","s":{"p":["*%_"],"r":"Mu"},"n":"Numeric"},{"n":"Numeric","s":{"p":["*%_"],"r":"Mu"},"m":1,"k":"m"},{"m":1,"k":"m","n":"ACCEPTS","s":{"p":["\\topic","*%_"],"r":"Mu"}},{"n":"ACCEPTS","s":{"p":["Mu:U \\topic","*%_"],"r":"Mu"},"m":1,"k":"m"},{"k":"m","m":1,"n":"ACCEPTS","s":{"r":"Mu","p":["Mu:D \\a","*%_"]}},{"k":"m","m":1,"n":"ACCEPTS","s":{"p":["Mu:U $","*%_"],"r":"Bool"}},{"s":{"r":"Bool:D","p":["\\topic","*%_"]},"n":"ACCEPTS","k":"m","m":1},{"k":"m","m":1,"n":"ACCEPTS","s":{"p":["Any:D \\a","*%_"],"r":"Mu"}},{"m":1,"k":"m","n":"Bool","s":{"r":"Bool","p":["*%_"]}},{"s":{"p":["*%_"],"r":"Mu"},"n":"Bool","k":"m","m":1},{"s":{"r":"Mu","p":["*%_"]},"n":"Bool","m":1,"k":"m"},{"n":"gist","s":{"p":["*%_"],"r":"Mu"},"m":1,"k":"m"},{"k":"m","m":1,"n":"gist","s":{"p":["*%_"],"r":"Mu"}},{"m":1,"k":"m","s":{"p":["*%_"],"r":"Mu"},"n":"gist"},{"k":"m","m":1,"s":{"p":["*%_"],"r":"Mu"},"n":"DUMP"},{"s":{"r":"Mu","p":[":$indent-step = 4",":%ctx","*%_"]},"n":"DUMP","k":"m","m":1},{"k":"m","m":1,"n":"DUMP","s":{"r":"Mu","p":["*%_"]}},{"k":"m","m":0,"n":"tai","s":{"p":["*%_"],"r":"Mu"}},{"n":"BUILDALL","s":{"r":"Mu","p":["@auto","%init","*%_"]},"m":0,"k":"s"}],"k":"c","d":"TITLE\nclass Instant\n\nSUBTITLE\nSpecific moment in time\n\n    class Instant is Cool does Real { }\n\nAn Instant is a particular moment in time measured in atomic seconds, with\nfractions. It is not tied to or aware of any epoch.\n\nAn Instant can be used to create a DateTime object set to that Instant. The\npseudo-constant now returns the current time as an Instant.\n\nBasic math is defined for Instants (as well as Durations). Adding an\nInstant to a Duration returns another Instant. Subtracting two Instants\nwill yield a Duration. Adding two Instants is explicitly disallowed. All\nother operations with Instants are undefined.\n\nFuture Leap Seconds\n\nThe methods that involve knowledge of leap seconds always assume that there\nwill be no further leaps after the last leap second that the implementation\nknows about, which may not be the last leap second that has actually been\nscheduled. This means you can get different results, depending on the\ncompiler version you're using. For example, the December 31, 2016 leap\nsecond was announced in July and shipped with Rakudo 2016.07, so 2016.06\nand earlier releases won't know about it:\n\n    $ perl6-2016.06 -e 'say Instant.from-posix: 1485726595'\n    Instant:1485726631\n\n    $ perl6-2016.07 -e 'say Instant.from-posix: 1485726595'\n    Instant:1485726632\n\n\nSince a Rakudo compiler always returns 0 for future leap seconds it doesn't\nknow about, you can patch your old code when new leap seconds are\nannounced, so it will give correct results, regardless of what version of\nthe compiler it runs on:\n\n    $ perl6-2016.06 -e 'say ($*VM.version before v2016.07 ?? 1 !! 0) + Instant.from-posix: 1485726595'\n    Instant:1485726632\n\n    $ perl6-2016.07 -e 'say ($*VM.version before v2016.07 ?? 1 !! 0) + Instant.from-posix: 1485726595'\n    Instant:1485726632\n\n\n","n":"Instant","t":"Instant"},{"n":"SocketType","t":"SocketType","k":"e"},{"k":"e","t":"SocketType","n":"SocketType::SOCK_SEQPACKET"},{"t":"SocketType","n":"SocketType::SOCK_DGRAM","k":"e"},{"n":"SocketType::SOCK_RDM","t":"SocketType","k":"e"},{"n":"SocketType::SOCK_RAW","t":"SocketType","k":"e"},{"t":"SocketType","n":"SocketType::SOCK_MAX","k":"e"},{"n":"SocketType::SOCK_PACKET","t":"SocketType","k":"e"},{"n":"SocketType::SOCK_STREAM","t":"SocketType","k":"e"},{"k":"v","t":"Sub+{is-pure}","n":"&acosech"},{"n":"acosech","s":{"p":["Numeric \\x"],"r":"Mu"},"m":1,"k":"s"},{"n":"acosech","s":{"r":"Mu","p":["Cool \\x"]},"k":"s","m":1},{"n":"acosech","s":{"p":["num $x"],"r":"num"},"m":1,"k":"s"},{"k":"e","n":"SIGPIPE","t":"Signal"},{"n":"Kept","t":"PromiseStatus","k":"e"},{"n":"Less","t":"Order","k":"e"},{"k":"e","t":"Signal","n":"SIGILL"},{"k":"e","t":"Signal","n":"SIGINFO"},{"k":"v","t":"Sub","n":"&reverse"},{"n":"reverse","s":{"r":"Mu","p":["@a"]},"k":"s","m":1},{"k":"s","m":1,"s":{"r":"Mu","p":["+@a"]},"n":"reverse"},{"k":"v","n":"&sech","t":"Sub+{is-pure}"},{"n":"sech","s":{"p":["Numeric \\x"],"r":"Mu"},"k":"s","m":1},{"m":1,"k":"s","n":"sech","s":{"p":["Cool \\x"],"r":"Mu"}},{"n":"sech","s":{"r":"num","p":["num $x"]},"m":1,"k":"s"},{"k":"e","n":"SIGTERM","t":"Signal"},{"k":"v","t":"Sub","n":"&univals"},{"n":"univals","s":{"p":["Str:D $str"],"r":"Mu"},"m":1,"k":"s"},{"k":"v","n":"&prefix:<++⚛>","t":"Sub"},{"n":"prefix:<++⚛>","s":{"r":"atomicint","p":["atomicint $target is rw"]},"m":1,"k":"s"},{"k":"e","t":"Signal","n":"Signal"},{"k":"e","t":"Signal","n":"Signal::SIGIO"},{"n":"Signal::SIGTTOU","t":"Signal","k":"e"},{"k":"e","t":"Signal","n":"Signal::SIGALRM"},{"t":"Signal","n":"Signal::SIGTTIN","k":"e"},{"k":"e","n":"Signal::SIGINT","t":"Signal"},{"n":"Signal::SIGPWR","t":"Signal","k":"e"},{"k":"e","t":"Signal","n":"Signal::SIGCONT"},{"n":"Signal::SIGUSR2","t":"Signal","k":"e"},{"k":"e","t":"Signal","n":"Signal::SIGURG"},{"k":"e","n":"Signal::SIGSEGV","t":"Signal"},{"n":"Signal::SIGBREAK","t":"Signal","k":"e"},{"k":"e","n":"Signal::SIGBUS","t":"Signal"},{"k":"e","t":"Signal","n":"Signal::SIGHUP"},{"k":"e","n":"Signal::SIGTSTP","t":"Signal"},{"t":"Signal","n":"Signal::SIGSTOP","k":"e"},{"k":"e","t":"Signal","n":"Signal::SIGCHLD"},{"k":"e","n":"Signal::SIGXFSZ","t":"Signal"},{"k":"e","n":"Signal::SIGTRAP","t":"Signal"},{"k":"e","t":"Signal","n":"Signal::SIGFPE"},{"n":"Signal::SIGWINCH","t":"Signal","k":"e"},{"k":"e","n":"Signal::SIGXCPU","t":"Signal"},{"n":"Signal::SIGVTALRM","t":"Signal","k":"e"},{"k":"e","n":"Signal::SIGSTKFLT","t":"Signal"},{"k":"e","t":"Signal","n":"Signal::SIGTHR"},{"n":"Signal::SIGUSR1","t":"Signal","k":"e"},{"k":"e","n":"Signal::SIGPROF","t":"Signal"},{"n":"Signal::SIGTERM","t":"Signal","k":"e"},{"n":"Signal::SIGSYS","t":"Signal","k":"e"},{"t":"Signal","n":"Signal::SIGQUIT","k":"e"},{"t":"Signal","n":"Signal::SIGPIPE","k":"e"},{"k":"e","t":"Signal","n":"Signal::SIGKILL"},{"k":"e","t":"Signal","n":"Signal::SIGINFO"},{"k":"e","t":"Signal","n":"Signal::SIGILL"},{"k":"e","n":"Signal::SIGABRT","t":"Signal"},{"n":"Signal::SIGEMT","t":"Signal","k":"e"},{"d":"TITLE\nclass Proxy\n\nSUBTITLE\nItem container with custom storage and retrieval\n\n    class Proxy {}\n\nA Proxy is an object that allows you to set a hook that executes whenever a\nvalue is retrieved from a container (FETCH) or when it is set (STORE).\nPlease note that Proxy can introduce mutability at places where it would\nbreak behavior, e.g. in Hash keys.\n\nTo create a container that returns twice what was stored in it, you do\nsomething like this:\n\n    sub double() is rw {\n        my $storage = 0;\n        Proxy.new(\n            FETCH => method ()     { $storage * 2    },\n            STORE => method ($new) { $storage = $new },\n        )\n     }\n     my $doubled := double();\n     $doubled = 4;\n     say $doubled;       # OUTPUT: «8␤»\n\n","k":"c","b":"A","t":"Proxy","n":"Proxy"},{"k":"v","n":"&infix:<+&>","t":"Sub+{is-pure}+{Precedence}"},{"m":1,"k":"s","s":{"r":"Mu","p":[]},"n":"infix:<+&>"},{"k":"s","m":1,"n":"infix:<+&>","s":{"p":["$x"],"r":"Mu"}},{"k":"s","m":1,"s":{"p":["$x","$y"],"r":"Mu"},"n":"infix:<+&>"},{"m":1,"k":"s","n":"infix:<+&>","s":{"r":"Int:D","p":["Int:D \\a","Int:D \\b"]}},{"n":"infix:<+&>","s":{"r":"int","p":["int $a","int $b"]},"k":"s","m":1},{"k":"e","n":"SOCK_SEQPACKET","t":"SocketType"},{"n":"X::PhaserExceptions","t":"X::PhaserExceptions","m":[{"n":"message","s":{"r":"Mu","p":["*%_"]},"k":"m","m":0},{"m":1,"k":"m","s":{"p":["*%_"],"r":"Mu"},"n":"gist"},{"s":{"p":["*%_"],"r":"Mu"},"n":"gist","k":"m","m":1},{"m":1,"k":"m","s":{"p":["*%_"],"r":"Mu"},"n":"gist"},{"k":"m","m":1,"n":"gist","s":{"r":"Mu","p":["*%_"]}},{"s":{"r":"Mu","p":["*%_"]},"n":"exceptions","m":0,"k":"m"},{"m":0,"k":"s","s":{"p":["@auto","%init","*%_"],"r":"Mu"},"n":"BUILDALL"},{"n":"resume","s":{"r":"Bool","p":["*%_"]},"k":"m","m":0},{"m":0,"k":"m","n":"reset-backtrace","s":{"p":["*%_"],"r":"Mu"}},{"n":"is-compile-time","s":{"r":"Bool","p":["*%_"]},"m":0,"k":"m"},{"n":"throw","s":{"p":["$bt?","*%_"],"r":"Mu"},"k":"m","m":0},{"k":"m","m":0,"s":{"r":"Mu","p":["*%_"]},"n":"fail"},{"k":"m","m":1,"s":{"p":["*%_"],"r":"Mu"},"n":"Str"},{"k":"m","m":1,"s":{"p":["*%_"],"r":"Mu"},"n":"Str"},{"n":"Str","s":{"p":["*%_"],"r":"Mu"},"m":1,"k":"m"},{"m":0,"k":"m","n":"die","s":{"r":"Mu","p":["*%_"]}},{"k":"m","m":0,"n":"rethrow","s":{"r":"Mu","p":["*%_"]}},{"m":0,"k":"m","s":{"p":["*%_"],"r":"Mu"},"n":"backtrace"},{"k":"m","m":1,"s":{"p":["*%_"],"r":"Mu"},"n":"gist"},{"n":"gist","s":{"p":["*%_"],"r":"Mu"},"m":1,"k":"m"},{"n":"gist","s":{"p":["*%_"],"r":"Mu"},"k":"m","m":1},{"m":0,"k":"m","s":{"r":"Mu","p":["*%_"]},"n":"vault-backtrace"},{"n":"BUILDALL","s":{"r":"Mu","p":["@auto","%init","*%_"]},"k":"s","m":0}],"k":"c","a":[{"k":"v","t":"Positional","n":"@.exceptions"},{"n":"$!ex","t":"Mu","k":"v"},{"k":"v","n":"$!bt","t":"Mu"}],"b":"A"},{"d":"TITLE\nclass X::StubCode\n\nSUBTITLE\nRuntime error due to execution of stub code\n\n    class X::StubCode is Exception { }\n\nThrown when a piece of stub code (created via !!! or ...) is executed.\n\n","b":"A","a":[{"n":"$.message","t":"Mu","k":"v"},{"k":"v","n":"$!ex","t":"Mu"},{"k":"v","n":"$!bt","t":"Mu"}],"m":[{"k":"m","m":0,"s":{"p":["*%_"],"r":"Mu"},"n":"message"},{"s":{"p":["@auto","%init","*%_"],"r":"Mu"},"n":"BUILDALL","m":0,"k":"s"},{"k":"m","m":0,"s":{"r":"Bool","p":["*%_"]},"n":"resume"},{"m":0,"k":"m","n":"reset-backtrace","s":{"p":["*%_"],"r":"Mu"}},{"n":"is-compile-time","s":{"p":["*%_"],"r":"Bool"},"k":"m","m":0},{"s":{"p":["$bt?","*%_"],"r":"Mu"},"n":"throw","m":0,"k":"m"},{"m":0,"k":"m","n":"fail","s":{"p":["*%_"],"r":"Mu"}},{"k":"m","m":1,"s":{"p":["*%_"],"r":"Mu"},"n":"Str"},{"s":{"r":"Mu","p":["*%_"]},"n":"Str","m":1,"k":"m"},{"s":{"p":["*%_"],"r":"Mu"},"n":"Str","k":"m","m":1},{"s":{"r":"Mu","p":["*%_"]},"n":"die","m":0,"k":"m"},{"n":"rethrow","s":{"r":"Mu","p":["*%_"]},"m":0,"k":"m"},{"n":"backtrace","s":{"r":"Mu","p":["*%_"]},"m":0,"k":"m"},{"s":{"r":"Mu","p":["*%_"]},"n":"gist","k":"m","m":1},{"s":{"p":["*%_"],"r":"Mu"},"n":"gist","k":"m","m":1},{"s":{"p":["*%_"],"r":"Mu"},"n":"gist","k":"m","m":1},{"k":"m","m":0,"s":{"r":"Mu","p":["*%_"]},"n":"vault-backtrace"},{"n":"BUILDALL","s":{"r":"Mu","p":["@auto","%init","*%_"]},"k":"s","m":0}],"k":"c","t":"X::StubCode","n":"X::StubCode"},{"a":[{"n":"$.placeholder","t":"Mu","k":"v"},{"t":"Mu","n":"$.filename","k":"v"},{"n":"$.pos","t":"Mu","k":"v"},{"t":"Mu","n":"$.line","k":"v"},{"n":"$.column","t":"Mu","k":"v"},{"t":"Positional","n":"@.modules","k":"v"},{"k":"v","n":"$.is-compile-time","t":"Mu"},{"t":"Mu","n":"$.pre","k":"v"},{"k":"v","n":"$.post","t":"Mu"},{"n":"@.highexpect","t":"Positional","k":"v"},{"k":"v","t":"Mu","n":"$!ex"},{"k":"v","t":"Mu","n":"$!bt"}],"b":"A","m":[{"s":{"r":"Mu","p":["*%_"]},"n":"message","k":"m","m":0},{"s":{"r":"Mu","p":["@auto","%init","*%_"]},"n":"BUILDALL","k":"s","m":0},{"k":"m","m":0,"s":{"p":["*%_"],"r":"Mu"},"n":"line"},{"n":"sorry_heading","s":{"p":["*%_"],"r":"Mu"},"k":"m","m":0},{"k":"m","m":0,"n":"highexpect","s":{"p":["*%_"],"r":"Mu"}},{"k":"m","m":1,"s":{"p":["*%_"],"r":"Mu"},"n":"gist"},{"m":1,"k":"m","s":{"p":["*%_"],"r":"Mu"},"n":"gist"},{"s":{"p":["*%_"],"r":"Mu"},"n":"gist","k":"m","m":1},{"s":{"r":"Mu","p":[":$sorry = Bool::True",":$expect = Bool::True","*%_"]},"n":"gist","m":1,"k":"m"},{"k":"m","m":0,"s":{"p":["*%_"],"r":"Mu"},"n":"modules"},{"k":"m","m":0,"n":"pos","s":{"p":["*%_"],"r":"Mu"}},{"m":0,"k":"m","s":{"r":"Mu","p":["*%_"]},"n":"column"},{"k":"m","m":0,"n":"placeholder","s":{"r":"Mu","p":["*%_"]}},{"k":"m","m":0,"s":{"p":["*%_"],"r":"Mu"},"n":"is-compile-time"},{"n":"filename","s":{"r":"Mu","p":["*%_"]},"k":"m","m":0},{"n":"SET_FILE_LINE","s":{"r":"Mu","p":["$file","$line","*%_"]},"k":"m","m":0},{"n":"pre","s":{"r":"Mu","p":["*%_"]},"m":0,"k":"m"},{"k":"m","m":0,"s":{"p":["*%_"],"r":"Mu"},"n":"message"},{"k":"m","m":0,"n":"post","s":{"p":["*%_"],"r":"Mu"}},{"s":{"r":"Mu","p":["@auto","%init","*%_"]},"n":"BUILDALL","m":0,"k":"s"},{"k":"m","m":0,"n":"resume","s":{"r":"Bool","p":["*%_"]}},{"m":0,"k":"m","s":{"r":"Mu","p":["*%_"]},"n":"reset-backtrace"},{"k":"m","m":0,"n":"is-compile-time","s":{"p":["*%_"],"r":"Bool"}},{"m":0,"k":"m","s":{"p":["$bt?","*%_"],"r":"Mu"},"n":"throw"},{"s":{"r":"Mu","p":["*%_"]},"n":"fail","k":"m","m":0},{"m":1,"k":"m","s":{"p":["*%_"],"r":"Mu"},"n":"Str"},{"n":"Str","s":{"r":"Mu","p":["*%_"]},"k":"m","m":1},{"s":{"r":"Mu","p":["*%_"]},"n":"Str","k":"m","m":1},{"k":"m","m":0,"n":"die","s":{"p":["*%_"],"r":"Mu"}},{"s":{"p":["*%_"],"r":"Mu"},"n":"rethrow","m":0,"k":"m"},{"k":"m","m":0,"s":{"r":"Mu","p":["*%_"]},"n":"backtrace"},{"k":"m","m":1,"s":{"r":"Mu","p":["*%_"]},"n":"gist"},{"k":"m","m":1,"s":{"p":["*%_"],"r":"Mu"},"n":"gist"},{"n":"gist","s":{"r":"Mu","p":["*%_"]},"k":"m","m":1},{"n":"vault-backtrace","s":{"r":"Mu","p":["*%_"]},"k":"m","m":0},{"n":"BUILDALL","s":{"r":"Mu","p":["@auto","%init","*%_"]},"m":0,"k":"s"}],"k":"c","t":"X::Placeholder::Attribute","n":"X::Placeholder::Attribute"},{"k":"c","m":[{"s":{"r":"Mu","p":["*%_"]},"n":"message","k":"m","m":0},{"s":{"r":"Mu","p":["*%_"]},"n":"sorry_heading","m":0,"k":"m"},{"s":{"p":["$file","$line","*%_"],"r":"Mu"},"n":"SET_FILE_LINE","m":0,"k":"m"},{"k":"m","m":1,"n":"gist","s":{"p":["*%_"],"r":"Mu"}},{"n":"gist","s":{"p":["*%_"],"r":"Mu"},"k":"m","m":1},{"n":"gist","s":{"p":["*%_"],"r":"Mu"},"k":"m","m":1},{"k":"m","m":1,"n":"gist","s":{"p":[":$sorry = Bool::True",":$expect = Bool::True","*%_"],"r":"Mu"}},{"s":{"r":"Mu","p":["*%_"]},"n":"variable_name","m":0,"k":"m"},{"m":0,"k":"m","n":"placeholder","s":{"p":["*%_"],"r":"Mu"}},{"n":"decl","s":{"p":["*%_"],"r":"Mu"},"k":"m","m":0},{"m":0,"k":"m","s":{"r":"Mu","p":["*%_"]},"n":"filename"},{"n":"pos","s":{"p":["*%_"],"r":"Mu"},"k":"m","m":0},{"n":"line","s":{"p":["*%_"],"r":"Mu"},"k":"m","m":0},{"s":{"p":["*%_"],"r":"Mu"},"n":"column","k":"m","m":0},{"k":"m","m":0,"n":"modules","s":{"r":"Mu","p":["*%_"]}},{"s":{"r":"Mu","p":["*%_"]},"n":"is-compile-time","k":"m","m":0},{"s":{"r":"Mu","p":["*%_"]},"n":"pre","m":0,"k":"m"},{"s":{"p":["*%_"],"r":"Mu"},"n":"post","k":"m","m":0},{"k":"m","m":0,"s":{"r":"Mu","p":["*%_"]},"n":"highexpect"},{"k":"s","m":0,"n":"BUILDALL","s":{"p":["@auto","%init","*%_"],"r":"Mu"}},{"s":{"r":"Bool","p":["*%_"]},"n":"resume","k":"m","m":0},{"m":0,"k":"m","n":"reset-backtrace","s":{"r":"Mu","p":["*%_"]}},{"m":0,"k":"m","s":{"p":["*%_"],"r":"Bool"},"n":"is-compile-time"},{"n":"throw","s":{"p":["$bt?","*%_"],"r":"Mu"},"m":0,"k":"m"},{"n":"fail","s":{"p":["*%_"],"r":"Mu"},"k":"m","m":0},{"k":"m","m":1,"n":"Str","s":{"p":["*%_"],"r":"Mu"}},{"k":"m","m":1,"n":"Str","s":{"r":"Mu","p":["*%_"]}},{"k":"m","m":1,"s":{"p":["*%_"],"r":"Mu"},"n":"Str"},{"k":"m","m":0,"n":"die","s":{"r":"Mu","p":["*%_"]}},{"k":"m","m":0,"n":"rethrow","s":{"r":"Mu","p":["*%_"]}},{"m":0,"k":"m","s":{"r":"Mu","p":["*%_"]},"n":"backtrace"},{"m":1,"k":"m","s":{"r":"Mu","p":["*%_"]},"n":"gist"},{"m":1,"k":"m","n":"gist","s":{"p":["*%_"],"r":"Mu"}},{"s":{"p":["*%_"],"r":"Mu"},"n":"gist","k":"m","m":1},{"m":0,"k":"m","s":{"p":["*%_"],"r":"Mu"},"n":"vault-backtrace"},{"k":"s","m":0,"n":"BUILDALL","s":{"p":["@auto","%init","*%_"],"r":"Mu"}}],"b":"A","a":[{"k":"v","n":"$.variable_name","t":"Mu"},{"t":"Mu","n":"$.placeholder","k":"v"},{"k":"v","t":"Mu","n":"$.decl"},{"t":"Mu","n":"$.filename","k":"v"},{"k":"v","n":"$.pos","t":"Mu"},{"k":"v","n":"$.line","t":"Mu"},{"t":"Mu","n":"$.column","k":"v"},{"k":"v","t":"Positional","n":"@.modules"},{"k":"v","t":"Mu","n":"$.is-compile-time"},{"k":"v","n":"$.pre","t":"Mu"},{"k":"v","n":"$.post","t":"Mu"},{"t":"Positional","n":"@.highexpect","k":"v"},{"n":"$!ex","t":"Mu","k":"v"},{"k":"v","t":"Mu","n":"$!bt"}],"n":"X::Placeholder::NonPlaceholder","t":"X::Placeholder::NonPlaceholder"},{"d":"TITLE\nclass X::Placeholder::Mainline\n\nSUBTITLE\nCompilation error due to a placeholder in the mainline\n\n    class X::Placeholder::Mainline is X::Placeholder::Block { }\n\nThrown when a placeholder variable is used in the mainline, i.e. outside of\nany explicit block.\n\nFor example\n\n    $^x;\n\n\ndies with\n\n    ===SORRY!===\n    Cannot use placeholder parameter $^x outside of a sub or block\n\n\nNote that this error can also occur when you think something is a block,\nbut it really is a postcircumfix:<{ }>, for example\n\n    my %h;\n    say %h{ $^x };\n    #     ^^^^^^^  not a block, so $^x is part of the mainline\n","m":[{"m":0,"k":"m","s":{"p":["*%_"],"r":"Mu"},"n":"message"},{"m":0,"k":"s","s":{"r":"Mu","p":["@auto","%init","*%_"]},"n":"BUILDALL"},{"n":"line","s":{"p":["*%_"],"r":"Mu"},"k":"m","m":0},{"n":"sorry_heading","s":{"p":["*%_"],"r":"Mu"},"m":0,"k":"m"},{"n":"highexpect","s":{"r":"Mu","p":["*%_"]},"m":0,"k":"m"},{"n":"gist","s":{"p":["*%_"],"r":"Mu"},"k":"m","m":1},{"k":"m","m":1,"s":{"r":"Mu","p":["*%_"]},"n":"gist"},{"k":"m","m":1,"n":"gist","s":{"p":["*%_"],"r":"Mu"}},{"s":{"r":"Mu","p":[":$sorry = Bool::True",":$expect = Bool::True","*%_"]},"n":"gist","k":"m","m":1},{"k":"m","m":0,"s":{"p":["*%_"],"r":"Mu"},"n":"modules"},{"m":0,"k":"m","s":{"r":"Mu","p":["*%_"]},"n":"pos"},{"s":{"p":["*%_"],"r":"Mu"},"n":"column","m":0,"k":"m"},{"n":"placeholder","s":{"r":"Mu","p":["*%_"]},"m":0,"k":"m"},{"k":"m","m":0,"s":{"r":"Mu","p":["*%_"]},"n":"is-compile-time"},{"m":0,"k":"m","s":{"r":"Mu","p":["*%_"]},"n":"filename"},{"n":"SET_FILE_LINE","s":{"p":["$file","$line","*%_"],"r":"Mu"},"m":0,"k":"m"},{"k":"m","m":0,"s":{"p":["*%_"],"r":"Mu"},"n":"pre"},{"s":{"p":["*%_"],"r":"Mu"},"n":"message","m":0,"k":"m"},{"n":"post","s":{"r":"Mu","p":["*%_"]},"m":0,"k":"m"},{"n":"BUILDALL","s":{"r":"Mu","p":["@auto","%init","*%_"]},"k":"s","m":0},{"s":{"r":"Bool","p":["*%_"]},"n":"resume","k":"m","m":0},{"k":"m","m":0,"n":"reset-backtrace","s":{"r":"Mu","p":["*%_"]}},{"m":0,"k":"m","n":"is-compile-time","s":{"p":["*%_"],"r":"Bool"}},{"n":"throw","s":{"p":["$bt?","*%_"],"r":"Mu"},"k":"m","m":0},{"m":0,"k":"m","n":"fail","s":{"r":"Mu","p":["*%_"]}},{"s":{"p":["*%_"],"r":"Mu"},"n":"Str","m":1,"k":"m"},{"s":{"r":"Mu","p":["*%_"]},"n":"Str","k":"m","m":1},{"m":1,"k":"m","n":"Str","s":{"r":"Mu","p":["*%_"]}},{"k":"m","m":0,"s":{"p":["*%_"],"r":"Mu"},"n":"die"},{"k":"m","m":0,"n":"rethrow","s":{"r":"Mu","p":["*%_"]}},{"k":"m","m":0,"s":{"p":["*%_"],"r":"Mu"},"n":"backtrace"},{"s":{"p":["*%_"],"r":"Mu"},"n":"gist","m":1,"k":"m"},{"m":1,"k":"m","n":"gist","s":{"p":["*%_"],"r":"Mu"}},{"s":{"r":"Mu","p":["*%_"]},"n":"gist","m":1,"k":"m"},{"k":"m","m":0,"s":{"r":"Mu","p":["*%_"]},"n":"vault-backtrace"},{"k":"s","m":0,"n":"BUILDALL","s":{"p":["@auto","%init","*%_"],"r":"Mu"}}],"k":"c","b":"A","a":[{"n":"$.placeholder","t":"Mu","k":"v"},{"t":"Mu","n":"$.filename","k":"v"},{"t":"Mu","n":"$.pos","k":"v"},{"n":"$.line","t":"Mu","k":"v"},{"n":"$.column","t":"Mu","k":"v"},{"t":"Positional","n":"@.modules","k":"v"},{"k":"v","t":"Mu","n":"$.is-compile-time"},{"n":"$.pre","t":"Mu","k":"v"},{"k":"v","t":"Mu","n":"$.post"},{"k":"v","n":"@.highexpect","t":"Positional"},{"k":"v","n":"$!ex","t":"Mu"},{"k":"v","t":"Mu","n":"$!bt"}],"t":"X::Placeholder::Mainline","n":"X::Placeholder::Mainline"},{"d":"TITLE\nclass X::Placeholder::Block\n\nSUBTITLE\nCompilation error due to a placeholder in an ineligible block\n\n    class X::Placeholder::Block does X::Comp {}\n\nThrown when a placeholder variable is used in a block that does not allow a\nsignature.\n\nFor example\n\n    class A { $^foo }\n\n\ndies with\n\n    Placeholder variable $^foo may not be used here because the surrounding block takes no signature\n\n\n","a":[{"k":"v","t":"Mu","n":"$.placeholder"},{"t":"Mu","n":"$.filename","k":"v"},{"k":"v","t":"Mu","n":"$.pos"},{"k":"v","t":"Mu","n":"$.line"},{"n":"$.column","t":"Mu","k":"v"},{"k":"v","t":"Positional","n":"@.modules"},{"k":"v","n":"$.is-compile-time","t":"Mu"},{"k":"v","t":"Mu","n":"$.pre"},{"k":"v","t":"Mu","n":"$.post"},{"t":"Positional","n":"@.highexpect","k":"v"},{"k":"v","n":"$!ex","t":"Mu"},{"n":"$!bt","t":"Mu","k":"v"}],"b":"A","k":"c","m":[{"s":{"r":"Mu","p":["*%_"]},"n":"message","k":"m","m":0},{"m":0,"k":"m","s":{"r":"Mu","p":["*%_"]},"n":"sorry_heading"},{"n":"SET_FILE_LINE","s":{"p":["$file","$line","*%_"],"r":"Mu"},"m":0,"k":"m"},{"n":"gist","s":{"r":"Mu","p":["*%_"]},"k":"m","m":1},{"m":1,"k":"m","s":{"p":["*%_"],"r":"Mu"},"n":"gist"},{"k":"m","m":1,"n":"gist","s":{"r":"Mu","p":["*%_"]}},{"m":1,"k":"m","s":{"p":[":$sorry = Bool::True",":$expect = Bool::True","*%_"],"r":"Mu"},"n":"gist"},{"s":{"r":"Mu","p":["*%_"]},"n":"placeholder","k":"m","m":0},{"s":{"p":["*%_"],"r":"Mu"},"n":"filename","m":0,"k":"m"},{"m":0,"k":"m","s":{"p":["*%_"],"r":"Mu"},"n":"pos"},{"s":{"p":["*%_"],"r":"Mu"},"n":"line","k":"m","m":0},{"s":{"p":["*%_"],"r":"Mu"},"n":"column","k":"m","m":0},{"s":{"r":"Mu","p":["*%_"]},"n":"modules","k":"m","m":0},{"m":0,"k":"m","s":{"r":"Mu","p":["*%_"]},"n":"is-compile-time"},{"m":0,"k":"m","n":"pre","s":{"p":["*%_"],"r":"Mu"}},{"s":{"r":"Mu","p":["*%_"]},"n":"post","k":"m","m":0},{"m":0,"k":"m","s":{"p":["*%_"],"r":"Mu"},"n":"highexpect"},{"n":"BUILDALL","s":{"r":"Mu","p":["@auto","%init","*%_"]},"k":"s","m":0},{"m":0,"k":"m","n":"resume","s":{"p":["*%_"],"r":"Bool"}},{"m":0,"k":"m","n":"reset-backtrace","s":{"p":["*%_"],"r":"Mu"}},{"n":"is-compile-time","s":{"p":["*%_"],"r":"Bool"},"m":0,"k":"m"},{"m":0,"k":"m","n":"throw","s":{"p":["$bt?","*%_"],"r":"Mu"}},{"k":"m","m":0,"n":"fail","s":{"r":"Mu","p":["*%_"]}},{"m":1,"k":"m","s":{"r":"Mu","p":["*%_"]},"n":"Str"},{"k":"m","m":1,"n":"Str","s":{"p":["*%_"],"r":"Mu"}},{"s":{"r":"Mu","p":["*%_"]},"n":"Str","m":1,"k":"m"},{"m":0,"k":"m","s":{"p":["*%_"],"r":"Mu"},"n":"die"},{"s":{"r":"Mu","p":["*%_"]},"n":"rethrow","k":"m","m":0},{"m":0,"k":"m","n":"backtrace","s":{"r":"Mu","p":["*%_"]}},{"k":"m","m":1,"n":"gist","s":{"r":"Mu","p":["*%_"]}},{"n":"gist","s":{"p":["*%_"],"r":"Mu"},"k":"m","m":1},{"m":1,"k":"m","s":{"p":["*%_"],"r":"Mu"},"n":"gist"},{"k":"m","m":0,"n":"vault-backtrace","s":{"p":["*%_"],"r":"Mu"}},{"m":0,"k":"s","n":"BUILDALL","s":{"p":["@auto","%init","*%_"],"r":"Mu"}}],"t":"X::Placeholder::Block","n":"X::Placeholder::Block"},{"t":"X::LibEmpty","n":"X::LibEmpty","k":"c","m":[{"m":0,"k":"m","n":"message","s":{"r":"Mu","p":["*%_"]}},{"s":{"p":["*%_"],"r":"Mu"},"n":"sorry_heading","m":0,"k":"m"},{"m":0,"k":"m","n":"SET_FILE_LINE","s":{"r":"Mu","p":["$file","$line","*%_"]}},{"s":{"p":["*%_"],"r":"Mu"},"n":"gist","m":1,"k":"m"},{"k":"m","m":1,"s":{"p":["*%_"],"r":"Mu"},"n":"gist"},{"n":"gist","s":{"p":["*%_"],"r":"Mu"},"k":"m","m":1},{"k":"m","m":1,"s":{"r":"Mu","p":[":$sorry = Bool::True",":$expect = Bool::True","*%_"]},"n":"gist"},{"m":0,"k":"m","n":"filename","s":{"p":["*%_"],"r":"Mu"}},{"s":{"r":"Mu","p":["*%_"]},"n":"pos","k":"m","m":0},{"s":{"p":["*%_"],"r":"Mu"},"n":"line","m":0,"k":"m"},{"n":"column","s":{"r":"Mu","p":["*%_"]},"m":0,"k":"m"},{"k":"m","m":0,"s":{"p":["*%_"],"r":"Mu"},"n":"modules"},{"k":"m","m":0,"n":"is-compile-time","s":{"r":"Mu","p":["*%_"]}},{"s":{"p":["*%_"],"r":"Mu"},"n":"pre","k":"m","m":0},{"s":{"r":"Mu","p":["*%_"]},"n":"post","m":0,"k":"m"},{"k":"m","m":0,"n":"highexpect","s":{"p":["*%_"],"r":"Mu"}},{"m":0,"k":"s","s":{"r":"Mu","p":["@auto","%init","*%_"]},"n":"BUILDALL"},{"m":0,"k":"m","s":{"r":"Bool","p":["*%_"]},"n":"resume"},{"k":"m","m":0,"n":"reset-backtrace","s":{"r":"Mu","p":["*%_"]}},{"s":{"r":"Bool","p":["*%_"]},"n":"is-compile-time","m":0,"k":"m"},{"m":0,"k":"m","n":"throw","s":{"r":"Mu","p":["$bt?","*%_"]}},{"k":"m","m":0,"n":"fail","s":{"r":"Mu","p":["*%_"]}},{"s":{"p":["*%_"],"r":"Mu"},"n":"Str","k":"m","m":1},{"n":"Str","s":{"r":"Mu","p":["*%_"]},"k":"m","m":1},{"k":"m","m":1,"n":"Str","s":{"r":"Mu","p":["*%_"]}},{"s":{"r":"Mu","p":["*%_"]},"n":"die","m":0,"k":"m"},{"m":0,"k":"m","n":"rethrow","s":{"r":"Mu","p":["*%_"]}},{"m":0,"k":"m","s":{"r":"Mu","p":["*%_"]},"n":"backtrace"},{"n":"gist","s":{"r":"Mu","p":["*%_"]},"m":1,"k":"m"},{"s":{"r":"Mu","p":["*%_"]},"n":"gist","k":"m","m":1},{"m":1,"k":"m","n":"gist","s":{"r":"Mu","p":["*%_"]}},{"k":"m","m":0,"n":"vault-backtrace","s":{"p":["*%_"],"r":"Mu"}},{"m":0,"k":"s","s":{"r":"Mu","p":["@auto","%init","*%_"]},"n":"BUILDALL"}],"a":[{"t":"Mu","n":"$.filename","k":"v"},{"k":"v","n":"$.pos","t":"Mu"},{"k":"v","t":"Mu","n":"$.line"},{"n":"$.column","t":"Mu","k":"v"},{"k":"v","n":"@.modules","t":"Positional"},{"k":"v","n":"$.is-compile-time","t":"Mu"},{"n":"$.pre","t":"Mu","k":"v"},{"t":"Mu","n":"$.post","k":"v"},{"k":"v","n":"@.highexpect","t":"Positional"},{"k":"v","t":"Mu","n":"$!ex"},{"t":"Mu","n":"$!bt","k":"v"}],"b":"A"},{"d":"TITLE\nclass X::Method::NotFound\n\nSUBTITLE\nError due to calling a method that isn't there\n\n    class X::Method::NotFound is Exception {}\n\nThrown when the user tries to call a method that isn't there.\n\nFor example\n\n    1.no-such\n\n\nthrows\n\n    No such method 'no-such' for invocant of type 'Int'\n\n\n","k":"c","m":[{"m":0,"k":"m","n":"message","s":{"p":["*%_"],"r":"Mu"}},{"m":0,"k":"m","n":"invocant","s":{"r":"Mu","p":["*%_"]}},{"s":{"r":"Mu","p":["*%_"]},"n":"method","k":"m","m":0},{"k":"m","m":0,"n":"typename","s":{"p":["*%_"],"r":"Mu"}},{"s":{"p":["*%_"],"r":"Mu"},"n":"private","m":0,"k":"m"},{"k":"m","m":0,"n":"addendum","s":{"p":["*%_"],"r":"Mu"}},{"k":"s","m":0,"n":"BUILDALL","s":{"p":["@auto","%init","*%_"],"r":"Mu"}},{"s":{"r":"Bool","p":["*%_"]},"n":"resume","k":"m","m":0},{"k":"m","m":0,"s":{"p":["*%_"],"r":"Mu"},"n":"reset-backtrace"},{"s":{"p":["*%_"],"r":"Bool"},"n":"is-compile-time","k":"m","m":0},{"n":"throw","s":{"p":["$bt?","*%_"],"r":"Mu"},"k":"m","m":0},{"m":0,"k":"m","n":"fail","s":{"r":"Mu","p":["*%_"]}},{"n":"Str","s":{"p":["*%_"],"r":"Mu"},"m":1,"k":"m"},{"n":"Str","s":{"p":["*%_"],"r":"Mu"},"k":"m","m":1},{"k":"m","m":1,"s":{"r":"Mu","p":["*%_"]},"n":"Str"},{"m":0,"k":"m","n":"die","s":{"p":["*%_"],"r":"Mu"}},{"n":"rethrow","s":{"p":["*%_"],"r":"Mu"},"k":"m","m":0},{"s":{"p":["*%_"],"r":"Mu"},"n":"backtrace","k":"m","m":0},{"m":1,"k":"m","n":"gist","s":{"r":"Mu","p":["*%_"]}},{"n":"gist","s":{"r":"Mu","p":["*%_"]},"m":1,"k":"m"},{"m":1,"k":"m","s":{"r":"Mu","p":["*%_"]},"n":"gist"},{"s":{"r":"Mu","p":["*%_"]},"n":"vault-backtrace","k":"m","m":0},{"n":"BUILDALL","s":{"p":["@auto","%init","*%_"],"r":"Mu"},"m":0,"k":"s"}],"a":[{"k":"v","n":"$.invocant","t":"Mu"},{"k":"v","n":"$.method","t":"Mu"},{"t":"Mu","n":"$.typename","k":"v"},{"k":"v","t":"Bool","n":"$.private"},{"k":"v","t":"Mu","n":"$.addendum"},{"k":"v","t":"Mu","n":"$!ex"},{"n":"$!bt","t":"Mu","k":"v"}],"b":"A","t":"X::Method::NotFound","n":"X::Method::NotFound"},{"n":"X::Method::Private::Permission","t":"X::Method::Private::Permission","b":"A","a":[{"t":"Mu","n":"$.method","k":"v"},{"k":"v","n":"$.source-package","t":"Mu"},{"k":"v","t":"Mu","n":"$.calling-package"},{"k":"v","t":"Mu","n":"$.filename"},{"k":"v","t":"Mu","n":"$.pos"},{"t":"Mu","n":"$.line","k":"v"},{"n":"$.column","t":"Mu","k":"v"},{"k":"v","t":"Positional","n":"@.modules"},{"t":"Mu","n":"$.is-compile-time","k":"v"},{"k":"v","t":"Mu","n":"$.pre"},{"k":"v","n":"$.post","t":"Mu"},{"k":"v","t":"Positional","n":"@.highexpect"},{"n":"$!ex","t":"Mu","k":"v"},{"t":"Mu","n":"$!bt","k":"v"}],"m":[{"k":"m","m":0,"s":{"r":"Mu","p":["*%_"]},"n":"message"},{"n":"sorry_heading","s":{"p":["*%_"],"r":"Mu"},"k":"m","m":0},{"m":0,"k":"m","s":{"r":"Mu","p":["$file","$line","*%_"]},"n":"SET_FILE_LINE"},{"s":{"p":["*%_"],"r":"Mu"},"n":"gist","k":"m","m":1},{"k":"m","m":1,"s":{"r":"Mu","p":["*%_"]},"n":"gist"},{"s":{"p":["*%_"],"r":"Mu"},"n":"gist","k":"m","m":1},{"k":"m","m":1,"s":{"r":"Mu","p":[":$sorry = Bool::True",":$expect = Bool::True","*%_"]},"n":"gist"},{"k":"m","m":0,"n":"method","s":{"r":"Mu","p":["*%_"]}},{"s":{"r":"Mu","p":["*%_"]},"n":"source-package","k":"m","m":0},{"n":"calling-package","s":{"p":["*%_"],"r":"Mu"},"m":0,"k":"m"},{"n":"filename","s":{"p":["*%_"],"r":"Mu"},"k":"m","m":0},{"s":{"p":["*%_"],"r":"Mu"},"n":"pos","m":0,"k":"m"},{"m":0,"k":"m","s":{"p":["*%_"],"r":"Mu"},"n":"line"},{"n":"column","s":{"p":["*%_"],"r":"Mu"},"m":0,"k":"m"},{"n":"modules","s":{"r":"Mu","p":["*%_"]},"m":0,"k":"m"},{"k":"m","m":0,"n":"is-compile-time","s":{"r":"Mu","p":["*%_"]}},{"m":0,"k":"m","s":{"r":"Mu","p":["*%_"]},"n":"pre"},{"s":{"p":["*%_"],"r":"Mu"},"n":"post","k":"m","m":0},{"m":0,"k":"m","n":"highexpect","s":{"p":["*%_"],"r":"Mu"}},{"k":"s","m":0,"s":{"p":["@auto","%init","*%_"],"r":"Mu"},"n":"BUILDALL"},{"m":0,"k":"m","s":{"p":["*%_"],"r":"Bool"},"n":"resume"},{"s":{"r":"Mu","p":["*%_"]},"n":"reset-backtrace","m":0,"k":"m"},{"n":"is-compile-time","s":{"p":["*%_"],"r":"Bool"},"m":0,"k":"m"},{"m":0,"k":"m","n":"throw","s":{"p":["$bt?","*%_"],"r":"Mu"}},{"m":0,"k":"m","s":{"r":"Mu","p":["*%_"]},"n":"fail"},{"n":"Str","s":{"r":"Mu","p":["*%_"]},"k":"m","m":1},{"s":{"p":["*%_"],"r":"Mu"},"n":"Str","m":1,"k":"m"},{"n":"Str","s":{"p":["*%_"],"r":"Mu"},"m":1,"k":"m"},{"n":"die","s":{"r":"Mu","p":["*%_"]},"k":"m","m":0},{"n":"rethrow","s":{"p":["*%_"],"r":"Mu"},"k":"m","m":0},{"m":0,"k":"m","s":{"r":"Mu","p":["*%_"]},"n":"backtrace"},{"m":1,"k":"m","s":{"r":"Mu","p":["*%_"]},"n":"gist"},{"k":"m","m":1,"n":"gist","s":{"p":["*%_"],"r":"Mu"}},{"k":"m","m":1,"s":{"p":["*%_"],"r":"Mu"},"n":"gist"},{"n":"vault-backtrace","s":{"p":["*%_"],"r":"Mu"},"k":"m","m":0},{"k":"s","m":0,"n":"BUILDALL","s":{"p":["@auto","%init","*%_"],"r":"Mu"}}],"k":"c","d":"TITLE\nclass X::Method::Private::Permission\n\nSUBTITLE\nCompilation error due to calling a private method without permission\n\n    class X::Method::Private::Permission does X::Comp { }\n\nCompile time error thrown when the code contains a call to a private method\nthat isn't defined in the current class, and when no appropriate trusts\nrelation is defined that permits the private method call.\n\nFor example\n\n    1!Int::foo\n\n\ndies with\n\n    ===SORRY!===\n    Cannot call private method 'foo' on package Int because it does not trust GLOBAL\n\n\n"},{"n":"X::Method::Private::Unqualified","t":"X::Method::Private::Unqualified","a":[{"k":"v","t":"Mu","n":"$.method"},{"n":"$.filename","t":"Mu","k":"v"},{"n":"$.pos","t":"Mu","k":"v"},{"k":"v","n":"$.line","t":"Mu"},{"t":"Mu","n":"$.column","k":"v"},{"n":"@.modules","t":"Positional","k":"v"},{"t":"Mu","n":"$.is-compile-time","k":"v"},{"n":"$.pre","t":"Mu","k":"v"},{"t":"Mu","n":"$.post","k":"v"},{"k":"v","t":"Positional","n":"@.highexpect"},{"t":"Mu","n":"$!ex","k":"v"},{"k":"v","t":"Mu","n":"$!bt"}],"b":"A","k":"c","m":[{"s":{"p":["*%_"],"r":"Mu"},"n":"message","m":0,"k":"m"},{"m":0,"k":"m","n":"sorry_heading","s":{"p":["*%_"],"r":"Mu"}},{"n":"SET_FILE_LINE","s":{"p":["$file","$line","*%_"],"r":"Mu"},"k":"m","m":0},{"s":{"p":["*%_"],"r":"Mu"},"n":"gist","m":1,"k":"m"},{"n":"gist","s":{"r":"Mu","p":["*%_"]},"m":1,"k":"m"},{"s":{"p":["*%_"],"r":"Mu"},"n":"gist","m":1,"k":"m"},{"k":"m","m":1,"n":"gist","s":{"r":"Mu","p":[":$sorry = Bool::True",":$expect = Bool::True","*%_"]}},{"k":"m","m":0,"s":{"p":["*%_"],"r":"Mu"},"n":"method"},{"s":{"r":"Mu","p":["*%_"]},"n":"filename","m":0,"k":"m"},{"m":0,"k":"m","s":{"r":"Mu","p":["*%_"]},"n":"pos"},{"n":"line","s":{"r":"Mu","p":["*%_"]},"m":0,"k":"m"},{"s":{"r":"Mu","p":["*%_"]},"n":"column","k":"m","m":0},{"k":"m","m":0,"s":{"r":"Mu","p":["*%_"]},"n":"modules"},{"n":"is-compile-time","s":{"p":["*%_"],"r":"Mu"},"m":0,"k":"m"},{"k":"m","m":0,"n":"pre","s":{"r":"Mu","p":["*%_"]}},{"k":"m","m":0,"s":{"r":"Mu","p":["*%_"]},"n":"post"},{"s":{"p":["*%_"],"r":"Mu"},"n":"highexpect","k":"m","m":0},{"n":"BUILDALL","s":{"p":["@auto","%init","*%_"],"r":"Mu"},"k":"s","m":0},{"k":"m","m":0,"n":"resume","s":{"r":"Bool","p":["*%_"]}},{"k":"m","m":0,"n":"reset-backtrace","s":{"p":["*%_"],"r":"Mu"}},{"n":"is-compile-time","s":{"p":["*%_"],"r":"Bool"},"m":0,"k":"m"},{"k":"m","m":0,"s":{"p":["$bt?","*%_"],"r":"Mu"},"n":"throw"},{"n":"fail","s":{"r":"Mu","p":["*%_"]},"m":0,"k":"m"},{"s":{"p":["*%_"],"r":"Mu"},"n":"Str","m":1,"k":"m"},{"k":"m","m":1,"s":{"p":["*%_"],"r":"Mu"},"n":"Str"},{"n":"Str","s":{"p":["*%_"],"r":"Mu"},"m":1,"k":"m"},{"m":0,"k":"m","n":"die","s":{"r":"Mu","p":["*%_"]}},{"n":"rethrow","s":{"r":"Mu","p":["*%_"]},"k":"m","m":0},{"s":{"p":["*%_"],"r":"Mu"},"n":"backtrace","k":"m","m":0},{"m":1,"k":"m","n":"gist","s":{"p":["*%_"],"r":"Mu"}},{"s":{"r":"Mu","p":["*%_"]},"n":"gist","k":"m","m":1},{"k":"m","m":1,"n":"gist","s":{"r":"Mu","p":["*%_"]}},{"s":{"r":"Mu","p":["*%_"]},"n":"vault-backtrace","m":0,"k":"m"},{"n":"BUILDALL","s":{"p":["@auto","%init","*%_"],"r":"Mu"},"m":0,"k":"s"}],"d":"TITLE\nclass X::Method::Private::Unqualified\n\nSUBTITLE\nCompilation error due to an unqualified private method call\n\n    class X::Method::Private::Unqualified does X::Comp { }\n\nCompile time error thrown when a private method call on anything but self\nis not fully qualified.\n\nFor example\n\n    1!priv\n\n\ndies with\n\n    ===SORRY!===\n    Private method call to priv must be fully qualified with the package containing the method\n\n\n"},{"n":"X::Method::InvalidQualifier","t":"X::Method::InvalidQualifier","a":[{"k":"v","t":"Mu","n":"$.method"},{"t":"Mu","n":"$.invocant","k":"v"},{"n":"$.qualifier-type","t":"Mu","k":"v"},{"t":"Mu","n":"$!ex","k":"v"},{"n":"$!bt","t":"Mu","k":"v"}],"b":"A","k":"c","m":[{"s":{"r":"Mu","p":["*%_"]},"n":"message","k":"m","m":0},{"n":"method","s":{"r":"Mu","p":["*%_"]},"k":"m","m":0},{"n":"invocant","s":{"r":"Mu","p":["*%_"]},"k":"m","m":0},{"s":{"r":"Mu","p":["*%_"]},"n":"qualifier-type","m":0,"k":"m"},{"n":"BUILDALL","s":{"p":["@auto","%init","*%_"],"r":"Mu"},"m":0,"k":"s"},{"n":"resume","s":{"r":"Bool","p":["*%_"]},"m":0,"k":"m"},{"s":{"r":"Mu","p":["*%_"]},"n":"reset-backtrace","m":0,"k":"m"},{"m":0,"k":"m","s":{"r":"Bool","p":["*%_"]},"n":"is-compile-time"},{"k":"m","m":0,"s":{"r":"Mu","p":["$bt?","*%_"]},"n":"throw"},{"n":"fail","s":{"p":["*%_"],"r":"Mu"},"m":0,"k":"m"},{"n":"Str","s":{"r":"Mu","p":["*%_"]},"m":1,"k":"m"},{"k":"m","m":1,"n":"Str","s":{"p":["*%_"],"r":"Mu"}},{"s":{"p":["*%_"],"r":"Mu"},"n":"Str","m":1,"k":"m"},{"s":{"r":"Mu","p":["*%_"]},"n":"die","m":0,"k":"m"},{"s":{"p":["*%_"],"r":"Mu"},"n":"rethrow","k":"m","m":0},{"k":"m","m":0,"n":"backtrace","s":{"p":["*%_"],"r":"Mu"}},{"m":1,"k":"m","n":"gist","s":{"r":"Mu","p":["*%_"]}},{"n":"gist","s":{"r":"Mu","p":["*%_"]},"m":1,"k":"m"},{"k":"m","m":1,"n":"gist","s":{"p":["*%_"],"r":"Mu"}},{"s":{"r":"Mu","p":["*%_"]},"n":"vault-backtrace","k":"m","m":0},{"s":{"r":"Mu","p":["@auto","%init","*%_"]},"n":"BUILDALL","k":"s","m":0}],"d":"TITLE\nclass X::Method::InvalidQualifier\n\nSUBTITLE\nError due to calling a qualified method from an ineligible class\n\n    class X::Method::InvalidQualifier is Exception { }\n\nThrown when a method is call in the form $invocant.TheClass::method if\n<$invocant> does not conform to TheClass.\n\nFor example\n\n    1.Str::split(/a/);\n    CATCH { default { put .^name, ': ', .Str } };\n    # OUTPUT: «X::Method::InvalidQualifier: Cannot dispatch to method split on Str because it is not inherited or done by Int␤»\n\n"},{"m":[{"n":"message","s":{"r":"Mu","p":["*%_"]},"m":0,"k":"m"},{"s":{"p":["*%_"],"r":"Mu"},"n":"sorry_heading","k":"m","m":0},{"k":"m","m":0,"n":"SET_FILE_LINE","s":{"r":"Mu","p":["$file","$line","*%_"]}},{"k":"m","m":1,"s":{"r":"Mu","p":["*%_"]},"n":"gist"},{"n":"gist","s":{"p":["*%_"],"r":"Mu"},"k":"m","m":1},{"n":"gist","s":{"r":"Mu","p":["*%_"]},"m":1,"k":"m"},{"k":"m","m":1,"n":"gist","s":{"r":"Mu","p":[":$sorry = Bool::True",":$expect = Bool::True","*%_"]}},{"m":0,"k":"m","s":{"r":"Mu","p":["*%_"]},"n":"how"},{"n":"parameter","s":{"p":["*%_"],"r":"Mu"},"m":0,"k":"m"},{"m":0,"k":"m","s":{"p":["*%_"],"r":"Mu"},"n":"filename"},{"n":"pos","s":{"r":"Mu","p":["*%_"]},"k":"m","m":0},{"n":"line","s":{"r":"Mu","p":["*%_"]},"k":"m","m":0},{"m":0,"k":"m","n":"column","s":{"p":["*%_"],"r":"Mu"}},{"m":0,"k":"m","s":{"r":"Mu","p":["*%_"]},"n":"modules"},{"m":0,"k":"m","n":"is-compile-time","s":{"p":["*%_"],"r":"Mu"}},{"m":0,"k":"m","s":{"p":["*%_"],"r":"Mu"},"n":"pre"},{"k":"m","m":0,"n":"post","s":{"p":["*%_"],"r":"Mu"}},{"s":{"r":"Mu","p":["*%_"]},"n":"highexpect","k":"m","m":0},{"s":{"p":["@auto","%init","*%_"],"r":"Mu"},"n":"BUILDALL","m":0,"k":"s"},{"s":{"p":["*%_"],"r":"Bool"},"n":"resume","k":"m","m":0},{"k":"m","m":0,"s":{"p":["*%_"],"r":"Mu"},"n":"reset-backtrace"},{"n":"is-compile-time","s":{"p":["*%_"],"r":"Bool"},"k":"m","m":0},{"k":"m","m":0,"n":"throw","s":{"r":"Mu","p":["$bt?","*%_"]}},{"k":"m","m":0,"n":"fail","s":{"r":"Mu","p":["*%_"]}},{"s":{"r":"Mu","p":["*%_"]},"n":"Str","m":1,"k":"m"},{"k":"m","m":1,"s":{"r":"Mu","p":["*%_"]},"n":"Str"},{"k":"m","m":1,"n":"Str","s":{"p":["*%_"],"r":"Mu"}},{"s":{"p":["*%_"],"r":"Mu"},"n":"die","m":0,"k":"m"},{"s":{"p":["*%_"],"r":"Mu"},"n":"rethrow","m":0,"k":"m"},{"s":{"p":["*%_"],"r":"Mu"},"n":"backtrace","m":0,"k":"m"},{"m":1,"k":"m","s":{"p":["*%_"],"r":"Mu"},"n":"gist"},{"m":1,"k":"m","s":{"p":["*%_"],"r":"Mu"},"n":"gist"},{"s":{"p":["*%_"],"r":"Mu"},"n":"gist","k":"m","m":1},{"m":0,"k":"m","n":"vault-backtrace","s":{"p":["*%_"],"r":"Mu"}},{"m":0,"k":"s","n":"BUILDALL","s":{"p":["@auto","%init","*%_"],"r":"Mu"}}],"k":"c","b":"A","a":[{"k":"v","t":"Mu","n":"$.how"},{"k":"v","n":"$.parameter","t":"Mu"},{"k":"v","n":"$.filename","t":"Mu"},{"k":"v","t":"Mu","n":"$.pos"},{"n":"$.line","t":"Mu","k":"v"},{"k":"v","n":"$.column","t":"Mu"},{"t":"Positional","n":"@.modules","k":"v"},{"k":"v","n":"$.is-compile-time","t":"Mu"},{"t":"Mu","n":"$.pre","k":"v"},{"k":"v","n":"$.post","t":"Mu"},{"n":"@.highexpect","t":"Positional","k":"v"},{"t":"Mu","n":"$!ex","k":"v"},{"t":"Mu","n":"$!bt","k":"v"}],"d":"TITLE\nclass X::Parameter::Default\n\nSUBTITLE\nCompilation error due to an unallowed default value in a signature\n\n    class X::Parameter::Default does X::Comp { }\n\nCompile-time error thrown when a parameter in a signature has default\nvalue, but isn't allowed to have one. That is the case with slurpy\nparameters (because a slurpy always binds successfully, even to zero\narguments) and with mandatory parameters.\n\nExample:\n\n    sub f($x! = 3) { }\n\n\ndies with\n\n    ===SORRY!===\n    Cannot put default on required parameter $x\n\n\nAnd\n\n    sub f(*@ = 3) { }\n\n\ndies with\n\n    ===SORRY!===\n    Cannot put default on anonymous slurpy parameter\n\n\n","n":"X::Parameter::Default","t":"X::Parameter::Default"},{"n":"X::Parameter::Default::TypeCheck","t":"X::Parameter::Default::TypeCheck","b":"A","a":[{"k":"v","n":"$.got","t":"Mu"},{"t":"Mu","n":"$.expected","k":"v"},{"k":"v","n":"$.filename","t":"Mu"},{"t":"Mu","n":"$.pos","k":"v"},{"k":"v","n":"$.line","t":"Mu"},{"k":"v","n":"$.column","t":"Mu"},{"n":"@.modules","t":"Positional","k":"v"},{"k":"v","t":"Mu","n":"$.is-compile-time"},{"t":"Mu","n":"$.pre","k":"v"},{"n":"$.post","t":"Mu","k":"v"},{"n":"@.highexpect","t":"Positional","k":"v"},{"t":"Mu","n":"$!ex","k":"v"},{"k":"v","t":"Mu","n":"$!bt"}],"k":"c","m":[{"n":"message","s":{"p":["*%_"],"r":"Mu"},"m":0,"k":"m"},{"n":"sorry_heading","s":{"p":["*%_"],"r":"Mu"},"k":"m","m":0},{"k":"m","m":0,"n":"SET_FILE_LINE","s":{"r":"Mu","p":["$file","$line","*%_"]}},{"n":"gist","s":{"r":"Mu","p":["*%_"]},"k":"m","m":1},{"k":"m","m":1,"n":"gist","s":{"p":["*%_"],"r":"Mu"}},{"n":"gist","s":{"p":["*%_"],"r":"Mu"},"k":"m","m":1},{"n":"gist","s":{"p":[":$sorry = Bool::True",":$expect = Bool::True","*%_"],"r":"Mu"},"k":"m","m":1},{"k":"m","m":0,"n":"got","s":{"p":["*%_"],"r":"Mu"}},{"m":0,"k":"m","n":"expected","s":{"p":["*%_"],"r":"Mu"}},{"n":"filename","s":{"p":["*%_"],"r":"Mu"},"k":"m","m":0},{"k":"m","m":0,"n":"pos","s":{"p":["*%_"],"r":"Mu"}},{"s":{"r":"Mu","p":["*%_"]},"n":"line","k":"m","m":0},{"n":"column","s":{"p":["*%_"],"r":"Mu"},"m":0,"k":"m"},{"n":"modules","s":{"r":"Mu","p":["*%_"]},"m":0,"k":"m"},{"s":{"r":"Mu","p":["*%_"]},"n":"is-compile-time","k":"m","m":0},{"s":{"r":"Mu","p":["*%_"]},"n":"pre","m":0,"k":"m"},{"k":"m","m":0,"n":"post","s":{"r":"Mu","p":["*%_"]}},{"k":"m","m":0,"n":"highexpect","s":{"r":"Mu","p":["*%_"]}},{"n":"BUILDALL","s":{"r":"Mu","p":["@auto","%init","*%_"]},"m":0,"k":"s"},{"k":"m","m":0,"s":{"p":["*%_"],"r":"Bool"},"n":"resume"},{"m":0,"k":"m","n":"reset-backtrace","s":{"r":"Mu","p":["*%_"]}},{"s":{"p":["*%_"],"r":"Bool"},"n":"is-compile-time","m":0,"k":"m"},{"n":"throw","s":{"p":["$bt?","*%_"],"r":"Mu"},"m":0,"k":"m"},{"s":{"p":["*%_"],"r":"Mu"},"n":"fail","k":"m","m":0},{"n":"Str","s":{"p":["*%_"],"r":"Mu"},"k":"m","m":1},{"s":{"r":"Mu","p":["*%_"]},"n":"Str","m":1,"k":"m"},{"m":1,"k":"m","n":"Str","s":{"r":"Mu","p":["*%_"]}},{"m":0,"k":"m","s":{"r":"Mu","p":["*%_"]},"n":"die"},{"k":"m","m":0,"s":{"p":["*%_"],"r":"Mu"},"n":"rethrow"},{"m":0,"k":"m","n":"backtrace","s":{"p":["*%_"],"r":"Mu"}},{"m":1,"k":"m","n":"gist","s":{"r":"Mu","p":["*%_"]}},{"k":"m","m":1,"n":"gist","s":{"r":"Mu","p":["*%_"]}},{"m":1,"k":"m","s":{"p":["*%_"],"r":"Mu"},"n":"gist"},{"n":"vault-backtrace","s":{"r":"Mu","p":["*%_"]},"k":"m","m":0},{"s":{"r":"Mu","p":["@auto","%init","*%_"]},"n":"BUILDALL","m":0,"k":"s"}]},{"t":"X::Parameter::MultipleTypeConstraints","n":"X::Parameter::MultipleTypeConstraints","d":"TITLE\nclass X::Parameter::MultipleTypeConstraints\n\nSUBTITLE\nCompilation error due to a parameter with multiple type constraints\n\n    class X::Parameter::MultipleTypeConstraints does X::Comp { }\n\nCompile time error thrown when a parameter has multiple type constraints.\nThis is not allowed in Raku.0.\n\nExample:\n\n    sub f(Cool Real $x) { }\n\n\ndies with\n\n    Parameter $x may only have one prefix type constraint\n\n\n","m":[{"n":"message","s":{"p":["*%_"],"r":"Mu"},"k":"m","m":0},{"m":0,"k":"m","s":{"p":["*%_"],"r":"Mu"},"n":"sorry_heading"},{"n":"SET_FILE_LINE","s":{"p":["$file","$line","*%_"],"r":"Mu"},"m":0,"k":"m"},{"m":1,"k":"m","s":{"p":["*%_"],"r":"Mu"},"n":"gist"},{"n":"gist","s":{"r":"Mu","p":["*%_"]},"k":"m","m":1},{"k":"m","m":1,"s":{"p":["*%_"],"r":"Mu"},"n":"gist"},{"m":1,"k":"m","n":"gist","s":{"p":[":$sorry = Bool::True",":$expect = Bool::True","*%_"],"r":"Mu"}},{"s":{"r":"Mu","p":["*%_"]},"n":"parameter","k":"m","m":0},{"s":{"r":"Mu","p":["*%_"]},"n":"filename","m":0,"k":"m"},{"n":"pos","s":{"p":["*%_"],"r":"Mu"},"m":0,"k":"m"},{"n":"line","s":{"r":"Mu","p":["*%_"]},"m":0,"k":"m"},{"s":{"r":"Mu","p":["*%_"]},"n":"column","m":0,"k":"m"},{"s":{"r":"Mu","p":["*%_"]},"n":"modules","k":"m","m":0},{"s":{"r":"Mu","p":["*%_"]},"n":"is-compile-time","m":0,"k":"m"},{"m":0,"k":"m","s":{"r":"Mu","p":["*%_"]},"n":"pre"},{"k":"m","m":0,"s":{"p":["*%_"],"r":"Mu"},"n":"post"},{"s":{"p":["*%_"],"r":"Mu"},"n":"highexpect","m":0,"k":"m"},{"m":0,"k":"s","n":"BUILDALL","s":{"p":["@auto","%init","*%_"],"r":"Mu"}},{"s":{"r":"Bool","p":["*%_"]},"n":"resume","k":"m","m":0},{"s":{"r":"Mu","p":["*%_"]},"n":"reset-backtrace","k":"m","m":0},{"k":"m","m":0,"s":{"r":"Bool","p":["*%_"]},"n":"is-compile-time"},{"s":{"p":["$bt?","*%_"],"r":"Mu"},"n":"throw","m":0,"k":"m"},{"n":"fail","s":{"r":"Mu","p":["*%_"]},"m":0,"k":"m"},{"m":1,"k":"m","s":{"p":["*%_"],"r":"Mu"},"n":"Str"},{"n":"Str","s":{"p":["*%_"],"r":"Mu"},"k":"m","m":1},{"s":{"r":"Mu","p":["*%_"]},"n":"Str","k":"m","m":1},{"m":0,"k":"m","n":"die","s":{"p":["*%_"],"r":"Mu"}},{"s":{"r":"Mu","p":["*%_"]},"n":"rethrow","k":"m","m":0},{"k":"m","m":0,"s":{"r":"Mu","p":["*%_"]},"n":"backtrace"},{"n":"gist","s":{"r":"Mu","p":["*%_"]},"k":"m","m":1},{"m":1,"k":"m","n":"gist","s":{"p":["*%_"],"r":"Mu"}},{"s":{"r":"Mu","p":["*%_"]},"n":"gist","m":1,"k":"m"},{"k":"m","m":0,"n":"vault-backtrace","s":{"r":"Mu","p":["*%_"]}},{"n":"BUILDALL","s":{"r":"Mu","p":["@auto","%init","*%_"]},"m":0,"k":"s"}],"k":"c","b":"A","a":[{"k":"v","n":"$.parameter","t":"Mu"},{"k":"v","t":"Mu","n":"$.filename"},{"n":"$.pos","t":"Mu","k":"v"},{"k":"v","n":"$.line","t":"Mu"},{"k":"v","t":"Mu","n":"$.column"},{"n":"@.modules","t":"Positional","k":"v"},{"k":"v","t":"Mu","n":"$.is-compile-time"},{"k":"v","n":"$.pre","t":"Mu"},{"k":"v","t":"Mu","n":"$.post"},{"n":"@.highexpect","t":"Positional","k":"v"},{"n":"$!ex","t":"Mu","k":"v"},{"k":"v","n":"$!bt","t":"Mu"}]},{"t":"X::Parameter::TypedSlurpy","n":"X::Parameter::TypedSlurpy","a":[{"t":"Mu","n":"$.kind","k":"v"},{"n":"$.filename","t":"Mu","k":"v"},{"k":"v","n":"$.pos","t":"Mu"},{"t":"Mu","n":"$.line","k":"v"},{"n":"$.column","t":"Mu","k":"v"},{"k":"v","t":"Positional","n":"@.modules"},{"n":"$.is-compile-time","t":"Mu","k":"v"},{"k":"v","t":"Mu","n":"$.pre"},{"k":"v","n":"$.post","t":"Mu"},{"k":"v","n":"@.highexpect","t":"Positional"},{"k":"v","t":"Mu","n":"$!ex"},{"k":"v","n":"$!bt","t":"Mu"}],"b":"A","k":"c","m":[{"s":{"r":"Mu","p":["*%_"]},"n":"message","m":0,"k":"m"},{"n":"sorry_heading","s":{"p":["*%_"],"r":"Mu"},"k":"m","m":0},{"n":"SET_FILE_LINE","s":{"p":["$file","$line","*%_"],"r":"Mu"},"k":"m","m":0},{"n":"gist","s":{"r":"Mu","p":["*%_"]},"m":1,"k":"m"},{"m":1,"k":"m","s":{"r":"Mu","p":["*%_"]},"n":"gist"},{"s":{"p":["*%_"],"r":"Mu"},"n":"gist","k":"m","m":1},{"m":1,"k":"m","s":{"p":[":$sorry = Bool::True",":$expect = Bool::True","*%_"],"r":"Mu"},"n":"gist"},{"s":{"p":["*%_"],"r":"Mu"},"n":"kind","m":0,"k":"m"},{"m":0,"k":"m","s":{"r":"Mu","p":["*%_"]},"n":"filename"},{"k":"m","m":0,"s":{"r":"Mu","p":["*%_"]},"n":"pos"},{"m":0,"k":"m","s":{"p":["*%_"],"r":"Mu"},"n":"line"},{"m":0,"k":"m","n":"column","s":{"p":["*%_"],"r":"Mu"}},{"k":"m","m":0,"n":"modules","s":{"r":"Mu","p":["*%_"]}},{"k":"m","m":0,"n":"is-compile-time","s":{"r":"Mu","p":["*%_"]}},{"s":{"p":["*%_"],"r":"Mu"},"n":"pre","k":"m","m":0},{"s":{"p":["*%_"],"r":"Mu"},"n":"post","m":0,"k":"m"},{"k":"m","m":0,"n":"highexpect","s":{"p":["*%_"],"r":"Mu"}},{"s":{"r":"Mu","p":["@auto","%init","*%_"]},"n":"BUILDALL","k":"s","m":0},{"n":"resume","s":{"p":["*%_"],"r":"Bool"},"k":"m","m":0},{"m":0,"k":"m","n":"reset-backtrace","s":{"r":"Mu","p":["*%_"]}},{"n":"is-compile-time","s":{"p":["*%_"],"r":"Bool"},"k":"m","m":0},{"n":"throw","s":{"r":"Mu","p":["$bt?","*%_"]},"m":0,"k":"m"},{"s":{"r":"Mu","p":["*%_"]},"n":"fail","k":"m","m":0},{"s":{"p":["*%_"],"r":"Mu"},"n":"Str","m":1,"k":"m"},{"m":1,"k":"m","n":"Str","s":{"r":"Mu","p":["*%_"]}},{"m":1,"k":"m","n":"Str","s":{"r":"Mu","p":["*%_"]}},{"k":"m","m":0,"n":"die","s":{"r":"Mu","p":["*%_"]}},{"n":"rethrow","s":{"r":"Mu","p":["*%_"]},"m":0,"k":"m"},{"n":"backtrace","s":{"r":"Mu","p":["*%_"]},"k":"m","m":0},{"k":"m","m":1,"n":"gist","s":{"p":["*%_"],"r":"Mu"}},{"s":{"p":["*%_"],"r":"Mu"},"n":"gist","m":1,"k":"m"},{"s":{"p":["*%_"],"r":"Mu"},"n":"gist","k":"m","m":1},{"m":0,"k":"m","n":"vault-backtrace","s":{"p":["*%_"],"r":"Mu"}},{"s":{"r":"Mu","p":["@auto","%init","*%_"]},"n":"BUILDALL","m":0,"k":"s"}]},{"b":"A","a":[{"k":"v","t":"Mu","n":"$.parameter"},{"n":"$.twigil","t":"Mu","k":"v"},{"k":"v","n":"$.filename","t":"Mu"},{"t":"Mu","n":"$.pos","k":"v"},{"k":"v","n":"$.line","t":"Mu"},{"k":"v","t":"Mu","n":"$.column"},{"k":"v","t":"Positional","n":"@.modules"},{"k":"v","t":"Mu","n":"$.is-compile-time"},{"k":"v","t":"Mu","n":"$.pre"},{"k":"v","t":"Mu","n":"$.post"},{"k":"v","n":"@.highexpect","t":"Positional"},{"t":"Mu","n":"$!ex","k":"v"},{"k":"v","t":"Mu","n":"$!bt"}],"k":"c","m":[{"n":"message","s":{"r":"Mu","p":["*%_"]},"m":0,"k":"m"},{"m":0,"k":"m","s":{"r":"Mu","p":["*%_"]},"n":"sorry_heading"},{"k":"m","m":0,"s":{"p":["$file","$line","*%_"],"r":"Mu"},"n":"SET_FILE_LINE"},{"m":1,"k":"m","n":"gist","s":{"p":["*%_"],"r":"Mu"}},{"m":1,"k":"m","s":{"r":"Mu","p":["*%_"]},"n":"gist"},{"k":"m","m":1,"s":{"r":"Mu","p":["*%_"]},"n":"gist"},{"k":"m","m":1,"s":{"r":"Mu","p":[":$sorry = Bool::True",":$expect = Bool::True","*%_"]},"n":"gist"},{"n":"parameter","s":{"r":"Mu","p":["*%_"]},"m":0,"k":"m"},{"s":{"r":"Mu","p":["*%_"]},"n":"twigil","m":0,"k":"m"},{"m":0,"k":"m","s":{"p":["*%_"],"r":"Mu"},"n":"filename"},{"s":{"r":"Mu","p":["*%_"]},"n":"pos","m":0,"k":"m"},{"k":"m","m":0,"s":{"r":"Mu","p":["*%_"]},"n":"line"},{"n":"column","s":{"r":"Mu","p":["*%_"]},"k":"m","m":0},{"m":0,"k":"m","s":{"p":["*%_"],"r":"Mu"},"n":"modules"},{"s":{"r":"Mu","p":["*%_"]},"n":"is-compile-time","m":0,"k":"m"},{"s":{"p":["*%_"],"r":"Mu"},"n":"pre","k":"m","m":0},{"s":{"r":"Mu","p":["*%_"]},"n":"post","m":0,"k":"m"},{"n":"highexpect","s":{"r":"Mu","p":["*%_"]},"k":"m","m":0},{"s":{"p":["@auto","%init","*%_"],"r":"Mu"},"n":"BUILDALL","k":"s","m":0},{"k":"m","m":0,"n":"resume","s":{"p":["*%_"],"r":"Bool"}},{"n":"reset-backtrace","s":{"r":"Mu","p":["*%_"]},"k":"m","m":0},{"s":{"r":"Bool","p":["*%_"]},"n":"is-compile-time","k":"m","m":0},{"k":"m","m":0,"n":"throw","s":{"r":"Mu","p":["$bt?","*%_"]}},{"m":0,"k":"m","s":{"r":"Mu","p":["*%_"]},"n":"fail"},{"k":"m","m":1,"s":{"p":["*%_"],"r":"Mu"},"n":"Str"},{"k":"m","m":1,"n":"Str","s":{"r":"Mu","p":["*%_"]}},{"s":{"p":["*%_"],"r":"Mu"},"n":"Str","m":1,"k":"m"},{"k":"m","m":0,"s":{"p":["*%_"],"r":"Mu"},"n":"die"},{"s":{"r":"Mu","p":["*%_"]},"n":"rethrow","m":0,"k":"m"},{"n":"backtrace","s":{"r":"Mu","p":["*%_"]},"m":0,"k":"m"},{"k":"m","m":1,"n":"gist","s":{"r":"Mu","p":["*%_"]}},{"s":{"r":"Mu","p":["*%_"]},"n":"gist","k":"m","m":1},{"n":"gist","s":{"p":["*%_"],"r":"Mu"},"k":"m","m":1},{"m":0,"k":"m","n":"vault-backtrace","s":{"r":"Mu","p":["*%_"]}},{"s":{"r":"Mu","p":["@auto","%init","*%_"]},"n":"BUILDALL","k":"s","m":0}],"d":"TITLE\nclass X::Parameter::Twigil\n\nSUBTITLE\nCompilation error due to an unallowed twigil in a signature\n\n    class X::Parameter::Twigil does X::Comp { }\n\nThrown when a parameter in a signature has a twigil that it may not have.\nOnly !, . and * as twigils are allowed.\n\nExample:\n\n    sub f($=foo) { }\n\n\ndies with\n\n    ===SORRY!===\n    In signature parameter $=foo, it is illegal to use the = twigil\n\n\n","n":"X::Parameter::Twigil","t":"X::Parameter::Twigil"},{"k":"c","m":[{"s":{"r":"Mu","p":["*%_"]},"n":"message","m":0,"k":"m"},{"n":"sorry_heading","s":{"p":["*%_"],"r":"Mu"},"k":"m","m":0},{"n":"SET_FILE_LINE","s":{"r":"Mu","p":["$file","$line","*%_"]},"m":0,"k":"m"},{"m":1,"k":"m","n":"gist","s":{"p":["*%_"],"r":"Mu"}},{"k":"m","m":1,"n":"gist","s":{"p":["*%_"],"r":"Mu"}},{"k":"m","m":1,"s":{"r":"Mu","p":["*%_"]},"n":"gist"},{"s":{"p":[":$sorry = Bool::True",":$expect = Bool::True","*%_"],"r":"Mu"},"n":"gist","k":"m","m":1},{"m":0,"k":"m","s":{"r":"Mu","p":["*%_"]},"n":"parameter"},{"s":{"p":["*%_"],"r":"Mu"},"n":"right","k":"m","m":0},{"s":{"p":["*%_"],"r":"Mu"},"n":"filename","k":"m","m":0},{"m":0,"k":"m","s":{"p":["*%_"],"r":"Mu"},"n":"pos"},{"k":"m","m":0,"s":{"p":["*%_"],"r":"Mu"},"n":"line"},{"s":{"p":["*%_"],"r":"Mu"},"n":"column","m":0,"k":"m"},{"s":{"r":"Mu","p":["*%_"]},"n":"modules","k":"m","m":0},{"s":{"r":"Mu","p":["*%_"]},"n":"is-compile-time","m":0,"k":"m"},{"n":"pre","s":{"p":["*%_"],"r":"Mu"},"m":0,"k":"m"},{"s":{"p":["*%_"],"r":"Mu"},"n":"post","k":"m","m":0},{"s":{"r":"Mu","p":["*%_"]},"n":"highexpect","m":0,"k":"m"},{"m":0,"k":"s","s":{"p":["@auto","%init","*%_"],"r":"Mu"},"n":"BUILDALL"},{"m":0,"k":"m","s":{"r":"Bool","p":["*%_"]},"n":"resume"},{"k":"m","m":0,"n":"reset-backtrace","s":{"r":"Mu","p":["*%_"]}},{"s":{"r":"Bool","p":["*%_"]},"n":"is-compile-time","m":0,"k":"m"},{"k":"m","m":0,"s":{"p":["$bt?","*%_"],"r":"Mu"},"n":"throw"},{"m":0,"k":"m","n":"fail","s":{"r":"Mu","p":["*%_"]}},{"m":1,"k":"m","n":"Str","s":{"p":["*%_"],"r":"Mu"}},{"s":{"p":["*%_"],"r":"Mu"},"n":"Str","k":"m","m":1},{"s":{"r":"Mu","p":["*%_"]},"n":"Str","k":"m","m":1},{"m":0,"k":"m","s":{"r":"Mu","p":["*%_"]},"n":"die"},{"m":0,"k":"m","n":"rethrow","s":{"r":"Mu","p":["*%_"]}},{"s":{"p":["*%_"],"r":"Mu"},"n":"backtrace","m":0,"k":"m"},{"n":"gist","s":{"r":"Mu","p":["*%_"]},"m":1,"k":"m"},{"m":1,"k":"m","n":"gist","s":{"p":["*%_"],"r":"Mu"}},{"m":1,"k":"m","n":"gist","s":{"p":["*%_"],"r":"Mu"}},{"n":"vault-backtrace","s":{"r":"Mu","p":["*%_"]},"k":"m","m":0},{"s":{"r":"Mu","p":["@auto","%init","*%_"]},"n":"BUILDALL","m":0,"k":"s"}],"b":"A","a":[{"t":"Mu","n":"$.parameter","k":"v"},{"k":"v","t":"Mu","n":"$.right"},{"n":"$.filename","t":"Mu","k":"v"},{"t":"Mu","n":"$.pos","k":"v"},{"t":"Mu","n":"$.line","k":"v"},{"t":"Mu","n":"$.column","k":"v"},{"k":"v","t":"Positional","n":"@.modules"},{"n":"$.is-compile-time","t":"Mu","k":"v"},{"t":"Mu","n":"$.pre","k":"v"},{"t":"Mu","n":"$.post","k":"v"},{"t":"Positional","n":"@.highexpect","k":"v"},{"t":"Mu","n":"$!ex","k":"v"},{"n":"$!bt","t":"Mu","k":"v"}],"d":"TITLE\nclass X::Parameter::Placeholder\n\nSUBTITLE\nCompilation error due to an unallowed placeholder in a signature\n\n    class X::Parameter::Placeholder does X::Comp { }\n\nThrown when a placeholder parameter is used inside a signature where a\nnormal parameter is expected. The reason is often that a named parameter\n:$param was misspelled as $:param.\n\nFor example\n\n    sub f($:param) { }\n\n\ndies with\n\n    ===SORRY!===\n    In signature parameter, placeholder variables like $:param are illegal\n    you probably meant a named parameter: ':$param'\n\n\n","n":"X::Parameter::Placeholder","t":"X::Parameter::Placeholder"},{"a":[{"k":"v","t":"Mu","n":"$.got"},{"k":"v","t":"Mu","n":"$.symbol"},{"n":"$!ex","t":"Mu","k":"v"},{"t":"Mu","n":"$!bt","k":"v"}],"b":"A","k":"c","m":[{"k":"m","m":0,"n":"message","s":{"r":"Mu","p":["*%_"]}},{"k":"m","m":0,"n":"got","s":{"p":["*%_"],"r":"Mu"}},{"m":0,"k":"m","s":{"r":"Mu","p":["*%_"]},"n":"symbol"},{"m":0,"k":"s","s":{"r":"Mu","p":["@auto","%init","*%_"]},"n":"BUILDALL"},{"n":"resume","s":{"r":"Bool","p":["*%_"]},"k":"m","m":0},{"k":"m","m":0,"n":"reset-backtrace","s":{"p":["*%_"],"r":"Mu"}},{"n":"is-compile-time","s":{"p":["*%_"],"r":"Bool"},"k":"m","m":0},{"m":0,"k":"m","n":"throw","s":{"r":"Mu","p":["$bt?","*%_"]}},{"k":"m","m":0,"n":"fail","s":{"p":["*%_"],"r":"Mu"}},{"n":"Str","s":{"p":["*%_"],"r":"Mu"},"k":"m","m":1},{"m":1,"k":"m","n":"Str","s":{"p":["*%_"],"r":"Mu"}},{"n":"Str","s":{"r":"Mu","p":["*%_"]},"m":1,"k":"m"},{"k":"m","m":0,"s":{"p":["*%_"],"r":"Mu"},"n":"die"},{"n":"rethrow","s":{"r":"Mu","p":["*%_"]},"m":0,"k":"m"},{"n":"backtrace","s":{"p":["*%_"],"r":"Mu"},"k":"m","m":0},{"s":{"p":["*%_"],"r":"Mu"},"n":"gist","m":1,"k":"m"},{"k":"m","m":1,"s":{"r":"Mu","p":["*%_"]},"n":"gist"},{"k":"m","m":1,"n":"gist","s":{"p":["*%_"],"r":"Mu"}},{"k":"m","m":0,"n":"vault-backtrace","s":{"r":"Mu","p":["*%_"]}},{"n":"BUILDALL","s":{"r":"Mu","p":["@auto","%init","*%_"]},"k":"s","m":0}],"n":"X::Parameter::RW","t":"X::Parameter::RW"},{"t":"X::Parameter::AfterDefault","n":"X::Parameter::AfterDefault","b":"A","a":[{"t":"Mu","n":"$.type","k":"v"},{"k":"v","t":"Mu","n":"$.modifier"},{"k":"v","n":"$.default","t":"Mu"},{"n":"$.filename","t":"Mu","k":"v"},{"t":"Mu","n":"$.pos","k":"v"},{"k":"v","t":"Mu","n":"$.line"},{"n":"$.column","t":"Mu","k":"v"},{"t":"Positional","n":"@.modules","k":"v"},{"t":"Mu","n":"$.is-compile-time","k":"v"},{"n":"$.pre","t":"Mu","k":"v"},{"k":"v","n":"$.post","t":"Mu"},{"t":"Positional","n":"@.highexpect","k":"v"},{"k":"v","t":"Mu","n":"$!ex"},{"n":"$!bt","t":"Mu","k":"v"}],"m":[{"s":{"r":"Mu","p":["*%_"]},"n":"message","k":"m","m":0},{"k":"m","m":0,"n":"sorry_heading","s":{"p":["*%_"],"r":"Mu"}},{"n":"SET_FILE_LINE","s":{"p":["$file","$line","*%_"],"r":"Mu"},"m":0,"k":"m"},{"k":"m","m":1,"s":{"p":["*%_"],"r":"Mu"},"n":"gist"},{"n":"gist","s":{"p":["*%_"],"r":"Mu"},"k":"m","m":1},{"s":{"r":"Mu","p":["*%_"]},"n":"gist","k":"m","m":1},{"m":1,"k":"m","n":"gist","s":{"r":"Mu","p":[":$sorry = Bool::True",":$expect = Bool::True","*%_"]}},{"s":{"r":"Mu","p":["*%_"]},"n":"type","m":0,"k":"m"},{"n":"modifier","s":{"r":"Mu","p":["*%_"]},"m":0,"k":"m"},{"k":"m","m":0,"s":{"r":"Mu","p":["*%_"]},"n":"default"},{"m":0,"k":"m","s":{"p":["*%_"],"r":"Mu"},"n":"filename"},{"n":"pos","s":{"p":["*%_"],"r":"Mu"},"k":"m","m":0},{"k":"m","m":0,"s":{"r":"Mu","p":["*%_"]},"n":"line"},{"m":0,"k":"m","n":"column","s":{"p":["*%_"],"r":"Mu"}},{"m":0,"k":"m","n":"modules","s":{"r":"Mu","p":["*%_"]}},{"n":"is-compile-time","s":{"r":"Mu","p":["*%_"]},"k":"m","m":0},{"s":{"r":"Mu","p":["*%_"]},"n":"pre","m":0,"k":"m"},{"s":{"r":"Mu","p":["*%_"]},"n":"post","m":0,"k":"m"},{"m":0,"k":"m","s":{"r":"Mu","p":["*%_"]},"n":"highexpect"},{"k":"s","m":0,"n":"BUILDALL","s":{"p":["@auto","%init","*%_"],"r":"Mu"}},{"m":0,"k":"m","s":{"p":["*%_"],"r":"Bool"},"n":"resume"},{"m":0,"k":"m","s":{"r":"Mu","p":["*%_"]},"n":"reset-backtrace"},{"k":"m","m":0,"s":{"p":["*%_"],"r":"Bool"},"n":"is-compile-time"},{"k":"m","m":0,"s":{"p":["$bt?","*%_"],"r":"Mu"},"n":"throw"},{"m":0,"k":"m","n":"fail","s":{"p":["*%_"],"r":"Mu"}},{"k":"m","m":1,"n":"Str","s":{"r":"Mu","p":["*%_"]}},{"k":"m","m":1,"s":{"p":["*%_"],"r":"Mu"},"n":"Str"},{"k":"m","m":1,"n":"Str","s":{"r":"Mu","p":["*%_"]}},{"m":0,"k":"m","s":{"r":"Mu","p":["*%_"]},"n":"die"},{"k":"m","m":0,"n":"rethrow","s":{"r":"Mu","p":["*%_"]}},{"m":0,"k":"m","s":{"r":"Mu","p":["*%_"]},"n":"backtrace"},{"s":{"r":"Mu","p":["*%_"]},"n":"gist","k":"m","m":1},{"k":"m","m":1,"n":"gist","s":{"r":"Mu","p":["*%_"]}},{"s":{"r":"Mu","p":["*%_"]},"n":"gist","k":"m","m":1},{"s":{"p":["*%_"],"r":"Mu"},"n":"vault-backtrace","m":0,"k":"m"},{"k":"s","m":0,"n":"BUILDALL","s":{"r":"Mu","p":["@auto","%init","*%_"]}}],"k":"c"},{"t":"X::Parameter::InvalidConcreteness","n":"X::Parameter::InvalidConcreteness","m":[{"m":0,"k":"m","s":{"p":["*%_"],"r":"Mu"},"n":"message"},{"s":{"r":"Mu","p":["*%_"]},"n":"expected","m":0,"k":"m"},{"k":"m","m":0,"n":"got","s":{"r":"Mu","p":["*%_"]}},{"k":"m","m":0,"n":"routine","s":{"p":["*%_"],"r":"Mu"}},{"k":"m","m":0,"n":"param","s":{"p":["*%_"],"r":"Mu"}},{"s":{"p":["*%_"],"r":"Mu"},"n":"should-be-concrete","m":0,"k":"m"},{"s":{"r":"Mu","p":["*%_"]},"n":"param-is-invocant","k":"m","m":0},{"m":0,"k":"s","n":"BUILDALL","s":{"r":"Mu","p":["@auto","%init","*%_"]}},{"k":"m","m":0,"n":"resume","s":{"r":"Bool","p":["*%_"]}},{"s":{"r":"Mu","p":["*%_"]},"n":"reset-backtrace","k":"m","m":0},{"k":"m","m":0,"s":{"r":"Bool","p":["*%_"]},"n":"is-compile-time"},{"s":{"r":"Mu","p":["$bt?","*%_"]},"n":"throw","k":"m","m":0},{"s":{"p":["*%_"],"r":"Mu"},"n":"fail","m":0,"k":"m"},{"m":1,"k":"m","n":"Str","s":{"r":"Mu","p":["*%_"]}},{"m":1,"k":"m","n":"Str","s":{"p":["*%_"],"r":"Mu"}},{"s":{"p":["*%_"],"r":"Mu"},"n":"Str","k":"m","m":1},{"m":0,"k":"m","n":"die","s":{"p":["*%_"],"r":"Mu"}},{"k":"m","m":0,"n":"rethrow","s":{"p":["*%_"],"r":"Mu"}},{"k":"m","m":0,"s":{"p":["*%_"],"r":"Mu"},"n":"backtrace"},{"m":1,"k":"m","s":{"r":"Mu","p":["*%_"]},"n":"gist"},{"k":"m","m":1,"s":{"r":"Mu","p":["*%_"]},"n":"gist"},{"n":"gist","s":{"r":"Mu","p":["*%_"]},"k":"m","m":1},{"n":"vault-backtrace","s":{"p":["*%_"],"r":"Mu"},"m":0,"k":"m"},{"m":0,"k":"s","s":{"p":["@auto","%init","*%_"],"r":"Mu"},"n":"BUILDALL"}],"k":"c","b":"A","a":[{"n":"$.expected","t":"Mu","k":"v"},{"t":"Mu","n":"$.got","k":"v"},{"k":"v","n":"$.routine","t":"Mu"},{"t":"Mu","n":"$.param","k":"v"},{"k":"v","n":"$.should-be-concrete","t":"Bool"},{"t":"Bool","n":"$.param-is-invocant","k":"v"},{"k":"v","t":"Mu","n":"$!ex"},{"k":"v","n":"$!bt","t":"Mu"}]},{"m":[{"k":"m","m":0,"n":"message","s":{"p":["*%_"],"r":"Mu"}},{"n":"sorry_heading","s":{"p":["*%_"],"r":"Mu"},"m":0,"k":"m"},{"k":"m","m":0,"n":"SET_FILE_LINE","s":{"r":"Mu","p":["$file","$line","*%_"]}},{"m":1,"k":"m","n":"gist","s":{"p":["*%_"],"r":"Mu"}},{"k":"m","m":1,"s":{"r":"Mu","p":["*%_"]},"n":"gist"},{"s":{"p":["*%_"],"r":"Mu"},"n":"gist","m":1,"k":"m"},{"k":"m","m":1,"s":{"p":[":$sorry = Bool::True",":$expect = Bool::True","*%_"],"r":"Mu"},"n":"gist"},{"s":{"p":["*%_"],"r":"Mu"},"n":"misplaced","k":"m","m":0},{"k":"m","m":0,"n":"parameter","s":{"p":["*%_"],"r":"Mu"}},{"k":"m","m":0,"n":"after","s":{"r":"Mu","p":["*%_"]}},{"n":"filename","s":{"p":["*%_"],"r":"Mu"},"m":0,"k":"m"},{"n":"pos","s":{"r":"Mu","p":["*%_"]},"k":"m","m":0},{"m":0,"k":"m","s":{"p":["*%_"],"r":"Mu"},"n":"line"},{"s":{"p":["*%_"],"r":"Mu"},"n":"column","k":"m","m":0},{"n":"modules","s":{"p":["*%_"],"r":"Mu"},"k":"m","m":0},{"k":"m","m":0,"n":"is-compile-time","s":{"r":"Mu","p":["*%_"]}},{"n":"pre","s":{"p":["*%_"],"r":"Mu"},"m":0,"k":"m"},{"k":"m","m":0,"s":{"p":["*%_"],"r":"Mu"},"n":"post"},{"k":"m","m":0,"s":{"p":["*%_"],"r":"Mu"},"n":"highexpect"},{"m":0,"k":"s","n":"BUILDALL","s":{"p":["@auto","%init","*%_"],"r":"Mu"}},{"s":{"r":"Bool","p":["*%_"]},"n":"resume","m":0,"k":"m"},{"s":{"p":["*%_"],"r":"Mu"},"n":"reset-backtrace","m":0,"k":"m"},{"s":{"r":"Bool","p":["*%_"]},"n":"is-compile-time","k":"m","m":0},{"m":0,"k":"m","n":"throw","s":{"p":["$bt?","*%_"],"r":"Mu"}},{"s":{"r":"Mu","p":["*%_"]},"n":"fail","k":"m","m":0},{"k":"m","m":1,"s":{"p":["*%_"],"r":"Mu"},"n":"Str"},{"n":"Str","s":{"r":"Mu","p":["*%_"]},"k":"m","m":1},{"n":"Str","s":{"p":["*%_"],"r":"Mu"},"k":"m","m":1},{"m":0,"k":"m","n":"die","s":{"p":["*%_"],"r":"Mu"}},{"m":0,"k":"m","n":"rethrow","s":{"r":"Mu","p":["*%_"]}},{"n":"backtrace","s":{"p":["*%_"],"r":"Mu"},"m":0,"k":"m"},{"s":{"r":"Mu","p":["*%_"]},"n":"gist","m":1,"k":"m"},{"k":"m","m":1,"s":{"r":"Mu","p":["*%_"]},"n":"gist"},{"n":"gist","s":{"r":"Mu","p":["*%_"]},"m":1,"k":"m"},{"s":{"p":["*%_"],"r":"Mu"},"n":"vault-backtrace","m":0,"k":"m"},{"s":{"r":"Mu","p":["@auto","%init","*%_"]},"n":"BUILDALL","k":"s","m":0}],"k":"c","b":"A","a":[{"t":"Mu","n":"$.misplaced","k":"v"},{"t":"Mu","n":"$.parameter","k":"v"},{"t":"Mu","n":"$.after","k":"v"},{"k":"v","t":"Mu","n":"$.filename"},{"n":"$.pos","t":"Mu","k":"v"},{"n":"$.line","t":"Mu","k":"v"},{"t":"Mu","n":"$.column","k":"v"},{"k":"v","t":"Positional","n":"@.modules"},{"k":"v","n":"$.is-compile-time","t":"Mu"},{"k":"v","t":"Mu","n":"$.pre"},{"k":"v","n":"$.post","t":"Mu"},{"t":"Positional","n":"@.highexpect","k":"v"},{"t":"Mu","n":"$!ex","k":"v"},{"k":"v","t":"Mu","n":"$!bt"}],"d":"TITLE\nclass X::Parameter::WrongOrder\n\nSUBTITLE\nCompilation error due to passing parameters in the wrong order\n\n    class X::Parameter::WrongOrder does X::Comp { }\n\nCompile time error that is thrown when parameters in a signature in the\nwrong order (for example if an optional parameter comes before a mandatory\nparameter).\n\nFor example\n\n    sub f($a?, $b) { }\n\n\ndies with\n\n    ===SORRY!===\n    Cannot put required parameter $b after optional parameters\n\n\n","n":"X::Parameter::WrongOrder","t":"X::Parameter::WrongOrder"},{"n":"X::Parameter::InvalidType","t":"X::Parameter::InvalidType","k":"c","m":[{"s":{"p":["*%_"],"r":"Mu"},"n":"message","k":"m","m":0},{"n":"sorry_heading","s":{"r":"Mu","p":["*%_"]},"m":0,"k":"m"},{"s":{"r":"Mu","p":["$file","$line","*%_"]},"n":"SET_FILE_LINE","m":0,"k":"m"},{"s":{"p":["*%_"],"r":"Mu"},"n":"gist","k":"m","m":1},{"s":{"p":["*%_"],"r":"Mu"},"n":"gist","m":1,"k":"m"},{"s":{"r":"Mu","p":["*%_"]},"n":"gist","k":"m","m":1},{"s":{"p":[":$sorry = Bool::True",":$expect = Bool::True","*%_"],"r":"Mu"},"n":"gist","m":1,"k":"m"},{"s":{"r":"Mu","p":["*%_"]},"n":"typename","k":"m","m":0},{"s":{"p":["*%_"],"r":"Mu"},"n":"suggestions","k":"m","m":0},{"k":"m","m":0,"n":"filename","s":{"r":"Mu","p":["*%_"]}},{"n":"pos","s":{"p":["*%_"],"r":"Mu"},"k":"m","m":0},{"k":"m","m":0,"s":{"p":["*%_"],"r":"Mu"},"n":"line"},{"s":{"r":"Mu","p":["*%_"]},"n":"column","m":0,"k":"m"},{"m":0,"k":"m","s":{"r":"Mu","p":["*%_"]},"n":"modules"},{"k":"m","m":0,"n":"is-compile-time","s":{"r":"Mu","p":["*%_"]}},{"s":{"p":["*%_"],"r":"Mu"},"n":"pre","m":0,"k":"m"},{"s":{"r":"Mu","p":["*%_"]},"n":"post","m":0,"k":"m"},{"k":"m","m":0,"n":"highexpect","s":{"r":"Mu","p":["*%_"]}},{"s":{"p":["@auto","%init","*%_"],"r":"Mu"},"n":"BUILDALL","m":0,"k":"s"},{"s":{"p":["*%_"],"r":"Bool"},"n":"resume","k":"m","m":0},{"s":{"r":"Mu","p":["*%_"]},"n":"reset-backtrace","m":0,"k":"m"},{"n":"is-compile-time","s":{"p":["*%_"],"r":"Bool"},"k":"m","m":0},{"m":0,"k":"m","n":"throw","s":{"p":["$bt?","*%_"],"r":"Mu"}},{"s":{"p":["*%_"],"r":"Mu"},"n":"fail","m":0,"k":"m"},{"s":{"p":["*%_"],"r":"Mu"},"n":"Str","m":1,"k":"m"},{"s":{"r":"Mu","p":["*%_"]},"n":"Str","k":"m","m":1},{"m":1,"k":"m","s":{"r":"Mu","p":["*%_"]},"n":"Str"},{"s":{"r":"Mu","p":["*%_"]},"n":"die","m":0,"k":"m"},{"m":0,"k":"m","s":{"p":["*%_"],"r":"Mu"},"n":"rethrow"},{"k":"m","m":0,"n":"backtrace","s":{"r":"Mu","p":["*%_"]}},{"m":1,"k":"m","n":"gist","s":{"p":["*%_"],"r":"Mu"}},{"n":"gist","s":{"r":"Mu","p":["*%_"]},"k":"m","m":1},{"m":1,"k":"m","s":{"r":"Mu","p":["*%_"]},"n":"gist"},{"n":"vault-backtrace","s":{"p":["*%_"],"r":"Mu"},"m":0,"k":"m"},{"s":{"p":["@auto","%init","*%_"],"r":"Mu"},"n":"BUILDALL","m":0,"k":"s"}],"b":"A","a":[{"t":"Mu","n":"$.typename","k":"v"},{"k":"v","n":"@.suggestions","t":"Positional"},{"n":"$.filename","t":"Mu","k":"v"},{"t":"Mu","n":"$.pos","k":"v"},{"n":"$.line","t":"Mu","k":"v"},{"k":"v","n":"$.column","t":"Mu"},{"k":"v","n":"@.modules","t":"Positional"},{"t":"Mu","n":"$.is-compile-time","k":"v"},{"k":"v","t":"Mu","n":"$.pre"},{"n":"$.post","t":"Mu","k":"v"},{"k":"v","t":"Positional","n":"@.highexpect"},{"t":"Mu","n":"$!ex","k":"v"},{"t":"Mu","n":"$!bt","k":"v"}]},{"t":"X::Parameter::BadType","n":"X::Parameter::BadType","b":"A","a":[{"k":"v","n":"$.type","t":"Mu"},{"k":"v","n":"$.filename","t":"Mu"},{"t":"Mu","n":"$.pos","k":"v"},{"k":"v","n":"$.line","t":"Mu"},{"n":"$.column","t":"Mu","k":"v"},{"t":"Positional","n":"@.modules","k":"v"},{"k":"v","t":"Mu","n":"$.is-compile-time"},{"k":"v","t":"Mu","n":"$.pre"},{"t":"Mu","n":"$.post","k":"v"},{"k":"v","t":"Positional","n":"@.highexpect"},{"t":"Mu","n":"$!ex","k":"v"},{"k":"v","t":"Mu","n":"$!bt"}],"m":[{"s":{"r":"Mu","p":["*%_"]},"n":"message","m":0,"k":"m"},{"s":{"p":["*%_"],"r":"Mu"},"n":"sorry_heading","m":0,"k":"m"},{"k":"m","m":0,"s":{"p":["$file","$line","*%_"],"r":"Mu"},"n":"SET_FILE_LINE"},{"n":"gist","s":{"r":"Mu","p":["*%_"]},"k":"m","m":1},{"k":"m","m":1,"s":{"r":"Mu","p":["*%_"]},"n":"gist"},{"n":"gist","s":{"p":["*%_"],"r":"Mu"},"k":"m","m":1},{"m":1,"k":"m","n":"gist","s":{"p":[":$sorry = Bool::True",":$expect = Bool::True","*%_"],"r":"Mu"}},{"m":0,"k":"m","n":"type","s":{"r":"Mu","p":["*%_"]}},{"n":"filename","s":{"r":"Mu","p":["*%_"]},"m":0,"k":"m"},{"k":"m","m":0,"s":{"r":"Mu","p":["*%_"]},"n":"pos"},{"s":{"r":"Mu","p":["*%_"]},"n":"line","m":0,"k":"m"},{"m":0,"k":"m","n":"column","s":{"p":["*%_"],"r":"Mu"}},{"k":"m","m":0,"s":{"r":"Mu","p":["*%_"]},"n":"modules"},{"k":"m","m":0,"s":{"r":"Mu","p":["*%_"]},"n":"is-compile-time"},{"n":"pre","s":{"r":"Mu","p":["*%_"]},"m":0,"k":"m"},{"s":{"r":"Mu","p":["*%_"]},"n":"post","k":"m","m":0},{"k":"m","m":0,"s":{"r":"Mu","p":["*%_"]},"n":"highexpect"},{"k":"s","m":0,"s":{"p":["@auto","%init","*%_"],"r":"Mu"},"n":"BUILDALL"},{"m":0,"k":"m","s":{"r":"Bool","p":["*%_"]},"n":"resume"},{"m":0,"k":"m","n":"reset-backtrace","s":{"p":["*%_"],"r":"Mu"}},{"m":0,"k":"m","n":"is-compile-time","s":{"p":["*%_"],"r":"Bool"}},{"m":0,"k":"m","s":{"r":"Mu","p":["$bt?","*%_"]},"n":"throw"},{"m":0,"k":"m","s":{"r":"Mu","p":["*%_"]},"n":"fail"},{"m":1,"k":"m","s":{"p":["*%_"],"r":"Mu"},"n":"Str"},{"n":"Str","s":{"r":"Mu","p":["*%_"]},"m":1,"k":"m"},{"s":{"p":["*%_"],"r":"Mu"},"n":"Str","k":"m","m":1},{"k":"m","m":0,"s":{"p":["*%_"],"r":"Mu"},"n":"die"},{"k":"m","m":0,"n":"rethrow","s":{"p":["*%_"],"r":"Mu"}},{"k":"m","m":0,"s":{"r":"Mu","p":["*%_"]},"n":"backtrace"},{"n":"gist","s":{"r":"Mu","p":["*%_"]},"k":"m","m":1},{"s":{"r":"Mu","p":["*%_"]},"n":"gist","m":1,"k":"m"},{"m":1,"k":"m","n":"gist","s":{"r":"Mu","p":["*%_"]}},{"m":0,"k":"m","n":"vault-backtrace","s":{"r":"Mu","p":["*%_"]}},{"k":"s","m":0,"s":{"r":"Mu","p":["@auto","%init","*%_"]},"n":"BUILDALL"}],"k":"c"},{"t":"X::TooLateForREPR","n":"X::TooLateForREPR","b":"A","a":[{"t":"Mu","n":"$.type","k":"v"},{"t":"Mu","n":"$.filename","k":"v"},{"t":"Mu","n":"$.pos","k":"v"},{"k":"v","t":"Mu","n":"$.line"},{"n":"$.column","t":"Mu","k":"v"},{"k":"v","t":"Positional","n":"@.modules"},{"k":"v","t":"Mu","n":"$.is-compile-time"},{"k":"v","n":"$.pre","t":"Mu"},{"k":"v","t":"Mu","n":"$.post"},{"k":"v","t":"Positional","n":"@.highexpect"},{"k":"v","n":"$!ex","t":"Mu"},{"n":"$!bt","t":"Mu","k":"v"}],"m":[{"k":"m","m":0,"s":{"p":["*%_"],"r":"Mu"},"n":"message"},{"n":"type","s":{"p":["*%_"],"r":"Mu"},"k":"m","m":0},{"k":"s","m":0,"n":"BUILDALL","s":{"r":"Mu","p":["@auto","%init","*%_"]}},{"s":{"p":["*%_"],"r":"Mu"},"n":"gist","k":"m","m":1},{"s":{"p":["*%_"],"r":"Mu"},"n":"gist","k":"m","m":1},{"m":1,"k":"m","n":"gist","s":{"r":"Mu","p":["*%_"]}},{"n":"gist","s":{"r":"Mu","p":[":$sorry = Bool::True",":$expect = Bool::True","*%_"]},"m":1,"k":"m"},{"m":0,"k":"m","n":"sorry_heading","s":{"r":"Mu","p":["*%_"]}},{"k":"m","m":0,"n":"<anon>","s":{"r":"Mu","p":["*%_"]}},{"m":0,"k":"m","n":"<anon>","s":{"p":["*%_"],"r":"Mu"}},{"s":{"p":["*%_"],"r":"Mu"},"n":"<anon>","k":"m","m":0},{"n":"<anon>","s":{"p":["*%_"],"r":"Mu"},"m":0,"k":"m"},{"s":{"p":["*%_"],"r":"Mu"},"n":"<anon>","k":"m","m":0},{"k":"m","m":0,"n":"<anon>","s":{"p":["*%_"],"r":"Mu"}},{"s":{"p":["*%_"],"r":"Mu"},"n":"<anon>","k":"m","m":0},{"k":"m","m":0,"n":"SET_FILE_LINE","s":{"r":"Mu","p":["$file","$line","*%_"]}},{"s":{"r":"Mu","p":["*%_"]},"n":"<anon>","m":0,"k":"m"},{"s":{"p":["*%_"],"r":"Mu"},"n":"<anon>","m":0,"k":"m"},{"n":"resume","s":{"p":["*%_"],"r":"Bool"},"m":0,"k":"m"},{"k":"m","m":0,"s":{"p":["*%_"],"r":"Mu"},"n":"reset-backtrace"},{"k":"m","m":0,"s":{"r":"Bool","p":["*%_"]},"n":"is-compile-time"},{"n":"throw","s":{"r":"Mu","p":["$bt?","*%_"]},"k":"m","m":0},{"n":"fail","s":{"p":["*%_"],"r":"Mu"},"k":"m","m":0},{"n":"Str","s":{"r":"Mu","p":["*%_"]},"k":"m","m":1},{"m":1,"k":"m","n":"Str","s":{"p":["*%_"],"r":"Mu"}},{"k":"m","m":1,"n":"Str","s":{"p":["*%_"],"r":"Mu"}},{"m":0,"k":"m","s":{"r":"Mu","p":["*%_"]},"n":"die"},{"k":"m","m":0,"s":{"p":["*%_"],"r":"Mu"},"n":"rethrow"},{"n":"backtrace","s":{"p":["*%_"],"r":"Mu"},"m":0,"k":"m"},{"n":"gist","s":{"r":"Mu","p":["*%_"]},"k":"m","m":1},{"k":"m","m":1,"s":{"r":"Mu","p":["*%_"]},"n":"gist"},{"s":{"r":"Mu","p":["*%_"]},"n":"gist","m":1,"k":"m"},{"n":"vault-backtrace","s":{"p":["*%_"],"r":"Mu"},"k":"m","m":0},{"n":"BUILDALL","s":{"p":["@auto","%init","*%_"],"r":"Mu"},"m":0,"k":"s"}],"k":"c"},{"t":"X::PoisonedAlias","n":"X::PoisonedAlias","b":"A","a":[{"n":"$.alias","t":"Mu","k":"v"},{"k":"v","t":"Mu","n":"$.package-type"},{"n":"$.package-name","t":"Mu","k":"v"},{"k":"v","t":"Mu","n":"$.filename"},{"t":"Mu","n":"$.pos","k":"v"},{"k":"v","t":"Mu","n":"$.line"},{"k":"v","t":"Mu","n":"$.column"},{"k":"v","n":"@.modules","t":"Positional"},{"n":"$.is-compile-time","t":"Mu","k":"v"},{"n":"$.pre","t":"Mu","k":"v"},{"k":"v","t":"Mu","n":"$.post"},{"k":"v","n":"@.highexpect","t":"Positional"},{"t":"Mu","n":"$!ex","k":"v"},{"n":"$!bt","t":"Mu","k":"v"}],"m":[{"n":"message","s":{"p":["*%_"],"r":"Mu"},"k":"m","m":0},{"k":"m","m":0,"s":{"p":["*%_"],"r":"Mu"},"n":"sorry_heading"},{"k":"m","m":0,"n":"SET_FILE_LINE","s":{"p":["$file","$line","*%_"],"r":"Mu"}},{"s":{"p":["*%_"],"r":"Mu"},"n":"gist","k":"m","m":1},{"m":1,"k":"m","n":"gist","s":{"p":["*%_"],"r":"Mu"}},{"k":"m","m":1,"s":{"p":["*%_"],"r":"Mu"},"n":"gist"},{"n":"gist","s":{"r":"Mu","p":[":$sorry = Bool::True",":$expect = Bool::True","*%_"]},"m":1,"k":"m"},{"m":0,"k":"m","s":{"p":["*%_"],"r":"Mu"},"n":"alias"},{"m":0,"k":"m","s":{"p":["*%_"],"r":"Mu"},"n":"package-type"},{"m":0,"k":"m","n":"package-name","s":{"p":["*%_"],"r":"Mu"}},{"m":0,"k":"m","n":"filename","s":{"p":["*%_"],"r":"Mu"}},{"m":0,"k":"m","n":"pos","s":{"r":"Mu","p":["*%_"]}},{"k":"m","m":0,"n":"line","s":{"r":"Mu","p":["*%_"]}},{"m":0,"k":"m","s":{"r":"Mu","p":["*%_"]},"n":"column"},{"s":{"p":["*%_"],"r":"Mu"},"n":"modules","m":0,"k":"m"},{"n":"is-compile-time","s":{"r":"Mu","p":["*%_"]},"k":"m","m":0},{"s":{"p":["*%_"],"r":"Mu"},"n":"pre","m":0,"k":"m"},{"m":0,"k":"m","n":"post","s":{"r":"Mu","p":["*%_"]}},{"s":{"r":"Mu","p":["*%_"]},"n":"highexpect","k":"m","m":0},{"n":"BUILDALL","s":{"p":["@auto","%init","*%_"],"r":"Mu"},"k":"s","m":0},{"n":"resume","s":{"p":["*%_"],"r":"Bool"},"m":0,"k":"m"},{"m":0,"k":"m","n":"reset-backtrace","s":{"p":["*%_"],"r":"Mu"}},{"m":0,"k":"m","s":{"p":["*%_"],"r":"Bool"},"n":"is-compile-time"},{"k":"m","m":0,"s":{"p":["$bt?","*%_"],"r":"Mu"},"n":"throw"},{"n":"fail","s":{"p":["*%_"],"r":"Mu"},"m":0,"k":"m"},{"n":"Str","s":{"p":["*%_"],"r":"Mu"},"k":"m","m":1},{"n":"Str","s":{"p":["*%_"],"r":"Mu"},"m":1,"k":"m"},{"n":"Str","s":{"p":["*%_"],"r":"Mu"},"m":1,"k":"m"},{"n":"die","s":{"p":["*%_"],"r":"Mu"},"m":0,"k":"m"},{"k":"m","m":0,"s":{"r":"Mu","p":["*%_"]},"n":"rethrow"},{"m":0,"k":"m","s":{"p":["*%_"],"r":"Mu"},"n":"backtrace"},{"n":"gist","s":{"r":"Mu","p":["*%_"]},"m":1,"k":"m"},{"k":"m","m":1,"n":"gist","s":{"r":"Mu","p":["*%_"]}},{"k":"m","m":1,"n":"gist","s":{"p":["*%_"],"r":"Mu"}},{"n":"vault-backtrace","s":{"p":["*%_"],"r":"Mu"},"k":"m","m":0},{"n":"BUILDALL","s":{"p":["@auto","%init","*%_"],"r":"Mu"},"m":0,"k":"s"}],"k":"c"},{"b":"A","a":[{"t":"Mu","n":"$.what","k":"v"},{"t":"Mu","n":"$.filename","k":"v"},{"n":"$.pos","t":"Mu","k":"v"},{"k":"v","n":"$.line","t":"Mu"},{"k":"v","t":"Mu","n":"$.column"},{"t":"Positional","n":"@.modules","k":"v"},{"k":"v","t":"Mu","n":"$.is-compile-time"},{"k":"v","n":"$.pre","t":"Mu"},{"n":"$.post","t":"Mu","k":"v"},{"n":"@.highexpect","t":"Positional","k":"v"},{"k":"v","n":"$!ex","t":"Mu"},{"n":"$!bt","t":"Mu","k":"v"}],"k":"c","m":[{"k":"m","m":0,"s":{"r":"Mu","p":["*%_"]},"n":"message"},{"n":"sorry_heading","s":{"p":["*%_"],"r":"Mu"},"m":0,"k":"m"},{"m":0,"k":"m","n":"SET_FILE_LINE","s":{"r":"Mu","p":["$file","$line","*%_"]}},{"n":"gist","s":{"r":"Mu","p":["*%_"]},"m":1,"k":"m"},{"s":{"p":["*%_"],"r":"Mu"},"n":"gist","m":1,"k":"m"},{"n":"gist","s":{"p":["*%_"],"r":"Mu"},"m":1,"k":"m"},{"m":1,"k":"m","s":{"r":"Mu","p":[":$sorry = Bool::True",":$expect = Bool::True","*%_"]},"n":"gist"},{"m":0,"k":"m","n":"what","s":{"p":["*%_"],"r":"Mu"}},{"n":"filename","s":{"r":"Mu","p":["*%_"]},"k":"m","m":0},{"s":{"r":"Mu","p":["*%_"]},"n":"pos","k":"m","m":0},{"k":"m","m":0,"s":{"r":"Mu","p":["*%_"]},"n":"line"},{"n":"column","s":{"r":"Mu","p":["*%_"]},"m":0,"k":"m"},{"n":"modules","s":{"p":["*%_"],"r":"Mu"},"m":0,"k":"m"},{"n":"is-compile-time","s":{"r":"Mu","p":["*%_"]},"m":0,"k":"m"},{"m":0,"k":"m","n":"pre","s":{"p":["*%_"],"r":"Mu"}},{"k":"m","m":0,"s":{"r":"Mu","p":["*%_"]},"n":"post"},{"m":0,"k":"m","n":"highexpect","s":{"p":["*%_"],"r":"Mu"}},{"n":"BUILDALL","s":{"p":["@auto","%init","*%_"],"r":"Mu"},"k":"s","m":0},{"s":{"p":["*%_"],"r":"Bool"},"n":"resume","k":"m","m":0},{"m":0,"k":"m","n":"reset-backtrace","s":{"r":"Mu","p":["*%_"]}},{"k":"m","m":0,"s":{"p":["*%_"],"r":"Bool"},"n":"is-compile-time"},{"s":{"r":"Mu","p":["$bt?","*%_"]},"n":"throw","m":0,"k":"m"},{"k":"m","m":0,"n":"fail","s":{"r":"Mu","p":["*%_"]}},{"n":"Str","s":{"r":"Mu","p":["*%_"]},"k":"m","m":1},{"m":1,"k":"m","s":{"r":"Mu","p":["*%_"]},"n":"Str"},{"m":1,"k":"m","s":{"r":"Mu","p":["*%_"]},"n":"Str"},{"s":{"r":"Mu","p":["*%_"]},"n":"die","m":0,"k":"m"},{"s":{"r":"Mu","p":["*%_"]},"n":"rethrow","k":"m","m":0},{"k":"m","m":0,"s":{"p":["*%_"],"r":"Mu"},"n":"backtrace"},{"k":"m","m":1,"s":{"p":["*%_"],"r":"Mu"},"n":"gist"},{"m":1,"k":"m","s":{"r":"Mu","p":["*%_"]},"n":"gist"},{"n":"gist","s":{"p":["*%_"],"r":"Mu"},"k":"m","m":1},{"n":"vault-backtrace","s":{"r":"Mu","p":["*%_"]},"k":"m","m":0},{"k":"s","m":0,"s":{"r":"Mu","p":["@auto","%init","*%_"]},"n":"BUILDALL"}],"t":"X::Package::UseLib","n":"X::Package::UseLib"},{"d":"TITLE\nclass X::Package::Stubbed\n\nSUBTITLE\nCompilation error due to a stubbed package that is never defined\n\n    class X::Package::Stubbed does X::Comp { }\n\nThrown at CHECK time when there are packages stubbed but not later\ndefined.\n\nFor example\n\n    class A { ... }     # literal ...\n    class B { ... }     # literal ...\n\n\ndies with\n\n    ===SORRY!===\n    The following packages were stubbed but not defined:\n        A\n        B\n\n\n","m":[{"n":"message","s":{"r":"Mu","p":["*%_"]},"m":0,"k":"m"},{"s":{"p":["*%_"],"r":"Mu"},"n":"sorry_heading","m":0,"k":"m"},{"s":{"p":["$file","$line","*%_"],"r":"Mu"},"n":"SET_FILE_LINE","m":0,"k":"m"},{"n":"gist","s":{"r":"Mu","p":["*%_"]},"m":1,"k":"m"},{"k":"m","m":1,"n":"gist","s":{"r":"Mu","p":["*%_"]}},{"m":1,"k":"m","s":{"r":"Mu","p":["*%_"]},"n":"gist"},{"n":"gist","s":{"r":"Mu","p":["$","*%_"]},"m":1,"k":"m"},{"s":{"p":[":$sorry = Bool::True",":$expect = Bool::True","*%_"],"r":"Mu"},"n":"gist","m":1,"k":"m"},{"n":"packages","s":{"r":"Mu","p":["*%_"]},"k":"m","m":0},{"n":"filename","s":{"p":["*%_"],"r":"Mu"},"m":0,"k":"m"},{"s":{"p":["*%_"],"r":"Mu"},"n":"pos","k":"m","m":0},{"s":{"r":"Mu","p":["*%_"]},"n":"line","m":0,"k":"m"},{"s":{"r":"Mu","p":["*%_"]},"n":"column","m":0,"k":"m"},{"n":"modules","s":{"r":"Mu","p":["*%_"]},"k":"m","m":0},{"m":0,"k":"m","s":{"p":["*%_"],"r":"Mu"},"n":"is-compile-time"},{"k":"m","m":0,"n":"pre","s":{"r":"Mu","p":["*%_"]}},{"m":0,"k":"m","n":"post","s":{"r":"Mu","p":["*%_"]}},{"m":0,"k":"m","s":{"r":"Mu","p":["*%_"]},"n":"highexpect"},{"s":{"p":["@auto","%init","*%_"],"r":"Mu"},"n":"BUILDALL","k":"s","m":0},{"k":"m","m":0,"s":{"p":["*%_"],"r":"Bool"},"n":"resume"},{"k":"m","m":0,"n":"reset-backtrace","s":{"p":["*%_"],"r":"Mu"}},{"m":0,"k":"m","s":{"r":"Bool","p":["*%_"]},"n":"is-compile-time"},{"m":0,"k":"m","n":"throw","s":{"p":["$bt?","*%_"],"r":"Mu"}},{"s":{"r":"Mu","p":["*%_"]},"n":"fail","k":"m","m":0},{"m":1,"k":"m","n":"Str","s":{"r":"Mu","p":["*%_"]}},{"s":{"r":"Mu","p":["*%_"]},"n":"Str","k":"m","m":1},{"k":"m","m":1,"s":{"r":"Mu","p":["*%_"]},"n":"Str"},{"k":"m","m":0,"n":"die","s":{"r":"Mu","p":["*%_"]}},{"k":"m","m":0,"n":"rethrow","s":{"r":"Mu","p":["*%_"]}},{"s":{"r":"Mu","p":["*%_"]},"n":"backtrace","m":0,"k":"m"},{"s":{"r":"Mu","p":["*%_"]},"n":"gist","k":"m","m":1},{"k":"m","m":1,"s":{"p":["*%_"],"r":"Mu"},"n":"gist"},{"n":"gist","s":{"r":"Mu","p":["*%_"]},"k":"m","m":1},{"s":{"r":"Mu","p":["*%_"]},"n":"vault-backtrace","k":"m","m":0},{"n":"BUILDALL","s":{"r":"Mu","p":["@auto","%init","*%_"]},"m":0,"k":"s"}],"k":"c","b":"A","a":[{"k":"v","t":"Positional","n":"@.packages"},{"t":"Mu","n":"$.filename","k":"v"},{"k":"v","t":"Mu","n":"$.pos"},{"k":"v","n":"$.line","t":"Mu"},{"n":"$.column","t":"Mu","k":"v"},{"n":"@.modules","t":"Positional","k":"v"},{"n":"$.is-compile-time","t":"Mu","k":"v"},{"k":"v","t":"Mu","n":"$.pre"},{"k":"v","t":"Mu","n":"$.post"},{"k":"v","t":"Positional","n":"@.highexpect"},{"k":"v","t":"Mu","n":"$!ex"},{"k":"v","n":"$!bt","t":"Mu"}],"t":"X::Package::Stubbed","n":"X::Package::Stubbed"},{"k":"ro","b":"C","a":[{"t":"Mu","n":"$.await-backtrace","k":"v"}],"t":"X::Await::Died","n":"X::Await::Died"},{"k":"c","m":[{"n":"message","s":{"p":["*%_"],"r":"Mu"},"k":"m","m":0},{"n":"sorry_heading","s":{"p":["*%_"],"r":"Mu"},"m":0,"k":"m"},{"s":{"r":"Mu","p":["$file","$line","*%_"]},"n":"SET_FILE_LINE","m":0,"k":"m"},{"k":"m","m":1,"s":{"r":"Mu","p":["*%_"]},"n":"gist"},{"s":{"r":"Mu","p":["*%_"]},"n":"gist","m":1,"k":"m"},{"n":"gist","s":{"p":["*%_"],"r":"Mu"},"k":"m","m":1},{"m":1,"k":"m","s":{"p":[":$sorry = Bool::True",":$expect = Bool::True","*%_"],"r":"Mu"},"n":"gist"},{"m":0,"k":"m","n":"package-kind","s":{"r":"Mu","p":["*%_"]}},{"n":"name","s":{"p":["*%_"],"r":"Mu"},"m":0,"k":"m"},{"k":"m","m":0,"n":"filename","s":{"r":"Mu","p":["*%_"]}},{"m":0,"k":"m","n":"pos","s":{"p":["*%_"],"r":"Mu"}},{"s":{"p":["*%_"],"r":"Mu"},"n":"line","k":"m","m":0},{"m":0,"k":"m","s":{"r":"Mu","p":["*%_"]},"n":"column"},{"k":"m","m":0,"n":"modules","s":{"p":["*%_"],"r":"Mu"}},{"k":"m","m":0,"s":{"r":"Mu","p":["*%_"]},"n":"is-compile-time"},{"n":"pre","s":{"p":["*%_"],"r":"Mu"},"k":"m","m":0},{"k":"m","m":0,"s":{"r":"Mu","p":["*%_"]},"n":"post"},{"n":"highexpect","s":{"p":["*%_"],"r":"Mu"},"m":0,"k":"m"},{"n":"BUILDALL","s":{"r":"Mu","p":["@auto","%init","*%_"]},"m":0,"k":"s"},{"s":{"r":"Bool","p":["*%_"]},"n":"resume","m":0,"k":"m"},{"s":{"r":"Mu","p":["*%_"]},"n":"reset-backtrace","m":0,"k":"m"},{"s":{"r":"Bool","p":["*%_"]},"n":"is-compile-time","k":"m","m":0},{"k":"m","m":0,"n":"throw","s":{"p":["$bt?","*%_"],"r":"Mu"}},{"s":{"r":"Mu","p":["*%_"]},"n":"fail","m":0,"k":"m"},{"k":"m","m":1,"n":"Str","s":{"r":"Mu","p":["*%_"]}},{"k":"m","m":1,"n":"Str","s":{"p":["*%_"],"r":"Mu"}},{"s":{"p":["*%_"],"r":"Mu"},"n":"Str","m":1,"k":"m"},{"n":"die","s":{"r":"Mu","p":["*%_"]},"m":0,"k":"m"},{"n":"rethrow","s":{"r":"Mu","p":["*%_"]},"k":"m","m":0},{"n":"backtrace","s":{"r":"Mu","p":["*%_"]},"m":0,"k":"m"},{"k":"m","m":1,"n":"gist","s":{"p":["*%_"],"r":"Mu"}},{"s":{"r":"Mu","p":["*%_"]},"n":"gist","k":"m","m":1},{"k":"m","m":1,"n":"gist","s":{"p":["*%_"],"r":"Mu"}},{"s":{"p":["*%_"],"r":"Mu"},"n":"vault-backtrace","k":"m","m":0},{"m":0,"k":"s","n":"BUILDALL","s":{"p":["@auto","%init","*%_"],"r":"Mu"}}],"b":"A","a":[{"k":"v","t":"Mu","n":"$.package-kind"},{"k":"v","n":"$.name","t":"Mu"},{"k":"v","t":"Mu","n":"$.filename"},{"k":"v","n":"$.pos","t":"Mu"},{"k":"v","t":"Mu","n":"$.line"},{"k":"v","t":"Mu","n":"$.column"},{"t":"Positional","n":"@.modules","k":"v"},{"t":"Mu","n":"$.is-compile-time","k":"v"},{"k":"v","t":"Mu","n":"$.pre"},{"k":"v","n":"$.post","t":"Mu"},{"t":"Positional","n":"@.highexpect","k":"v"},{"n":"$!ex","t":"Mu","k":"v"},{"t":"Mu","n":"$!bt","k":"v"}],"d":"TITLE\nclass X::Attribute::Package\n\nSUBTITLE\nCompilation error due to declaring an attribute in an ineligible package\n\n    class X::Attribute::Package does X::Comp { }\n\nCompile time error, thrown when the compiler encounters an attribute\ndeclaration inside a package that does not support attributes.\n\nFor example\n\n    module A { has $.x }\n\n\ndies with\n\n    A module cannot have attributes, but you tried to declare '$.x'\n\n\n","n":"X::Attribute::Package","t":"X::Attribute::Package"},{"d":"TITLE\nclass X::Attribute::NoPackage\n\nSUBTITLE\nCompilation error due to declaring an attribute outside of a package\n\n    class X::Attribute::NoPackage does X::Comp { }\n\nCompile time error thrown when an attribute is declared where it does not\nmake sense (for example in the mainline).\n\nFor example\n\n    has $.x;\n\n\nDies with\n\n    You cannot declare attribute '$.x' here; maybe you'd like a class or a role?\n\n\n","b":"A","a":[{"t":"Mu","n":"$.name","k":"v"},{"k":"v","t":"Mu","n":"$.filename"},{"t":"Mu","n":"$.pos","k":"v"},{"t":"Mu","n":"$.line","k":"v"},{"t":"Mu","n":"$.column","k":"v"},{"k":"v","t":"Positional","n":"@.modules"},{"k":"v","t":"Mu","n":"$.is-compile-time"},{"n":"$.pre","t":"Mu","k":"v"},{"t":"Mu","n":"$.post","k":"v"},{"k":"v","t":"Positional","n":"@.highexpect"},{"k":"v","t":"Mu","n":"$!ex"},{"k":"v","n":"$!bt","t":"Mu"}],"m":[{"s":{"r":"Mu","p":["*%_"]},"n":"message","k":"m","m":0},{"n":"sorry_heading","s":{"r":"Mu","p":["*%_"]},"m":0,"k":"m"},{"s":{"p":["$file","$line","*%_"],"r":"Mu"},"n":"SET_FILE_LINE","m":0,"k":"m"},{"s":{"r":"Mu","p":["*%_"]},"n":"gist","m":1,"k":"m"},{"s":{"r":"Mu","p":["*%_"]},"n":"gist","m":1,"k":"m"},{"s":{"p":["*%_"],"r":"Mu"},"n":"gist","k":"m","m":1},{"n":"gist","s":{"r":"Mu","p":[":$sorry = Bool::True",":$expect = Bool::True","*%_"]},"m":1,"k":"m"},{"n":"name","s":{"p":["*%_"],"r":"Mu"},"m":0,"k":"m"},{"k":"m","m":0,"s":{"p":["*%_"],"r":"Mu"},"n":"filename"},{"k":"m","m":0,"s":{"r":"Mu","p":["*%_"]},"n":"pos"},{"s":{"p":["*%_"],"r":"Mu"},"n":"line","k":"m","m":0},{"n":"column","s":{"p":["*%_"],"r":"Mu"},"m":0,"k":"m"},{"k":"m","m":0,"s":{"r":"Mu","p":["*%_"]},"n":"modules"},{"k":"m","m":0,"s":{"r":"Mu","p":["*%_"]},"n":"is-compile-time"},{"k":"m","m":0,"s":{"r":"Mu","p":["*%_"]},"n":"pre"},{"n":"post","s":{"r":"Mu","p":["*%_"]},"k":"m","m":0},{"s":{"p":["*%_"],"r":"Mu"},"n":"highexpect","m":0,"k":"m"},{"s":{"p":["@auto","%init","*%_"],"r":"Mu"},"n":"BUILDALL","m":0,"k":"s"},{"k":"m","m":0,"n":"resume","s":{"r":"Bool","p":["*%_"]}},{"k":"m","m":0,"n":"reset-backtrace","s":{"p":["*%_"],"r":"Mu"}},{"n":"is-compile-time","s":{"r":"Bool","p":["*%_"]},"k":"m","m":0},{"n":"throw","s":{"r":"Mu","p":["$bt?","*%_"]},"m":0,"k":"m"},{"m":0,"k":"m","n":"fail","s":{"p":["*%_"],"r":"Mu"}},{"k":"m","m":1,"n":"Str","s":{"p":["*%_"],"r":"Mu"}},{"m":1,"k":"m","s":{"r":"Mu","p":["*%_"]},"n":"Str"},{"m":1,"k":"m","n":"Str","s":{"p":["*%_"],"r":"Mu"}},{"s":{"r":"Mu","p":["*%_"]},"n":"die","k":"m","m":0},{"s":{"r":"Mu","p":["*%_"]},"n":"rethrow","m":0,"k":"m"},{"k":"m","m":0,"n":"backtrace","s":{"r":"Mu","p":["*%_"]}},{"m":1,"k":"m","s":{"p":["*%_"],"r":"Mu"},"n":"gist"},{"k":"m","m":1,"s":{"p":["*%_"],"r":"Mu"},"n":"gist"},{"s":{"r":"Mu","p":["*%_"]},"n":"gist","k":"m","m":1},{"k":"m","m":0,"s":{"p":["*%_"],"r":"Mu"},"n":"vault-backtrace"},{"m":0,"k":"s","n":"BUILDALL","s":{"r":"Mu","p":["@auto","%init","*%_"]}}],"k":"c","t":"X::Attribute::NoPackage","n":"X::Attribute::NoPackage"},{"a":[{"n":"$.name","t":"Mu","k":"v"},{"k":"v","t":"Mu","n":"$.why"},{"t":"Mu","n":"$!ex","k":"v"},{"n":"$!bt","t":"Mu","k":"v"}],"b":"A","m":[{"m":0,"k":"m","n":"message","s":{"r":"Mu","p":["*%_"]}},{"s":{"r":"Mu","p":["*%_"]},"n":"name","m":0,"k":"m"},{"m":0,"k":"m","n":"why","s":{"r":"Mu","p":["*%_"]}},{"m":0,"k":"s","n":"BUILDALL","s":{"p":["@auto","%init","*%_"],"r":"Mu"}},{"k":"m","m":0,"n":"resume","s":{"r":"Bool","p":["*%_"]}},{"m":0,"k":"m","s":{"r":"Mu","p":["*%_"]},"n":"reset-backtrace"},{"n":"is-compile-time","s":{"r":"Bool","p":["*%_"]},"m":0,"k":"m"},{"s":{"r":"Mu","p":["$bt?","*%_"]},"n":"throw","k":"m","m":0},{"n":"fail","s":{"r":"Mu","p":["*%_"]},"k":"m","m":0},{"m":1,"k":"m","n":"Str","s":{"p":["*%_"],"r":"Mu"}},{"n":"Str","s":{"r":"Mu","p":["*%_"]},"k":"m","m":1},{"k":"m","m":1,"s":{"r":"Mu","p":["*%_"]},"n":"Str"},{"s":{"p":["*%_"],"r":"Mu"},"n":"die","k":"m","m":0},{"m":0,"k":"m","s":{"r":"Mu","p":["*%_"]},"n":"rethrow"},{"m":0,"k":"m","n":"backtrace","s":{"r":"Mu","p":["*%_"]}},{"k":"m","m":1,"s":{"p":["*%_"],"r":"Mu"},"n":"gist"},{"m":1,"k":"m","n":"gist","s":{"p":["*%_"],"r":"Mu"}},{"k":"m","m":1,"n":"gist","s":{"r":"Mu","p":["*%_"]}},{"m":0,"k":"m","s":{"r":"Mu","p":["*%_"]},"n":"vault-backtrace"},{"s":{"p":["@auto","%init","*%_"],"r":"Mu"},"n":"BUILDALL","m":0,"k":"s"}],"k":"c","d":"TITLE\nclass X::Attribute::Required\n\nSUBTITLE\nCompilation error due to not declaring an attribute with the is required\ntrait\n\n    class X::Attribute::NoPackage does X::MOP { }\n\nCompile time error thrown when a required attribute is not assigned when\ncreating an object.\n\nFor example\n\n    my class Uses-required {\n        has $.req is required\n    };\n    my $object = Uses-required.new()\n\n\nDies with\n\n    OUTPUT: «(exit code 1) The attribute '$!req' is required, but you did not provide a value for it.␤»\n\n\n","n":"X::Attribute::Required","t":"X::Attribute::Required"},{"t":"X::Attribute::Undeclared","n":"X::Attribute::Undeclared","d":"TITLE\nclass X::Attribute::Undeclared\n\nSUBTITLE\nCompilation error due to an undeclared attribute\n\n    class X::Attribute::Undeclared is X::Undeclared { }\n\nThrown when code refers to an attribute that has not been declared.\n\nFor example the code\n\n    class A { method m { $!notthere } }\n\n\nProduces the error\n\n    Attribute $!notthere not declared in class A\n\n\n","b":"A","a":[{"k":"v","t":"Mu","n":"$.package-kind"},{"n":"$.package-name","t":"Mu","k":"v"},{"k":"v","t":"Mu","n":"$.what"},{"n":"$.symbol","t":"Mu","k":"v"},{"k":"v","t":"Positional","n":"@.suggestions"},{"t":"Mu","n":"$.filename","k":"v"},{"n":"$.pos","t":"Mu","k":"v"},{"n":"$.line","t":"Mu","k":"v"},{"t":"Mu","n":"$.column","k":"v"},{"k":"v","t":"Positional","n":"@.modules"},{"t":"Mu","n":"$.is-compile-time","k":"v"},{"n":"$.pre","t":"Mu","k":"v"},{"k":"v","n":"$.post","t":"Mu"},{"k":"v","n":"@.highexpect","t":"Positional"},{"k":"v","n":"$!ex","t":"Mu"},{"k":"v","n":"$!bt","t":"Mu"}],"k":"c","m":[{"s":{"p":["*%_"],"r":"Mu"},"n":"message","k":"m","m":0},{"s":{"r":"Mu","p":["*%_"]},"n":"package-kind","k":"m","m":0},{"n":"package-name","s":{"r":"Mu","p":["*%_"]},"k":"m","m":0},{"n":"BUILDALL","s":{"r":"Mu","p":["@auto","%init","*%_"]},"m":0,"k":"s"},{"n":"column","s":{"p":["*%_"],"r":"Mu"},"k":"m","m":0},{"k":"m","m":0,"s":{"r":"Mu","p":["*%_"]},"n":"highexpect"},{"m":0,"k":"m","s":{"r":"Mu","p":["*%_"]},"n":"sorry_heading"},{"k":"m","m":0,"n":"line","s":{"p":["*%_"],"r":"Mu"}},{"m":1,"k":"m","s":{"p":["*%_"],"r":"Mu"},"n":"gist"},{"n":"gist","s":{"p":["*%_"],"r":"Mu"},"m":1,"k":"m"},{"m":1,"k":"m","s":{"r":"Mu","p":["*%_"]},"n":"gist"},{"k":"m","m":1,"n":"gist","s":{"r":"Mu","p":[":$sorry = Bool::True",":$expect = Bool::True","*%_"]}},{"k":"m","m":0,"n":"symbol","s":{"r":"Mu","p":["*%_"]}},{"m":0,"k":"m","n":"pos","s":{"r":"Mu","p":["*%_"]}},{"s":{"r":"Mu","p":["*%_"]},"n":"modules","m":0,"k":"m"},{"s":{"p":["*%_"],"r":"Mu"},"n":"message","k":"m","m":0},{"n":"pre","s":{"p":["*%_"],"r":"Mu"},"k":"m","m":0},{"m":0,"k":"m","s":{"r":"Mu","p":["*%_"]},"n":"post"},{"n":"filename","s":{"r":"Mu","p":["*%_"]},"k":"m","m":0},{"k":"m","m":0,"s":{"p":["*%_"],"r":"Mu"},"n":"what"},{"s":{"r":"Mu","p":["*%_"]},"n":"is-compile-time","k":"m","m":0},{"m":0,"k":"m","s":{"p":["$file","$line","*%_"],"r":"Mu"},"n":"SET_FILE_LINE"},{"s":{"p":["*%_"],"r":"Mu"},"n":"suggestions","m":0,"k":"m"},{"m":0,"k":"s","s":{"p":["@auto","%init","*%_"],"r":"Mu"},"n":"BUILDALL"},{"m":0,"k":"m","s":{"r":"Bool","p":["*%_"]},"n":"resume"},{"n":"reset-backtrace","s":{"r":"Mu","p":["*%_"]},"k":"m","m":0},{"s":{"p":["*%_"],"r":"Bool"},"n":"is-compile-time","m":0,"k":"m"},{"s":{"p":["$bt?","*%_"],"r":"Mu"},"n":"throw","m":0,"k":"m"},{"n":"fail","s":{"r":"Mu","p":["*%_"]},"k":"m","m":0},{"s":{"p":["*%_"],"r":"Mu"},"n":"Str","m":1,"k":"m"},{"n":"Str","s":{"r":"Mu","p":["*%_"]},"k":"m","m":1},{"s":{"r":"Mu","p":["*%_"]},"n":"Str","k":"m","m":1},{"k":"m","m":0,"s":{"r":"Mu","p":["*%_"]},"n":"die"},{"s":{"p":["*%_"],"r":"Mu"},"n":"rethrow","m":0,"k":"m"},{"s":{"p":["*%_"],"r":"Mu"},"n":"backtrace","m":0,"k":"m"},{"m":1,"k":"m","n":"gist","s":{"r":"Mu","p":["*%_"]}},{"s":{"p":["*%_"],"r":"Mu"},"n":"gist","m":1,"k":"m"},{"k":"m","m":1,"n":"gist","s":{"p":["*%_"],"r":"Mu"}},{"k":"m","m":0,"s":{"p":["*%_"],"r":"Mu"},"n":"vault-backtrace"},{"m":0,"k":"s","n":"BUILDALL","s":{"r":"Mu","p":["@auto","%init","*%_"]}}]},{"k":"c","m":[{"n":"message","s":{"r":"Mu","p":["*%_"]},"m":0,"k":"m"},{"n":"BUILDALL","s":{"r":"Mu","p":["@auto","%init","*%_"]},"k":"s","m":0},{"m":0,"k":"m","s":{"p":["*%_"],"r":"Mu"},"n":"column"},{"n":"highexpect","s":{"p":["*%_"],"r":"Mu"},"k":"m","m":0},{"k":"m","m":0,"s":{"r":"Mu","p":["*%_"]},"n":"sorry_heading"},{"m":0,"k":"m","n":"line","s":{"p":["*%_"],"r":"Mu"}},{"m":1,"k":"m","n":"gist","s":{"r":"Mu","p":["*%_"]}},{"n":"gist","s":{"r":"Mu","p":["*%_"]},"m":1,"k":"m"},{"m":1,"k":"m","s":{"r":"Mu","p":["*%_"]},"n":"gist"},{"m":1,"k":"m","n":"gist","s":{"r":"Mu","p":[":$sorry = Bool::True",":$expect = Bool::True","*%_"]}},{"m":0,"k":"m","n":"symbol","s":{"p":["*%_"],"r":"Mu"}},{"k":"m","m":0,"n":"pos","s":{"r":"Mu","p":["*%_"]}},{"s":{"r":"Mu","p":["*%_"]},"n":"modules","m":0,"k":"m"},{"m":0,"k":"m","s":{"r":"Mu","p":["*%_"]},"n":"message"},{"m":0,"k":"m","s":{"p":["*%_"],"r":"Mu"},"n":"pre"},{"k":"m","m":0,"s":{"r":"Mu","p":["*%_"]},"n":"post"},{"n":"filename","s":{"p":["*%_"],"r":"Mu"},"m":0,"k":"m"},{"m":0,"k":"m","n":"what","s":{"r":"Mu","p":["*%_"]}},{"k":"m","m":0,"s":{"p":["*%_"],"r":"Mu"},"n":"is-compile-time"},{"k":"m","m":0,"s":{"p":["$file","$line","*%_"],"r":"Mu"},"n":"SET_FILE_LINE"},{"s":{"r":"Mu","p":["*%_"]},"n":"suggestions","k":"m","m":0},{"s":{"p":["@auto","%init","*%_"],"r":"Mu"},"n":"BUILDALL","m":0,"k":"s"},{"m":0,"k":"m","n":"resume","s":{"p":["*%_"],"r":"Bool"}},{"m":0,"k":"m","s":{"r":"Mu","p":["*%_"]},"n":"reset-backtrace"},{"n":"is-compile-time","s":{"r":"Bool","p":["*%_"]},"k":"m","m":0},{"n":"throw","s":{"p":["$bt?","*%_"],"r":"Mu"},"m":0,"k":"m"},{"n":"fail","s":{"r":"Mu","p":["*%_"]},"k":"m","m":0},{"s":{"r":"Mu","p":["*%_"]},"n":"Str","m":1,"k":"m"},{"m":1,"k":"m","s":{"p":["*%_"],"r":"Mu"},"n":"Str"},{"s":{"p":["*%_"],"r":"Mu"},"n":"Str","m":1,"k":"m"},{"s":{"r":"Mu","p":["*%_"]},"n":"die","k":"m","m":0},{"k":"m","m":0,"n":"rethrow","s":{"r":"Mu","p":["*%_"]}},{"k":"m","m":0,"n":"backtrace","s":{"r":"Mu","p":["*%_"]}},{"n":"gist","s":{"p":["*%_"],"r":"Mu"},"m":1,"k":"m"},{"k":"m","m":1,"s":{"r":"Mu","p":["*%_"]},"n":"gist"},{"n":"gist","s":{"p":["*%_"],"r":"Mu"},"m":1,"k":"m"},{"k":"m","m":0,"s":{"r":"Mu","p":["*%_"]},"n":"vault-backtrace"},{"n":"BUILDALL","s":{"r":"Mu","p":["@auto","%init","*%_"]},"k":"s","m":0}],"b":"A","a":[{"n":"$.what","t":"Mu","k":"v"},{"k":"v","t":"Mu","n":"$.symbol"},{"t":"Positional","n":"@.suggestions","k":"v"},{"k":"v","n":"$.filename","t":"Mu"},{"k":"v","t":"Mu","n":"$.pos"},{"n":"$.line","t":"Mu","k":"v"},{"k":"v","n":"$.column","t":"Mu"},{"k":"v","n":"@.modules","t":"Positional"},{"k":"v","n":"$.is-compile-time","t":"Mu"},{"k":"v","t":"Mu","n":"$.pre"},{"k":"v","n":"$.post","t":"Mu"},{"k":"v","n":"@.highexpect","t":"Positional"},{"k":"v","n":"$!ex","t":"Mu"},{"n":"$!bt","t":"Mu","k":"v"}],"t":"X::Attribute::Regex","n":"X::Attribute::Regex"},{"t":"X::Attribute::Scope::Package","n":"X::Attribute::Scope::Package","m":[{"k":"m","m":0,"n":"message","s":{"r":"Mu","p":["*%_"]}},{"n":"sorry_heading","s":{"p":["*%_"],"r":"Mu"},"m":0,"k":"m"},{"n":"SET_FILE_LINE","s":{"r":"Mu","p":["$file","$line","*%_"]},"m":0,"k":"m"},{"s":{"p":["*%_"],"r":"Mu"},"n":"gist","k":"m","m":1},{"m":1,"k":"m","s":{"p":["*%_"],"r":"Mu"},"n":"gist"},{"m":1,"k":"m","s":{"r":"Mu","p":["*%_"]},"n":"gist"},{"s":{"r":"Mu","p":[":$sorry = Bool::True",":$expect = Bool::True","*%_"]},"n":"gist","m":1,"k":"m"},{"m":0,"k":"m","s":{"p":["*%_"],"r":"Mu"},"n":"scope"},{"k":"m","m":0,"n":"allowed","s":{"p":["*%_"],"r":"Mu"}},{"m":0,"k":"m","s":{"p":["*%_"],"r":"Mu"},"n":"disallowed"},{"k":"m","m":0,"s":{"p":["*%_"],"r":"Mu"},"n":"filename"},{"s":{"p":["*%_"],"r":"Mu"},"n":"pos","k":"m","m":0},{"k":"m","m":0,"n":"line","s":{"p":["*%_"],"r":"Mu"}},{"n":"column","s":{"p":["*%_"],"r":"Mu"},"k":"m","m":0},{"k":"m","m":0,"s":{"r":"Mu","p":["*%_"]},"n":"modules"},{"k":"m","m":0,"n":"is-compile-time","s":{"r":"Mu","p":["*%_"]}},{"s":{"r":"Mu","p":["*%_"]},"n":"pre","m":0,"k":"m"},{"k":"m","m":0,"n":"post","s":{"p":["*%_"],"r":"Mu"}},{"s":{"r":"Mu","p":["*%_"]},"n":"highexpect","k":"m","m":0},{"s":{"r":"Mu","p":["@auto","%init","*%_"]},"n":"BUILDALL","k":"s","m":0},{"k":"m","m":0,"n":"resume","s":{"r":"Bool","p":["*%_"]}},{"m":0,"k":"m","n":"reset-backtrace","s":{"r":"Mu","p":["*%_"]}},{"k":"m","m":0,"n":"is-compile-time","s":{"r":"Bool","p":["*%_"]}},{"m":0,"k":"m","n":"throw","s":{"p":["$bt?","*%_"],"r":"Mu"}},{"k":"m","m":0,"n":"fail","s":{"p":["*%_"],"r":"Mu"}},{"m":1,"k":"m","n":"Str","s":{"r":"Mu","p":["*%_"]}},{"m":1,"k":"m","s":{"r":"Mu","p":["*%_"]},"n":"Str"},{"s":{"p":["*%_"],"r":"Mu"},"n":"Str","m":1,"k":"m"},{"n":"die","s":{"r":"Mu","p":["*%_"]},"m":0,"k":"m"},{"m":0,"k":"m","n":"rethrow","s":{"p":["*%_"],"r":"Mu"}},{"n":"backtrace","s":{"r":"Mu","p":["*%_"]},"k":"m","m":0},{"s":{"p":["*%_"],"r":"Mu"},"n":"gist","m":1,"k":"m"},{"k":"m","m":1,"s":{"p":["*%_"],"r":"Mu"},"n":"gist"},{"n":"gist","s":{"p":["*%_"],"r":"Mu"},"k":"m","m":1},{"m":0,"k":"m","s":{"r":"Mu","p":["*%_"]},"n":"vault-backtrace"},{"n":"BUILDALL","s":{"p":["@auto","%init","*%_"],"r":"Mu"},"m":0,"k":"s"}],"k":"c","a":[{"k":"v","t":"Mu","n":"$.scope"},{"t":"Mu","n":"$.allowed","k":"v"},{"n":"$.disallowed","t":"Mu","k":"v"},{"n":"$.filename","t":"Mu","k":"v"},{"k":"v","n":"$.pos","t":"Mu"},{"k":"v","t":"Mu","n":"$.line"},{"k":"v","t":"Mu","n":"$.column"},{"k":"v","t":"Positional","n":"@.modules"},{"k":"v","n":"$.is-compile-time","t":"Mu"},{"n":"$.pre","t":"Mu","k":"v"},{"k":"v","t":"Mu","n":"$.post"},{"k":"v","t":"Positional","n":"@.highexpect"},{"k":"v","n":"$!ex","t":"Mu"},{"k":"v","t":"Mu","n":"$!bt"}],"b":"A"},{"n":"X::Match::Bool","t":"X::Match::Bool","m":[{"k":"m","m":0,"n":"message","s":{"p":["*%_"],"r":"Mu"}},{"n":"type","s":{"r":"Mu","p":["*%_"]},"k":"m","m":0},{"m":0,"k":"s","n":"BUILDALL","s":{"p":["@auto","%init","*%_"],"r":"Mu"}},{"s":{"p":["*%_"],"r":"Bool"},"n":"resume","k":"m","m":0},{"n":"reset-backtrace","s":{"r":"Mu","p":["*%_"]},"k":"m","m":0},{"n":"is-compile-time","s":{"r":"Bool","p":["*%_"]},"m":0,"k":"m"},{"n":"throw","s":{"p":["$bt?","*%_"],"r":"Mu"},"m":0,"k":"m"},{"m":0,"k":"m","n":"fail","s":{"r":"Mu","p":["*%_"]}},{"k":"m","m":1,"n":"Str","s":{"r":"Mu","p":["*%_"]}},{"s":{"p":["*%_"],"r":"Mu"},"n":"Str","m":1,"k":"m"},{"n":"Str","s":{"p":["*%_"],"r":"Mu"},"m":1,"k":"m"},{"n":"die","s":{"p":["*%_"],"r":"Mu"},"k":"m","m":0},{"k":"m","m":0,"s":{"p":["*%_"],"r":"Mu"},"n":"rethrow"},{"m":0,"k":"m","n":"backtrace","s":{"p":["*%_"],"r":"Mu"}},{"n":"gist","s":{"r":"Mu","p":["*%_"]},"m":1,"k":"m"},{"m":1,"k":"m","s":{"r":"Mu","p":["*%_"]},"n":"gist"},{"n":"gist","s":{"r":"Mu","p":["*%_"]},"m":1,"k":"m"},{"s":{"p":["*%_"],"r":"Mu"},"n":"vault-backtrace","m":0,"k":"m"},{"s":{"p":["@auto","%init","*%_"],"r":"Mu"},"n":"BUILDALL","k":"s","m":0}],"k":"c","b":"A","a":[{"k":"v","n":"$.type","t":"Mu"},{"n":"$!ex","t":"Mu","k":"v"},{"t":"Mu","n":"$!bt","k":"v"}]},{"k":"c","m":[{"k":"m","m":0,"s":{"p":["*%_"],"r":"Mu"},"n":"message"},{"k":"m","m":0,"s":{"p":["*%_"],"r":"Mu"},"n":"dispatcher"},{"k":"m","m":0,"s":{"r":"Mu","p":["*%_"]},"n":"ambiguous"},{"k":"m","m":0,"n":"capture","s":{"p":["*%_"],"r":"Mu"}},{"s":{"r":"Mu","p":["@auto","%init","*%_"]},"n":"BUILDALL","m":0,"k":"s"},{"k":"m","m":0,"n":"resume","s":{"p":["*%_"],"r":"Bool"}},{"m":0,"k":"m","s":{"r":"Mu","p":["*%_"]},"n":"reset-backtrace"},{"k":"m","m":0,"n":"is-compile-time","s":{"r":"Bool","p":["*%_"]}},{"m":0,"k":"m","s":{"r":"Mu","p":["$bt?","*%_"]},"n":"throw"},{"k":"m","m":0,"n":"fail","s":{"p":["*%_"],"r":"Mu"}},{"n":"Str","s":{"p":["*%_"],"r":"Mu"},"m":1,"k":"m"},{"s":{"p":["*%_"],"r":"Mu"},"n":"Str","m":1,"k":"m"},{"m":1,"k":"m","s":{"p":["*%_"],"r":"Mu"},"n":"Str"},{"m":0,"k":"m","s":{"r":"Mu","p":["*%_"]},"n":"die"},{"m":0,"k":"m","n":"rethrow","s":{"p":["*%_"],"r":"Mu"}},{"m":0,"k":"m","s":{"r":"Mu","p":["*%_"]},"n":"backtrace"},{"k":"m","m":1,"s":{"r":"Mu","p":["*%_"]},"n":"gist"},{"m":1,"k":"m","s":{"p":["*%_"],"r":"Mu"},"n":"gist"},{"k":"m","m":1,"n":"gist","s":{"r":"Mu","p":["*%_"]}},{"m":0,"k":"m","s":{"r":"Mu","p":["*%_"]},"n":"vault-backtrace"},{"n":"BUILDALL","s":{"p":["@auto","%init","*%_"],"r":"Mu"},"k":"s","m":0}],"a":[{"k":"v","n":"$.dispatcher","t":"Mu"},{"t":"Positional","n":"@.ambiguous","k":"v"},{"k":"v","n":"$.capture","t":"Mu"},{"t":"Mu","n":"$!ex","k":"v"},{"t":"Mu","n":"$!bt","k":"v"}],"b":"A","n":"X::Multi::Ambiguous","t":"X::Multi::Ambiguous"},{"m":[{"m":0,"k":"m","s":{"r":"Mu","p":["*%_"]},"n":"message"},{"s":{"r":"Mu","p":["*%_"]},"n":"dispatcher","k":"m","m":0},{"k":"m","m":0,"n":"capture","s":{"r":"Mu","p":["*%_"]}},{"n":"BUILDALL","s":{"r":"Mu","p":["@auto","%init","*%_"]},"k":"s","m":0},{"n":"resume","s":{"p":["*%_"],"r":"Bool"},"k":"m","m":0},{"s":{"r":"Mu","p":["*%_"]},"n":"reset-backtrace","k":"m","m":0},{"s":{"r":"Bool","p":["*%_"]},"n":"is-compile-time","k":"m","m":0},{"n":"throw","s":{"p":["$bt?","*%_"],"r":"Mu"},"m":0,"k":"m"},{"n":"fail","s":{"r":"Mu","p":["*%_"]},"k":"m","m":0},{"m":1,"k":"m","s":{"p":["*%_"],"r":"Mu"},"n":"Str"},{"n":"Str","s":{"p":["*%_"],"r":"Mu"},"m":1,"k":"m"},{"n":"Str","s":{"r":"Mu","p":["*%_"]},"k":"m","m":1},{"m":0,"k":"m","n":"die","s":{"p":["*%_"],"r":"Mu"}},{"s":{"p":["*%_"],"r":"Mu"},"n":"rethrow","m":0,"k":"m"},{"m":0,"k":"m","s":{"p":["*%_"],"r":"Mu"},"n":"backtrace"},{"m":1,"k":"m","s":{"r":"Mu","p":["*%_"]},"n":"gist"},{"s":{"p":["*%_"],"r":"Mu"},"n":"gist","m":1,"k":"m"},{"k":"m","m":1,"s":{"r":"Mu","p":["*%_"]},"n":"gist"},{"k":"m","m":0,"s":{"r":"Mu","p":["*%_"]},"n":"vault-backtrace"},{"k":"s","m":0,"s":{"p":["@auto","%init","*%_"],"r":"Mu"},"n":"BUILDALL"}],"k":"c","a":[{"n":"$.dispatcher","t":"Mu","k":"v"},{"n":"$.capture","t":"Mu","k":"v"},{"t":"Mu","n":"$!ex","k":"v"},{"k":"v","t":"Mu","n":"$!bt"}],"b":"A","n":"X::Multi::NoMatch","t":"X::Multi::NoMatch"},{"t":"X::NYI","n":"X::NYI","d":"TITLE\nclass X::NYI\n\nSUBTITLE\nError due to use of an unimplemented feature\n\n    class X::NYI is Exception { }\n\nError class for unimplemented features. NYI stands for Not Yet\nImplemented.\n\nIf a Raku compiler is not yet feature complete, it may throw an X::NYI\nexception when a program uses a feature that it can detect and is somehow\nspecified is not yet implemented.\n\nA full-featured Raku compiler must not throw such exceptions, but still\nprovide the X::NYI class for compatibility reasons.\n\nA typical error message is\n\n    HyperWhatever is not yet implemented. Sorry.\n\n\n","m":[{"k":"m","m":0,"n":"message","s":{"p":["*%_"],"r":"Mu"}},{"m":0,"k":"m","s":{"p":["*%_"],"r":"Mu"},"n":"feature"},{"k":"m","m":0,"n":"did-you-mean","s":{"r":"Mu","p":["*%_"]}},{"m":0,"k":"m","s":{"p":["*%_"],"r":"Mu"},"n":"workaround"},{"s":{"r":"Mu","p":["@auto","%init","*%_"]},"n":"BUILDALL","k":"s","m":0},{"n":"resume","s":{"r":"Bool","p":["*%_"]},"m":0,"k":"m"},{"s":{"r":"Mu","p":["*%_"]},"n":"reset-backtrace","m":0,"k":"m"},{"m":0,"k":"m","n":"is-compile-time","s":{"p":["*%_"],"r":"Bool"}},{"s":{"p":["$bt?","*%_"],"r":"Mu"},"n":"throw","m":0,"k":"m"},{"k":"m","m":0,"n":"fail","s":{"r":"Mu","p":["*%_"]}},{"s":{"r":"Mu","p":["*%_"]},"n":"Str","m":1,"k":"m"},{"m":1,"k":"m","s":{"r":"Mu","p":["*%_"]},"n":"Str"},{"m":1,"k":"m","s":{"p":["*%_"],"r":"Mu"},"n":"Str"},{"s":{"p":["*%_"],"r":"Mu"},"n":"die","m":0,"k":"m"},{"s":{"r":"Mu","p":["*%_"]},"n":"rethrow","k":"m","m":0},{"s":{"p":["*%_"],"r":"Mu"},"n":"backtrace","k":"m","m":0},{"n":"gist","s":{"r":"Mu","p":["*%_"]},"k":"m","m":1},{"m":1,"k":"m","n":"gist","s":{"p":["*%_"],"r":"Mu"}},{"m":1,"k":"m","n":"gist","s":{"p":["*%_"],"r":"Mu"}},{"m":0,"k":"m","n":"vault-backtrace","s":{"p":["*%_"],"r":"Mu"}},{"m":0,"k":"s","s":{"r":"Mu","p":["@auto","%init","*%_"]},"n":"BUILDALL"}],"k":"c","b":"A","a":[{"n":"$.feature","t":"Mu","k":"v"},{"k":"v","n":"$.did-you-mean","t":"Mu"},{"t":"Mu","n":"$.workaround","k":"v"},{"t":"Mu","n":"$!ex","k":"v"},{"k":"v","t":"Mu","n":"$!bt"}]},{"m":[{"s":{"p":["*%_"],"r":"Mu"},"n":"available-str","m":0,"k":"m"},{"k":"m","m":0,"s":{"r":"Mu","p":["*%_"]},"n":"message"},{"n":"available","s":{"p":["*%_"],"r":"Mu"},"k":"m","m":0},{"n":"BUILDALL","s":{"p":["@auto","%init","*%_"],"r":"Mu"},"m":0,"k":"s"},{"m":0,"k":"m","s":{"p":["*%_"],"r":"Mu"},"n":"message"},{"s":{"r":"Mu","p":["*%_"]},"n":"workaround","m":0,"k":"m"},{"k":"m","m":0,"s":{"r":"Mu","p":["*%_"]},"n":"did-you-mean"},{"n":"feature","s":{"r":"Mu","p":["*%_"]},"m":0,"k":"m"},{"m":0,"k":"s","n":"BUILDALL","s":{"p":["@auto","%init","*%_"],"r":"Mu"}},{"k":"m","m":0,"s":{"r":"Bool","p":["*%_"]},"n":"resume"},{"m":0,"k":"m","s":{"r":"Mu","p":["*%_"]},"n":"reset-backtrace"},{"m":0,"k":"m","s":{"p":["*%_"],"r":"Bool"},"n":"is-compile-time"},{"n":"throw","s":{"r":"Mu","p":["$bt?","*%_"]},"k":"m","m":0},{"n":"fail","s":{"p":["*%_"],"r":"Mu"},"m":0,"k":"m"},{"k":"m","m":1,"n":"Str","s":{"p":["*%_"],"r":"Mu"}},{"m":1,"k":"m","n":"Str","s":{"r":"Mu","p":["*%_"]}},{"s":{"r":"Mu","p":["*%_"]},"n":"Str","m":1,"k":"m"},{"m":0,"k":"m","s":{"r":"Mu","p":["*%_"]},"n":"die"},{"m":0,"k":"m","n":"rethrow","s":{"p":["*%_"],"r":"Mu"}},{"s":{"r":"Mu","p":["*%_"]},"n":"backtrace","m":0,"k":"m"},{"k":"m","m":1,"n":"gist","s":{"p":["*%_"],"r":"Mu"}},{"m":1,"k":"m","n":"gist","s":{"r":"Mu","p":["*%_"]}},{"n":"gist","s":{"p":["*%_"],"r":"Mu"},"m":1,"k":"m"},{"m":0,"k":"m","n":"vault-backtrace","s":{"r":"Mu","p":["*%_"]}},{"m":0,"k":"s","n":"BUILDALL","s":{"p":["@auto","%init","*%_"],"r":"Mu"}}],"k":"c","b":"A","a":[{"k":"v","t":"Positional","n":"@.available"},{"n":"$.feature","t":"Mu","k":"v"},{"k":"v","t":"Mu","n":"$.did-you-mean"},{"n":"$.workaround","t":"Mu","k":"v"},{"t":"Mu","n":"$!ex","k":"v"},{"n":"$!bt","t":"Mu","k":"v"}],"t":"X::NYI::Available","n":"X::NYI::Available"},{"t":"X::NYI::BigInt","n":"X::NYI::BigInt","k":"c","m":[{"n":"message","s":{"p":["*%_"],"r":"Mu"},"k":"m","m":0},{"m":0,"k":"m","n":"op","s":{"p":["*%_"],"r":"Mu"}},{"n":"big","s":{"r":"Mu","p":["*%_"]},"m":0,"k":"m"},{"n":"side","s":{"r":"Mu","p":["*%_"]},"k":"m","m":0},{"k":"s","m":0,"s":{"p":["@auto","%init","*%_"],"r":"Mu"},"n":"BUILDALL"},{"k":"m","m":0,"n":"resume","s":{"p":["*%_"],"r":"Bool"}},{"m":0,"k":"m","n":"reset-backtrace","s":{"p":["*%_"],"r":"Mu"}},{"k":"m","m":0,"n":"is-compile-time","s":{"r":"Bool","p":["*%_"]}},{"k":"m","m":0,"n":"throw","s":{"p":["$bt?","*%_"],"r":"Mu"}},{"s":{"p":["*%_"],"r":"Mu"},"n":"fail","k":"m","m":0},{"s":{"r":"Mu","p":["*%_"]},"n":"Str","k":"m","m":1},{"m":1,"k":"m","s":{"p":["*%_"],"r":"Mu"},"n":"Str"},{"m":1,"k":"m","n":"Str","s":{"r":"Mu","p":["*%_"]}},{"k":"m","m":0,"s":{"p":["*%_"],"r":"Mu"},"n":"die"},{"n":"rethrow","s":{"r":"Mu","p":["*%_"]},"k":"m","m":0},{"m":0,"k":"m","n":"backtrace","s":{"p":["*%_"],"r":"Mu"}},{"s":{"p":["*%_"],"r":"Mu"},"n":"gist","m":1,"k":"m"},{"n":"gist","s":{"p":["*%_"],"r":"Mu"},"m":1,"k":"m"},{"m":1,"k":"m","n":"gist","s":{"r":"Mu","p":["*%_"]}},{"n":"vault-backtrace","s":{"p":["*%_"],"r":"Mu"},"m":0,"k":"m"},{"s":{"r":"Mu","p":["@auto","%init","*%_"]},"n":"BUILDALL","m":0,"k":"s"}],"a":[{"k":"v","n":"$.op","t":"Mu"},{"k":"v","t":"Mu","n":"$.big"},{"t":"Mu","n":"$.side","k":"v"},{"k":"v","t":"Mu","n":"$!ex"},{"t":"Mu","n":"$!bt","k":"v"}],"b":"A"},{"b":"A","a":[{"t":"Mu","n":"$.symbol","k":"v"},{"t":"Mu","n":"$!ex","k":"v"},{"k":"v","t":"Mu","n":"$!bt"}],"k":"c","m":[{"k":"m","m":0,"n":"message","s":{"p":["*%_"],"r":"Mu"}},{"n":"symbol","s":{"p":["*%_"],"r":"Mu"},"m":0,"k":"m"},{"m":0,"k":"s","s":{"r":"Mu","p":["@auto","%init","*%_"]},"n":"BUILDALL"},{"s":{"p":["*%_"],"r":"Bool"},"n":"resume","k":"m","m":0},{"n":"reset-backtrace","s":{"r":"Mu","p":["*%_"]},"m":0,"k":"m"},{"n":"is-compile-time","s":{"p":["*%_"],"r":"Bool"},"k":"m","m":0},{"m":0,"k":"m","s":{"p":["$bt?","*%_"],"r":"Mu"},"n":"throw"},{"s":{"p":["*%_"],"r":"Mu"},"n":"fail","m":0,"k":"m"},{"k":"m","m":1,"s":{"p":["*%_"],"r":"Mu"},"n":"Str"},{"k":"m","m":1,"n":"Str","s":{"r":"Mu","p":["*%_"]}},{"k":"m","m":1,"n":"Str","s":{"r":"Mu","p":["*%_"]}},{"n":"die","s":{"r":"Mu","p":["*%_"]},"k":"m","m":0},{"m":0,"k":"m","s":{"p":["*%_"],"r":"Mu"},"n":"rethrow"},{"n":"backtrace","s":{"r":"Mu","p":["*%_"]},"k":"m","m":0},{"n":"gist","s":{"r":"Mu","p":["*%_"]},"m":1,"k":"m"},{"k":"m","m":1,"s":{"p":["*%_"],"r":"Mu"},"n":"gist"},{"m":1,"k":"m","s":{"p":["*%_"],"r":"Mu"},"n":"gist"},{"n":"vault-backtrace","s":{"r":"Mu","p":["*%_"]},"k":"m","m":0},{"n":"BUILDALL","s":{"p":["@auto","%init","*%_"],"r":"Mu"},"k":"s","m":0}],"t":"X::NoSuchSymbol","n":"X::NoSuchSymbol"},{"d":"TITLE\nclass X::Assignment::RO\n\nSUBTITLE\nException thrown when trying to assign to something read-only\n\n    class X::Assignment::RO is Exception {}\n\nCode like\n\n    sub f() { 42 };\n    f() = 'new value';  # throws an X::Assignment::RO\n    CATCH { default { put .^name, ': ', .Str } };\n    # OUTPUT: «X::Assignment::RO: Cannot modify an immutable Any␤»\n\nthrows an exception of type X::Assignment::RO.\n\n","a":[{"k":"v","n":"$.value","t":"Mu"},{"n":"$!ex","t":"Mu","k":"v"},{"t":"Mu","n":"$!bt","k":"v"}],"b":"A","m":[{"m":0,"k":"m","s":{"p":["*%_"],"r":"Mu"},"n":"message"},{"m":0,"k":"m","n":"typename","s":{"p":["*%_"],"r":"Mu"}},{"s":{"r":"Mu","p":["*%_"]},"n":"value","k":"m","m":0},{"k":"s","m":0,"s":{"r":"Mu","p":["@auto","%init","*%_"]},"n":"BUILDALL"},{"s":{"r":"Bool","p":["*%_"]},"n":"resume","m":0,"k":"m"},{"k":"m","m":0,"n":"reset-backtrace","s":{"r":"Mu","p":["*%_"]}},{"s":{"r":"Bool","p":["*%_"]},"n":"is-compile-time","m":0,"k":"m"},{"m":0,"k":"m","s":{"r":"Mu","p":["$bt?","*%_"]},"n":"throw"},{"n":"fail","s":{"r":"Mu","p":["*%_"]},"m":0,"k":"m"},{"k":"m","m":1,"n":"Str","s":{"p":["*%_"],"r":"Mu"}},{"k":"m","m":1,"n":"Str","s":{"p":["*%_"],"r":"Mu"}},{"k":"m","m":1,"s":{"p":["*%_"],"r":"Mu"},"n":"Str"},{"k":"m","m":0,"s":{"p":["*%_"],"r":"Mu"},"n":"die"},{"s":{"r":"Mu","p":["*%_"]},"n":"rethrow","m":0,"k":"m"},{"n":"backtrace","s":{"r":"Mu","p":["*%_"]},"m":0,"k":"m"},{"k":"m","m":1,"s":{"p":["*%_"],"r":"Mu"},"n":"gist"},{"m":1,"k":"m","s":{"r":"Mu","p":["*%_"]},"n":"gist"},{"s":{"r":"Mu","p":["*%_"]},"n":"gist","k":"m","m":1},{"k":"m","m":0,"n":"vault-backtrace","s":{"p":["*%_"],"r":"Mu"}},{"k":"s","m":0,"s":{"r":"Mu","p":["@auto","%init","*%_"]},"n":"BUILDALL"}],"k":"c","t":"X::Assignment::RO","n":"X::Assignment::RO"},{"b":"A","a":[{"n":"$.variable","t":"Mu","k":"v"},{"n":"$.filename","t":"Mu","k":"v"},{"k":"v","t":"Mu","n":"$.pos"},{"k":"v","t":"Mu","n":"$.line"},{"k":"v","n":"$.column","t":"Mu"},{"k":"v","t":"Positional","n":"@.modules"},{"t":"Mu","n":"$.is-compile-time","k":"v"},{"k":"v","t":"Mu","n":"$.pre"},{"k":"v","n":"$.post","t":"Mu"},{"t":"Positional","n":"@.highexpect","k":"v"},{"n":"$!ex","t":"Mu","k":"v"},{"k":"v","n":"$!bt","t":"Mu"}],"m":[{"k":"m","m":0,"n":"message","s":{"p":["*%_"],"r":"Mu"}},{"s":{"r":"Mu","p":["*%_"]},"n":"sorry_heading","m":0,"k":"m"},{"k":"m","m":0,"n":"SET_FILE_LINE","s":{"r":"Mu","p":["$file","$line","*%_"]}},{"s":{"p":["*%_"],"r":"Mu"},"n":"gist","k":"m","m":1},{"s":{"p":["*%_"],"r":"Mu"},"n":"gist","k":"m","m":1},{"s":{"p":["*%_"],"r":"Mu"},"n":"gist","m":1,"k":"m"},{"s":{"r":"Mu","p":[":$sorry = Bool::True",":$expect = Bool::True","*%_"]},"n":"gist","m":1,"k":"m"},{"s":{"r":"Mu","p":["*%_"]},"n":"variable","m":0,"k":"m"},{"k":"m","m":0,"s":{"p":["*%_"],"r":"Mu"},"n":"filename"},{"m":0,"k":"m","n":"pos","s":{"p":["*%_"],"r":"Mu"}},{"m":0,"k":"m","s":{"p":["*%_"],"r":"Mu"},"n":"line"},{"s":{"r":"Mu","p":["*%_"]},"n":"column","m":0,"k":"m"},{"m":0,"k":"m","n":"modules","s":{"r":"Mu","p":["*%_"]}},{"k":"m","m":0,"s":{"r":"Mu","p":["*%_"]},"n":"is-compile-time"},{"s":{"r":"Mu","p":["*%_"]},"n":"pre","k":"m","m":0},{"n":"post","s":{"r":"Mu","p":["*%_"]},"m":0,"k":"m"},{"m":0,"k":"m","n":"highexpect","s":{"p":["*%_"],"r":"Mu"}},{"k":"s","m":0,"s":{"p":["@auto","%init","*%_"],"r":"Mu"},"n":"BUILDALL"},{"n":"resume","s":{"r":"Bool","p":["*%_"]},"m":0,"k":"m"},{"s":{"p":["*%_"],"r":"Mu"},"n":"reset-backtrace","m":0,"k":"m"},{"k":"m","m":0,"n":"is-compile-time","s":{"r":"Bool","p":["*%_"]}},{"k":"m","m":0,"s":{"r":"Mu","p":["$bt?","*%_"]},"n":"throw"},{"k":"m","m":0,"n":"fail","s":{"p":["*%_"],"r":"Mu"}},{"s":{"p":["*%_"],"r":"Mu"},"n":"Str","m":1,"k":"m"},{"m":1,"k":"m","s":{"r":"Mu","p":["*%_"]},"n":"Str"},{"k":"m","m":1,"n":"Str","s":{"r":"Mu","p":["*%_"]}},{"k":"m","m":0,"n":"die","s":{"r":"Mu","p":["*%_"]}},{"n":"rethrow","s":{"r":"Mu","p":["*%_"]},"k":"m","m":0},{"s":{"r":"Mu","p":["*%_"]},"n":"backtrace","m":0,"k":"m"},{"n":"gist","s":{"r":"Mu","p":["*%_"]},"k":"m","m":1},{"m":1,"k":"m","n":"gist","s":{"r":"Mu","p":["*%_"]}},{"n":"gist","s":{"r":"Mu","p":["*%_"]},"m":1,"k":"m"},{"n":"vault-backtrace","s":{"r":"Mu","p":["*%_"]},"m":0,"k":"m"},{"s":{"p":["@auto","%init","*%_"],"r":"Mu"},"n":"BUILDALL","m":0,"k":"s"}],"k":"c","n":"X::Assignment::RO::Comp","t":"X::Assignment::RO::Comp"},{"n":"X::Assignment::ToShaped","t":"X::Assignment::ToShaped","m":[{"n":"message","s":{"r":"Mu","p":["*%_"]},"k":"m","m":0},{"m":0,"k":"m","s":{"r":"Mu","p":["*%_"]},"n":"shape"},{"s":{"r":"Mu","p":["@auto","%init","*%_"]},"n":"BUILDALL","m":0,"k":"s"},{"s":{"p":["*%_"],"r":"Bool"},"n":"resume","m":0,"k":"m"},{"m":0,"k":"m","s":{"p":["*%_"],"r":"Mu"},"n":"reset-backtrace"},{"k":"m","m":0,"n":"is-compile-time","s":{"r":"Bool","p":["*%_"]}},{"m":0,"k":"m","s":{"r":"Mu","p":["$bt?","*%_"]},"n":"throw"},{"n":"fail","s":{"r":"Mu","p":["*%_"]},"m":0,"k":"m"},{"s":{"p":["*%_"],"r":"Mu"},"n":"Str","m":1,"k":"m"},{"n":"Str","s":{"r":"Mu","p":["*%_"]},"m":1,"k":"m"},{"n":"Str","s":{"r":"Mu","p":["*%_"]},"k":"m","m":1},{"m":0,"k":"m","s":{"p":["*%_"],"r":"Mu"},"n":"die"},{"s":{"p":["*%_"],"r":"Mu"},"n":"rethrow","k":"m","m":0},{"k":"m","m":0,"s":{"p":["*%_"],"r":"Mu"},"n":"backtrace"},{"s":{"p":["*%_"],"r":"Mu"},"n":"gist","k":"m","m":1},{"n":"gist","s":{"p":["*%_"],"r":"Mu"},"k":"m","m":1},{"s":{"r":"Mu","p":["*%_"]},"n":"gist","m":1,"k":"m"},{"k":"m","m":0,"n":"vault-backtrace","s":{"p":["*%_"],"r":"Mu"}},{"k":"s","m":0,"s":{"r":"Mu","p":["@auto","%init","*%_"]},"n":"BUILDALL"}],"k":"c","b":"A","a":[{"t":"Mu","n":"$.shape","k":"v"},{"k":"v","t":"Mu","n":"$!ex"},{"k":"v","n":"$!bt","t":"Mu"}]},{"a":[{"k":"v","n":"$.action","t":"Mu"},{"t":"Mu","n":"$.target-shape","k":"v"},{"t":"Mu","n":"$.source-shape","k":"v"},{"t":"Mu","n":"$!ex","k":"v"},{"t":"Mu","n":"$!bt","k":"v"}],"b":"A","m":[{"m":0,"k":"s","n":"BUILDALL","s":{"r":"Mu","p":["@auto","%init","*%_"]}},{"m":0,"k":"m","s":{"r":"Mu","p":["*%_"]},"n":"source-shape"},{"n":"message","s":{"p":["*%_"],"r":"Mu"},"m":0,"k":"m"},{"n":"target-shape","s":{"r":"Mu","p":["*%_"]},"k":"m","m":0},{"k":"m","m":0,"n":"action","s":{"p":["*%_"],"r":"Mu"}},{"m":0,"k":"s","n":"BUILDALL","s":{"p":["@auto","%init","*%_"],"r":"Mu"}},{"m":0,"k":"m","s":{"p":["*%_"],"r":"Bool"},"n":"resume"},{"m":0,"k":"m","s":{"p":["*%_"],"r":"Mu"},"n":"reset-backtrace"},{"k":"m","m":0,"s":{"p":["*%_"],"r":"Bool"},"n":"is-compile-time"},{"m":0,"k":"m","s":{"p":["$bt?","*%_"],"r":"Mu"},"n":"throw"},{"s":{"p":["*%_"],"r":"Mu"},"n":"fail","k":"m","m":0},{"n":"Str","s":{"p":["*%_"],"r":"Mu"},"m":1,"k":"m"},{"s":{"r":"Mu","p":["*%_"]},"n":"Str","k":"m","m":1},{"n":"Str","s":{"r":"Mu","p":["*%_"]},"m":1,"k":"m"},{"n":"die","s":{"r":"Mu","p":["*%_"]},"k":"m","m":0},{"n":"rethrow","s":{"p":["*%_"],"r":"Mu"},"k":"m","m":0},{"k":"m","m":0,"s":{"r":"Mu","p":["*%_"]},"n":"backtrace"},{"k":"m","m":1,"n":"gist","s":{"p":["*%_"],"r":"Mu"}},{"m":1,"k":"m","s":{"p":["*%_"],"r":"Mu"},"n":"gist"},{"k":"m","m":1,"s":{"p":["*%_"],"r":"Mu"},"n":"gist"},{"s":{"p":["*%_"],"r":"Mu"},"n":"vault-backtrace","m":0,"k":"m"},{"s":{"p":["@auto","%init","*%_"],"r":"Mu"},"n":"BUILDALL","k":"s","m":0}],"k":"c","t":"X::Assignment::ArrayShapeMismatch","n":"X::Assignment::ArrayShapeMismatch"},{"n":"X::InvalidTypeSmiley","t":"X::InvalidTypeSmiley","b":"A","a":[{"k":"v","n":"$.name","t":"Mu"},{"k":"v","t":"Mu","n":"$.filename"},{"n":"$.pos","t":"Mu","k":"v"},{"n":"$.line","t":"Mu","k":"v"},{"k":"v","t":"Mu","n":"$.column"},{"k":"v","t":"Positional","n":"@.modules"},{"n":"$.is-compile-time","t":"Mu","k":"v"},{"k":"v","t":"Mu","n":"$.pre"},{"k":"v","t":"Mu","n":"$.post"},{"k":"v","n":"@.highexpect","t":"Positional"},{"n":"$!ex","t":"Mu","k":"v"},{"n":"$!bt","t":"Mu","k":"v"}],"k":"c","m":[{"s":{"p":["*%_"],"r":"Mu"},"n":"message","m":0,"k":"m"},{"s":{"r":"Mu","p":["*%_"]},"n":"sorry_heading","m":0,"k":"m"},{"m":0,"k":"m","s":{"r":"Mu","p":["$file","$line","*%_"]},"n":"SET_FILE_LINE"},{"s":{"r":"Mu","p":["*%_"]},"n":"gist","k":"m","m":1},{"n":"gist","s":{"r":"Mu","p":["*%_"]},"k":"m","m":1},{"m":1,"k":"m","s":{"r":"Mu","p":["*%_"]},"n":"gist"},{"m":1,"k":"m","n":"gist","s":{"p":[":$sorry = Bool::True",":$expect = Bool::True","*%_"],"r":"Mu"}},{"m":0,"k":"m","n":"name","s":{"r":"Mu","p":["*%_"]}},{"n":"filename","s":{"r":"Mu","p":["*%_"]},"m":0,"k":"m"},{"n":"pos","s":{"r":"Mu","p":["*%_"]},"m":0,"k":"m"},{"n":"line","s":{"p":["*%_"],"r":"Mu"},"k":"m","m":0},{"s":{"r":"Mu","p":["*%_"]},"n":"column","m":0,"k":"m"},{"k":"m","m":0,"n":"modules","s":{"r":"Mu","p":["*%_"]}},{"n":"is-compile-time","s":{"p":["*%_"],"r":"Mu"},"m":0,"k":"m"},{"n":"pre","s":{"p":["*%_"],"r":"Mu"},"k":"m","m":0},{"m":0,"k":"m","n":"post","s":{"p":["*%_"],"r":"Mu"}},{"s":{"p":["*%_"],"r":"Mu"},"n":"highexpect","m":0,"k":"m"},{"n":"BUILDALL","s":{"r":"Mu","p":["@auto","%init","*%_"]},"m":0,"k":"s"},{"k":"m","m":0,"s":{"p":["*%_"],"r":"Bool"},"n":"resume"},{"n":"reset-backtrace","s":{"p":["*%_"],"r":"Mu"},"m":0,"k":"m"},{"s":{"r":"Bool","p":["*%_"]},"n":"is-compile-time","k":"m","m":0},{"n":"throw","s":{"r":"Mu","p":["$bt?","*%_"]},"k":"m","m":0},{"m":0,"k":"m","n":"fail","s":{"p":["*%_"],"r":"Mu"}},{"m":1,"k":"m","n":"Str","s":{"p":["*%_"],"r":"Mu"}},{"k":"m","m":1,"n":"Str","s":{"r":"Mu","p":["*%_"]}},{"k":"m","m":1,"n":"Str","s":{"r":"Mu","p":["*%_"]}},{"m":0,"k":"m","n":"die","s":{"r":"Mu","p":["*%_"]}},{"k":"m","m":0,"s":{"r":"Mu","p":["*%_"]},"n":"rethrow"},{"n":"backtrace","s":{"p":["*%_"],"r":"Mu"},"m":0,"k":"m"},{"k":"m","m":1,"n":"gist","s":{"r":"Mu","p":["*%_"]}},{"n":"gist","s":{"p":["*%_"],"r":"Mu"},"m":1,"k":"m"},{"k":"m","m":1,"n":"gist","s":{"p":["*%_"],"r":"Mu"}},{"s":{"p":["*%_"],"r":"Mu"},"n":"vault-backtrace","m":0,"k":"m"},{"s":{"p":["@auto","%init","*%_"],"r":"Mu"},"n":"BUILDALL","k":"s","m":0}]},{"n":"X::MultipleTypeSmiley","t":"X::MultipleTypeSmiley","k":"c","m":[{"k":"m","m":0,"n":"message","s":{"r":"Mu","p":["*%_"]}},{"n":"sorry_heading","s":{"p":["*%_"],"r":"Mu"},"k":"m","m":0},{"s":{"r":"Mu","p":["$file","$line","*%_"]},"n":"SET_FILE_LINE","k":"m","m":0},{"s":{"r":"Mu","p":["*%_"]},"n":"gist","k":"m","m":1},{"m":1,"k":"m","n":"gist","s":{"r":"Mu","p":["*%_"]}},{"k":"m","m":1,"s":{"r":"Mu","p":["*%_"]},"n":"gist"},{"m":1,"k":"m","n":"gist","s":{"r":"Mu","p":[":$sorry = Bool::True",":$expect = Bool::True","*%_"]}},{"s":{"p":["*%_"],"r":"Mu"},"n":"filename","k":"m","m":0},{"s":{"r":"Mu","p":["*%_"]},"n":"pos","k":"m","m":0},{"k":"m","m":0,"s":{"p":["*%_"],"r":"Mu"},"n":"line"},{"m":0,"k":"m","n":"column","s":{"r":"Mu","p":["*%_"]}},{"n":"modules","s":{"p":["*%_"],"r":"Mu"},"m":0,"k":"m"},{"k":"m","m":0,"s":{"p":["*%_"],"r":"Mu"},"n":"is-compile-time"},{"m":0,"k":"m","s":{"r":"Mu","p":["*%_"]},"n":"pre"},{"s":{"r":"Mu","p":["*%_"]},"n":"post","m":0,"k":"m"},{"k":"m","m":0,"n":"highexpect","s":{"p":["*%_"],"r":"Mu"}},{"n":"BUILDALL","s":{"p":["@auto","%init","*%_"],"r":"Mu"},"k":"s","m":0},{"k":"m","m":0,"n":"resume","s":{"p":["*%_"],"r":"Bool"}},{"s":{"p":["*%_"],"r":"Mu"},"n":"reset-backtrace","m":0,"k":"m"},{"s":{"p":["*%_"],"r":"Bool"},"n":"is-compile-time","m":0,"k":"m"},{"n":"throw","s":{"p":["$bt?","*%_"],"r":"Mu"},"k":"m","m":0},{"n":"fail","s":{"r":"Mu","p":["*%_"]},"m":0,"k":"m"},{"k":"m","m":1,"n":"Str","s":{"r":"Mu","p":["*%_"]}},{"s":{"r":"Mu","p":["*%_"]},"n":"Str","k":"m","m":1},{"s":{"p":["*%_"],"r":"Mu"},"n":"Str","m":1,"k":"m"},{"k":"m","m":0,"s":{"r":"Mu","p":["*%_"]},"n":"die"},{"k":"m","m":0,"n":"rethrow","s":{"p":["*%_"],"r":"Mu"}},{"s":{"p":["*%_"],"r":"Mu"},"n":"backtrace","m":0,"k":"m"},{"n":"gist","s":{"r":"Mu","p":["*%_"]},"k":"m","m":1},{"n":"gist","s":{"p":["*%_"],"r":"Mu"},"k":"m","m":1},{"k":"m","m":1,"s":{"r":"Mu","p":["*%_"]},"n":"gist"},{"n":"vault-backtrace","s":{"p":["*%_"],"r":"Mu"},"k":"m","m":0},{"m":0,"k":"s","n":"BUILDALL","s":{"p":["@auto","%init","*%_"],"r":"Mu"}}],"a":[{"k":"v","t":"Mu","n":"$.filename"},{"k":"v","n":"$.pos","t":"Mu"},{"n":"$.line","t":"Mu","k":"v"},{"k":"v","n":"$.column","t":"Mu"},{"n":"@.modules","t":"Positional","k":"v"},{"n":"$.is-compile-time","t":"Mu","k":"v"},{"n":"$.pre","t":"Mu","k":"v"},{"n":"$.post","t":"Mu","k":"v"},{"k":"v","t":"Positional","n":"@.highexpect"},{"n":"$!ex","t":"Mu","k":"v"},{"k":"v","t":"Mu","n":"$!bt"}],"b":"A"},{"n":"X::DateTime::TimezoneClash","t":"X::DateTime::TimezoneClash","b":"A","a":[{"n":"$!ex","t":"Mu","k":"v"},{"k":"v","t":"Mu","n":"$!bt"}],"k":"c","m":[{"k":"m","m":0,"s":{"r":"Mu","p":["*%_"]},"n":"message"},{"k":"s","m":0,"s":{"p":["@auto","%init","*%_"],"r":"Mu"},"n":"BUILDALL"},{"m":0,"k":"m","s":{"p":["*%_"],"r":"Bool"},"n":"resume"},{"k":"m","m":0,"n":"reset-backtrace","s":{"p":["*%_"],"r":"Mu"}},{"m":0,"k":"m","n":"is-compile-time","s":{"p":["*%_"],"r":"Bool"}},{"m":0,"k":"m","s":{"r":"Mu","p":["$bt?","*%_"]},"n":"throw"},{"s":{"p":["*%_"],"r":"Mu"},"n":"fail","k":"m","m":0},{"k":"m","m":1,"s":{"p":["*%_"],"r":"Mu"},"n":"Str"},{"n":"Str","s":{"r":"Mu","p":["*%_"]},"k":"m","m":1},{"m":1,"k":"m","n":"Str","s":{"p":["*%_"],"r":"Mu"}},{"k":"m","m":0,"n":"die","s":{"p":["*%_"],"r":"Mu"}},{"s":{"r":"Mu","p":["*%_"]},"n":"rethrow","m":0,"k":"m"},{"m":0,"k":"m","n":"backtrace","s":{"r":"Mu","p":["*%_"]}},{"k":"m","m":1,"s":{"p":["*%_"],"r":"Mu"},"n":"gist"},{"n":"gist","s":{"p":["*%_"],"r":"Mu"},"m":1,"k":"m"},{"s":{"r":"Mu","p":["*%_"]},"n":"gist","m":1,"k":"m"},{"m":0,"k":"m","s":{"p":["*%_"],"r":"Mu"},"n":"vault-backtrace"},{"k":"s","m":0,"n":"BUILDALL","s":{"p":["@auto","%init","*%_"],"r":"Mu"}}],"d":"TITLE\nclass X::DateTime::TimezoneClash\n\nSUBTITLE\nError due to using both time zone offset and :timezone\n\n    class X::DateTime::TimezoneClash does X::Temporal is Exception { }\n\n\nThis exception is thrown when code tries to create a DateTime object\nspecifying both a time zone offset and the named argument :timezone.\n\n    say DateTime.new('2015-12-24T12:23:00+0200');                   # works\n    say DateTime.new('2015-12-24T12:23:00', timezone => 7200);      # works\n    say DateTime.new('2015-12-24T12:23:00+0200', timezone => 7200); # exception\n\n\n"},{"t":"X::DateTime::InvalidDeltaUnit","n":"X::DateTime::InvalidDeltaUnit","m":[{"s":{"r":"Mu","p":["*%_"]},"n":"message","k":"m","m":0},{"k":"m","m":0,"n":"unit","s":{"p":["*%_"],"r":"Mu"}},{"s":{"r":"Mu","p":["@auto","%init","*%_"]},"n":"BUILDALL","m":0,"k":"s"},{"n":"resume","s":{"r":"Bool","p":["*%_"]},"k":"m","m":0},{"s":{"r":"Mu","p":["*%_"]},"n":"reset-backtrace","k":"m","m":0},{"m":0,"k":"m","s":{"p":["*%_"],"r":"Bool"},"n":"is-compile-time"},{"k":"m","m":0,"s":{"p":["$bt?","*%_"],"r":"Mu"},"n":"throw"},{"k":"m","m":0,"s":{"p":["*%_"],"r":"Mu"},"n":"fail"},{"k":"m","m":1,"n":"Str","s":{"r":"Mu","p":["*%_"]}},{"s":{"r":"Mu","p":["*%_"]},"n":"Str","k":"m","m":1},{"m":1,"k":"m","n":"Str","s":{"p":["*%_"],"r":"Mu"}},{"n":"die","s":{"r":"Mu","p":["*%_"]},"k":"m","m":0},{"m":0,"k":"m","n":"rethrow","s":{"r":"Mu","p":["*%_"]}},{"s":{"r":"Mu","p":["*%_"]},"n":"backtrace","m":0,"k":"m"},{"m":1,"k":"m","n":"gist","s":{"p":["*%_"],"r":"Mu"}},{"m":1,"k":"m","s":{"r":"Mu","p":["*%_"]},"n":"gist"},{"s":{"p":["*%_"],"r":"Mu"},"n":"gist","k":"m","m":1},{"n":"vault-backtrace","s":{"r":"Mu","p":["*%_"]},"k":"m","m":0},{"k":"s","m":0,"s":{"p":["@auto","%init","*%_"],"r":"Mu"},"n":"BUILDALL"}],"k":"c","a":[{"t":"Mu","n":"$.unit","k":"v"},{"k":"v","t":"Mu","n":"$!ex"},{"n":"$!bt","t":"Mu","k":"v"}],"b":"A"},{"n":"X::UnitScope::TooLate","t":"X::UnitScope::TooLate","k":"c","m":[{"m":0,"k":"m","n":"message","s":{"p":["*%_"],"r":"Mu"}},{"n":"sorry_heading","s":{"p":["*%_"],"r":"Mu"},"k":"m","m":0},{"s":{"p":["$file","$line","*%_"],"r":"Mu"},"n":"SET_FILE_LINE","m":0,"k":"m"},{"n":"gist","s":{"r":"Mu","p":["*%_"]},"k":"m","m":1},{"m":1,"k":"m","s":{"r":"Mu","p":["*%_"]},"n":"gist"},{"n":"gist","s":{"p":["*%_"],"r":"Mu"},"m":1,"k":"m"},{"m":1,"k":"m","n":"gist","s":{"r":"Mu","p":[":$sorry = Bool::True",":$expect = Bool::True","*%_"]}},{"k":"m","m":0,"n":"what","s":{"p":["*%_"],"r":"Mu"}},{"m":0,"k":"m","n":"filename","s":{"p":["*%_"],"r":"Mu"}},{"s":{"r":"Mu","p":["*%_"]},"n":"pos","m":0,"k":"m"},{"k":"m","m":0,"n":"line","s":{"r":"Mu","p":["*%_"]}},{"k":"m","m":0,"s":{"r":"Mu","p":["*%_"]},"n":"column"},{"s":{"r":"Mu","p":["*%_"]},"n":"modules","k":"m","m":0},{"s":{"p":["*%_"],"r":"Mu"},"n":"is-compile-time","k":"m","m":0},{"s":{"r":"Mu","p":["*%_"]},"n":"pre","k":"m","m":0},{"k":"m","m":0,"n":"post","s":{"r":"Mu","p":["*%_"]}},{"k":"m","m":0,"n":"highexpect","s":{"p":["*%_"],"r":"Mu"}},{"m":0,"k":"s","n":"BUILDALL","s":{"p":["@auto","%init","*%_"],"r":"Mu"}},{"m":0,"k":"m","s":{"r":"Bool","p":["*%_"]},"n":"resume"},{"s":{"r":"Mu","p":["*%_"]},"n":"reset-backtrace","m":0,"k":"m"},{"k":"m","m":0,"s":{"r":"Bool","p":["*%_"]},"n":"is-compile-time"},{"n":"throw","s":{"p":["$bt?","*%_"],"r":"Mu"},"m":0,"k":"m"},{"k":"m","m":0,"n":"fail","s":{"r":"Mu","p":["*%_"]}},{"s":{"p":["*%_"],"r":"Mu"},"n":"Str","k":"m","m":1},{"m":1,"k":"m","n":"Str","s":{"p":["*%_"],"r":"Mu"}},{"s":{"r":"Mu","p":["*%_"]},"n":"Str","m":1,"k":"m"},{"k":"m","m":0,"s":{"p":["*%_"],"r":"Mu"},"n":"die"},{"n":"rethrow","s":{"r":"Mu","p":["*%_"]},"k":"m","m":0},{"s":{"r":"Mu","p":["*%_"]},"n":"backtrace","m":0,"k":"m"},{"k":"m","m":1,"s":{"r":"Mu","p":["*%_"]},"n":"gist"},{"n":"gist","s":{"p":["*%_"],"r":"Mu"},"k":"m","m":1},{"m":1,"k":"m","s":{"p":["*%_"],"r":"Mu"},"n":"gist"},{"s":{"p":["*%_"],"r":"Mu"},"n":"vault-backtrace","m":0,"k":"m"},{"n":"BUILDALL","s":{"r":"Mu","p":["@auto","%init","*%_"]},"k":"s","m":0}],"a":[{"t":"Mu","n":"$.what","k":"v"},{"k":"v","n":"$.filename","t":"Mu"},{"k":"v","t":"Mu","n":"$.pos"},{"n":"$.line","t":"Mu","k":"v"},{"k":"v","n":"$.column","t":"Mu"},{"k":"v","t":"Positional","n":"@.modules"},{"k":"v","n":"$.is-compile-time","t":"Mu"},{"k":"v","n":"$.pre","t":"Mu"},{"k":"v","t":"Mu","n":"$.post"},{"k":"v","n":"@.highexpect","t":"Positional"},{"k":"v","t":"Mu","n":"$!ex"},{"t":"Mu","n":"$!bt","k":"v"}],"b":"A"},{"n":"X::UnitScope::Invalid","t":"X::UnitScope::Invalid","a":[{"k":"v","t":"Mu","n":"$.what"},{"t":"Mu","n":"$.where","k":"v"},{"n":"$.suggestion","t":"Str:D","k":"v"},{"k":"v","n":"$.filename","t":"Mu"},{"k":"v","t":"Mu","n":"$.pos"},{"k":"v","n":"$.line","t":"Mu"},{"k":"v","t":"Mu","n":"$.column"},{"k":"v","t":"Positional","n":"@.modules"},{"k":"v","t":"Mu","n":"$.is-compile-time"},{"t":"Mu","n":"$.pre","k":"v"},{"t":"Mu","n":"$.post","k":"v"},{"n":"@.highexpect","t":"Positional","k":"v"},{"k":"v","n":"$!ex","t":"Mu"},{"k":"v","n":"$!bt","t":"Mu"}],"b":"A","k":"c","m":[{"s":{"p":["*%_"],"r":"Mu"},"n":"message","m":0,"k":"m"},{"m":0,"k":"m","s":{"p":["*%_"],"r":"Mu"},"n":"sorry_heading"},{"m":0,"k":"m","s":{"p":["$file","$line","*%_"],"r":"Mu"},"n":"SET_FILE_LINE"},{"s":{"r":"Mu","p":["*%_"]},"n":"gist","m":1,"k":"m"},{"m":1,"k":"m","s":{"r":"Mu","p":["*%_"]},"n":"gist"},{"s":{"r":"Mu","p":["*%_"]},"n":"gist","m":1,"k":"m"},{"m":1,"k":"m","s":{"r":"Mu","p":[":$sorry = Bool::True",":$expect = Bool::True","*%_"]},"n":"gist"},{"m":0,"k":"m","s":{"r":"Mu","p":["*%_"]},"n":"what"},{"n":"where","s":{"r":"Mu","p":["*%_"]},"m":0,"k":"m"},{"k":"m","m":0,"n":"suggestion","s":{"p":["*%_"],"r":"Mu"}},{"s":{"p":["*%_"],"r":"Mu"},"n":"filename","m":0,"k":"m"},{"m":0,"k":"m","s":{"p":["*%_"],"r":"Mu"},"n":"pos"},{"k":"m","m":0,"s":{"p":["*%_"],"r":"Mu"},"n":"line"},{"n":"column","s":{"p":["*%_"],"r":"Mu"},"k":"m","m":0},{"n":"modules","s":{"p":["*%_"],"r":"Mu"},"k":"m","m":0},{"s":{"r":"Mu","p":["*%_"]},"n":"is-compile-time","k":"m","m":0},{"s":{"r":"Mu","p":["*%_"]},"n":"pre","k":"m","m":0},{"m":0,"k":"m","n":"post","s":{"p":["*%_"],"r":"Mu"}},{"n":"highexpect","s":{"r":"Mu","p":["*%_"]},"k":"m","m":0},{"s":{"p":["@auto","%init","*%_"],"r":"Mu"},"n":"BUILDALL","k":"s","m":0},{"m":0,"k":"m","s":{"p":["*%_"],"r":"Bool"},"n":"resume"},{"k":"m","m":0,"n":"reset-backtrace","s":{"p":["*%_"],"r":"Mu"}},{"k":"m","m":0,"s":{"p":["*%_"],"r":"Bool"},"n":"is-compile-time"},{"s":{"p":["$bt?","*%_"],"r":"Mu"},"n":"throw","m":0,"k":"m"},{"k":"m","m":0,"n":"fail","s":{"r":"Mu","p":["*%_"]}},{"m":1,"k":"m","n":"Str","s":{"p":["*%_"],"r":"Mu"}},{"s":{"p":["*%_"],"r":"Mu"},"n":"Str","k":"m","m":1},{"k":"m","m":1,"s":{"r":"Mu","p":["*%_"]},"n":"Str"},{"k":"m","m":0,"n":"die","s":{"r":"Mu","p":["*%_"]}},{"n":"rethrow","s":{"r":"Mu","p":["*%_"]},"k":"m","m":0},{"k":"m","m":0,"n":"backtrace","s":{"r":"Mu","p":["*%_"]}},{"k":"m","m":1,"n":"gist","s":{"p":["*%_"],"r":"Mu"}},{"m":1,"k":"m","s":{"p":["*%_"],"r":"Mu"},"n":"gist"},{"n":"gist","s":{"r":"Mu","p":["*%_"]},"k":"m","m":1},{"s":{"p":["*%_"],"r":"Mu"},"n":"vault-backtrace","k":"m","m":0},{"s":{"p":["@auto","%init","*%_"],"r":"Mu"},"n":"BUILDALL","k":"s","m":0}]},{"a":[{"n":"$.pseudo-package","t":"Mu","k":"v"},{"t":"Mu","n":"$.action","k":"v"},{"n":"$.filename","t":"Mu","k":"v"},{"k":"v","n":"$.pos","t":"Mu"},{"n":"$.line","t":"Mu","k":"v"},{"n":"$.column","t":"Mu","k":"v"},{"k":"v","n":"@.modules","t":"Positional"},{"k":"v","n":"$.is-compile-time","t":"Mu"},{"k":"v","t":"Mu","n":"$.pre"},{"k":"v","t":"Mu","n":"$.post"},{"k":"v","t":"Positional","n":"@.highexpect"},{"k":"v","t":"Mu","n":"$!ex"},{"n":"$!bt","t":"Mu","k":"v"}],"b":"A","m":[{"m":0,"k":"m","s":{"r":"Mu","p":["*%_"]},"n":"message"},{"n":"sorry_heading","s":{"p":["*%_"],"r":"Mu"},"m":0,"k":"m"},{"m":0,"k":"m","s":{"r":"Mu","p":["$file","$line","*%_"]},"n":"SET_FILE_LINE"},{"m":1,"k":"m","s":{"r":"Mu","p":["*%_"]},"n":"gist"},{"k":"m","m":1,"s":{"r":"Mu","p":["*%_"]},"n":"gist"},{"k":"m","m":1,"n":"gist","s":{"p":["*%_"],"r":"Mu"}},{"s":{"p":[":$sorry = Bool::True",":$expect = Bool::True","*%_"],"r":"Mu"},"n":"gist","m":1,"k":"m"},{"s":{"r":"Mu","p":["*%_"]},"n":"pseudo-package","k":"m","m":0},{"s":{"r":"Mu","p":["*%_"]},"n":"action","k":"m","m":0},{"n":"filename","s":{"r":"Mu","p":["*%_"]},"m":0,"k":"m"},{"n":"pos","s":{"p":["*%_"],"r":"Mu"},"k":"m","m":0},{"k":"m","m":0,"n":"line","s":{"r":"Mu","p":["*%_"]}},{"m":0,"k":"m","n":"column","s":{"p":["*%_"],"r":"Mu"}},{"k":"m","m":0,"s":{"p":["*%_"],"r":"Mu"},"n":"modules"},{"s":{"r":"Mu","p":["*%_"]},"n":"is-compile-time","m":0,"k":"m"},{"n":"pre","s":{"r":"Mu","p":["*%_"]},"k":"m","m":0},{"m":0,"k":"m","n":"post","s":{"p":["*%_"],"r":"Mu"}},{"k":"m","m":0,"n":"highexpect","s":{"p":["*%_"],"r":"Mu"}},{"s":{"p":["@auto","%init","*%_"],"r":"Mu"},"n":"BUILDALL","m":0,"k":"s"},{"n":"resume","s":{"p":["*%_"],"r":"Bool"},"m":0,"k":"m"},{"m":0,"k":"m","s":{"r":"Mu","p":["*%_"]},"n":"reset-backtrace"},{"s":{"p":["*%_"],"r":"Bool"},"n":"is-compile-time","k":"m","m":0},{"n":"throw","s":{"p":["$bt?","*%_"],"r":"Mu"},"k":"m","m":0},{"m":0,"k":"m","s":{"r":"Mu","p":["*%_"]},"n":"fail"},{"s":{"r":"Mu","p":["*%_"]},"n":"Str","m":1,"k":"m"},{"m":1,"k":"m","s":{"r":"Mu","p":["*%_"]},"n":"Str"},{"s":{"r":"Mu","p":["*%_"]},"n":"Str","k":"m","m":1},{"m":0,"k":"m","s":{"r":"Mu","p":["*%_"]},"n":"die"},{"m":0,"k":"m","n":"rethrow","s":{"p":["*%_"],"r":"Mu"}},{"n":"backtrace","s":{"p":["*%_"],"r":"Mu"},"m":0,"k":"m"},{"n":"gist","s":{"p":["*%_"],"r":"Mu"},"m":1,"k":"m"},{"k":"m","m":1,"s":{"r":"Mu","p":["*%_"]},"n":"gist"},{"m":1,"k":"m","s":{"r":"Mu","p":["*%_"]},"n":"gist"},{"n":"vault-backtrace","s":{"p":["*%_"],"r":"Mu"},"k":"m","m":0},{"n":"BUILDALL","s":{"p":["@auto","%init","*%_"],"r":"Mu"},"m":0,"k":"s"}],"k":"c","t":"X::PseudoPackage::InDeclaration","n":"X::PseudoPackage::InDeclaration"},{"n":"X::Pod","t":"X::Pod","b":"C","k":"ro","d":"TITLE\nrole X::Pod\n\nSUBTITLE\nPod related error\n\n    role X::Pod { }\n\nCommon role for Pod related errors."},{"a":[{"t":"Mu","n":"$!ex","k":"v"},{"t":"Mu","n":"$!bt","k":"v"}],"b":"A","k":"c","m":[{"m":0,"k":"m","n":"message","s":{"p":["*%_"],"r":"Mu"}},{"k":"s","m":0,"s":{"r":"Mu","p":["@auto","%init","*%_"]},"n":"BUILDALL"},{"s":{"p":["*%_"],"r":"Bool"},"n":"resume","m":0,"k":"m"},{"n":"reset-backtrace","s":{"r":"Mu","p":["*%_"]},"m":0,"k":"m"},{"m":0,"k":"m","s":{"p":["*%_"],"r":"Bool"},"n":"is-compile-time"},{"m":0,"k":"m","n":"throw","s":{"r":"Mu","p":["$bt?","*%_"]}},{"s":{"r":"Mu","p":["*%_"]},"n":"fail","k":"m","m":0},{"m":1,"k":"m","n":"Str","s":{"p":["*%_"],"r":"Mu"}},{"n":"Str","s":{"p":["*%_"],"r":"Mu"},"k":"m","m":1},{"m":1,"k":"m","s":{"r":"Mu","p":["*%_"]},"n":"Str"},{"k":"m","m":0,"n":"die","s":{"r":"Mu","p":["*%_"]}},{"m":0,"k":"m","s":{"r":"Mu","p":["*%_"]},"n":"rethrow"},{"k":"m","m":0,"s":{"r":"Mu","p":["*%_"]},"n":"backtrace"},{"s":{"p":["*%_"],"r":"Mu"},"n":"gist","m":1,"k":"m"},{"m":1,"k":"m","s":{"r":"Mu","p":["*%_"]},"n":"gist"},{"k":"m","m":1,"n":"gist","s":{"p":["*%_"],"r":"Mu"}},{"m":0,"k":"m","s":{"p":["*%_"],"r":"Mu"},"n":"vault-backtrace"},{"m":0,"k":"s","n":"BUILDALL","s":{"p":["@auto","%init","*%_"],"r":"Mu"}}],"t":"X::Lock::ConditionVariable::New","n":"X::Lock::ConditionVariable::New"},{"k":"c","m":[{"n":"message","s":{"r":"Mu","p":["*%_"]},"k":"m","m":0},{"k":"s","m":0,"n":"BUILDALL","s":{"r":"Mu","p":["@auto","%init","*%_"]}},{"m":0,"k":"m","n":"resume","s":{"r":"Bool","p":["*%_"]}},{"n":"reset-backtrace","s":{"p":["*%_"],"r":"Mu"},"k":"m","m":0},{"n":"is-compile-time","s":{"r":"Bool","p":["*%_"]},"k":"m","m":0},{"k":"m","m":0,"n":"throw","s":{"p":["$bt?","*%_"],"r":"Mu"}},{"s":{"r":"Mu","p":["*%_"]},"n":"fail","k":"m","m":0},{"s":{"r":"Mu","p":["*%_"]},"n":"Str","k":"m","m":1},{"k":"m","m":1,"n":"Str","s":{"r":"Mu","p":["*%_"]}},{"m":1,"k":"m","n":"Str","s":{"r":"Mu","p":["*%_"]}},{"n":"die","s":{"p":["*%_"],"r":"Mu"},"m":0,"k":"m"},{"m":0,"k":"m","n":"rethrow","s":{"r":"Mu","p":["*%_"]}},{"n":"backtrace","s":{"p":["*%_"],"r":"Mu"},"m":0,"k":"m"},{"n":"gist","s":{"p":["*%_"],"r":"Mu"},"k":"m","m":1},{"k":"m","m":1,"s":{"p":["*%_"],"r":"Mu"},"n":"gist"},{"s":{"p":["*%_"],"r":"Mu"},"n":"gist","m":1,"k":"m"},{"k":"m","m":0,"n":"vault-backtrace","s":{"p":["*%_"],"r":"Mu"}},{"s":{"r":"Mu","p":["@auto","%init","*%_"]},"n":"BUILDALL","m":0,"k":"s"}],"a":[{"k":"v","n":"$!ex","t":"Mu"},{"k":"v","n":"$!bt","t":"Mu"}],"b":"A","t":"X::Lock::Async::NotLocked","n":"X::Lock::Async::NotLocked"},{"d":"TITLE\nclass X::Eval::NoSuchLang\n\nSUBTITLE\nError due to specifying an unknown language for EVAL\n\n    class X::Eval::NoSuchLang is Exception { }\n\nError thrown when EVAL($str, :$lang) specifies a language that the compiler\ndoes not know how to handle.\n\nFor example\n\n    EVAL 'boo', lang => \"bar\";\n    CATCH { default { put .^name, ': ', .Str } };\n    # OUTPUT: «X::Eval::NoSuchLang: No compiler available for language 'bar'␤»\n\n","m":[{"m":0,"k":"m","n":"message","s":{"p":["*%_"],"r":"Mu"}},{"m":0,"k":"m","n":"lang","s":{"p":["*%_"],"r":"Mu"}},{"s":{"r":"Mu","p":["@auto","%init","*%_"]},"n":"BUILDALL","m":0,"k":"s"},{"n":"resume","s":{"p":["*%_"],"r":"Bool"},"m":0,"k":"m"},{"n":"reset-backtrace","s":{"r":"Mu","p":["*%_"]},"k":"m","m":0},{"s":{"r":"Bool","p":["*%_"]},"n":"is-compile-time","k":"m","m":0},{"k":"m","m":0,"n":"throw","s":{"r":"Mu","p":["$bt?","*%_"]}},{"n":"fail","s":{"p":["*%_"],"r":"Mu"},"k":"m","m":0},{"k":"m","m":1,"n":"Str","s":{"p":["*%_"],"r":"Mu"}},{"s":{"p":["*%_"],"r":"Mu"},"n":"Str","k":"m","m":1},{"m":1,"k":"m","s":{"r":"Mu","p":["*%_"]},"n":"Str"},{"s":{"r":"Mu","p":["*%_"]},"n":"die","k":"m","m":0},{"n":"rethrow","s":{"p":["*%_"],"r":"Mu"},"m":0,"k":"m"},{"s":{"r":"Mu","p":["*%_"]},"n":"backtrace","m":0,"k":"m"},{"m":1,"k":"m","s":{"p":["*%_"],"r":"Mu"},"n":"gist"},{"n":"gist","s":{"p":["*%_"],"r":"Mu"},"k":"m","m":1},{"n":"gist","s":{"p":["*%_"],"r":"Mu"},"m":1,"k":"m"},{"k":"m","m":0,"n":"vault-backtrace","s":{"r":"Mu","p":["*%_"]}},{"m":0,"k":"s","n":"BUILDALL","s":{"p":["@auto","%init","*%_"],"r":"Mu"}}],"k":"c","b":"A","a":[{"n":"$.lang","t":"Mu","k":"v"},{"n":"$!ex","t":"Mu","k":"v"},{"k":"v","n":"$!bt","t":"Mu"}],"t":"X::Eval::NoSuchLang","n":"X::Eval::NoSuchLang"},{"n":"X::NQP::NotFound","t":"X::NQP::NotFound","a":[{"k":"v","t":"Mu","n":"$.op"},{"k":"v","n":"$!ex","t":"Mu"},{"k":"v","t":"Mu","n":"$!bt"}],"b":"A","k":"c","m":[{"s":{"p":["*%_"],"r":"Mu"},"n":"message","m":0,"k":"m"},{"k":"m","m":0,"n":"op","s":{"p":["*%_"],"r":"Mu"}},{"s":{"r":"Mu","p":["@auto","%init","*%_"]},"n":"BUILDALL","k":"s","m":0},{"m":0,"k":"m","s":{"r":"Bool","p":["*%_"]},"n":"resume"},{"k":"m","m":0,"n":"reset-backtrace","s":{"p":["*%_"],"r":"Mu"}},{"k":"m","m":0,"n":"is-compile-time","s":{"p":["*%_"],"r":"Bool"}},{"n":"throw","s":{"r":"Mu","p":["$bt?","*%_"]},"m":0,"k":"m"},{"n":"fail","s":{"r":"Mu","p":["*%_"]},"k":"m","m":0},{"n":"Str","s":{"p":["*%_"],"r":"Mu"},"k":"m","m":1},{"s":{"r":"Mu","p":["*%_"]},"n":"Str","k":"m","m":1},{"n":"Str","s":{"r":"Mu","p":["*%_"]},"k":"m","m":1},{"n":"die","s":{"r":"Mu","p":["*%_"]},"m":0,"k":"m"},{"s":{"r":"Mu","p":["*%_"]},"n":"rethrow","k":"m","m":0},{"n":"backtrace","s":{"p":["*%_"],"r":"Mu"},"m":0,"k":"m"},{"s":{"r":"Mu","p":["*%_"]},"n":"gist","m":1,"k":"m"},{"m":1,"k":"m","n":"gist","s":{"p":["*%_"],"r":"Mu"}},{"m":1,"k":"m","s":{"p":["*%_"],"r":"Mu"},"n":"gist"},{"k":"m","m":0,"s":{"p":["*%_"],"r":"Mu"},"n":"vault-backtrace"},{"k":"s","m":0,"n":"BUILDALL","s":{"r":"Mu","p":["@auto","%init","*%_"]}}]},{"t":"X::Trait::Unknown","n":"X::Trait::Unknown","k":"c","m":[{"k":"m","m":0,"n":"message","s":{"r":"Mu","p":["*%_"]}},{"m":0,"k":"m","s":{"p":["*%_"],"r":"Mu"},"n":"type"},{"s":{"p":["*%_"],"r":"Mu"},"n":"subtype","m":0,"k":"m"},{"n":"declaring","s":{"r":"Mu","p":["*%_"]},"k":"m","m":0},{"n":"BUILDALL","s":{"r":"Mu","p":["@auto","%init","*%_"]},"m":0,"k":"s"},{"s":{"p":["*%_"],"r":"Bool"},"n":"resume","k":"m","m":0},{"k":"m","m":0,"s":{"r":"Mu","p":["*%_"]},"n":"reset-backtrace"},{"s":{"r":"Bool","p":["*%_"]},"n":"is-compile-time","k":"m","m":0},{"s":{"r":"Mu","p":["$bt?","*%_"]},"n":"throw","m":0,"k":"m"},{"s":{"r":"Mu","p":["*%_"]},"n":"fail","m":0,"k":"m"},{"n":"Str","s":{"r":"Mu","p":["*%_"]},"k":"m","m":1},{"k":"m","m":1,"n":"Str","s":{"r":"Mu","p":["*%_"]}},{"m":1,"k":"m","n":"Str","s":{"p":["*%_"],"r":"Mu"}},{"k":"m","m":0,"s":{"p":["*%_"],"r":"Mu"},"n":"die"},{"m":0,"k":"m","n":"rethrow","s":{"p":["*%_"],"r":"Mu"}},{"k":"m","m":0,"n":"backtrace","s":{"r":"Mu","p":["*%_"]}},{"s":{"r":"Mu","p":["*%_"]},"n":"gist","k":"m","m":1},{"m":1,"k":"m","n":"gist","s":{"r":"Mu","p":["*%_"]}},{"n":"gist","s":{"r":"Mu","p":["*%_"]},"m":1,"k":"m"},{"k":"m","m":0,"s":{"p":["*%_"],"r":"Mu"},"n":"vault-backtrace"},{"m":0,"k":"s","s":{"r":"Mu","p":["@auto","%init","*%_"]},"n":"BUILDALL"}],"a":[{"k":"v","t":"Mu","n":"$.type"},{"k":"v","n":"$.subtype","t":"Mu"},{"k":"v","t":"Mu","n":"$.declaring"},{"t":"Mu","n":"$!ex","k":"v"},{"k":"v","n":"$!bt","t":"Mu"}],"b":"A"},{"k":"c","m":[{"n":"message","s":{"p":["*%_"],"r":"Mu"},"k":"m","m":0},{"m":0,"k":"m","n":"type","s":{"r":"Mu","p":["*%_"]}},{"s":{"r":"Mu","p":["*%_"]},"n":"subtype","k":"m","m":0},{"k":"m","m":0,"s":{"r":"Mu","p":["*%_"]},"n":"native"},{"k":"s","m":0,"s":{"r":"Mu","p":["@auto","%init","*%_"]},"n":"BUILDALL"},{"k":"m","m":0,"n":"resume","s":{"r":"Bool","p":["*%_"]}},{"k":"m","m":0,"s":{"r":"Mu","p":["*%_"]},"n":"reset-backtrace"},{"m":0,"k":"m","n":"is-compile-time","s":{"p":["*%_"],"r":"Bool"}},{"n":"throw","s":{"p":["$bt?","*%_"],"r":"Mu"},"m":0,"k":"m"},{"k":"m","m":0,"s":{"p":["*%_"],"r":"Mu"},"n":"fail"},{"m":1,"k":"m","s":{"r":"Mu","p":["*%_"]},"n":"Str"},{"s":{"p":["*%_"],"r":"Mu"},"n":"Str","m":1,"k":"m"},{"k":"m","m":1,"n":"Str","s":{"r":"Mu","p":["*%_"]}},{"k":"m","m":0,"s":{"p":["*%_"],"r":"Mu"},"n":"die"},{"s":{"r":"Mu","p":["*%_"]},"n":"rethrow","k":"m","m":0},{"k":"m","m":0,"n":"backtrace","s":{"r":"Mu","p":["*%_"]}},{"m":1,"k":"m","n":"gist","s":{"r":"Mu","p":["*%_"]}},{"n":"gist","s":{"p":["*%_"],"r":"Mu"},"m":1,"k":"m"},{"s":{"r":"Mu","p":["*%_"]},"n":"gist","k":"m","m":1},{"s":{"p":["*%_"],"r":"Mu"},"n":"vault-backtrace","k":"m","m":0},{"s":{"p":["@auto","%init","*%_"],"r":"Mu"},"n":"BUILDALL","m":0,"k":"s"}],"b":"A","a":[{"t":"Mu","n":"$.type","k":"v"},{"k":"v","n":"$.subtype","t":"Mu"},{"n":"$.native","t":"Mu","k":"v"},{"k":"v","n":"$!ex","t":"Mu"},{"n":"$!bt","t":"Mu","k":"v"}],"n":"X::Trait::NotOnNative","t":"X::Trait::NotOnNative"},{"b":"A","a":[{"t":"Mu","n":"$.type","k":"v"},{"t":"Mu","n":"$.subtype","k":"v"},{"k":"v","n":"$.declaring","t":"Mu"},{"t":"Mu","n":"$.scope","k":"v"},{"k":"v","n":"$.supported","t":"Mu"},{"t":"Mu","n":"$!ex","k":"v"},{"k":"v","n":"$!bt","t":"Mu"}],"k":"c","m":[{"k":"m","m":0,"n":"message","s":{"r":"Mu","p":["*%_"]}},{"m":0,"k":"m","n":"type","s":{"p":["*%_"],"r":"Mu"}},{"m":0,"k":"m","n":"subtype","s":{"p":["*%_"],"r":"Mu"}},{"m":0,"k":"m","s":{"p":["*%_"],"r":"Mu"},"n":"declaring"},{"s":{"r":"Mu","p":["*%_"]},"n":"scope","k":"m","m":0},{"s":{"p":["*%_"],"r":"Mu"},"n":"supported","k":"m","m":0},{"s":{"r":"Mu","p":["@auto","%init","*%_"]},"n":"BUILDALL","m":0,"k":"s"},{"k":"m","m":0,"n":"resume","s":{"r":"Bool","p":["*%_"]}},{"s":{"r":"Mu","p":["*%_"]},"n":"reset-backtrace","k":"m","m":0},{"k":"m","m":0,"s":{"r":"Bool","p":["*%_"]},"n":"is-compile-time"},{"s":{"r":"Mu","p":["$bt?","*%_"]},"n":"throw","m":0,"k":"m"},{"k":"m","m":0,"s":{"r":"Mu","p":["*%_"]},"n":"fail"},{"m":1,"k":"m","s":{"r":"Mu","p":["*%_"]},"n":"Str"},{"n":"Str","s":{"r":"Mu","p":["*%_"]},"k":"m","m":1},{"m":1,"k":"m","s":{"r":"Mu","p":["*%_"]},"n":"Str"},{"k":"m","m":0,"n":"die","s":{"r":"Mu","p":["*%_"]}},{"s":{"r":"Mu","p":["*%_"]},"n":"rethrow","m":0,"k":"m"},{"k":"m","m":0,"s":{"r":"Mu","p":["*%_"]},"n":"backtrace"},{"k":"m","m":1,"s":{"p":["*%_"],"r":"Mu"},"n":"gist"},{"k":"m","m":1,"n":"gist","s":{"r":"Mu","p":["*%_"]}},{"m":1,"k":"m","n":"gist","s":{"p":["*%_"],"r":"Mu"}},{"m":0,"k":"m","n":"vault-backtrace","s":{"r":"Mu","p":["*%_"]}},{"n":"BUILDALL","s":{"r":"Mu","p":["@auto","%init","*%_"]},"k":"s","m":0}],"n":"X::Trait::Scope","t":"X::Trait::Scope"},{"n":"X::Trait::Invalid","t":"X::Trait::Invalid","b":"A","a":[{"n":"$.type","t":"Mu","k":"v"},{"n":"$.subtype","t":"Mu","k":"v"},{"k":"v","t":"Mu","n":"$.declaring"},{"k":"v","t":"Mu","n":"$.name"},{"k":"v","n":"$!ex","t":"Mu"},{"k":"v","n":"$!bt","t":"Mu"}],"m":[{"s":{"p":["*%_"],"r":"Mu"},"n":"message","k":"m","m":0},{"m":0,"k":"m","s":{"r":"Mu","p":["*%_"]},"n":"type"},{"s":{"p":["*%_"],"r":"Mu"},"n":"subtype","m":0,"k":"m"},{"s":{"r":"Mu","p":["*%_"]},"n":"declaring","k":"m","m":0},{"m":0,"k":"m","s":{"r":"Mu","p":["*%_"]},"n":"name"},{"m":0,"k":"s","s":{"r":"Mu","p":["@auto","%init","*%_"]},"n":"BUILDALL"},{"n":"resume","s":{"r":"Bool","p":["*%_"]},"k":"m","m":0},{"k":"m","m":0,"s":{"p":["*%_"],"r":"Mu"},"n":"reset-backtrace"},{"n":"is-compile-time","s":{"r":"Bool","p":["*%_"]},"m":0,"k":"m"},{"k":"m","m":0,"s":{"r":"Mu","p":["$bt?","*%_"]},"n":"throw"},{"s":{"p":["*%_"],"r":"Mu"},"n":"fail","m":0,"k":"m"},{"s":{"r":"Mu","p":["*%_"]},"n":"Str","m":1,"k":"m"},{"n":"Str","s":{"r":"Mu","p":["*%_"]},"k":"m","m":1},{"k":"m","m":1,"s":{"r":"Mu","p":["*%_"]},"n":"Str"},{"m":0,"k":"m","s":{"p":["*%_"],"r":"Mu"},"n":"die"},{"n":"rethrow","s":{"r":"Mu","p":["*%_"]},"k":"m","m":0},{"s":{"p":["*%_"],"r":"Mu"},"n":"backtrace","k":"m","m":0},{"s":{"r":"Mu","p":["*%_"]},"n":"gist","m":1,"k":"m"},{"n":"gist","s":{"r":"Mu","p":["*%_"]},"k":"m","m":1},{"k":"m","m":1,"n":"gist","s":{"p":["*%_"],"r":"Mu"}},{"k":"m","m":0,"s":{"p":["*%_"],"r":"Mu"},"n":"vault-backtrace"},{"s":{"p":["@auto","%init","*%_"],"r":"Mu"},"n":"BUILDALL","k":"s","m":0}],"k":"c"},{"k":"c","m":[{"k":"s","m":0,"n":"BUILDALL","s":{"p":["@auto","%init","*%_"],"r":"Mu"}},{"n":"resume","s":{"r":"Bool","p":["*%_"]},"k":"m","m":0},{"k":"m","m":0,"n":"reset-backtrace","s":{"r":"Mu","p":["*%_"]}},{"k":"m","m":0,"n":"is-compile-time","s":{"r":"Bool","p":["*%_"]}},{"n":"throw","s":{"p":["$bt?","*%_"],"r":"Mu"},"k":"m","m":0},{"k":"m","m":0,"s":{"r":"Mu","p":["*%_"]},"n":"fail"},{"s":{"p":["*%_"],"r":"Mu"},"n":"Str","k":"m","m":1},{"n":"Str","s":{"p":["*%_"],"r":"Mu"},"m":1,"k":"m"},{"n":"Str","s":{"p":["*%_"],"r":"Mu"},"k":"m","m":1},{"k":"m","m":0,"s":{"r":"Mu","p":["*%_"]},"n":"die"},{"m":0,"k":"m","n":"rethrow","s":{"r":"Mu","p":["*%_"]}},{"s":{"p":["*%_"],"r":"Mu"},"n":"backtrace","m":0,"k":"m"},{"n":"gist","s":{"p":["*%_"],"r":"Mu"},"k":"m","m":1},{"k":"m","m":1,"s":{"p":["*%_"],"r":"Mu"},"n":"gist"},{"s":{"p":["*%_"],"r":"Mu"},"n":"gist","m":1,"k":"m"},{"s":{"p":["*%_"],"r":"Mu"},"n":"vault-backtrace","k":"m","m":0},{"s":{"p":["@auto","%init","*%_"],"r":"Mu"},"n":"BUILDALL","k":"s","m":0}],"b":"A","a":[{"k":"v","n":"$!ex","t":"Mu"},{"t":"Mu","n":"$!bt","k":"v"}],"t":"X::Worry","n":"X::Worry"},{"k":"c","m":[{"n":"BUILDALL","s":{"p":["@auto","%init","*%_"],"r":"Mu"},"k":"s","m":0},{"n":"BUILDALL","s":{"p":["@auto","%init","*%_"],"r":"Mu"},"k":"s","m":0},{"n":"resume","s":{"p":["*%_"],"r":"Bool"},"m":0,"k":"m"},{"n":"reset-backtrace","s":{"r":"Mu","p":["*%_"]},"m":0,"k":"m"},{"k":"m","m":0,"s":{"p":["*%_"],"r":"Bool"},"n":"is-compile-time"},{"s":{"p":["$bt?","*%_"],"r":"Mu"},"n":"throw","m":0,"k":"m"},{"n":"fail","s":{"r":"Mu","p":["*%_"]},"m":0,"k":"m"},{"s":{"p":["*%_"],"r":"Mu"},"n":"Str","k":"m","m":1},{"s":{"r":"Mu","p":["*%_"]},"n":"Str","k":"m","m":1},{"m":1,"k":"m","n":"Str","s":{"r":"Mu","p":["*%_"]}},{"n":"die","s":{"p":["*%_"],"r":"Mu"},"k":"m","m":0},{"s":{"p":["*%_"],"r":"Mu"},"n":"rethrow","k":"m","m":0},{"m":0,"k":"m","s":{"p":["*%_"],"r":"Mu"},"n":"backtrace"},{"n":"gist","s":{"p":["*%_"],"r":"Mu"},"m":1,"k":"m"},{"s":{"p":["*%_"],"r":"Mu"},"n":"gist","k":"m","m":1},{"k":"m","m":1,"s":{"r":"Mu","p":["*%_"]},"n":"gist"},{"n":"vault-backtrace","s":{"r":"Mu","p":["*%_"]},"k":"m","m":0},{"k":"s","m":0,"s":{"p":["@auto","%init","*%_"],"r":"Mu"},"n":"BUILDALL"}],"a":[{"k":"v","n":"$!ex","t":"Mu"},{"n":"$!bt","t":"Mu","k":"v"}],"b":"A","t":"X::Worry::P5","n":"X::Worry::P5"},{"n":"X::Worry::P5::LeadingZero","t":"X::Worry::P5::LeadingZero","b":"A","a":[{"k":"v","t":"Mu","n":"$.value"},{"t":"Mu","n":"$!ex","k":"v"},{"t":"Mu","n":"$!bt","k":"v"}],"m":[{"s":{"p":["*%_"],"r":"Mu"},"n":"message","m":0,"k":"m"},{"k":"m","m":0,"s":{"r":"Mu","p":["*%_"]},"n":"value"},{"m":0,"k":"s","s":{"p":["@auto","%init","*%_"],"r":"Mu"},"n":"BUILDALL"},{"s":{"r":"Mu","p":["@auto","%init","*%_"]},"n":"BUILDALL","k":"s","m":0},{"m":0,"k":"s","n":"BUILDALL","s":{"r":"Mu","p":["@auto","%init","*%_"]}},{"k":"m","m":0,"s":{"p":["*%_"],"r":"Bool"},"n":"resume"},{"s":{"r":"Mu","p":["*%_"]},"n":"reset-backtrace","m":0,"k":"m"},{"s":{"p":["*%_"],"r":"Bool"},"n":"is-compile-time","k":"m","m":0},{"k":"m","m":0,"s":{"r":"Mu","p":["$bt?","*%_"]},"n":"throw"},{"k":"m","m":0,"s":{"r":"Mu","p":["*%_"]},"n":"fail"},{"n":"Str","s":{"r":"Mu","p":["*%_"]},"m":1,"k":"m"},{"s":{"p":["*%_"],"r":"Mu"},"n":"Str","m":1,"k":"m"},{"n":"Str","s":{"p":["*%_"],"r":"Mu"},"m":1,"k":"m"},{"s":{"p":["*%_"],"r":"Mu"},"n":"die","m":0,"k":"m"},{"s":{"p":["*%_"],"r":"Mu"},"n":"rethrow","k":"m","m":0},{"m":0,"k":"m","s":{"p":["*%_"],"r":"Mu"},"n":"backtrace"},{"k":"m","m":1,"n":"gist","s":{"p":["*%_"],"r":"Mu"}},{"m":1,"k":"m","n":"gist","s":{"p":["*%_"],"r":"Mu"}},{"k":"m","m":1,"n":"gist","s":{"r":"Mu","p":["*%_"]}},{"m":0,"k":"m","n":"vault-backtrace","s":{"p":["*%_"],"r":"Mu"}},{"k":"s","m":0,"n":"BUILDALL","s":{"r":"Mu","p":["@auto","%init","*%_"]}}],"k":"c"},{"a":[{"t":"Mu","n":"$!ex","k":"v"},{"n":"$!bt","t":"Mu","k":"v"}],"b":"A","k":"c","m":[{"k":"m","m":0,"s":{"p":["*%_"],"r":"Mu"},"n":"message"},{"n":"BUILDALL","s":{"r":"Mu","p":["@auto","%init","*%_"]},"m":0,"k":"s"},{"k":"s","m":0,"n":"BUILDALL","s":{"r":"Mu","p":["@auto","%init","*%_"]}},{"m":0,"k":"s","n":"BUILDALL","s":{"r":"Mu","p":["@auto","%init","*%_"]}},{"n":"resume","s":{"r":"Bool","p":["*%_"]},"k":"m","m":0},{"n":"reset-backtrace","s":{"r":"Mu","p":["*%_"]},"k":"m","m":0},{"k":"m","m":0,"s":{"r":"Bool","p":["*%_"]},"n":"is-compile-time"},{"m":0,"k":"m","s":{"r":"Mu","p":["$bt?","*%_"]},"n":"throw"},{"m":0,"k":"m","n":"fail","s":{"p":["*%_"],"r":"Mu"}},{"m":1,"k":"m","n":"Str","s":{"p":["*%_"],"r":"Mu"}},{"k":"m","m":1,"s":{"p":["*%_"],"r":"Mu"},"n":"Str"},{"m":1,"k":"m","n":"Str","s":{"r":"Mu","p":["*%_"]}},{"m":0,"k":"m","s":{"r":"Mu","p":["*%_"]},"n":"die"},{"n":"rethrow","s":{"p":["*%_"],"r":"Mu"},"m":0,"k":"m"},{"k":"m","m":0,"s":{"p":["*%_"],"r":"Mu"},"n":"backtrace"},{"s":{"r":"Mu","p":["*%_"]},"n":"gist","m":1,"k":"m"},{"s":{"r":"Mu","p":["*%_"]},"n":"gist","m":1,"k":"m"},{"n":"gist","s":{"r":"Mu","p":["*%_"]},"m":1,"k":"m"},{"k":"m","m":0,"n":"vault-backtrace","s":{"r":"Mu","p":["*%_"]}},{"n":"BUILDALL","s":{"r":"Mu","p":["@auto","%init","*%_"]},"m":0,"k":"s"}],"n":"X::Worry::P5::BackReference","t":"X::Worry::P5::BackReference"},{"a":[{"k":"v","n":"$!ex","t":"Mu"},{"n":"$!bt","t":"Mu","k":"v"}],"b":"A","k":"c","m":[{"s":{"r":"Mu","p":["*%_"]},"n":"message","k":"m","m":0},{"k":"s","m":0,"n":"BUILDALL","s":{"p":["@auto","%init","*%_"],"r":"Mu"}},{"k":"s","m":0,"n":"BUILDALL","s":{"p":["@auto","%init","*%_"],"r":"Mu"}},{"s":{"p":["@auto","%init","*%_"],"r":"Mu"},"n":"BUILDALL","m":0,"k":"s"},{"n":"resume","s":{"p":["*%_"],"r":"Bool"},"m":0,"k":"m"},{"m":0,"k":"m","n":"reset-backtrace","s":{"p":["*%_"],"r":"Mu"}},{"n":"is-compile-time","s":{"r":"Bool","p":["*%_"]},"m":0,"k":"m"},{"s":{"p":["$bt?","*%_"],"r":"Mu"},"n":"throw","k":"m","m":0},{"k":"m","m":0,"s":{"r":"Mu","p":["*%_"]},"n":"fail"},{"k":"m","m":1,"s":{"p":["*%_"],"r":"Mu"},"n":"Str"},{"k":"m","m":1,"s":{"p":["*%_"],"r":"Mu"},"n":"Str"},{"n":"Str","s":{"r":"Mu","p":["*%_"]},"m":1,"k":"m"},{"m":0,"k":"m","n":"die","s":{"r":"Mu","p":["*%_"]}},{"n":"rethrow","s":{"p":["*%_"],"r":"Mu"},"m":0,"k":"m"},{"n":"backtrace","s":{"r":"Mu","p":["*%_"]},"k":"m","m":0},{"n":"gist","s":{"p":["*%_"],"r":"Mu"},"m":1,"k":"m"},{"s":{"p":["*%_"],"r":"Mu"},"n":"gist","m":1,"k":"m"},{"m":1,"k":"m","s":{"p":["*%_"],"r":"Mu"},"n":"gist"},{"n":"vault-backtrace","s":{"p":["*%_"],"r":"Mu"},"k":"m","m":0},{"m":0,"k":"s","n":"BUILDALL","s":{"r":"Mu","p":["@auto","%init","*%_"]}}],"n":"X::Worry::P5::Reference","t":"X::Worry::P5::Reference"},{"n":"X::Worry::Precedence::Range","t":"X::Worry::Precedence::Range","b":"A","a":[{"t":"Mu","n":"$.action","k":"v"},{"n":"$!ex","t":"Mu","k":"v"},{"k":"v","n":"$!bt","t":"Mu"}],"k":"c","m":[{"m":0,"k":"m","s":{"r":"Mu","p":["*%_"]},"n":"message"},{"k":"m","m":0,"s":{"r":"Mu","p":["*%_"]},"n":"action"},{"n":"BUILDALL","s":{"p":["@auto","%init","*%_"],"r":"Mu"},"k":"s","m":0},{"m":0,"k":"s","n":"BUILDALL","s":{"p":["@auto","%init","*%_"],"r":"Mu"}},{"s":{"r":"Bool","p":["*%_"]},"n":"resume","k":"m","m":0},{"m":0,"k":"m","n":"reset-backtrace","s":{"r":"Mu","p":["*%_"]}},{"s":{"r":"Bool","p":["*%_"]},"n":"is-compile-time","m":0,"k":"m"},{"n":"throw","s":{"r":"Mu","p":["$bt?","*%_"]},"m":0,"k":"m"},{"k":"m","m":0,"n":"fail","s":{"r":"Mu","p":["*%_"]}},{"m":1,"k":"m","n":"Str","s":{"p":["*%_"],"r":"Mu"}},{"s":{"p":["*%_"],"r":"Mu"},"n":"Str","m":1,"k":"m"},{"k":"m","m":1,"s":{"p":["*%_"],"r":"Mu"},"n":"Str"},{"m":0,"k":"m","n":"die","s":{"r":"Mu","p":["*%_"]}},{"k":"m","m":0,"n":"rethrow","s":{"p":["*%_"],"r":"Mu"}},{"n":"backtrace","s":{"p":["*%_"],"r":"Mu"},"m":0,"k":"m"},{"k":"m","m":1,"s":{"p":["*%_"],"r":"Mu"},"n":"gist"},{"n":"gist","s":{"r":"Mu","p":["*%_"]},"m":1,"k":"m"},{"m":1,"k":"m","n":"gist","s":{"p":["*%_"],"r":"Mu"}},{"k":"m","m":0,"s":{"p":["*%_"],"r":"Mu"},"n":"vault-backtrace"},{"n":"BUILDALL","s":{"r":"Mu","p":["@auto","%init","*%_"]},"k":"s","m":0}]},{"m":[{"m":0,"k":"m","n":"message","s":{"r":"Mu","p":["*%_"]}},{"n":"combinator","s":{"r":"Mu","p":["*%_"]},"k":"m","m":0},{"k":"s","m":0,"s":{"p":["@auto","%init","*%_"],"r":"Mu"},"n":"BUILDALL"},{"m":0,"k":"m","s":{"p":["*%_"],"r":"Bool"},"n":"resume"},{"m":0,"k":"m","n":"reset-backtrace","s":{"r":"Mu","p":["*%_"]}},{"s":{"r":"Bool","p":["*%_"]},"n":"is-compile-time","k":"m","m":0},{"m":0,"k":"m","s":{"p":["$bt?","*%_"],"r":"Mu"},"n":"throw"},{"n":"fail","s":{"r":"Mu","p":["*%_"]},"m":0,"k":"m"},{"k":"m","m":1,"s":{"p":["*%_"],"r":"Mu"},"n":"Str"},{"s":{"r":"Mu","p":["*%_"]},"n":"Str","m":1,"k":"m"},{"k":"m","m":1,"s":{"r":"Mu","p":["*%_"]},"n":"Str"},{"n":"die","s":{"p":["*%_"],"r":"Mu"},"k":"m","m":0},{"n":"rethrow","s":{"p":["*%_"],"r":"Mu"},"m":0,"k":"m"},{"m":0,"k":"m","s":{"r":"Mu","p":["*%_"]},"n":"backtrace"},{"n":"gist","s":{"r":"Mu","p":["*%_"]},"m":1,"k":"m"},{"n":"gist","s":{"r":"Mu","p":["*%_"]},"m":1,"k":"m"},{"s":{"p":["*%_"],"r":"Mu"},"n":"gist","k":"m","m":1},{"s":{"p":["*%_"],"r":"Mu"},"n":"vault-backtrace","k":"m","m":0},{"n":"BUILDALL","s":{"r":"Mu","p":["@auto","%init","*%_"]},"k":"s","m":0}],"k":"c","b":"A","a":[{"t":"Mu","n":"$.combinator","k":"v"},{"n":"$!ex","t":"Mu","k":"v"},{"n":"$!bt","t":"Mu","k":"v"}],"t":"X::Supply::Combinator","n":"X::Supply::Combinator"},{"t":"X::Supply::Migrate::Needs","n":"X::Supply::Migrate::Needs","a":[{"t":"Mu","n":"$!ex","k":"v"},{"k":"v","n":"$!bt","t":"Mu"}],"b":"A","k":"c","m":[{"k":"m","m":0,"n":"message","s":{"r":"Mu","p":["*%_"]}},{"n":"BUILDALL","s":{"r":"Mu","p":["@auto","%init","*%_"]},"m":0,"k":"s"},{"s":{"r":"Bool","p":["*%_"]},"n":"resume","m":0,"k":"m"},{"n":"reset-backtrace","s":{"r":"Mu","p":["*%_"]},"k":"m","m":0},{"s":{"p":["*%_"],"r":"Bool"},"n":"is-compile-time","m":0,"k":"m"},{"k":"m","m":0,"s":{"r":"Mu","p":["$bt?","*%_"]},"n":"throw"},{"k":"m","m":0,"s":{"p":["*%_"],"r":"Mu"},"n":"fail"},{"s":{"r":"Mu","p":["*%_"]},"n":"Str","m":1,"k":"m"},{"s":{"p":["*%_"],"r":"Mu"},"n":"Str","m":1,"k":"m"},{"s":{"r":"Mu","p":["*%_"]},"n":"Str","k":"m","m":1},{"n":"die","s":{"p":["*%_"],"r":"Mu"},"k":"m","m":0},{"n":"rethrow","s":{"p":["*%_"],"r":"Mu"},"m":0,"k":"m"},{"s":{"p":["*%_"],"r":"Mu"},"n":"backtrace","m":0,"k":"m"},{"s":{"r":"Mu","p":["*%_"]},"n":"gist","m":1,"k":"m"},{"n":"gist","s":{"p":["*%_"],"r":"Mu"},"k":"m","m":1},{"m":1,"k":"m","s":{"p":["*%_"],"r":"Mu"},"n":"gist"},{"k":"m","m":0,"s":{"p":["*%_"],"r":"Mu"},"n":"vault-backtrace"},{"k":"s","m":0,"s":{"r":"Mu","p":["@auto","%init","*%_"]},"n":"BUILDALL"}]},{"n":"X::Supply::New","t":"X::Supply::New","m":[{"k":"m","m":0,"s":{"p":["*%_"],"r":"Mu"},"n":"message"},{"n":"BUILDALL","s":{"r":"Mu","p":["@auto","%init","*%_"]},"m":0,"k":"s"},{"m":0,"k":"m","s":{"p":["*%_"],"r":"Bool"},"n":"resume"},{"n":"reset-backtrace","s":{"r":"Mu","p":["*%_"]},"m":0,"k":"m"},{"n":"is-compile-time","s":{"r":"Bool","p":["*%_"]},"k":"m","m":0},{"n":"throw","s":{"p":["$bt?","*%_"],"r":"Mu"},"k":"m","m":0},{"s":{"p":["*%_"],"r":"Mu"},"n":"fail","k":"m","m":0},{"m":1,"k":"m","s":{"p":["*%_"],"r":"Mu"},"n":"Str"},{"k":"m","m":1,"s":{"r":"Mu","p":["*%_"]},"n":"Str"},{"k":"m","m":1,"n":"Str","s":{"p":["*%_"],"r":"Mu"}},{"s":{"p":["*%_"],"r":"Mu"},"n":"die","m":0,"k":"m"},{"k":"m","m":0,"n":"rethrow","s":{"r":"Mu","p":["*%_"]}},{"k":"m","m":0,"n":"backtrace","s":{"r":"Mu","p":["*%_"]}},{"k":"m","m":1,"s":{"r":"Mu","p":["*%_"]},"n":"gist"},{"s":{"p":["*%_"],"r":"Mu"},"n":"gist","m":1,"k":"m"},{"m":1,"k":"m","s":{"p":["*%_"],"r":"Mu"},"n":"gist"},{"n":"vault-backtrace","s":{"r":"Mu","p":["*%_"]},"k":"m","m":0},{"s":{"p":["@auto","%init","*%_"],"r":"Mu"},"n":"BUILDALL","k":"s","m":0}],"k":"c","a":[{"t":"Mu","n":"$!ex","k":"v"},{"k":"v","t":"Mu","n":"$!bt"}],"b":"A"},{"d":"TITLE\nclass X::Promise::CauseOnlyValidOnBroken\n\nSUBTITLE\nError due to asking why an unbroken promise has been broken.\n\n    class X::Promise::CauseOnlyValidOnBroken is Exception { }\n\nThis exception is thrown when code expects a Promise to be broken, and asks\nwhy it has been broken, but the Promise has in fact, not yet been broken.\n\n","b":"A","a":[{"k":"v","t":"Mu","n":"$.promise"},{"k":"v","n":"$.status","t":"Mu"},{"k":"v","t":"Mu","n":"$!ex"},{"t":"Mu","n":"$!bt","k":"v"}],"k":"c","m":[{"k":"m","m":0,"s":{"p":["*%_"],"r":"Mu"},"n":"message"},{"n":"promise","s":{"p":["*%_"],"r":"Mu"},"k":"m","m":0},{"k":"m","m":0,"n":"status","s":{"p":["*%_"],"r":"Mu"}},{"k":"s","m":0,"s":{"r":"Mu","p":["@auto","%init","*%_"]},"n":"BUILDALL"},{"m":0,"k":"m","n":"resume","s":{"p":["*%_"],"r":"Bool"}},{"m":0,"k":"m","s":{"r":"Mu","p":["*%_"]},"n":"reset-backtrace"},{"s":{"r":"Bool","p":["*%_"]},"n":"is-compile-time","m":0,"k":"m"},{"n":"throw","s":{"p":["$bt?","*%_"],"r":"Mu"},"k":"m","m":0},{"n":"fail","s":{"p":["*%_"],"r":"Mu"},"m":0,"k":"m"},{"m":1,"k":"m","s":{"r":"Mu","p":["*%_"]},"n":"Str"},{"k":"m","m":1,"s":{"p":["*%_"],"r":"Mu"},"n":"Str"},{"n":"Str","s":{"r":"Mu","p":["*%_"]},"m":1,"k":"m"},{"s":{"p":["*%_"],"r":"Mu"},"n":"die","m":0,"k":"m"},{"m":0,"k":"m","s":{"r":"Mu","p":["*%_"]},"n":"rethrow"},{"k":"m","m":0,"n":"backtrace","s":{"p":["*%_"],"r":"Mu"}},{"k":"m","m":1,"n":"gist","s":{"p":["*%_"],"r":"Mu"}},{"m":1,"k":"m","n":"gist","s":{"r":"Mu","p":["*%_"]}},{"n":"gist","s":{"r":"Mu","p":["*%_"]},"m":1,"k":"m"},{"k":"m","m":0,"s":{"r":"Mu","p":["*%_"]},"n":"vault-backtrace"},{"m":0,"k":"s","s":{"r":"Mu","p":["@auto","%init","*%_"]},"n":"BUILDALL"}],"t":"X::Promise::CauseOnlyValidOnBroken","n":"X::Promise::CauseOnlyValidOnBroken"},{"t":"X::Promise::Combinator","n":"X::Promise::Combinator","a":[{"t":"Mu","n":"$.combinator","k":"v"},{"t":"Mu","n":"$!ex","k":"v"},{"k":"v","t":"Mu","n":"$!bt"}],"b":"A","k":"c","m":[{"s":{"r":"Mu","p":["*%_"]},"n":"message","m":0,"k":"m"},{"m":0,"k":"m","s":{"p":["*%_"],"r":"Mu"},"n":"combinator"},{"m":0,"k":"s","n":"BUILDALL","s":{"p":["@auto","%init","*%_"],"r":"Mu"}},{"s":{"p":["*%_"],"r":"Bool"},"n":"resume","m":0,"k":"m"},{"s":{"p":["*%_"],"r":"Mu"},"n":"reset-backtrace","k":"m","m":0},{"m":0,"k":"m","s":{"p":["*%_"],"r":"Bool"},"n":"is-compile-time"},{"k":"m","m":0,"s":{"p":["$bt?","*%_"],"r":"Mu"},"n":"throw"},{"s":{"r":"Mu","p":["*%_"]},"n":"fail","k":"m","m":0},{"k":"m","m":1,"n":"Str","s":{"r":"Mu","p":["*%_"]}},{"k":"m","m":1,"n":"Str","s":{"p":["*%_"],"r":"Mu"}},{"k":"m","m":1,"n":"Str","s":{"r":"Mu","p":["*%_"]}},{"s":{"p":["*%_"],"r":"Mu"},"n":"die","m":0,"k":"m"},{"n":"rethrow","s":{"p":["*%_"],"r":"Mu"},"m":0,"k":"m"},{"m":0,"k":"m","s":{"r":"Mu","p":["*%_"]},"n":"backtrace"},{"m":1,"k":"m","s":{"r":"Mu","p":["*%_"]},"n":"gist"},{"s":{"r":"Mu","p":["*%_"]},"n":"gist","k":"m","m":1},{"k":"m","m":1,"n":"gist","s":{"r":"Mu","p":["*%_"]}},{"n":"vault-backtrace","s":{"r":"Mu","p":["*%_"]},"m":0,"k":"m"},{"k":"s","m":0,"s":{"r":"Mu","p":["@auto","%init","*%_"]},"n":"BUILDALL"}]},{"a":[{"k":"v","n":"$.result-backtrace","t":"Mu"}],"b":"C","k":"ro","n":"X::Promise::Broken","t":"X::Promise::Broken"},{"m":[{"n":"message","s":{"r":"Mu","p":["*%_"]},"m":0,"k":"m"},{"s":{"r":"Mu","p":["*%_"]},"n":"promise","m":0,"k":"m"},{"k":"s","m":0,"n":"BUILDALL","s":{"p":["@auto","%init","*%_"],"r":"Mu"}},{"k":"m","m":0,"n":"resume","s":{"p":["*%_"],"r":"Bool"}},{"n":"reset-backtrace","s":{"p":["*%_"],"r":"Mu"},"k":"m","m":0},{"m":0,"k":"m","n":"is-compile-time","s":{"p":["*%_"],"r":"Bool"}},{"k":"m","m":0,"n":"throw","s":{"p":["$bt?","*%_"],"r":"Mu"}},{"m":0,"k":"m","n":"fail","s":{"r":"Mu","p":["*%_"]}},{"s":{"r":"Mu","p":["*%_"]},"n":"Str","m":1,"k":"m"},{"k":"m","m":1,"s":{"p":["*%_"],"r":"Mu"},"n":"Str"},{"k":"m","m":1,"n":"Str","s":{"r":"Mu","p":["*%_"]}},{"m":0,"k":"m","s":{"p":["*%_"],"r":"Mu"},"n":"die"},{"m":0,"k":"m","n":"rethrow","s":{"r":"Mu","p":["*%_"]}},{"n":"backtrace","s":{"p":["*%_"],"r":"Mu"},"k":"m","m":0},{"k":"m","m":1,"n":"gist","s":{"r":"Mu","p":["*%_"]}},{"s":{"r":"Mu","p":["*%_"]},"n":"gist","k":"m","m":1},{"k":"m","m":1,"s":{"r":"Mu","p":["*%_"]},"n":"gist"},{"n":"vault-backtrace","s":{"p":["*%_"],"r":"Mu"},"k":"m","m":0},{"k":"s","m":0,"s":{"p":["@auto","%init","*%_"],"r":"Mu"},"n":"BUILDALL"}],"k":"c","a":[{"k":"v","t":"Mu","n":"$.promise"},{"k":"v","n":"$!ex","t":"Mu"},{"t":"Mu","n":"$!bt","k":"v"}],"b":"A","d":"TITLE\nclass X::Promise::Vowed\n\nSUBTITLE\nError due to directly trying to keep/break a vowed promise.\n\n    class X::Promise::Vowed is Exception { }\n\nThis exception is thrown when code tries to keep/break an already vowed\npromise without going through the corresponding Vow object.\n\n","n":"X::Promise::Vowed","t":"X::Promise::Vowed"},{"a":[{"k":"v","t":"Mu","n":"$.declaration"},{"n":"$.filename","t":"Mu","k":"v"},{"t":"Mu","n":"$.pos","k":"v"},{"n":"$.line","t":"Mu","k":"v"},{"k":"v","t":"Mu","n":"$.column"},{"n":"@.modules","t":"Positional","k":"v"},{"k":"v","t":"Mu","n":"$.is-compile-time"},{"t":"Mu","n":"$.pre","k":"v"},{"k":"v","n":"$.post","t":"Mu"},{"k":"v","t":"Positional","n":"@.highexpect"},{"k":"v","n":"$!ex","t":"Mu"},{"n":"$!bt","t":"Mu","k":"v"}],"b":"A","m":[{"m":0,"k":"m","n":"message","s":{"p":["*%_"],"r":"Mu"}},{"k":"m","m":0,"s":{"p":["*%_"],"r":"Mu"},"n":"sorry_heading"},{"m":0,"k":"m","n":"SET_FILE_LINE","s":{"r":"Mu","p":["$file","$line","*%_"]}},{"m":1,"k":"m","s":{"r":"Mu","p":["*%_"]},"n":"gist"},{"m":1,"k":"m","s":{"r":"Mu","p":["*%_"]},"n":"gist"},{"n":"gist","s":{"p":["*%_"],"r":"Mu"},"k":"m","m":1},{"k":"m","m":1,"s":{"r":"Mu","p":[":$sorry = Bool::True",":$expect = Bool::True","*%_"]},"n":"gist"},{"k":"m","m":0,"n":"declaration","s":{"r":"Mu","p":["*%_"]}},{"m":0,"k":"m","s":{"p":["*%_"],"r":"Mu"},"n":"filename"},{"m":0,"k":"m","s":{"r":"Mu","p":["*%_"]},"n":"pos"},{"k":"m","m":0,"s":{"p":["*%_"],"r":"Mu"},"n":"line"},{"n":"column","s":{"p":["*%_"],"r":"Mu"},"m":0,"k":"m"},{"m":0,"k":"m","s":{"r":"Mu","p":["*%_"]},"n":"modules"},{"n":"is-compile-time","s":{"p":["*%_"],"r":"Mu"},"m":0,"k":"m"},{"m":0,"k":"m","n":"pre","s":{"r":"Mu","p":["*%_"]}},{"n":"post","s":{"p":["*%_"],"r":"Mu"},"m":0,"k":"m"},{"k":"m","m":0,"s":{"p":["*%_"],"r":"Mu"},"n":"highexpect"},{"m":0,"k":"s","s":{"r":"Mu","p":["@auto","%init","*%_"]},"n":"BUILDALL"},{"k":"m","m":0,"s":{"p":["*%_"],"r":"Bool"},"n":"resume"},{"s":{"p":["*%_"],"r":"Mu"},"n":"reset-backtrace","k":"m","m":0},{"n":"is-compile-time","s":{"r":"Bool","p":["*%_"]},"m":0,"k":"m"},{"s":{"p":["$bt?","*%_"],"r":"Mu"},"n":"throw","m":0,"k":"m"},{"s":{"p":["*%_"],"r":"Mu"},"n":"fail","k":"m","m":0},{"k":"m","m":1,"s":{"r":"Mu","p":["*%_"]},"n":"Str"},{"s":{"r":"Mu","p":["*%_"]},"n":"Str","m":1,"k":"m"},{"m":1,"k":"m","s":{"r":"Mu","p":["*%_"]},"n":"Str"},{"k":"m","m":0,"s":{"p":["*%_"],"r":"Mu"},"n":"die"},{"m":0,"k":"m","s":{"r":"Mu","p":["*%_"]},"n":"rethrow"},{"n":"backtrace","s":{"r":"Mu","p":["*%_"]},"k":"m","m":0},{"k":"m","m":1,"s":{"p":["*%_"],"r":"Mu"},"n":"gist"},{"s":{"p":["*%_"],"r":"Mu"},"n":"gist","k":"m","m":1},{"k":"m","m":1,"n":"gist","s":{"r":"Mu","p":["*%_"]}},{"n":"vault-backtrace","s":{"p":["*%_"],"r":"Mu"},"k":"m","m":0},{"n":"BUILDALL","s":{"p":["@auto","%init","*%_"],"r":"Mu"},"k":"s","m":0}],"k":"c","t":"X::Declaration::OurScopeInRole","n":"X::Declaration::OurScopeInRole"},{"n":"X::Declaration::Scope","t":"X::Declaration::Scope","m":[{"m":0,"k":"m","s":{"p":["*%_"],"r":"Mu"},"n":"message"},{"n":"sorry_heading","s":{"p":["*%_"],"r":"Mu"},"m":0,"k":"m"},{"n":"SET_FILE_LINE","s":{"p":["$file","$line","*%_"],"r":"Mu"},"k":"m","m":0},{"n":"gist","s":{"p":["*%_"],"r":"Mu"},"k":"m","m":1},{"n":"gist","s":{"p":["*%_"],"r":"Mu"},"m":1,"k":"m"},{"n":"gist","s":{"p":["*%_"],"r":"Mu"},"k":"m","m":1},{"s":{"r":"Mu","p":[":$sorry = Bool::True",":$expect = Bool::True","*%_"]},"n":"gist","k":"m","m":1},{"s":{"r":"Mu","p":["*%_"]},"n":"scope","k":"m","m":0},{"k":"m","m":0,"s":{"r":"Mu","p":["*%_"]},"n":"declaration"},{"m":0,"k":"m","n":"filename","s":{"r":"Mu","p":["*%_"]}},{"k":"m","m":0,"s":{"p":["*%_"],"r":"Mu"},"n":"pos"},{"s":{"p":["*%_"],"r":"Mu"},"n":"line","m":0,"k":"m"},{"m":0,"k":"m","s":{"p":["*%_"],"r":"Mu"},"n":"column"},{"m":0,"k":"m","s":{"r":"Mu","p":["*%_"]},"n":"modules"},{"s":{"r":"Mu","p":["*%_"]},"n":"is-compile-time","k":"m","m":0},{"n":"pre","s":{"r":"Mu","p":["*%_"]},"m":0,"k":"m"},{"n":"post","s":{"r":"Mu","p":["*%_"]},"m":0,"k":"m"},{"n":"highexpect","s":{"r":"Mu","p":["*%_"]},"k":"m","m":0},{"s":{"p":["@auto","%init","*%_"],"r":"Mu"},"n":"BUILDALL","m":0,"k":"s"},{"k":"m","m":0,"s":{"p":["*%_"],"r":"Bool"},"n":"resume"},{"m":0,"k":"m","s":{"p":["*%_"],"r":"Mu"},"n":"reset-backtrace"},{"s":{"r":"Bool","p":["*%_"]},"n":"is-compile-time","m":0,"k":"m"},{"n":"throw","s":{"r":"Mu","p":["$bt?","*%_"]},"k":"m","m":0},{"n":"fail","s":{"r":"Mu","p":["*%_"]},"k":"m","m":0},{"s":{"p":["*%_"],"r":"Mu"},"n":"Str","m":1,"k":"m"},{"s":{"r":"Mu","p":["*%_"]},"n":"Str","k":"m","m":1},{"m":1,"k":"m","n":"Str","s":{"p":["*%_"],"r":"Mu"}},{"s":{"r":"Mu","p":["*%_"]},"n":"die","k":"m","m":0},{"n":"rethrow","s":{"p":["*%_"],"r":"Mu"},"m":0,"k":"m"},{"n":"backtrace","s":{"r":"Mu","p":["*%_"]},"m":0,"k":"m"},{"s":{"r":"Mu","p":["*%_"]},"n":"gist","m":1,"k":"m"},{"s":{"p":["*%_"],"r":"Mu"},"n":"gist","m":1,"k":"m"},{"s":{"p":["*%_"],"r":"Mu"},"n":"gist","m":1,"k":"m"},{"k":"m","m":0,"s":{"p":["*%_"],"r":"Mu"},"n":"vault-backtrace"},{"s":{"r":"Mu","p":["@auto","%init","*%_"]},"n":"BUILDALL","k":"s","m":0}],"k":"c","a":[{"k":"v","t":"Mu","n":"$.scope"},{"t":"Mu","n":"$.declaration","k":"v"},{"n":"$.filename","t":"Mu","k":"v"},{"n":"$.pos","t":"Mu","k":"v"},{"k":"v","n":"$.line","t":"Mu"},{"k":"v","t":"Mu","n":"$.column"},{"t":"Positional","n":"@.modules","k":"v"},{"k":"v","n":"$.is-compile-time","t":"Mu"},{"t":"Mu","n":"$.pre","k":"v"},{"t":"Mu","n":"$.post","k":"v"},{"t":"Positional","n":"@.highexpect","k":"v"},{"n":"$!ex","t":"Mu","k":"v"},{"k":"v","t":"Mu","n":"$!bt"}],"b":"A","d":"TITLE\nclass X::Declaration::Scope\n\nSUBTITLE\nCompilation error due to a declaration with an ineligible scope\n\n    class X::Declaration::Scope does X::Comp { }\n\n\nCompile time error thrown when a declaration does not harmonize with the\ndeclared scope.\n\nFor example\n\n    has sub f() { }\n\n\ndies with\n\n    ===SORRY!===\n    Cannot use 'has' with sub declaration\n\n\n"},{"t":"X::Declaration::Scope::Multi","n":"X::Declaration::Scope::Multi","d":"TITLE\nclass X::Declaration::Scope::Multi\n\nSUBTITLE\nCompilation error due to declaring a multi with an ineligible scope\n\n    class X::Declaration::Scope::Multi is X::Declaration::Scope { }\n\nThrown when a multi is declared with an incompatible scope.\n\nFor example our multi sub foo() { } dies with\n\n    ===SORRY!===\n    Cannot use 'our' with individual multi candidates. Please declare an our-scoped proto instead\n","m":[{"k":"m","m":0,"s":{"p":["*%_"],"r":"Mu"},"n":"message"},{"s":{"r":"Mu","p":["@auto","%init","*%_"]},"n":"BUILDALL","k":"s","m":0},{"m":0,"k":"m","s":{"r":"Mu","p":["*%_"]},"n":"is-compile-time"},{"k":"m","m":0,"n":"filename","s":{"p":["*%_"],"r":"Mu"}},{"m":0,"k":"m","s":{"p":["$file","$line","*%_"],"r":"Mu"},"n":"SET_FILE_LINE"},{"n":"declaration","s":{"r":"Mu","p":["*%_"]},"k":"m","m":0},{"n":"post","s":{"p":["*%_"],"r":"Mu"},"m":0,"k":"m"},{"m":0,"k":"m","n":"pre","s":{"p":["*%_"],"r":"Mu"}},{"m":0,"k":"m","s":{"r":"Mu","p":["*%_"]},"n":"message"},{"n":"sorry_heading","s":{"p":["*%_"],"r":"Mu"},"m":0,"k":"m"},{"m":0,"k":"m","s":{"r":"Mu","p":["*%_"]},"n":"highexpect"},{"m":0,"k":"m","n":"line","s":{"p":["*%_"],"r":"Mu"}},{"n":"gist","s":{"p":["*%_"],"r":"Mu"},"k":"m","m":1},{"n":"gist","s":{"p":["*%_"],"r":"Mu"},"m":1,"k":"m"},{"s":{"p":["*%_"],"r":"Mu"},"n":"gist","m":1,"k":"m"},{"n":"gist","s":{"p":[":$sorry = Bool::True",":$expect = Bool::True","*%_"],"r":"Mu"},"m":1,"k":"m"},{"k":"m","m":0,"s":{"p":["*%_"],"r":"Mu"},"n":"scope"},{"s":{"r":"Mu","p":["*%_"]},"n":"modules","k":"m","m":0},{"m":0,"k":"m","s":{"p":["*%_"],"r":"Mu"},"n":"pos"},{"m":0,"k":"m","s":{"r":"Mu","p":["*%_"]},"n":"column"},{"m":0,"k":"s","n":"BUILDALL","s":{"r":"Mu","p":["@auto","%init","*%_"]}},{"n":"resume","s":{"r":"Bool","p":["*%_"]},"k":"m","m":0},{"m":0,"k":"m","s":{"p":["*%_"],"r":"Mu"},"n":"reset-backtrace"},{"n":"is-compile-time","s":{"r":"Bool","p":["*%_"]},"m":0,"k":"m"},{"m":0,"k":"m","n":"throw","s":{"p":["$bt?","*%_"],"r":"Mu"}},{"n":"fail","s":{"r":"Mu","p":["*%_"]},"m":0,"k":"m"},{"s":{"p":["*%_"],"r":"Mu"},"n":"Str","m":1,"k":"m"},{"m":1,"k":"m","s":{"p":["*%_"],"r":"Mu"},"n":"Str"},{"s":{"p":["*%_"],"r":"Mu"},"n":"Str","k":"m","m":1},{"m":0,"k":"m","n":"die","s":{"r":"Mu","p":["*%_"]}},{"n":"rethrow","s":{"r":"Mu","p":["*%_"]},"k":"m","m":0},{"m":0,"k":"m","s":{"r":"Mu","p":["*%_"]},"n":"backtrace"},{"m":1,"k":"m","n":"gist","s":{"p":["*%_"],"r":"Mu"}},{"s":{"p":["*%_"],"r":"Mu"},"n":"gist","k":"m","m":1},{"n":"gist","s":{"p":["*%_"],"r":"Mu"},"m":1,"k":"m"},{"m":0,"k":"m","s":{"r":"Mu","p":["*%_"]},"n":"vault-backtrace"},{"k":"s","m":0,"n":"BUILDALL","s":{"r":"Mu","p":["@auto","%init","*%_"]}}],"k":"c","b":"A","a":[{"k":"v","t":"Mu","n":"$.scope"},{"n":"$.declaration","t":"Mu","k":"v"},{"t":"Mu","n":"$.filename","k":"v"},{"k":"v","n":"$.pos","t":"Mu"},{"k":"v","t":"Mu","n":"$.line"},{"t":"Mu","n":"$.column","k":"v"},{"k":"v","n":"@.modules","t":"Positional"},{"k":"v","n":"$.is-compile-time","t":"Mu"},{"n":"$.pre","t":"Mu","k":"v"},{"n":"$.post","t":"Mu","k":"v"},{"k":"v","n":"@.highexpect","t":"Positional"},{"k":"v","t":"Mu","n":"$!ex"},{"k":"v","t":"Mu","n":"$!bt"}]},{"b":"A","a":[{"k":"v","n":"$.target","t":"Mu"},{"k":"v","n":"$.rolish","t":"Mu"},{"n":"$!ex","t":"Mu","k":"v"},{"n":"$!bt","t":"Mu","k":"v"}],"k":"c","m":[{"n":"message","s":{"p":["*%_"],"r":"Mu"},"k":"m","m":0},{"m":0,"k":"m","s":{"r":"Mu","p":["*%_"]},"n":"target"},{"k":"m","m":0,"n":"rolish","s":{"r":"Mu","p":["*%_"]}},{"s":{"p":["@auto","%init","*%_"],"r":"Mu"},"n":"BUILDALL","m":0,"k":"s"},{"n":"resume","s":{"p":["*%_"],"r":"Bool"},"m":0,"k":"m"},{"n":"reset-backtrace","s":{"r":"Mu","p":["*%_"]},"k":"m","m":0},{"k":"m","m":0,"n":"is-compile-time","s":{"p":["*%_"],"r":"Bool"}},{"s":{"r":"Mu","p":["$bt?","*%_"]},"n":"throw","m":0,"k":"m"},{"s":{"p":["*%_"],"r":"Mu"},"n":"fail","k":"m","m":0},{"m":1,"k":"m","s":{"r":"Mu","p":["*%_"]},"n":"Str"},{"s":{"r":"Mu","p":["*%_"]},"n":"Str","m":1,"k":"m"},{"m":1,"k":"m","n":"Str","s":{"p":["*%_"],"r":"Mu"}},{"k":"m","m":0,"n":"die","s":{"r":"Mu","p":["*%_"]}},{"m":0,"k":"m","s":{"r":"Mu","p":["*%_"]},"n":"rethrow"},{"k":"m","m":0,"s":{"r":"Mu","p":["*%_"]},"n":"backtrace"},{"n":"gist","s":{"p":["*%_"],"r":"Mu"},"m":1,"k":"m"},{"m":1,"k":"m","s":{"p":["*%_"],"r":"Mu"},"n":"gist"},{"s":{"p":["*%_"],"r":"Mu"},"n":"gist","m":1,"k":"m"},{"m":0,"k":"m","n":"vault-backtrace","s":{"p":["*%_"],"r":"Mu"}},{"m":0,"k":"s","s":{"p":["@auto","%init","*%_"],"r":"Mu"},"n":"BUILDALL"}],"d":"TITLE\nclass X::Mixin::NotComposable\n\nSUBTITLE\nError due to using an ineligible type as a mixin\n\n    class X::Mixin::NotComposable is Exception { }\n\nThrown when a mixin with infix does or but is done with a composer that\ncannot be used for mixin.\n\nFor example\n\n    class A { };\n    1 but A;\n    CATCH { default { put .^name, ': ', .Str } };\n    # OUTPUT: «X::Mixin::NotComposable: Cannot mix in non-composable type A into object of type Int␤»\n\nThe compile-time equivalent of this error is X::Composition::NotComposable\n\n","n":"X::Mixin::NotComposable","t":"X::Mixin::NotComposable"},{"a":[{"n":"$.version","t":"Mu","k":"v"},{"k":"v","t":"Mu","n":"$.modifier"},{"k":"v","n":"$!ex","t":"Mu"},{"k":"v","t":"Mu","n":"$!bt"}],"b":"A","k":"c","m":[{"n":"message","s":{"p":["*%_"],"r":"Mu"},"m":0,"k":"m"},{"k":"m","m":0,"n":"version","s":{"p":["*%_"],"r":"Mu"}},{"k":"m","m":0,"n":"modifier","s":{"r":"Mu","p":["*%_"]}},{"k":"s","m":0,"n":"BUILDALL","s":{"r":"Mu","p":["@auto","%init","*%_"]}},{"s":{"p":["*%_"],"r":"Bool"},"n":"resume","m":0,"k":"m"},{"s":{"r":"Mu","p":["*%_"]},"n":"reset-backtrace","m":0,"k":"m"},{"s":{"r":"Bool","p":["*%_"]},"n":"is-compile-time","m":0,"k":"m"},{"m":0,"k":"m","n":"throw","s":{"p":["$bt?","*%_"],"r":"Mu"}},{"n":"fail","s":{"p":["*%_"],"r":"Mu"},"m":0,"k":"m"},{"s":{"r":"Mu","p":["*%_"]},"n":"Str","k":"m","m":1},{"k":"m","m":1,"n":"Str","s":{"p":["*%_"],"r":"Mu"}},{"s":{"p":["*%_"],"r":"Mu"},"n":"Str","m":1,"k":"m"},{"s":{"r":"Mu","p":["*%_"]},"n":"die","m":0,"k":"m"},{"s":{"r":"Mu","p":["*%_"]},"n":"rethrow","m":0,"k":"m"},{"m":0,"k":"m","s":{"p":["*%_"],"r":"Mu"},"n":"backtrace"},{"m":1,"k":"m","n":"gist","s":{"p":["*%_"],"r":"Mu"}},{"n":"gist","s":{"p":["*%_"],"r":"Mu"},"m":1,"k":"m"},{"m":1,"k":"m","s":{"r":"Mu","p":["*%_"]},"n":"gist"},{"m":0,"k":"m","n":"vault-backtrace","s":{"p":["*%_"],"r":"Mu"}},{"k":"s","m":0,"s":{"r":"Mu","p":["@auto","%init","*%_"]},"n":"BUILDALL"}],"n":"X::Language::ModRequired","t":"X::Language::ModRequired"},{"t":"X::Language::Unsupported","n":"X::Language::Unsupported","k":"c","m":[{"s":{"p":["*%_"],"r":"Mu"},"n":"message","m":0,"k":"m"},{"s":{"r":"Mu","p":["*%_"]},"n":"version","k":"m","m":0},{"k":"s","m":0,"s":{"p":["@auto","%init","*%_"],"r":"Mu"},"n":"BUILDALL"},{"k":"m","m":0,"n":"resume","s":{"r":"Bool","p":["*%_"]}},{"n":"reset-backtrace","s":{"p":["*%_"],"r":"Mu"},"k":"m","m":0},{"s":{"p":["*%_"],"r":"Bool"},"n":"is-compile-time","k":"m","m":0},{"m":0,"k":"m","n":"throw","s":{"r":"Mu","p":["$bt?","*%_"]}},{"k":"m","m":0,"n":"fail","s":{"r":"Mu","p":["*%_"]}},{"k":"m","m":1,"s":{"r":"Mu","p":["*%_"]},"n":"Str"},{"n":"Str","s":{"p":["*%_"],"r":"Mu"},"m":1,"k":"m"},{"n":"Str","s":{"r":"Mu","p":["*%_"]},"m":1,"k":"m"},{"n":"die","s":{"r":"Mu","p":["*%_"]},"m":0,"k":"m"},{"m":0,"k":"m","s":{"p":["*%_"],"r":"Mu"},"n":"rethrow"},{"k":"m","m":0,"s":{"p":["*%_"],"r":"Mu"},"n":"backtrace"},{"m":1,"k":"m","n":"gist","s":{"r":"Mu","p":["*%_"]}},{"n":"gist","s":{"r":"Mu","p":["*%_"]},"m":1,"k":"m"},{"k":"m","m":1,"n":"gist","s":{"r":"Mu","p":["*%_"]}},{"s":{"p":["*%_"],"r":"Mu"},"n":"vault-backtrace","k":"m","m":0},{"s":{"r":"Mu","p":["@auto","%init","*%_"]},"n":"BUILDALL","k":"s","m":0}],"a":[{"t":"Mu","n":"$.version","k":"v"},{"n":"$!ex","t":"Mu","k":"v"},{"n":"$!bt","t":"Mu","k":"v"}],"b":"A"},{"k":"c","m":[{"m":0,"k":"m","s":{"r":"Mu","p":["*%_"]},"n":"message"},{"k":"s","m":0,"s":{"r":"Mu","p":["@auto","%init","*%_"]},"n":"BUILDALL"},{"m":0,"k":"m","s":{"p":["*%_"],"r":"Bool"},"n":"resume"},{"k":"m","m":0,"n":"reset-backtrace","s":{"r":"Mu","p":["*%_"]}},{"k":"m","m":0,"s":{"p":["*%_"],"r":"Bool"},"n":"is-compile-time"},{"m":0,"k":"m","s":{"r":"Mu","p":["$bt?","*%_"]},"n":"throw"},{"k":"m","m":0,"n":"fail","s":{"r":"Mu","p":["*%_"]}},{"k":"m","m":1,"n":"Str","s":{"p":["*%_"],"r":"Mu"}},{"s":{"r":"Mu","p":["*%_"]},"n":"Str","k":"m","m":1},{"n":"Str","s":{"r":"Mu","p":["*%_"]},"m":1,"k":"m"},{"s":{"r":"Mu","p":["*%_"]},"n":"die","m":0,"k":"m"},{"k":"m","m":0,"n":"rethrow","s":{"r":"Mu","p":["*%_"]}},{"m":0,"k":"m","n":"backtrace","s":{"p":["*%_"],"r":"Mu"}},{"m":1,"k":"m","n":"gist","s":{"r":"Mu","p":["*%_"]}},{"k":"m","m":1,"s":{"r":"Mu","p":["*%_"]},"n":"gist"},{"m":1,"k":"m","n":"gist","s":{"r":"Mu","p":["*%_"]}},{"n":"vault-backtrace","s":{"p":["*%_"],"r":"Mu"},"k":"m","m":0},{"s":{"p":["@auto","%init","*%_"],"r":"Mu"},"n":"BUILDALL","k":"s","m":0}],"b":"A","a":[{"k":"v","n":"$!ex","t":"Mu"},{"k":"v","t":"Mu","n":"$!bt"}],"t":"X::Language::TooLate","n":"X::Language::TooLate"},{"t":"X::Str::Subst::Adverb","n":"X::Str::Subst::Adverb","k":"c","m":[{"s":{"r":"Mu","p":["*%_"]},"n":"message","k":"m","m":0},{"m":0,"k":"m","n":"name","s":{"p":["*%_"],"r":"Mu"}},{"m":0,"k":"m","n":"got","s":{"r":"Mu","p":["*%_"]}},{"n":"BUILDALL","s":{"r":"Mu","p":["@auto","%init","*%_"]},"m":0,"k":"s"},{"s":{"r":"Bool","p":["*%_"]},"n":"resume","k":"m","m":0},{"n":"reset-backtrace","s":{"r":"Mu","p":["*%_"]},"m":0,"k":"m"},{"n":"is-compile-time","s":{"r":"Bool","p":["*%_"]},"k":"m","m":0},{"m":0,"k":"m","s":{"r":"Mu","p":["$bt?","*%_"]},"n":"throw"},{"m":0,"k":"m","n":"fail","s":{"p":["*%_"],"r":"Mu"}},{"m":1,"k":"m","n":"Str","s":{"p":["*%_"],"r":"Mu"}},{"s":{"p":["*%_"],"r":"Mu"},"n":"Str","m":1,"k":"m"},{"m":1,"k":"m","n":"Str","s":{"p":["*%_"],"r":"Mu"}},{"k":"m","m":0,"s":{"r":"Mu","p":["*%_"]},"n":"die"},{"m":0,"k":"m","s":{"p":["*%_"],"r":"Mu"},"n":"rethrow"},{"m":0,"k":"m","n":"backtrace","s":{"r":"Mu","p":["*%_"]}},{"n":"gist","s":{"r":"Mu","p":["*%_"]},"k":"m","m":1},{"n":"gist","s":{"p":["*%_"],"r":"Mu"},"m":1,"k":"m"},{"k":"m","m":1,"n":"gist","s":{"p":["*%_"],"r":"Mu"}},{"n":"vault-backtrace","s":{"p":["*%_"],"r":"Mu"},"k":"m","m":0},{"s":{"r":"Mu","p":["@auto","%init","*%_"]},"n":"BUILDALL","k":"s","m":0}],"b":"A","a":[{"t":"Mu","n":"$.name","k":"v"},{"k":"v","n":"$.got","t":"Mu"},{"k":"v","n":"$!ex","t":"Mu"},{"k":"v","t":"Mu","n":"$!bt"}]},{"t":"X::Str::InvalidCharName","n":"X::Str::InvalidCharName","k":"c","m":[{"m":0,"k":"m","s":{"r":"Mu","p":["*%_"]},"n":"message"},{"m":0,"k":"m","s":{"p":["*%_"],"r":"Mu"},"n":"name"},{"k":"s","m":0,"n":"BUILDALL","s":{"p":["@auto","%init","*%_"],"r":"Mu"}},{"s":{"p":["*%_"],"r":"Bool"},"n":"resume","k":"m","m":0},{"m":0,"k":"m","n":"reset-backtrace","s":{"p":["*%_"],"r":"Mu"}},{"m":0,"k":"m","s":{"p":["*%_"],"r":"Bool"},"n":"is-compile-time"},{"k":"m","m":0,"n":"throw","s":{"r":"Mu","p":["$bt?","*%_"]}},{"s":{"r":"Mu","p":["*%_"]},"n":"fail","k":"m","m":0},{"s":{"p":["*%_"],"r":"Mu"},"n":"Str","m":1,"k":"m"},{"m":1,"k":"m","s":{"p":["*%_"],"r":"Mu"},"n":"Str"},{"k":"m","m":1,"s":{"r":"Mu","p":["*%_"]},"n":"Str"},{"n":"die","s":{"p":["*%_"],"r":"Mu"},"m":0,"k":"m"},{"n":"rethrow","s":{"p":["*%_"],"r":"Mu"},"m":0,"k":"m"},{"m":0,"k":"m","s":{"p":["*%_"],"r":"Mu"},"n":"backtrace"},{"m":1,"k":"m","n":"gist","s":{"p":["*%_"],"r":"Mu"}},{"n":"gist","s":{"p":["*%_"],"r":"Mu"},"k":"m","m":1},{"s":{"p":["*%_"],"r":"Mu"},"n":"gist","m":1,"k":"m"},{"m":0,"k":"m","s":{"r":"Mu","p":["*%_"]},"n":"vault-backtrace"},{"s":{"r":"Mu","p":["@auto","%init","*%_"]},"n":"BUILDALL","m":0,"k":"s"}],"b":"A","a":[{"k":"v","t":"Mu","n":"$.name"},{"t":"Mu","n":"$!ex","k":"v"},{"n":"$!bt","t":"Mu","k":"v"}]},{"t":"X::Str::Trans::IllegalKey","n":"X::Str::Trans::IllegalKey","a":[{"t":"Mu","n":"$.key","k":"v"},{"n":"$!ex","t":"Mu","k":"v"},{"n":"$!bt","t":"Mu","k":"v"}],"b":"A","m":[{"k":"m","m":0,"n":"message","s":{"p":["*%_"],"r":"Mu"}},{"n":"key","s":{"r":"Mu","p":["*%_"]},"k":"m","m":0},{"k":"s","m":0,"n":"BUILDALL","s":{"p":["@auto","%init","*%_"],"r":"Mu"}},{"k":"m","m":0,"n":"resume","s":{"r":"Bool","p":["*%_"]}},{"s":{"r":"Mu","p":["*%_"]},"n":"reset-backtrace","k":"m","m":0},{"m":0,"k":"m","n":"is-compile-time","s":{"r":"Bool","p":["*%_"]}},{"s":{"p":["$bt?","*%_"],"r":"Mu"},"n":"throw","k":"m","m":0},{"k":"m","m":0,"s":{"p":["*%_"],"r":"Mu"},"n":"fail"},{"m":1,"k":"m","n":"Str","s":{"r":"Mu","p":["*%_"]}},{"n":"Str","s":{"p":["*%_"],"r":"Mu"},"m":1,"k":"m"},{"n":"Str","s":{"p":["*%_"],"r":"Mu"},"k":"m","m":1},{"k":"m","m":0,"n":"die","s":{"r":"Mu","p":["*%_"]}},{"n":"rethrow","s":{"p":["*%_"],"r":"Mu"},"m":0,"k":"m"},{"m":0,"k":"m","n":"backtrace","s":{"r":"Mu","p":["*%_"]}},{"s":{"r":"Mu","p":["*%_"]},"n":"gist","k":"m","m":1},{"m":1,"k":"m","n":"gist","s":{"p":["*%_"],"r":"Mu"}},{"s":{"r":"Mu","p":["*%_"]},"n":"gist","m":1,"k":"m"},{"s":{"r":"Mu","p":["*%_"]},"n":"vault-backtrace","k":"m","m":0},{"n":"BUILDALL","s":{"r":"Mu","p":["@auto","%init","*%_"]},"m":0,"k":"s"}],"k":"c"},{"k":"c","m":[{"s":{"p":["*%_"],"r":"Mu"},"n":"message","m":0,"k":"m"},{"k":"m","m":0,"n":"got","s":{"r":"Mu","p":["*%_"]}},{"m":0,"k":"s","n":"BUILDALL","s":{"r":"Mu","p":["@auto","%init","*%_"]}},{"s":{"p":["*%_"],"r":"Bool"},"n":"resume","m":0,"k":"m"},{"s":{"p":["*%_"],"r":"Mu"},"n":"reset-backtrace","k":"m","m":0},{"n":"is-compile-time","s":{"r":"Bool","p":["*%_"]},"m":0,"k":"m"},{"k":"m","m":0,"s":{"r":"Mu","p":["$bt?","*%_"]},"n":"throw"},{"k":"m","m":0,"n":"fail","s":{"r":"Mu","p":["*%_"]}},{"n":"Str","s":{"p":["*%_"],"r":"Mu"},"m":1,"k":"m"},{"m":1,"k":"m","s":{"p":["*%_"],"r":"Mu"},"n":"Str"},{"m":1,"k":"m","n":"Str","s":{"r":"Mu","p":["*%_"]}},{"m":0,"k":"m","n":"die","s":{"r":"Mu","p":["*%_"]}},{"s":{"r":"Mu","p":["*%_"]},"n":"rethrow","m":0,"k":"m"},{"k":"m","m":0,"n":"backtrace","s":{"r":"Mu","p":["*%_"]}},{"n":"gist","s":{"p":["*%_"],"r":"Mu"},"m":1,"k":"m"},{"m":1,"k":"m","s":{"p":["*%_"],"r":"Mu"},"n":"gist"},{"s":{"p":["*%_"],"r":"Mu"},"n":"gist","m":1,"k":"m"},{"k":"m","m":0,"n":"vault-backtrace","s":{"r":"Mu","p":["*%_"]}},{"k":"s","m":0,"s":{"r":"Mu","p":["@auto","%init","*%_"]},"n":"BUILDALL"}],"a":[{"n":"$.got","t":"Mu","k":"v"},{"k":"v","n":"$!ex","t":"Mu"},{"n":"$!bt","t":"Mu","k":"v"}],"b":"A","n":"X::Str::Trans::InvalidArg","t":"X::Str::Trans::InvalidArg"},{"n":"X::Str::Match::x","t":"X::Str::Match::x","b":"A","a":[{"n":"$.got","t":"Mu","k":"v"},{"t":"Mu","n":"$!ex","k":"v"},{"t":"Mu","n":"$!bt","k":"v"}],"k":"c","m":[{"n":"message","s":{"p":["*%_"],"r":"Mu"},"m":0,"k":"m"},{"s":{"r":"Mu","p":["*%_"]},"n":"got","m":0,"k":"m"},{"m":0,"k":"s","s":{"p":["@auto","%init","*%_"],"r":"Mu"},"n":"BUILDALL"},{"n":"resume","s":{"p":["*%_"],"r":"Bool"},"k":"m","m":0},{"k":"m","m":0,"s":{"r":"Mu","p":["*%_"]},"n":"reset-backtrace"},{"n":"is-compile-time","s":{"r":"Bool","p":["*%_"]},"m":0,"k":"m"},{"n":"throw","s":{"r":"Mu","p":["$bt?","*%_"]},"k":"m","m":0},{"n":"fail","s":{"r":"Mu","p":["*%_"]},"k":"m","m":0},{"m":1,"k":"m","s":{"r":"Mu","p":["*%_"]},"n":"Str"},{"n":"Str","s":{"r":"Mu","p":["*%_"]},"k":"m","m":1},{"k":"m","m":1,"n":"Str","s":{"r":"Mu","p":["*%_"]}},{"k":"m","m":0,"n":"die","s":{"p":["*%_"],"r":"Mu"}},{"n":"rethrow","s":{"r":"Mu","p":["*%_"]},"m":0,"k":"m"},{"n":"backtrace","s":{"p":["*%_"],"r":"Mu"},"k":"m","m":0},{"k":"m","m":1,"s":{"r":"Mu","p":["*%_"]},"n":"gist"},{"n":"gist","s":{"r":"Mu","p":["*%_"]},"m":1,"k":"m"},{"m":1,"k":"m","s":{"r":"Mu","p":["*%_"]},"n":"gist"},{"s":{"p":["*%_"],"r":"Mu"},"n":"vault-backtrace","m":0,"k":"m"},{"m":0,"k":"s","s":{"p":["@auto","%init","*%_"],"r":"Mu"},"n":"BUILDALL"}]},{"a":[{"k":"v","n":"$.directive","t":"str"},{"k":"v","n":"$.sequence","t":"str"},{"k":"v","n":"$!ex","t":"Mu"},{"n":"$!bt","t":"Mu","k":"v"}],"b":"A","m":[{"n":"message","s":{"p":["*%_"],"r":"Mu"},"m":0,"k":"m"},{"k":"m","m":0,"s":{"p":["*%_"],"r":"Mu"},"n":"directive"},{"s":{"r":"Mu","p":["*%_"]},"n":"sequence","k":"m","m":0},{"m":0,"k":"s","s":{"r":"Mu","p":["@auto","%init","*%_"]},"n":"BUILDALL"},{"n":"resume","s":{"r":"Bool","p":["*%_"]},"m":0,"k":"m"},{"k":"m","m":0,"n":"reset-backtrace","s":{"p":["*%_"],"r":"Mu"}},{"s":{"r":"Bool","p":["*%_"]},"n":"is-compile-time","k":"m","m":0},{"k":"m","m":0,"n":"throw","s":{"p":["$bt?","*%_"],"r":"Mu"}},{"m":0,"k":"m","n":"fail","s":{"r":"Mu","p":["*%_"]}},{"n":"Str","s":{"p":["*%_"],"r":"Mu"},"m":1,"k":"m"},{"m":1,"k":"m","n":"Str","s":{"r":"Mu","p":["*%_"]}},{"s":{"p":["*%_"],"r":"Mu"},"n":"Str","m":1,"k":"m"},{"s":{"p":["*%_"],"r":"Mu"},"n":"die","m":0,"k":"m"},{"n":"rethrow","s":{"r":"Mu","p":["*%_"]},"k":"m","m":0},{"n":"backtrace","s":{"r":"Mu","p":["*%_"]},"m":0,"k":"m"},{"s":{"r":"Mu","p":["*%_"]},"n":"gist","m":1,"k":"m"},{"n":"gist","s":{"p":["*%_"],"r":"Mu"},"m":1,"k":"m"},{"k":"m","m":1,"s":{"r":"Mu","p":["*%_"]},"n":"gist"},{"s":{"r":"Mu","p":["*%_"]},"n":"vault-backtrace","k":"m","m":0},{"k":"s","m":0,"n":"BUILDALL","s":{"p":["@auto","%init","*%_"],"r":"Mu"}}],"k":"c","n":"X::Str::Sprintf::Directives::Unsupported","t":"X::Str::Sprintf::Directives::Unsupported"},{"t":"X::Str::Sprintf::Directives::BadType","n":"X::Str::Sprintf::Directives::BadType","k":"c","m":[{"s":{"r":"Mu","p":["*%_"]},"n":"message","k":"m","m":0},{"k":"m","m":0,"s":{"p":["*%_"],"r":"Mu"},"n":"type"},{"s":{"p":["*%_"],"r":"Mu"},"n":"directive","m":0,"k":"m"},{"s":{"p":["*%_"],"r":"Mu"},"n":"expected","k":"m","m":0},{"n":"value","s":{"r":"Mu","p":["*%_"]},"m":0,"k":"m"},{"n":"BUILDALL","s":{"r":"Mu","p":["@auto","%init","*%_"]},"k":"s","m":0},{"k":"m","m":0,"n":"resume","s":{"p":["*%_"],"r":"Bool"}},{"m":0,"k":"m","s":{"r":"Mu","p":["*%_"]},"n":"reset-backtrace"},{"k":"m","m":0,"s":{"r":"Bool","p":["*%_"]},"n":"is-compile-time"},{"n":"throw","s":{"r":"Mu","p":["$bt?","*%_"]},"m":0,"k":"m"},{"n":"fail","s":{"p":["*%_"],"r":"Mu"},"k":"m","m":0},{"m":1,"k":"m","n":"Str","s":{"r":"Mu","p":["*%_"]}},{"s":{"p":["*%_"],"r":"Mu"},"n":"Str","k":"m","m":1},{"k":"m","m":1,"n":"Str","s":{"r":"Mu","p":["*%_"]}},{"m":0,"k":"m","s":{"p":["*%_"],"r":"Mu"},"n":"die"},{"k":"m","m":0,"n":"rethrow","s":{"p":["*%_"],"r":"Mu"}},{"m":0,"k":"m","n":"backtrace","s":{"r":"Mu","p":["*%_"]}},{"s":{"r":"Mu","p":["*%_"]},"n":"gist","m":1,"k":"m"},{"k":"m","m":1,"n":"gist","s":{"p":["*%_"],"r":"Mu"}},{"s":{"p":["*%_"],"r":"Mu"},"n":"gist","m":1,"k":"m"},{"n":"vault-backtrace","s":{"r":"Mu","p":["*%_"]},"k":"m","m":0},{"k":"s","m":0,"n":"BUILDALL","s":{"r":"Mu","p":["@auto","%init","*%_"]}}],"a":[{"k":"v","n":"$.type","t":"str"},{"t":"str","n":"$.directive","k":"v"},{"k":"v","t":"str","n":"$.expected"},{"t":"Mu","n":"$.value","k":"v"},{"k":"v","t":"Mu","n":"$!ex"},{"t":"Mu","n":"$!bt","k":"v"}],"b":"A"},{"n":"X::Str::Sprintf::Directives::Count","t":"X::Str::Sprintf::Directives::Count","k":"c","m":[{"n":"message","s":{"p":["*%_"],"r":"Mu"},"m":0,"k":"m"},{"m":0,"k":"m","n":"args-used","s":{"r":"Mu","p":["*%_"]}},{"s":{"r":"Mu","p":["*%_"]},"n":"args-have","m":0,"k":"m"},{"k":"s","m":0,"s":{"p":["@auto","%init","*%_"],"r":"Mu"},"n":"BUILDALL"},{"n":"resume","s":{"r":"Bool","p":["*%_"]},"m":0,"k":"m"},{"s":{"p":["*%_"],"r":"Mu"},"n":"reset-backtrace","m":0,"k":"m"},{"s":{"p":["*%_"],"r":"Bool"},"n":"is-compile-time","m":0,"k":"m"},{"m":0,"k":"m","n":"throw","s":{"r":"Mu","p":["$bt?","*%_"]}},{"n":"fail","s":{"r":"Mu","p":["*%_"]},"k":"m","m":0},{"k":"m","m":1,"n":"Str","s":{"r":"Mu","p":["*%_"]}},{"k":"m","m":1,"n":"Str","s":{"p":["*%_"],"r":"Mu"}},{"m":1,"k":"m","s":{"p":["*%_"],"r":"Mu"},"n":"Str"},{"m":0,"k":"m","s":{"r":"Mu","p":["*%_"]},"n":"die"},{"n":"rethrow","s":{"r":"Mu","p":["*%_"]},"m":0,"k":"m"},{"k":"m","m":0,"s":{"r":"Mu","p":["*%_"]},"n":"backtrace"},{"k":"m","m":1,"s":{"r":"Mu","p":["*%_"]},"n":"gist"},{"k":"m","m":1,"s":{"p":["*%_"],"r":"Mu"},"n":"gist"},{"m":1,"k":"m","n":"gist","s":{"r":"Mu","p":["*%_"]}},{"s":{"r":"Mu","p":["*%_"]},"n":"vault-backtrace","m":0,"k":"m"},{"n":"BUILDALL","s":{"p":["@auto","%init","*%_"],"r":"Mu"},"k":"s","m":0}],"a":[{"k":"v","n":"$.args-used","t":"int"},{"k":"v","t":"num","n":"$.args-have"},{"k":"v","t":"Mu","n":"$!ex"},{"k":"v","t":"Mu","n":"$!bt"}],"b":"A"},{"k":"c","m":[{"s":{"p":["*%_"],"r":"Mu"},"n":"source-indicator","m":0,"k":"m"},{"m":0,"k":"m","n":"message","s":{"p":["*%_"],"r":"Mu"}},{"s":{"p":["*%_"],"r":"Mu"},"n":"source","k":"m","m":0},{"k":"m","m":0,"s":{"r":"Mu","p":["*%_"]},"n":"pos"},{"s":{"r":"Mu","p":["*%_"]},"n":"reason","m":0,"k":"m"},{"k":"s","m":0,"n":"BUILDALL","s":{"p":["@auto","%init","*%_"],"r":"Mu"}},{"s":{"p":["*%_"],"r":"Bool"},"n":"resume","k":"m","m":0},{"s":{"p":["*%_"],"r":"Mu"},"n":"reset-backtrace","m":0,"k":"m"},{"m":0,"k":"m","n":"is-compile-time","s":{"p":["*%_"],"r":"Bool"}},{"m":0,"k":"m","s":{"p":["$bt?","*%_"],"r":"Mu"},"n":"throw"},{"k":"m","m":0,"n":"fail","s":{"r":"Mu","p":["*%_"]}},{"s":{"p":["*%_"],"r":"Mu"},"n":"Str","k":"m","m":1},{"k":"m","m":1,"n":"Str","s":{"r":"Mu","p":["*%_"]}},{"s":{"r":"Mu","p":["*%_"]},"n":"Str","m":1,"k":"m"},{"m":0,"k":"m","s":{"r":"Mu","p":["*%_"]},"n":"die"},{"n":"rethrow","s":{"r":"Mu","p":["*%_"]},"k":"m","m":0},{"m":0,"k":"m","n":"backtrace","s":{"r":"Mu","p":["*%_"]}},{"n":"gist","s":{"r":"Mu","p":["*%_"]},"k":"m","m":1},{"s":{"p":["*%_"],"r":"Mu"},"n":"gist","m":1,"k":"m"},{"k":"m","m":1,"s":{"p":["*%_"],"r":"Mu"},"n":"gist"},{"m":0,"k":"m","s":{"p":["*%_"],"r":"Mu"},"n":"vault-backtrace"},{"n":"BUILDALL","s":{"p":["@auto","%init","*%_"],"r":"Mu"},"k":"s","m":0}],"a":[{"k":"v","t":"Mu","n":"$.source"},{"t":"Mu","n":"$.pos","k":"v"},{"n":"$.reason","t":"Mu","k":"v"},{"t":"Mu","n":"$!ex","k":"v"},{"k":"v","t":"Mu","n":"$!bt"}],"b":"A","d":"TITLE\nclass X::Str::Numeric\n\nSUBTITLE\nError while trying to coerce a string to a number\n\n    class X::Str::Numeric is Exception { }\n\nError thrown (or wrapped in a Failure) when a conversion from string to a\nnumber fails.\n\nFor example\n\n    say +\"42 answers\";\n    CATCH { default { put .^name, ': ', .Str } };\n    # OUTPUT: «X::Str::Numeric: Cannot convert string to number: trailing characters after number in '42⏏ answers' (indicated by ⏏)␤»\n\n","n":"X::Str::Numeric","t":"X::Str::Numeric"},{"k":"ro","b":"C","d":"TITLE\nrole X::Syntax\n\nSUBTITLE\nSyntax error thrown by the compiler\n\n    role X::Syntax does X::Comp { }\n\nCommon role for syntax errors thrown by the compiler.","n":"X::Syntax","t":"X::Syntax"},{"t":"X::Syntax::NoSelf","n":"X::Syntax::NoSelf","d":"TITLE\nclass X::Syntax::NoSelf\n\nSUBTITLE\nCompilation error due to implicitly using a self that is not there\n\n    class X::Syntax::NoSelf does X::Syntax { }\n\nCompile time error thrown when $.foo style calls are used where no invocant\nis available.\n\nFor example the code\n\n    $.meth;\n\n\nin the program body throws the error\n\n    ===SORRY!===\n    Variable $.meth used where no 'self' is available\n\n\nbecause $.meth is short for $(self.meth), and there is no self available in\nmainline.\n\n","m":[{"m":0,"k":"m","s":{"p":["*%_"],"r":"Mu"},"n":"message"},{"s":{"r":"Mu","p":["*%_"]},"n":"sorry_heading","m":0,"k":"m"},{"n":"SET_FILE_LINE","s":{"r":"Mu","p":["$file","$line","*%_"]},"k":"m","m":0},{"s":{"p":["*%_"],"r":"Mu"},"n":"gist","m":1,"k":"m"},{"s":{"r":"Mu","p":["*%_"]},"n":"gist","k":"m","m":1},{"k":"m","m":1,"n":"gist","s":{"r":"Mu","p":["*%_"]}},{"n":"gist","s":{"r":"Mu","p":[":$sorry = Bool::True",":$expect = Bool::True","*%_"]},"k":"m","m":1},{"k":"m","m":0,"s":{"p":["*%_"],"r":"Mu"},"n":"variable"},{"k":"m","m":0,"n":"filename","s":{"p":["*%_"],"r":"Mu"}},{"k":"m","m":0,"s":{"r":"Mu","p":["*%_"]},"n":"pos"},{"n":"line","s":{"p":["*%_"],"r":"Mu"},"m":0,"k":"m"},{"m":0,"k":"m","s":{"p":["*%_"],"r":"Mu"},"n":"column"},{"k":"m","m":0,"n":"modules","s":{"p":["*%_"],"r":"Mu"}},{"m":0,"k":"m","n":"is-compile-time","s":{"r":"Mu","p":["*%_"]}},{"n":"pre","s":{"p":["*%_"],"r":"Mu"},"m":0,"k":"m"},{"m":0,"k":"m","s":{"r":"Mu","p":["*%_"]},"n":"post"},{"n":"highexpect","s":{"p":["*%_"],"r":"Mu"},"k":"m","m":0},{"n":"BUILDALL","s":{"p":["@auto","%init","*%_"],"r":"Mu"},"k":"s","m":0},{"s":{"p":["*%_"],"r":"Bool"},"n":"resume","m":0,"k":"m"},{"m":0,"k":"m","s":{"p":["*%_"],"r":"Mu"},"n":"reset-backtrace"},{"s":{"p":["*%_"],"r":"Bool"},"n":"is-compile-time","m":0,"k":"m"},{"s":{"p":["$bt?","*%_"],"r":"Mu"},"n":"throw","k":"m","m":0},{"k":"m","m":0,"n":"fail","s":{"p":["*%_"],"r":"Mu"}},{"k":"m","m":1,"n":"Str","s":{"r":"Mu","p":["*%_"]}},{"m":1,"k":"m","s":{"p":["*%_"],"r":"Mu"},"n":"Str"},{"m":1,"k":"m","n":"Str","s":{"r":"Mu","p":["*%_"]}},{"n":"die","s":{"p":["*%_"],"r":"Mu"},"k":"m","m":0},{"s":{"p":["*%_"],"r":"Mu"},"n":"rethrow","m":0,"k":"m"},{"s":{"p":["*%_"],"r":"Mu"},"n":"backtrace","k":"m","m":0},{"k":"m","m":1,"s":{"r":"Mu","p":["*%_"]},"n":"gist"},{"n":"gist","s":{"p":["*%_"],"r":"Mu"},"m":1,"k":"m"},{"k":"m","m":1,"n":"gist","s":{"r":"Mu","p":["*%_"]}},{"s":{"p":["*%_"],"r":"Mu"},"n":"vault-backtrace","m":0,"k":"m"},{"m":0,"k":"s","s":{"p":["@auto","%init","*%_"],"r":"Mu"},"n":"BUILDALL"}],"k":"c","b":"A","a":[{"n":"$.variable","t":"Mu","k":"v"},{"k":"v","n":"$.filename","t":"Mu"},{"k":"v","t":"Mu","n":"$.pos"},{"n":"$.line","t":"Mu","k":"v"},{"k":"v","n":"$.column","t":"Mu"},{"k":"v","n":"@.modules","t":"Positional"},{"t":"Mu","n":"$.is-compile-time","k":"v"},{"k":"v","n":"$.pre","t":"Mu"},{"n":"$.post","t":"Mu","k":"v"},{"t":"Positional","n":"@.highexpect","k":"v"},{"n":"$!ex","t":"Mu","k":"v"},{"n":"$!bt","t":"Mu","k":"v"}]},{"k":"c","m":[{"s":{"r":"Mu","p":["*%_"]},"n":"message","k":"m","m":0},{"n":"sorry_heading","s":{"p":["*%_"],"r":"Mu"},"k":"m","m":0},{"k":"m","m":0,"s":{"p":["$file","$line","*%_"],"r":"Mu"},"n":"SET_FILE_LINE"},{"m":1,"k":"m","n":"gist","s":{"r":"Mu","p":["*%_"]}},{"m":1,"k":"m","s":{"r":"Mu","p":["*%_"]},"n":"gist"},{"k":"m","m":1,"s":{"p":["*%_"],"r":"Mu"},"n":"gist"},{"k":"m","m":1,"s":{"p":[":$sorry = Bool::True",":$expect = Bool::True","*%_"],"r":"Mu"},"n":"gist"},{"m":0,"k":"m","s":{"p":["*%_"],"r":"Mu"},"n":"what"},{"k":"m","m":0,"s":{"p":["*%_"],"r":"Mu"},"n":"filename"},{"k":"m","m":0,"s":{"r":"Mu","p":["*%_"]},"n":"pos"},{"s":{"p":["*%_"],"r":"Mu"},"n":"line","k":"m","m":0},{"k":"m","m":0,"n":"column","s":{"p":["*%_"],"r":"Mu"}},{"m":0,"k":"m","s":{"p":["*%_"],"r":"Mu"},"n":"modules"},{"k":"m","m":0,"s":{"p":["*%_"],"r":"Mu"},"n":"is-compile-time"},{"m":0,"k":"m","n":"pre","s":{"p":["*%_"],"r":"Mu"}},{"s":{"p":["*%_"],"r":"Mu"},"n":"post","k":"m","m":0},{"k":"m","m":0,"n":"highexpect","s":{"p":["*%_"],"r":"Mu"}},{"m":0,"k":"s","s":{"r":"Mu","p":["@auto","%init","*%_"]},"n":"BUILDALL"},{"k":"m","m":0,"s":{"r":"Bool","p":["*%_"]},"n":"resume"},{"s":{"p":["*%_"],"r":"Mu"},"n":"reset-backtrace","m":0,"k":"m"},{"m":0,"k":"m","n":"is-compile-time","s":{"r":"Bool","p":["*%_"]}},{"n":"throw","s":{"p":["$bt?","*%_"],"r":"Mu"},"m":0,"k":"m"},{"s":{"r":"Mu","p":["*%_"]},"n":"fail","k":"m","m":0},{"s":{"r":"Mu","p":["*%_"]},"n":"Str","k":"m","m":1},{"s":{"p":["*%_"],"r":"Mu"},"n":"Str","k":"m","m":1},{"s":{"p":["*%_"],"r":"Mu"},"n":"Str","m":1,"k":"m"},{"s":{"r":"Mu","p":["*%_"]},"n":"die","k":"m","m":0},{"m":0,"k":"m","s":{"p":["*%_"],"r":"Mu"},"n":"rethrow"},{"m":0,"k":"m","n":"backtrace","s":{"r":"Mu","p":["*%_"]}},{"s":{"p":["*%_"],"r":"Mu"},"n":"gist","k":"m","m":1},{"k":"m","m":1,"s":{"p":["*%_"],"r":"Mu"},"n":"gist"},{"m":1,"k":"m","s":{"p":["*%_"],"r":"Mu"},"n":"gist"},{"m":0,"k":"m","s":{"p":["*%_"],"r":"Mu"},"n":"vault-backtrace"},{"m":0,"k":"s","s":{"p":["@auto","%init","*%_"],"r":"Mu"},"n":"BUILDALL"}],"b":"A","a":[{"k":"v","n":"$.what","t":"Mu"},{"k":"v","t":"Mu","n":"$.filename"},{"t":"Mu","n":"$.pos","k":"v"},{"k":"v","t":"Mu","n":"$.line"},{"k":"v","n":"$.column","t":"Mu"},{"t":"Positional","n":"@.modules","k":"v"},{"k":"v","n":"$.is-compile-time","t":"Mu"},{"t":"Mu","n":"$.pre","k":"v"},{"n":"$.post","t":"Mu","k":"v"},{"k":"v","t":"Positional","n":"@.highexpect"},{"k":"v","n":"$!ex","t":"Mu"},{"n":"$!bt","t":"Mu","k":"v"}],"d":"TITLE\nclass X::Syntax::Malformed\n\nSUBTITLE\nCompilation error due to a malformed construct (usually a declarator)\n\n    class X::Syntax::Malformed does X::Syntax {}\n\nThe Raku compiler throws errors of type X::Syntax::Malformed when it knows\nwhat kind of declaration it is parsing, and encounters a syntax error, but\ncan't give a more specific error message.\n\n    my Int a;   # throws an X::Syntax::Malformed\n\n\nproduces\n\n    ===SORRY!===\n    Malformed my\n    at -e:1\n    ------> my Int ⏏a\n\n\n","n":"X::Syntax::Malformed","t":"X::Syntax::Malformed"},{"t":"X::Syntax::Malformed::Elsif","n":"X::Syntax::Malformed::Elsif","k":"c","m":[{"n":"message","s":{"r":"Mu","p":["*%_"]},"k":"m","m":0},{"n":"sorry_heading","s":{"r":"Mu","p":["*%_"]},"m":0,"k":"m"},{"n":"SET_FILE_LINE","s":{"r":"Mu","p":["$file","$line","*%_"]},"k":"m","m":0},{"m":1,"k":"m","s":{"r":"Mu","p":["*%_"]},"n":"gist"},{"n":"gist","s":{"r":"Mu","p":["*%_"]},"k":"m","m":1},{"k":"m","m":1,"n":"gist","s":{"r":"Mu","p":["*%_"]}},{"k":"m","m":1,"n":"gist","s":{"p":[":$sorry = Bool::True",":$expect = Bool::True","*%_"],"r":"Mu"}},{"k":"m","m":0,"s":{"r":"Mu","p":["*%_"]},"n":"what"},{"m":0,"k":"m","n":"filename","s":{"p":["*%_"],"r":"Mu"}},{"m":0,"k":"m","s":{"r":"Mu","p":["*%_"]},"n":"pos"},{"n":"line","s":{"p":["*%_"],"r":"Mu"},"m":0,"k":"m"},{"s":{"r":"Mu","p":["*%_"]},"n":"column","k":"m","m":0},{"s":{"p":["*%_"],"r":"Mu"},"n":"modules","k":"m","m":0},{"n":"is-compile-time","s":{"r":"Mu","p":["*%_"]},"k":"m","m":0},{"n":"pre","s":{"p":["*%_"],"r":"Mu"},"m":0,"k":"m"},{"n":"post","s":{"p":["*%_"],"r":"Mu"},"m":0,"k":"m"},{"n":"highexpect","s":{"r":"Mu","p":["*%_"]},"k":"m","m":0},{"s":{"r":"Mu","p":["@auto","%init","*%_"]},"n":"BUILDALL","m":0,"k":"s"},{"n":"resume","s":{"r":"Bool","p":["*%_"]},"k":"m","m":0},{"k":"m","m":0,"s":{"r":"Mu","p":["*%_"]},"n":"reset-backtrace"},{"n":"is-compile-time","s":{"r":"Bool","p":["*%_"]},"k":"m","m":0},{"m":0,"k":"m","n":"throw","s":{"r":"Mu","p":["$bt?","*%_"]}},{"k":"m","m":0,"n":"fail","s":{"p":["*%_"],"r":"Mu"}},{"m":1,"k":"m","n":"Str","s":{"r":"Mu","p":["*%_"]}},{"k":"m","m":1,"s":{"p":["*%_"],"r":"Mu"},"n":"Str"},{"s":{"p":["*%_"],"r":"Mu"},"n":"Str","m":1,"k":"m"},{"k":"m","m":0,"s":{"p":["*%_"],"r":"Mu"},"n":"die"},{"s":{"p":["*%_"],"r":"Mu"},"n":"rethrow","m":0,"k":"m"},{"m":0,"k":"m","n":"backtrace","s":{"r":"Mu","p":["*%_"]}},{"m":1,"k":"m","s":{"r":"Mu","p":["*%_"]},"n":"gist"},{"k":"m","m":1,"s":{"r":"Mu","p":["*%_"]},"n":"gist"},{"m":1,"k":"m","n":"gist","s":{"r":"Mu","p":["*%_"]}},{"m":0,"k":"m","n":"vault-backtrace","s":{"p":["*%_"],"r":"Mu"}},{"m":0,"k":"s","n":"BUILDALL","s":{"p":["@auto","%init","*%_"],"r":"Mu"}}],"a":[{"k":"v","t":"Mu","n":"$.what"},{"t":"Mu","n":"$.filename","k":"v"},{"t":"Mu","n":"$.pos","k":"v"},{"t":"Mu","n":"$.line","k":"v"},{"t":"Mu","n":"$.column","k":"v"},{"k":"v","n":"@.modules","t":"Positional"},{"t":"Mu","n":"$.is-compile-time","k":"v"},{"k":"v","t":"Mu","n":"$.pre"},{"t":"Mu","n":"$.post","k":"v"},{"k":"v","t":"Positional","n":"@.highexpect"},{"t":"Mu","n":"$!ex","k":"v"},{"k":"v","t":"Mu","n":"$!bt"}],"b":"A"},{"b":"A","a":[{"k":"v","t":"Mu","n":"$.what"},{"n":"$.filename","t":"Mu","k":"v"},{"k":"v","n":"$.pos","t":"Mu"},{"n":"$.line","t":"Mu","k":"v"},{"k":"v","n":"$.column","t":"Mu"},{"k":"v","n":"@.modules","t":"Positional"},{"k":"v","n":"$.is-compile-time","t":"Mu"},{"k":"v","n":"$.pre","t":"Mu"},{"n":"$.post","t":"Mu","k":"v"},{"t":"Positional","n":"@.highexpect","k":"v"},{"t":"Mu","n":"$!ex","k":"v"},{"n":"$!bt","t":"Mu","k":"v"}],"k":"c","m":[{"s":{"p":["*%_"],"r":"Mu"},"n":"message","m":0,"k":"m"},{"n":"sorry_heading","s":{"p":["*%_"],"r":"Mu"},"k":"m","m":0},{"m":0,"k":"m","n":"SET_FILE_LINE","s":{"r":"Mu","p":["$file","$line","*%_"]}},{"n":"gist","s":{"r":"Mu","p":["*%_"]},"k":"m","m":1},{"s":{"p":["*%_"],"r":"Mu"},"n":"gist","m":1,"k":"m"},{"n":"gist","s":{"p":["*%_"],"r":"Mu"},"m":1,"k":"m"},{"k":"m","m":1,"s":{"r":"Mu","p":[":$sorry = Bool::True",":$expect = Bool::True","*%_"]},"n":"gist"},{"n":"what","s":{"r":"Mu","p":["*%_"]},"k":"m","m":0},{"n":"filename","s":{"p":["*%_"],"r":"Mu"},"k":"m","m":0},{"s":{"p":["*%_"],"r":"Mu"},"n":"pos","m":0,"k":"m"},{"k":"m","m":0,"n":"line","s":{"r":"Mu","p":["*%_"]}},{"k":"m","m":0,"n":"column","s":{"p":["*%_"],"r":"Mu"}},{"s":{"r":"Mu","p":["*%_"]},"n":"modules","m":0,"k":"m"},{"n":"is-compile-time","s":{"p":["*%_"],"r":"Mu"},"k":"m","m":0},{"k":"m","m":0,"n":"pre","s":{"r":"Mu","p":["*%_"]}},{"k":"m","m":0,"n":"post","s":{"r":"Mu","p":["*%_"]}},{"m":0,"k":"m","n":"highexpect","s":{"p":["*%_"],"r":"Mu"}},{"n":"BUILDALL","s":{"r":"Mu","p":["@auto","%init","*%_"]},"m":0,"k":"s"},{"s":{"r":"Bool","p":["*%_"]},"n":"resume","k":"m","m":0},{"n":"reset-backtrace","s":{"r":"Mu","p":["*%_"]},"m":0,"k":"m"},{"s":{"p":["*%_"],"r":"Bool"},"n":"is-compile-time","k":"m","m":0},{"s":{"r":"Mu","p":["$bt?","*%_"]},"n":"throw","m":0,"k":"m"},{"k":"m","m":0,"n":"fail","s":{"r":"Mu","p":["*%_"]}},{"m":1,"k":"m","n":"Str","s":{"r":"Mu","p":["*%_"]}},{"n":"Str","s":{"r":"Mu","p":["*%_"]},"k":"m","m":1},{"k":"m","m":1,"s":{"p":["*%_"],"r":"Mu"},"n":"Str"},{"n":"die","s":{"p":["*%_"],"r":"Mu"},"k":"m","m":0},{"m":0,"k":"m","s":{"p":["*%_"],"r":"Mu"},"n":"rethrow"},{"n":"backtrace","s":{"p":["*%_"],"r":"Mu"},"k":"m","m":0},{"s":{"r":"Mu","p":["*%_"]},"n":"gist","m":1,"k":"m"},{"s":{"p":["*%_"],"r":"Mu"},"n":"gist","k":"m","m":1},{"k":"m","m":1,"n":"gist","s":{"r":"Mu","p":["*%_"]}},{"m":0,"k":"m","n":"vault-backtrace","s":{"p":["*%_"],"r":"Mu"}},{"k":"s","m":0,"n":"BUILDALL","s":{"p":["@auto","%init","*%_"],"r":"Mu"}}],"n":"X::Syntax::Adverb","t":"X::Syntax::Adverb"},{"m":[{"k":"m","m":0,"n":"message","s":{"p":["*%_"],"r":"Mu"}},{"m":0,"k":"m","n":"sorry_heading","s":{"p":["*%_"],"r":"Mu"}},{"k":"m","m":0,"n":"SET_FILE_LINE","s":{"r":"Mu","p":["$file","$line","*%_"]}},{"n":"gist","s":{"p":["*%_"],"r":"Mu"},"m":1,"k":"m"},{"k":"m","m":1,"n":"gist","s":{"p":["*%_"],"r":"Mu"}},{"s":{"p":["*%_"],"r":"Mu"},"n":"gist","k":"m","m":1},{"k":"m","m":1,"n":"gist","s":{"p":[":$sorry = Bool::True",":$expect = Bool::True","*%_"],"r":"Mu"}},{"m":0,"k":"m","n":"infix","s":{"r":"Mu","p":["*%_"]}},{"s":{"p":["*%_"],"r":"Mu"},"n":"filename","k":"m","m":0},{"s":{"p":["*%_"],"r":"Mu"},"n":"pos","k":"m","m":0},{"m":0,"k":"m","s":{"r":"Mu","p":["*%_"]},"n":"line"},{"s":{"p":["*%_"],"r":"Mu"},"n":"column","m":0,"k":"m"},{"s":{"p":["*%_"],"r":"Mu"},"n":"modules","k":"m","m":0},{"k":"m","m":0,"n":"is-compile-time","s":{"p":["*%_"],"r":"Mu"}},{"m":0,"k":"m","s":{"r":"Mu","p":["*%_"]},"n":"pre"},{"m":0,"k":"m","s":{"r":"Mu","p":["*%_"]},"n":"post"},{"k":"m","m":0,"s":{"r":"Mu","p":["*%_"]},"n":"highexpect"},{"m":0,"k":"s","s":{"r":"Mu","p":["@auto","%init","*%_"]},"n":"BUILDALL"},{"m":0,"k":"m","s":{"r":"Bool","p":["*%_"]},"n":"resume"},{"k":"m","m":0,"n":"reset-backtrace","s":{"p":["*%_"],"r":"Mu"}},{"m":0,"k":"m","s":{"p":["*%_"],"r":"Bool"},"n":"is-compile-time"},{"m":0,"k":"m","n":"throw","s":{"r":"Mu","p":["$bt?","*%_"]}},{"s":{"r":"Mu","p":["*%_"]},"n":"fail","k":"m","m":0},{"s":{"p":["*%_"],"r":"Mu"},"n":"Str","m":1,"k":"m"},{"n":"Str","s":{"r":"Mu","p":["*%_"]},"m":1,"k":"m"},{"s":{"r":"Mu","p":["*%_"]},"n":"Str","m":1,"k":"m"},{"k":"m","m":0,"n":"die","s":{"r":"Mu","p":["*%_"]}},{"s":{"r":"Mu","p":["*%_"]},"n":"rethrow","m":0,"k":"m"},{"n":"backtrace","s":{"r":"Mu","p":["*%_"]},"k":"m","m":0},{"m":1,"k":"m","s":{"r":"Mu","p":["*%_"]},"n":"gist"},{"s":{"r":"Mu","p":["*%_"]},"n":"gist","m":1,"k":"m"},{"k":"m","m":1,"n":"gist","s":{"r":"Mu","p":["*%_"]}},{"s":{"r":"Mu","p":["*%_"]},"n":"vault-backtrace","k":"m","m":0},{"k":"s","m":0,"s":{"r":"Mu","p":["@auto","%init","*%_"]},"n":"BUILDALL"}],"k":"c","a":[{"k":"v","t":"Mu","n":"$.infix"},{"k":"v","n":"$.filename","t":"Mu"},{"k":"v","t":"Mu","n":"$.pos"},{"t":"Mu","n":"$.line","k":"v"},{"k":"v","t":"Mu","n":"$.column"},{"k":"v","t":"Positional","n":"@.modules"},{"k":"v","t":"Mu","n":"$.is-compile-time"},{"t":"Mu","n":"$.pre","k":"v"},{"k":"v","n":"$.post","t":"Mu"},{"n":"@.highexpect","t":"Positional","k":"v"},{"t":"Mu","n":"$!ex","k":"v"},{"t":"Mu","n":"$!bt","k":"v"}],"b":"A","d":"TITLE\nclass X::Syntax::InfixInTermPosition\n\nSUBTITLE\nCompilation error due to an infix in term position\n\n    class X::Syntax::InfixInTermPosition does X::Syntax { }\n\nSyntax error thrown when the parser expects a term, but finds an infix\noperator instead.\n\nFor example\n\n    1, => 2;\n\n\ndies with\n\n    ===SORRY!===\n    Preceding context expects a term, but found infix => instead\n\n\n","n":"X::Syntax::InfixInTermPosition","t":"X::Syntax::InfixInTermPosition"},{"b":"A","a":[{"n":"$.filename","t":"Mu","k":"v"},{"n":"$.pos","t":"Mu","k":"v"},{"t":"Mu","n":"$.line","k":"v"},{"k":"v","n":"$.column","t":"Mu"},{"k":"v","t":"Positional","n":"@.modules"},{"k":"v","t":"Mu","n":"$.is-compile-time"},{"k":"v","t":"Mu","n":"$.pre"},{"k":"v","t":"Mu","n":"$.post"},{"n":"@.highexpect","t":"Positional","k":"v"},{"k":"v","t":"Mu","n":"$!ex"},{"k":"v","t":"Mu","n":"$!bt"}],"k":"c","m":[{"k":"m","m":0,"s":{"p":["*%_"],"r":"Mu"},"n":"message"},{"s":{"p":["*%_"],"r":"Mu"},"n":"sorry_heading","m":0,"k":"m"},{"m":0,"k":"m","s":{"r":"Mu","p":["$file","$line","*%_"]},"n":"SET_FILE_LINE"},{"n":"gist","s":{"r":"Mu","p":["*%_"]},"m":1,"k":"m"},{"s":{"r":"Mu","p":["*%_"]},"n":"gist","m":1,"k":"m"},{"m":1,"k":"m","s":{"p":["*%_"],"r":"Mu"},"n":"gist"},{"n":"gist","s":{"r":"Mu","p":[":$sorry = Bool::True",":$expect = Bool::True","*%_"]},"m":1,"k":"m"},{"n":"filename","s":{"p":["*%_"],"r":"Mu"},"k":"m","m":0},{"s":{"p":["*%_"],"r":"Mu"},"n":"pos","k":"m","m":0},{"n":"line","s":{"p":["*%_"],"r":"Mu"},"k":"m","m":0},{"n":"column","s":{"r":"Mu","p":["*%_"]},"k":"m","m":0},{"s":{"r":"Mu","p":["*%_"]},"n":"modules","m":0,"k":"m"},{"s":{"r":"Mu","p":["*%_"]},"n":"is-compile-time","k":"m","m":0},{"k":"m","m":0,"n":"pre","s":{"r":"Mu","p":["*%_"]}},{"m":0,"k":"m","s":{"p":["*%_"],"r":"Mu"},"n":"post"},{"s":{"r":"Mu","p":["*%_"]},"n":"highexpect","k":"m","m":0},{"k":"s","m":0,"s":{"p":["@auto","%init","*%_"],"r":"Mu"},"n":"BUILDALL"},{"n":"resume","s":{"p":["*%_"],"r":"Bool"},"k":"m","m":0},{"n":"reset-backtrace","s":{"p":["*%_"],"r":"Mu"},"m":0,"k":"m"},{"s":{"r":"Bool","p":["*%_"]},"n":"is-compile-time","k":"m","m":0},{"n":"throw","s":{"p":["$bt?","*%_"],"r":"Mu"},"m":0,"k":"m"},{"n":"fail","s":{"r":"Mu","p":["*%_"]},"m":0,"k":"m"},{"k":"m","m":1,"s":{"r":"Mu","p":["*%_"]},"n":"Str"},{"s":{"p":["*%_"],"r":"Mu"},"n":"Str","k":"m","m":1},{"s":{"r":"Mu","p":["*%_"]},"n":"Str","k":"m","m":1},{"s":{"p":["*%_"],"r":"Mu"},"n":"die","m":0,"k":"m"},{"s":{"r":"Mu","p":["*%_"]},"n":"rethrow","k":"m","m":0},{"s":{"r":"Mu","p":["*%_"]},"n":"backtrace","k":"m","m":0},{"s":{"p":["*%_"],"r":"Mu"},"n":"gist","k":"m","m":1},{"m":1,"k":"m","s":{"r":"Mu","p":["*%_"]},"n":"gist"},{"n":"gist","s":{"p":["*%_"],"r":"Mu"},"k":"m","m":1},{"k":"m","m":0,"s":{"r":"Mu","p":["*%_"]},"n":"vault-backtrace"},{"n":"BUILDALL","s":{"p":["@auto","%init","*%_"],"r":"Mu"},"k":"s","m":0}],"n":"X::Syntax::ConditionalOperator::SecondPartGobbled","t":"X::Syntax::ConditionalOperator::SecondPartGobbled"},{"n":"X::Syntax::ConditionalOperator::SecondPartInvalid","t":"X::Syntax::ConditionalOperator::SecondPartInvalid","b":"A","a":[{"t":"Mu","n":"$.second-part","k":"v"},{"k":"v","t":"Mu","n":"$.filename"},{"t":"Mu","n":"$.pos","k":"v"},{"k":"v","t":"Mu","n":"$.line"},{"t":"Mu","n":"$.column","k":"v"},{"t":"Positional","n":"@.modules","k":"v"},{"n":"$.is-compile-time","t":"Mu","k":"v"},{"k":"v","n":"$.pre","t":"Mu"},{"k":"v","n":"$.post","t":"Mu"},{"t":"Positional","n":"@.highexpect","k":"v"},{"k":"v","t":"Mu","n":"$!ex"},{"k":"v","n":"$!bt","t":"Mu"}],"k":"c","m":[{"s":{"r":"Mu","p":["*%_"]},"n":"message","k":"m","m":0},{"m":0,"k":"m","s":{"p":["*%_"],"r":"Mu"},"n":"sorry_heading"},{"s":{"p":["$file","$line","*%_"],"r":"Mu"},"n":"SET_FILE_LINE","m":0,"k":"m"},{"k":"m","m":1,"s":{"r":"Mu","p":["*%_"]},"n":"gist"},{"m":1,"k":"m","n":"gist","s":{"r":"Mu","p":["*%_"]}},{"n":"gist","s":{"r":"Mu","p":["*%_"]},"k":"m","m":1},{"n":"gist","s":{"p":[":$sorry = Bool::True",":$expect = Bool::True","*%_"],"r":"Mu"},"m":1,"k":"m"},{"k":"m","m":0,"n":"second-part","s":{"p":["*%_"],"r":"Mu"}},{"s":{"p":["*%_"],"r":"Mu"},"n":"filename","k":"m","m":0},{"n":"pos","s":{"r":"Mu","p":["*%_"]},"m":0,"k":"m"},{"k":"m","m":0,"s":{"r":"Mu","p":["*%_"]},"n":"line"},{"n":"column","s":{"r":"Mu","p":["*%_"]},"m":0,"k":"m"},{"k":"m","m":0,"n":"modules","s":{"p":["*%_"],"r":"Mu"}},{"m":0,"k":"m","s":{"r":"Mu","p":["*%_"]},"n":"is-compile-time"},{"n":"pre","s":{"p":["*%_"],"r":"Mu"},"k":"m","m":0},{"m":0,"k":"m","n":"post","s":{"p":["*%_"],"r":"Mu"}},{"s":{"p":["*%_"],"r":"Mu"},"n":"highexpect","k":"m","m":0},{"m":0,"k":"s","s":{"r":"Mu","p":["@auto","%init","*%_"]},"n":"BUILDALL"},{"k":"m","m":0,"s":{"r":"Bool","p":["*%_"]},"n":"resume"},{"s":{"r":"Mu","p":["*%_"]},"n":"reset-backtrace","k":"m","m":0},{"s":{"r":"Bool","p":["*%_"]},"n":"is-compile-time","m":0,"k":"m"},{"k":"m","m":0,"n":"throw","s":{"p":["$bt?","*%_"],"r":"Mu"}},{"s":{"p":["*%_"],"r":"Mu"},"n":"fail","k":"m","m":0},{"s":{"p":["*%_"],"r":"Mu"},"n":"Str","k":"m","m":1},{"m":1,"k":"m","n":"Str","s":{"r":"Mu","p":["*%_"]}},{"k":"m","m":1,"s":{"r":"Mu","p":["*%_"]},"n":"Str"},{"k":"m","m":0,"s":{"r":"Mu","p":["*%_"]},"n":"die"},{"s":{"p":["*%_"],"r":"Mu"},"n":"rethrow","m":0,"k":"m"},{"s":{"r":"Mu","p":["*%_"]},"n":"backtrace","m":0,"k":"m"},{"n":"gist","s":{"p":["*%_"],"r":"Mu"},"m":1,"k":"m"},{"n":"gist","s":{"r":"Mu","p":["*%_"]},"k":"m","m":1},{"s":{"p":["*%_"],"r":"Mu"},"n":"gist","k":"m","m":1},{"n":"vault-backtrace","s":{"p":["*%_"],"r":"Mu"},"m":0,"k":"m"},{"m":0,"k":"s","n":"BUILDALL","s":{"r":"Mu","p":["@auto","%init","*%_"]}}]},{"t":"X::Syntax::ConditionalOperator::PrecedenceTooLoose","n":"X::Syntax::ConditionalOperator::PrecedenceTooLoose","b":"A","a":[{"k":"v","n":"$.operator","t":"Mu"},{"k":"v","n":"$.filename","t":"Mu"},{"n":"$.pos","t":"Mu","k":"v"},{"k":"v","t":"Mu","n":"$.line"},{"n":"$.column","t":"Mu","k":"v"},{"k":"v","t":"Positional","n":"@.modules"},{"n":"$.is-compile-time","t":"Mu","k":"v"},{"n":"$.pre","t":"Mu","k":"v"},{"t":"Mu","n":"$.post","k":"v"},{"k":"v","t":"Positional","n":"@.highexpect"},{"k":"v","t":"Mu","n":"$!ex"},{"k":"v","t":"Mu","n":"$!bt"}],"m":[{"s":{"p":["*%_"],"r":"Mu"},"n":"message","k":"m","m":0},{"n":"sorry_heading","s":{"r":"Mu","p":["*%_"]},"k":"m","m":0},{"m":0,"k":"m","s":{"r":"Mu","p":["$file","$line","*%_"]},"n":"SET_FILE_LINE"},{"s":{"p":["*%_"],"r":"Mu"},"n":"gist","k":"m","m":1},{"m":1,"k":"m","n":"gist","s":{"p":["*%_"],"r":"Mu"}},{"n":"gist","s":{"p":["*%_"],"r":"Mu"},"m":1,"k":"m"},{"m":1,"k":"m","n":"gist","s":{"r":"Mu","p":[":$sorry = Bool::True",":$expect = Bool::True","*%_"]}},{"m":0,"k":"m","s":{"p":["*%_"],"r":"Mu"},"n":"operator"},{"m":0,"k":"m","s":{"r":"Mu","p":["*%_"]},"n":"filename"},{"m":0,"k":"m","s":{"r":"Mu","p":["*%_"]},"n":"pos"},{"s":{"r":"Mu","p":["*%_"]},"n":"line","k":"m","m":0},{"m":0,"k":"m","n":"column","s":{"r":"Mu","p":["*%_"]}},{"n":"modules","s":{"r":"Mu","p":["*%_"]},"m":0,"k":"m"},{"m":0,"k":"m","s":{"r":"Mu","p":["*%_"]},"n":"is-compile-time"},{"s":{"r":"Mu","p":["*%_"]},"n":"pre","k":"m","m":0},{"k":"m","m":0,"n":"post","s":{"r":"Mu","p":["*%_"]}},{"m":0,"k":"m","n":"highexpect","s":{"p":["*%_"],"r":"Mu"}},{"s":{"p":["@auto","%init","*%_"],"r":"Mu"},"n":"BUILDALL","m":0,"k":"s"},{"s":{"p":["*%_"],"r":"Bool"},"n":"resume","m":0,"k":"m"},{"m":0,"k":"m","n":"reset-backtrace","s":{"p":["*%_"],"r":"Mu"}},{"n":"is-compile-time","s":{"r":"Bool","p":["*%_"]},"m":0,"k":"m"},{"k":"m","m":0,"s":{"p":["$bt?","*%_"],"r":"Mu"},"n":"throw"},{"n":"fail","s":{"r":"Mu","p":["*%_"]},"k":"m","m":0},{"m":1,"k":"m","n":"Str","s":{"p":["*%_"],"r":"Mu"}},{"s":{"p":["*%_"],"r":"Mu"},"n":"Str","k":"m","m":1},{"k":"m","m":1,"n":"Str","s":{"p":["*%_"],"r":"Mu"}},{"m":0,"k":"m","n":"die","s":{"r":"Mu","p":["*%_"]}},{"m":0,"k":"m","n":"rethrow","s":{"p":["*%_"],"r":"Mu"}},{"m":0,"k":"m","n":"backtrace","s":{"r":"Mu","p":["*%_"]}},{"n":"gist","s":{"r":"Mu","p":["*%_"]},"m":1,"k":"m"},{"m":1,"k":"m","s":{"p":["*%_"],"r":"Mu"},"n":"gist"},{"m":1,"k":"m","s":{"r":"Mu","p":["*%_"]},"n":"gist"},{"k":"m","m":0,"s":{"r":"Mu","p":["*%_"]},"n":"vault-backtrace"},{"s":{"p":["@auto","%init","*%_"],"r":"Mu"},"n":"BUILDALL","k":"s","m":0}],"k":"c"},{"k":"c","m":[{"s":{"r":"Mu","p":["*%_"]},"n":"message","k":"m","m":0},{"n":"sorry_heading","s":{"p":["*%_"],"r":"Mu"},"m":0,"k":"m"},{"k":"m","m":0,"n":"SET_FILE_LINE","s":{"r":"Mu","p":["$file","$line","*%_"]}},{"s":{"p":["*%_"],"r":"Mu"},"n":"gist","k":"m","m":1},{"n":"gist","s":{"p":["*%_"],"r":"Mu"},"k":"m","m":1},{"s":{"p":["*%_"],"r":"Mu"},"n":"gist","m":1,"k":"m"},{"m":1,"k":"m","s":{"p":[":$sorry = Bool::True",":$expect = Bool::True","*%_"],"r":"Mu"},"n":"gist"},{"m":0,"k":"m","n":"filename","s":{"r":"Mu","p":["*%_"]}},{"n":"pos","s":{"r":"Mu","p":["*%_"]},"k":"m","m":0},{"s":{"r":"Mu","p":["*%_"]},"n":"line","m":0,"k":"m"},{"n":"column","s":{"p":["*%_"],"r":"Mu"},"k":"m","m":0},{"m":0,"k":"m","s":{"p":["*%_"],"r":"Mu"},"n":"modules"},{"k":"m","m":0,"n":"is-compile-time","s":{"p":["*%_"],"r":"Mu"}},{"s":{"r":"Mu","p":["*%_"]},"n":"pre","m":0,"k":"m"},{"n":"post","s":{"p":["*%_"],"r":"Mu"},"m":0,"k":"m"},{"m":0,"k":"m","s":{"p":["*%_"],"r":"Mu"},"n":"highexpect"},{"n":"BUILDALL","s":{"r":"Mu","p":["@auto","%init","*%_"]},"m":0,"k":"s"},{"n":"resume","s":{"p":["*%_"],"r":"Bool"},"m":0,"k":"m"},{"s":{"r":"Mu","p":["*%_"]},"n":"reset-backtrace","m":0,"k":"m"},{"n":"is-compile-time","s":{"p":["*%_"],"r":"Bool"},"k":"m","m":0},{"n":"throw","s":{"r":"Mu","p":["$bt?","*%_"]},"k":"m","m":0},{"k":"m","m":0,"n":"fail","s":{"p":["*%_"],"r":"Mu"}},{"k":"m","m":1,"s":{"p":["*%_"],"r":"Mu"},"n":"Str"},{"k":"m","m":1,"s":{"p":["*%_"],"r":"Mu"},"n":"Str"},{"m":1,"k":"m","s":{"p":["*%_"],"r":"Mu"},"n":"Str"},{"m":0,"k":"m","s":{"r":"Mu","p":["*%_"]},"n":"die"},{"k":"m","m":0,"n":"rethrow","s":{"r":"Mu","p":["*%_"]}},{"m":0,"k":"m","n":"backtrace","s":{"r":"Mu","p":["*%_"]}},{"s":{"r":"Mu","p":["*%_"]},"n":"gist","m":1,"k":"m"},{"m":1,"k":"m","s":{"r":"Mu","p":["*%_"]},"n":"gist"},{"s":{"r":"Mu","p":["*%_"]},"n":"gist","k":"m","m":1},{"k":"m","m":0,"n":"vault-backtrace","s":{"p":["*%_"],"r":"Mu"}},{"k":"s","m":0,"n":"BUILDALL","s":{"p":["@auto","%init","*%_"],"r":"Mu"}}],"a":[{"k":"v","t":"Mu","n":"$.filename"},{"k":"v","t":"Mu","n":"$.pos"},{"t":"Mu","n":"$.line","k":"v"},{"t":"Mu","n":"$.column","k":"v"},{"k":"v","t":"Positional","n":"@.modules"},{"n":"$.is-compile-time","t":"Mu","k":"v"},{"n":"$.pre","t":"Mu","k":"v"},{"k":"v","n":"$.post","t":"Mu"},{"n":"@.highexpect","t":"Positional","k":"v"},{"n":"$!ex","t":"Mu","k":"v"},{"k":"v","n":"$!bt","t":"Mu"}],"b":"A","n":"X::Syntax::Coercer::TooComplex","t":"X::Syntax::Coercer::TooComplex"},{"n":"X::Syntax::Type::Adverb","t":"X::Syntax::Type::Adverb","a":[{"k":"v","n":"$.adverb","t":"Mu"},{"t":"Mu","n":"$.filename","k":"v"},{"t":"Mu","n":"$.pos","k":"v"},{"k":"v","n":"$.line","t":"Mu"},{"t":"Mu","n":"$.column","k":"v"},{"k":"v","t":"Positional","n":"@.modules"},{"k":"v","t":"Mu","n":"$.is-compile-time"},{"n":"$.pre","t":"Mu","k":"v"},{"t":"Mu","n":"$.post","k":"v"},{"n":"@.highexpect","t":"Positional","k":"v"},{"t":"Mu","n":"$!ex","k":"v"},{"k":"v","t":"Mu","n":"$!bt"}],"b":"A","m":[{"s":{"r":"Mu","p":["*%_"]},"n":"message","m":0,"k":"m"},{"k":"m","m":0,"n":"sorry_heading","s":{"r":"Mu","p":["*%_"]}},{"s":{"r":"Mu","p":["$file","$line","*%_"]},"n":"SET_FILE_LINE","k":"m","m":0},{"k":"m","m":1,"n":"gist","s":{"p":["*%_"],"r":"Mu"}},{"k":"m","m":1,"s":{"p":["*%_"],"r":"Mu"},"n":"gist"},{"k":"m","m":1,"n":"gist","s":{"p":["*%_"],"r":"Mu"}},{"k":"m","m":1,"n":"gist","s":{"r":"Mu","p":[":$sorry = Bool::True",":$expect = Bool::True","*%_"]}},{"n":"adverb","s":{"p":["*%_"],"r":"Mu"},"k":"m","m":0},{"n":"filename","s":{"r":"Mu","p":["*%_"]},"k":"m","m":0},{"k":"m","m":0,"s":{"r":"Mu","p":["*%_"]},"n":"pos"},{"s":{"r":"Mu","p":["*%_"]},"n":"line","m":0,"k":"m"},{"k":"m","m":0,"s":{"r":"Mu","p":["*%_"]},"n":"column"},{"k":"m","m":0,"s":{"r":"Mu","p":["*%_"]},"n":"modules"},{"k":"m","m":0,"s":{"r":"Mu","p":["*%_"]},"n":"is-compile-time"},{"k":"m","m":0,"s":{"r":"Mu","p":["*%_"]},"n":"pre"},{"m":0,"k":"m","n":"post","s":{"p":["*%_"],"r":"Mu"}},{"m":0,"k":"m","n":"highexpect","s":{"p":["*%_"],"r":"Mu"}},{"m":0,"k":"s","s":{"p":["@auto","%init","*%_"],"r":"Mu"},"n":"BUILDALL"},{"m":0,"k":"m","s":{"p":["*%_"],"r":"Bool"},"n":"resume"},{"n":"reset-backtrace","s":{"p":["*%_"],"r":"Mu"},"m":0,"k":"m"},{"n":"is-compile-time","s":{"p":["*%_"],"r":"Bool"},"k":"m","m":0},{"m":0,"k":"m","s":{"r":"Mu","p":["$bt?","*%_"]},"n":"throw"},{"n":"fail","s":{"r":"Mu","p":["*%_"]},"m":0,"k":"m"},{"m":1,"k":"m","n":"Str","s":{"r":"Mu","p":["*%_"]}},{"m":1,"k":"m","s":{"r":"Mu","p":["*%_"]},"n":"Str"},{"k":"m","m":1,"n":"Str","s":{"p":["*%_"],"r":"Mu"}},{"m":0,"k":"m","n":"die","s":{"r":"Mu","p":["*%_"]}},{"n":"rethrow","s":{"p":["*%_"],"r":"Mu"},"k":"m","m":0},{"s":{"p":["*%_"],"r":"Mu"},"n":"backtrace","k":"m","m":0},{"m":1,"k":"m","n":"gist","s":{"p":["*%_"],"r":"Mu"}},{"m":1,"k":"m","n":"gist","s":{"r":"Mu","p":["*%_"]}},{"s":{"r":"Mu","p":["*%_"]},"n":"gist","k":"m","m":1},{"s":{"p":["*%_"],"r":"Mu"},"n":"vault-backtrace","k":"m","m":0},{"m":0,"k":"s","n":"BUILDALL","s":{"r":"Mu","p":["@auto","%init","*%_"]}}],"k":"c"},{"d":"TITLE\nclass X::Syntax::Term::MissingInitializer\n\nSUBTITLE\nCompilation error due to declaring a term without initialization\n\n    class X::Syntax::Term::MissingInitializer does X::Syntax { }\n\nSyntax error when a term (a backslash variable) is declared without\ninitialization assignment.\n\nFor example\n\n    my \\foo;\n\n\ndies with\n\n    ===SORRY!===\n    Term definition requires an initializer\n\n\nValid code would be\n\n    my \\foo = 42;\n","m":[{"n":"message","s":{"p":["*%_"],"r":"Mu"},"k":"m","m":0},{"k":"m","m":0,"n":"sorry_heading","s":{"p":["*%_"],"r":"Mu"}},{"k":"m","m":0,"s":{"p":["$file","$line","*%_"],"r":"Mu"},"n":"SET_FILE_LINE"},{"n":"gist","s":{"r":"Mu","p":["*%_"]},"k":"m","m":1},{"n":"gist","s":{"p":["*%_"],"r":"Mu"},"m":1,"k":"m"},{"s":{"p":["*%_"],"r":"Mu"},"n":"gist","m":1,"k":"m"},{"m":1,"k":"m","s":{"r":"Mu","p":[":$sorry = Bool::True",":$expect = Bool::True","*%_"]},"n":"gist"},{"s":{"r":"Mu","p":["*%_"]},"n":"filename","m":0,"k":"m"},{"n":"pos","s":{"r":"Mu","p":["*%_"]},"k":"m","m":0},{"k":"m","m":0,"n":"line","s":{"r":"Mu","p":["*%_"]}},{"k":"m","m":0,"n":"column","s":{"p":["*%_"],"r":"Mu"}},{"m":0,"k":"m","n":"modules","s":{"p":["*%_"],"r":"Mu"}},{"m":0,"k":"m","n":"is-compile-time","s":{"p":["*%_"],"r":"Mu"}},{"k":"m","m":0,"s":{"p":["*%_"],"r":"Mu"},"n":"pre"},{"s":{"r":"Mu","p":["*%_"]},"n":"post","m":0,"k":"m"},{"s":{"p":["*%_"],"r":"Mu"},"n":"highexpect","m":0,"k":"m"},{"n":"BUILDALL","s":{"r":"Mu","p":["@auto","%init","*%_"]},"m":0,"k":"s"},{"k":"m","m":0,"s":{"p":["*%_"],"r":"Bool"},"n":"resume"},{"k":"m","m":0,"n":"reset-backtrace","s":{"r":"Mu","p":["*%_"]}},{"m":0,"k":"m","n":"is-compile-time","s":{"p":["*%_"],"r":"Bool"}},{"k":"m","m":0,"n":"throw","s":{"r":"Mu","p":["$bt?","*%_"]}},{"m":0,"k":"m","s":{"r":"Mu","p":["*%_"]},"n":"fail"},{"s":{"r":"Mu","p":["*%_"]},"n":"Str","k":"m","m":1},{"n":"Str","s":{"r":"Mu","p":["*%_"]},"k":"m","m":1},{"s":{"p":["*%_"],"r":"Mu"},"n":"Str","k":"m","m":1},{"n":"die","s":{"p":["*%_"],"r":"Mu"},"m":0,"k":"m"},{"s":{"p":["*%_"],"r":"Mu"},"n":"rethrow","m":0,"k":"m"},{"n":"backtrace","s":{"p":["*%_"],"r":"Mu"},"m":0,"k":"m"},{"n":"gist","s":{"r":"Mu","p":["*%_"]},"k":"m","m":1},{"s":{"p":["*%_"],"r":"Mu"},"n":"gist","m":1,"k":"m"},{"k":"m","m":1,"s":{"r":"Mu","p":["*%_"]},"n":"gist"},{"k":"m","m":0,"s":{"r":"Mu","p":["*%_"]},"n":"vault-backtrace"},{"n":"BUILDALL","s":{"p":["@auto","%init","*%_"],"r":"Mu"},"m":0,"k":"s"}],"k":"c","a":[{"n":"$.filename","t":"Mu","k":"v"},{"k":"v","n":"$.pos","t":"Mu"},{"k":"v","t":"Mu","n":"$.line"},{"k":"v","n":"$.column","t":"Mu"},{"k":"v","n":"@.modules","t":"Positional"},{"n":"$.is-compile-time","t":"Mu","k":"v"},{"t":"Mu","n":"$.pre","k":"v"},{"k":"v","n":"$.post","t":"Mu"},{"n":"@.highexpect","t":"Positional","k":"v"},{"k":"v","t":"Mu","n":"$!ex"},{"t":"Mu","n":"$!bt","k":"v"}],"b":"A","t":"X::Syntax::Term::MissingInitializer","n":"X::Syntax::Term::MissingInitializer"},{"t":"X::Syntax::ParentAsHash","n":"X::Syntax::ParentAsHash","a":[{"k":"v","n":"$.parent","t":"Mu"},{"t":"Mu","n":"$.filename","k":"v"},{"k":"v","t":"Mu","n":"$.pos"},{"k":"v","t":"Mu","n":"$.line"},{"k":"v","n":"$.column","t":"Mu"},{"n":"@.modules","t":"Positional","k":"v"},{"k":"v","t":"Mu","n":"$.is-compile-time"},{"n":"$.pre","t":"Mu","k":"v"},{"k":"v","n":"$.post","t":"Mu"},{"t":"Positional","n":"@.highexpect","k":"v"},{"k":"v","t":"Mu","n":"$!ex"},{"k":"v","t":"Mu","n":"$!bt"}],"b":"A","m":[{"s":{"p":["*%_"],"r":"Mu"},"n":"message","m":0,"k":"m"},{"m":0,"k":"m","s":{"p":["*%_"],"r":"Mu"},"n":"sorry_heading"},{"n":"SET_FILE_LINE","s":{"p":["$file","$line","*%_"],"r":"Mu"},"k":"m","m":0},{"m":1,"k":"m","n":"gist","s":{"r":"Mu","p":["*%_"]}},{"m":1,"k":"m","s":{"p":["*%_"],"r":"Mu"},"n":"gist"},{"s":{"r":"Mu","p":["*%_"]},"n":"gist","k":"m","m":1},{"s":{"p":[":$sorry = Bool::True",":$expect = Bool::True","*%_"],"r":"Mu"},"n":"gist","k":"m","m":1},{"k":"m","m":0,"n":"parent","s":{"p":["*%_"],"r":"Mu"}},{"m":0,"k":"m","s":{"r":"Mu","p":["*%_"]},"n":"filename"},{"m":0,"k":"m","s":{"p":["*%_"],"r":"Mu"},"n":"pos"},{"n":"line","s":{"p":["*%_"],"r":"Mu"},"m":0,"k":"m"},{"m":0,"k":"m","s":{"r":"Mu","p":["*%_"]},"n":"column"},{"m":0,"k":"m","n":"modules","s":{"p":["*%_"],"r":"Mu"}},{"k":"m","m":0,"n":"is-compile-time","s":{"p":["*%_"],"r":"Mu"}},{"k":"m","m":0,"s":{"p":["*%_"],"r":"Mu"},"n":"pre"},{"n":"post","s":{"r":"Mu","p":["*%_"]},"m":0,"k":"m"},{"s":{"p":["*%_"],"r":"Mu"},"n":"highexpect","k":"m","m":0},{"s":{"p":["@auto","%init","*%_"],"r":"Mu"},"n":"BUILDALL","m":0,"k":"s"},{"m":0,"k":"m","s":{"r":"Bool","p":["*%_"]},"n":"resume"},{"n":"reset-backtrace","s":{"r":"Mu","p":["*%_"]},"m":0,"k":"m"},{"s":{"p":["*%_"],"r":"Bool"},"n":"is-compile-time","k":"m","m":0},{"n":"throw","s":{"p":["$bt?","*%_"],"r":"Mu"},"m":0,"k":"m"},{"s":{"r":"Mu","p":["*%_"]},"n":"fail","k":"m","m":0},{"k":"m","m":1,"n":"Str","s":{"p":["*%_"],"r":"Mu"}},{"n":"Str","s":{"p":["*%_"],"r":"Mu"},"m":1,"k":"m"},{"k":"m","m":1,"n":"Str","s":{"r":"Mu","p":["*%_"]}},{"n":"die","s":{"p":["*%_"],"r":"Mu"},"k":"m","m":0},{"s":{"p":["*%_"],"r":"Mu"},"n":"rethrow","m":0,"k":"m"},{"k":"m","m":0,"s":{"p":["*%_"],"r":"Mu"},"n":"backtrace"},{"k":"m","m":1,"n":"gist","s":{"r":"Mu","p":["*%_"]}},{"s":{"r":"Mu","p":["*%_"]},"n":"gist","k":"m","m":1},{"s":{"r":"Mu","p":["*%_"]},"n":"gist","k":"m","m":1},{"s":{"p":["*%_"],"r":"Mu"},"n":"vault-backtrace","m":0,"k":"m"},{"k":"s","m":0,"s":{"p":["@auto","%init","*%_"],"r":"Mu"},"n":"BUILDALL"}],"k":"c"},{"t":"X::Syntax::NegatedPair","n":"X::Syntax::NegatedPair","d":"TITLE\nclass X::Syntax::NegatedPair\n\nSUBTITLE\nCompilation error due to passing an argument to a negated colonpair\n\n    class X::Syntax::NegatedPair does X::Syntax { }\n\nThrown if a colonpair illegally has a value, for example :!a(1). This is an\nerror because the ! negation implies that the value is False.\n\nA typical error message from this class is Argument not allowed on negated\npair with key 'a'.\n\n","m":[{"n":"message","s":{"p":["*%_"],"r":"Mu"},"m":0,"k":"m"},{"s":{"r":"Mu","p":["*%_"]},"n":"sorry_heading","m":0,"k":"m"},{"s":{"p":["$file","$line","*%_"],"r":"Mu"},"n":"SET_FILE_LINE","k":"m","m":0},{"m":1,"k":"m","n":"gist","s":{"r":"Mu","p":["*%_"]}},{"s":{"p":["*%_"],"r":"Mu"},"n":"gist","m":1,"k":"m"},{"m":1,"k":"m","s":{"r":"Mu","p":["*%_"]},"n":"gist"},{"m":1,"k":"m","n":"gist","s":{"r":"Mu","p":[":$sorry = Bool::True",":$expect = Bool::True","*%_"]}},{"m":0,"k":"m","n":"key","s":{"p":["*%_"],"r":"Mu"}},{"s":{"p":["*%_"],"r":"Mu"},"n":"filename","k":"m","m":0},{"n":"pos","s":{"p":["*%_"],"r":"Mu"},"k":"m","m":0},{"s":{"p":["*%_"],"r":"Mu"},"n":"line","k":"m","m":0},{"k":"m","m":0,"n":"column","s":{"r":"Mu","p":["*%_"]}},{"k":"m","m":0,"s":{"p":["*%_"],"r":"Mu"},"n":"modules"},{"n":"is-compile-time","s":{"p":["*%_"],"r":"Mu"},"k":"m","m":0},{"k":"m","m":0,"n":"pre","s":{"p":["*%_"],"r":"Mu"}},{"k":"m","m":0,"n":"post","s":{"p":["*%_"],"r":"Mu"}},{"m":0,"k":"m","s":{"r":"Mu","p":["*%_"]},"n":"highexpect"},{"s":{"p":["@auto","%init","*%_"],"r":"Mu"},"n":"BUILDALL","m":0,"k":"s"},{"m":0,"k":"m","n":"resume","s":{"r":"Bool","p":["*%_"]}},{"m":0,"k":"m","s":{"p":["*%_"],"r":"Mu"},"n":"reset-backtrace"},{"n":"is-compile-time","s":{"r":"Bool","p":["*%_"]},"k":"m","m":0},{"k":"m","m":0,"n":"throw","s":{"p":["$bt?","*%_"],"r":"Mu"}},{"n":"fail","s":{"r":"Mu","p":["*%_"]},"k":"m","m":0},{"k":"m","m":1,"n":"Str","s":{"p":["*%_"],"r":"Mu"}},{"s":{"p":["*%_"],"r":"Mu"},"n":"Str","k":"m","m":1},{"m":1,"k":"m","s":{"r":"Mu","p":["*%_"]},"n":"Str"},{"n":"die","s":{"r":"Mu","p":["*%_"]},"k":"m","m":0},{"m":0,"k":"m","s":{"r":"Mu","p":["*%_"]},"n":"rethrow"},{"s":{"r":"Mu","p":["*%_"]},"n":"backtrace","m":0,"k":"m"},{"n":"gist","s":{"r":"Mu","p":["*%_"]},"k":"m","m":1},{"n":"gist","s":{"r":"Mu","p":["*%_"]},"k":"m","m":1},{"n":"gist","s":{"r":"Mu","p":["*%_"]},"m":1,"k":"m"},{"n":"vault-backtrace","s":{"p":["*%_"],"r":"Mu"},"m":0,"k":"m"},{"n":"BUILDALL","s":{"p":["@auto","%init","*%_"],"r":"Mu"},"k":"s","m":0}],"k":"c","a":[{"t":"Mu","n":"$.key","k":"v"},{"n":"$.filename","t":"Mu","k":"v"},{"t":"Mu","n":"$.pos","k":"v"},{"t":"Mu","n":"$.line","k":"v"},{"k":"v","n":"$.column","t":"Mu"},{"n":"@.modules","t":"Positional","k":"v"},{"n":"$.is-compile-time","t":"Mu","k":"v"},{"n":"$.pre","t":"Mu","k":"v"},{"t":"Mu","n":"$.post","k":"v"},{"k":"v","n":"@.highexpect","t":"Positional"},{"k":"v","t":"Mu","n":"$!ex"},{"k":"v","n":"$!bt","t":"Mu"}],"b":"A"},{"n":"X::Syntax::AddCategorical::TooManyParts","t":"X::Syntax::AddCategorical::TooManyParts","k":"c","m":[{"m":0,"k":"m","n":"message","s":{"r":"Mu","p":["*%_"]}},{"s":{"p":["*%_"],"r":"Mu"},"n":"sorry_heading","k":"m","m":0},{"m":0,"k":"m","n":"SET_FILE_LINE","s":{"p":["$file","$line","*%_"],"r":"Mu"}},{"n":"gist","s":{"r":"Mu","p":["*%_"]},"k":"m","m":1},{"k":"m","m":1,"n":"gist","s":{"p":["*%_"],"r":"Mu"}},{"s":{"r":"Mu","p":["*%_"]},"n":"gist","k":"m","m":1},{"s":{"p":[":$sorry = Bool::True",":$expect = Bool::True","*%_"],"r":"Mu"},"n":"gist","m":1,"k":"m"},{"m":0,"k":"m","n":"category","s":{"p":["*%_"],"r":"Mu"}},{"s":{"r":"Mu","p":["*%_"]},"n":"needs","k":"m","m":0},{"s":{"p":["*%_"],"r":"Mu"},"n":"filename","m":0,"k":"m"},{"k":"m","m":0,"s":{"p":["*%_"],"r":"Mu"},"n":"pos"},{"n":"line","s":{"r":"Mu","p":["*%_"]},"m":0,"k":"m"},{"m":0,"k":"m","n":"column","s":{"p":["*%_"],"r":"Mu"}},{"m":0,"k":"m","s":{"p":["*%_"],"r":"Mu"},"n":"modules"},{"m":0,"k":"m","n":"is-compile-time","s":{"r":"Mu","p":["*%_"]}},{"k":"m","m":0,"s":{"r":"Mu","p":["*%_"]},"n":"pre"},{"k":"m","m":0,"n":"post","s":{"p":["*%_"],"r":"Mu"}},{"m":0,"k":"m","s":{"r":"Mu","p":["*%_"]},"n":"highexpect"},{"m":0,"k":"s","n":"BUILDALL","s":{"p":["@auto","%init","*%_"],"r":"Mu"}},{"s":{"p":["*%_"],"r":"Bool"},"n":"resume","m":0,"k":"m"},{"k":"m","m":0,"s":{"r":"Mu","p":["*%_"]},"n":"reset-backtrace"},{"s":{"r":"Bool","p":["*%_"]},"n":"is-compile-time","m":0,"k":"m"},{"k":"m","m":0,"n":"throw","s":{"p":["$bt?","*%_"],"r":"Mu"}},{"s":{"p":["*%_"],"r":"Mu"},"n":"fail","m":0,"k":"m"},{"s":{"p":["*%_"],"r":"Mu"},"n":"Str","k":"m","m":1},{"m":1,"k":"m","s":{"r":"Mu","p":["*%_"]},"n":"Str"},{"n":"Str","s":{"p":["*%_"],"r":"Mu"},"k":"m","m":1},{"m":0,"k":"m","s":{"p":["*%_"],"r":"Mu"},"n":"die"},{"n":"rethrow","s":{"p":["*%_"],"r":"Mu"},"m":0,"k":"m"},{"n":"backtrace","s":{"p":["*%_"],"r":"Mu"},"k":"m","m":0},{"n":"gist","s":{"p":["*%_"],"r":"Mu"},"m":1,"k":"m"},{"k":"m","m":1,"s":{"p":["*%_"],"r":"Mu"},"n":"gist"},{"n":"gist","s":{"r":"Mu","p":["*%_"]},"k":"m","m":1},{"s":{"p":["*%_"],"r":"Mu"},"n":"vault-backtrace","m":0,"k":"m"},{"k":"s","m":0,"n":"BUILDALL","s":{"p":["@auto","%init","*%_"],"r":"Mu"}}],"a":[{"k":"v","n":"$.category","t":"Mu"},{"n":"$.needs","t":"Mu","k":"v"},{"k":"v","n":"$.filename","t":"Mu"},{"k":"v","t":"Mu","n":"$.pos"},{"k":"v","n":"$.line","t":"Mu"},{"n":"$.column","t":"Mu","k":"v"},{"k":"v","t":"Positional","n":"@.modules"},{"k":"v","n":"$.is-compile-time","t":"Mu"},{"k":"v","t":"Mu","n":"$.pre"},{"n":"$.post","t":"Mu","k":"v"},{"k":"v","t":"Positional","n":"@.highexpect"},{"k":"v","n":"$!ex","t":"Mu"},{"n":"$!bt","t":"Mu","k":"v"}],"b":"A"},{"k":"c","m":[{"m":0,"k":"m","n":"message","s":{"p":["*%_"],"r":"Mu"}},{"k":"m","m":0,"s":{"r":"Mu","p":["*%_"]},"n":"sorry_heading"},{"s":{"r":"Mu","p":["$file","$line","*%_"]},"n":"SET_FILE_LINE","m":0,"k":"m"},{"n":"gist","s":{"p":["*%_"],"r":"Mu"},"m":1,"k":"m"},{"m":1,"k":"m","s":{"r":"Mu","p":["*%_"]},"n":"gist"},{"n":"gist","s":{"p":["*%_"],"r":"Mu"},"m":1,"k":"m"},{"m":1,"k":"m","n":"gist","s":{"r":"Mu","p":[":$sorry = Bool::True",":$expect = Bool::True","*%_"]}},{"k":"m","m":0,"s":{"p":["*%_"],"r":"Mu"},"n":"category"},{"m":0,"k":"m","n":"needs","s":{"p":["*%_"],"r":"Mu"}},{"s":{"r":"Mu","p":["*%_"]},"n":"filename","m":0,"k":"m"},{"n":"pos","s":{"r":"Mu","p":["*%_"]},"m":0,"k":"m"},{"m":0,"k":"m","n":"line","s":{"r":"Mu","p":["*%_"]}},{"s":{"r":"Mu","p":["*%_"]},"n":"column","k":"m","m":0},{"n":"modules","s":{"p":["*%_"],"r":"Mu"},"m":0,"k":"m"},{"k":"m","m":0,"n":"is-compile-time","s":{"r":"Mu","p":["*%_"]}},{"s":{"p":["*%_"],"r":"Mu"},"n":"pre","k":"m","m":0},{"n":"post","s":{"r":"Mu","p":["*%_"]},"k":"m","m":0},{"m":0,"k":"m","s":{"p":["*%_"],"r":"Mu"},"n":"highexpect"},{"m":0,"k":"s","s":{"p":["@auto","%init","*%_"],"r":"Mu"},"n":"BUILDALL"},{"n":"resume","s":{"r":"Bool","p":["*%_"]},"m":0,"k":"m"},{"n":"reset-backtrace","s":{"r":"Mu","p":["*%_"]},"k":"m","m":0},{"m":0,"k":"m","s":{"p":["*%_"],"r":"Bool"},"n":"is-compile-time"},{"s":{"r":"Mu","p":["$bt?","*%_"]},"n":"throw","m":0,"k":"m"},{"m":0,"k":"m","n":"fail","s":{"r":"Mu","p":["*%_"]}},{"s":{"r":"Mu","p":["*%_"]},"n":"Str","m":1,"k":"m"},{"n":"Str","s":{"p":["*%_"],"r":"Mu"},"k":"m","m":1},{"m":1,"k":"m","s":{"p":["*%_"],"r":"Mu"},"n":"Str"},{"s":{"r":"Mu","p":["*%_"]},"n":"die","k":"m","m":0},{"s":{"r":"Mu","p":["*%_"]},"n":"rethrow","m":0,"k":"m"},{"n":"backtrace","s":{"r":"Mu","p":["*%_"]},"m":0,"k":"m"},{"k":"m","m":1,"s":{"p":["*%_"],"r":"Mu"},"n":"gist"},{"s":{"r":"Mu","p":["*%_"]},"n":"gist","m":1,"k":"m"},{"m":1,"k":"m","n":"gist","s":{"r":"Mu","p":["*%_"]}},{"k":"m","m":0,"s":{"r":"Mu","p":["*%_"]},"n":"vault-backtrace"},{"m":0,"k":"s","s":{"p":["@auto","%init","*%_"],"r":"Mu"},"n":"BUILDALL"}],"a":[{"k":"v","t":"Mu","n":"$.category"},{"k":"v","n":"$.needs","t":"Mu"},{"t":"Mu","n":"$.filename","k":"v"},{"n":"$.pos","t":"Mu","k":"v"},{"k":"v","n":"$.line","t":"Mu"},{"t":"Mu","n":"$.column","k":"v"},{"n":"@.modules","t":"Positional","k":"v"},{"n":"$.is-compile-time","t":"Mu","k":"v"},{"k":"v","n":"$.pre","t":"Mu"},{"n":"$.post","t":"Mu","k":"v"},{"n":"@.highexpect","t":"Positional","k":"v"},{"k":"v","t":"Mu","n":"$!ex"},{"t":"Mu","n":"$!bt","k":"v"}],"b":"A","t":"X::Syntax::AddCategorical::TooFewParts","n":"X::Syntax::AddCategorical::TooFewParts"},{"m":[{"s":{"p":["*%_"],"r":"Mu"},"n":"message","k":"m","m":0},{"s":{"p":["*%_"],"r":"Mu"},"n":"sorry_heading","k":"m","m":0},{"m":0,"k":"m","s":{"p":["$file","$line","*%_"],"r":"Mu"},"n":"SET_FILE_LINE"},{"n":"gist","s":{"r":"Mu","p":["*%_"]},"k":"m","m":1},{"s":{"p":["*%_"],"r":"Mu"},"n":"gist","k":"m","m":1},{"k":"m","m":1,"s":{"r":"Mu","p":["*%_"]},"n":"gist"},{"n":"gist","s":{"r":"Mu","p":[":$sorry = Bool::True",":$expect = Bool::True","*%_"]},"m":1,"k":"m"},{"m":0,"k":"m","n":"prefixes","s":{"r":"Mu","p":["*%_"]}},{"k":"m","m":0,"s":{"p":["*%_"],"r":"Mu"},"n":"filename"},{"n":"pos","s":{"p":["*%_"],"r":"Mu"},"m":0,"k":"m"},{"k":"m","m":0,"n":"line","s":{"r":"Mu","p":["*%_"]}},{"s":{"r":"Mu","p":["*%_"]},"n":"column","k":"m","m":0},{"m":0,"k":"m","n":"modules","s":{"r":"Mu","p":["*%_"]}},{"s":{"p":["*%_"],"r":"Mu"},"n":"is-compile-time","m":0,"k":"m"},{"k":"m","m":0,"s":{"p":["*%_"],"r":"Mu"},"n":"pre"},{"k":"m","m":0,"n":"post","s":{"p":["*%_"],"r":"Mu"}},{"s":{"r":"Mu","p":["*%_"]},"n":"highexpect","m":0,"k":"m"},{"m":0,"k":"s","s":{"r":"Mu","p":["@auto","%init","*%_"]},"n":"BUILDALL"},{"k":"m","m":0,"n":"resume","s":{"r":"Bool","p":["*%_"]}},{"n":"reset-backtrace","s":{"p":["*%_"],"r":"Mu"},"m":0,"k":"m"},{"m":0,"k":"m","n":"is-compile-time","s":{"r":"Bool","p":["*%_"]}},{"n":"throw","s":{"p":["$bt?","*%_"],"r":"Mu"},"k":"m","m":0},{"k":"m","m":0,"s":{"p":["*%_"],"r":"Mu"},"n":"fail"},{"m":1,"k":"m","s":{"p":["*%_"],"r":"Mu"},"n":"Str"},{"k":"m","m":1,"n":"Str","s":{"r":"Mu","p":["*%_"]}},{"s":{"r":"Mu","p":["*%_"]},"n":"Str","m":1,"k":"m"},{"m":0,"k":"m","n":"die","s":{"p":["*%_"],"r":"Mu"}},{"k":"m","m":0,"s":{"r":"Mu","p":["*%_"]},"n":"rethrow"},{"m":0,"k":"m","n":"backtrace","s":{"p":["*%_"],"r":"Mu"}},{"n":"gist","s":{"p":["*%_"],"r":"Mu"},"k":"m","m":1},{"s":{"r":"Mu","p":["*%_"]},"n":"gist","k":"m","m":1},{"m":1,"k":"m","n":"gist","s":{"p":["*%_"],"r":"Mu"}},{"n":"vault-backtrace","s":{"r":"Mu","p":["*%_"]},"m":0,"k":"m"},{"s":{"r":"Mu","p":["@auto","%init","*%_"]},"n":"BUILDALL","k":"s","m":0}],"k":"c","b":"A","a":[{"n":"$.prefixes","t":"Mu","k":"v"},{"t":"Mu","n":"$.filename","k":"v"},{"n":"$.pos","t":"Mu","k":"v"},{"k":"v","t":"Mu","n":"$.line"},{"n":"$.column","t":"Mu","k":"v"},{"k":"v","n":"@.modules","t":"Positional"},{"k":"v","n":"$.is-compile-time","t":"Mu"},{"k":"v","n":"$.pre","t":"Mu"},{"k":"v","t":"Mu","n":"$.post"},{"t":"Positional","n":"@.highexpect","k":"v"},{"k":"v","t":"Mu","n":"$!ex"},{"k":"v","n":"$!bt","t":"Mu"}],"n":"X::Syntax::DuplicatedPrefix","t":"X::Syntax::DuplicatedPrefix"},{"t":"X::Syntax::Missing","n":"X::Syntax::Missing","d":"TITLE\nclass X::Syntax::Missing\n\nSUBTITLE\nCompilation error due to a missing piece of syntax\n\n    class X::Syntax::Missing does X::Syntax { }\n\nSyntax error thrown when the previous piece of syntax requires the\nexistence of another piece of syntax, and that second piece is missing.\n\nFor example\n\n    for 1, 2, 3;\n\n\ndies with\n\n    ===SORRY!===\n    Missing block\n\n\nbecause a for that is not a statement modifier must be followed by a\nblock.\n\n","m":[{"s":{"p":["*%_"],"r":"Mu"},"n":"message","m":0,"k":"m"},{"n":"sorry_heading","s":{"p":["*%_"],"r":"Mu"},"k":"m","m":0},{"k":"m","m":0,"s":{"r":"Mu","p":["$file","$line","*%_"]},"n":"SET_FILE_LINE"},{"k":"m","m":1,"s":{"p":["*%_"],"r":"Mu"},"n":"gist"},{"m":1,"k":"m","n":"gist","s":{"r":"Mu","p":["*%_"]}},{"n":"gist","s":{"p":["*%_"],"r":"Mu"},"k":"m","m":1},{"k":"m","m":1,"s":{"r":"Mu","p":[":$sorry = Bool::True",":$expect = Bool::True","*%_"]},"n":"gist"},{"s":{"p":["*%_"],"r":"Mu"},"n":"what","m":0,"k":"m"},{"m":0,"k":"m","n":"filename","s":{"r":"Mu","p":["*%_"]}},{"s":{"p":["*%_"],"r":"Mu"},"n":"pos","m":0,"k":"m"},{"m":0,"k":"m","s":{"r":"Mu","p":["*%_"]},"n":"line"},{"m":0,"k":"m","n":"column","s":{"p":["*%_"],"r":"Mu"}},{"s":{"r":"Mu","p":["*%_"]},"n":"modules","k":"m","m":0},{"s":{"r":"Mu","p":["*%_"]},"n":"is-compile-time","m":0,"k":"m"},{"s":{"p":["*%_"],"r":"Mu"},"n":"pre","m":0,"k":"m"},{"s":{"p":["*%_"],"r":"Mu"},"n":"post","m":0,"k":"m"},{"k":"m","m":0,"n":"highexpect","s":{"p":["*%_"],"r":"Mu"}},{"m":0,"k":"s","s":{"p":["@auto","%init","*%_"],"r":"Mu"},"n":"BUILDALL"},{"m":0,"k":"m","s":{"r":"Bool","p":["*%_"]},"n":"resume"},{"m":0,"k":"m","s":{"r":"Mu","p":["*%_"]},"n":"reset-backtrace"},{"m":0,"k":"m","n":"is-compile-time","s":{"p":["*%_"],"r":"Bool"}},{"s":{"p":["$bt?","*%_"],"r":"Mu"},"n":"throw","m":0,"k":"m"},{"k":"m","m":0,"s":{"p":["*%_"],"r":"Mu"},"n":"fail"},{"s":{"p":["*%_"],"r":"Mu"},"n":"Str","k":"m","m":1},{"n":"Str","s":{"r":"Mu","p":["*%_"]},"m":1,"k":"m"},{"n":"Str","s":{"p":["*%_"],"r":"Mu"},"m":1,"k":"m"},{"m":0,"k":"m","n":"die","s":{"p":["*%_"],"r":"Mu"}},{"m":0,"k":"m","n":"rethrow","s":{"p":["*%_"],"r":"Mu"}},{"m":0,"k":"m","s":{"r":"Mu","p":["*%_"]},"n":"backtrace"},{"n":"gist","s":{"r":"Mu","p":["*%_"]},"m":1,"k":"m"},{"n":"gist","s":{"p":["*%_"],"r":"Mu"},"k":"m","m":1},{"n":"gist","s":{"p":["*%_"],"r":"Mu"},"k":"m","m":1},{"m":0,"k":"m","n":"vault-backtrace","s":{"r":"Mu","p":["*%_"]}},{"s":{"r":"Mu","p":["@auto","%init","*%_"]},"n":"BUILDALL","k":"s","m":0}],"k":"c","b":"A","a":[{"t":"Mu","n":"$.what","k":"v"},{"k":"v","n":"$.filename","t":"Mu"},{"k":"v","t":"Mu","n":"$.pos"},{"k":"v","t":"Mu","n":"$.line"},{"k":"v","t":"Mu","n":"$.column"},{"k":"v","n":"@.modules","t":"Positional"},{"t":"Mu","n":"$.is-compile-time","k":"v"},{"n":"$.pre","t":"Mu","k":"v"},{"n":"$.post","t":"Mu","k":"v"},{"k":"v","t":"Positional","n":"@.highexpect"},{"n":"$!ex","t":"Mu","k":"v"},{"k":"v","n":"$!bt","t":"Mu"}]},{"t":"X::Syntax::Augment::Adverb","n":"X::Syntax::Augment::Adverb","a":[{"n":"$.filename","t":"Mu","k":"v"},{"t":"Mu","n":"$.pos","k":"v"},{"n":"$.line","t":"Mu","k":"v"},{"t":"Mu","n":"$.column","k":"v"},{"k":"v","t":"Positional","n":"@.modules"},{"n":"$.is-compile-time","t":"Mu","k":"v"},{"n":"$.pre","t":"Mu","k":"v"},{"n":"$.post","t":"Mu","k":"v"},{"k":"v","n":"@.highexpect","t":"Positional"},{"k":"v","n":"$!ex","t":"Mu"},{"t":"Mu","n":"$!bt","k":"v"}],"b":"A","k":"c","m":[{"s":{"p":["*%_"],"r":"Mu"},"n":"message","m":0,"k":"m"},{"s":{"p":["*%_"],"r":"Mu"},"n":"sorry_heading","k":"m","m":0},{"n":"SET_FILE_LINE","s":{"r":"Mu","p":["$file","$line","*%_"]},"k":"m","m":0},{"k":"m","m":1,"n":"gist","s":{"p":["*%_"],"r":"Mu"}},{"k":"m","m":1,"n":"gist","s":{"p":["*%_"],"r":"Mu"}},{"n":"gist","s":{"p":["*%_"],"r":"Mu"},"m":1,"k":"m"},{"m":1,"k":"m","s":{"p":[":$sorry = Bool::True",":$expect = Bool::True","*%_"],"r":"Mu"},"n":"gist"},{"s":{"p":["*%_"],"r":"Mu"},"n":"filename","k":"m","m":0},{"n":"pos","s":{"r":"Mu","p":["*%_"]},"k":"m","m":0},{"m":0,"k":"m","s":{"r":"Mu","p":["*%_"]},"n":"line"},{"n":"column","s":{"p":["*%_"],"r":"Mu"},"m":0,"k":"m"},{"n":"modules","s":{"p":["*%_"],"r":"Mu"},"k":"m","m":0},{"s":{"p":["*%_"],"r":"Mu"},"n":"is-compile-time","k":"m","m":0},{"m":0,"k":"m","s":{"r":"Mu","p":["*%_"]},"n":"pre"},{"s":{"r":"Mu","p":["*%_"]},"n":"post","m":0,"k":"m"},{"s":{"p":["*%_"],"r":"Mu"},"n":"highexpect","k":"m","m":0},{"n":"BUILDALL","s":{"r":"Mu","p":["@auto","%init","*%_"]},"m":0,"k":"s"},{"n":"resume","s":{"r":"Bool","p":["*%_"]},"m":0,"k":"m"},{"m":0,"k":"m","n":"reset-backtrace","s":{"p":["*%_"],"r":"Mu"}},{"k":"m","m":0,"n":"is-compile-time","s":{"p":["*%_"],"r":"Bool"}},{"s":{"p":["$bt?","*%_"],"r":"Mu"},"n":"throw","k":"m","m":0},{"k":"m","m":0,"s":{"p":["*%_"],"r":"Mu"},"n":"fail"},{"s":{"r":"Mu","p":["*%_"]},"n":"Str","m":1,"k":"m"},{"s":{"r":"Mu","p":["*%_"]},"n":"Str","k":"m","m":1},{"s":{"p":["*%_"],"r":"Mu"},"n":"Str","k":"m","m":1},{"s":{"p":["*%_"],"r":"Mu"},"n":"die","m":0,"k":"m"},{"k":"m","m":0,"s":{"p":["*%_"],"r":"Mu"},"n":"rethrow"},{"k":"m","m":0,"s":{"r":"Mu","p":["*%_"]},"n":"backtrace"},{"n":"gist","s":{"r":"Mu","p":["*%_"]},"k":"m","m":1},{"s":{"p":["*%_"],"r":"Mu"},"n":"gist","k":"m","m":1},{"m":1,"k":"m","n":"gist","s":{"p":["*%_"],"r":"Mu"}},{"n":"vault-backtrace","s":{"r":"Mu","p":["*%_"]},"k":"m","m":0},{"s":{"r":"Mu","p":["@auto","%init","*%_"]},"n":"BUILDALL","m":0,"k":"s"}]},{"a":[{"n":"$.filename","t":"Mu","k":"v"},{"k":"v","t":"Mu","n":"$.pos"},{"k":"v","n":"$.line","t":"Mu"},{"t":"Mu","n":"$.column","k":"v"},{"k":"v","n":"@.modules","t":"Positional"},{"k":"v","n":"$.is-compile-time","t":"Mu"},{"n":"$.pre","t":"Mu","k":"v"},{"k":"v","t":"Mu","n":"$.post"},{"t":"Positional","n":"@.highexpect","k":"v"},{"k":"v","n":"$!ex","t":"Mu"},{"k":"v","t":"Mu","n":"$!bt"}],"b":"A","k":"c","m":[{"n":"message","s":{"r":"Mu","p":["*%_"]},"m":0,"k":"m"},{"k":"m","m":0,"s":{"r":"Mu","p":["*%_"]},"n":"sorry_heading"},{"m":0,"k":"m","n":"SET_FILE_LINE","s":{"r":"Mu","p":["$file","$line","*%_"]}},{"k":"m","m":1,"n":"gist","s":{"p":["*%_"],"r":"Mu"}},{"n":"gist","s":{"p":["*%_"],"r":"Mu"},"m":1,"k":"m"},{"k":"m","m":1,"s":{"r":"Mu","p":["*%_"]},"n":"gist"},{"m":1,"k":"m","s":{"r":"Mu","p":[":$sorry = Bool::True",":$expect = Bool::True","*%_"]},"n":"gist"},{"n":"filename","s":{"p":["*%_"],"r":"Mu"},"m":0,"k":"m"},{"s":{"r":"Mu","p":["*%_"]},"n":"pos","k":"m","m":0},{"n":"line","s":{"p":["*%_"],"r":"Mu"},"k":"m","m":0},{"s":{"r":"Mu","p":["*%_"]},"n":"column","k":"m","m":0},{"k":"m","m":0,"n":"modules","s":{"p":["*%_"],"r":"Mu"}},{"k":"m","m":0,"s":{"r":"Mu","p":["*%_"]},"n":"is-compile-time"},{"k":"m","m":0,"n":"pre","s":{"p":["*%_"],"r":"Mu"}},{"k":"m","m":0,"n":"post","s":{"p":["*%_"],"r":"Mu"}},{"m":0,"k":"m","n":"highexpect","s":{"r":"Mu","p":["*%_"]}},{"s":{"r":"Mu","p":["@auto","%init","*%_"]},"n":"BUILDALL","m":0,"k":"s"},{"k":"m","m":0,"n":"resume","s":{"p":["*%_"],"r":"Bool"}},{"s":{"r":"Mu","p":["*%_"]},"n":"reset-backtrace","m":0,"k":"m"},{"s":{"p":["*%_"],"r":"Bool"},"n":"is-compile-time","k":"m","m":0},{"m":0,"k":"m","n":"throw","s":{"p":["$bt?","*%_"],"r":"Mu"}},{"k":"m","m":0,"n":"fail","s":{"p":["*%_"],"r":"Mu"}},{"n":"Str","s":{"p":["*%_"],"r":"Mu"},"m":1,"k":"m"},{"n":"Str","s":{"p":["*%_"],"r":"Mu"},"m":1,"k":"m"},{"s":{"r":"Mu","p":["*%_"]},"n":"Str","k":"m","m":1},{"n":"die","s":{"r":"Mu","p":["*%_"]},"m":0,"k":"m"},{"m":0,"k":"m","n":"rethrow","s":{"p":["*%_"],"r":"Mu"}},{"m":0,"k":"m","n":"backtrace","s":{"p":["*%_"],"r":"Mu"}},{"m":1,"k":"m","n":"gist","s":{"p":["*%_"],"r":"Mu"}},{"m":1,"k":"m","s":{"r":"Mu","p":["*%_"]},"n":"gist"},{"m":1,"k":"m","s":{"r":"Mu","p":["*%_"]},"n":"gist"},{"k":"m","m":0,"s":{"p":["*%_"],"r":"Mu"},"n":"vault-backtrace"},{"k":"s","m":0,"s":{"p":["@auto","%init","*%_"],"r":"Mu"},"n":"BUILDALL"}],"d":"TITLE\nclass X::Syntax::Augment::WithoutMonkeyTyping\n\nSUBTITLE\nCompilation error due to augmenting a type without the MONKEY-TYPING\npragma\n\n    class X::Syntax::Augment::WithoutMonkeyTyping does X::Syntax { }\n\nCompile time error thrown when augment is used without use MONKEY-TYPING.\n\nSince augment is considered a rather unsafe and impolite action, you have\nto pre-declare your intent with the use MONKEY-TYPING; pragma.\n\nIf you don't do that, like here\n\n    augment class Int { };\n\n\nyou get the error\n\n    ===SORRY!===\n    augment not allowed without 'use MONKEY-TYPING'\n","n":"X::Syntax::Augment::WithoutMonkeyTyping","t":"X::Syntax::Augment::WithoutMonkeyTyping"},{"t":"X::Syntax::Augment::Illegal","n":"X::Syntax::Augment::Illegal","m":[{"k":"m","m":0,"s":{"r":"Mu","p":["*%_"]},"n":"message"},{"n":"sorry_heading","s":{"r":"Mu","p":["*%_"]},"k":"m","m":0},{"m":0,"k":"m","s":{"r":"Mu","p":["$file","$line","*%_"]},"n":"SET_FILE_LINE"},{"m":1,"k":"m","n":"gist","s":{"p":["*%_"],"r":"Mu"}},{"k":"m","m":1,"s":{"r":"Mu","p":["*%_"]},"n":"gist"},{"m":1,"k":"m","s":{"r":"Mu","p":["*%_"]},"n":"gist"},{"k":"m","m":1,"n":"gist","s":{"r":"Mu","p":[":$sorry = Bool::True",":$expect = Bool::True","*%_"]}},{"n":"package","s":{"p":["*%_"],"r":"Mu"},"k":"m","m":0},{"s":{"r":"Mu","p":["*%_"]},"n":"filename","k":"m","m":0},{"k":"m","m":0,"n":"pos","s":{"p":["*%_"],"r":"Mu"}},{"s":{"r":"Mu","p":["*%_"]},"n":"line","m":0,"k":"m"},{"n":"column","s":{"p":["*%_"],"r":"Mu"},"k":"m","m":0},{"n":"modules","s":{"r":"Mu","p":["*%_"]},"k":"m","m":0},{"s":{"p":["*%_"],"r":"Mu"},"n":"is-compile-time","m":0,"k":"m"},{"m":0,"k":"m","s":{"r":"Mu","p":["*%_"]},"n":"pre"},{"s":{"p":["*%_"],"r":"Mu"},"n":"post","k":"m","m":0},{"k":"m","m":0,"s":{"p":["*%_"],"r":"Mu"},"n":"highexpect"},{"n":"BUILDALL","s":{"r":"Mu","p":["@auto","%init","*%_"]},"m":0,"k":"s"},{"s":{"r":"Bool","p":["*%_"]},"n":"resume","k":"m","m":0},{"n":"reset-backtrace","s":{"r":"Mu","p":["*%_"]},"k":"m","m":0},{"k":"m","m":0,"s":{"r":"Bool","p":["*%_"]},"n":"is-compile-time"},{"s":{"p":["$bt?","*%_"],"r":"Mu"},"n":"throw","k":"m","m":0},{"m":0,"k":"m","n":"fail","s":{"p":["*%_"],"r":"Mu"}},{"k":"m","m":1,"s":{"r":"Mu","p":["*%_"]},"n":"Str"},{"m":1,"k":"m","s":{"p":["*%_"],"r":"Mu"},"n":"Str"},{"n":"Str","s":{"r":"Mu","p":["*%_"]},"k":"m","m":1},{"k":"m","m":0,"n":"die","s":{"r":"Mu","p":["*%_"]}},{"m":0,"k":"m","n":"rethrow","s":{"r":"Mu","p":["*%_"]}},{"s":{"p":["*%_"],"r":"Mu"},"n":"backtrace","m":0,"k":"m"},{"k":"m","m":1,"s":{"p":["*%_"],"r":"Mu"},"n":"gist"},{"n":"gist","s":{"p":["*%_"],"r":"Mu"},"k":"m","m":1},{"k":"m","m":1,"n":"gist","s":{"p":["*%_"],"r":"Mu"}},{"k":"m","m":0,"n":"vault-backtrace","s":{"p":["*%_"],"r":"Mu"}},{"m":0,"k":"s","n":"BUILDALL","s":{"r":"Mu","p":["@auto","%init","*%_"]}}],"k":"c","b":"A","a":[{"k":"v","t":"Mu","n":"$.package"},{"t":"Mu","n":"$.filename","k":"v"},{"n":"$.pos","t":"Mu","k":"v"},{"t":"Mu","n":"$.line","k":"v"},{"k":"v","n":"$.column","t":"Mu"},{"k":"v","n":"@.modules","t":"Positional"},{"n":"$.is-compile-time","t":"Mu","k":"v"},{"t":"Mu","n":"$.pre","k":"v"},{"k":"v","t":"Mu","n":"$.post"},{"t":"Positional","n":"@.highexpect","k":"v"},{"k":"v","n":"$!ex","t":"Mu"},{"k":"v","t":"Mu","n":"$!bt"}]},{"k":"c","m":[{"n":"message","s":{"r":"Mu","p":["*%_"]},"m":0,"k":"m"},{"n":"sorry_heading","s":{"p":["*%_"],"r":"Mu"},"k":"m","m":0},{"k":"m","m":0,"n":"SET_FILE_LINE","s":{"r":"Mu","p":["$file","$line","*%_"]}},{"m":1,"k":"m","s":{"r":"Mu","p":["*%_"]},"n":"gist"},{"k":"m","m":1,"s":{"r":"Mu","p":["*%_"]},"n":"gist"},{"m":1,"k":"m","s":{"p":["*%_"],"r":"Mu"},"n":"gist"},{"m":1,"k":"m","s":{"p":[":$sorry = Bool::True",":$expect = Bool::True","*%_"],"r":"Mu"},"n":"gist"},{"k":"m","m":0,"s":{"p":["*%_"],"r":"Mu"},"n":"filename"},{"m":0,"k":"m","n":"pos","s":{"r":"Mu","p":["*%_"]}},{"k":"m","m":0,"s":{"r":"Mu","p":["*%_"]},"n":"line"},{"s":{"p":["*%_"],"r":"Mu"},"n":"column","m":0,"k":"m"},{"s":{"r":"Mu","p":["*%_"]},"n":"modules","m":0,"k":"m"},{"k":"m","m":0,"n":"is-compile-time","s":{"r":"Mu","p":["*%_"]}},{"k":"m","m":0,"n":"pre","s":{"r":"Mu","p":["*%_"]}},{"m":0,"k":"m","n":"post","s":{"r":"Mu","p":["*%_"]}},{"n":"highexpect","s":{"p":["*%_"],"r":"Mu"},"k":"m","m":0},{"s":{"p":["@auto","%init","*%_"],"r":"Mu"},"n":"BUILDALL","k":"s","m":0},{"k":"m","m":0,"n":"resume","s":{"r":"Bool","p":["*%_"]}},{"k":"m","m":0,"n":"reset-backtrace","s":{"p":["*%_"],"r":"Mu"}},{"s":{"p":["*%_"],"r":"Bool"},"n":"is-compile-time","k":"m","m":0},{"s":{"r":"Mu","p":["$bt?","*%_"]},"n":"throw","m":0,"k":"m"},{"n":"fail","s":{"r":"Mu","p":["*%_"]},"k":"m","m":0},{"m":1,"k":"m","n":"Str","s":{"p":["*%_"],"r":"Mu"}},{"n":"Str","s":{"p":["*%_"],"r":"Mu"},"k":"m","m":1},{"s":{"r":"Mu","p":["*%_"]},"n":"Str","m":1,"k":"m"},{"n":"die","s":{"r":"Mu","p":["*%_"]},"k":"m","m":0},{"m":0,"k":"m","s":{"p":["*%_"],"r":"Mu"},"n":"rethrow"},{"s":{"p":["*%_"],"r":"Mu"},"n":"backtrace","k":"m","m":0},{"n":"gist","s":{"p":["*%_"],"r":"Mu"},"k":"m","m":1},{"s":{"r":"Mu","p":["*%_"]},"n":"gist","m":1,"k":"m"},{"k":"m","m":1,"n":"gist","s":{"r":"Mu","p":["*%_"]}},{"m":0,"k":"m","n":"vault-backtrace","s":{"p":["*%_"],"r":"Mu"}},{"m":0,"k":"s","n":"BUILDALL","s":{"p":["@auto","%init","*%_"],"r":"Mu"}}],"a":[{"t":"Mu","n":"$.filename","k":"v"},{"k":"v","n":"$.pos","t":"Mu"},{"t":"Mu","n":"$.line","k":"v"},{"k":"v","t":"Mu","n":"$.column"},{"n":"@.modules","t":"Positional","k":"v"},{"n":"$.is-compile-time","t":"Mu","k":"v"},{"k":"v","n":"$.pre","t":"Mu"},{"t":"Mu","n":"$.post","k":"v"},{"k":"v","t":"Positional","n":"@.highexpect"},{"k":"v","t":"Mu","n":"$!ex"},{"k":"v","n":"$!bt","t":"Mu"}],"b":"A","d":"TITLE\nclass X::Syntax::Comment::Embedded\n\nSUBTITLE\nCompilation error due to a malformed inline comment\n\n    class X::Syntax::Comment::Embedded does X::Syntax { }\n\nSyntax error thrown when #` is encountered and it is not followed by an\nopening curly brace.\n\nFor example\n\n    #`\n\n\ndies with\n\n    ===SORRY!===\n    Opening bracket is required for #` comment\n","n":"X::Syntax::Comment::Embedded","t":"X::Syntax::Comment::Embedded"},{"t":"X::Syntax::Regex::QuantifierValue","n":"X::Syntax::Regex::QuantifierValue","k":"c","m":[{"m":0,"k":"m","n":"message","s":{"p":["*%_"],"r":"Mu"}},{"n":"sorry_heading","s":{"r":"Mu","p":["*%_"]},"m":0,"k":"m"},{"s":{"p":["$file","$line","*%_"],"r":"Mu"},"n":"SET_FILE_LINE","m":0,"k":"m"},{"m":1,"k":"m","s":{"r":"Mu","p":["*%_"]},"n":"gist"},{"m":1,"k":"m","n":"gist","s":{"p":["*%_"],"r":"Mu"}},{"m":1,"k":"m","n":"gist","s":{"p":["*%_"],"r":"Mu"}},{"n":"gist","s":{"r":"Mu","p":[":$sorry = Bool::True",":$expect = Bool::True","*%_"]},"m":1,"k":"m"},{"m":0,"k":"m","n":"inf","s":{"r":"Mu","p":["*%_"]}},{"m":0,"k":"m","s":{"r":"Mu","p":["*%_"]},"n":"non-numeric"},{"k":"m","m":0,"s":{"r":"Mu","p":["*%_"]},"n":"non-numeric-range"},{"s":{"r":"Mu","p":["*%_"]},"n":"empty-range","m":0,"k":"m"},{"m":0,"k":"m","s":{"r":"Mu","p":["*%_"]},"n":"filename"},{"m":0,"k":"m","n":"pos","s":{"p":["*%_"],"r":"Mu"}},{"m":0,"k":"m","n":"line","s":{"p":["*%_"],"r":"Mu"}},{"n":"column","s":{"r":"Mu","p":["*%_"]},"k":"m","m":0},{"k":"m","m":0,"n":"modules","s":{"r":"Mu","p":["*%_"]}},{"m":0,"k":"m","s":{"r":"Mu","p":["*%_"]},"n":"is-compile-time"},{"m":0,"k":"m","s":{"p":["*%_"],"r":"Mu"},"n":"pre"},{"s":{"r":"Mu","p":["*%_"]},"n":"post","k":"m","m":0},{"s":{"p":["*%_"],"r":"Mu"},"n":"highexpect","k":"m","m":0},{"n":"BUILDALL","s":{"p":["@auto","%init","*%_"],"r":"Mu"},"m":0,"k":"s"},{"n":"resume","s":{"r":"Bool","p":["*%_"]},"m":0,"k":"m"},{"s":{"r":"Mu","p":["*%_"]},"n":"reset-backtrace","k":"m","m":0},{"s":{"r":"Bool","p":["*%_"]},"n":"is-compile-time","k":"m","m":0},{"s":{"r":"Mu","p":["$bt?","*%_"]},"n":"throw","m":0,"k":"m"},{"k":"m","m":0,"n":"fail","s":{"r":"Mu","p":["*%_"]}},{"s":{"p":["*%_"],"r":"Mu"},"n":"Str","k":"m","m":1},{"m":1,"k":"m","n":"Str","s":{"p":["*%_"],"r":"Mu"}},{"m":1,"k":"m","s":{"r":"Mu","p":["*%_"]},"n":"Str"},{"n":"die","s":{"p":["*%_"],"r":"Mu"},"m":0,"k":"m"},{"m":0,"k":"m","s":{"r":"Mu","p":["*%_"]},"n":"rethrow"},{"m":0,"k":"m","n":"backtrace","s":{"p":["*%_"],"r":"Mu"}},{"s":{"r":"Mu","p":["*%_"]},"n":"gist","m":1,"k":"m"},{"m":1,"k":"m","s":{"p":["*%_"],"r":"Mu"},"n":"gist"},{"s":{"p":["*%_"],"r":"Mu"},"n":"gist","m":1,"k":"m"},{"n":"vault-backtrace","s":{"p":["*%_"],"r":"Mu"},"k":"m","m":0},{"k":"s","m":0,"s":{"r":"Mu","p":["@auto","%init","*%_"]},"n":"BUILDALL"}],"a":[{"k":"v","t":"Mu","n":"$.inf"},{"t":"Mu","n":"$.non-numeric","k":"v"},{"k":"v","n":"$.non-numeric-range","t":"Mu"},{"t":"Mu","n":"$.empty-range","k":"v"},{"t":"Mu","n":"$.filename","k":"v"},{"k":"v","n":"$.pos","t":"Mu"},{"n":"$.line","t":"Mu","k":"v"},{"n":"$.column","t":"Mu","k":"v"},{"k":"v","n":"@.modules","t":"Positional"},{"k":"v","t":"Mu","n":"$.is-compile-time"},{"k":"v","t":"Mu","n":"$.pre"},{"n":"$.post","t":"Mu","k":"v"},{"k":"v","n":"@.highexpect","t":"Positional"},{"k":"v","n":"$!ex","t":"Mu"},{"t":"Mu","n":"$!bt","k":"v"}],"b":"A"},{"a":[{"k":"v","t":"Mu","n":"$.filename"},{"n":"$.pos","t":"Mu","k":"v"},{"n":"$.line","t":"Mu","k":"v"},{"t":"Mu","n":"$.column","k":"v"},{"k":"v","n":"@.modules","t":"Positional"},{"n":"$.is-compile-time","t":"Mu","k":"v"},{"k":"v","n":"$.pre","t":"Mu"},{"k":"v","t":"Mu","n":"$.post"},{"n":"@.highexpect","t":"Positional","k":"v"},{"t":"Mu","n":"$!ex","k":"v"},{"k":"v","n":"$!bt","t":"Mu"}],"b":"A","m":[{"m":0,"k":"m","s":{"p":["*%_"],"r":"Mu"},"n":"message"},{"s":{"p":["*%_"],"r":"Mu"},"n":"sorry_heading","m":0,"k":"m"},{"m":0,"k":"m","n":"SET_FILE_LINE","s":{"p":["$file","$line","*%_"],"r":"Mu"}},{"s":{"r":"Mu","p":["*%_"]},"n":"gist","k":"m","m":1},{"k":"m","m":1,"n":"gist","s":{"r":"Mu","p":["*%_"]}},{"s":{"r":"Mu","p":["*%_"]},"n":"gist","k":"m","m":1},{"m":1,"k":"m","s":{"r":"Mu","p":[":$sorry = Bool::True",":$expect = Bool::True","*%_"]},"n":"gist"},{"s":{"r":"Mu","p":["*%_"]},"n":"filename","k":"m","m":0},{"k":"m","m":0,"n":"pos","s":{"r":"Mu","p":["*%_"]}},{"m":0,"k":"m","n":"line","s":{"p":["*%_"],"r":"Mu"}},{"s":{"r":"Mu","p":["*%_"]},"n":"column","k":"m","m":0},{"m":0,"k":"m","n":"modules","s":{"p":["*%_"],"r":"Mu"}},{"k":"m","m":0,"n":"is-compile-time","s":{"r":"Mu","p":["*%_"]}},{"k":"m","m":0,"s":{"p":["*%_"],"r":"Mu"},"n":"pre"},{"k":"m","m":0,"n":"post","s":{"r":"Mu","p":["*%_"]}},{"k":"m","m":0,"n":"highexpect","s":{"r":"Mu","p":["*%_"]}},{"n":"BUILDALL","s":{"r":"Mu","p":["@auto","%init","*%_"]},"k":"s","m":0},{"n":"resume","s":{"r":"Bool","p":["*%_"]},"k":"m","m":0},{"m":0,"k":"m","s":{"r":"Mu","p":["*%_"]},"n":"reset-backtrace"},{"k":"m","m":0,"n":"is-compile-time","s":{"p":["*%_"],"r":"Bool"}},{"s":{"p":["$bt?","*%_"],"r":"Mu"},"n":"throw","k":"m","m":0},{"k":"m","m":0,"s":{"p":["*%_"],"r":"Mu"},"n":"fail"},{"s":{"r":"Mu","p":["*%_"]},"n":"Str","m":1,"k":"m"},{"n":"Str","s":{"r":"Mu","p":["*%_"]},"k":"m","m":1},{"k":"m","m":1,"s":{"r":"Mu","p":["*%_"]},"n":"Str"},{"s":{"p":["*%_"],"r":"Mu"},"n":"die","k":"m","m":0},{"s":{"p":["*%_"],"r":"Mu"},"n":"rethrow","m":0,"k":"m"},{"k":"m","m":0,"n":"backtrace","s":{"r":"Mu","p":["*%_"]}},{"m":1,"k":"m","n":"gist","s":{"r":"Mu","p":["*%_"]}},{"k":"m","m":1,"n":"gist","s":{"r":"Mu","p":["*%_"]}},{"k":"m","m":1,"s":{"r":"Mu","p":["*%_"]},"n":"gist"},{"k":"m","m":0,"s":{"p":["*%_"],"r":"Mu"},"n":"vault-backtrace"},{"n":"BUILDALL","s":{"p":["@auto","%init","*%_"],"r":"Mu"},"m":0,"k":"s"}],"k":"c","n":"X::Syntax::Regex::NullRegex","t":"X::Syntax::Regex::NullRegex"},{"t":"X::Syntax::Regex::Unterminated","n":"X::Syntax::Regex::Unterminated","m":[{"m":0,"k":"m","s":{"r":"Mu","p":["*%_"]},"n":"message"},{"k":"m","m":0,"n":"sorry_heading","s":{"p":["*%_"],"r":"Mu"}},{"s":{"p":["$file","$line","*%_"],"r":"Mu"},"n":"SET_FILE_LINE","m":0,"k":"m"},{"m":1,"k":"m","n":"gist","s":{"r":"Mu","p":["*%_"]}},{"n":"gist","s":{"r":"Mu","p":["*%_"]},"k":"m","m":1},{"n":"gist","s":{"p":["*%_"],"r":"Mu"},"m":1,"k":"m"},{"m":1,"k":"m","n":"gist","s":{"r":"Mu","p":[":$sorry = Bool::True",":$expect = Bool::True","*%_"]}},{"k":"m","m":0,"s":{"r":"Mu","p":["*%_"]},"n":"filename"},{"n":"pos","s":{"p":["*%_"],"r":"Mu"},"k":"m","m":0},{"m":0,"k":"m","n":"line","s":{"r":"Mu","p":["*%_"]}},{"m":0,"k":"m","n":"column","s":{"p":["*%_"],"r":"Mu"}},{"m":0,"k":"m","n":"modules","s":{"p":["*%_"],"r":"Mu"}},{"k":"m","m":0,"s":{"r":"Mu","p":["*%_"]},"n":"is-compile-time"},{"s":{"p":["*%_"],"r":"Mu"},"n":"pre","k":"m","m":0},{"m":0,"k":"m","s":{"p":["*%_"],"r":"Mu"},"n":"post"},{"k":"m","m":0,"n":"highexpect","s":{"r":"Mu","p":["*%_"]}},{"s":{"p":["@auto","%init","*%_"],"r":"Mu"},"n":"BUILDALL","m":0,"k":"s"},{"n":"resume","s":{"p":["*%_"],"r":"Bool"},"m":0,"k":"m"},{"s":{"p":["*%_"],"r":"Mu"},"n":"reset-backtrace","m":0,"k":"m"},{"k":"m","m":0,"s":{"r":"Bool","p":["*%_"]},"n":"is-compile-time"},{"n":"throw","s":{"r":"Mu","p":["$bt?","*%_"]},"k":"m","m":0},{"m":0,"k":"m","s":{"p":["*%_"],"r":"Mu"},"n":"fail"},{"n":"Str","s":{"p":["*%_"],"r":"Mu"},"m":1,"k":"m"},{"k":"m","m":1,"n":"Str","s":{"p":["*%_"],"r":"Mu"}},{"n":"Str","s":{"p":["*%_"],"r":"Mu"},"k":"m","m":1},{"k":"m","m":0,"n":"die","s":{"r":"Mu","p":["*%_"]}},{"n":"rethrow","s":{"p":["*%_"],"r":"Mu"},"m":0,"k":"m"},{"s":{"p":["*%_"],"r":"Mu"},"n":"backtrace","m":0,"k":"m"},{"k":"m","m":1,"n":"gist","s":{"p":["*%_"],"r":"Mu"}},{"s":{"r":"Mu","p":["*%_"]},"n":"gist","k":"m","m":1},{"n":"gist","s":{"r":"Mu","p":["*%_"]},"k":"m","m":1},{"m":0,"k":"m","n":"vault-backtrace","s":{"p":["*%_"],"r":"Mu"}},{"s":{"p":["@auto","%init","*%_"],"r":"Mu"},"n":"BUILDALL","m":0,"k":"s"}],"k":"c","a":[{"k":"v","n":"$.filename","t":"Mu"},{"n":"$.pos","t":"Mu","k":"v"},{"k":"v","t":"Mu","n":"$.line"},{"k":"v","n":"$.column","t":"Mu"},{"k":"v","n":"@.modules","t":"Positional"},{"k":"v","t":"Mu","n":"$.is-compile-time"},{"k":"v","n":"$.pre","t":"Mu"},{"k":"v","t":"Mu","n":"$.post"},{"k":"v","t":"Positional","n":"@.highexpect"},{"k":"v","t":"Mu","n":"$!ex"},{"t":"Mu","n":"$!bt","k":"v"}],"b":"A"},{"t":"X::Syntax::Regex::UnrecognizedModifier","n":"X::Syntax::Regex::UnrecognizedModifier","b":"A","a":[{"n":"$.modifier","t":"Mu","k":"v"},{"t":"Mu","n":"$.filename","k":"v"},{"k":"v","n":"$.pos","t":"Mu"},{"n":"$.line","t":"Mu","k":"v"},{"t":"Mu","n":"$.column","k":"v"},{"k":"v","n":"@.modules","t":"Positional"},{"n":"$.is-compile-time","t":"Mu","k":"v"},{"k":"v","t":"Mu","n":"$.pre"},{"k":"v","n":"$.post","t":"Mu"},{"t":"Positional","n":"@.highexpect","k":"v"},{"t":"Mu","n":"$!ex","k":"v"},{"k":"v","t":"Mu","n":"$!bt"}],"k":"c","m":[{"k":"m","m":0,"s":{"p":["*%_"],"r":"Mu"},"n":"message"},{"n":"sorry_heading","s":{"r":"Mu","p":["*%_"]},"m":0,"k":"m"},{"k":"m","m":0,"s":{"r":"Mu","p":["$file","$line","*%_"]},"n":"SET_FILE_LINE"},{"s":{"r":"Mu","p":["*%_"]},"n":"gist","k":"m","m":1},{"m":1,"k":"m","s":{"p":["*%_"],"r":"Mu"},"n":"gist"},{"m":1,"k":"m","s":{"p":["*%_"],"r":"Mu"},"n":"gist"},{"m":1,"k":"m","n":"gist","s":{"p":[":$sorry = Bool::True",":$expect = Bool::True","*%_"],"r":"Mu"}},{"s":{"r":"Mu","p":["*%_"]},"n":"modifier","k":"m","m":0},{"n":"filename","s":{"p":["*%_"],"r":"Mu"},"k":"m","m":0},{"n":"pos","s":{"p":["*%_"],"r":"Mu"},"k":"m","m":0},{"m":0,"k":"m","s":{"p":["*%_"],"r":"Mu"},"n":"line"},{"n":"column","s":{"r":"Mu","p":["*%_"]},"k":"m","m":0},{"m":0,"k":"m","n":"modules","s":{"r":"Mu","p":["*%_"]}},{"k":"m","m":0,"n":"is-compile-time","s":{"r":"Mu","p":["*%_"]}},{"k":"m","m":0,"n":"pre","s":{"p":["*%_"],"r":"Mu"}},{"k":"m","m":0,"s":{"r":"Mu","p":["*%_"]},"n":"post"},{"n":"highexpect","s":{"p":["*%_"],"r":"Mu"},"m":0,"k":"m"},{"k":"s","m":0,"s":{"p":["@auto","%init","*%_"],"r":"Mu"},"n":"BUILDALL"},{"s":{"p":["*%_"],"r":"Bool"},"n":"resume","k":"m","m":0},{"k":"m","m":0,"s":{"r":"Mu","p":["*%_"]},"n":"reset-backtrace"},{"n":"is-compile-time","s":{"p":["*%_"],"r":"Bool"},"k":"m","m":0},{"m":0,"k":"m","s":{"r":"Mu","p":["$bt?","*%_"]},"n":"throw"},{"s":{"r":"Mu","p":["*%_"]},"n":"fail","m":0,"k":"m"},{"s":{"r":"Mu","p":["*%_"]},"n":"Str","k":"m","m":1},{"k":"m","m":1,"s":{"r":"Mu","p":["*%_"]},"n":"Str"},{"n":"Str","s":{"r":"Mu","p":["*%_"]},"m":1,"k":"m"},{"s":{"r":"Mu","p":["*%_"]},"n":"die","m":0,"k":"m"},{"m":0,"k":"m","s":{"r":"Mu","p":["*%_"]},"n":"rethrow"},{"n":"backtrace","s":{"r":"Mu","p":["*%_"]},"k":"m","m":0},{"s":{"p":["*%_"],"r":"Mu"},"n":"gist","m":1,"k":"m"},{"m":1,"k":"m","s":{"r":"Mu","p":["*%_"]},"n":"gist"},{"m":1,"k":"m","s":{"p":["*%_"],"r":"Mu"},"n":"gist"},{"s":{"p":["*%_"],"r":"Mu"},"n":"vault-backtrace","m":0,"k":"m"},{"k":"s","m":0,"n":"BUILDALL","s":{"p":["@auto","%init","*%_"],"r":"Mu"}}]},{"b":"A","a":[{"k":"v","n":"$.filename","t":"Mu"},{"k":"v","n":"$.pos","t":"Mu"},{"t":"Mu","n":"$.line","k":"v"},{"k":"v","n":"$.column","t":"Mu"},{"k":"v","t":"Positional","n":"@.modules"},{"k":"v","n":"$.is-compile-time","t":"Mu"},{"n":"$.pre","t":"Mu","k":"v"},{"t":"Mu","n":"$.post","k":"v"},{"k":"v","t":"Positional","n":"@.highexpect"},{"k":"v","n":"$!ex","t":"Mu"},{"k":"v","t":"Mu","n":"$!bt"}],"k":"c","m":[{"m":0,"k":"m","n":"message","s":{"p":["*%_"],"r":"Mu"}},{"k":"m","m":0,"s":{"r":"Mu","p":["*%_"]},"n":"sorry_heading"},{"s":{"r":"Mu","p":["$file","$line","*%_"]},"n":"SET_FILE_LINE","k":"m","m":0},{"s":{"r":"Mu","p":["*%_"]},"n":"gist","k":"m","m":1},{"m":1,"k":"m","s":{"r":"Mu","p":["*%_"]},"n":"gist"},{"k":"m","m":1,"n":"gist","s":{"r":"Mu","p":["*%_"]}},{"k":"m","m":1,"s":{"r":"Mu","p":[":$sorry = Bool::True",":$expect = Bool::True","*%_"]},"n":"gist"},{"m":0,"k":"m","s":{"r":"Mu","p":["*%_"]},"n":"filename"},{"n":"pos","s":{"p":["*%_"],"r":"Mu"},"m":0,"k":"m"},{"s":{"r":"Mu","p":["*%_"]},"n":"line","k":"m","m":0},{"k":"m","m":0,"n":"column","s":{"r":"Mu","p":["*%_"]}},{"s":{"r":"Mu","p":["*%_"]},"n":"modules","m":0,"k":"m"},{"n":"is-compile-time","s":{"p":["*%_"],"r":"Mu"},"k":"m","m":0},{"k":"m","m":0,"n":"pre","s":{"r":"Mu","p":["*%_"]}},{"k":"m","m":0,"n":"post","s":{"p":["*%_"],"r":"Mu"}},{"s":{"r":"Mu","p":["*%_"]},"n":"highexpect","k":"m","m":0},{"n":"BUILDALL","s":{"p":["@auto","%init","*%_"],"r":"Mu"},"k":"s","m":0},{"k":"m","m":0,"n":"resume","s":{"r":"Bool","p":["*%_"]}},{"m":0,"k":"m","s":{"r":"Mu","p":["*%_"]},"n":"reset-backtrace"},{"k":"m","m":0,"n":"is-compile-time","s":{"p":["*%_"],"r":"Bool"}},{"s":{"p":["$bt?","*%_"],"r":"Mu"},"n":"throw","k":"m","m":0},{"m":0,"k":"m","s":{"p":["*%_"],"r":"Mu"},"n":"fail"},{"k":"m","m":1,"s":{"r":"Mu","p":["*%_"]},"n":"Str"},{"n":"Str","s":{"p":["*%_"],"r":"Mu"},"k":"m","m":1},{"m":1,"k":"m","n":"Str","s":{"p":["*%_"],"r":"Mu"}},{"s":{"r":"Mu","p":["*%_"]},"n":"die","k":"m","m":0},{"n":"rethrow","s":{"r":"Mu","p":["*%_"]},"k":"m","m":0},{"n":"backtrace","s":{"p":["*%_"],"r":"Mu"},"m":0,"k":"m"},{"s":{"p":["*%_"],"r":"Mu"},"n":"gist","k":"m","m":1},{"s":{"p":["*%_"],"r":"Mu"},"n":"gist","k":"m","m":1},{"n":"gist","s":{"p":["*%_"],"r":"Mu"},"m":1,"k":"m"},{"k":"m","m":0,"n":"vault-backtrace","s":{"r":"Mu","p":["*%_"]}},{"m":0,"k":"s","n":"BUILDALL","s":{"r":"Mu","p":["@auto","%init","*%_"]}}],"n":"X::Syntax::Regex::SpacesInBareRange","t":"X::Syntax::Regex::SpacesInBareRange"},{"b":"A","a":[{"n":"$.filename","t":"Mu","k":"v"},{"k":"v","n":"$.pos","t":"Mu"},{"k":"v","n":"$.line","t":"Mu"},{"k":"v","n":"$.column","t":"Mu"},{"t":"Positional","n":"@.modules","k":"v"},{"n":"$.is-compile-time","t":"Mu","k":"v"},{"n":"$.pre","t":"Mu","k":"v"},{"n":"$.post","t":"Mu","k":"v"},{"k":"v","t":"Positional","n":"@.highexpect"},{"k":"v","t":"Mu","n":"$!ex"},{"n":"$!bt","t":"Mu","k":"v"}],"k":"c","m":[{"m":0,"k":"m","n":"message","s":{"p":["*%_"],"r":"Mu"}},{"s":{"p":["*%_"],"r":"Mu"},"n":"sorry_heading","k":"m","m":0},{"s":{"p":["$file","$line","*%_"],"r":"Mu"},"n":"SET_FILE_LINE","m":0,"k":"m"},{"k":"m","m":1,"s":{"r":"Mu","p":["*%_"]},"n":"gist"},{"s":{"p":["*%_"],"r":"Mu"},"n":"gist","m":1,"k":"m"},{"n":"gist","s":{"r":"Mu","p":["*%_"]},"k":"m","m":1},{"n":"gist","s":{"r":"Mu","p":[":$sorry = Bool::True",":$expect = Bool::True","*%_"]},"m":1,"k":"m"},{"k":"m","m":0,"s":{"p":["*%_"],"r":"Mu"},"n":"filename"},{"k":"m","m":0,"n":"pos","s":{"p":["*%_"],"r":"Mu"}},{"k":"m","m":0,"s":{"r":"Mu","p":["*%_"]},"n":"line"},{"s":{"r":"Mu","p":["*%_"]},"n":"column","m":0,"k":"m"},{"s":{"p":["*%_"],"r":"Mu"},"n":"modules","m":0,"k":"m"},{"k":"m","m":0,"n":"is-compile-time","s":{"p":["*%_"],"r":"Mu"}},{"m":0,"k":"m","s":{"r":"Mu","p":["*%_"]},"n":"pre"},{"k":"m","m":0,"n":"post","s":{"r":"Mu","p":["*%_"]}},{"s":{"p":["*%_"],"r":"Mu"},"n":"highexpect","m":0,"k":"m"},{"s":{"r":"Mu","p":["@auto","%init","*%_"]},"n":"BUILDALL","m":0,"k":"s"},{"n":"resume","s":{"p":["*%_"],"r":"Bool"},"m":0,"k":"m"},{"s":{"r":"Mu","p":["*%_"]},"n":"reset-backtrace","m":0,"k":"m"},{"k":"m","m":0,"s":{"p":["*%_"],"r":"Bool"},"n":"is-compile-time"},{"s":{"p":["$bt?","*%_"],"r":"Mu"},"n":"throw","k":"m","m":0},{"n":"fail","s":{"p":["*%_"],"r":"Mu"},"m":0,"k":"m"},{"n":"Str","s":{"p":["*%_"],"r":"Mu"},"m":1,"k":"m"},{"m":1,"k":"m","n":"Str","s":{"p":["*%_"],"r":"Mu"}},{"n":"Str","s":{"r":"Mu","p":["*%_"]},"k":"m","m":1},{"n":"die","s":{"p":["*%_"],"r":"Mu"},"k":"m","m":0},{"m":0,"k":"m","s":{"r":"Mu","p":["*%_"]},"n":"rethrow"},{"k":"m","m":0,"n":"backtrace","s":{"p":["*%_"],"r":"Mu"}},{"k":"m","m":1,"n":"gist","s":{"p":["*%_"],"r":"Mu"}},{"k":"m","m":1,"n":"gist","s":{"p":["*%_"],"r":"Mu"}},{"k":"m","m":1,"s":{"r":"Mu","p":["*%_"]},"n":"gist"},{"k":"m","m":0,"n":"vault-backtrace","s":{"p":["*%_"],"r":"Mu"}},{"k":"s","m":0,"s":{"r":"Mu","p":["@auto","%init","*%_"]},"n":"BUILDALL"}],"t":"X::Syntax::Regex::NonQuantifiable","n":"X::Syntax::Regex::NonQuantifiable"},{"a":[{"k":"v","n":"$.filename","t":"Mu"},{"k":"v","n":"$.pos","t":"Mu"},{"k":"v","t":"Mu","n":"$.line"},{"t":"Mu","n":"$.column","k":"v"},{"k":"v","n":"@.modules","t":"Positional"},{"k":"v","t":"Mu","n":"$.is-compile-time"},{"k":"v","n":"$.pre","t":"Mu"},{"t":"Mu","n":"$.post","k":"v"},{"t":"Positional","n":"@.highexpect","k":"v"},{"k":"v","n":"$!ex","t":"Mu"},{"n":"$!bt","t":"Mu","k":"v"}],"b":"A","k":"c","m":[{"s":{"r":"Mu","p":["*%_"]},"n":"message","k":"m","m":0},{"s":{"r":"Mu","p":["*%_"]},"n":"sorry_heading","m":0,"k":"m"},{"k":"m","m":0,"n":"SET_FILE_LINE","s":{"r":"Mu","p":["$file","$line","*%_"]}},{"k":"m","m":1,"s":{"r":"Mu","p":["*%_"]},"n":"gist"},{"n":"gist","s":{"p":["*%_"],"r":"Mu"},"k":"m","m":1},{"k":"m","m":1,"s":{"p":["*%_"],"r":"Mu"},"n":"gist"},{"n":"gist","s":{"p":[":$sorry = Bool::True",":$expect = Bool::True","*%_"],"r":"Mu"},"k":"m","m":1},{"n":"filename","s":{"p":["*%_"],"r":"Mu"},"m":0,"k":"m"},{"s":{"r":"Mu","p":["*%_"]},"n":"pos","k":"m","m":0},{"s":{"p":["*%_"],"r":"Mu"},"n":"line","m":0,"k":"m"},{"k":"m","m":0,"s":{"p":["*%_"],"r":"Mu"},"n":"column"},{"m":0,"k":"m","n":"modules","s":{"r":"Mu","p":["*%_"]}},{"k":"m","m":0,"s":{"r":"Mu","p":["*%_"]},"n":"is-compile-time"},{"k":"m","m":0,"s":{"p":["*%_"],"r":"Mu"},"n":"pre"},{"s":{"r":"Mu","p":["*%_"]},"n":"post","m":0,"k":"m"},{"s":{"p":["*%_"],"r":"Mu"},"n":"highexpect","m":0,"k":"m"},{"n":"BUILDALL","s":{"p":["@auto","%init","*%_"],"r":"Mu"},"m":0,"k":"s"},{"m":0,"k":"m","s":{"r":"Bool","p":["*%_"]},"n":"resume"},{"k":"m","m":0,"s":{"r":"Mu","p":["*%_"]},"n":"reset-backtrace"},{"s":{"p":["*%_"],"r":"Bool"},"n":"is-compile-time","m":0,"k":"m"},{"k":"m","m":0,"s":{"p":["$bt?","*%_"],"r":"Mu"},"n":"throw"},{"s":{"r":"Mu","p":["*%_"]},"n":"fail","k":"m","m":0},{"k":"m","m":1,"n":"Str","s":{"p":["*%_"],"r":"Mu"}},{"k":"m","m":1,"s":{"p":["*%_"],"r":"Mu"},"n":"Str"},{"m":1,"k":"m","s":{"r":"Mu","p":["*%_"]},"n":"Str"},{"m":0,"k":"m","s":{"r":"Mu","p":["*%_"]},"n":"die"},{"s":{"p":["*%_"],"r":"Mu"},"n":"rethrow","k":"m","m":0},{"m":0,"k":"m","s":{"r":"Mu","p":["*%_"]},"n":"backtrace"},{"s":{"r":"Mu","p":["*%_"]},"n":"gist","m":1,"k":"m"},{"s":{"r":"Mu","p":["*%_"]},"n":"gist","m":1,"k":"m"},{"m":1,"k":"m","n":"gist","s":{"p":["*%_"],"r":"Mu"}},{"n":"vault-backtrace","s":{"r":"Mu","p":["*%_"]},"k":"m","m":0},{"s":{"p":["@auto","%init","*%_"],"r":"Mu"},"n":"BUILDALL","m":0,"k":"s"}],"n":"X::Syntax::Regex::SolitaryBacktrackControl","t":"X::Syntax::Regex::SolitaryBacktrackControl"},{"k":"c","m":[{"n":"message","s":{"p":["*%_"],"r":"Mu"},"m":0,"k":"m"},{"m":0,"k":"m","n":"sorry_heading","s":{"r":"Mu","p":["*%_"]}},{"n":"SET_FILE_LINE","s":{"r":"Mu","p":["$file","$line","*%_"]},"m":0,"k":"m"},{"s":{"r":"Mu","p":["*%_"]},"n":"gist","m":1,"k":"m"},{"n":"gist","s":{"p":["*%_"],"r":"Mu"},"k":"m","m":1},{"s":{"r":"Mu","p":["*%_"]},"n":"gist","k":"m","m":1},{"m":1,"k":"m","n":"gist","s":{"p":[":$sorry = Bool::True",":$expect = Bool::True","*%_"],"r":"Mu"}},{"m":0,"k":"m","n":"char","s":{"p":["*%_"],"r":"Mu"}},{"s":{"r":"Mu","p":["*%_"]},"n":"filename","k":"m","m":0},{"s":{"r":"Mu","p":["*%_"]},"n":"pos","k":"m","m":0},{"k":"m","m":0,"n":"line","s":{"p":["*%_"],"r":"Mu"}},{"s":{"p":["*%_"],"r":"Mu"},"n":"column","k":"m","m":0},{"n":"modules","s":{"p":["*%_"],"r":"Mu"},"k":"m","m":0},{"s":{"p":["*%_"],"r":"Mu"},"n":"is-compile-time","m":0,"k":"m"},{"s":{"p":["*%_"],"r":"Mu"},"n":"pre","m":0,"k":"m"},{"s":{"r":"Mu","p":["*%_"]},"n":"post","k":"m","m":0},{"k":"m","m":0,"n":"highexpect","s":{"r":"Mu","p":["*%_"]}},{"n":"BUILDALL","s":{"p":["@auto","%init","*%_"],"r":"Mu"},"k":"s","m":0},{"m":0,"k":"m","n":"resume","s":{"p":["*%_"],"r":"Bool"}},{"s":{"r":"Mu","p":["*%_"]},"n":"reset-backtrace","k":"m","m":0},{"n":"is-compile-time","s":{"r":"Bool","p":["*%_"]},"m":0,"k":"m"},{"m":0,"k":"m","s":{"r":"Mu","p":["$bt?","*%_"]},"n":"throw"},{"s":{"r":"Mu","p":["*%_"]},"n":"fail","m":0,"k":"m"},{"s":{"p":["*%_"],"r":"Mu"},"n":"Str","m":1,"k":"m"},{"n":"Str","s":{"p":["*%_"],"r":"Mu"},"m":1,"k":"m"},{"m":1,"k":"m","n":"Str","s":{"p":["*%_"],"r":"Mu"}},{"m":0,"k":"m","s":{"r":"Mu","p":["*%_"]},"n":"die"},{"n":"rethrow","s":{"r":"Mu","p":["*%_"]},"k":"m","m":0},{"k":"m","m":0,"s":{"r":"Mu","p":["*%_"]},"n":"backtrace"},{"n":"gist","s":{"r":"Mu","p":["*%_"]},"k":"m","m":1},{"n":"gist","s":{"p":["*%_"],"r":"Mu"},"m":1,"k":"m"},{"n":"gist","s":{"p":["*%_"],"r":"Mu"},"k":"m","m":1},{"n":"vault-backtrace","s":{"r":"Mu","p":["*%_"]},"m":0,"k":"m"},{"m":0,"k":"s","s":{"r":"Mu","p":["@auto","%init","*%_"]},"n":"BUILDALL"}],"b":"A","a":[{"t":"Mu","n":"$.char","k":"v"},{"k":"v","n":"$.filename","t":"Mu"},{"t":"Mu","n":"$.pos","k":"v"},{"k":"v","n":"$.line","t":"Mu"},{"n":"$.column","t":"Mu","k":"v"},{"k":"v","n":"@.modules","t":"Positional"},{"k":"v","n":"$.is-compile-time","t":"Mu"},{"k":"v","n":"$.pre","t":"Mu"},{"k":"v","n":"$.post","t":"Mu"},{"t":"Positional","n":"@.highexpect","k":"v"},{"k":"v","n":"$!ex","t":"Mu"},{"t":"Mu","n":"$!bt","k":"v"}],"t":"X::Syntax::Regex::Unspace","n":"X::Syntax::Regex::Unspace"},{"n":"X::Syntax::Regex::UnrecognizedMetachar","t":"X::Syntax::Regex::UnrecognizedMetachar","m":[{"m":0,"k":"m","s":{"p":["*%_"],"r":"Mu"},"n":"message"},{"n":"sorry_heading","s":{"p":["*%_"],"r":"Mu"},"m":0,"k":"m"},{"s":{"p":["$file","$line","*%_"],"r":"Mu"},"n":"SET_FILE_LINE","m":0,"k":"m"},{"n":"gist","s":{"p":["*%_"],"r":"Mu"},"m":1,"k":"m"},{"m":1,"k":"m","n":"gist","s":{"p":["*%_"],"r":"Mu"}},{"n":"gist","s":{"p":["*%_"],"r":"Mu"},"k":"m","m":1},{"k":"m","m":1,"s":{"p":[":$sorry = Bool::True",":$expect = Bool::True","*%_"],"r":"Mu"},"n":"gist"},{"k":"m","m":0,"n":"metachar","s":{"p":["*%_"],"r":"Mu"}},{"s":{"p":["*%_"],"r":"Mu"},"n":"filename","m":0,"k":"m"},{"k":"m","m":0,"s":{"r":"Mu","p":["*%_"]},"n":"pos"},{"k":"m","m":0,"s":{"r":"Mu","p":["*%_"]},"n":"line"},{"s":{"p":["*%_"],"r":"Mu"},"n":"column","k":"m","m":0},{"n":"modules","s":{"p":["*%_"],"r":"Mu"},"m":0,"k":"m"},{"k":"m","m":0,"s":{"r":"Mu","p":["*%_"]},"n":"is-compile-time"},{"n":"pre","s":{"p":["*%_"],"r":"Mu"},"k":"m","m":0},{"s":{"p":["*%_"],"r":"Mu"},"n":"post","k":"m","m":0},{"k":"m","m":0,"n":"highexpect","s":{"r":"Mu","p":["*%_"]}},{"k":"s","m":0,"s":{"p":["@auto","%init","*%_"],"r":"Mu"},"n":"BUILDALL"},{"k":"m","m":0,"s":{"r":"Bool","p":["*%_"]},"n":"resume"},{"s":{"r":"Mu","p":["*%_"]},"n":"reset-backtrace","k":"m","m":0},{"n":"is-compile-time","s":{"p":["*%_"],"r":"Bool"},"k":"m","m":0},{"s":{"r":"Mu","p":["$bt?","*%_"]},"n":"throw","m":0,"k":"m"},{"s":{"r":"Mu","p":["*%_"]},"n":"fail","m":0,"k":"m"},{"s":{"r":"Mu","p":["*%_"]},"n":"Str","m":1,"k":"m"},{"m":1,"k":"m","n":"Str","s":{"r":"Mu","p":["*%_"]}},{"s":{"p":["*%_"],"r":"Mu"},"n":"Str","m":1,"k":"m"},{"n":"die","s":{"r":"Mu","p":["*%_"]},"k":"m","m":0},{"n":"rethrow","s":{"r":"Mu","p":["*%_"]},"m":0,"k":"m"},{"m":0,"k":"m","s":{"p":["*%_"],"r":"Mu"},"n":"backtrace"},{"n":"gist","s":{"r":"Mu","p":["*%_"]},"k":"m","m":1},{"n":"gist","s":{"p":["*%_"],"r":"Mu"},"k":"m","m":1},{"s":{"p":["*%_"],"r":"Mu"},"n":"gist","m":1,"k":"m"},{"k":"m","m":0,"s":{"r":"Mu","p":["*%_"]},"n":"vault-backtrace"},{"n":"BUILDALL","s":{"p":["@auto","%init","*%_"],"r":"Mu"},"k":"s","m":0}],"k":"c","b":"A","a":[{"k":"v","n":"$.metachar","t":"Mu"},{"n":"$.filename","t":"Mu","k":"v"},{"k":"v","t":"Mu","n":"$.pos"},{"k":"v","n":"$.line","t":"Mu"},{"t":"Mu","n":"$.column","k":"v"},{"k":"v","n":"@.modules","t":"Positional"},{"n":"$.is-compile-time","t":"Mu","k":"v"},{"t":"Mu","n":"$.pre","k":"v"},{"k":"v","t":"Mu","n":"$.post"},{"t":"Positional","n":"@.highexpect","k":"v"},{"k":"v","t":"Mu","n":"$!ex"},{"k":"v","t":"Mu","n":"$!bt"}]},{"b":"A","a":[{"k":"v","n":"$.filename","t":"Mu"},{"k":"v","n":"$.pos","t":"Mu"},{"k":"v","n":"$.line","t":"Mu"},{"k":"v","n":"$.column","t":"Mu"},{"k":"v","n":"@.modules","t":"Positional"},{"n":"$.is-compile-time","t":"Mu","k":"v"},{"k":"v","n":"$.pre","t":"Mu"},{"n":"$.post","t":"Mu","k":"v"},{"k":"v","n":"@.highexpect","t":"Positional"},{"n":"$!ex","t":"Mu","k":"v"},{"t":"Mu","n":"$!bt","k":"v"}],"m":[{"s":{"r":"Mu","p":["*%_"]},"n":"message","k":"m","m":0},{"k":"m","m":0,"n":"sorry_heading","s":{"r":"Mu","p":["*%_"]}},{"n":"SET_FILE_LINE","s":{"r":"Mu","p":["$file","$line","*%_"]},"m":0,"k":"m"},{"k":"m","m":1,"n":"gist","s":{"p":["*%_"],"r":"Mu"}},{"s":{"r":"Mu","p":["*%_"]},"n":"gist","m":1,"k":"m"},{"s":{"p":["*%_"],"r":"Mu"},"n":"gist","m":1,"k":"m"},{"m":1,"k":"m","n":"gist","s":{"p":[":$sorry = Bool::True",":$expect = Bool::True","*%_"],"r":"Mu"}},{"n":"filename","s":{"p":["*%_"],"r":"Mu"},"m":0,"k":"m"},{"k":"m","m":0,"s":{"r":"Mu","p":["*%_"]},"n":"pos"},{"s":{"p":["*%_"],"r":"Mu"},"n":"line","m":0,"k":"m"},{"s":{"p":["*%_"],"r":"Mu"},"n":"column","k":"m","m":0},{"m":0,"k":"m","s":{"p":["*%_"],"r":"Mu"},"n":"modules"},{"s":{"r":"Mu","p":["*%_"]},"n":"is-compile-time","m":0,"k":"m"},{"n":"pre","s":{"p":["*%_"],"r":"Mu"},"m":0,"k":"m"},{"k":"m","m":0,"n":"post","s":{"r":"Mu","p":["*%_"]}},{"m":0,"k":"m","s":{"p":["*%_"],"r":"Mu"},"n":"highexpect"},{"m":0,"k":"s","n":"BUILDALL","s":{"p":["@auto","%init","*%_"],"r":"Mu"}},{"n":"resume","s":{"p":["*%_"],"r":"Bool"},"k":"m","m":0},{"k":"m","m":0,"s":{"r":"Mu","p":["*%_"]},"n":"reset-backtrace"},{"n":"is-compile-time","s":{"r":"Bool","p":["*%_"]},"m":0,"k":"m"},{"n":"throw","s":{"r":"Mu","p":["$bt?","*%_"]},"m":0,"k":"m"},{"s":{"r":"Mu","p":["*%_"]},"n":"fail","k":"m","m":0},{"s":{"r":"Mu","p":["*%_"]},"n":"Str","k":"m","m":1},{"n":"Str","s":{"r":"Mu","p":["*%_"]},"m":1,"k":"m"},{"n":"Str","s":{"r":"Mu","p":["*%_"]},"m":1,"k":"m"},{"k":"m","m":0,"n":"die","s":{"r":"Mu","p":["*%_"]}},{"n":"rethrow","s":{"p":["*%_"],"r":"Mu"},"k":"m","m":0},{"s":{"p":["*%_"],"r":"Mu"},"n":"backtrace","m":0,"k":"m"},{"k":"m","m":1,"s":{"r":"Mu","p":["*%_"]},"n":"gist"},{"n":"gist","s":{"r":"Mu","p":["*%_"]},"m":1,"k":"m"},{"n":"gist","s":{"r":"Mu","p":["*%_"]},"m":1,"k":"m"},{"s":{"r":"Mu","p":["*%_"]},"n":"vault-backtrace","k":"m","m":0},{"k":"s","m":0,"s":{"r":"Mu","p":["@auto","%init","*%_"]},"n":"BUILDALL"}],"k":"c","t":"X::Syntax::Regex::MalformedRange","n":"X::Syntax::Regex::MalformedRange"},{"t":"X::Syntax::Regex::Alias::LongName","n":"X::Syntax::Regex::Alias::LongName","m":[{"s":{"p":["*%_"],"r":"Mu"},"n":"message","k":"m","m":0},{"s":{"p":["*%_"],"r":"Mu"},"n":"sorry_heading","k":"m","m":0},{"n":"SET_FILE_LINE","s":{"p":["$file","$line","*%_"],"r":"Mu"},"m":0,"k":"m"},{"m":1,"k":"m","s":{"p":["*%_"],"r":"Mu"},"n":"gist"},{"s":{"p":["*%_"],"r":"Mu"},"n":"gist","k":"m","m":1},{"k":"m","m":1,"s":{"r":"Mu","p":["*%_"]},"n":"gist"},{"m":1,"k":"m","n":"gist","s":{"p":[":$sorry = Bool::True",":$expect = Bool::True","*%_"],"r":"Mu"}},{"m":0,"k":"m","n":"filename","s":{"p":["*%_"],"r":"Mu"}},{"m":0,"k":"m","n":"pos","s":{"p":["*%_"],"r":"Mu"}},{"n":"line","s":{"p":["*%_"],"r":"Mu"},"k":"m","m":0},{"k":"m","m":0,"n":"column","s":{"p":["*%_"],"r":"Mu"}},{"s":{"r":"Mu","p":["*%_"]},"n":"modules","k":"m","m":0},{"m":0,"k":"m","s":{"p":["*%_"],"r":"Mu"},"n":"is-compile-time"},{"k":"m","m":0,"n":"pre","s":{"p":["*%_"],"r":"Mu"}},{"k":"m","m":0,"n":"post","s":{"r":"Mu","p":["*%_"]}},{"s":{"r":"Mu","p":["*%_"]},"n":"highexpect","m":0,"k":"m"},{"n":"BUILDALL","s":{"p":["@auto","%init","*%_"],"r":"Mu"},"k":"s","m":0},{"m":0,"k":"m","s":{"r":"Bool","p":["*%_"]},"n":"resume"},{"k":"m","m":0,"s":{"p":["*%_"],"r":"Mu"},"n":"reset-backtrace"},{"n":"is-compile-time","s":{"p":["*%_"],"r":"Bool"},"k":"m","m":0},{"n":"throw","s":{"p":["$bt?","*%_"],"r":"Mu"},"k":"m","m":0},{"m":0,"k":"m","n":"fail","s":{"p":["*%_"],"r":"Mu"}},{"k":"m","m":1,"s":{"p":["*%_"],"r":"Mu"},"n":"Str"},{"n":"Str","s":{"p":["*%_"],"r":"Mu"},"m":1,"k":"m"},{"k":"m","m":1,"s":{"p":["*%_"],"r":"Mu"},"n":"Str"},{"s":{"p":["*%_"],"r":"Mu"},"n":"die","k":"m","m":0},{"s":{"p":["*%_"],"r":"Mu"},"n":"rethrow","m":0,"k":"m"},{"n":"backtrace","s":{"p":["*%_"],"r":"Mu"},"m":0,"k":"m"},{"n":"gist","s":{"p":["*%_"],"r":"Mu"},"m":1,"k":"m"},{"k":"m","m":1,"n":"gist","s":{"r":"Mu","p":["*%_"]}},{"n":"gist","s":{"r":"Mu","p":["*%_"]},"m":1,"k":"m"},{"n":"vault-backtrace","s":{"r":"Mu","p":["*%_"]},"m":0,"k":"m"},{"m":0,"k":"s","s":{"p":["@auto","%init","*%_"],"r":"Mu"},"n":"BUILDALL"}],"k":"c","b":"A","a":[{"t":"Mu","n":"$.filename","k":"v"},{"k":"v","n":"$.pos","t":"Mu"},{"n":"$.line","t":"Mu","k":"v"},{"t":"Mu","n":"$.column","k":"v"},{"k":"v","n":"@.modules","t":"Positional"},{"k":"v","n":"$.is-compile-time","t":"Mu"},{"k":"v","n":"$.pre","t":"Mu"},{"t":"Mu","n":"$.post","k":"v"},{"k":"v","t":"Positional","n":"@.highexpect"},{"n":"$!ex","t":"Mu","k":"v"},{"k":"v","t":"Mu","n":"$!bt"}]},{"d":"TITLE\nclass X::Syntax::Regex::SolitaryQuantifier\n\nSUBTITLE\nCompilation error due to a regex quantifier without preceding atom\n\n    class X::Syntax::Regex::SolitaryQuantifier does X::Syntax { }\n\nSyntax error when a stand alone quantifier (without a preceding atom to\nquantify) is encountered in a regular expression.\n\nFor example\n\n    / * /;\n\n\ndies with\n\n    ===SORRY!===\n    Quantifier quantifies nothing\n","a":[{"k":"v","n":"$.filename","t":"Mu"},{"k":"v","t":"Mu","n":"$.pos"},{"t":"Mu","n":"$.line","k":"v"},{"k":"v","t":"Mu","n":"$.column"},{"k":"v","n":"@.modules","t":"Positional"},{"t":"Mu","n":"$.is-compile-time","k":"v"},{"t":"Mu","n":"$.pre","k":"v"},{"k":"v","n":"$.post","t":"Mu"},{"k":"v","t":"Positional","n":"@.highexpect"},{"k":"v","t":"Mu","n":"$!ex"},{"k":"v","n":"$!bt","t":"Mu"}],"b":"A","m":[{"n":"message","s":{"r":"Mu","p":["*%_"]},"m":0,"k":"m"},{"n":"sorry_heading","s":{"r":"Mu","p":["*%_"]},"m":0,"k":"m"},{"k":"m","m":0,"s":{"r":"Mu","p":["$file","$line","*%_"]},"n":"SET_FILE_LINE"},{"n":"gist","s":{"p":["*%_"],"r":"Mu"},"m":1,"k":"m"},{"s":{"r":"Mu","p":["*%_"]},"n":"gist","m":1,"k":"m"},{"n":"gist","s":{"p":["*%_"],"r":"Mu"},"k":"m","m":1},{"m":1,"k":"m","n":"gist","s":{"r":"Mu","p":[":$sorry = Bool::True",":$expect = Bool::True","*%_"]}},{"m":0,"k":"m","n":"filename","s":{"p":["*%_"],"r":"Mu"}},{"m":0,"k":"m","s":{"p":["*%_"],"r":"Mu"},"n":"pos"},{"m":0,"k":"m","n":"line","s":{"p":["*%_"],"r":"Mu"}},{"s":{"p":["*%_"],"r":"Mu"},"n":"column","m":0,"k":"m"},{"k":"m","m":0,"n":"modules","s":{"r":"Mu","p":["*%_"]}},{"s":{"p":["*%_"],"r":"Mu"},"n":"is-compile-time","m":0,"k":"m"},{"n":"pre","s":{"p":["*%_"],"r":"Mu"},"k":"m","m":0},{"s":{"r":"Mu","p":["*%_"]},"n":"post","m":0,"k":"m"},{"m":0,"k":"m","s":{"p":["*%_"],"r":"Mu"},"n":"highexpect"},{"n":"BUILDALL","s":{"p":["@auto","%init","*%_"],"r":"Mu"},"m":0,"k":"s"},{"m":0,"k":"m","s":{"p":["*%_"],"r":"Bool"},"n":"resume"},{"s":{"p":["*%_"],"r":"Mu"},"n":"reset-backtrace","m":0,"k":"m"},{"k":"m","m":0,"s":{"r":"Bool","p":["*%_"]},"n":"is-compile-time"},{"m":0,"k":"m","s":{"r":"Mu","p":["$bt?","*%_"]},"n":"throw"},{"m":0,"k":"m","s":{"r":"Mu","p":["*%_"]},"n":"fail"},{"s":{"p":["*%_"],"r":"Mu"},"n":"Str","k":"m","m":1},{"n":"Str","s":{"r":"Mu","p":["*%_"]},"k":"m","m":1},{"n":"Str","s":{"p":["*%_"],"r":"Mu"},"k":"m","m":1},{"s":{"p":["*%_"],"r":"Mu"},"n":"die","k":"m","m":0},{"s":{"r":"Mu","p":["*%_"]},"n":"rethrow","k":"m","m":0},{"s":{"p":["*%_"],"r":"Mu"},"n":"backtrace","k":"m","m":0},{"n":"gist","s":{"r":"Mu","p":["*%_"]},"k":"m","m":1},{"m":1,"k":"m","s":{"r":"Mu","p":["*%_"]},"n":"gist"},{"m":1,"k":"m","s":{"p":["*%_"],"r":"Mu"},"n":"gist"},{"n":"vault-backtrace","s":{"r":"Mu","p":["*%_"]},"k":"m","m":0},{"n":"BUILDALL","s":{"r":"Mu","p":["@auto","%init","*%_"]},"k":"s","m":0}],"k":"c","t":"X::Syntax::Regex::SolitaryQuantifier","n":"X::Syntax::Regex::SolitaryQuantifier"},{"d":"TITLE\nclass X::Syntax::Regex::Adverb\n\nSUBTITLE\nCompilation error due to an unrecognized regex adverb\n\n    class X::Syntax::Regex::Adverb does X::Syntax { }\n\nSyntax error thrown when an unrecognized or illegal regex adverb is\nencountered.\n\nFor example\n\n    rx:g/a/\n\n\ndies with\n\n    ===SORRY!===\n    Adverb g not allowed on rx\n\n\nbecause :g belongs to a match operation, not a regex itself.\n\n","k":"c","m":[{"s":{"r":"Mu","p":["*%_"]},"n":"message","k":"m","m":0},{"n":"sorry_heading","s":{"r":"Mu","p":["*%_"]},"m":0,"k":"m"},{"k":"m","m":0,"n":"SET_FILE_LINE","s":{"p":["$file","$line","*%_"],"r":"Mu"}},{"s":{"r":"Mu","p":["*%_"]},"n":"gist","m":1,"k":"m"},{"k":"m","m":1,"s":{"r":"Mu","p":["*%_"]},"n":"gist"},{"s":{"r":"Mu","p":["*%_"]},"n":"gist","m":1,"k":"m"},{"k":"m","m":1,"n":"gist","s":{"p":[":$sorry = Bool::True",":$expect = Bool::True","*%_"],"r":"Mu"}},{"s":{"r":"Mu","p":["*%_"]},"n":"adverb","m":0,"k":"m"},{"s":{"p":["*%_"],"r":"Mu"},"n":"construct","k":"m","m":0},{"m":0,"k":"m","n":"filename","s":{"p":["*%_"],"r":"Mu"}},{"m":0,"k":"m","s":{"p":["*%_"],"r":"Mu"},"n":"pos"},{"s":{"p":["*%_"],"r":"Mu"},"n":"line","m":0,"k":"m"},{"s":{"r":"Mu","p":["*%_"]},"n":"column","m":0,"k":"m"},{"k":"m","m":0,"n":"modules","s":{"p":["*%_"],"r":"Mu"}},{"n":"is-compile-time","s":{"p":["*%_"],"r":"Mu"},"m":0,"k":"m"},{"s":{"r":"Mu","p":["*%_"]},"n":"pre","k":"m","m":0},{"s":{"r":"Mu","p":["*%_"]},"n":"post","k":"m","m":0},{"m":0,"k":"m","n":"highexpect","s":{"p":["*%_"],"r":"Mu"}},{"n":"BUILDALL","s":{"r":"Mu","p":["@auto","%init","*%_"]},"k":"s","m":0},{"s":{"p":["*%_"],"r":"Bool"},"n":"resume","m":0,"k":"m"},{"n":"reset-backtrace","s":{"p":["*%_"],"r":"Mu"},"m":0,"k":"m"},{"m":0,"k":"m","s":{"r":"Bool","p":["*%_"]},"n":"is-compile-time"},{"m":0,"k":"m","n":"throw","s":{"r":"Mu","p":["$bt?","*%_"]}},{"k":"m","m":0,"n":"fail","s":{"p":["*%_"],"r":"Mu"}},{"m":1,"k":"m","n":"Str","s":{"r":"Mu","p":["*%_"]}},{"s":{"p":["*%_"],"r":"Mu"},"n":"Str","m":1,"k":"m"},{"m":1,"k":"m","n":"Str","s":{"r":"Mu","p":["*%_"]}},{"s":{"p":["*%_"],"r":"Mu"},"n":"die","m":0,"k":"m"},{"n":"rethrow","s":{"r":"Mu","p":["*%_"]},"m":0,"k":"m"},{"m":0,"k":"m","n":"backtrace","s":{"r":"Mu","p":["*%_"]}},{"s":{"r":"Mu","p":["*%_"]},"n":"gist","k":"m","m":1},{"m":1,"k":"m","s":{"p":["*%_"],"r":"Mu"},"n":"gist"},{"m":1,"k":"m","s":{"p":["*%_"],"r":"Mu"},"n":"gist"},{"m":0,"k":"m","n":"vault-backtrace","s":{"p":["*%_"],"r":"Mu"}},{"k":"s","m":0,"s":{"r":"Mu","p":["@auto","%init","*%_"]},"n":"BUILDALL"}],"a":[{"k":"v","t":"Mu","n":"$.adverb"},{"k":"v","n":"$.construct","t":"Mu"},{"k":"v","t":"Mu","n":"$.filename"},{"n":"$.pos","t":"Mu","k":"v"},{"t":"Mu","n":"$.line","k":"v"},{"k":"v","t":"Mu","n":"$.column"},{"k":"v","t":"Positional","n":"@.modules"},{"n":"$.is-compile-time","t":"Mu","k":"v"},{"n":"$.pre","t":"Mu","k":"v"},{"t":"Mu","n":"$.post","k":"v"},{"k":"v","n":"@.highexpect","t":"Positional"},{"n":"$!ex","t":"Mu","k":"v"},{"n":"$!bt","t":"Mu","k":"v"}],"b":"A","t":"X::Syntax::Regex::Adverb","n":"X::Syntax::Regex::Adverb"},{"a":[{"n":"$.filename","t":"Mu","k":"v"},{"k":"v","n":"$.pos","t":"Mu"},{"k":"v","t":"Mu","n":"$.line"},{"k":"v","t":"Mu","n":"$.column"},{"t":"Positional","n":"@.modules","k":"v"},{"k":"v","n":"$.is-compile-time","t":"Mu"},{"t":"Mu","n":"$.pre","k":"v"},{"t":"Mu","n":"$.post","k":"v"},{"k":"v","t":"Positional","n":"@.highexpect"},{"n":"$!ex","t":"Mu","k":"v"},{"t":"Mu","n":"$!bt","k":"v"}],"b":"A","k":"c","m":[{"s":{"p":["*%_"],"r":"Mu"},"n":"message","k":"m","m":0},{"s":{"r":"Mu","p":["*%_"]},"n":"sorry_heading","m":0,"k":"m"},{"m":0,"k":"m","s":{"r":"Mu","p":["$file","$line","*%_"]},"n":"SET_FILE_LINE"},{"m":1,"k":"m","s":{"r":"Mu","p":["*%_"]},"n":"gist"},{"n":"gist","s":{"r":"Mu","p":["*%_"]},"k":"m","m":1},{"m":1,"k":"m","s":{"r":"Mu","p":["*%_"]},"n":"gist"},{"k":"m","m":1,"s":{"r":"Mu","p":[":$sorry = Bool::True",":$expect = Bool::True","*%_"]},"n":"gist"},{"n":"filename","s":{"p":["*%_"],"r":"Mu"},"m":0,"k":"m"},{"m":0,"k":"m","n":"pos","s":{"p":["*%_"],"r":"Mu"}},{"k":"m","m":0,"s":{"r":"Mu","p":["*%_"]},"n":"line"},{"s":{"r":"Mu","p":["*%_"]},"n":"column","k":"m","m":0},{"k":"m","m":0,"n":"modules","s":{"p":["*%_"],"r":"Mu"}},{"s":{"p":["*%_"],"r":"Mu"},"n":"is-compile-time","k":"m","m":0},{"s":{"p":["*%_"],"r":"Mu"},"n":"pre","m":0,"k":"m"},{"k":"m","m":0,"n":"post","s":{"p":["*%_"],"r":"Mu"}},{"s":{"p":["*%_"],"r":"Mu"},"n":"highexpect","m":0,"k":"m"},{"m":0,"k":"s","s":{"r":"Mu","p":["@auto","%init","*%_"]},"n":"BUILDALL"},{"m":0,"k":"m","n":"resume","s":{"p":["*%_"],"r":"Bool"}},{"s":{"p":["*%_"],"r":"Mu"},"n":"reset-backtrace","k":"m","m":0},{"s":{"p":["*%_"],"r":"Bool"},"n":"is-compile-time","m":0,"k":"m"},{"k":"m","m":0,"s":{"r":"Mu","p":["$bt?","*%_"]},"n":"throw"},{"n":"fail","s":{"p":["*%_"],"r":"Mu"},"k":"m","m":0},{"n":"Str","s":{"r":"Mu","p":["*%_"]},"m":1,"k":"m"},{"m":1,"k":"m","n":"Str","s":{"p":["*%_"],"r":"Mu"}},{"s":{"r":"Mu","p":["*%_"]},"n":"Str","m":1,"k":"m"},{"n":"die","s":{"p":["*%_"],"r":"Mu"},"m":0,"k":"m"},{"m":0,"k":"m","n":"rethrow","s":{"p":["*%_"],"r":"Mu"}},{"k":"m","m":0,"n":"backtrace","s":{"p":["*%_"],"r":"Mu"}},{"n":"gist","s":{"p":["*%_"],"r":"Mu"},"k":"m","m":1},{"m":1,"k":"m","n":"gist","s":{"p":["*%_"],"r":"Mu"}},{"s":{"p":["*%_"],"r":"Mu"},"n":"gist","k":"m","m":1},{"k":"m","m":0,"s":{"p":["*%_"],"r":"Mu"},"n":"vault-backtrace"},{"n":"BUILDALL","s":{"p":["@auto","%init","*%_"],"r":"Mu"},"m":0,"k":"s"}],"t":"X::Syntax::Name::Null","n":"X::Syntax::Name::Null"},{"a":[{"k":"v","n":"$.left","t":"Mu"},{"k":"v","t":"Mu","n":"$.right"},{"k":"v","n":"$.filename","t":"Mu"},{"k":"v","n":"$.pos","t":"Mu"},{"n":"$.line","t":"Mu","k":"v"},{"k":"v","t":"Mu","n":"$.column"},{"k":"v","n":"@.modules","t":"Positional"},{"t":"Mu","n":"$.is-compile-time","k":"v"},{"t":"Mu","n":"$.pre","k":"v"},{"k":"v","n":"$.post","t":"Mu"},{"k":"v","n":"@.highexpect","t":"Positional"},{"k":"v","t":"Mu","n":"$!ex"},{"k":"v","n":"$!bt","t":"Mu"}],"b":"A","m":[{"n":"message","s":{"r":"Mu","p":["*%_"]},"m":0,"k":"m"},{"m":0,"k":"s","s":{"p":["@auto","%init","*%_"],"r":"Mu"},"n":"BUILDALL"},{"s":{"r":"Mu","p":["*%_"]},"n":"sorry_heading","k":"m","m":0},{"s":{"p":["*%_"],"r":"Mu"},"n":"line","m":0,"k":"m"},{"m":0,"k":"m","n":"highexpect","s":{"r":"Mu","p":["*%_"]}},{"m":1,"k":"m","s":{"r":"Mu","p":["*%_"]},"n":"gist"},{"m":1,"k":"m","s":{"p":["*%_"],"r":"Mu"},"n":"gist"},{"m":1,"k":"m","s":{"p":["*%_"],"r":"Mu"},"n":"gist"},{"n":"gist","s":{"p":[":$sorry = Bool::True",":$expect = Bool::True","*%_"],"r":"Mu"},"k":"m","m":1},{"k":"m","m":0,"s":{"r":"Mu","p":["*%_"]},"n":"modules"},{"s":{"p":["*%_"],"r":"Mu"},"n":"pos","k":"m","m":0},{"m":0,"k":"m","n":"column","s":{"r":"Mu","p":["*%_"]}},{"m":0,"k":"m","n":"left","s":{"r":"Mu","p":["*%_"]}},{"k":"m","m":0,"s":{"p":["*%_"],"r":"Mu"},"n":"is-compile-time"},{"k":"m","m":0,"s":{"r":"Mu","p":["*%_"]},"n":"right"},{"s":{"p":["*%_"],"r":"Mu"},"n":"filename","m":0,"k":"m"},{"k":"m","m":0,"n":"SET_FILE_LINE","s":{"p":["$file","$line","*%_"],"r":"Mu"}},{"k":"m","m":0,"n":"pre","s":{"p":["*%_"],"r":"Mu"}},{"m":0,"k":"m","n":"message","s":{"r":"Mu","p":["*%_"]}},{"k":"m","m":0,"n":"post","s":{"r":"Mu","p":["*%_"]}},{"s":{"p":["@auto","%init","*%_"],"r":"Mu"},"n":"BUILDALL","k":"s","m":0},{"k":"m","m":0,"s":{"r":"Bool","p":["*%_"]},"n":"resume"},{"n":"reset-backtrace","s":{"r":"Mu","p":["*%_"]},"k":"m","m":0},{"k":"m","m":0,"n":"is-compile-time","s":{"r":"Bool","p":["*%_"]}},{"m":0,"k":"m","n":"throw","s":{"p":["$bt?","*%_"],"r":"Mu"}},{"s":{"r":"Mu","p":["*%_"]},"n":"fail","m":0,"k":"m"},{"m":1,"k":"m","n":"Str","s":{"r":"Mu","p":["*%_"]}},{"s":{"p":["*%_"],"r":"Mu"},"n":"Str","m":1,"k":"m"},{"s":{"p":["*%_"],"r":"Mu"},"n":"Str","k":"m","m":1},{"s":{"r":"Mu","p":["*%_"]},"n":"die","k":"m","m":0},{"n":"rethrow","s":{"p":["*%_"],"r":"Mu"},"m":0,"k":"m"},{"m":0,"k":"m","s":{"p":["*%_"],"r":"Mu"},"n":"backtrace"},{"k":"m","m":1,"n":"gist","s":{"r":"Mu","p":["*%_"]}},{"n":"gist","s":{"p":["*%_"],"r":"Mu"},"k":"m","m":1},{"s":{"r":"Mu","p":["*%_"]},"n":"gist","k":"m","m":1},{"k":"m","m":0,"n":"vault-backtrace","s":{"r":"Mu","p":["*%_"]}},{"n":"BUILDALL","s":{"r":"Mu","p":["@auto","%init","*%_"]},"k":"s","m":0}],"k":"c","t":"X::Syntax::NonListAssociative","n":"X::Syntax::NonListAssociative"},{"n":"X::Syntax::WithoutElse","t":"X::Syntax::WithoutElse","m":[{"s":{"r":"Mu","p":["*%_"]},"n":"message","m":0,"k":"m"},{"s":{"p":["*%_"],"r":"Mu"},"n":"sorry_heading","k":"m","m":0},{"k":"m","m":0,"s":{"p":["$file","$line","*%_"],"r":"Mu"},"n":"SET_FILE_LINE"},{"s":{"p":["*%_"],"r":"Mu"},"n":"gist","k":"m","m":1},{"k":"m","m":1,"s":{"r":"Mu","p":["*%_"]},"n":"gist"},{"k":"m","m":1,"n":"gist","s":{"p":["*%_"],"r":"Mu"}},{"k":"m","m":1,"n":"gist","s":{"p":[":$sorry = Bool::True",":$expect = Bool::True","*%_"],"r":"Mu"}},{"m":0,"k":"m","n":"keyword","s":{"r":"Mu","p":["*%_"]}},{"k":"m","m":0,"n":"filename","s":{"p":["*%_"],"r":"Mu"}},{"s":{"r":"Mu","p":["*%_"]},"n":"pos","k":"m","m":0},{"n":"line","s":{"r":"Mu","p":["*%_"]},"k":"m","m":0},{"k":"m","m":0,"s":{"r":"Mu","p":["*%_"]},"n":"column"},{"s":{"p":["*%_"],"r":"Mu"},"n":"modules","m":0,"k":"m"},{"m":0,"k":"m","s":{"r":"Mu","p":["*%_"]},"n":"is-compile-time"},{"k":"m","m":0,"s":{"p":["*%_"],"r":"Mu"},"n":"pre"},{"m":0,"k":"m","s":{"p":["*%_"],"r":"Mu"},"n":"post"},{"m":0,"k":"m","n":"highexpect","s":{"p":["*%_"],"r":"Mu"}},{"m":0,"k":"s","n":"BUILDALL","s":{"r":"Mu","p":["@auto","%init","*%_"]}},{"n":"resume","s":{"p":["*%_"],"r":"Bool"},"m":0,"k":"m"},{"m":0,"k":"m","n":"reset-backtrace","s":{"r":"Mu","p":["*%_"]}},{"s":{"r":"Bool","p":["*%_"]},"n":"is-compile-time","m":0,"k":"m"},{"s":{"p":["$bt?","*%_"],"r":"Mu"},"n":"throw","k":"m","m":0},{"m":0,"k":"m","n":"fail","s":{"p":["*%_"],"r":"Mu"}},{"n":"Str","s":{"r":"Mu","p":["*%_"]},"m":1,"k":"m"},{"n":"Str","s":{"p":["*%_"],"r":"Mu"},"k":"m","m":1},{"n":"Str","s":{"p":["*%_"],"r":"Mu"},"k":"m","m":1},{"m":0,"k":"m","s":{"p":["*%_"],"r":"Mu"},"n":"die"},{"m":0,"k":"m","s":{"r":"Mu","p":["*%_"]},"n":"rethrow"},{"k":"m","m":0,"n":"backtrace","s":{"r":"Mu","p":["*%_"]}},{"s":{"p":["*%_"],"r":"Mu"},"n":"gist","m":1,"k":"m"},{"m":1,"k":"m","n":"gist","s":{"r":"Mu","p":["*%_"]}},{"k":"m","m":1,"n":"gist","s":{"r":"Mu","p":["*%_"]}},{"n":"vault-backtrace","s":{"p":["*%_"],"r":"Mu"},"m":0,"k":"m"},{"m":0,"k":"s","n":"BUILDALL","s":{"p":["@auto","%init","*%_"],"r":"Mu"}}],"k":"c","b":"A","a":[{"n":"$.keyword","t":"Mu","k":"v"},{"n":"$.filename","t":"Mu","k":"v"},{"n":"$.pos","t":"Mu","k":"v"},{"k":"v","n":"$.line","t":"Mu"},{"k":"v","t":"Mu","n":"$.column"},{"t":"Positional","n":"@.modules","k":"v"},{"k":"v","t":"Mu","n":"$.is-compile-time"},{"k":"v","n":"$.pre","t":"Mu"},{"n":"$.post","t":"Mu","k":"v"},{"t":"Positional","n":"@.highexpect","k":"v"},{"t":"Mu","n":"$!ex","k":"v"},{"k":"v","n":"$!bt","t":"Mu"}]},{"m":[{"n":"message","s":{"r":"Mu","p":["*%_"]},"k":"m","m":0},{"n":"sorry_heading","s":{"r":"Mu","p":["*%_"]},"k":"m","m":0},{"m":0,"k":"m","s":{"p":["$file","$line","*%_"],"r":"Mu"},"n":"SET_FILE_LINE"},{"s":{"r":"Mu","p":["*%_"]},"n":"gist","m":1,"k":"m"},{"s":{"r":"Mu","p":["*%_"]},"n":"gist","m":1,"k":"m"},{"n":"gist","s":{"p":["*%_"],"r":"Mu"},"m":1,"k":"m"},{"n":"gist","s":{"p":[":$sorry = Bool::True",":$expect = Bool::True","*%_"],"r":"Mu"},"k":"m","m":1},{"n":"word","s":{"p":["*%_"],"r":"Mu"},"k":"m","m":0},{"m":0,"k":"m","s":{"p":["*%_"],"r":"Mu"},"n":"needparens"},{"k":"m","m":0,"s":{"r":"Mu","p":["*%_"]},"n":"filename"},{"s":{"r":"Mu","p":["*%_"]},"n":"pos","m":0,"k":"m"},{"s":{"p":["*%_"],"r":"Mu"},"n":"line","m":0,"k":"m"},{"m":0,"k":"m","s":{"r":"Mu","p":["*%_"]},"n":"column"},{"m":0,"k":"m","s":{"p":["*%_"],"r":"Mu"},"n":"modules"},{"s":{"r":"Mu","p":["*%_"]},"n":"is-compile-time","m":0,"k":"m"},{"n":"pre","s":{"r":"Mu","p":["*%_"]},"m":0,"k":"m"},{"s":{"p":["*%_"],"r":"Mu"},"n":"post","m":0,"k":"m"},{"k":"m","m":0,"s":{"r":"Mu","p":["*%_"]},"n":"highexpect"},{"s":{"p":["@auto","%init","*%_"],"r":"Mu"},"n":"BUILDALL","m":0,"k":"s"},{"m":0,"k":"m","s":{"p":["*%_"],"r":"Bool"},"n":"resume"},{"n":"reset-backtrace","s":{"r":"Mu","p":["*%_"]},"k":"m","m":0},{"n":"is-compile-time","s":{"r":"Bool","p":["*%_"]},"k":"m","m":0},{"s":{"p":["$bt?","*%_"],"r":"Mu"},"n":"throw","k":"m","m":0},{"n":"fail","s":{"r":"Mu","p":["*%_"]},"m":0,"k":"m"},{"s":{"r":"Mu","p":["*%_"]},"n":"Str","m":1,"k":"m"},{"k":"m","m":1,"n":"Str","s":{"p":["*%_"],"r":"Mu"}},{"s":{"r":"Mu","p":["*%_"]},"n":"Str","k":"m","m":1},{"n":"die","s":{"r":"Mu","p":["*%_"]},"k":"m","m":0},{"m":0,"k":"m","s":{"p":["*%_"],"r":"Mu"},"n":"rethrow"},{"n":"backtrace","s":{"p":["*%_"],"r":"Mu"},"m":0,"k":"m"},{"n":"gist","s":{"p":["*%_"],"r":"Mu"},"m":1,"k":"m"},{"s":{"p":["*%_"],"r":"Mu"},"n":"gist","k":"m","m":1},{"k":"m","m":1,"n":"gist","s":{"r":"Mu","p":["*%_"]}},{"n":"vault-backtrace","s":{"p":["*%_"],"r":"Mu"},"m":0,"k":"m"},{"s":{"r":"Mu","p":["@auto","%init","*%_"]},"n":"BUILDALL","m":0,"k":"s"}],"k":"c","b":"A","a":[{"n":"$.word","t":"Mu","k":"v"},{"t":"Mu","n":"$.needparens","k":"v"},{"n":"$.filename","t":"Mu","k":"v"},{"k":"v","t":"Mu","n":"$.pos"},{"n":"$.line","t":"Mu","k":"v"},{"k":"v","n":"$.column","t":"Mu"},{"k":"v","n":"@.modules","t":"Positional"},{"t":"Mu","n":"$.is-compile-time","k":"v"},{"k":"v","t":"Mu","n":"$.pre"},{"t":"Mu","n":"$.post","k":"v"},{"n":"@.highexpect","t":"Positional","k":"v"},{"k":"v","n":"$!ex","t":"Mu"},{"t":"Mu","n":"$!bt","k":"v"}],"n":"X::Syntax::KeywordAsFunction","t":"X::Syntax::KeywordAsFunction"},{"n":"X::Syntax::P5","t":"X::Syntax::P5","k":"c","m":[{"s":{"r":"Mu","p":["*%_"]},"n":"message","m":0,"k":"m"},{"k":"m","m":0,"n":"sorry_heading","s":{"r":"Mu","p":["*%_"]}},{"m":0,"k":"m","n":"SET_FILE_LINE","s":{"r":"Mu","p":["$file","$line","*%_"]}},{"k":"m","m":1,"s":{"p":["*%_"],"r":"Mu"},"n":"gist"},{"n":"gist","s":{"r":"Mu","p":["*%_"]},"m":1,"k":"m"},{"s":{"p":["*%_"],"r":"Mu"},"n":"gist","k":"m","m":1},{"s":{"r":"Mu","p":[":$sorry = Bool::True",":$expect = Bool::True","*%_"]},"n":"gist","k":"m","m":1},{"n":"filename","s":{"p":["*%_"],"r":"Mu"},"k":"m","m":0},{"s":{"r":"Mu","p":["*%_"]},"n":"pos","m":0,"k":"m"},{"s":{"r":"Mu","p":["*%_"]},"n":"line","k":"m","m":0},{"m":0,"k":"m","s":{"p":["*%_"],"r":"Mu"},"n":"column"},{"n":"modules","s":{"p":["*%_"],"r":"Mu"},"k":"m","m":0},{"n":"is-compile-time","s":{"p":["*%_"],"r":"Mu"},"k":"m","m":0},{"n":"pre","s":{"p":["*%_"],"r":"Mu"},"k":"m","m":0},{"s":{"r":"Mu","p":["*%_"]},"n":"post","m":0,"k":"m"},{"k":"m","m":0,"s":{"r":"Mu","p":["*%_"]},"n":"highexpect"},{"k":"s","m":0,"s":{"p":["@auto","%init","*%_"],"r":"Mu"},"n":"BUILDALL"},{"s":{"r":"Bool","p":["*%_"]},"n":"resume","k":"m","m":0},{"m":0,"k":"m","s":{"r":"Mu","p":["*%_"]},"n":"reset-backtrace"},{"k":"m","m":0,"s":{"r":"Bool","p":["*%_"]},"n":"is-compile-time"},{"k":"m","m":0,"n":"throw","s":{"r":"Mu","p":["$bt?","*%_"]}},{"s":{"p":["*%_"],"r":"Mu"},"n":"fail","m":0,"k":"m"},{"m":1,"k":"m","n":"Str","s":{"p":["*%_"],"r":"Mu"}},{"m":1,"k":"m","s":{"p":["*%_"],"r":"Mu"},"n":"Str"},{"m":1,"k":"m","s":{"p":["*%_"],"r":"Mu"},"n":"Str"},{"s":{"r":"Mu","p":["*%_"]},"n":"die","k":"m","m":0},{"m":0,"k":"m","s":{"p":["*%_"],"r":"Mu"},"n":"rethrow"},{"m":0,"k":"m","n":"backtrace","s":{"p":["*%_"],"r":"Mu"}},{"n":"gist","s":{"p":["*%_"],"r":"Mu"},"k":"m","m":1},{"m":1,"k":"m","n":"gist","s":{"p":["*%_"],"r":"Mu"}},{"k":"m","m":1,"n":"gist","s":{"p":["*%_"],"r":"Mu"}},{"s":{"p":["*%_"],"r":"Mu"},"n":"vault-backtrace","m":0,"k":"m"},{"m":0,"k":"s","s":{"p":["@auto","%init","*%_"],"r":"Mu"},"n":"BUILDALL"}],"a":[{"k":"v","t":"Mu","n":"$.filename"},{"k":"v","t":"Mu","n":"$.pos"},{"n":"$.line","t":"Mu","k":"v"},{"k":"v","n":"$.column","t":"Mu"},{"k":"v","n":"@.modules","t":"Positional"},{"k":"v","n":"$.is-compile-time","t":"Mu"},{"k":"v","t":"Mu","n":"$.pre"},{"t":"Mu","n":"$.post","k":"v"},{"n":"@.highexpect","t":"Positional","k":"v"},{"k":"v","t":"Mu","n":"$!ex"},{"t":"Mu","n":"$!bt","k":"v"}],"b":"A","d":"TITLE\nclass X::Syntax::P5\n\nSUBTITLE\nCompilation error due to use of Perl 5-only syntax\n\n    class X::Syntax::P5 does X::Syntax { }\n\nSyntax error thrown when some piece of code is clearly Perl 5, not Raku.\n\nFor example\n\n    for my $a (1, 2) { };\n\n\ndies with\n\n    ===SORRY!===\n    This appears to be Perl 5 code\n"},{"k":"c","m":[{"k":"m","m":0,"n":"message","s":{"p":["*%_"],"r":"Mu"}},{"n":"sorry_heading","s":{"r":"Mu","p":["*%_"]},"k":"m","m":0},{"n":"SET_FILE_LINE","s":{"p":["$file","$line","*%_"],"r":"Mu"},"k":"m","m":0},{"s":{"r":"Mu","p":["*%_"]},"n":"gist","m":1,"k":"m"},{"k":"m","m":1,"n":"gist","s":{"p":["*%_"],"r":"Mu"}},{"m":1,"k":"m","s":{"p":["*%_"],"r":"Mu"},"n":"gist"},{"k":"m","m":1,"n":"gist","s":{"p":[":$sorry = Bool::True",":$expect = Bool::True","*%_"],"r":"Mu"}},{"n":"category","s":{"p":["*%_"],"r":"Mu"},"k":"m","m":0},{"m":0,"k":"m","n":"opname","s":{"p":["*%_"],"r":"Mu"}},{"m":0,"k":"m","n":"hint","s":{"p":["*%_"],"r":"Mu"}},{"s":{"r":"Mu","p":["*%_"]},"n":"filename","m":0,"k":"m"},{"m":0,"k":"m","s":{"r":"Mu","p":["*%_"]},"n":"pos"},{"n":"line","s":{"p":["*%_"],"r":"Mu"},"m":0,"k":"m"},{"n":"column","s":{"r":"Mu","p":["*%_"]},"m":0,"k":"m"},{"s":{"p":["*%_"],"r":"Mu"},"n":"modules","k":"m","m":0},{"n":"is-compile-time","s":{"r":"Mu","p":["*%_"]},"k":"m","m":0},{"m":0,"k":"m","n":"pre","s":{"p":["*%_"],"r":"Mu"}},{"m":0,"k":"m","s":{"r":"Mu","p":["*%_"]},"n":"post"},{"m":0,"k":"m","s":{"p":["*%_"],"r":"Mu"},"n":"highexpect"},{"k":"s","m":0,"s":{"r":"Mu","p":["@auto","%init","*%_"]},"n":"BUILDALL"},{"n":"resume","s":{"r":"Bool","p":["*%_"]},"m":0,"k":"m"},{"s":{"p":["*%_"],"r":"Mu"},"n":"reset-backtrace","m":0,"k":"m"},{"n":"is-compile-time","s":{"p":["*%_"],"r":"Bool"},"m":0,"k":"m"},{"s":{"p":["$bt?","*%_"],"r":"Mu"},"n":"throw","k":"m","m":0},{"k":"m","m":0,"n":"fail","s":{"p":["*%_"],"r":"Mu"}},{"m":1,"k":"m","n":"Str","s":{"p":["*%_"],"r":"Mu"}},{"s":{"r":"Mu","p":["*%_"]},"n":"Str","m":1,"k":"m"},{"n":"Str","s":{"r":"Mu","p":["*%_"]},"k":"m","m":1},{"k":"m","m":0,"n":"die","s":{"r":"Mu","p":["*%_"]}},{"n":"rethrow","s":{"r":"Mu","p":["*%_"]},"m":0,"k":"m"},{"k":"m","m":0,"n":"backtrace","s":{"p":["*%_"],"r":"Mu"}},{"n":"gist","s":{"r":"Mu","p":["*%_"]},"m":1,"k":"m"},{"s":{"r":"Mu","p":["*%_"]},"n":"gist","m":1,"k":"m"},{"m":1,"k":"m","s":{"r":"Mu","p":["*%_"]},"n":"gist"},{"n":"vault-backtrace","s":{"p":["*%_"],"r":"Mu"},"k":"m","m":0},{"m":0,"k":"s","n":"BUILDALL","s":{"p":["@auto","%init","*%_"],"r":"Mu"}}],"b":"A","a":[{"k":"v","n":"$.category","t":"Mu"},{"n":"$.opname","t":"Mu","k":"v"},{"k":"v","t":"Mu","n":"$.hint"},{"k":"v","t":"Mu","n":"$.filename"},{"t":"Mu","n":"$.pos","k":"v"},{"n":"$.line","t":"Mu","k":"v"},{"n":"$.column","t":"Mu","k":"v"},{"k":"v","t":"Positional","n":"@.modules"},{"k":"v","n":"$.is-compile-time","t":"Mu"},{"t":"Mu","n":"$.pre","k":"v"},{"k":"v","t":"Mu","n":"$.post"},{"k":"v","n":"@.highexpect","t":"Positional"},{"k":"v","n":"$!ex","t":"Mu"},{"k":"v","n":"$!bt","t":"Mu"}],"n":"X::Syntax::Extension::SpecialForm","t":"X::Syntax::Extension::SpecialForm"},{"m":[{"s":{"r":"Mu","p":["*%_"]},"n":"message","m":0,"k":"m"},{"m":0,"k":"m","s":{"r":"Mu","p":["*%_"]},"n":"sorry_heading"},{"n":"SET_FILE_LINE","s":{"p":["$file","$line","*%_"],"r":"Mu"},"m":0,"k":"m"},{"s":{"p":["*%_"],"r":"Mu"},"n":"gist","k":"m","m":1},{"m":1,"k":"m","n":"gist","s":{"p":["*%_"],"r":"Mu"}},{"n":"gist","s":{"r":"Mu","p":["*%_"]},"k":"m","m":1},{"s":{"p":[":$sorry = Bool::True",":$expect = Bool::True","*%_"],"r":"Mu"},"n":"gist","k":"m","m":1},{"s":{"p":["*%_"],"r":"Mu"},"n":"name","k":"m","m":0},{"n":"filename","s":{"r":"Mu","p":["*%_"]},"m":0,"k":"m"},{"k":"m","m":0,"n":"pos","s":{"p":["*%_"],"r":"Mu"}},{"s":{"r":"Mu","p":["*%_"]},"n":"line","m":0,"k":"m"},{"k":"m","m":0,"s":{"r":"Mu","p":["*%_"]},"n":"column"},{"n":"modules","s":{"r":"Mu","p":["*%_"]},"m":0,"k":"m"},{"s":{"p":["*%_"],"r":"Mu"},"n":"is-compile-time","m":0,"k":"m"},{"n":"pre","s":{"p":["*%_"],"r":"Mu"},"k":"m","m":0},{"s":{"r":"Mu","p":["*%_"]},"n":"post","k":"m","m":0},{"k":"m","m":0,"n":"highexpect","s":{"p":["*%_"],"r":"Mu"}},{"s":{"r":"Mu","p":["@auto","%init","*%_"]},"n":"BUILDALL","k":"s","m":0},{"n":"resume","s":{"r":"Bool","p":["*%_"]},"k":"m","m":0},{"k":"m","m":0,"s":{"p":["*%_"],"r":"Mu"},"n":"reset-backtrace"},{"m":0,"k":"m","s":{"p":["*%_"],"r":"Bool"},"n":"is-compile-time"},{"n":"throw","s":{"r":"Mu","p":["$bt?","*%_"]},"k":"m","m":0},{"k":"m","m":0,"s":{"r":"Mu","p":["*%_"]},"n":"fail"},{"k":"m","m":1,"n":"Str","s":{"p":["*%_"],"r":"Mu"}},{"s":{"r":"Mu","p":["*%_"]},"n":"Str","m":1,"k":"m"},{"m":1,"k":"m","s":{"p":["*%_"],"r":"Mu"},"n":"Str"},{"m":0,"k":"m","s":{"r":"Mu","p":["*%_"]},"n":"die"},{"n":"rethrow","s":{"r":"Mu","p":["*%_"]},"k":"m","m":0},{"k":"m","m":0,"s":{"r":"Mu","p":["*%_"]},"n":"backtrace"},{"s":{"r":"Mu","p":["*%_"]},"n":"gist","m":1,"k":"m"},{"s":{"r":"Mu","p":["*%_"]},"n":"gist","k":"m","m":1},{"n":"gist","s":{"r":"Mu","p":["*%_"]},"k":"m","m":1},{"m":0,"k":"m","n":"vault-backtrace","s":{"p":["*%_"],"r":"Mu"}},{"k":"s","m":0,"s":{"p":["@auto","%init","*%_"],"r":"Mu"},"n":"BUILDALL"}],"k":"c","b":"A","a":[{"t":"Mu","n":"$.name","k":"v"},{"n":"$.filename","t":"Mu","k":"v"},{"n":"$.pos","t":"Mu","k":"v"},{"t":"Mu","n":"$.line","k":"v"},{"n":"$.column","t":"Mu","k":"v"},{"k":"v","t":"Positional","n":"@.modules"},{"k":"v","t":"Mu","n":"$.is-compile-time"},{"k":"v","n":"$.pre","t":"Mu"},{"k":"v","t":"Mu","n":"$.post"},{"k":"v","t":"Positional","n":"@.highexpect"},{"k":"v","t":"Mu","n":"$!ex"},{"k":"v","n":"$!bt","t":"Mu"}],"t":"X::Syntax::Extension::TooComplex","n":"X::Syntax::Extension::TooComplex"},{"b":"A","a":[{"n":"$.category","t":"Mu","k":"v"},{"k":"v","n":"$.filename","t":"Mu"},{"n":"$.pos","t":"Mu","k":"v"},{"n":"$.line","t":"Mu","k":"v"},{"k":"v","t":"Mu","n":"$.column"},{"k":"v","n":"@.modules","t":"Positional"},{"n":"$.is-compile-time","t":"Mu","k":"v"},{"k":"v","t":"Mu","n":"$.pre"},{"k":"v","t":"Mu","n":"$.post"},{"t":"Positional","n":"@.highexpect","k":"v"},{"t":"Mu","n":"$!ex","k":"v"},{"t":"Mu","n":"$!bt","k":"v"}],"m":[{"k":"m","m":0,"s":{"p":["*%_"],"r":"Mu"},"n":"message"},{"k":"m","m":0,"s":{"p":["*%_"],"r":"Mu"},"n":"sorry_heading"},{"s":{"r":"Mu","p":["$file","$line","*%_"]},"n":"SET_FILE_LINE","k":"m","m":0},{"k":"m","m":1,"s":{"p":["*%_"],"r":"Mu"},"n":"gist"},{"s":{"r":"Mu","p":["*%_"]},"n":"gist","k":"m","m":1},{"k":"m","m":1,"s":{"r":"Mu","p":["*%_"]},"n":"gist"},{"k":"m","m":1,"n":"gist","s":{"r":"Mu","p":[":$sorry = Bool::True",":$expect = Bool::True","*%_"]}},{"m":0,"k":"m","n":"category","s":{"p":["*%_"],"r":"Mu"}},{"k":"m","m":0,"n":"filename","s":{"r":"Mu","p":["*%_"]}},{"m":0,"k":"m","n":"pos","s":{"r":"Mu","p":["*%_"]}},{"k":"m","m":0,"n":"line","s":{"r":"Mu","p":["*%_"]}},{"k":"m","m":0,"n":"column","s":{"p":["*%_"],"r":"Mu"}},{"k":"m","m":0,"s":{"r":"Mu","p":["*%_"]},"n":"modules"},{"s":{"r":"Mu","p":["*%_"]},"n":"is-compile-time","m":0,"k":"m"},{"n":"pre","s":{"r":"Mu","p":["*%_"]},"k":"m","m":0},{"n":"post","s":{"r":"Mu","p":["*%_"]},"k":"m","m":0},{"n":"highexpect","s":{"p":["*%_"],"r":"Mu"},"k":"m","m":0},{"s":{"r":"Mu","p":["@auto","%init","*%_"]},"n":"BUILDALL","k":"s","m":0},{"k":"m","m":0,"s":{"p":["*%_"],"r":"Bool"},"n":"resume"},{"m":0,"k":"m","n":"reset-backtrace","s":{"r":"Mu","p":["*%_"]}},{"s":{"r":"Bool","p":["*%_"]},"n":"is-compile-time","m":0,"k":"m"},{"s":{"r":"Mu","p":["$bt?","*%_"]},"n":"throw","k":"m","m":0},{"s":{"p":["*%_"],"r":"Mu"},"n":"fail","k":"m","m":0},{"n":"Str","s":{"r":"Mu","p":["*%_"]},"m":1,"k":"m"},{"k":"m","m":1,"n":"Str","s":{"p":["*%_"],"r":"Mu"}},{"s":{"p":["*%_"],"r":"Mu"},"n":"Str","m":1,"k":"m"},{"n":"die","s":{"p":["*%_"],"r":"Mu"},"m":0,"k":"m"},{"n":"rethrow","s":{"p":["*%_"],"r":"Mu"},"m":0,"k":"m"},{"k":"m","m":0,"n":"backtrace","s":{"p":["*%_"],"r":"Mu"}},{"n":"gist","s":{"r":"Mu","p":["*%_"]},"k":"m","m":1},{"s":{"r":"Mu","p":["*%_"]},"n":"gist","k":"m","m":1},{"n":"gist","s":{"r":"Mu","p":["*%_"]},"m":1,"k":"m"},{"k":"m","m":0,"n":"vault-backtrace","s":{"r":"Mu","p":["*%_"]}},{"k":"s","m":0,"n":"BUILDALL","s":{"r":"Mu","p":["@auto","%init","*%_"]}}],"k":"c","t":"X::Syntax::Extension::Category","n":"X::Syntax::Extension::Category"},{"t":"X::Syntax::Extension::Null","n":"X::Syntax::Extension::Null","k":"c","m":[{"k":"m","m":0,"n":"message","s":{"p":["*%_"],"r":"Mu"}},{"m":0,"k":"m","n":"sorry_heading","s":{"r":"Mu","p":["*%_"]}},{"k":"m","m":0,"s":{"p":["$file","$line","*%_"],"r":"Mu"},"n":"SET_FILE_LINE"},{"k":"m","m":1,"n":"gist","s":{"r":"Mu","p":["*%_"]}},{"s":{"r":"Mu","p":["*%_"]},"n":"gist","k":"m","m":1},{"n":"gist","s":{"r":"Mu","p":["*%_"]},"m":1,"k":"m"},{"m":1,"k":"m","n":"gist","s":{"r":"Mu","p":[":$sorry = Bool::True",":$expect = Bool::True","*%_"]}},{"s":{"r":"Mu","p":["*%_"]},"n":"filename","m":0,"k":"m"},{"s":{"r":"Mu","p":["*%_"]},"n":"pos","k":"m","m":0},{"n":"line","s":{"p":["*%_"],"r":"Mu"},"k":"m","m":0},{"k":"m","m":0,"n":"column","s":{"r":"Mu","p":["*%_"]}},{"m":0,"k":"m","s":{"r":"Mu","p":["*%_"]},"n":"modules"},{"m":0,"k":"m","n":"is-compile-time","s":{"p":["*%_"],"r":"Mu"}},{"s":{"r":"Mu","p":["*%_"]},"n":"pre","m":0,"k":"m"},{"m":0,"k":"m","n":"post","s":{"p":["*%_"],"r":"Mu"}},{"n":"highexpect","s":{"p":["*%_"],"r":"Mu"},"k":"m","m":0},{"s":{"r":"Mu","p":["@auto","%init","*%_"]},"n":"BUILDALL","k":"s","m":0},{"k":"m","m":0,"s":{"p":["*%_"],"r":"Bool"},"n":"resume"},{"m":0,"k":"m","s":{"r":"Mu","p":["*%_"]},"n":"reset-backtrace"},{"k":"m","m":0,"n":"is-compile-time","s":{"r":"Bool","p":["*%_"]}},{"m":0,"k":"m","n":"throw","s":{"p":["$bt?","*%_"],"r":"Mu"}},{"s":{"p":["*%_"],"r":"Mu"},"n":"fail","m":0,"k":"m"},{"k":"m","m":1,"s":{"p":["*%_"],"r":"Mu"},"n":"Str"},{"s":{"p":["*%_"],"r":"Mu"},"n":"Str","m":1,"k":"m"},{"k":"m","m":1,"n":"Str","s":{"r":"Mu","p":["*%_"]}},{"m":0,"k":"m","n":"die","s":{"r":"Mu","p":["*%_"]}},{"m":0,"k":"m","s":{"r":"Mu","p":["*%_"]},"n":"rethrow"},{"s":{"r":"Mu","p":["*%_"]},"n":"backtrace","m":0,"k":"m"},{"s":{"p":["*%_"],"r":"Mu"},"n":"gist","m":1,"k":"m"},{"k":"m","m":1,"s":{"p":["*%_"],"r":"Mu"},"n":"gist"},{"n":"gist","s":{"r":"Mu","p":["*%_"]},"k":"m","m":1},{"n":"vault-backtrace","s":{"r":"Mu","p":["*%_"]},"k":"m","m":0},{"k":"s","m":0,"n":"BUILDALL","s":{"r":"Mu","p":["@auto","%init","*%_"]}}],"b":"A","a":[{"k":"v","n":"$.filename","t":"Mu"},{"n":"$.pos","t":"Mu","k":"v"},{"k":"v","t":"Mu","n":"$.line"},{"k":"v","n":"$.column","t":"Mu"},{"k":"v","t":"Positional","n":"@.modules"},{"k":"v","n":"$.is-compile-time","t":"Mu"},{"n":"$.pre","t":"Mu","k":"v"},{"n":"$.post","t":"Mu","k":"v"},{"k":"v","n":"@.highexpect","t":"Positional"},{"t":"Mu","n":"$!ex","k":"v"},{"n":"$!bt","t":"Mu","k":"v"}]},{"b":"A","a":[{"k":"v","t":"Mu","n":"$.filename"},{"k":"v","n":"$.pos","t":"Mu"},{"n":"$.line","t":"Mu","k":"v"},{"k":"v","n":"$.column","t":"Mu"},{"k":"v","t":"Positional","n":"@.modules"},{"n":"$.is-compile-time","t":"Mu","k":"v"},{"k":"v","t":"Mu","n":"$.pre"},{"n":"$.post","t":"Mu","k":"v"},{"t":"Positional","n":"@.highexpect","k":"v"},{"k":"v","t":"Mu","n":"$!ex"},{"k":"v","t":"Mu","n":"$!bt"}],"k":"c","m":[{"k":"m","m":0,"n":"message","s":{"r":"Mu","p":["*%_"]}},{"s":{"p":["*%_"],"r":"Mu"},"n":"sorry_heading","m":0,"k":"m"},{"s":{"r":"Mu","p":["$file","$line","*%_"]},"n":"SET_FILE_LINE","m":0,"k":"m"},{"m":1,"k":"m","s":{"r":"Mu","p":["*%_"]},"n":"gist"},{"k":"m","m":1,"n":"gist","s":{"r":"Mu","p":["*%_"]}},{"s":{"r":"Mu","p":["*%_"]},"n":"gist","m":1,"k":"m"},{"n":"gist","s":{"p":[":$sorry = Bool::True",":$expect = Bool::True","*%_"],"r":"Mu"},"k":"m","m":1},{"m":0,"k":"m","n":"filename","s":{"p":["*%_"],"r":"Mu"}},{"m":0,"k":"m","s":{"p":["*%_"],"r":"Mu"},"n":"pos"},{"k":"m","m":0,"n":"line","s":{"r":"Mu","p":["*%_"]}},{"m":0,"k":"m","n":"column","s":{"r":"Mu","p":["*%_"]}},{"s":{"r":"Mu","p":["*%_"]},"n":"modules","m":0,"k":"m"},{"n":"is-compile-time","s":{"p":["*%_"],"r":"Mu"},"m":0,"k":"m"},{"s":{"p":["*%_"],"r":"Mu"},"n":"pre","k":"m","m":0},{"n":"post","s":{"p":["*%_"],"r":"Mu"},"m":0,"k":"m"},{"m":0,"k":"m","s":{"r":"Mu","p":["*%_"]},"n":"highexpect"},{"n":"BUILDALL","s":{"r":"Mu","p":["@auto","%init","*%_"]},"m":0,"k":"s"},{"n":"resume","s":{"p":["*%_"],"r":"Bool"},"m":0,"k":"m"},{"n":"reset-backtrace","s":{"r":"Mu","p":["*%_"]},"m":0,"k":"m"},{"m":0,"k":"m","n":"is-compile-time","s":{"r":"Bool","p":["*%_"]}},{"m":0,"k":"m","n":"throw","s":{"p":["$bt?","*%_"],"r":"Mu"}},{"k":"m","m":0,"n":"fail","s":{"p":["*%_"],"r":"Mu"}},{"s":{"p":["*%_"],"r":"Mu"},"n":"Str","m":1,"k":"m"},{"s":{"p":["*%_"],"r":"Mu"},"n":"Str","k":"m","m":1},{"m":1,"k":"m","n":"Str","s":{"r":"Mu","p":["*%_"]}},{"n":"die","s":{"r":"Mu","p":["*%_"]},"k":"m","m":0},{"n":"rethrow","s":{"p":["*%_"],"r":"Mu"},"k":"m","m":0},{"s":{"r":"Mu","p":["*%_"]},"n":"backtrace","m":0,"k":"m"},{"s":{"r":"Mu","p":["*%_"]},"n":"gist","k":"m","m":1},{"s":{"p":["*%_"],"r":"Mu"},"n":"gist","k":"m","m":1},{"s":{"r":"Mu","p":["*%_"]},"n":"gist","k":"m","m":1},{"n":"vault-backtrace","s":{"r":"Mu","p":["*%_"]},"m":0,"k":"m"},{"n":"BUILDALL","s":{"r":"Mu","p":["@auto","%init","*%_"]},"m":0,"k":"s"}],"d":"TITLE\nclass X::Syntax::Signature::InvocantMarker\n\nSUBTITLE\nCompilation error due to a misplaced invocant marker in a signature\n\n    class X::Syntax::Signature::InvocantMarker does X::Syntax { }\n\nSyntax error when the invocant in a signature is anywhere else than after\nthe first parameter.\n\nFor example\n\n    :($a, $b: $c);\n\n\ndies with\n\n    ===SORRY!===\n    Can only use : as invocant marker in a signature after the first parameter\n\n\nSee also: Signature.","n":"X::Syntax::Signature::InvocantMarker","t":"X::Syntax::Signature::InvocantMarker"},{"n":"X::Syntax::Signature::InvocantNotAllowed","t":"X::Syntax::Signature::InvocantNotAllowed","a":[{"n":"$.filename","t":"Mu","k":"v"},{"k":"v","t":"Mu","n":"$.pos"},{"k":"v","n":"$.line","t":"Mu"},{"t":"Mu","n":"$.column","k":"v"},{"k":"v","t":"Positional","n":"@.modules"},{"t":"Mu","n":"$.is-compile-time","k":"v"},{"n":"$.pre","t":"Mu","k":"v"},{"k":"v","n":"$.post","t":"Mu"},{"k":"v","n":"@.highexpect","t":"Positional"},{"k":"v","t":"Mu","n":"$!ex"},{"k":"v","t":"Mu","n":"$!bt"}],"b":"A","k":"c","m":[{"m":0,"k":"m","n":"message","s":{"r":"Mu","p":["*%_"]}},{"k":"m","m":0,"n":"sorry_heading","s":{"p":["*%_"],"r":"Mu"}},{"k":"m","m":0,"s":{"p":["$file","$line","*%_"],"r":"Mu"},"n":"SET_FILE_LINE"},{"n":"gist","s":{"p":["*%_"],"r":"Mu"},"m":1,"k":"m"},{"s":{"p":["*%_"],"r":"Mu"},"n":"gist","k":"m","m":1},{"n":"gist","s":{"r":"Mu","p":["*%_"]},"k":"m","m":1},{"k":"m","m":1,"s":{"r":"Mu","p":[":$sorry = Bool::True",":$expect = Bool::True","*%_"]},"n":"gist"},{"k":"m","m":0,"n":"filename","s":{"r":"Mu","p":["*%_"]}},{"s":{"r":"Mu","p":["*%_"]},"n":"pos","k":"m","m":0},{"s":{"r":"Mu","p":["*%_"]},"n":"line","m":0,"k":"m"},{"k":"m","m":0,"n":"column","s":{"r":"Mu","p":["*%_"]}},{"n":"modules","s":{"p":["*%_"],"r":"Mu"},"m":0,"k":"m"},{"k":"m","m":0,"n":"is-compile-time","s":{"r":"Mu","p":["*%_"]}},{"m":0,"k":"m","s":{"p":["*%_"],"r":"Mu"},"n":"pre"},{"n":"post","s":{"p":["*%_"],"r":"Mu"},"k":"m","m":0},{"m":0,"k":"m","n":"highexpect","s":{"p":["*%_"],"r":"Mu"}},{"k":"s","m":0,"n":"BUILDALL","s":{"r":"Mu","p":["@auto","%init","*%_"]}},{"k":"m","m":0,"s":{"p":["*%_"],"r":"Bool"},"n":"resume"},{"m":0,"k":"m","s":{"p":["*%_"],"r":"Mu"},"n":"reset-backtrace"},{"n":"is-compile-time","s":{"r":"Bool","p":["*%_"]},"k":"m","m":0},{"m":0,"k":"m","s":{"p":["$bt?","*%_"],"r":"Mu"},"n":"throw"},{"m":0,"k":"m","n":"fail","s":{"p":["*%_"],"r":"Mu"}},{"m":1,"k":"m","n":"Str","s":{"r":"Mu","p":["*%_"]}},{"k":"m","m":1,"s":{"p":["*%_"],"r":"Mu"},"n":"Str"},{"m":1,"k":"m","n":"Str","s":{"r":"Mu","p":["*%_"]}},{"s":{"p":["*%_"],"r":"Mu"},"n":"die","m":0,"k":"m"},{"n":"rethrow","s":{"r":"Mu","p":["*%_"]},"k":"m","m":0},{"m":0,"k":"m","n":"backtrace","s":{"p":["*%_"],"r":"Mu"}},{"m":1,"k":"m","s":{"p":["*%_"],"r":"Mu"},"n":"gist"},{"k":"m","m":1,"n":"gist","s":{"p":["*%_"],"r":"Mu"}},{"n":"gist","s":{"p":["*%_"],"r":"Mu"},"m":1,"k":"m"},{"k":"m","m":0,"n":"vault-backtrace","s":{"r":"Mu","p":["*%_"]}},{"k":"s","m":0,"n":"BUILDALL","s":{"p":["@auto","%init","*%_"],"r":"Mu"}}]},{"b":"A","a":[{"t":"Mu","n":"$.filename","k":"v"},{"k":"v","n":"$.pos","t":"Mu"},{"n":"$.line","t":"Mu","k":"v"},{"k":"v","n":"$.column","t":"Mu"},{"n":"@.modules","t":"Positional","k":"v"},{"n":"$.is-compile-time","t":"Mu","k":"v"},{"n":"$.pre","t":"Mu","k":"v"},{"t":"Mu","n":"$.post","k":"v"},{"k":"v","t":"Positional","n":"@.highexpect"},{"k":"v","t":"Mu","n":"$!ex"},{"k":"v","n":"$!bt","t":"Mu"}],"m":[{"m":0,"k":"m","s":{"p":["*%_"],"r":"Mu"},"n":"message"},{"m":0,"k":"m","n":"sorry_heading","s":{"p":["*%_"],"r":"Mu"}},{"n":"SET_FILE_LINE","s":{"p":["$file","$line","*%_"],"r":"Mu"},"k":"m","m":0},{"s":{"r":"Mu","p":["*%_"]},"n":"gist","m":1,"k":"m"},{"k":"m","m":1,"n":"gist","s":{"r":"Mu","p":["*%_"]}},{"n":"gist","s":{"p":["*%_"],"r":"Mu"},"k":"m","m":1},{"n":"gist","s":{"r":"Mu","p":[":$sorry = Bool::True",":$expect = Bool::True","*%_"]},"m":1,"k":"m"},{"s":{"r":"Mu","p":["*%_"]},"n":"filename","k":"m","m":0},{"m":0,"k":"m","n":"pos","s":{"r":"Mu","p":["*%_"]}},{"m":0,"k":"m","s":{"r":"Mu","p":["*%_"]},"n":"line"},{"s":{"r":"Mu","p":["*%_"]},"n":"column","k":"m","m":0},{"m":0,"k":"m","n":"modules","s":{"r":"Mu","p":["*%_"]}},{"m":0,"k":"m","n":"is-compile-time","s":{"p":["*%_"],"r":"Mu"}},{"n":"pre","s":{"p":["*%_"],"r":"Mu"},"m":0,"k":"m"},{"s":{"p":["*%_"],"r":"Mu"},"n":"post","m":0,"k":"m"},{"m":0,"k":"m","s":{"r":"Mu","p":["*%_"]},"n":"highexpect"},{"m":0,"k":"s","s":{"p":["@auto","%init","*%_"],"r":"Mu"},"n":"BUILDALL"},{"s":{"p":["*%_"],"r":"Bool"},"n":"resume","k":"m","m":0},{"k":"m","m":0,"s":{"p":["*%_"],"r":"Mu"},"n":"reset-backtrace"},{"s":{"r":"Bool","p":["*%_"]},"n":"is-compile-time","k":"m","m":0},{"m":0,"k":"m","s":{"r":"Mu","p":["$bt?","*%_"]},"n":"throw"},{"k":"m","m":0,"s":{"r":"Mu","p":["*%_"]},"n":"fail"},{"k":"m","m":1,"n":"Str","s":{"p":["*%_"],"r":"Mu"}},{"m":1,"k":"m","s":{"r":"Mu","p":["*%_"]},"n":"Str"},{"s":{"r":"Mu","p":["*%_"]},"n":"Str","k":"m","m":1},{"k":"m","m":0,"n":"die","s":{"r":"Mu","p":["*%_"]}},{"m":0,"k":"m","s":{"p":["*%_"],"r":"Mu"},"n":"rethrow"},{"s":{"p":["*%_"],"r":"Mu"},"n":"backtrace","k":"m","m":0},{"k":"m","m":1,"n":"gist","s":{"p":["*%_"],"r":"Mu"}},{"s":{"r":"Mu","p":["*%_"]},"n":"gist","k":"m","m":1},{"m":1,"k":"m","n":"gist","s":{"r":"Mu","p":["*%_"]}},{"s":{"p":["*%_"],"r":"Mu"},"n":"vault-backtrace","m":0,"k":"m"},{"m":0,"k":"s","n":"BUILDALL","s":{"p":["@auto","%init","*%_"],"r":"Mu"}}],"k":"c","d":"TITLE\nclass X::Syntax::Variable::Match\n\nSUBTITLE\nCompilation error due to declaring a match variable\n\n    class X::Syntax::Variable::Match does X::Syntax { }\n\nSyntax error thrown when a match variable like $<thing>  was declared.\n\nFor example\n\n    my $<thing>;\n\n\ndies with\n\n    ===SORRY!===\n    Cannot declare a match variable\n","n":"X::Syntax::Variable::Match","t":"X::Syntax::Variable::Match"},{"n":"X::Syntax::Variable::IndirectDeclaration","t":"X::Syntax::Variable::IndirectDeclaration","a":[{"n":"$.filename","t":"Mu","k":"v"},{"k":"v","n":"$.pos","t":"Mu"},{"t":"Mu","n":"$.line","k":"v"},{"k":"v","n":"$.column","t":"Mu"},{"t":"Positional","n":"@.modules","k":"v"},{"k":"v","t":"Mu","n":"$.is-compile-time"},{"k":"v","t":"Mu","n":"$.pre"},{"t":"Mu","n":"$.post","k":"v"},{"k":"v","t":"Positional","n":"@.highexpect"},{"k":"v","t":"Mu","n":"$!ex"},{"k":"v","t":"Mu","n":"$!bt"}],"b":"A","m":[{"m":0,"k":"m","s":{"p":["*%_"],"r":"Mu"},"n":"message"},{"n":"sorry_heading","s":{"r":"Mu","p":["*%_"]},"k":"m","m":0},{"k":"m","m":0,"n":"SET_FILE_LINE","s":{"p":["$file","$line","*%_"],"r":"Mu"}},{"n":"gist","s":{"p":["*%_"],"r":"Mu"},"m":1,"k":"m"},{"s":{"r":"Mu","p":["*%_"]},"n":"gist","k":"m","m":1},{"n":"gist","s":{"p":["*%_"],"r":"Mu"},"k":"m","m":1},{"s":{"p":[":$sorry = Bool::True",":$expect = Bool::True","*%_"],"r":"Mu"},"n":"gist","k":"m","m":1},{"m":0,"k":"m","n":"filename","s":{"r":"Mu","p":["*%_"]}},{"n":"pos","s":{"r":"Mu","p":["*%_"]},"k":"m","m":0},{"k":"m","m":0,"n":"line","s":{"p":["*%_"],"r":"Mu"}},{"m":0,"k":"m","s":{"p":["*%_"],"r":"Mu"},"n":"column"},{"n":"modules","s":{"r":"Mu","p":["*%_"]},"m":0,"k":"m"},{"k":"m","m":0,"n":"is-compile-time","s":{"r":"Mu","p":["*%_"]}},{"m":0,"k":"m","n":"pre","s":{"r":"Mu","p":["*%_"]}},{"m":0,"k":"m","s":{"p":["*%_"],"r":"Mu"},"n":"post"},{"k":"m","m":0,"n":"highexpect","s":{"r":"Mu","p":["*%_"]}},{"s":{"p":["@auto","%init","*%_"],"r":"Mu"},"n":"BUILDALL","k":"s","m":0},{"m":0,"k":"m","s":{"p":["*%_"],"r":"Bool"},"n":"resume"},{"k":"m","m":0,"n":"reset-backtrace","s":{"p":["*%_"],"r":"Mu"}},{"m":0,"k":"m","s":{"r":"Bool","p":["*%_"]},"n":"is-compile-time"},{"k":"m","m":0,"n":"throw","s":{"p":["$bt?","*%_"],"r":"Mu"}},{"n":"fail","s":{"r":"Mu","p":["*%_"]},"k":"m","m":0},{"s":{"r":"Mu","p":["*%_"]},"n":"Str","k":"m","m":1},{"k":"m","m":1,"n":"Str","s":{"p":["*%_"],"r":"Mu"}},{"n":"Str","s":{"r":"Mu","p":["*%_"]},"k":"m","m":1},{"s":{"r":"Mu","p":["*%_"]},"n":"die","k":"m","m":0},{"m":0,"k":"m","n":"rethrow","s":{"r":"Mu","p":["*%_"]}},{"k":"m","m":0,"s":{"p":["*%_"],"r":"Mu"},"n":"backtrace"},{"k":"m","m":1,"n":"gist","s":{"r":"Mu","p":["*%_"]}},{"s":{"r":"Mu","p":["*%_"]},"n":"gist","m":1,"k":"m"},{"s":{"p":["*%_"],"r":"Mu"},"n":"gist","k":"m","m":1},{"s":{"r":"Mu","p":["*%_"]},"n":"vault-backtrace","k":"m","m":0},{"k":"s","m":0,"n":"BUILDALL","s":{"r":"Mu","p":["@auto","%init","*%_"]}}],"k":"c"},{"n":"X::Syntax::Variable::Twigil","t":"X::Syntax::Variable::Twigil","m":[{"n":"message","s":{"p":["*%_"],"r":"Mu"},"m":0,"k":"m"},{"k":"m","m":0,"n":"sorry_heading","s":{"p":["*%_"],"r":"Mu"}},{"s":{"p":["$file","$line","*%_"],"r":"Mu"},"n":"SET_FILE_LINE","m":0,"k":"m"},{"k":"m","m":1,"n":"gist","s":{"r":"Mu","p":["*%_"]}},{"k":"m","m":1,"s":{"r":"Mu","p":["*%_"]},"n":"gist"},{"n":"gist","s":{"p":["*%_"],"r":"Mu"},"m":1,"k":"m"},{"n":"gist","s":{"p":[":$sorry = Bool::True",":$expect = Bool::True","*%_"],"r":"Mu"},"k":"m","m":1},{"k":"m","m":0,"n":"what","s":{"r":"Mu","p":["*%_"]}},{"m":0,"k":"m","n":"twigil","s":{"r":"Mu","p":["*%_"]}},{"s":{"r":"Mu","p":["*%_"]},"n":"scope","k":"m","m":0},{"s":{"r":"Mu","p":["*%_"]},"n":"additional","k":"m","m":0},{"m":0,"k":"m","n":"filename","s":{"r":"Mu","p":["*%_"]}},{"n":"pos","s":{"r":"Mu","p":["*%_"]},"m":0,"k":"m"},{"n":"line","s":{"p":["*%_"],"r":"Mu"},"k":"m","m":0},{"m":0,"k":"m","s":{"r":"Mu","p":["*%_"]},"n":"column"},{"k":"m","m":0,"n":"modules","s":{"r":"Mu","p":["*%_"]}},{"k":"m","m":0,"n":"is-compile-time","s":{"p":["*%_"],"r":"Mu"}},{"m":0,"k":"m","n":"pre","s":{"r":"Mu","p":["*%_"]}},{"m":0,"k":"m","n":"post","s":{"p":["*%_"],"r":"Mu"}},{"n":"highexpect","s":{"r":"Mu","p":["*%_"]},"m":0,"k":"m"},{"n":"BUILDALL","s":{"r":"Mu","p":["@auto","%init","*%_"]},"m":0,"k":"s"},{"s":{"r":"Bool","p":["*%_"]},"n":"resume","k":"m","m":0},{"n":"reset-backtrace","s":{"r":"Mu","p":["*%_"]},"k":"m","m":0},{"s":{"p":["*%_"],"r":"Bool"},"n":"is-compile-time","m":0,"k":"m"},{"s":{"p":["$bt?","*%_"],"r":"Mu"},"n":"throw","k":"m","m":0},{"n":"fail","s":{"p":["*%_"],"r":"Mu"},"m":0,"k":"m"},{"k":"m","m":1,"n":"Str","s":{"r":"Mu","p":["*%_"]}},{"k":"m","m":1,"s":{"p":["*%_"],"r":"Mu"},"n":"Str"},{"k":"m","m":1,"s":{"p":["*%_"],"r":"Mu"},"n":"Str"},{"m":0,"k":"m","s":{"r":"Mu","p":["*%_"]},"n":"die"},{"s":{"p":["*%_"],"r":"Mu"},"n":"rethrow","m":0,"k":"m"},{"m":0,"k":"m","s":{"r":"Mu","p":["*%_"]},"n":"backtrace"},{"m":1,"k":"m","n":"gist","s":{"p":["*%_"],"r":"Mu"}},{"s":{"r":"Mu","p":["*%_"]},"n":"gist","k":"m","m":1},{"s":{"p":["*%_"],"r":"Mu"},"n":"gist","m":1,"k":"m"},{"m":0,"k":"m","n":"vault-backtrace","s":{"p":["*%_"],"r":"Mu"}},{"k":"s","m":0,"n":"BUILDALL","s":{"r":"Mu","p":["@auto","%init","*%_"]}}],"k":"c","a":[{"k":"v","t":"Mu","n":"$.what"},{"t":"Mu","n":"$.twigil","k":"v"},{"n":"$.scope","t":"Mu","k":"v"},{"k":"v","n":"$.additional","t":"Mu"},{"n":"$.filename","t":"Mu","k":"v"},{"n":"$.pos","t":"Mu","k":"v"},{"t":"Mu","n":"$.line","k":"v"},{"t":"Mu","n":"$.column","k":"v"},{"k":"v","t":"Positional","n":"@.modules"},{"k":"v","t":"Mu","n":"$.is-compile-time"},{"n":"$.pre","t":"Mu","k":"v"},{"t":"Mu","n":"$.post","k":"v"},{"n":"@.highexpect","t":"Positional","k":"v"},{"k":"v","n":"$!ex","t":"Mu"},{"k":"v","n":"$!bt","t":"Mu"}],"b":"A","d":"TITLE\nclass X::Syntax::Variable::Twigil\n\nSUBTITLE\nCompilation error due to an unallowed twigil in a declaration\n\n    class X::Syntax::Variable::Twigil does X::Syntax { }\n\nSyntax error thrown when a variable with a twigil is used in an\nincompatible declaration.\n\nFor example\n\n    my $!foo;\n\n\ndies with\n\n    ===SORRY!===\n    Cannot use ! twigil on my variable\n\n\n"},{"m":[{"n":"message","s":{"r":"Mu","p":["*%_"]},"m":0,"k":"m"},{"n":"sorry_heading","s":{"p":["*%_"],"r":"Mu"},"k":"m","m":0},{"s":{"r":"Mu","p":["$file","$line","*%_"]},"n":"SET_FILE_LINE","k":"m","m":0},{"s":{"r":"Mu","p":["*%_"]},"n":"gist","k":"m","m":1},{"n":"gist","s":{"r":"Mu","p":["*%_"]},"k":"m","m":1},{"s":{"r":"Mu","p":["*%_"]},"n":"gist","k":"m","m":1},{"s":{"r":"Mu","p":[":$sorry = Bool::True",":$expect = Bool::True","*%_"]},"n":"gist","m":1,"k":"m"},{"n":"outer","s":{"r":"Mu","p":["*%_"]},"m":0,"k":"m"},{"n":"inner","s":{"p":["*%_"],"r":"Mu"},"k":"m","m":0},{"m":0,"k":"m","n":"filename","s":{"r":"Mu","p":["*%_"]}},{"s":{"r":"Mu","p":["*%_"]},"n":"pos","k":"m","m":0},{"s":{"r":"Mu","p":["*%_"]},"n":"line","k":"m","m":0},{"k":"m","m":0,"s":{"r":"Mu","p":["*%_"]},"n":"column"},{"m":0,"k":"m","s":{"r":"Mu","p":["*%_"]},"n":"modules"},{"n":"is-compile-time","s":{"r":"Mu","p":["*%_"]},"k":"m","m":0},{"n":"pre","s":{"r":"Mu","p":["*%_"]},"k":"m","m":0},{"s":{"p":["*%_"],"r":"Mu"},"n":"post","k":"m","m":0},{"m":0,"k":"m","n":"highexpect","s":{"r":"Mu","p":["*%_"]}},{"m":0,"k":"s","n":"BUILDALL","s":{"r":"Mu","p":["@auto","%init","*%_"]}},{"s":{"r":"Bool","p":["*%_"]},"n":"resume","k":"m","m":0},{"m":0,"k":"m","n":"reset-backtrace","s":{"p":["*%_"],"r":"Mu"}},{"s":{"p":["*%_"],"r":"Bool"},"n":"is-compile-time","m":0,"k":"m"},{"s":{"p":["$bt?","*%_"],"r":"Mu"},"n":"throw","k":"m","m":0},{"s":{"r":"Mu","p":["*%_"]},"n":"fail","k":"m","m":0},{"s":{"p":["*%_"],"r":"Mu"},"n":"Str","k":"m","m":1},{"k":"m","m":1,"s":{"p":["*%_"],"r":"Mu"},"n":"Str"},{"m":1,"k":"m","s":{"r":"Mu","p":["*%_"]},"n":"Str"},{"s":{"r":"Mu","p":["*%_"]},"n":"die","m":0,"k":"m"},{"k":"m","m":0,"s":{"r":"Mu","p":["*%_"]},"n":"rethrow"},{"n":"backtrace","s":{"r":"Mu","p":["*%_"]},"m":0,"k":"m"},{"m":1,"k":"m","s":{"r":"Mu","p":["*%_"]},"n":"gist"},{"k":"m","m":1,"s":{"p":["*%_"],"r":"Mu"},"n":"gist"},{"k":"m","m":1,"n":"gist","s":{"p":["*%_"],"r":"Mu"}},{"n":"vault-backtrace","s":{"r":"Mu","p":["*%_"]},"m":0,"k":"m"},{"s":{"p":["@auto","%init","*%_"],"r":"Mu"},"n":"BUILDALL","k":"s","m":0}],"k":"c","b":"A","a":[{"n":"$.outer","t":"Mu","k":"v"},{"t":"Mu","n":"$.inner","k":"v"},{"k":"v","n":"$.filename","t":"Mu"},{"t":"Mu","n":"$.pos","k":"v"},{"n":"$.line","t":"Mu","k":"v"},{"t":"Mu","n":"$.column","k":"v"},{"k":"v","n":"@.modules","t":"Positional"},{"n":"$.is-compile-time","t":"Mu","k":"v"},{"t":"Mu","n":"$.pre","k":"v"},{"t":"Mu","n":"$.post","k":"v"},{"k":"v","t":"Positional","n":"@.highexpect"},{"t":"Mu","n":"$!ex","k":"v"},{"k":"v","t":"Mu","n":"$!bt"}],"n":"X::Syntax::Variable::ConflictingTypes","t":"X::Syntax::Variable::ConflictingTypes"},{"m":[{"m":0,"k":"m","s":{"p":["*%_"],"r":"Mu"},"n":"message"},{"s":{"p":["*%_"],"r":"Mu"},"n":"sorry_heading","m":0,"k":"m"},{"k":"m","m":0,"n":"SET_FILE_LINE","s":{"r":"Mu","p":["$file","$line","*%_"]}},{"n":"gist","s":{"r":"Mu","p":["*%_"]},"m":1,"k":"m"},{"m":1,"k":"m","n":"gist","s":{"p":["*%_"],"r":"Mu"}},{"s":{"p":["*%_"],"r":"Mu"},"n":"gist","m":1,"k":"m"},{"s":{"r":"Mu","p":[":$sorry = Bool::True",":$expect = Bool::True","*%_"]},"n":"gist","m":1,"k":"m"},{"m":0,"k":"m","n":"type","s":{"p":["*%_"],"r":"Mu"}},{"m":0,"k":"m","s":{"p":["*%_"],"r":"Mu"},"n":"implicit"},{"m":0,"k":"m","n":"filename","s":{"p":["*%_"],"r":"Mu"}},{"s":{"r":"Mu","p":["*%_"]},"n":"pos","k":"m","m":0},{"m":0,"k":"m","n":"line","s":{"r":"Mu","p":["*%_"]}},{"m":0,"k":"m","n":"column","s":{"r":"Mu","p":["*%_"]}},{"m":0,"k":"m","s":{"r":"Mu","p":["*%_"]},"n":"modules"},{"s":{"r":"Mu","p":["*%_"]},"n":"is-compile-time","k":"m","m":0},{"m":0,"k":"m","n":"pre","s":{"r":"Mu","p":["*%_"]}},{"k":"m","m":0,"n":"post","s":{"p":["*%_"],"r":"Mu"}},{"s":{"p":["*%_"],"r":"Mu"},"n":"highexpect","k":"m","m":0},{"k":"s","m":0,"s":{"r":"Mu","p":["@auto","%init","*%_"]},"n":"BUILDALL"},{"m":0,"k":"m","n":"resume","s":{"r":"Bool","p":["*%_"]}},{"k":"m","m":0,"n":"reset-backtrace","s":{"r":"Mu","p":["*%_"]}},{"n":"is-compile-time","s":{"r":"Bool","p":["*%_"]},"k":"m","m":0},{"k":"m","m":0,"n":"throw","s":{"p":["$bt?","*%_"],"r":"Mu"}},{"k":"m","m":0,"n":"fail","s":{"r":"Mu","p":["*%_"]}},{"m":1,"k":"m","n":"Str","s":{"r":"Mu","p":["*%_"]}},{"s":{"r":"Mu","p":["*%_"]},"n":"Str","m":1,"k":"m"},{"n":"Str","s":{"r":"Mu","p":["*%_"]},"k":"m","m":1},{"m":0,"k":"m","n":"die","s":{"r":"Mu","p":["*%_"]}},{"m":0,"k":"m","n":"rethrow","s":{"r":"Mu","p":["*%_"]}},{"s":{"r":"Mu","p":["*%_"]},"n":"backtrace","m":0,"k":"m"},{"k":"m","m":1,"n":"gist","s":{"r":"Mu","p":["*%_"]}},{"s":{"p":["*%_"],"r":"Mu"},"n":"gist","m":1,"k":"m"},{"m":1,"k":"m","n":"gist","s":{"r":"Mu","p":["*%_"]}},{"m":0,"k":"m","n":"vault-backtrace","s":{"r":"Mu","p":["*%_"]}},{"m":0,"k":"s","n":"BUILDALL","s":{"r":"Mu","p":["@auto","%init","*%_"]}}],"k":"c","b":"A","a":[{"t":"Mu","n":"$.type","k":"v"},{"n":"$.implicit","t":"Mu","k":"v"},{"k":"v","n":"$.filename","t":"Mu"},{"n":"$.pos","t":"Mu","k":"v"},{"n":"$.line","t":"Mu","k":"v"},{"k":"v","n":"$.column","t":"Mu"},{"n":"@.modules","t":"Positional","k":"v"},{"t":"Mu","n":"$.is-compile-time","k":"v"},{"k":"v","n":"$.pre","t":"Mu"},{"n":"$.post","t":"Mu","k":"v"},{"k":"v","t":"Positional","n":"@.highexpect"},{"t":"Mu","n":"$!ex","k":"v"},{"k":"v","t":"Mu","n":"$!bt"}],"t":"X::Syntax::Variable::MissingInitializer","n":"X::Syntax::Variable::MissingInitializer"},{"t":"X::Syntax::Variable::Initializer","n":"X::Syntax::Variable::Initializer","a":[{"k":"v","t":"Mu","n":"$.name"},{"k":"v","n":"$.filename","t":"Mu"},{"t":"Mu","n":"$.pos","k":"v"},{"n":"$.line","t":"Mu","k":"v"},{"k":"v","t":"Mu","n":"$.column"},{"k":"v","n":"@.modules","t":"Positional"},{"n":"$.is-compile-time","t":"Mu","k":"v"},{"t":"Mu","n":"$.pre","k":"v"},{"k":"v","t":"Mu","n":"$.post"},{"t":"Positional","n":"@.highexpect","k":"v"},{"k":"v","t":"Mu","n":"$!ex"},{"n":"$!bt","t":"Mu","k":"v"}],"b":"A","m":[{"k":"m","m":0,"s":{"p":["*%_"],"r":"Mu"},"n":"message"},{"k":"m","m":0,"n":"sorry_heading","s":{"r":"Mu","p":["*%_"]}},{"m":0,"k":"m","s":{"p":["$file","$line","*%_"],"r":"Mu"},"n":"SET_FILE_LINE"},{"s":{"p":["*%_"],"r":"Mu"},"n":"gist","k":"m","m":1},{"k":"m","m":1,"n":"gist","s":{"r":"Mu","p":["*%_"]}},{"k":"m","m":1,"s":{"p":["*%_"],"r":"Mu"},"n":"gist"},{"s":{"r":"Mu","p":[":$sorry = Bool::True",":$expect = Bool::True","*%_"]},"n":"gist","m":1,"k":"m"},{"n":"name","s":{"p":["*%_"],"r":"Mu"},"k":"m","m":0},{"k":"m","m":0,"s":{"r":"Mu","p":["*%_"]},"n":"filename"},{"m":0,"k":"m","s":{"p":["*%_"],"r":"Mu"},"n":"pos"},{"k":"m","m":0,"s":{"p":["*%_"],"r":"Mu"},"n":"line"},{"k":"m","m":0,"n":"column","s":{"r":"Mu","p":["*%_"]}},{"k":"m","m":0,"s":{"p":["*%_"],"r":"Mu"},"n":"modules"},{"m":0,"k":"m","s":{"r":"Mu","p":["*%_"]},"n":"is-compile-time"},{"m":0,"k":"m","n":"pre","s":{"p":["*%_"],"r":"Mu"}},{"s":{"r":"Mu","p":["*%_"]},"n":"post","m":0,"k":"m"},{"k":"m","m":0,"s":{"r":"Mu","p":["*%_"]},"n":"highexpect"},{"s":{"r":"Mu","p":["@auto","%init","*%_"]},"n":"BUILDALL","k":"s","m":0},{"k":"m","m":0,"n":"resume","s":{"p":["*%_"],"r":"Bool"}},{"s":{"r":"Mu","p":["*%_"]},"n":"reset-backtrace","k":"m","m":0},{"s":{"p":["*%_"],"r":"Bool"},"n":"is-compile-time","m":0,"k":"m"},{"k":"m","m":0,"n":"throw","s":{"r":"Mu","p":["$bt?","*%_"]}},{"s":{"p":["*%_"],"r":"Mu"},"n":"fail","m":0,"k":"m"},{"k":"m","m":1,"n":"Str","s":{"p":["*%_"],"r":"Mu"}},{"k":"m","m":1,"s":{"r":"Mu","p":["*%_"]},"n":"Str"},{"n":"Str","s":{"p":["*%_"],"r":"Mu"},"k":"m","m":1},{"n":"die","s":{"p":["*%_"],"r":"Mu"},"m":0,"k":"m"},{"s":{"p":["*%_"],"r":"Mu"},"n":"rethrow","k":"m","m":0},{"k":"m","m":0,"n":"backtrace","s":{"r":"Mu","p":["*%_"]}},{"k":"m","m":1,"s":{"p":["*%_"],"r":"Mu"},"n":"gist"},{"k":"m","m":1,"n":"gist","s":{"r":"Mu","p":["*%_"]}},{"n":"gist","s":{"r":"Mu","p":["*%_"]},"k":"m","m":1},{"s":{"r":"Mu","p":["*%_"]},"n":"vault-backtrace","k":"m","m":0},{"m":0,"k":"s","n":"BUILDALL","s":{"p":["@auto","%init","*%_"],"r":"Mu"}}],"k":"c"},{"b":"A","a":[{"k":"v","n":"$.type","t":"Mu"},{"k":"v","t":"Mu","n":"$.filename"},{"k":"v","n":"$.pos","t":"Mu"},{"k":"v","t":"Mu","n":"$.line"},{"k":"v","t":"Mu","n":"$.column"},{"k":"v","n":"@.modules","t":"Positional"},{"n":"$.is-compile-time","t":"Mu","k":"v"},{"n":"$.pre","t":"Mu","k":"v"},{"t":"Mu","n":"$.post","k":"v"},{"t":"Positional","n":"@.highexpect","k":"v"},{"k":"v","n":"$!ex","t":"Mu"},{"k":"v","t":"Mu","n":"$!bt"}],"m":[{"m":0,"k":"m","n":"message","s":{"r":"Mu","p":["*%_"]}},{"s":{"p":["*%_"],"r":"Mu"},"n":"sorry_heading","m":0,"k":"m"},{"m":0,"k":"m","n":"SET_FILE_LINE","s":{"r":"Mu","p":["$file","$line","*%_"]}},{"m":1,"k":"m","s":{"p":["*%_"],"r":"Mu"},"n":"gist"},{"s":{"p":["*%_"],"r":"Mu"},"n":"gist","k":"m","m":1},{"m":1,"k":"m","n":"gist","s":{"p":["*%_"],"r":"Mu"}},{"m":1,"k":"m","s":{"p":[":$sorry = Bool::True",":$expect = Bool::True","*%_"],"r":"Mu"},"n":"gist"},{"m":0,"k":"m","s":{"p":["*%_"],"r":"Mu"},"n":"type"},{"k":"m","m":0,"n":"filename","s":{"r":"Mu","p":["*%_"]}},{"s":{"r":"Mu","p":["*%_"]},"n":"pos","m":0,"k":"m"},{"k":"m","m":0,"n":"line","s":{"p":["*%_"],"r":"Mu"}},{"m":0,"k":"m","s":{"p":["*%_"],"r":"Mu"},"n":"column"},{"m":0,"k":"m","s":{"r":"Mu","p":["*%_"]},"n":"modules"},{"s":{"p":["*%_"],"r":"Mu"},"n":"is-compile-time","k":"m","m":0},{"n":"pre","s":{"r":"Mu","p":["*%_"]},"m":0,"k":"m"},{"k":"m","m":0,"s":{"p":["*%_"],"r":"Mu"},"n":"post"},{"n":"highexpect","s":{"p":["*%_"],"r":"Mu"},"m":0,"k":"m"},{"s":{"p":["@auto","%init","*%_"],"r":"Mu"},"n":"BUILDALL","m":0,"k":"s"},{"s":{"r":"Bool","p":["*%_"]},"n":"resume","k":"m","m":0},{"k":"m","m":0,"s":{"r":"Mu","p":["*%_"]},"n":"reset-backtrace"},{"k":"m","m":0,"n":"is-compile-time","s":{"p":["*%_"],"r":"Bool"}},{"n":"throw","s":{"r":"Mu","p":["$bt?","*%_"]},"m":0,"k":"m"},{"k":"m","m":0,"n":"fail","s":{"p":["*%_"],"r":"Mu"}},{"n":"Str","s":{"r":"Mu","p":["*%_"]},"k":"m","m":1},{"s":{"p":["*%_"],"r":"Mu"},"n":"Str","k":"m","m":1},{"k":"m","m":1,"s":{"r":"Mu","p":["*%_"]},"n":"Str"},{"k":"m","m":0,"n":"die","s":{"r":"Mu","p":["*%_"]}},{"n":"rethrow","s":{"p":["*%_"],"r":"Mu"},"k":"m","m":0},{"k":"m","m":0,"s":{"p":["*%_"],"r":"Mu"},"n":"backtrace"},{"m":1,"k":"m","n":"gist","s":{"p":["*%_"],"r":"Mu"}},{"m":1,"k":"m","s":{"p":["*%_"],"r":"Mu"},"n":"gist"},{"m":1,"k":"m","s":{"r":"Mu","p":["*%_"]},"n":"gist"},{"n":"vault-backtrace","s":{"p":["*%_"],"r":"Mu"},"m":0,"k":"m"},{"s":{"p":["@auto","%init","*%_"],"r":"Mu"},"n":"BUILDALL","k":"s","m":0}],"k":"c","t":"X::Syntax::Variable::BadType","n":"X::Syntax::Variable::BadType"},{"d":"TITLE\nclass X::Syntax::Variable::Numeric\n\nSUBTITLE\nCompilation error due to declaring a numeric symbol\n\n    class X::Syntax::Variable::Numeric does X::Syntax { }\n\nSyntax error thrown when trying to declare numeric symbols.\n\nFor example\n\n    my @101;\n\n\ndies with\n\n    ===SORRY!===\n    Cannot declare a numeric variable\n\n\n","m":[{"s":{"p":["*%_"],"r":"Mu"},"n":"message","m":0,"k":"m"},{"s":{"p":["*%_"],"r":"Mu"},"n":"sorry_heading","m":0,"k":"m"},{"n":"SET_FILE_LINE","s":{"p":["$file","$line","*%_"],"r":"Mu"},"m":0,"k":"m"},{"k":"m","m":1,"s":{"p":["*%_"],"r":"Mu"},"n":"gist"},{"n":"gist","s":{"p":["*%_"],"r":"Mu"},"k":"m","m":1},{"s":{"p":["*%_"],"r":"Mu"},"n":"gist","m":1,"k":"m"},{"k":"m","m":1,"n":"gist","s":{"r":"Mu","p":[":$sorry = Bool::True",":$expect = Bool::True","*%_"]}},{"n":"what","s":{"r":"Mu","p":["*%_"]},"k":"m","m":0},{"n":"filename","s":{"r":"Mu","p":["*%_"]},"m":0,"k":"m"},{"s":{"r":"Mu","p":["*%_"]},"n":"pos","k":"m","m":0},{"m":0,"k":"m","s":{"p":["*%_"],"r":"Mu"},"n":"line"},{"s":{"p":["*%_"],"r":"Mu"},"n":"column","k":"m","m":0},{"m":0,"k":"m","s":{"p":["*%_"],"r":"Mu"},"n":"modules"},{"k":"m","m":0,"s":{"r":"Mu","p":["*%_"]},"n":"is-compile-time"},{"k":"m","m":0,"n":"pre","s":{"p":["*%_"],"r":"Mu"}},{"s":{"r":"Mu","p":["*%_"]},"n":"post","m":0,"k":"m"},{"s":{"p":["*%_"],"r":"Mu"},"n":"highexpect","k":"m","m":0},{"k":"s","m":0,"s":{"p":["@auto","%init","*%_"],"r":"Mu"},"n":"BUILDALL"},{"k":"m","m":0,"s":{"r":"Bool","p":["*%_"]},"n":"resume"},{"s":{"p":["*%_"],"r":"Mu"},"n":"reset-backtrace","m":0,"k":"m"},{"s":{"p":["*%_"],"r":"Bool"},"n":"is-compile-time","m":0,"k":"m"},{"k":"m","m":0,"s":{"p":["$bt?","*%_"],"r":"Mu"},"n":"throw"},{"s":{"p":["*%_"],"r":"Mu"},"n":"fail","k":"m","m":0},{"s":{"r":"Mu","p":["*%_"]},"n":"Str","m":1,"k":"m"},{"n":"Str","s":{"r":"Mu","p":["*%_"]},"k":"m","m":1},{"k":"m","m":1,"s":{"r":"Mu","p":["*%_"]},"n":"Str"},{"m":0,"k":"m","s":{"r":"Mu","p":["*%_"]},"n":"die"},{"k":"m","m":0,"s":{"p":["*%_"],"r":"Mu"},"n":"rethrow"},{"m":0,"k":"m","s":{"r":"Mu","p":["*%_"]},"n":"backtrace"},{"m":1,"k":"m","s":{"r":"Mu","p":["*%_"]},"n":"gist"},{"k":"m","m":1,"s":{"p":["*%_"],"r":"Mu"},"n":"gist"},{"m":1,"k":"m","n":"gist","s":{"r":"Mu","p":["*%_"]}},{"n":"vault-backtrace","s":{"r":"Mu","p":["*%_"]},"m":0,"k":"m"},{"k":"s","m":0,"s":{"r":"Mu","p":["@auto","%init","*%_"]},"n":"BUILDALL"}],"k":"c","b":"A","a":[{"t":"Mu","n":"$.what","k":"v"},{"n":"$.filename","t":"Mu","k":"v"},{"t":"Mu","n":"$.pos","k":"v"},{"t":"Mu","n":"$.line","k":"v"},{"k":"v","t":"Mu","n":"$.column"},{"k":"v","t":"Positional","n":"@.modules"},{"t":"Mu","n":"$.is-compile-time","k":"v"},{"n":"$.pre","t":"Mu","k":"v"},{"k":"v","n":"$.post","t":"Mu"},{"n":"@.highexpect","t":"Positional","k":"v"},{"t":"Mu","n":"$!ex","k":"v"},{"k":"v","t":"Mu","n":"$!bt"}],"t":"X::Syntax::Variable::Numeric","n":"X::Syntax::Variable::Numeric"},{"t":"X::Syntax::Number::LiteralType","n":"X::Syntax::Number::LiteralType","a":[{"t":"Mu","n":"$.varname","k":"v"},{"k":"v","t":"Mu","n":"$.vartype"},{"k":"v","n":"$.value","t":"Mu"},{"k":"v","t":"Mu","n":"$.valuetype"},{"t":"Mu","n":"$.suggestiontype","k":"v"},{"t":"Mu","n":"$.native","k":"v"},{"t":"Mu","n":"$.filename","k":"v"},{"t":"Mu","n":"$.pos","k":"v"},{"k":"v","n":"$.line","t":"Mu"},{"k":"v","n":"$.column","t":"Mu"},{"k":"v","n":"@.modules","t":"Positional"},{"k":"v","n":"$.is-compile-time","t":"Mu"},{"t":"Mu","n":"$.pre","k":"v"},{"k":"v","n":"$.post","t":"Mu"},{"k":"v","n":"@.highexpect","t":"Positional"},{"t":"Mu","n":"$!ex","k":"v"},{"t":"Mu","n":"$!bt","k":"v"}],"b":"A","k":"c","m":[{"m":0,"k":"m","n":"message","s":{"p":["*%_"],"r":"Mu"}},{"s":{"p":["*%_"],"r":"Mu"},"n":"sorry_heading","m":0,"k":"m"},{"n":"SET_FILE_LINE","s":{"r":"Mu","p":["$file","$line","*%_"]},"k":"m","m":0},{"s":{"r":"Mu","p":["*%_"]},"n":"gist","k":"m","m":1},{"s":{"r":"Mu","p":["*%_"]},"n":"gist","m":1,"k":"m"},{"m":1,"k":"m","n":"gist","s":{"p":["*%_"],"r":"Mu"}},{"n":"gist","s":{"r":"Mu","p":[":$sorry = Bool::True",":$expect = Bool::True","*%_"]},"k":"m","m":1},{"m":0,"k":"m","n":"varname","s":{"p":["*%_"],"r":"Mu"}},{"k":"m","m":0,"n":"vartype","s":{"r":"Mu","p":["*%_"]}},{"k":"m","m":0,"s":{"r":"Mu","p":["*%_"]},"n":"value"},{"s":{"p":["*%_"],"r":"Mu"},"n":"valuetype","m":0,"k":"m"},{"m":0,"k":"m","n":"suggestiontype","s":{"r":"Mu","p":["*%_"]}},{"k":"m","m":0,"n":"native","s":{"p":["*%_"],"r":"Mu"}},{"m":0,"k":"m","s":{"p":["*%_"],"r":"Mu"},"n":"filename"},{"k":"m","m":0,"s":{"r":"Mu","p":["*%_"]},"n":"pos"},{"m":0,"k":"m","n":"line","s":{"p":["*%_"],"r":"Mu"}},{"n":"column","s":{"r":"Mu","p":["*%_"]},"k":"m","m":0},{"k":"m","m":0,"n":"modules","s":{"r":"Mu","p":["*%_"]}},{"n":"is-compile-time","s":{"r":"Mu","p":["*%_"]},"k":"m","m":0},{"n":"pre","s":{"r":"Mu","p":["*%_"]},"k":"m","m":0},{"n":"post","s":{"r":"Mu","p":["*%_"]},"m":0,"k":"m"},{"m":0,"k":"m","s":{"p":["*%_"],"r":"Mu"},"n":"highexpect"},{"k":"s","m":0,"n":"BUILDALL","s":{"p":["@auto","%init","*%_"],"r":"Mu"}},{"s":{"r":"Bool","p":["*%_"]},"n":"resume","m":0,"k":"m"},{"n":"reset-backtrace","s":{"r":"Mu","p":["*%_"]},"m":0,"k":"m"},{"n":"is-compile-time","s":{"p":["*%_"],"r":"Bool"},"k":"m","m":0},{"k":"m","m":0,"n":"throw","s":{"r":"Mu","p":["$bt?","*%_"]}},{"m":0,"k":"m","n":"fail","s":{"p":["*%_"],"r":"Mu"}},{"k":"m","m":1,"s":{"p":["*%_"],"r":"Mu"},"n":"Str"},{"k":"m","m":1,"s":{"p":["*%_"],"r":"Mu"},"n":"Str"},{"k":"m","m":1,"n":"Str","s":{"p":["*%_"],"r":"Mu"}},{"k":"m","m":0,"n":"die","s":{"p":["*%_"],"r":"Mu"}},{"k":"m","m":0,"n":"rethrow","s":{"r":"Mu","p":["*%_"]}},{"s":{"p":["*%_"],"r":"Mu"},"n":"backtrace","m":0,"k":"m"},{"k":"m","m":1,"n":"gist","s":{"p":["*%_"],"r":"Mu"}},{"n":"gist","s":{"r":"Mu","p":["*%_"]},"m":1,"k":"m"},{"n":"gist","s":{"r":"Mu","p":["*%_"]},"m":1,"k":"m"},{"m":0,"k":"m","n":"vault-backtrace","s":{"r":"Mu","p":["*%_"]}},{"n":"BUILDALL","s":{"r":"Mu","p":["@auto","%init","*%_"]},"m":0,"k":"s"}]},{"k":"c","m":[{"s":{"r":"Mu","p":["*%_"]},"n":"message","m":0,"k":"m"},{"s":{"r":"Mu","p":["*%_"]},"n":"sorry_heading","m":0,"k":"m"},{"n":"SET_FILE_LINE","s":{"p":["$file","$line","*%_"],"r":"Mu"},"m":0,"k":"m"},{"m":1,"k":"m","n":"gist","s":{"r":"Mu","p":["*%_"]}},{"n":"gist","s":{"r":"Mu","p":["*%_"]},"k":"m","m":1},{"n":"gist","s":{"r":"Mu","p":["*%_"]},"k":"m","m":1},{"k":"m","m":1,"s":{"r":"Mu","p":[":$sorry = Bool::True",":$expect = Bool::True","*%_"]},"n":"gist"},{"n":"filename","s":{"r":"Mu","p":["*%_"]},"k":"m","m":0},{"n":"pos","s":{"r":"Mu","p":["*%_"]},"k":"m","m":0},{"s":{"r":"Mu","p":["*%_"]},"n":"line","k":"m","m":0},{"n":"column","s":{"r":"Mu","p":["*%_"]},"m":0,"k":"m"},{"n":"modules","s":{"r":"Mu","p":["*%_"]},"m":0,"k":"m"},{"m":0,"k":"m","s":{"p":["*%_"],"r":"Mu"},"n":"is-compile-time"},{"s":{"p":["*%_"],"r":"Mu"},"n":"pre","m":0,"k":"m"},{"n":"post","s":{"r":"Mu","p":["*%_"]},"m":0,"k":"m"},{"m":0,"k":"m","n":"highexpect","s":{"p":["*%_"],"r":"Mu"}},{"n":"BUILDALL","s":{"r":"Mu","p":["@auto","%init","*%_"]},"m":0,"k":"s"},{"s":{"p":["*%_"],"r":"Bool"},"n":"resume","m":0,"k":"m"},{"m":0,"k":"m","n":"reset-backtrace","s":{"r":"Mu","p":["*%_"]}},{"m":0,"k":"m","n":"is-compile-time","s":{"p":["*%_"],"r":"Bool"}},{"s":{"r":"Mu","p":["$bt?","*%_"]},"n":"throw","k":"m","m":0},{"s":{"p":["*%_"],"r":"Mu"},"n":"fail","k":"m","m":0},{"s":{"r":"Mu","p":["*%_"]},"n":"Str","m":1,"k":"m"},{"m":1,"k":"m","s":{"p":["*%_"],"r":"Mu"},"n":"Str"},{"m":1,"k":"m","s":{"r":"Mu","p":["*%_"]},"n":"Str"},{"m":0,"k":"m","s":{"r":"Mu","p":["*%_"]},"n":"die"},{"n":"rethrow","s":{"r":"Mu","p":["*%_"]},"m":0,"k":"m"},{"s":{"p":["*%_"],"r":"Mu"},"n":"backtrace","m":0,"k":"m"},{"k":"m","m":1,"n":"gist","s":{"r":"Mu","p":["*%_"]}},{"s":{"r":"Mu","p":["*%_"]},"n":"gist","k":"m","m":1},{"m":1,"k":"m","n":"gist","s":{"p":["*%_"],"r":"Mu"}},{"n":"vault-backtrace","s":{"r":"Mu","p":["*%_"]},"k":"m","m":0},{"k":"s","m":0,"s":{"p":["@auto","%init","*%_"],"r":"Mu"},"n":"BUILDALL"}],"b":"A","a":[{"k":"v","n":"$.filename","t":"Mu"},{"n":"$.pos","t":"Mu","k":"v"},{"k":"v","t":"Mu","n":"$.line"},{"k":"v","t":"Mu","n":"$.column"},{"t":"Positional","n":"@.modules","k":"v"},{"n":"$.is-compile-time","t":"Mu","k":"v"},{"n":"$.pre","t":"Mu","k":"v"},{"n":"$.post","t":"Mu","k":"v"},{"k":"v","n":"@.highexpect","t":"Positional"},{"n":"$!ex","t":"Mu","k":"v"},{"n":"$!bt","t":"Mu","k":"v"}],"t":"X::Syntax::Number::IllegalDecimal","n":"X::Syntax::Number::IllegalDecimal"},{"k":"c","m":[{"s":{"p":["*%_"],"r":"Mu"},"n":"message","k":"m","m":0},{"m":0,"k":"m","n":"sorry_heading","s":{"p":["*%_"],"r":"Mu"}},{"s":{"p":["$file","$line","*%_"],"r":"Mu"},"n":"SET_FILE_LINE","k":"m","m":0},{"k":"m","m":1,"s":{"r":"Mu","p":["*%_"]},"n":"gist"},{"n":"gist","s":{"p":["*%_"],"r":"Mu"},"k":"m","m":1},{"s":{"p":["*%_"],"r":"Mu"},"n":"gist","k":"m","m":1},{"n":"gist","s":{"r":"Mu","p":[":$sorry = Bool::True",":$expect = Bool::True","*%_"]},"k":"m","m":1},{"n":"radix","s":{"p":["*%_"],"r":"Mu"},"m":0,"k":"m"},{"n":"filename","s":{"p":["*%_"],"r":"Mu"},"k":"m","m":0},{"s":{"p":["*%_"],"r":"Mu"},"n":"pos","m":0,"k":"m"},{"s":{"r":"Mu","p":["*%_"]},"n":"line","k":"m","m":0},{"k":"m","m":0,"n":"column","s":{"p":["*%_"],"r":"Mu"}},{"s":{"p":["*%_"],"r":"Mu"},"n":"modules","k":"m","m":0},{"k":"m","m":0,"n":"is-compile-time","s":{"p":["*%_"],"r":"Mu"}},{"n":"pre","s":{"r":"Mu","p":["*%_"]},"m":0,"k":"m"},{"k":"m","m":0,"n":"post","s":{"r":"Mu","p":["*%_"]}},{"s":{"p":["*%_"],"r":"Mu"},"n":"highexpect","k":"m","m":0},{"k":"s","m":0,"s":{"r":"Mu","p":["@auto","%init","*%_"]},"n":"BUILDALL"},{"n":"resume","s":{"p":["*%_"],"r":"Bool"},"m":0,"k":"m"},{"k":"m","m":0,"s":{"r":"Mu","p":["*%_"]},"n":"reset-backtrace"},{"k":"m","m":0,"n":"is-compile-time","s":{"p":["*%_"],"r":"Bool"}},{"n":"throw","s":{"r":"Mu","p":["$bt?","*%_"]},"k":"m","m":0},{"k":"m","m":0,"s":{"p":["*%_"],"r":"Mu"},"n":"fail"},{"k":"m","m":1,"s":{"r":"Mu","p":["*%_"]},"n":"Str"},{"n":"Str","s":{"p":["*%_"],"r":"Mu"},"m":1,"k":"m"},{"n":"Str","s":{"p":["*%_"],"r":"Mu"},"k":"m","m":1},{"k":"m","m":0,"n":"die","s":{"r":"Mu","p":["*%_"]}},{"n":"rethrow","s":{"p":["*%_"],"r":"Mu"},"k":"m","m":0},{"k":"m","m":0,"n":"backtrace","s":{"p":["*%_"],"r":"Mu"}},{"s":{"r":"Mu","p":["*%_"]},"n":"gist","m":1,"k":"m"},{"n":"gist","s":{"p":["*%_"],"r":"Mu"},"m":1,"k":"m"},{"n":"gist","s":{"r":"Mu","p":["*%_"]},"m":1,"k":"m"},{"s":{"r":"Mu","p":["*%_"]},"n":"vault-backtrace","m":0,"k":"m"},{"m":0,"k":"s","s":{"r":"Mu","p":["@auto","%init","*%_"]},"n":"BUILDALL"}],"a":[{"k":"v","t":"Mu","n":"$.radix"},{"k":"v","t":"Mu","n":"$.filename"},{"t":"Mu","n":"$.pos","k":"v"},{"t":"Mu","n":"$.line","k":"v"},{"t":"Mu","n":"$.column","k":"v"},{"t":"Positional","n":"@.modules","k":"v"},{"t":"Mu","n":"$.is-compile-time","k":"v"},{"k":"v","t":"Mu","n":"$.pre"},{"k":"v","n":"$.post","t":"Mu"},{"k":"v","t":"Positional","n":"@.highexpect"},{"k":"v","t":"Mu","n":"$!ex"},{"k":"v","t":"Mu","n":"$!bt"}],"b":"A","d":"TITLE\nclass X::Syntax::Number::RadixOutOfRange\n\nSUBTITLE\nCompilation error due to an unallowed radix in a number literal\n\n    class X::Syntax::Number::RadixOutOfRange does X::Syntax { }\n\nSyntax error that is thrown when the radix of a radix number is not\nallowed, like :1<1>  or :42<ouch> .\n\n","n":"X::Syntax::Number::RadixOutOfRange","t":"X::Syntax::Number::RadixOutOfRange"},{"a":[{"n":"$.macro","t":"Mu","k":"v"},{"k":"v","n":"$.filename","t":"Mu"},{"t":"Mu","n":"$.pos","k":"v"},{"t":"Mu","n":"$.line","k":"v"},{"t":"Mu","n":"$.column","k":"v"},{"k":"v","t":"Positional","n":"@.modules"},{"k":"v","n":"$.is-compile-time","t":"Mu"},{"n":"$.pre","t":"Mu","k":"v"},{"k":"v","n":"$.post","t":"Mu"},{"k":"v","t":"Positional","n":"@.highexpect"},{"n":"$!ex","t":"Mu","k":"v"},{"n":"$!bt","t":"Mu","k":"v"}],"b":"A","k":"c","m":[{"s":{"p":["*%_"],"r":"Mu"},"n":"message","k":"m","m":0},{"n":"sorry_heading","s":{"p":["*%_"],"r":"Mu"},"k":"m","m":0},{"s":{"p":["$file","$line","*%_"],"r":"Mu"},"n":"SET_FILE_LINE","k":"m","m":0},{"n":"gist","s":{"r":"Mu","p":["*%_"]},"m":1,"k":"m"},{"s":{"p":["*%_"],"r":"Mu"},"n":"gist","m":1,"k":"m"},{"m":1,"k":"m","n":"gist","s":{"p":["*%_"],"r":"Mu"}},{"n":"gist","s":{"p":[":$sorry = Bool::True",":$expect = Bool::True","*%_"],"r":"Mu"},"m":1,"k":"m"},{"n":"macro","s":{"r":"Mu","p":["*%_"]},"m":0,"k":"m"},{"m":0,"k":"m","s":{"p":["*%_"],"r":"Mu"},"n":"filename"},{"m":0,"k":"m","n":"pos","s":{"p":["*%_"],"r":"Mu"}},{"k":"m","m":0,"s":{"r":"Mu","p":["*%_"]},"n":"line"},{"n":"column","s":{"r":"Mu","p":["*%_"]},"m":0,"k":"m"},{"m":0,"k":"m","s":{"p":["*%_"],"r":"Mu"},"n":"modules"},{"m":0,"k":"m","s":{"p":["*%_"],"r":"Mu"},"n":"is-compile-time"},{"s":{"r":"Mu","p":["*%_"]},"n":"pre","m":0,"k":"m"},{"m":0,"k":"m","n":"post","s":{"p":["*%_"],"r":"Mu"}},{"k":"m","m":0,"s":{"r":"Mu","p":["*%_"]},"n":"highexpect"},{"s":{"r":"Mu","p":["@auto","%init","*%_"]},"n":"BUILDALL","m":0,"k":"s"},{"n":"resume","s":{"p":["*%_"],"r":"Bool"},"m":0,"k":"m"},{"s":{"p":["*%_"],"r":"Mu"},"n":"reset-backtrace","m":0,"k":"m"},{"s":{"p":["*%_"],"r":"Bool"},"n":"is-compile-time","k":"m","m":0},{"n":"throw","s":{"r":"Mu","p":["$bt?","*%_"]},"k":"m","m":0},{"n":"fail","s":{"p":["*%_"],"r":"Mu"},"m":0,"k":"m"},{"s":{"r":"Mu","p":["*%_"]},"n":"Str","k":"m","m":1},{"k":"m","m":1,"n":"Str","s":{"r":"Mu","p":["*%_"]}},{"m":1,"k":"m","s":{"p":["*%_"],"r":"Mu"},"n":"Str"},{"s":{"p":["*%_"],"r":"Mu"},"n":"die","m":0,"k":"m"},{"k":"m","m":0,"n":"rethrow","s":{"r":"Mu","p":["*%_"]}},{"k":"m","m":0,"s":{"r":"Mu","p":["*%_"]},"n":"backtrace"},{"s":{"p":["*%_"],"r":"Mu"},"n":"gist","k":"m","m":1},{"k":"m","m":1,"s":{"r":"Mu","p":["*%_"]},"n":"gist"},{"k":"m","m":1,"s":{"r":"Mu","p":["*%_"]},"n":"gist"},{"k":"m","m":0,"n":"vault-backtrace","s":{"p":["*%_"],"r":"Mu"}},{"m":0,"k":"s","s":{"r":"Mu","p":["@auto","%init","*%_"]},"n":"BUILDALL"}],"n":"X::Syntax::Argument::MOPMacro","t":"X::Syntax::Argument::MOPMacro"},{"t":"X::Syntax::CannotMeta","n":"X::Syntax::CannotMeta","a":[{"t":"Mu","n":"$.meta","k":"v"},{"n":"$.operator","t":"Mu","k":"v"},{"k":"v","n":"$.reason","t":"Mu"},{"k":"v","t":"Mu","n":"$.dba"},{"k":"v","t":"Mu","n":"$.filename"},{"t":"Mu","n":"$.pos","k":"v"},{"t":"Mu","n":"$.line","k":"v"},{"t":"Mu","n":"$.column","k":"v"},{"n":"@.modules","t":"Positional","k":"v"},{"k":"v","n":"$.is-compile-time","t":"Mu"},{"n":"$.pre","t":"Mu","k":"v"},{"k":"v","t":"Mu","n":"$.post"},{"k":"v","n":"@.highexpect","t":"Positional"},{"t":"Mu","n":"$!ex","k":"v"},{"t":"Mu","n":"$!bt","k":"v"}],"b":"A","k":"c","m":[{"m":0,"k":"m","n":"message","s":{"p":["*%_"],"r":"Mu"}},{"s":{"p":["*%_"],"r":"Mu"},"n":"sorry_heading","k":"m","m":0},{"n":"SET_FILE_LINE","s":{"p":["$file","$line","*%_"],"r":"Mu"},"m":0,"k":"m"},{"m":1,"k":"m","s":{"p":["*%_"],"r":"Mu"},"n":"gist"},{"n":"gist","s":{"r":"Mu","p":["*%_"]},"k":"m","m":1},{"k":"m","m":1,"s":{"r":"Mu","p":["*%_"]},"n":"gist"},{"m":1,"k":"m","n":"gist","s":{"p":[":$sorry = Bool::True",":$expect = Bool::True","*%_"],"r":"Mu"}},{"k":"m","m":0,"s":{"p":["*%_"],"r":"Mu"},"n":"meta"},{"k":"m","m":0,"n":"operator","s":{"p":["*%_"],"r":"Mu"}},{"s":{"p":["*%_"],"r":"Mu"},"n":"reason","k":"m","m":0},{"n":"dba","s":{"p":["*%_"],"r":"Mu"},"m":0,"k":"m"},{"k":"m","m":0,"s":{"p":["*%_"],"r":"Mu"},"n":"filename"},{"m":0,"k":"m","n":"pos","s":{"p":["*%_"],"r":"Mu"}},{"s":{"p":["*%_"],"r":"Mu"},"n":"line","m":0,"k":"m"},{"s":{"r":"Mu","p":["*%_"]},"n":"column","k":"m","m":0},{"s":{"p":["*%_"],"r":"Mu"},"n":"modules","k":"m","m":0},{"k":"m","m":0,"s":{"r":"Mu","p":["*%_"]},"n":"is-compile-time"},{"k":"m","m":0,"n":"pre","s":{"p":["*%_"],"r":"Mu"}},{"k":"m","m":0,"s":{"p":["*%_"],"r":"Mu"},"n":"post"},{"k":"m","m":0,"n":"highexpect","s":{"r":"Mu","p":["*%_"]}},{"k":"s","m":0,"s":{"p":["@auto","%init","*%_"],"r":"Mu"},"n":"BUILDALL"},{"k":"m","m":0,"n":"resume","s":{"r":"Bool","p":["*%_"]}},{"n":"reset-backtrace","s":{"p":["*%_"],"r":"Mu"},"m":0,"k":"m"},{"k":"m","m":0,"s":{"p":["*%_"],"r":"Bool"},"n":"is-compile-time"},{"k":"m","m":0,"s":{"p":["$bt?","*%_"],"r":"Mu"},"n":"throw"},{"s":{"r":"Mu","p":["*%_"]},"n":"fail","k":"m","m":0},{"k":"m","m":1,"n":"Str","s":{"p":["*%_"],"r":"Mu"}},{"s":{"p":["*%_"],"r":"Mu"},"n":"Str","k":"m","m":1},{"m":1,"k":"m","n":"Str","s":{"r":"Mu","p":["*%_"]}},{"n":"die","s":{"r":"Mu","p":["*%_"]},"m":0,"k":"m"},{"s":{"p":["*%_"],"r":"Mu"},"n":"rethrow","k":"m","m":0},{"k":"m","m":0,"n":"backtrace","s":{"p":["*%_"],"r":"Mu"}},{"k":"m","m":1,"s":{"p":["*%_"],"r":"Mu"},"n":"gist"},{"n":"gist","s":{"p":["*%_"],"r":"Mu"},"m":1,"k":"m"},{"s":{"p":["*%_"],"r":"Mu"},"n":"gist","m":1,"k":"m"},{"s":{"p":["*%_"],"r":"Mu"},"n":"vault-backtrace","k":"m","m":0},{"n":"BUILDALL","s":{"r":"Mu","p":["@auto","%init","*%_"]},"m":0,"k":"s"}]},{"n":"X::Syntax::VirtualCall","t":"X::Syntax::VirtualCall","k":"c","m":[{"s":{"p":["*%_"],"r":"Mu"},"n":"message","m":0,"k":"m"},{"s":{"p":["*%_"],"r":"Mu"},"n":"sorry_heading","k":"m","m":0},{"s":{"p":["$file","$line","*%_"],"r":"Mu"},"n":"SET_FILE_LINE","m":0,"k":"m"},{"k":"m","m":1,"s":{"p":["*%_"],"r":"Mu"},"n":"gist"},{"m":1,"k":"m","n":"gist","s":{"r":"Mu","p":["*%_"]}},{"m":1,"k":"m","n":"gist","s":{"p":["*%_"],"r":"Mu"}},{"n":"gist","s":{"r":"Mu","p":[":$sorry = Bool::True",":$expect = Bool::True","*%_"]},"k":"m","m":1},{"n":"call","s":{"r":"Mu","p":["*%_"]},"m":0,"k":"m"},{"m":0,"k":"m","s":{"r":"Mu","p":["*%_"]},"n":"filename"},{"s":{"r":"Mu","p":["*%_"]},"n":"pos","m":0,"k":"m"},{"s":{"r":"Mu","p":["*%_"]},"n":"line","m":0,"k":"m"},{"n":"column","s":{"p":["*%_"],"r":"Mu"},"k":"m","m":0},{"s":{"p":["*%_"],"r":"Mu"},"n":"modules","k":"m","m":0},{"s":{"r":"Mu","p":["*%_"]},"n":"is-compile-time","m":0,"k":"m"},{"n":"pre","s":{"p":["*%_"],"r":"Mu"},"m":0,"k":"m"},{"n":"post","s":{"r":"Mu","p":["*%_"]},"k":"m","m":0},{"n":"highexpect","s":{"p":["*%_"],"r":"Mu"},"m":0,"k":"m"},{"n":"BUILDALL","s":{"p":["@auto","%init","*%_"],"r":"Mu"},"k":"s","m":0},{"k":"m","m":0,"s":{"r":"Bool","p":["*%_"]},"n":"resume"},{"s":{"r":"Mu","p":["*%_"]},"n":"reset-backtrace","k":"m","m":0},{"s":{"p":["*%_"],"r":"Bool"},"n":"is-compile-time","k":"m","m":0},{"s":{"r":"Mu","p":["$bt?","*%_"]},"n":"throw","k":"m","m":0},{"s":{"r":"Mu","p":["*%_"]},"n":"fail","k":"m","m":0},{"k":"m","m":1,"s":{"p":["*%_"],"r":"Mu"},"n":"Str"},{"k":"m","m":1,"n":"Str","s":{"r":"Mu","p":["*%_"]}},{"k":"m","m":1,"n":"Str","s":{"r":"Mu","p":["*%_"]}},{"k":"m","m":0,"s":{"p":["*%_"],"r":"Mu"},"n":"die"},{"m":0,"k":"m","n":"rethrow","s":{"r":"Mu","p":["*%_"]}},{"m":0,"k":"m","s":{"r":"Mu","p":["*%_"]},"n":"backtrace"},{"m":1,"k":"m","n":"gist","s":{"p":["*%_"],"r":"Mu"}},{"n":"gist","s":{"p":["*%_"],"r":"Mu"},"k":"m","m":1},{"n":"gist","s":{"r":"Mu","p":["*%_"]},"k":"m","m":1},{"m":0,"k":"m","s":{"p":["*%_"],"r":"Mu"},"n":"vault-backtrace"},{"n":"BUILDALL","s":{"r":"Mu","p":["@auto","%init","*%_"]},"m":0,"k":"s"}],"b":"A","a":[{"n":"$.call","t":"Mu","k":"v"},{"k":"v","n":"$.filename","t":"Mu"},{"k":"v","n":"$.pos","t":"Mu"},{"k":"v","n":"$.line","t":"Mu"},{"k":"v","n":"$.column","t":"Mu"},{"k":"v","n":"@.modules","t":"Positional"},{"n":"$.is-compile-time","t":"Mu","k":"v"},{"k":"v","n":"$.pre","t":"Mu"},{"k":"v","t":"Mu","n":"$.post"},{"n":"@.highexpect","t":"Positional","k":"v"},{"t":"Mu","n":"$!ex","k":"v"},{"k":"v","n":"$!bt","t":"Mu"}]},{"t":"X::Syntax::Self::WithoutObject","n":"X::Syntax::Self::WithoutObject","d":"TITLE\nclass X::Syntax::Self::WithoutObject\n\nSUBTITLE\nCompilation error due to invoking self in an ineligible scope\n\n    class X::Syntax::Self::WithoutObject does X::Syntax { }\n\nSyntax error thrown when self is referenced in a place where no invocant is\navailable.\n\nFor example\n\n    self;\n\n\noutside a class or role declaration dies with\n\n    ===SORRY!===\n    'self' used where no object is available\n","m":[{"m":0,"k":"m","s":{"r":"Mu","p":["*%_"]},"n":"message"},{"k":"m","m":0,"s":{"r":"Mu","p":["*%_"]},"n":"sorry_heading"},{"m":0,"k":"m","n":"SET_FILE_LINE","s":{"r":"Mu","p":["$file","$line","*%_"]}},{"m":1,"k":"m","n":"gist","s":{"p":["*%_"],"r":"Mu"}},{"s":{"p":["*%_"],"r":"Mu"},"n":"gist","k":"m","m":1},{"m":1,"k":"m","n":"gist","s":{"r":"Mu","p":["*%_"]}},{"m":1,"k":"m","s":{"p":[":$sorry = Bool::True",":$expect = Bool::True","*%_"],"r":"Mu"},"n":"gist"},{"m":0,"k":"m","s":{"r":"Mu","p":["*%_"]},"n":"filename"},{"n":"pos","s":{"p":["*%_"],"r":"Mu"},"k":"m","m":0},{"s":{"r":"Mu","p":["*%_"]},"n":"line","m":0,"k":"m"},{"s":{"r":"Mu","p":["*%_"]},"n":"column","k":"m","m":0},{"n":"modules","s":{"p":["*%_"],"r":"Mu"},"m":0,"k":"m"},{"s":{"r":"Mu","p":["*%_"]},"n":"is-compile-time","m":0,"k":"m"},{"s":{"p":["*%_"],"r":"Mu"},"n":"pre","k":"m","m":0},{"n":"post","s":{"p":["*%_"],"r":"Mu"},"m":0,"k":"m"},{"m":0,"k":"m","n":"highexpect","s":{"r":"Mu","p":["*%_"]}},{"m":0,"k":"s","n":"BUILDALL","s":{"p":["@auto","%init","*%_"],"r":"Mu"}},{"k":"m","m":0,"n":"resume","s":{"p":["*%_"],"r":"Bool"}},{"k":"m","m":0,"n":"reset-backtrace","s":{"r":"Mu","p":["*%_"]}},{"m":0,"k":"m","s":{"p":["*%_"],"r":"Bool"},"n":"is-compile-time"},{"s":{"p":["$bt?","*%_"],"r":"Mu"},"n":"throw","k":"m","m":0},{"s":{"r":"Mu","p":["*%_"]},"n":"fail","m":0,"k":"m"},{"k":"m","m":1,"s":{"p":["*%_"],"r":"Mu"},"n":"Str"},{"s":{"p":["*%_"],"r":"Mu"},"n":"Str","m":1,"k":"m"},{"n":"Str","s":{"p":["*%_"],"r":"Mu"},"k":"m","m":1},{"n":"die","s":{"p":["*%_"],"r":"Mu"},"m":0,"k":"m"},{"s":{"p":["*%_"],"r":"Mu"},"n":"rethrow","k":"m","m":0},{"n":"backtrace","s":{"r":"Mu","p":["*%_"]},"m":0,"k":"m"},{"k":"m","m":1,"n":"gist","s":{"r":"Mu","p":["*%_"]}},{"k":"m","m":1,"n":"gist","s":{"p":["*%_"],"r":"Mu"}},{"m":1,"k":"m","s":{"r":"Mu","p":["*%_"]},"n":"gist"},{"k":"m","m":0,"n":"vault-backtrace","s":{"r":"Mu","p":["*%_"]}},{"k":"s","m":0,"s":{"r":"Mu","p":["@auto","%init","*%_"]},"n":"BUILDALL"}],"k":"c","a":[{"t":"Mu","n":"$.filename","k":"v"},{"t":"Mu","n":"$.pos","k":"v"},{"k":"v","t":"Mu","n":"$.line"},{"k":"v","t":"Mu","n":"$.column"},{"k":"v","n":"@.modules","t":"Positional"},{"k":"v","t":"Mu","n":"$.is-compile-time"},{"n":"$.pre","t":"Mu","k":"v"},{"t":"Mu","n":"$.post","k":"v"},{"k":"v","n":"@.highexpect","t":"Positional"},{"t":"Mu","n":"$!ex","k":"v"},{"k":"v","n":"$!bt","t":"Mu"}],"b":"A"},{"a":[{"n":"$.reason","t":"Mu","k":"v"},{"n":"$.filename","t":"Mu","k":"v"},{"n":"$.pos","t":"Mu","k":"v"},{"n":"$.line","t":"Mu","k":"v"},{"k":"v","n":"$.column","t":"Mu"},{"n":"@.modules","t":"Positional","k":"v"},{"n":"$.is-compile-time","t":"Mu","k":"v"},{"n":"$.pre","t":"Mu","k":"v"},{"t":"Mu","n":"$.post","k":"v"},{"t":"Positional","n":"@.highexpect","k":"v"},{"t":"Mu","n":"$!ex","k":"v"},{"k":"v","t":"Mu","n":"$!bt"}],"b":"A","m":[{"s":{"p":["*%_"],"r":"Mu"},"n":"message","m":0,"k":"m"},{"k":"m","m":0,"n":"sorry_heading","s":{"p":["*%_"],"r":"Mu"}},{"s":{"p":["$file","$line","*%_"],"r":"Mu"},"n":"SET_FILE_LINE","m":0,"k":"m"},{"s":{"p":["*%_"],"r":"Mu"},"n":"gist","k":"m","m":1},{"m":1,"k":"m","n":"gist","s":{"p":["*%_"],"r":"Mu"}},{"s":{"r":"Mu","p":["*%_"]},"n":"gist","k":"m","m":1},{"m":1,"k":"m","n":"gist","s":{"p":[":$sorry = Bool::True",":$expect = Bool::True","*%_"],"r":"Mu"}},{"s":{"p":["*%_"],"r":"Mu"},"n":"reason","m":0,"k":"m"},{"n":"filename","s":{"r":"Mu","p":["*%_"]},"k":"m","m":0},{"s":{"r":"Mu","p":["*%_"]},"n":"pos","m":0,"k":"m"},{"k":"m","m":0,"s":{"r":"Mu","p":["*%_"]},"n":"line"},{"n":"column","s":{"p":["*%_"],"r":"Mu"},"m":0,"k":"m"},{"s":{"r":"Mu","p":["*%_"]},"n":"modules","m":0,"k":"m"},{"m":0,"k":"m","n":"is-compile-time","s":{"p":["*%_"],"r":"Mu"}},{"k":"m","m":0,"s":{"p":["*%_"],"r":"Mu"},"n":"pre"},{"m":0,"k":"m","n":"post","s":{"r":"Mu","p":["*%_"]}},{"m":0,"k":"m","s":{"r":"Mu","p":["*%_"]},"n":"highexpect"},{"m":0,"k":"s","s":{"r":"Mu","p":["@auto","%init","*%_"]},"n":"BUILDALL"},{"k":"m","m":0,"n":"resume","s":{"r":"Bool","p":["*%_"]}},{"k":"m","m":0,"s":{"p":["*%_"],"r":"Mu"},"n":"reset-backtrace"},{"n":"is-compile-time","s":{"r":"Bool","p":["*%_"]},"m":0,"k":"m"},{"n":"throw","s":{"r":"Mu","p":["$bt?","*%_"]},"k":"m","m":0},{"n":"fail","s":{"r":"Mu","p":["*%_"]},"m":0,"k":"m"},{"m":1,"k":"m","s":{"r":"Mu","p":["*%_"]},"n":"Str"},{"n":"Str","s":{"r":"Mu","p":["*%_"]},"k":"m","m":1},{"s":{"r":"Mu","p":["*%_"]},"n":"Str","m":1,"k":"m"},{"m":0,"k":"m","s":{"r":"Mu","p":["*%_"]},"n":"die"},{"m":0,"k":"m","s":{"p":["*%_"],"r":"Mu"},"n":"rethrow"},{"n":"backtrace","s":{"r":"Mu","p":["*%_"]},"m":0,"k":"m"},{"n":"gist","s":{"r":"Mu","p":["*%_"]},"m":1,"k":"m"},{"n":"gist","s":{"r":"Mu","p":["*%_"]},"k":"m","m":1},{"k":"m","m":1,"n":"gist","s":{"p":["*%_"],"r":"Mu"}},{"k":"m","m":0,"s":{"r":"Mu","p":["*%_"]},"n":"vault-backtrace"},{"s":{"p":["@auto","%init","*%_"],"r":"Mu"},"n":"BUILDALL","k":"s","m":0}],"k":"c","d":"TITLE\nclass X::Syntax::Confused\n\nSUBTITLE\nCompilation error due to unrecognized syntax\n\n    class X::Syntax::Confused does X::Syntax { }\n\n\nThe most general syntax error, if no more specific error message can be\ngiven.\n\nFor example\n\n    1∞\n\n\ndies with\n\n    ===SORRY!===\n    Confused\n","n":"X::Syntax::Confused","t":"X::Syntax::Confused"},{"t":"X::Syntax::UnlessElse","n":"X::Syntax::UnlessElse","d":"TITLE\nclass X::Syntax::UnlessElse\n\nSUBTITLE\nCompilation error due to an unless clause followed by else\n\n    class X::Syntax::UnlessElse does X::Syntax { }\n\nSyntax error thrown when an unless clause is followed by an else clause.\n\nFor example\n\n    unless 1 { } else { };\n\n\ndies with\n\n    ===SORRY!===\n    \"unless\" does not take \"else\", please rewrite using \"if\"\n","k":"c","m":[{"n":"message","s":{"r":"Mu","p":["*%_"]},"m":0,"k":"m"},{"k":"m","m":0,"s":{"p":["*%_"],"r":"Mu"},"n":"sorry_heading"},{"k":"m","m":0,"n":"SET_FILE_LINE","s":{"r":"Mu","p":["$file","$line","*%_"]}},{"s":{"p":["*%_"],"r":"Mu"},"n":"gist","k":"m","m":1},{"k":"m","m":1,"n":"gist","s":{"p":["*%_"],"r":"Mu"}},{"m":1,"k":"m","n":"gist","s":{"p":["*%_"],"r":"Mu"}},{"n":"gist","s":{"r":"Mu","p":[":$sorry = Bool::True",":$expect = Bool::True","*%_"]},"k":"m","m":1},{"n":"keyword","s":{"r":"Mu","p":["*%_"]},"m":0,"k":"m"},{"n":"filename","s":{"r":"Mu","p":["*%_"]},"k":"m","m":0},{"k":"m","m":0,"n":"pos","s":{"r":"Mu","p":["*%_"]}},{"n":"line","s":{"r":"Mu","p":["*%_"]},"m":0,"k":"m"},{"n":"column","s":{"r":"Mu","p":["*%_"]},"k":"m","m":0},{"m":0,"k":"m","n":"modules","s":{"p":["*%_"],"r":"Mu"}},{"s":{"r":"Mu","p":["*%_"]},"n":"is-compile-time","m":0,"k":"m"},{"s":{"p":["*%_"],"r":"Mu"},"n":"pre","k":"m","m":0},{"m":0,"k":"m","s":{"r":"Mu","p":["*%_"]},"n":"post"},{"s":{"p":["*%_"],"r":"Mu"},"n":"highexpect","k":"m","m":0},{"m":0,"k":"s","n":"BUILDALL","s":{"r":"Mu","p":["@auto","%init","*%_"]}},{"m":0,"k":"m","n":"resume","s":{"p":["*%_"],"r":"Bool"}},{"n":"reset-backtrace","s":{"r":"Mu","p":["*%_"]},"k":"m","m":0},{"n":"is-compile-time","s":{"r":"Bool","p":["*%_"]},"k":"m","m":0},{"s":{"r":"Mu","p":["$bt?","*%_"]},"n":"throw","m":0,"k":"m"},{"n":"fail","s":{"r":"Mu","p":["*%_"]},"k":"m","m":0},{"n":"Str","s":{"p":["*%_"],"r":"Mu"},"m":1,"k":"m"},{"m":1,"k":"m","n":"Str","s":{"p":["*%_"],"r":"Mu"}},{"s":{"r":"Mu","p":["*%_"]},"n":"Str","k":"m","m":1},{"n":"die","s":{"r":"Mu","p":["*%_"]},"k":"m","m":0},{"s":{"r":"Mu","p":["*%_"]},"n":"rethrow","k":"m","m":0},{"n":"backtrace","s":{"p":["*%_"],"r":"Mu"},"k":"m","m":0},{"s":{"p":["*%_"],"r":"Mu"},"n":"gist","m":1,"k":"m"},{"m":1,"k":"m","s":{"r":"Mu","p":["*%_"]},"n":"gist"},{"n":"gist","s":{"r":"Mu","p":["*%_"]},"k":"m","m":1},{"n":"vault-backtrace","s":{"p":["*%_"],"r":"Mu"},"m":0,"k":"m"},{"m":0,"k":"s","n":"BUILDALL","s":{"r":"Mu","p":["@auto","%init","*%_"]}}],"b":"A","a":[{"t":"Mu","n":"$.keyword","k":"v"},{"k":"v","t":"Mu","n":"$.filename"},{"n":"$.pos","t":"Mu","k":"v"},{"k":"v","n":"$.line","t":"Mu"},{"n":"$.column","t":"Mu","k":"v"},{"t":"Positional","n":"@.modules","k":"v"},{"t":"Mu","n":"$.is-compile-time","k":"v"},{"k":"v","t":"Mu","n":"$.pre"},{"n":"$.post","t":"Mu","k":"v"},{"t":"Positional","n":"@.highexpect","k":"v"},{"k":"v","n":"$!ex","t":"Mu"},{"n":"$!bt","t":"Mu","k":"v"}]},{"m":[{"n":"message","s":{"p":["*%_"],"r":"Mu"},"m":0,"k":"m"},{"m":0,"k":"m","n":"sorry_heading","s":{"r":"Mu","p":["*%_"]}},{"m":0,"k":"m","s":{"p":["$file","$line","*%_"],"r":"Mu"},"n":"SET_FILE_LINE"},{"s":{"r":"Mu","p":["*%_"]},"n":"gist","m":1,"k":"m"},{"k":"m","m":1,"s":{"r":"Mu","p":["*%_"]},"n":"gist"},{"n":"gist","s":{"r":"Mu","p":["*%_"]},"m":1,"k":"m"},{"m":1,"k":"m","n":"gist","s":{"r":"Mu","p":[":$sorry = Bool::True",":$expect = Bool::True","*%_"]}},{"k":"m","m":0,"s":{"r":"Mu","p":["*%_"]},"n":"filename"},{"m":0,"k":"m","s":{"p":["*%_"],"r":"Mu"},"n":"pos"},{"n":"line","s":{"p":["*%_"],"r":"Mu"},"m":0,"k":"m"},{"s":{"r":"Mu","p":["*%_"]},"n":"column","k":"m","m":0},{"m":0,"k":"m","n":"modules","s":{"p":["*%_"],"r":"Mu"}},{"k":"m","m":0,"s":{"r":"Mu","p":["*%_"]},"n":"is-compile-time"},{"s":{"p":["*%_"],"r":"Mu"},"n":"pre","m":0,"k":"m"},{"s":{"p":["*%_"],"r":"Mu"},"n":"post","k":"m","m":0},{"m":0,"k":"m","s":{"p":["*%_"],"r":"Mu"},"n":"highexpect"},{"s":{"p":["@auto","%init","*%_"],"r":"Mu"},"n":"BUILDALL","m":0,"k":"s"},{"s":{"r":"Bool","p":["*%_"]},"n":"resume","k":"m","m":0},{"m":0,"k":"m","s":{"r":"Mu","p":["*%_"]},"n":"reset-backtrace"},{"s":{"p":["*%_"],"r":"Bool"},"n":"is-compile-time","k":"m","m":0},{"k":"m","m":0,"s":{"r":"Mu","p":["$bt?","*%_"]},"n":"throw"},{"k":"m","m":0,"n":"fail","s":{"r":"Mu","p":["*%_"]}},{"n":"Str","s":{"p":["*%_"],"r":"Mu"},"m":1,"k":"m"},{"k":"m","m":1,"s":{"p":["*%_"],"r":"Mu"},"n":"Str"},{"m":1,"k":"m","s":{"p":["*%_"],"r":"Mu"},"n":"Str"},{"k":"m","m":0,"s":{"r":"Mu","p":["*%_"]},"n":"die"},{"n":"rethrow","s":{"r":"Mu","p":["*%_"]},"m":0,"k":"m"},{"k":"m","m":0,"n":"backtrace","s":{"r":"Mu","p":["*%_"]}},{"n":"gist","s":{"p":["*%_"],"r":"Mu"},"m":1,"k":"m"},{"m":1,"k":"m","s":{"p":["*%_"],"r":"Mu"},"n":"gist"},{"n":"gist","s":{"p":["*%_"],"r":"Mu"},"k":"m","m":1},{"k":"m","m":0,"n":"vault-backtrace","s":{"p":["*%_"],"r":"Mu"}},{"m":0,"k":"s","s":{"r":"Mu","p":["@auto","%init","*%_"]},"n":"BUILDALL"}],"k":"c","b":"A","a":[{"n":"$.filename","t":"Mu","k":"v"},{"n":"$.pos","t":"Mu","k":"v"},{"t":"Mu","n":"$.line","k":"v"},{"n":"$.column","t":"Mu","k":"v"},{"k":"v","t":"Positional","n":"@.modules"},{"t":"Mu","n":"$.is-compile-time","k":"v"},{"t":"Mu","n":"$.pre","k":"v"},{"n":"$.post","t":"Mu","k":"v"},{"n":"@.highexpect","t":"Positional","k":"v"},{"t":"Mu","n":"$!ex","k":"v"},{"n":"$!bt","t":"Mu","k":"v"}],"n":"X::Syntax::Pod::BeginWithoutIdentifier","t":"X::Syntax::Pod::BeginWithoutIdentifier"},{"n":"X::Syntax::Pod::BeginWithoutEnd","t":"X::Syntax::Pod::BeginWithoutEnd","a":[{"n":"$.type","t":"Mu","k":"v"},{"k":"v","n":"$.spaces","t":"Mu"},{"n":"$.instead","t":"Mu","k":"v"},{"k":"v","n":"$.filename","t":"Mu"},{"t":"Mu","n":"$.pos","k":"v"},{"n":"$.line","t":"Mu","k":"v"},{"t":"Mu","n":"$.column","k":"v"},{"k":"v","t":"Positional","n":"@.modules"},{"n":"$.is-compile-time","t":"Mu","k":"v"},{"k":"v","n":"$.pre","t":"Mu"},{"t":"Mu","n":"$.post","k":"v"},{"t":"Positional","n":"@.highexpect","k":"v"},{"n":"$!ex","t":"Mu","k":"v"},{"n":"$!bt","t":"Mu","k":"v"}],"b":"A","m":[{"m":0,"k":"m","s":{"r":"Mu","p":["*%_"]},"n":"message"},{"m":0,"k":"m","n":"sorry_heading","s":{"r":"Mu","p":["*%_"]}},{"k":"m","m":0,"s":{"p":["$file","$line","*%_"],"r":"Mu"},"n":"SET_FILE_LINE"},{"k":"m","m":1,"n":"gist","s":{"p":["*%_"],"r":"Mu"}},{"k":"m","m":1,"s":{"r":"Mu","p":["*%_"]},"n":"gist"},{"n":"gist","s":{"p":["*%_"],"r":"Mu"},"k":"m","m":1},{"s":{"r":"Mu","p":[":$sorry = Bool::True",":$expect = Bool::True","*%_"]},"n":"gist","k":"m","m":1},{"m":0,"k":"m","n":"type","s":{"p":["*%_"],"r":"Mu"}},{"s":{"p":["*%_"],"r":"Mu"},"n":"spaces","k":"m","m":0},{"s":{"r":"Mu","p":["*%_"]},"n":"instead","m":0,"k":"m"},{"k":"m","m":0,"s":{"p":["*%_"],"r":"Mu"},"n":"filename"},{"s":{"p":["*%_"],"r":"Mu"},"n":"pos","m":0,"k":"m"},{"n":"line","s":{"r":"Mu","p":["*%_"]},"m":0,"k":"m"},{"n":"column","s":{"p":["*%_"],"r":"Mu"},"m":0,"k":"m"},{"s":{"r":"Mu","p":["*%_"]},"n":"modules","m":0,"k":"m"},{"s":{"r":"Mu","p":["*%_"]},"n":"is-compile-time","m":0,"k":"m"},{"n":"pre","s":{"p":["*%_"],"r":"Mu"},"k":"m","m":0},{"m":0,"k":"m","s":{"r":"Mu","p":["*%_"]},"n":"post"},{"k":"m","m":0,"n":"highexpect","s":{"p":["*%_"],"r":"Mu"}},{"n":"BUILDALL","s":{"r":"Mu","p":["@auto","%init","*%_"]},"k":"s","m":0},{"s":{"r":"Bool","p":["*%_"]},"n":"resume","k":"m","m":0},{"n":"reset-backtrace","s":{"p":["*%_"],"r":"Mu"},"k":"m","m":0},{"m":0,"k":"m","n":"is-compile-time","s":{"p":["*%_"],"r":"Bool"}},{"k":"m","m":0,"s":{"p":["$bt?","*%_"],"r":"Mu"},"n":"throw"},{"k":"m","m":0,"s":{"r":"Mu","p":["*%_"]},"n":"fail"},{"m":1,"k":"m","n":"Str","s":{"p":["*%_"],"r":"Mu"}},{"k":"m","m":1,"s":{"p":["*%_"],"r":"Mu"},"n":"Str"},{"k":"m","m":1,"n":"Str","s":{"r":"Mu","p":["*%_"]}},{"m":0,"k":"m","n":"die","s":{"r":"Mu","p":["*%_"]}},{"s":{"r":"Mu","p":["*%_"]},"n":"rethrow","k":"m","m":0},{"m":0,"k":"m","n":"backtrace","s":{"p":["*%_"],"r":"Mu"}},{"s":{"r":"Mu","p":["*%_"]},"n":"gist","k":"m","m":1},{"n":"gist","s":{"p":["*%_"],"r":"Mu"},"m":1,"k":"m"},{"k":"m","m":1,"s":{"p":["*%_"],"r":"Mu"},"n":"gist"},{"m":0,"k":"m","s":{"r":"Mu","p":["*%_"]},"n":"vault-backtrace"},{"k":"s","m":0,"n":"BUILDALL","s":{"p":["@auto","%init","*%_"],"r":"Mu"}}],"k":"c"},{"t":"X::Syntax::Reserved","n":"X::Syntax::Reserved","d":"TITLE\nclass X::Syntax::Reserved\n\nSUBTITLE\nCompilation error due to use of syntax reserved for future use\n\n    class X::Syntax::Reserved does X::Syntax { }\n\nSyntax error thrown when a syntax is used which is reserved for future\nexpansion.\n\nFor example\n\n    my @a();\n\n\ndies with\n\n    ===SORRY!===\n    The () shape syntax in array declarations is reserved\n\n\n","k":"c","m":[{"k":"m","m":0,"s":{"r":"Mu","p":["*%_"]},"n":"message"},{"n":"sorry_heading","s":{"p":["*%_"],"r":"Mu"},"k":"m","m":0},{"s":{"r":"Mu","p":["$file","$line","*%_"]},"n":"SET_FILE_LINE","m":0,"k":"m"},{"n":"gist","s":{"p":["*%_"],"r":"Mu"},"k":"m","m":1},{"n":"gist","s":{"p":["*%_"],"r":"Mu"},"m":1,"k":"m"},{"m":1,"k":"m","n":"gist","s":{"r":"Mu","p":["*%_"]}},{"m":1,"k":"m","s":{"p":[":$sorry = Bool::True",":$expect = Bool::True","*%_"],"r":"Mu"},"n":"gist"},{"k":"m","m":0,"n":"reserved","s":{"p":["*%_"],"r":"Mu"}},{"n":"instead","s":{"p":["*%_"],"r":"Mu"},"k":"m","m":0},{"k":"m","m":0,"n":"filename","s":{"p":["*%_"],"r":"Mu"}},{"n":"pos","s":{"p":["*%_"],"r":"Mu"},"k":"m","m":0},{"n":"line","s":{"r":"Mu","p":["*%_"]},"m":0,"k":"m"},{"k":"m","m":0,"s":{"r":"Mu","p":["*%_"]},"n":"column"},{"k":"m","m":0,"s":{"r":"Mu","p":["*%_"]},"n":"modules"},{"s":{"p":["*%_"],"r":"Mu"},"n":"is-compile-time","k":"m","m":0},{"s":{"p":["*%_"],"r":"Mu"},"n":"pre","k":"m","m":0},{"s":{"r":"Mu","p":["*%_"]},"n":"post","m":0,"k":"m"},{"k":"m","m":0,"n":"highexpect","s":{"r":"Mu","p":["*%_"]}},{"m":0,"k":"s","n":"BUILDALL","s":{"p":["@auto","%init","*%_"],"r":"Mu"}},{"k":"m","m":0,"n":"resume","s":{"r":"Bool","p":["*%_"]}},{"s":{"r":"Mu","p":["*%_"]},"n":"reset-backtrace","k":"m","m":0},{"s":{"r":"Bool","p":["*%_"]},"n":"is-compile-time","k":"m","m":0},{"n":"throw","s":{"r":"Mu","p":["$bt?","*%_"]},"m":0,"k":"m"},{"m":0,"k":"m","s":{"r":"Mu","p":["*%_"]},"n":"fail"},{"s":{"r":"Mu","p":["*%_"]},"n":"Str","k":"m","m":1},{"k":"m","m":1,"s":{"r":"Mu","p":["*%_"]},"n":"Str"},{"m":1,"k":"m","s":{"r":"Mu","p":["*%_"]},"n":"Str"},{"n":"die","s":{"r":"Mu","p":["*%_"]},"m":0,"k":"m"},{"n":"rethrow","s":{"p":["*%_"],"r":"Mu"},"k":"m","m":0},{"m":0,"k":"m","s":{"r":"Mu","p":["*%_"]},"n":"backtrace"},{"s":{"p":["*%_"],"r":"Mu"},"n":"gist","m":1,"k":"m"},{"s":{"r":"Mu","p":["*%_"]},"n":"gist","m":1,"k":"m"},{"n":"gist","s":{"r":"Mu","p":["*%_"]},"k":"m","m":1},{"n":"vault-backtrace","s":{"r":"Mu","p":["*%_"]},"m":0,"k":"m"},{"n":"BUILDALL","s":{"p":["@auto","%init","*%_"],"r":"Mu"},"k":"s","m":0}],"a":[{"t":"Mu","n":"$.reserved","k":"v"},{"k":"v","t":"Mu","n":"$.instead"},{"k":"v","n":"$.filename","t":"Mu"},{"k":"v","n":"$.pos","t":"Mu"},{"k":"v","t":"Mu","n":"$.line"},{"k":"v","t":"Mu","n":"$.column"},{"n":"@.modules","t":"Positional","k":"v"},{"k":"v","n":"$.is-compile-time","t":"Mu"},{"n":"$.pre","t":"Mu","k":"v"},{"k":"v","n":"$.post","t":"Mu"},{"k":"v","n":"@.highexpect","t":"Positional"},{"n":"$!ex","t":"Mu","k":"v"},{"t":"Mu","n":"$!bt","k":"v"}],"b":"A"},{"n":"X::Syntax::BlockGobbled","t":"X::Syntax::BlockGobbled","m":[{"s":{"p":["*%_"],"r":"Mu"},"n":"message","m":0,"k":"m"},{"s":{"p":["*%_"],"r":"Mu"},"n":"sorry_heading","m":0,"k":"m"},{"m":0,"k":"m","s":{"p":["$file","$line","*%_"],"r":"Mu"},"n":"SET_FILE_LINE"},{"n":"gist","s":{"r":"Mu","p":["*%_"]},"k":"m","m":1},{"m":1,"k":"m","s":{"p":["*%_"],"r":"Mu"},"n":"gist"},{"n":"gist","s":{"p":["*%_"],"r":"Mu"},"k":"m","m":1},{"m":1,"k":"m","n":"gist","s":{"p":[":$sorry = Bool::True",":$expect = Bool::True","*%_"],"r":"Mu"}},{"k":"m","m":0,"n":"what","s":{"r":"Mu","p":["*%_"]}},{"m":0,"k":"m","n":"filename","s":{"p":["*%_"],"r":"Mu"}},{"k":"m","m":0,"s":{"r":"Mu","p":["*%_"]},"n":"pos"},{"k":"m","m":0,"n":"line","s":{"p":["*%_"],"r":"Mu"}},{"s":{"r":"Mu","p":["*%_"]},"n":"column","k":"m","m":0},{"s":{"r":"Mu","p":["*%_"]},"n":"modules","k":"m","m":0},{"s":{"p":["*%_"],"r":"Mu"},"n":"is-compile-time","m":0,"k":"m"},{"k":"m","m":0,"n":"pre","s":{"p":["*%_"],"r":"Mu"}},{"k":"m","m":0,"n":"post","s":{"p":["*%_"],"r":"Mu"}},{"s":{"r":"Mu","p":["*%_"]},"n":"highexpect","m":0,"k":"m"},{"m":0,"k":"s","n":"BUILDALL","s":{"r":"Mu","p":["@auto","%init","*%_"]}},{"n":"resume","s":{"p":["*%_"],"r":"Bool"},"k":"m","m":0},{"k":"m","m":0,"n":"reset-backtrace","s":{"r":"Mu","p":["*%_"]}},{"n":"is-compile-time","s":{"r":"Bool","p":["*%_"]},"k":"m","m":0},{"m":0,"k":"m","n":"throw","s":{"p":["$bt?","*%_"],"r":"Mu"}},{"m":0,"k":"m","s":{"r":"Mu","p":["*%_"]},"n":"fail"},{"s":{"p":["*%_"],"r":"Mu"},"n":"Str","k":"m","m":1},{"s":{"p":["*%_"],"r":"Mu"},"n":"Str","k":"m","m":1},{"k":"m","m":1,"n":"Str","s":{"p":["*%_"],"r":"Mu"}},{"s":{"p":["*%_"],"r":"Mu"},"n":"die","k":"m","m":0},{"s":{"p":["*%_"],"r":"Mu"},"n":"rethrow","k":"m","m":0},{"n":"backtrace","s":{"p":["*%_"],"r":"Mu"},"m":0,"k":"m"},{"n":"gist","s":{"r":"Mu","p":["*%_"]},"m":1,"k":"m"},{"n":"gist","s":{"r":"Mu","p":["*%_"]},"k":"m","m":1},{"k":"m","m":1,"s":{"r":"Mu","p":["*%_"]},"n":"gist"},{"m":0,"k":"m","n":"vault-backtrace","s":{"r":"Mu","p":["*%_"]}},{"m":0,"k":"s","s":{"r":"Mu","p":["@auto","%init","*%_"]},"n":"BUILDALL"}],"k":"c","b":"A","a":[{"k":"v","n":"$.what","t":"Mu"},{"t":"Mu","n":"$.filename","k":"v"},{"t":"Mu","n":"$.pos","k":"v"},{"k":"v","n":"$.line","t":"Mu"},{"k":"v","t":"Mu","n":"$.column"},{"k":"v","n":"@.modules","t":"Positional"},{"t":"Mu","n":"$.is-compile-time","k":"v"},{"k":"v","n":"$.pre","t":"Mu"},{"k":"v","n":"$.post","t":"Mu"},{"k":"v","n":"@.highexpect","t":"Positional"},{"k":"v","n":"$!ex","t":"Mu"},{"k":"v","t":"Mu","n":"$!bt"}]},{"k":"c","m":[{"k":"m","m":0,"s":{"r":"Mu","p":["*%_"]},"n":"message"},{"m":0,"k":"m","n":"sorry_heading","s":{"r":"Mu","p":["*%_"]}},{"n":"SET_FILE_LINE","s":{"p":["$file","$line","*%_"],"r":"Mu"},"m":0,"k":"m"},{"m":1,"k":"m","s":{"p":["*%_"],"r":"Mu"},"n":"gist"},{"m":1,"k":"m","s":{"r":"Mu","p":["*%_"]},"n":"gist"},{"n":"gist","s":{"p":["*%_"],"r":"Mu"},"m":1,"k":"m"},{"k":"m","m":1,"s":{"r":"Mu","p":[":$sorry = Bool::True",":$expect = Bool::True","*%_"]},"n":"gist"},{"n":"name","s":{"r":"Mu","p":["*%_"]},"m":0,"k":"m"},{"m":0,"k":"m","s":{"r":"Mu","p":["*%_"]},"n":"identifier-name"},{"n":"filename","s":{"r":"Mu","p":["*%_"]},"k":"m","m":0},{"n":"pos","s":{"p":["*%_"],"r":"Mu"},"m":0,"k":"m"},{"k":"m","m":0,"s":{"r":"Mu","p":["*%_"]},"n":"line"},{"s":{"p":["*%_"],"r":"Mu"},"n":"column","k":"m","m":0},{"s":{"r":"Mu","p":["*%_"]},"n":"modules","k":"m","m":0},{"s":{"p":["*%_"],"r":"Mu"},"n":"is-compile-time","k":"m","m":0},{"n":"pre","s":{"p":["*%_"],"r":"Mu"},"m":0,"k":"m"},{"s":{"r":"Mu","p":["*%_"]},"n":"post","m":0,"k":"m"},{"k":"m","m":0,"s":{"r":"Mu","p":["*%_"]},"n":"highexpect"},{"k":"s","m":0,"s":{"r":"Mu","p":["@auto","%init","*%_"]},"n":"BUILDALL"},{"k":"m","m":0,"n":"resume","s":{"p":["*%_"],"r":"Bool"}},{"k":"m","m":0,"n":"reset-backtrace","s":{"p":["*%_"],"r":"Mu"}},{"s":{"r":"Bool","p":["*%_"]},"n":"is-compile-time","m":0,"k":"m"},{"s":{"p":["$bt?","*%_"],"r":"Mu"},"n":"throw","m":0,"k":"m"},{"m":0,"k":"m","s":{"r":"Mu","p":["*%_"]},"n":"fail"},{"s":{"r":"Mu","p":["*%_"]},"n":"Str","k":"m","m":1},{"m":1,"k":"m","n":"Str","s":{"r":"Mu","p":["*%_"]}},{"n":"Str","s":{"r":"Mu","p":["*%_"]},"m":1,"k":"m"},{"n":"die","s":{"p":["*%_"],"r":"Mu"},"k":"m","m":0},{"m":0,"k":"m","s":{"r":"Mu","p":["*%_"]},"n":"rethrow"},{"n":"backtrace","s":{"p":["*%_"],"r":"Mu"},"m":0,"k":"m"},{"s":{"r":"Mu","p":["*%_"]},"n":"gist","k":"m","m":1},{"k":"m","m":1,"s":{"r":"Mu","p":["*%_"]},"n":"gist"},{"m":1,"k":"m","n":"gist","s":{"p":["*%_"],"r":"Mu"}},{"k":"m","m":0,"s":{"r":"Mu","p":["*%_"]},"n":"vault-backtrace"},{"s":{"p":["@auto","%init","*%_"],"r":"Mu"},"n":"BUILDALL","k":"s","m":0}],"b":"A","a":[{"k":"v","n":"$.name","t":"Mu"},{"k":"v","n":"$.identifier-name","t":"Mu"},{"n":"$.filename","t":"Mu","k":"v"},{"t":"Mu","n":"$.pos","k":"v"},{"k":"v","n":"$.line","t":"Mu"},{"k":"v","n":"$.column","t":"Mu"},{"n":"@.modules","t":"Positional","k":"v"},{"t":"Mu","n":"$.is-compile-time","k":"v"},{"k":"v","n":"$.pre","t":"Mu"},{"n":"$.post","t":"Mu","k":"v"},{"t":"Positional","n":"@.highexpect","k":"v"},{"t":"Mu","n":"$!ex","k":"v"},{"k":"v","n":"$!bt","t":"Mu"}],"d":"TITLE\nclass X::Syntax::Perl5Var\n\nSUBTITLE\nCompilation error due to use of Perl 5-only default variables\n\n    class X::Syntax::Perl5Var does X::Syntax { }\n\nSyntax error thrown when some piece of code tries to use one of the old\nPerl 5 variables (and it does not error for some other reason).\n\n    say $];\n\n\ndies with\n\n    Unsupported use of $] variable; in Raku please use $*PERL.version or $*PERL.compiler.version\n\n\nFor every unsupported variable (which include most $^'letter' constructs,\nas well as others like $\", the error message will mention that the variable\nis unsupported and the equivalent commands you could use.","n":"X::Syntax::Perl5Var","t":"X::Syntax::Perl5Var"},{"t":"X::Syntax::NonAssociative","n":"X::Syntax::NonAssociative","b":"A","a":[{"n":"$.left","t":"Mu","k":"v"},{"k":"v","t":"Mu","n":"$.right"},{"n":"$.filename","t":"Mu","k":"v"},{"k":"v","n":"$.pos","t":"Mu"},{"k":"v","t":"Mu","n":"$.line"},{"n":"$.column","t":"Mu","k":"v"},{"t":"Positional","n":"@.modules","k":"v"},{"k":"v","n":"$.is-compile-time","t":"Mu"},{"n":"$.pre","t":"Mu","k":"v"},{"k":"v","t":"Mu","n":"$.post"},{"n":"@.highexpect","t":"Positional","k":"v"},{"t":"Mu","n":"$!ex","k":"v"},{"k":"v","t":"Mu","n":"$!bt"}],"m":[{"m":0,"k":"m","n":"message","s":{"r":"Mu","p":["*%_"]}},{"m":0,"k":"m","n":"sorry_heading","s":{"p":["*%_"],"r":"Mu"}},{"m":0,"k":"m","s":{"p":["$file","$line","*%_"],"r":"Mu"},"n":"SET_FILE_LINE"},{"m":1,"k":"m","n":"gist","s":{"r":"Mu","p":["*%_"]}},{"n":"gist","s":{"p":["*%_"],"r":"Mu"},"k":"m","m":1},{"k":"m","m":1,"s":{"p":["*%_"],"r":"Mu"},"n":"gist"},{"m":1,"k":"m","n":"gist","s":{"r":"Mu","p":[":$sorry = Bool::True",":$expect = Bool::True","*%_"]}},{"n":"left","s":{"r":"Mu","p":["*%_"]},"k":"m","m":0},{"n":"right","s":{"r":"Mu","p":["*%_"]},"m":0,"k":"m"},{"k":"m","m":0,"s":{"r":"Mu","p":["*%_"]},"n":"filename"},{"n":"pos","s":{"r":"Mu","p":["*%_"]},"m":0,"k":"m"},{"m":0,"k":"m","n":"line","s":{"r":"Mu","p":["*%_"]}},{"k":"m","m":0,"s":{"p":["*%_"],"r":"Mu"},"n":"column"},{"m":0,"k":"m","n":"modules","s":{"p":["*%_"],"r":"Mu"}},{"m":0,"k":"m","s":{"p":["*%_"],"r":"Mu"},"n":"is-compile-time"},{"s":{"p":["*%_"],"r":"Mu"},"n":"pre","k":"m","m":0},{"k":"m","m":0,"n":"post","s":{"p":["*%_"],"r":"Mu"}},{"k":"m","m":0,"n":"highexpect","s":{"r":"Mu","p":["*%_"]}},{"n":"BUILDALL","s":{"p":["@auto","%init","*%_"],"r":"Mu"},"m":0,"k":"s"},{"n":"resume","s":{"r":"Bool","p":["*%_"]},"m":0,"k":"m"},{"m":0,"k":"m","s":{"r":"Mu","p":["*%_"]},"n":"reset-backtrace"},{"k":"m","m":0,"s":{"r":"Bool","p":["*%_"]},"n":"is-compile-time"},{"m":0,"k":"m","n":"throw","s":{"r":"Mu","p":["$bt?","*%_"]}},{"n":"fail","s":{"p":["*%_"],"r":"Mu"},"k":"m","m":0},{"m":1,"k":"m","n":"Str","s":{"p":["*%_"],"r":"Mu"}},{"m":1,"k":"m","s":{"p":["*%_"],"r":"Mu"},"n":"Str"},{"s":{"p":["*%_"],"r":"Mu"},"n":"Str","m":1,"k":"m"},{"k":"m","m":0,"n":"die","s":{"p":["*%_"],"r":"Mu"}},{"n":"rethrow","s":{"r":"Mu","p":["*%_"]},"k":"m","m":0},{"n":"backtrace","s":{"r":"Mu","p":["*%_"]},"m":0,"k":"m"},{"n":"gist","s":{"p":["*%_"],"r":"Mu"},"k":"m","m":1},{"s":{"p":["*%_"],"r":"Mu"},"n":"gist","m":1,"k":"m"},{"m":1,"k":"m","s":{"r":"Mu","p":["*%_"]},"n":"gist"},{"s":{"r":"Mu","p":["*%_"]},"n":"vault-backtrace","m":0,"k":"m"},{"s":{"p":["@auto","%init","*%_"],"r":"Mu"},"n":"BUILDALL","m":0,"k":"s"}],"k":"c"},{"t":"X::AdHoc","n":"X::AdHoc","d":"TITLE\nclass X::AdHoc\n\nSUBTITLE\nError with a custom message\n\n    class X::AdHoc is Exception { }\n\n\nX::AdHoc is the type into which objects are wrapped if they are thrown as\nexceptions, but don't inherit from Exception.\n\nIts benefit over returning non-Exception objects is that it gives access to\nall the methods from class Exception, like backtrace and rethrow.\n\nYou can obtain the original object with the payload method.\n\n    try {\n        die [404, 'File not found']; # throw non-exception object\n    }\n    print \"Got HTTP code \",\n        $!.payload[0],          # 404\n        \" and backtrace \",\n        $!.backtrace.Str;\n\nNote that young code will often be prototyped using X::AdHoc and then later\nbe revised to use more specific subtypes of Exception. As such it is\nusually best not to explicitly rely on receiving an X::AdHoc – in many\ncases using the string returned by the .message method, which all\nExceptions must have, is preferable. Please note that we need to explicitly\ncall .Str to stringify the backtrace correctly.\n\n","m":[{"m":0,"k":"m","s":{"r":"Mu","p":["*%_"]},"n":"message"},{"n":"Numeric","s":{"r":"Mu","p":["*%_"]},"k":"m","m":0},{"k":"m","m":0,"n":"from-slurpy","s":{"p":["|cap is raw"],"r":"Mu"}},{"n":"payload","s":{"p":["*%_"],"r":"Mu"},"k":"m","m":0},{"m":0,"k":"s","n":"BUILDALL","s":{"r":"Mu","p":["@auto","%init","*%_"]}},{"k":"m","m":0,"s":{"r":"Bool","p":["*%_"]},"n":"resume"},{"s":{"r":"Mu","p":["*%_"]},"n":"reset-backtrace","k":"m","m":0},{"n":"is-compile-time","s":{"p":["*%_"],"r":"Bool"},"m":0,"k":"m"},{"k":"m","m":0,"s":{"p":["$bt?","*%_"],"r":"Mu"},"n":"throw"},{"s":{"p":["*%_"],"r":"Mu"},"n":"fail","k":"m","m":0},{"m":1,"k":"m","n":"Str","s":{"r":"Mu","p":["*%_"]}},{"k":"m","m":1,"s":{"r":"Mu","p":["*%_"]},"n":"Str"},{"k":"m","m":1,"s":{"p":["*%_"],"r":"Mu"},"n":"Str"},{"n":"die","s":{"p":["*%_"],"r":"Mu"},"m":0,"k":"m"},{"n":"rethrow","s":{"r":"Mu","p":["*%_"]},"k":"m","m":0},{"k":"m","m":0,"s":{"p":["*%_"],"r":"Mu"},"n":"backtrace"},{"s":{"r":"Mu","p":["*%_"]},"n":"gist","k":"m","m":1},{"n":"gist","s":{"r":"Mu","p":["*%_"]},"m":1,"k":"m"},{"s":{"r":"Mu","p":["*%_"]},"n":"gist","m":1,"k":"m"},{"k":"m","m":0,"s":{"p":["*%_"],"r":"Mu"},"n":"vault-backtrace"},{"k":"s","m":0,"s":{"p":["@auto","%init","*%_"],"r":"Mu"},"n":"BUILDALL"}],"k":"c","b":"A","a":[{"k":"v","n":"$.payload","t":"Mu"},{"t":"Mu","n":"$!ex","k":"v"},{"t":"Mu","n":"$!bt","k":"v"}]},{"t":"X::SecurityPolicy","n":"X::SecurityPolicy","m":[{"s":{"r":"Mu","p":["@auto","%init","*%_"]},"n":"BUILDALL","m":0,"k":"s"},{"m":0,"k":"m","s":{"r":"Bool","p":["*%_"]},"n":"resume"},{"s":{"r":"Mu","p":["*%_"]},"n":"reset-backtrace","k":"m","m":0},{"s":{"p":["*%_"],"r":"Bool"},"n":"is-compile-time","k":"m","m":0},{"m":0,"k":"m","n":"throw","s":{"r":"Mu","p":["$bt?","*%_"]}},{"k":"m","m":0,"n":"fail","s":{"p":["*%_"],"r":"Mu"}},{"s":{"p":["*%_"],"r":"Mu"},"n":"Str","k":"m","m":1},{"s":{"r":"Mu","p":["*%_"]},"n":"Str","k":"m","m":1},{"k":"m","m":1,"n":"Str","s":{"p":["*%_"],"r":"Mu"}},{"n":"die","s":{"r":"Mu","p":["*%_"]},"m":0,"k":"m"},{"n":"rethrow","s":{"r":"Mu","p":["*%_"]},"m":0,"k":"m"},{"n":"backtrace","s":{"p":["*%_"],"r":"Mu"},"k":"m","m":0},{"k":"m","m":1,"s":{"p":["*%_"],"r":"Mu"},"n":"gist"},{"m":1,"k":"m","s":{"r":"Mu","p":["*%_"]},"n":"gist"},{"n":"gist","s":{"p":["*%_"],"r":"Mu"},"m":1,"k":"m"},{"m":0,"k":"m","n":"vault-backtrace","s":{"p":["*%_"],"r":"Mu"}},{"s":{"r":"Mu","p":["@auto","%init","*%_"]},"n":"BUILDALL","k":"s","m":0}],"k":"c","b":"A","a":[{"k":"v","t":"Mu","n":"$!ex"},{"t":"Mu","n":"$!bt","k":"v"}]},{"k":"c","m":[{"k":"m","m":0,"s":{"p":["*%_"],"r":"Mu"},"n":"message"},{"m":0,"k":"m","s":{"p":["*%_"],"r":"Mu"},"n":"Numeric"},{"m":0,"k":"m","n":"from-slurpy","s":{"p":["|cap is raw"],"r":"Mu"}},{"n":"payload","s":{"r":"Mu","p":["*%_"]},"m":0,"k":"m"},{"m":0,"k":"s","s":{"r":"Mu","p":["@auto","%init","*%_"]},"n":"BUILDALL"},{"s":{"r":"Mu","p":["@auto","%init","*%_"]},"n":"BUILDALL","m":0,"k":"s"},{"s":{"p":["*%_"],"r":"Bool"},"n":"resume","k":"m","m":0},{"n":"reset-backtrace","s":{"p":["*%_"],"r":"Mu"},"m":0,"k":"m"},{"n":"is-compile-time","s":{"p":["*%_"],"r":"Bool"},"k":"m","m":0},{"k":"m","m":0,"n":"throw","s":{"r":"Mu","p":["$bt?","*%_"]}},{"m":0,"k":"m","s":{"p":["*%_"],"r":"Mu"},"n":"fail"},{"k":"m","m":1,"s":{"r":"Mu","p":["*%_"]},"n":"Str"},{"n":"Str","s":{"r":"Mu","p":["*%_"]},"k":"m","m":1},{"m":1,"k":"m","n":"Str","s":{"r":"Mu","p":["*%_"]}},{"s":{"p":["*%_"],"r":"Mu"},"n":"die","m":0,"k":"m"},{"s":{"r":"Mu","p":["*%_"]},"n":"rethrow","k":"m","m":0},{"s":{"r":"Mu","p":["*%_"]},"n":"backtrace","m":0,"k":"m"},{"s":{"r":"Mu","p":["*%_"]},"n":"gist","k":"m","m":1},{"n":"gist","s":{"r":"Mu","p":["*%_"]},"k":"m","m":1},{"m":1,"k":"m","s":{"r":"Mu","p":["*%_"]},"n":"gist"},{"k":"m","m":0,"n":"vault-backtrace","s":{"r":"Mu","p":["*%_"]}},{"k":"s","m":0,"n":"BUILDALL","s":{"r":"Mu","p":["@auto","%init","*%_"]}}],"a":[{"k":"v","t":"Mu","n":"$.payload"},{"n":"$!ex","t":"Mu","k":"v"},{"t":"Mu","n":"$!bt","k":"v"}],"b":"A","t":"X::SecurityPolicy::Eval","n":"X::SecurityPolicy::Eval"},{"d":"TITLE\nclass X::Role::Initialization\n\nSUBTITLE\nError due to passing an initialization value to an ineligible role\n\n    class X::Role::Initialization is Exception { }\n\nThrown when the SomeRole($init) syntax is used, but SomeRole does not have\nexactly one public attribute.\n\nFor example:\n\n    role R { }; \"D2\" but R(2)\n    CATCH { default { put .^name, ': ', .Str } }\n    # OUTPUT: «X::Role::Initialization: Can only supply an initialization value for a role if it has a single public attribute, but this is not the case for 'R'␤»\n\n\n","a":[{"k":"v","n":"$.role","t":"Mu"},{"k":"v","n":"$!ex","t":"Mu"},{"k":"v","t":"Mu","n":"$!bt"}],"b":"A","m":[{"n":"message","s":{"r":"Mu","p":["*%_"]},"m":0,"k":"m"},{"n":"role","s":{"r":"Mu","p":["*%_"]},"k":"m","m":0},{"n":"BUILDALL","s":{"p":["@auto","%init","*%_"],"r":"Mu"},"m":0,"k":"s"},{"k":"m","m":0,"n":"resume","s":{"r":"Bool","p":["*%_"]}},{"s":{"r":"Mu","p":["*%_"]},"n":"reset-backtrace","m":0,"k":"m"},{"n":"is-compile-time","s":{"r":"Bool","p":["*%_"]},"k":"m","m":0},{"s":{"r":"Mu","p":["$bt?","*%_"]},"n":"throw","m":0,"k":"m"},{"m":0,"k":"m","n":"fail","s":{"r":"Mu","p":["*%_"]}},{"s":{"r":"Mu","p":["*%_"]},"n":"Str","m":1,"k":"m"},{"m":1,"k":"m","n":"Str","s":{"p":["*%_"],"r":"Mu"}},{"s":{"p":["*%_"],"r":"Mu"},"n":"Str","m":1,"k":"m"},{"m":0,"k":"m","n":"die","s":{"p":["*%_"],"r":"Mu"}},{"n":"rethrow","s":{"p":["*%_"],"r":"Mu"},"m":0,"k":"m"},{"m":0,"k":"m","n":"backtrace","s":{"r":"Mu","p":["*%_"]}},{"m":1,"k":"m","n":"gist","s":{"r":"Mu","p":["*%_"]}},{"n":"gist","s":{"p":["*%_"],"r":"Mu"},"k":"m","m":1},{"s":{"p":["*%_"],"r":"Mu"},"n":"gist","k":"m","m":1},{"s":{"r":"Mu","p":["*%_"]},"n":"vault-backtrace","m":0,"k":"m"},{"m":0,"k":"s","s":{"p":["@auto","%init","*%_"],"r":"Mu"},"n":"BUILDALL"}],"k":"c","t":"X::Role::Initialization","n":"X::Role::Initialization"},{"n":"X::Role::Parametric::NoSuchCandidate","t":"X::Role::Parametric::NoSuchCandidate","m":[{"k":"m","m":0,"n":"message","s":{"r":"Mu","p":["*%_"]}},{"n":"role","s":{"p":["*%_"],"r":"Mu"},"m":0,"k":"m"},{"n":"BUILDALL","s":{"r":"Mu","p":["@auto","%init","*%_"]},"k":"s","m":0},{"m":0,"k":"m","n":"resume","s":{"r":"Bool","p":["*%_"]}},{"m":0,"k":"m","n":"reset-backtrace","s":{"r":"Mu","p":["*%_"]}},{"k":"m","m":0,"n":"is-compile-time","s":{"p":["*%_"],"r":"Bool"}},{"k":"m","m":0,"s":{"p":["$bt?","*%_"],"r":"Mu"},"n":"throw"},{"m":0,"k":"m","s":{"p":["*%_"],"r":"Mu"},"n":"fail"},{"k":"m","m":1,"s":{"r":"Mu","p":["*%_"]},"n":"Str"},{"s":{"p":["*%_"],"r":"Mu"},"n":"Str","m":1,"k":"m"},{"s":{"p":["*%_"],"r":"Mu"},"n":"Str","k":"m","m":1},{"n":"die","s":{"p":["*%_"],"r":"Mu"},"k":"m","m":0},{"k":"m","m":0,"n":"rethrow","s":{"p":["*%_"],"r":"Mu"}},{"m":0,"k":"m","s":{"r":"Mu","p":["*%_"]},"n":"backtrace"},{"n":"gist","s":{"r":"Mu","p":["*%_"]},"k":"m","m":1},{"n":"gist","s":{"p":["*%_"],"r":"Mu"},"k":"m","m":1},{"m":1,"k":"m","s":{"p":["*%_"],"r":"Mu"},"n":"gist"},{"s":{"p":["*%_"],"r":"Mu"},"n":"vault-backtrace","m":0,"k":"m"},{"k":"s","m":0,"s":{"r":"Mu","p":["@auto","%init","*%_"]},"n":"BUILDALL"}],"k":"c","b":"A","a":[{"k":"v","t":"Mu","n":"$.role"},{"n":"$!ex","t":"Mu","k":"v"},{"k":"v","t":"Mu","n":"$!bt"}]},{"t":"X::Anon::Augment","n":"X::Anon::Augment","d":"TITLE\nclass X::Anon::Augment\n\nSUBTITLE\nCompilation error due to augmenting an anonymous package\n\n    class X::Anon::Augment does X::Comp { }\n\nCompile time error thrown when trying to augment an anonymous package.\n\nFor example\n\n    use MONKEY-TYPING;\n    augment class { }\n\n\nDies with\n\n    Cannot augment anonymous class\n\n\n","k":"c","m":[{"s":{"r":"Mu","p":["*%_"]},"n":"message","m":0,"k":"m"},{"k":"m","m":0,"s":{"p":["*%_"],"r":"Mu"},"n":"sorry_heading"},{"m":0,"k":"m","s":{"r":"Mu","p":["$file","$line","*%_"]},"n":"SET_FILE_LINE"},{"s":{"p":["*%_"],"r":"Mu"},"n":"gist","m":1,"k":"m"},{"s":{"p":["*%_"],"r":"Mu"},"n":"gist","m":1,"k":"m"},{"n":"gist","s":{"p":["*%_"],"r":"Mu"},"m":1,"k":"m"},{"k":"m","m":1,"n":"gist","s":{"p":[":$sorry = Bool::True",":$expect = Bool::True","*%_"],"r":"Mu"}},{"s":{"p":["*%_"],"r":"Mu"},"n":"package-kind","k":"m","m":0},{"n":"filename","s":{"p":["*%_"],"r":"Mu"},"k":"m","m":0},{"n":"pos","s":{"r":"Mu","p":["*%_"]},"k":"m","m":0},{"m":0,"k":"m","s":{"p":["*%_"],"r":"Mu"},"n":"line"},{"m":0,"k":"m","n":"column","s":{"p":["*%_"],"r":"Mu"}},{"m":0,"k":"m","n":"modules","s":{"p":["*%_"],"r":"Mu"}},{"n":"is-compile-time","s":{"r":"Mu","p":["*%_"]},"m":0,"k":"m"},{"m":0,"k":"m","n":"pre","s":{"r":"Mu","p":["*%_"]}},{"s":{"r":"Mu","p":["*%_"]},"n":"post","k":"m","m":0},{"m":0,"k":"m","n":"highexpect","s":{"r":"Mu","p":["*%_"]}},{"m":0,"k":"s","s":{"p":["@auto","%init","*%_"],"r":"Mu"},"n":"BUILDALL"},{"s":{"p":["*%_"],"r":"Bool"},"n":"resume","m":0,"k":"m"},{"k":"m","m":0,"s":{"p":["*%_"],"r":"Mu"},"n":"reset-backtrace"},{"k":"m","m":0,"s":{"r":"Bool","p":["*%_"]},"n":"is-compile-time"},{"k":"m","m":0,"n":"throw","s":{"p":["$bt?","*%_"],"r":"Mu"}},{"m":0,"k":"m","n":"fail","s":{"p":["*%_"],"r":"Mu"}},{"s":{"r":"Mu","p":["*%_"]},"n":"Str","m":1,"k":"m"},{"n":"Str","s":{"r":"Mu","p":["*%_"]},"k":"m","m":1},{"k":"m","m":1,"s":{"r":"Mu","p":["*%_"]},"n":"Str"},{"m":0,"k":"m","n":"die","s":{"p":["*%_"],"r":"Mu"}},{"k":"m","m":0,"s":{"r":"Mu","p":["*%_"]},"n":"rethrow"},{"k":"m","m":0,"n":"backtrace","s":{"p":["*%_"],"r":"Mu"}},{"n":"gist","s":{"r":"Mu","p":["*%_"]},"m":1,"k":"m"},{"n":"gist","s":{"r":"Mu","p":["*%_"]},"m":1,"k":"m"},{"m":1,"k":"m","n":"gist","s":{"p":["*%_"],"r":"Mu"}},{"n":"vault-backtrace","s":{"p":["*%_"],"r":"Mu"},"m":0,"k":"m"},{"s":{"p":["@auto","%init","*%_"],"r":"Mu"},"n":"BUILDALL","k":"s","m":0}],"b":"A","a":[{"k":"v","n":"$.package-kind","t":"Mu"},{"k":"v","t":"Mu","n":"$.filename"},{"t":"Mu","n":"$.pos","k":"v"},{"k":"v","t":"Mu","n":"$.line"},{"n":"$.column","t":"Mu","k":"v"},{"t":"Positional","n":"@.modules","k":"v"},{"k":"v","n":"$.is-compile-time","t":"Mu"},{"k":"v","n":"$.pre","t":"Mu"},{"k":"v","t":"Mu","n":"$.post"},{"k":"v","t":"Positional","n":"@.highexpect"},{"n":"$!ex","t":"Mu","k":"v"},{"k":"v","n":"$!bt","t":"Mu"}]},{"n":"X::Anon::Multi","t":"X::Anon::Multi","b":"A","a":[{"t":"Mu","n":"$.multiness","k":"v"},{"k":"v","n":"$.routine-type","t":"Mu"},{"k":"v","t":"Mu","n":"$.filename"},{"k":"v","n":"$.pos","t":"Mu"},{"n":"$.line","t":"Mu","k":"v"},{"k":"v","n":"$.column","t":"Mu"},{"t":"Positional","n":"@.modules","k":"v"},{"k":"v","n":"$.is-compile-time","t":"Mu"},{"k":"v","t":"Mu","n":"$.pre"},{"k":"v","n":"$.post","t":"Mu"},{"t":"Positional","n":"@.highexpect","k":"v"},{"n":"$!ex","t":"Mu","k":"v"},{"t":"Mu","n":"$!bt","k":"v"}],"k":"c","m":[{"k":"m","m":0,"n":"message","s":{"p":["*%_"],"r":"Mu"}},{"k":"m","m":0,"n":"sorry_heading","s":{"p":["*%_"],"r":"Mu"}},{"m":0,"k":"m","n":"SET_FILE_LINE","s":{"p":["$file","$line","*%_"],"r":"Mu"}},{"k":"m","m":1,"s":{"r":"Mu","p":["*%_"]},"n":"gist"},{"s":{"r":"Mu","p":["*%_"]},"n":"gist","k":"m","m":1},{"n":"gist","s":{"p":["*%_"],"r":"Mu"},"m":1,"k":"m"},{"s":{"p":[":$sorry = Bool::True",":$expect = Bool::True","*%_"],"r":"Mu"},"n":"gist","k":"m","m":1},{"s":{"r":"Mu","p":["*%_"]},"n":"multiness","k":"m","m":0},{"n":"routine-type","s":{"p":["*%_"],"r":"Mu"},"k":"m","m":0},{"k":"m","m":0,"s":{"r":"Mu","p":["*%_"]},"n":"filename"},{"k":"m","m":0,"n":"pos","s":{"p":["*%_"],"r":"Mu"}},{"k":"m","m":0,"s":{"r":"Mu","p":["*%_"]},"n":"line"},{"m":0,"k":"m","n":"column","s":{"p":["*%_"],"r":"Mu"}},{"k":"m","m":0,"s":{"r":"Mu","p":["*%_"]},"n":"modules"},{"m":0,"k":"m","s":{"p":["*%_"],"r":"Mu"},"n":"is-compile-time"},{"s":{"p":["*%_"],"r":"Mu"},"n":"pre","m":0,"k":"m"},{"k":"m","m":0,"s":{"p":["*%_"],"r":"Mu"},"n":"post"},{"m":0,"k":"m","s":{"r":"Mu","p":["*%_"]},"n":"highexpect"},{"s":{"r":"Mu","p":["@auto","%init","*%_"]},"n":"BUILDALL","k":"s","m":0},{"n":"resume","s":{"p":["*%_"],"r":"Bool"},"m":0,"k":"m"},{"n":"reset-backtrace","s":{"p":["*%_"],"r":"Mu"},"m":0,"k":"m"},{"k":"m","m":0,"n":"is-compile-time","s":{"p":["*%_"],"r":"Bool"}},{"s":{"p":["$bt?","*%_"],"r":"Mu"},"n":"throw","k":"m","m":0},{"n":"fail","s":{"p":["*%_"],"r":"Mu"},"m":0,"k":"m"},{"m":1,"k":"m","n":"Str","s":{"r":"Mu","p":["*%_"]}},{"n":"Str","s":{"r":"Mu","p":["*%_"]},"m":1,"k":"m"},{"m":1,"k":"m","s":{"r":"Mu","p":["*%_"]},"n":"Str"},{"n":"die","s":{"r":"Mu","p":["*%_"]},"k":"m","m":0},{"n":"rethrow","s":{"p":["*%_"],"r":"Mu"},"m":0,"k":"m"},{"m":0,"k":"m","s":{"p":["*%_"],"r":"Mu"},"n":"backtrace"},{"s":{"r":"Mu","p":["*%_"]},"n":"gist","m":1,"k":"m"},{"n":"gist","s":{"r":"Mu","p":["*%_"]},"k":"m","m":1},{"s":{"p":["*%_"],"r":"Mu"},"n":"gist","m":1,"k":"m"},{"s":{"p":["*%_"],"r":"Mu"},"n":"vault-backtrace","k":"m","m":0},{"n":"BUILDALL","s":{"r":"Mu","p":["@auto","%init","*%_"]},"m":0,"k":"s"}],"d":"TITLE\nclass X::Anon::Multi\n\nSUBTITLE\nCompilation error due to declaring an anonymous multi\n\n    class X::Anon::Multi does X::Comp { }\n\nCompile time error thrown when an anonymous multi is being declared.\n\nFor example\n\n    multi method () { }\n\n\ndies with\n\n    Cannot put multi on anonymous method\n\n\n"},{"n":"X::Import::OnlystarProto","t":"X::Import::OnlystarProto","k":"c","m":[{"k":"m","m":0,"s":{"r":"Mu","p":["*%_"]},"n":"message"},{"k":"m","m":0,"s":{"r":"Mu","p":["*%_"]},"n":"sorry_heading"},{"m":0,"k":"m","n":"SET_FILE_LINE","s":{"r":"Mu","p":["$file","$line","*%_"]}},{"s":{"p":["*%_"],"r":"Mu"},"n":"gist","k":"m","m":1},{"k":"m","m":1,"n":"gist","s":{"r":"Mu","p":["*%_"]}},{"m":1,"k":"m","s":{"p":["*%_"],"r":"Mu"},"n":"gist"},{"k":"m","m":1,"n":"gist","s":{"p":[":$sorry = Bool::True",":$expect = Bool::True","*%_"],"r":"Mu"}},{"k":"m","m":0,"s":{"p":["*%_"],"r":"Mu"},"n":"symbols"},{"m":0,"k":"m","n":"source-package-name","s":{"p":["*%_"],"r":"Mu"}},{"m":0,"k":"m","n":"filename","s":{"p":["*%_"],"r":"Mu"}},{"n":"pos","s":{"r":"Mu","p":["*%_"]},"m":0,"k":"m"},{"s":{"p":["*%_"],"r":"Mu"},"n":"line","k":"m","m":0},{"m":0,"k":"m","s":{"p":["*%_"],"r":"Mu"},"n":"column"},{"k":"m","m":0,"s":{"p":["*%_"],"r":"Mu"},"n":"modules"},{"n":"is-compile-time","s":{"p":["*%_"],"r":"Mu"},"k":"m","m":0},{"m":0,"k":"m","s":{"r":"Mu","p":["*%_"]},"n":"pre"},{"k":"m","m":0,"n":"post","s":{"p":["*%_"],"r":"Mu"}},{"k":"m","m":0,"s":{"r":"Mu","p":["*%_"]},"n":"highexpect"},{"s":{"p":["@auto","%init","*%_"],"r":"Mu"},"n":"BUILDALL","k":"s","m":0},{"n":"resume","s":{"p":["*%_"],"r":"Bool"},"m":0,"k":"m"},{"k":"m","m":0,"n":"reset-backtrace","s":{"p":["*%_"],"r":"Mu"}},{"s":{"p":["*%_"],"r":"Bool"},"n":"is-compile-time","m":0,"k":"m"},{"n":"throw","s":{"r":"Mu","p":["$bt?","*%_"]},"k":"m","m":0},{"n":"fail","s":{"r":"Mu","p":["*%_"]},"m":0,"k":"m"},{"k":"m","m":1,"n":"Str","s":{"r":"Mu","p":["*%_"]}},{"n":"Str","s":{"p":["*%_"],"r":"Mu"},"k":"m","m":1},{"m":1,"k":"m","n":"Str","s":{"p":["*%_"],"r":"Mu"}},{"s":{"r":"Mu","p":["*%_"]},"n":"die","k":"m","m":0},{"k":"m","m":0,"n":"rethrow","s":{"p":["*%_"],"r":"Mu"}},{"m":0,"k":"m","n":"backtrace","s":{"p":["*%_"],"r":"Mu"}},{"s":{"p":["*%_"],"r":"Mu"},"n":"gist","m":1,"k":"m"},{"m":1,"k":"m","n":"gist","s":{"p":["*%_"],"r":"Mu"}},{"n":"gist","s":{"p":["*%_"],"r":"Mu"},"k":"m","m":1},{"s":{"p":["*%_"],"r":"Mu"},"n":"vault-backtrace","k":"m","m":0},{"k":"s","m":0,"s":{"p":["@auto","%init","*%_"],"r":"Mu"},"n":"BUILDALL"}],"a":[{"n":"@.symbols","t":"Positional","k":"v"},{"k":"v","t":"Mu","n":"$.source-package-name"},{"n":"$.filename","t":"Mu","k":"v"},{"k":"v","t":"Mu","n":"$.pos"},{"k":"v","n":"$.line","t":"Mu"},{"k":"v","t":"Mu","n":"$.column"},{"k":"v","n":"@.modules","t":"Positional"},{"n":"$.is-compile-time","t":"Mu","k":"v"},{"n":"$.pre","t":"Mu","k":"v"},{"t":"Mu","n":"$.post","k":"v"},{"k":"v","n":"@.highexpect","t":"Positional"},{"n":"$!ex","t":"Mu","k":"v"},{"k":"v","t":"Mu","n":"$!bt"}],"b":"A"},{"m":[{"n":"message","s":{"r":"Mu","p":["*%_"]},"m":0,"k":"m"},{"m":0,"k":"m","s":{"p":["*%_"],"r":"Mu"},"n":"source-package"},{"m":0,"k":"s","s":{"r":"Mu","p":["@auto","%init","*%_"]},"n":"BUILDALL"},{"k":"m","m":0,"n":"resume","s":{"r":"Bool","p":["*%_"]}},{"m":0,"k":"m","s":{"r":"Mu","p":["*%_"]},"n":"reset-backtrace"},{"s":{"p":["*%_"],"r":"Bool"},"n":"is-compile-time","m":0,"k":"m"},{"m":0,"k":"m","s":{"p":["$bt?","*%_"],"r":"Mu"},"n":"throw"},{"s":{"r":"Mu","p":["*%_"]},"n":"fail","m":0,"k":"m"},{"n":"Str","s":{"p":["*%_"],"r":"Mu"},"m":1,"k":"m"},{"m":1,"k":"m","s":{"r":"Mu","p":["*%_"]},"n":"Str"},{"k":"m","m":1,"s":{"p":["*%_"],"r":"Mu"},"n":"Str"},{"m":0,"k":"m","n":"die","s":{"r":"Mu","p":["*%_"]}},{"k":"m","m":0,"n":"rethrow","s":{"r":"Mu","p":["*%_"]}},{"m":0,"k":"m","s":{"p":["*%_"],"r":"Mu"},"n":"backtrace"},{"s":{"p":["*%_"],"r":"Mu"},"n":"gist","k":"m","m":1},{"n":"gist","s":{"r":"Mu","p":["*%_"]},"k":"m","m":1},{"k":"m","m":1,"s":{"r":"Mu","p":["*%_"]},"n":"gist"},{"n":"vault-backtrace","s":{"r":"Mu","p":["*%_"]},"k":"m","m":0},{"m":0,"k":"s","s":{"p":["@auto","%init","*%_"],"r":"Mu"},"n":"BUILDALL"}],"k":"c","b":"A","a":[{"n":"$.source-package","t":"Mu","k":"v"},{"t":"Mu","n":"$!ex","k":"v"},{"k":"v","t":"Mu","n":"$!bt"}],"t":"X::Import::Positional","n":"X::Import::Positional"},{"n":"X::Import::NoSuchTag","t":"X::Import::NoSuchTag","a":[{"t":"Mu","n":"$.source-package","k":"v"},{"t":"Mu","n":"$.tag","k":"v"},{"k":"v","n":"$!ex","t":"Mu"},{"k":"v","t":"Mu","n":"$!bt"}],"b":"A","m":[{"m":0,"k":"m","s":{"r":"Mu","p":["*%_"]},"n":"message"},{"s":{"p":["*%_"],"r":"Mu"},"n":"source-package","k":"m","m":0},{"n":"tag","s":{"r":"Mu","p":["*%_"]},"m":0,"k":"m"},{"m":0,"k":"s","s":{"p":["@auto","%init","*%_"],"r":"Mu"},"n":"BUILDALL"},{"n":"resume","s":{"r":"Bool","p":["*%_"]},"k":"m","m":0},{"n":"reset-backtrace","s":{"r":"Mu","p":["*%_"]},"m":0,"k":"m"},{"n":"is-compile-time","s":{"r":"Bool","p":["*%_"]},"m":0,"k":"m"},{"m":0,"k":"m","s":{"r":"Mu","p":["$bt?","*%_"]},"n":"throw"},{"k":"m","m":0,"s":{"r":"Mu","p":["*%_"]},"n":"fail"},{"k":"m","m":1,"n":"Str","s":{"p":["*%_"],"r":"Mu"}},{"s":{"p":["*%_"],"r":"Mu"},"n":"Str","k":"m","m":1},{"s":{"p":["*%_"],"r":"Mu"},"n":"Str","m":1,"k":"m"},{"m":0,"k":"m","s":{"r":"Mu","p":["*%_"]},"n":"die"},{"s":{"p":["*%_"],"r":"Mu"},"n":"rethrow","m":0,"k":"m"},{"m":0,"k":"m","n":"backtrace","s":{"p":["*%_"],"r":"Mu"}},{"k":"m","m":1,"s":{"p":["*%_"],"r":"Mu"},"n":"gist"},{"m":1,"k":"m","n":"gist","s":{"p":["*%_"],"r":"Mu"}},{"k":"m","m":1,"n":"gist","s":{"p":["*%_"],"r":"Mu"}},{"k":"m","m":0,"s":{"p":["*%_"],"r":"Mu"},"n":"vault-backtrace"},{"k":"s","m":0,"s":{"p":["@auto","%init","*%_"],"r":"Mu"},"n":"BUILDALL"}],"k":"c"},{"n":"X::Import::Redeclaration","t":"X::Import::Redeclaration","m":[{"s":{"p":["*%_"],"r":"Mu"},"n":"message","m":0,"k":"m"},{"s":{"p":["*%_"],"r":"Mu"},"n":"sorry_heading","k":"m","m":0},{"m":0,"k":"m","s":{"p":["$file","$line","*%_"],"r":"Mu"},"n":"SET_FILE_LINE"},{"n":"gist","s":{"r":"Mu","p":["*%_"]},"m":1,"k":"m"},{"k":"m","m":1,"n":"gist","s":{"r":"Mu","p":["*%_"]}},{"k":"m","m":1,"s":{"p":["*%_"],"r":"Mu"},"n":"gist"},{"k":"m","m":1,"n":"gist","s":{"r":"Mu","p":[":$sorry = Bool::True",":$expect = Bool::True","*%_"]}},{"n":"symbols","s":{"p":["*%_"],"r":"Mu"},"k":"m","m":0},{"m":0,"k":"m","s":{"r":"Mu","p":["*%_"]},"n":"source-package-name"},{"n":"filename","s":{"p":["*%_"],"r":"Mu"},"k":"m","m":0},{"s":{"p":["*%_"],"r":"Mu"},"n":"pos","m":0,"k":"m"},{"s":{"r":"Mu","p":["*%_"]},"n":"line","k":"m","m":0},{"s":{"p":["*%_"],"r":"Mu"},"n":"column","m":0,"k":"m"},{"k":"m","m":0,"s":{"r":"Mu","p":["*%_"]},"n":"modules"},{"k":"m","m":0,"n":"is-compile-time","s":{"r":"Mu","p":["*%_"]}},{"m":0,"k":"m","n":"pre","s":{"r":"Mu","p":["*%_"]}},{"k":"m","m":0,"n":"post","s":{"p":["*%_"],"r":"Mu"}},{"m":0,"k":"m","n":"highexpect","s":{"p":["*%_"],"r":"Mu"}},{"s":{"p":["@auto","%init","*%_"],"r":"Mu"},"n":"BUILDALL","k":"s","m":0},{"k":"m","m":0,"s":{"p":["*%_"],"r":"Bool"},"n":"resume"},{"m":0,"k":"m","n":"reset-backtrace","s":{"p":["*%_"],"r":"Mu"}},{"m":0,"k":"m","n":"is-compile-time","s":{"r":"Bool","p":["*%_"]}},{"n":"throw","s":{"r":"Mu","p":["$bt?","*%_"]},"k":"m","m":0},{"n":"fail","s":{"p":["*%_"],"r":"Mu"},"m":0,"k":"m"},{"s":{"r":"Mu","p":["*%_"]},"n":"Str","k":"m","m":1},{"n":"Str","s":{"r":"Mu","p":["*%_"]},"m":1,"k":"m"},{"s":{"p":["*%_"],"r":"Mu"},"n":"Str","k":"m","m":1},{"s":{"r":"Mu","p":["*%_"]},"n":"die","m":0,"k":"m"},{"m":0,"k":"m","s":{"p":["*%_"],"r":"Mu"},"n":"rethrow"},{"n":"backtrace","s":{"r":"Mu","p":["*%_"]},"k":"m","m":0},{"k":"m","m":1,"n":"gist","s":{"p":["*%_"],"r":"Mu"}},{"m":1,"k":"m","s":{"p":["*%_"],"r":"Mu"},"n":"gist"},{"k":"m","m":1,"n":"gist","s":{"r":"Mu","p":["*%_"]}},{"k":"m","m":0,"n":"vault-backtrace","s":{"p":["*%_"],"r":"Mu"}},{"m":0,"k":"s","s":{"p":["@auto","%init","*%_"],"r":"Mu"},"n":"BUILDALL"}],"k":"c","a":[{"t":"Positional","n":"@.symbols","k":"v"},{"k":"v","t":"Mu","n":"$.source-package-name"},{"k":"v","t":"Mu","n":"$.filename"},{"t":"Mu","n":"$.pos","k":"v"},{"k":"v","t":"Mu","n":"$.line"},{"k":"v","t":"Mu","n":"$.column"},{"t":"Positional","n":"@.modules","k":"v"},{"t":"Mu","n":"$.is-compile-time","k":"v"},{"k":"v","t":"Mu","n":"$.pre"},{"k":"v","n":"$.post","t":"Mu"},{"t":"Positional","n":"@.highexpect","k":"v"},{"k":"v","n":"$!ex","t":"Mu"},{"n":"$!bt","t":"Mu","k":"v"}],"b":"A"},{"a":[{"k":"v","n":"$.from","t":"Mu"},{"k":"v","t":"Positional","n":"@.missing"},{"t":"Mu","n":"$!ex","k":"v"},{"n":"$!bt","t":"Mu","k":"v"}],"b":"A","k":"c","m":[{"k":"m","m":0,"n":"message","s":{"r":"Mu","p":["*%_"]}},{"k":"m","m":0,"n":"from","s":{"p":["*%_"],"r":"Mu"}},{"m":0,"k":"m","s":{"r":"Mu","p":["*%_"]},"n":"missing"},{"s":{"p":["@auto","%init","*%_"],"r":"Mu"},"n":"BUILDALL","m":0,"k":"s"},{"s":{"r":"Bool","p":["*%_"]},"n":"resume","m":0,"k":"m"},{"s":{"r":"Mu","p":["*%_"]},"n":"reset-backtrace","m":0,"k":"m"},{"s":{"p":["*%_"],"r":"Bool"},"n":"is-compile-time","k":"m","m":0},{"m":0,"k":"m","s":{"p":["$bt?","*%_"],"r":"Mu"},"n":"throw"},{"k":"m","m":0,"n":"fail","s":{"p":["*%_"],"r":"Mu"}},{"k":"m","m":1,"s":{"r":"Mu","p":["*%_"]},"n":"Str"},{"n":"Str","s":{"p":["*%_"],"r":"Mu"},"m":1,"k":"m"},{"m":1,"k":"m","n":"Str","s":{"p":["*%_"],"r":"Mu"}},{"k":"m","m":0,"s":{"r":"Mu","p":["*%_"]},"n":"die"},{"k":"m","m":0,"s":{"r":"Mu","p":["*%_"]},"n":"rethrow"},{"k":"m","m":0,"n":"backtrace","s":{"p":["*%_"],"r":"Mu"}},{"k":"m","m":1,"n":"gist","s":{"p":["*%_"],"r":"Mu"}},{"k":"m","m":1,"s":{"p":["*%_"],"r":"Mu"},"n":"gist"},{"s":{"r":"Mu","p":["*%_"]},"n":"gist","m":1,"k":"m"},{"k":"m","m":0,"n":"vault-backtrace","s":{"r":"Mu","p":["*%_"]}},{"m":0,"k":"s","s":{"p":["@auto","%init","*%_"],"r":"Mu"},"n":"BUILDALL"}],"n":"X::Import::MissingSymbols","t":"X::Import::MissingSymbols"},{"b":"C","a":[{"n":"$.filename","t":"Mu","k":"v"},{"k":"v","n":"$.pos","t":"Mu"},{"t":"Mu","n":"$.line","k":"v"},{"k":"v","t":"Mu","n":"$.column"},{"k":"v","t":"Positional","n":"@.modules"},{"n":"$.is-compile-time","t":"Mu","k":"v"},{"n":"$.pre","t":"Mu","k":"v"},{"k":"v","n":"$.post","t":"Mu"},{"n":"@.highexpect","t":"Positional","k":"v"}],"m":[{"n":"sorry_heading","s":{"p":["*%_"],"r":"Mu"},"k":"m","m":0},{"m":0,"k":"m","s":{"p":["$file","$line","*%_"],"r":"Mu"},"n":"SET_FILE_LINE"}],"k":"ro","d":"TITLE\nrole X::Comp\n\nSUBTITLE\nCommon role for compile-time errors\n\n    role X::Comp is Exception { }\n\nCommon role for compile-time errors.\n\nNote that since the backtrace of a compile time error generally shows\nroutines from the compiler, not from user-space programs, the Backtrace\nreturned from the backtrace method is not very informative. Instead the\nexception carries its own filename, line and column attributes and public\naccessors.\n\nIf an error occurs while creating an object (like a class or routine) at\ncompile time, generally the exception associated with it does not hold a\nreference to the object (for example a class would not be fully composed,\nand thus not usable). In those cases the name of the would-be-created\nobject is included in the error message instead.\n\n","n":"X::Comp","t":"X::Comp"},{"t":"X::Comp::BeginTime","n":"X::Comp::BeginTime","b":"A","a":[{"t":"str","n":"$.use-case","k":"v"},{"n":"$.exception","t":"Mu","k":"v"},{"k":"v","t":"Mu","n":"$.filename"},{"k":"v","t":"Mu","n":"$.pos"},{"n":"$.line","t":"Mu","k":"v"},{"k":"v","t":"Mu","n":"$.column"},{"k":"v","n":"@.modules","t":"Positional"},{"t":"Mu","n":"$.is-compile-time","k":"v"},{"n":"$.pre","t":"Mu","k":"v"},{"k":"v","n":"$.post","t":"Mu"},{"k":"v","t":"Positional","n":"@.highexpect"},{"t":"Mu","n":"$!ex","k":"v"},{"n":"$!bt","t":"Mu","k":"v"}],"k":"c","m":[{"m":0,"k":"m","n":"message","s":{"r":"Mu","p":["*%_"]}},{"n":"sorry_heading","s":{"p":["*%_"],"r":"Mu"},"k":"m","m":0},{"m":0,"k":"m","n":"SET_FILE_LINE","s":{"r":"Mu","p":["$file","$line","*%_"]}},{"k":"m","m":1,"s":{"p":["*%_"],"r":"Mu"},"n":"gist"},{"n":"gist","s":{"r":"Mu","p":["*%_"]},"m":1,"k":"m"},{"m":1,"k":"m","n":"gist","s":{"p":["*%_"],"r":"Mu"}},{"n":"gist","s":{"r":"Mu","p":[":$sorry = Bool::True","*%_"]},"k":"m","m":1},{"m":1,"k":"m","s":{"p":[":$sorry = Bool::True",":$expect = Bool::True","*%_"],"r":"Mu"},"n":"gist"},{"n":"use-case","s":{"p":["*%_"],"r":"Mu"},"m":0,"k":"m"},{"m":0,"k":"m","n":"exception","s":{"r":"Mu","p":["*%_"]}},{"k":"m","m":0,"n":"filename","s":{"r":"Mu","p":["*%_"]}},{"s":{"r":"Mu","p":["*%_"]},"n":"pos","m":0,"k":"m"},{"m":0,"k":"m","n":"line","s":{"r":"Mu","p":["*%_"]}},{"k":"m","m":0,"n":"column","s":{"p":["*%_"],"r":"Mu"}},{"m":0,"k":"m","s":{"p":["*%_"],"r":"Mu"},"n":"modules"},{"s":{"r":"Mu","p":["*%_"]},"n":"is-compile-time","k":"m","m":0},{"k":"m","m":0,"s":{"p":["*%_"],"r":"Mu"},"n":"pre"},{"n":"post","s":{"r":"Mu","p":["*%_"]},"m":0,"k":"m"},{"n":"highexpect","s":{"r":"Mu","p":["*%_"]},"m":0,"k":"m"},{"s":{"p":["@auto","%init","*%_"],"r":"Mu"},"n":"BUILDALL","k":"s","m":0},{"k":"m","m":0,"n":"resume","s":{"r":"Bool","p":["*%_"]}},{"s":{"p":["*%_"],"r":"Mu"},"n":"reset-backtrace","k":"m","m":0},{"m":0,"k":"m","s":{"p":["*%_"],"r":"Bool"},"n":"is-compile-time"},{"n":"throw","s":{"p":["$bt?","*%_"],"r":"Mu"},"m":0,"k":"m"},{"m":0,"k":"m","n":"fail","s":{"r":"Mu","p":["*%_"]}},{"s":{"p":["*%_"],"r":"Mu"},"n":"Str","m":1,"k":"m"},{"k":"m","m":1,"n":"Str","s":{"p":["*%_"],"r":"Mu"}},{"k":"m","m":1,"s":{"r":"Mu","p":["*%_"]},"n":"Str"},{"k":"m","m":0,"s":{"p":["*%_"],"r":"Mu"},"n":"die"},{"m":0,"k":"m","n":"rethrow","s":{"r":"Mu","p":["*%_"]}},{"k":"m","m":0,"n":"backtrace","s":{"r":"Mu","p":["*%_"]}},{"k":"m","m":1,"s":{"p":["*%_"],"r":"Mu"},"n":"gist"},{"s":{"r":"Mu","p":["*%_"]},"n":"gist","k":"m","m":1},{"m":1,"k":"m","n":"gist","s":{"p":["*%_"],"r":"Mu"}},{"m":0,"k":"m","n":"vault-backtrace","s":{"r":"Mu","p":["*%_"]}},{"k":"s","m":0,"n":"BUILDALL","s":{"p":["@auto","%init","*%_"],"r":"Mu"}}]},{"k":"c","m":[{"s":{"r":"Bool","p":["*%_"]},"n":"is-compile-time","m":0,"k":"m"},{"k":"m","m":0,"n":"message","s":{"p":["*%_"],"r":"Mu"}},{"n":"sorry_heading","s":{"r":"Mu","p":["*%_"]},"k":"m","m":0},{"n":"SET_FILE_LINE","s":{"r":"Mu","p":["$file","$line","*%_"]},"m":0,"k":"m"},{"s":{"p":["*%_"],"r":"Mu"},"n":"gist","k":"m","m":1},{"s":{"r":"Mu","p":["*%_"]},"n":"gist","k":"m","m":1},{"k":"m","m":1,"n":"gist","s":{"r":"Mu","p":["*%_"]}},{"n":"gist","s":{"p":[":$sorry = Bool::True",":$expect = Bool::True","*%_"],"r":"Mu"},"m":1,"k":"m"},{"k":"m","m":0,"s":{"p":["*%_"],"r":"Mu"},"n":"dba"},{"m":0,"k":"m","n":"goal","s":{"r":"Mu","p":["*%_"]}},{"m":0,"k":"m","n":"line-real","s":{"p":["*%_"],"r":"Mu"}},{"k":"m","m":0,"n":"filename","s":{"p":["*%_"],"r":"Mu"}},{"n":"pos","s":{"r":"Mu","p":["*%_"]},"k":"m","m":0},{"s":{"p":["*%_"],"r":"Mu"},"n":"line","m":0,"k":"m"},{"m":0,"k":"m","n":"column","s":{"r":"Mu","p":["*%_"]}},{"k":"m","m":0,"s":{"r":"Mu","p":["*%_"]},"n":"modules"},{"m":0,"k":"m","s":{"p":["*%_"],"r":"Mu"},"n":"pre"},{"n":"post","s":{"r":"Mu","p":["*%_"]},"m":0,"k":"m"},{"m":0,"k":"m","s":{"p":["*%_"],"r":"Mu"},"n":"highexpect"},{"n":"BUILDALL","s":{"r":"Mu","p":["@auto","%init","*%_"]},"k":"s","m":0},{"k":"m","m":0,"n":"resume","s":{"r":"Bool","p":["*%_"]}},{"n":"reset-backtrace","s":{"r":"Mu","p":["*%_"]},"m":0,"k":"m"},{"s":{"p":["*%_"],"r":"Bool"},"n":"is-compile-time","m":0,"k":"m"},{"k":"m","m":0,"s":{"r":"Mu","p":["$bt?","*%_"]},"n":"throw"},{"k":"m","m":0,"n":"fail","s":{"p":["*%_"],"r":"Mu"}},{"n":"Str","s":{"r":"Mu","p":["*%_"]},"k":"m","m":1},{"s":{"p":["*%_"],"r":"Mu"},"n":"Str","m":1,"k":"m"},{"s":{"r":"Mu","p":["*%_"]},"n":"Str","k":"m","m":1},{"n":"die","s":{"p":["*%_"],"r":"Mu"},"k":"m","m":0},{"m":0,"k":"m","s":{"p":["*%_"],"r":"Mu"},"n":"rethrow"},{"s":{"p":["*%_"],"r":"Mu"},"n":"backtrace","k":"m","m":0},{"s":{"p":["*%_"],"r":"Mu"},"n":"gist","k":"m","m":1},{"m":1,"k":"m","n":"gist","s":{"r":"Mu","p":["*%_"]}},{"k":"m","m":1,"n":"gist","s":{"p":["*%_"],"r":"Mu"}},{"n":"vault-backtrace","s":{"r":"Mu","p":["*%_"]},"m":0,"k":"m"},{"k":"s","m":0,"s":{"p":["@auto","%init","*%_"],"r":"Mu"},"n":"BUILDALL"}],"a":[{"n":"$.dba","t":"Mu","k":"v"},{"t":"Mu","n":"$.goal","k":"v"},{"t":"Mu","n":"$.line-real","k":"v"},{"k":"v","t":"Mu","n":"$.filename"},{"k":"v","t":"Mu","n":"$.pos"},{"n":"$.line","t":"Mu","k":"v"},{"k":"v","t":"Mu","n":"$.column"},{"k":"v","t":"Positional","n":"@.modules"},{"k":"v","n":"$.is-compile-time","t":"Mu"},{"n":"$.pre","t":"Mu","k":"v"},{"k":"v","n":"$.post","t":"Mu"},{"n":"@.highexpect","t":"Positional","k":"v"},{"k":"v","n":"$!ex","t":"Mu"},{"k":"v","n":"$!bt","t":"Mu"}],"b":"A","n":"X::Comp::FailGoal","t":"X::Comp::FailGoal"},{"k":"c","m":[{"m":0,"k":"m","n":"is-compile-time","s":{"r":"Bool","p":["*%_"]}},{"m":0,"k":"m","s":{"p":["*%_"],"r":"Mu"},"n":"message"},{"k":"m","m":1,"n":"gist","s":{"r":"Mu","p":["*%_"]}},{"k":"m","m":1,"s":{"r":"Mu","p":["*%_"]},"n":"gist"},{"m":1,"k":"m","n":"gist","s":{"r":"Mu","p":["*%_"]}},{"s":{"r":"Mu","p":["*%_"]},"n":"gist","k":"m","m":1},{"s":{"r":"Mu","p":["*%_"]},"n":"panic","m":0,"k":"m"},{"n":"sorrows","s":{"r":"Mu","p":["*%_"]},"k":"m","m":0},{"k":"m","m":0,"n":"worries","s":{"r":"Mu","p":["*%_"]}},{"n":"BUILDALL","s":{"r":"Mu","p":["@auto","%init","*%_"]},"k":"s","m":0},{"s":{"p":["*%_"],"r":"Bool"},"n":"resume","m":0,"k":"m"},{"n":"reset-backtrace","s":{"p":["*%_"],"r":"Mu"},"k":"m","m":0},{"n":"is-compile-time","s":{"r":"Bool","p":["*%_"]},"m":0,"k":"m"},{"s":{"p":["$bt?","*%_"],"r":"Mu"},"n":"throw","k":"m","m":0},{"s":{"r":"Mu","p":["*%_"]},"n":"fail","m":0,"k":"m"},{"k":"m","m":1,"s":{"r":"Mu","p":["*%_"]},"n":"Str"},{"s":{"p":["*%_"],"r":"Mu"},"n":"Str","m":1,"k":"m"},{"m":1,"k":"m","s":{"p":["*%_"],"r":"Mu"},"n":"Str"},{"k":"m","m":0,"n":"die","s":{"p":["*%_"],"r":"Mu"}},{"m":0,"k":"m","n":"rethrow","s":{"r":"Mu","p":["*%_"]}},{"k":"m","m":0,"n":"backtrace","s":{"p":["*%_"],"r":"Mu"}},{"n":"gist","s":{"r":"Mu","p":["*%_"]},"m":1,"k":"m"},{"s":{"r":"Mu","p":["*%_"]},"n":"gist","k":"m","m":1},{"k":"m","m":1,"s":{"p":["*%_"],"r":"Mu"},"n":"gist"},{"n":"vault-backtrace","s":{"r":"Mu","p":["*%_"]},"m":0,"k":"m"},{"m":0,"k":"s","s":{"r":"Mu","p":["@auto","%init","*%_"]},"n":"BUILDALL"}],"b":"A","a":[{"t":"Mu","n":"$.panic","k":"v"},{"n":"@.sorrows","t":"Positional","k":"v"},{"n":"@.worries","t":"Positional","k":"v"},{"k":"v","t":"Mu","n":"$!ex"},{"n":"$!bt","t":"Mu","k":"v"}],"n":"X::Comp::Group","t":"X::Comp::Group"},{"n":"X::Comp::NYI","t":"X::Comp::NYI","a":[{"k":"v","t":"Mu","n":"$.filename"},{"k":"v","n":"$.pos","t":"Mu"},{"k":"v","n":"$.line","t":"Mu"},{"k":"v","t":"Mu","n":"$.column"},{"t":"Positional","n":"@.modules","k":"v"},{"k":"v","n":"$.is-compile-time","t":"Mu"},{"k":"v","n":"$.pre","t":"Mu"},{"k":"v","n":"$.post","t":"Mu"},{"k":"v","n":"@.highexpect","t":"Positional"},{"k":"v","n":"$.feature","t":"Mu"},{"n":"$.did-you-mean","t":"Mu","k":"v"},{"n":"$.workaround","t":"Mu","k":"v"},{"n":"$!ex","t":"Mu","k":"v"},{"t":"Mu","n":"$!bt","k":"v"}],"b":"A","m":[{"k":"m","m":0,"n":"sorry_heading","s":{"p":["*%_"],"r":"Mu"}},{"m":0,"k":"m","s":{"r":"Mu","p":["$file","$line","*%_"]},"n":"SET_FILE_LINE"},{"s":{"p":["*%_"],"r":"Mu"},"n":"gist","m":1,"k":"m"},{"k":"m","m":1,"s":{"p":["*%_"],"r":"Mu"},"n":"gist"},{"s":{"p":["*%_"],"r":"Mu"},"n":"gist","m":1,"k":"m"},{"n":"gist","s":{"r":"Mu","p":[":$sorry = Bool::True",":$expect = Bool::True","*%_"]},"k":"m","m":1},{"m":0,"k":"m","n":"filename","s":{"p":["*%_"],"r":"Mu"}},{"m":0,"k":"m","s":{"p":["*%_"],"r":"Mu"},"n":"pos"},{"k":"m","m":0,"s":{"p":["*%_"],"r":"Mu"},"n":"line"},{"m":0,"k":"m","s":{"r":"Mu","p":["*%_"]},"n":"column"},{"m":0,"k":"m","s":{"r":"Mu","p":["*%_"]},"n":"modules"},{"k":"m","m":0,"n":"is-compile-time","s":{"r":"Mu","p":["*%_"]}},{"m":0,"k":"m","n":"pre","s":{"r":"Mu","p":["*%_"]}},{"s":{"p":["*%_"],"r":"Mu"},"n":"post","m":0,"k":"m"},{"s":{"r":"Mu","p":["*%_"]},"n":"highexpect","m":0,"k":"m"},{"m":0,"k":"s","s":{"r":"Mu","p":["@auto","%init","*%_"]},"n":"BUILDALL"},{"s":{"p":["*%_"],"r":"Mu"},"n":"message","k":"m","m":0},{"m":0,"k":"m","n":"workaround","s":{"r":"Mu","p":["*%_"]}},{"s":{"p":["*%_"],"r":"Mu"},"n":"did-you-mean","m":0,"k":"m"},{"k":"m","m":0,"s":{"r":"Mu","p":["*%_"]},"n":"feature"},{"s":{"p":["@auto","%init","*%_"],"r":"Mu"},"n":"BUILDALL","k":"s","m":0},{"s":{"p":["*%_"],"r":"Bool"},"n":"resume","k":"m","m":0},{"n":"reset-backtrace","s":{"p":["*%_"],"r":"Mu"},"k":"m","m":0},{"n":"is-compile-time","s":{"p":["*%_"],"r":"Bool"},"k":"m","m":0},{"k":"m","m":0,"n":"throw","s":{"p":["$bt?","*%_"],"r":"Mu"}},{"n":"fail","s":{"p":["*%_"],"r":"Mu"},"m":0,"k":"m"},{"s":{"p":["*%_"],"r":"Mu"},"n":"Str","m":1,"k":"m"},{"s":{"r":"Mu","p":["*%_"]},"n":"Str","m":1,"k":"m"},{"m":1,"k":"m","s":{"r":"Mu","p":["*%_"]},"n":"Str"},{"s":{"r":"Mu","p":["*%_"]},"n":"die","k":"m","m":0},{"m":0,"k":"m","s":{"p":["*%_"],"r":"Mu"},"n":"rethrow"},{"m":0,"k":"m","s":{"p":["*%_"],"r":"Mu"},"n":"backtrace"},{"s":{"r":"Mu","p":["*%_"]},"n":"gist","m":1,"k":"m"},{"s":{"p":["*%_"],"r":"Mu"},"n":"gist","m":1,"k":"m"},{"n":"gist","s":{"p":["*%_"],"r":"Mu"},"m":1,"k":"m"},{"n":"vault-backtrace","s":{"p":["*%_"],"r":"Mu"},"k":"m","m":0},{"k":"s","m":0,"n":"BUILDALL","s":{"p":["@auto","%init","*%_"],"r":"Mu"}}],"k":"c"},{"t":"X::Comp::AdHoc","n":"X::Comp::AdHoc","b":"A","a":[{"t":"Mu","n":"$.filename","k":"v"},{"k":"v","n":"$.pos","t":"Mu"},{"k":"v","t":"Mu","n":"$.line"},{"n":"$.column","t":"Mu","k":"v"},{"t":"Positional","n":"@.modules","k":"v"},{"n":"$.is-compile-time","t":"Mu","k":"v"},{"k":"v","t":"Mu","n":"$.pre"},{"n":"$.post","t":"Mu","k":"v"},{"n":"@.highexpect","t":"Positional","k":"v"},{"k":"v","n":"$.payload","t":"Mu"},{"k":"v","n":"$!ex","t":"Mu"},{"k":"v","t":"Mu","n":"$!bt"}],"k":"c","m":[{"s":{"p":["*%_"],"r":"Bool"},"n":"is-compile-time","k":"m","m":0},{"n":"sorry_heading","s":{"r":"Mu","p":["*%_"]},"k":"m","m":0},{"m":0,"k":"m","s":{"r":"Mu","p":["$file","$line","*%_"]},"n":"SET_FILE_LINE"},{"k":"m","m":1,"s":{"r":"Mu","p":["*%_"]},"n":"gist"},{"m":1,"k":"m","n":"gist","s":{"r":"Mu","p":["*%_"]}},{"n":"gist","s":{"p":["*%_"],"r":"Mu"},"k":"m","m":1},{"m":1,"k":"m","n":"gist","s":{"r":"Mu","p":[":$sorry = Bool::True",":$expect = Bool::True","*%_"]}},{"k":"m","m":0,"s":{"r":"Mu","p":["*%_"]},"n":"filename"},{"s":{"p":["*%_"],"r":"Mu"},"n":"pos","k":"m","m":0},{"s":{"r":"Mu","p":["*%_"]},"n":"line","m":0,"k":"m"},{"n":"column","s":{"p":["*%_"],"r":"Mu"},"m":0,"k":"m"},{"n":"modules","s":{"r":"Mu","p":["*%_"]},"m":0,"k":"m"},{"n":"pre","s":{"r":"Mu","p":["*%_"]},"m":0,"k":"m"},{"s":{"r":"Mu","p":["*%_"]},"n":"post","m":0,"k":"m"},{"n":"highexpect","s":{"r":"Mu","p":["*%_"]},"k":"m","m":0},{"n":"BUILDALL","s":{"r":"Mu","p":["@auto","%init","*%_"]},"m":0,"k":"s"},{"m":0,"k":"m","s":{"p":["|cap is raw"],"r":"Mu"},"n":"from-slurpy"},{"k":"m","m":0,"n":"payload","s":{"p":["*%_"],"r":"Mu"}},{"m":0,"k":"m","s":{"r":"Mu","p":["*%_"]},"n":"message"},{"s":{"p":["*%_"],"r":"Mu"},"n":"Numeric","m":0,"k":"m"},{"s":{"p":["@auto","%init","*%_"],"r":"Mu"},"n":"BUILDALL","m":0,"k":"s"},{"k":"m","m":0,"s":{"p":["*%_"],"r":"Bool"},"n":"resume"},{"k":"m","m":0,"n":"reset-backtrace","s":{"r":"Mu","p":["*%_"]}},{"n":"is-compile-time","s":{"p":["*%_"],"r":"Bool"},"k":"m","m":0},{"m":0,"k":"m","n":"throw","s":{"p":["$bt?","*%_"],"r":"Mu"}},{"n":"fail","s":{"p":["*%_"],"r":"Mu"},"k":"m","m":0},{"k":"m","m":1,"n":"Str","s":{"r":"Mu","p":["*%_"]}},{"s":{"p":["*%_"],"r":"Mu"},"n":"Str","k":"m","m":1},{"m":1,"k":"m","s":{"p":["*%_"],"r":"Mu"},"n":"Str"},{"n":"die","s":{"r":"Mu","p":["*%_"]},"m":0,"k":"m"},{"m":0,"k":"m","s":{"r":"Mu","p":["*%_"]},"n":"rethrow"},{"s":{"r":"Mu","p":["*%_"]},"n":"backtrace","m":0,"k":"m"},{"s":{"p":["*%_"],"r":"Mu"},"n":"gist","m":1,"k":"m"},{"n":"gist","s":{"p":["*%_"],"r":"Mu"},"k":"m","m":1},{"k":"m","m":1,"n":"gist","s":{"p":["*%_"],"r":"Mu"}},{"s":{"r":"Mu","p":["*%_"]},"n":"vault-backtrace","k":"m","m":0},{"k":"s","m":0,"n":"BUILDALL","s":{"r":"Mu","p":["@auto","%init","*%_"]}}]},{"b":"A","a":[{"k":"v","n":"$.filename","t":"Mu"},{"n":"$.pos","t":"Mu","k":"v"},{"t":"Mu","n":"$.line","k":"v"},{"t":"Mu","n":"$.column","k":"v"},{"k":"v","t":"Positional","n":"@.modules"},{"t":"Mu","n":"$.is-compile-time","k":"v"},{"k":"v","n":"$.pre","t":"Mu"},{"t":"Mu","n":"$.post","k":"v"},{"t":"Positional","n":"@.highexpect","k":"v"},{"k":"v","t":"Mu","n":"$.type"},{"t":"Mu","n":"$.subtype","k":"v"},{"k":"v","n":"$.declaring","t":"Mu"},{"t":"Mu","n":"$.scope","k":"v"},{"t":"Mu","n":"$.supported","k":"v"},{"k":"v","n":"$!ex","t":"Mu"},{"t":"Mu","n":"$!bt","k":"v"}],"k":"c","m":[{"s":{"p":["*%_"],"r":"Mu"},"n":"sorry_heading","k":"m","m":0},{"n":"SET_FILE_LINE","s":{"r":"Mu","p":["$file","$line","*%_"]},"m":0,"k":"m"},{"k":"m","m":1,"s":{"p":["*%_"],"r":"Mu"},"n":"gist"},{"m":1,"k":"m","n":"gist","s":{"r":"Mu","p":["*%_"]}},{"s":{"p":["*%_"],"r":"Mu"},"n":"gist","m":1,"k":"m"},{"m":1,"k":"m","n":"gist","s":{"p":[":$sorry = Bool::True",":$expect = Bool::True","*%_"],"r":"Mu"}},{"m":0,"k":"m","s":{"p":["*%_"],"r":"Mu"},"n":"filename"},{"s":{"p":["*%_"],"r":"Mu"},"n":"pos","m":0,"k":"m"},{"s":{"r":"Mu","p":["*%_"]},"n":"line","m":0,"k":"m"},{"s":{"p":["*%_"],"r":"Mu"},"n":"column","k":"m","m":0},{"k":"m","m":0,"s":{"p":["*%_"],"r":"Mu"},"n":"modules"},{"k":"m","m":0,"s":{"r":"Mu","p":["*%_"]},"n":"is-compile-time"},{"k":"m","m":0,"n":"pre","s":{"p":["*%_"],"r":"Mu"}},{"k":"m","m":0,"s":{"r":"Mu","p":["*%_"]},"n":"post"},{"m":0,"k":"m","s":{"p":["*%_"],"r":"Mu"},"n":"highexpect"},{"s":{"p":["@auto","%init","*%_"],"r":"Mu"},"n":"BUILDALL","m":0,"k":"s"},{"n":"supported","s":{"r":"Mu","p":["*%_"]},"m":0,"k":"m"},{"n":"message","s":{"p":["*%_"],"r":"Mu"},"m":0,"k":"m"},{"k":"m","m":0,"n":"scope","s":{"p":["*%_"],"r":"Mu"}},{"n":"subtype","s":{"r":"Mu","p":["*%_"]},"m":0,"k":"m"},{"k":"m","m":0,"s":{"r":"Mu","p":["*%_"]},"n":"declaring"},{"k":"m","m":0,"s":{"p":["*%_"],"r":"Mu"},"n":"type"},{"n":"BUILDALL","s":{"p":["@auto","%init","*%_"],"r":"Mu"},"m":0,"k":"s"},{"s":{"r":"Bool","p":["*%_"]},"n":"resume","k":"m","m":0},{"n":"reset-backtrace","s":{"p":["*%_"],"r":"Mu"},"m":0,"k":"m"},{"n":"is-compile-time","s":{"p":["*%_"],"r":"Bool"},"m":0,"k":"m"},{"n":"throw","s":{"p":["$bt?","*%_"],"r":"Mu"},"k":"m","m":0},{"k":"m","m":0,"n":"fail","s":{"p":["*%_"],"r":"Mu"}},{"n":"Str","s":{"r":"Mu","p":["*%_"]},"m":1,"k":"m"},{"n":"Str","s":{"p":["*%_"],"r":"Mu"},"m":1,"k":"m"},{"s":{"r":"Mu","p":["*%_"]},"n":"Str","k":"m","m":1},{"s":{"p":["*%_"],"r":"Mu"},"n":"die","m":0,"k":"m"},{"m":0,"k":"m","n":"rethrow","s":{"r":"Mu","p":["*%_"]}},{"m":0,"k":"m","n":"backtrace","s":{"p":["*%_"],"r":"Mu"}},{"k":"m","m":1,"s":{"p":["*%_"],"r":"Mu"},"n":"gist"},{"k":"m","m":1,"s":{"r":"Mu","p":["*%_"]},"n":"gist"},{"k":"m","m":1,"s":{"p":["*%_"],"r":"Mu"},"n":"gist"},{"n":"vault-backtrace","s":{"r":"Mu","p":["*%_"]},"k":"m","m":0},{"m":0,"k":"s","s":{"p":["@auto","%init","*%_"],"r":"Mu"},"n":"BUILDALL"}],"t":"X::Comp::Trait::Scope","n":"X::Comp::Trait::Scope"},{"a":[{"t":"Mu","n":"$.filename","k":"v"},{"k":"v","t":"Mu","n":"$.pos"},{"t":"Mu","n":"$.line","k":"v"},{"n":"$.column","t":"Mu","k":"v"},{"k":"v","t":"Positional","n":"@.modules"},{"k":"v","t":"Mu","n":"$.is-compile-time"},{"t":"Mu","n":"$.pre","k":"v"},{"k":"v","t":"Mu","n":"$.post"},{"k":"v","n":"@.highexpect","t":"Positional"},{"n":"$.type","t":"Mu","k":"v"},{"k":"v","n":"$.subtype","t":"Mu"},{"t":"Mu","n":"$.declaring","k":"v"},{"k":"v","n":"$!ex","t":"Mu"},{"n":"$!bt","t":"Mu","k":"v"}],"b":"A","k":"c","m":[{"k":"m","m":0,"n":"sorry_heading","s":{"p":["*%_"],"r":"Mu"}},{"n":"SET_FILE_LINE","s":{"r":"Mu","p":["$file","$line","*%_"]},"k":"m","m":0},{"n":"gist","s":{"p":["*%_"],"r":"Mu"},"k":"m","m":1},{"m":1,"k":"m","n":"gist","s":{"p":["*%_"],"r":"Mu"}},{"k":"m","m":1,"s":{"r":"Mu","p":["*%_"]},"n":"gist"},{"s":{"p":[":$sorry = Bool::True",":$expect = Bool::True","*%_"],"r":"Mu"},"n":"gist","k":"m","m":1},{"k":"m","m":0,"s":{"p":["*%_"],"r":"Mu"},"n":"filename"},{"m":0,"k":"m","s":{"r":"Mu","p":["*%_"]},"n":"pos"},{"k":"m","m":0,"s":{"r":"Mu","p":["*%_"]},"n":"line"},{"k":"m","m":0,"s":{"p":["*%_"],"r":"Mu"},"n":"column"},{"k":"m","m":0,"s":{"p":["*%_"],"r":"Mu"},"n":"modules"},{"m":0,"k":"m","s":{"p":["*%_"],"r":"Mu"},"n":"is-compile-time"},{"n":"pre","s":{"r":"Mu","p":["*%_"]},"m":0,"k":"m"},{"n":"post","s":{"p":["*%_"],"r":"Mu"},"m":0,"k":"m"},{"s":{"p":["*%_"],"r":"Mu"},"n":"highexpect","k":"m","m":0},{"k":"s","m":0,"n":"BUILDALL","s":{"r":"Mu","p":["@auto","%init","*%_"]}},{"s":{"r":"Mu","p":["*%_"]},"n":"declaring","k":"m","m":0},{"m":0,"k":"m","s":{"p":["*%_"],"r":"Mu"},"n":"subtype"},{"k":"m","m":0,"n":"type","s":{"r":"Mu","p":["*%_"]}},{"m":0,"k":"m","s":{"r":"Mu","p":["*%_"]},"n":"message"},{"m":0,"k":"s","s":{"r":"Mu","p":["@auto","%init","*%_"]},"n":"BUILDALL"},{"k":"m","m":0,"n":"resume","s":{"p":["*%_"],"r":"Bool"}},{"k":"m","m":0,"n":"reset-backtrace","s":{"p":["*%_"],"r":"Mu"}},{"s":{"p":["*%_"],"r":"Bool"},"n":"is-compile-time","m":0,"k":"m"},{"k":"m","m":0,"s":{"r":"Mu","p":["$bt?","*%_"]},"n":"throw"},{"n":"fail","s":{"p":["*%_"],"r":"Mu"},"m":0,"k":"m"},{"m":1,"k":"m","n":"Str","s":{"r":"Mu","p":["*%_"]}},{"m":1,"k":"m","s":{"p":["*%_"],"r":"Mu"},"n":"Str"},{"m":1,"k":"m","n":"Str","s":{"r":"Mu","p":["*%_"]}},{"s":{"r":"Mu","p":["*%_"]},"n":"die","k":"m","m":0},{"n":"rethrow","s":{"p":["*%_"],"r":"Mu"},"m":0,"k":"m"},{"m":0,"k":"m","s":{"r":"Mu","p":["*%_"]},"n":"backtrace"},{"k":"m","m":1,"n":"gist","s":{"r":"Mu","p":["*%_"]}},{"s":{"p":["*%_"],"r":"Mu"},"n":"gist","k":"m","m":1},{"k":"m","m":1,"n":"gist","s":{"p":["*%_"],"r":"Mu"}},{"m":0,"k":"m","s":{"r":"Mu","p":["*%_"]},"n":"vault-backtrace"},{"s":{"r":"Mu","p":["@auto","%init","*%_"]},"n":"BUILDALL","k":"s","m":0}],"n":"X::Comp::Trait::Unknown","t":"X::Comp::Trait::Unknown"},{"a":[{"k":"v","t":"Mu","n":"$.filename"},{"t":"Mu","n":"$.pos","k":"v"},{"n":"$.line","t":"Mu","k":"v"},{"k":"v","n":"$.column","t":"Mu"},{"k":"v","t":"Positional","n":"@.modules"},{"k":"v","n":"$.is-compile-time","t":"Mu"},{"k":"v","t":"Mu","n":"$.pre"},{"t":"Mu","n":"$.post","k":"v"},{"k":"v","t":"Positional","n":"@.highexpect"},{"n":"$.type","t":"Mu","k":"v"},{"k":"v","t":"Mu","n":"$.subtype"},{"n":"$.native","t":"Mu","k":"v"},{"k":"v","n":"$!ex","t":"Mu"},{"n":"$!bt","t":"Mu","k":"v"}],"b":"A","k":"c","m":[{"k":"m","m":0,"n":"sorry_heading","s":{"r":"Mu","p":["*%_"]}},{"n":"SET_FILE_LINE","s":{"r":"Mu","p":["$file","$line","*%_"]},"m":0,"k":"m"},{"m":1,"k":"m","s":{"p":["*%_"],"r":"Mu"},"n":"gist"},{"k":"m","m":1,"n":"gist","s":{"r":"Mu","p":["*%_"]}},{"s":{"p":["*%_"],"r":"Mu"},"n":"gist","k":"m","m":1},{"n":"gist","s":{"p":[":$sorry = Bool::True",":$expect = Bool::True","*%_"],"r":"Mu"},"m":1,"k":"m"},{"n":"filename","s":{"p":["*%_"],"r":"Mu"},"m":0,"k":"m"},{"k":"m","m":0,"n":"pos","s":{"p":["*%_"],"r":"Mu"}},{"m":0,"k":"m","s":{"r":"Mu","p":["*%_"]},"n":"line"},{"k":"m","m":0,"n":"column","s":{"p":["*%_"],"r":"Mu"}},{"k":"m","m":0,"s":{"p":["*%_"],"r":"Mu"},"n":"modules"},{"s":{"p":["*%_"],"r":"Mu"},"n":"is-compile-time","k":"m","m":0},{"s":{"r":"Mu","p":["*%_"]},"n":"pre","m":0,"k":"m"},{"k":"m","m":0,"n":"post","s":{"p":["*%_"],"r":"Mu"}},{"m":0,"k":"m","s":{"p":["*%_"],"r":"Mu"},"n":"highexpect"},{"n":"BUILDALL","s":{"p":["@auto","%init","*%_"],"r":"Mu"},"k":"s","m":0},{"s":{"r":"Mu","p":["*%_"]},"n":"message","k":"m","m":0},{"n":"native","s":{"p":["*%_"],"r":"Mu"},"k":"m","m":0},{"s":{"p":["*%_"],"r":"Mu"},"n":"type","k":"m","m":0},{"n":"subtype","s":{"p":["*%_"],"r":"Mu"},"m":0,"k":"m"},{"s":{"p":["@auto","%init","*%_"],"r":"Mu"},"n":"BUILDALL","k":"s","m":0},{"k":"m","m":0,"s":{"p":["*%_"],"r":"Bool"},"n":"resume"},{"k":"m","m":0,"n":"reset-backtrace","s":{"r":"Mu","p":["*%_"]}},{"k":"m","m":0,"n":"is-compile-time","s":{"r":"Bool","p":["*%_"]}},{"s":{"p":["$bt?","*%_"],"r":"Mu"},"n":"throw","m":0,"k":"m"},{"m":0,"k":"m","n":"fail","s":{"r":"Mu","p":["*%_"]}},{"k":"m","m":1,"n":"Str","s":{"p":["*%_"],"r":"Mu"}},{"s":{"p":["*%_"],"r":"Mu"},"n":"Str","m":1,"k":"m"},{"m":1,"k":"m","s":{"r":"Mu","p":["*%_"]},"n":"Str"},{"n":"die","s":{"p":["*%_"],"r":"Mu"},"k":"m","m":0},{"s":{"p":["*%_"],"r":"Mu"},"n":"rethrow","m":0,"k":"m"},{"m":0,"k":"m","n":"backtrace","s":{"r":"Mu","p":["*%_"]}},{"s":{"r":"Mu","p":["*%_"]},"n":"gist","k":"m","m":1},{"k":"m","m":1,"s":{"p":["*%_"],"r":"Mu"},"n":"gist"},{"m":1,"k":"m","s":{"p":["*%_"],"r":"Mu"},"n":"gist"},{"k":"m","m":0,"n":"vault-backtrace","s":{"r":"Mu","p":["*%_"]}},{"s":{"p":["@auto","%init","*%_"],"r":"Mu"},"n":"BUILDALL","m":0,"k":"s"}],"n":"X::Comp::Trait::NotOnNative","t":"X::Comp::Trait::NotOnNative"},{"a":[{"n":"$.filename","t":"Mu","k":"v"},{"k":"v","n":"$.pos","t":"Mu"},{"t":"Mu","n":"$.line","k":"v"},{"n":"$.column","t":"Mu","k":"v"},{"k":"v","t":"Positional","n":"@.modules"},{"k":"v","n":"$.is-compile-time","t":"Mu"},{"k":"v","n":"$.pre","t":"Mu"},{"k":"v","n":"$.post","t":"Mu"},{"n":"@.highexpect","t":"Positional","k":"v"},{"k":"v","n":"$!ex","t":"Mu"},{"k":"v","t":"Mu","n":"$!bt"}],"b":"A","k":"c","m":[{"m":0,"k":"m","s":{"r":"Mu","p":["*%_"]},"n":"message"},{"m":0,"k":"m","n":"sorry_heading","s":{"p":["*%_"],"r":"Mu"}},{"m":0,"k":"m","n":"SET_FILE_LINE","s":{"r":"Mu","p":["$file","$line","*%_"]}},{"n":"gist","s":{"r":"Mu","p":["*%_"]},"k":"m","m":1},{"m":1,"k":"m","s":{"p":["*%_"],"r":"Mu"},"n":"gist"},{"n":"gist","s":{"p":["*%_"],"r":"Mu"},"m":1,"k":"m"},{"m":1,"k":"m","n":"gist","s":{"r":"Mu","p":[":$sorry = Bool::True",":$expect = Bool::True","*%_"]}},{"m":0,"k":"m","n":"filename","s":{"r":"Mu","p":["*%_"]}},{"m":0,"k":"m","s":{"r":"Mu","p":["*%_"]},"n":"pos"},{"n":"line","s":{"p":["*%_"],"r":"Mu"},"m":0,"k":"m"},{"m":0,"k":"m","n":"column","s":{"r":"Mu","p":["*%_"]}},{"m":0,"k":"m","s":{"r":"Mu","p":["*%_"]},"n":"modules"},{"k":"m","m":0,"s":{"r":"Mu","p":["*%_"]},"n":"is-compile-time"},{"n":"pre","s":{"r":"Mu","p":["*%_"]},"m":0,"k":"m"},{"s":{"r":"Mu","p":["*%_"]},"n":"post","k":"m","m":0},{"k":"m","m":0,"s":{"r":"Mu","p":["*%_"]},"n":"highexpect"},{"k":"s","m":0,"s":{"r":"Mu","p":["@auto","%init","*%_"]},"n":"BUILDALL"},{"n":"resume","s":{"r":"Bool","p":["*%_"]},"m":0,"k":"m"},{"s":{"p":["*%_"],"r":"Mu"},"n":"reset-backtrace","m":0,"k":"m"},{"s":{"p":["*%_"],"r":"Bool"},"n":"is-compile-time","m":0,"k":"m"},{"n":"throw","s":{"r":"Mu","p":["$bt?","*%_"]},"m":0,"k":"m"},{"m":0,"k":"m","s":{"p":["*%_"],"r":"Mu"},"n":"fail"},{"s":{"p":["*%_"],"r":"Mu"},"n":"Str","k":"m","m":1},{"m":1,"k":"m","s":{"p":["*%_"],"r":"Mu"},"n":"Str"},{"m":1,"k":"m","n":"Str","s":{"r":"Mu","p":["*%_"]}},{"n":"die","s":{"r":"Mu","p":["*%_"]},"m":0,"k":"m"},{"m":0,"k":"m","s":{"r":"Mu","p":["*%_"]},"n":"rethrow"},{"s":{"p":["*%_"],"r":"Mu"},"n":"backtrace","k":"m","m":0},{"s":{"p":["*%_"],"r":"Mu"},"n":"gist","m":1,"k":"m"},{"s":{"p":["*%_"],"r":"Mu"},"n":"gist","m":1,"k":"m"},{"k":"m","m":1,"s":{"r":"Mu","p":["*%_"]},"n":"gist"},{"s":{"p":["*%_"],"r":"Mu"},"n":"vault-backtrace","m":0,"k":"m"},{"k":"s","m":0,"s":{"p":["@auto","%init","*%_"],"r":"Mu"},"n":"BUILDALL"}],"t":"X::Comp::WheneverOutOfScope","n":"X::Comp::WheneverOutOfScope"},{"n":"X::Inheritance::NotComposed","t":"X::Inheritance::NotComposed","b":"A","a":[{"k":"v","t":"Mu","n":"$.child-name"},{"k":"v","n":"$.parent-name","t":"Mu"},{"n":"$!ex","t":"Mu","k":"v"},{"t":"Mu","n":"$!bt","k":"v"}],"k":"c","m":[{"m":0,"k":"m","s":{"r":"Mu","p":["*%_"]},"n":"message"},{"s":{"r":"Mu","p":["*%_"]},"n":"child-name","k":"m","m":0},{"n":"parent-name","s":{"r":"Mu","p":["*%_"]},"m":0,"k":"m"},{"k":"s","m":0,"s":{"p":["@auto","%init","*%_"],"r":"Mu"},"n":"BUILDALL"},{"k":"m","m":0,"n":"resume","s":{"r":"Bool","p":["*%_"]}},{"n":"reset-backtrace","s":{"r":"Mu","p":["*%_"]},"m":0,"k":"m"},{"s":{"p":["*%_"],"r":"Bool"},"n":"is-compile-time","m":0,"k":"m"},{"m":0,"k":"m","n":"throw","s":{"p":["$bt?","*%_"],"r":"Mu"}},{"n":"fail","s":{"p":["*%_"],"r":"Mu"},"k":"m","m":0},{"n":"Str","s":{"p":["*%_"],"r":"Mu"},"k":"m","m":1},{"k":"m","m":1,"s":{"r":"Mu","p":["*%_"]},"n":"Str"},{"n":"Str","s":{"p":["*%_"],"r":"Mu"},"m":1,"k":"m"},{"s":{"r":"Mu","p":["*%_"]},"n":"die","m":0,"k":"m"},{"s":{"p":["*%_"],"r":"Mu"},"n":"rethrow","k":"m","m":0},{"k":"m","m":0,"s":{"r":"Mu","p":["*%_"]},"n":"backtrace"},{"n":"gist","s":{"r":"Mu","p":["*%_"]},"k":"m","m":1},{"k":"m","m":1,"s":{"r":"Mu","p":["*%_"]},"n":"gist"},{"m":1,"k":"m","s":{"p":["*%_"],"r":"Mu"},"n":"gist"},{"s":{"p":["*%_"],"r":"Mu"},"n":"vault-backtrace","m":0,"k":"m"},{"k":"s","m":0,"n":"BUILDALL","s":{"r":"Mu","p":["@auto","%init","*%_"]}}],"d":"TITLE\nclass X::Inheritance::NotComposed\n\nSUBTITLE\nError due to inheriting from a type that's not composed yet\n\n    class X::Inheritance::NotComposed is Exception {}\n\nWhen you try to inherit from a class that hasn't been composed, an\nexception of type X::Inheritance::NotComposed is thrown.\n\nUsually this happens because it's not yet fully parsed, or that is\nstubbed:\n\nFor example\n\n    class A { ... };    # literal ... for stubbing\n    class B is A { };\n\n\ndies with\n\n    ===SORRY!===\n    'B' cannot inherit from 'A' because 'A' isn't composed yet (maybe it is stubbed)\n\n\nThe second common way to trigger this error is by trying to inherit from a\nclass from within the class body.\n\nFor example\n\n    class Outer {\n        class Inner is Outer {\n        }\n    }\n\n\ndies with\n\n    ===SORRY!===\n    'Outer::Inner' cannot inherit from 'Outer' because 'Outer' isn't composed yet (maybe it is stubbed)\n\n\n"},{"t":"X::Inheritance::Unsupported","n":"X::Inheritance::Unsupported","d":"TITLE\nclass X::Inheritance::Unsupported\n\nSUBTITLE\nCompilation error due to inheriting from an ineligible type\n\n    class X::Inheritance::Unsupported does X::Comp { }\n\nCompile time error thrown when trying to inherit from a type that does not\nsupport inheritance (like a package or an enum).\n\nFor example\n\n    enum A <Ax Ay>;\n    class B is A { };\n\n\ndies with\n\n    ===SORRY!===\n    A does not support inheritance, so B cannot inherit from it\n\n\n","a":[{"t":"Mu","n":"$.child-typename","k":"v"},{"t":"Mu","n":"$.parent","k":"v"},{"k":"v","n":"$.filename","t":"Mu"},{"k":"v","n":"$.pos","t":"Mu"},{"k":"v","t":"Mu","n":"$.line"},{"n":"$.column","t":"Mu","k":"v"},{"k":"v","n":"@.modules","t":"Positional"},{"t":"Mu","n":"$.is-compile-time","k":"v"},{"t":"Mu","n":"$.pre","k":"v"},{"n":"$.post","t":"Mu","k":"v"},{"k":"v","t":"Positional","n":"@.highexpect"},{"k":"v","t":"Mu","n":"$!ex"},{"k":"v","t":"Mu","n":"$!bt"}],"b":"A","k":"c","m":[{"n":"message","s":{"r":"Mu","p":["*%_"]},"k":"m","m":0},{"n":"sorry_heading","s":{"p":["*%_"],"r":"Mu"},"m":0,"k":"m"},{"n":"SET_FILE_LINE","s":{"p":["$file","$line","*%_"],"r":"Mu"},"k":"m","m":0},{"s":{"p":["*%_"],"r":"Mu"},"n":"gist","k":"m","m":1},{"n":"gist","s":{"p":["*%_"],"r":"Mu"},"m":1,"k":"m"},{"k":"m","m":1,"n":"gist","s":{"r":"Mu","p":["*%_"]}},{"k":"m","m":1,"n":"gist","s":{"r":"Mu","p":[":$sorry = Bool::True",":$expect = Bool::True","*%_"]}},{"k":"m","m":0,"n":"child-typename","s":{"r":"Mu","p":["*%_"]}},{"s":{"r":"Mu","p":["*%_"]},"n":"parent","m":0,"k":"m"},{"m":0,"k":"m","s":{"p":["*%_"],"r":"Mu"},"n":"filename"},{"k":"m","m":0,"s":{"r":"Mu","p":["*%_"]},"n":"pos"},{"k":"m","m":0,"s":{"r":"Mu","p":["*%_"]},"n":"line"},{"n":"column","s":{"r":"Mu","p":["*%_"]},"m":0,"k":"m"},{"m":0,"k":"m","s":{"r":"Mu","p":["*%_"]},"n":"modules"},{"m":0,"k":"m","s":{"p":["*%_"],"r":"Mu"},"n":"is-compile-time"},{"k":"m","m":0,"n":"pre","s":{"p":["*%_"],"r":"Mu"}},{"s":{"p":["*%_"],"r":"Mu"},"n":"post","k":"m","m":0},{"m":0,"k":"m","n":"highexpect","s":{"p":["*%_"],"r":"Mu"}},{"n":"BUILDALL","s":{"p":["@auto","%init","*%_"],"r":"Mu"},"m":0,"k":"s"},{"n":"resume","s":{"r":"Bool","p":["*%_"]},"k":"m","m":0},{"n":"reset-backtrace","s":{"p":["*%_"],"r":"Mu"},"m":0,"k":"m"},{"n":"is-compile-time","s":{"r":"Bool","p":["*%_"]},"m":0,"k":"m"},{"m":0,"k":"m","s":{"r":"Mu","p":["$bt?","*%_"]},"n":"throw"},{"k":"m","m":0,"s":{"p":["*%_"],"r":"Mu"},"n":"fail"},{"s":{"p":["*%_"],"r":"Mu"},"n":"Str","m":1,"k":"m"},{"n":"Str","s":{"p":["*%_"],"r":"Mu"},"k":"m","m":1},{"s":{"r":"Mu","p":["*%_"]},"n":"Str","k":"m","m":1},{"n":"die","s":{"p":["*%_"],"r":"Mu"},"k":"m","m":0},{"n":"rethrow","s":{"p":["*%_"],"r":"Mu"},"k":"m","m":0},{"k":"m","m":0,"n":"backtrace","s":{"r":"Mu","p":["*%_"]}},{"n":"gist","s":{"r":"Mu","p":["*%_"]},"k":"m","m":1},{"k":"m","m":1,"n":"gist","s":{"p":["*%_"],"r":"Mu"}},{"n":"gist","s":{"p":["*%_"],"r":"Mu"},"m":1,"k":"m"},{"k":"m","m":0,"s":{"p":["*%_"],"r":"Mu"},"n":"vault-backtrace"},{"s":{"r":"Mu","p":["@auto","%init","*%_"]},"n":"BUILDALL","m":0,"k":"s"}]},{"t":"X::Inheritance::UnknownParent","n":"X::Inheritance::UnknownParent","b":"A","a":[{"n":"$.child","t":"Mu","k":"v"},{"k":"v","t":"Mu","n":"$.parent"},{"n":"@.suggestions","t":"Positional","k":"v"},{"t":"Mu","n":"$!ex","k":"v"},{"k":"v","n":"$!bt","t":"Mu"}],"k":"c","m":[{"s":{"r":"Mu","p":["*%_"]},"n":"message","k":"m","m":0},{"s":{"r":"Mu","p":["*%_"]},"n":"child","m":0,"k":"m"},{"k":"m","m":0,"s":{"r":"Mu","p":["*%_"]},"n":"parent"},{"k":"m","m":0,"s":{"r":"Mu","p":["*%_"]},"n":"suggestions"},{"s":{"r":"Mu","p":["@auto","%init","*%_"]},"n":"BUILDALL","m":0,"k":"s"},{"k":"m","m":0,"s":{"r":"Bool","p":["*%_"]},"n":"resume"},{"n":"reset-backtrace","s":{"p":["*%_"],"r":"Mu"},"m":0,"k":"m"},{"k":"m","m":0,"s":{"p":["*%_"],"r":"Bool"},"n":"is-compile-time"},{"n":"throw","s":{"r":"Mu","p":["$bt?","*%_"]},"k":"m","m":0},{"k":"m","m":0,"s":{"p":["*%_"],"r":"Mu"},"n":"fail"},{"m":1,"k":"m","s":{"r":"Mu","p":["*%_"]},"n":"Str"},{"k":"m","m":1,"s":{"p":["*%_"],"r":"Mu"},"n":"Str"},{"k":"m","m":1,"s":{"r":"Mu","p":["*%_"]},"n":"Str"},{"m":0,"k":"m","s":{"r":"Mu","p":["*%_"]},"n":"die"},{"s":{"r":"Mu","p":["*%_"]},"n":"rethrow","m":0,"k":"m"},{"k":"m","m":0,"s":{"p":["*%_"],"r":"Mu"},"n":"backtrace"},{"s":{"r":"Mu","p":["*%_"]},"n":"gist","m":1,"k":"m"},{"m":1,"k":"m","n":"gist","s":{"r":"Mu","p":["*%_"]}},{"s":{"p":["*%_"],"r":"Mu"},"n":"gist","k":"m","m":1},{"n":"vault-backtrace","s":{"p":["*%_"],"r":"Mu"},"m":0,"k":"m"},{"n":"BUILDALL","s":{"p":["@auto","%init","*%_"],"r":"Mu"},"m":0,"k":"s"}]},{"n":"X::Inheritance::SelfInherit","t":"X::Inheritance::SelfInherit","a":[{"t":"Mu","n":"$.name","k":"v"},{"k":"v","t":"Mu","n":"$!ex"},{"k":"v","t":"Mu","n":"$!bt"}],"b":"A","k":"c","m":[{"s":{"p":["*%_"],"r":"Mu"},"n":"message","m":0,"k":"m"},{"s":{"r":"Mu","p":["*%_"]},"n":"name","m":0,"k":"m"},{"s":{"p":["@auto","%init","*%_"],"r":"Mu"},"n":"BUILDALL","k":"s","m":0},{"s":{"r":"Bool","p":["*%_"]},"n":"resume","k":"m","m":0},{"m":0,"k":"m","s":{"p":["*%_"],"r":"Mu"},"n":"reset-backtrace"},{"k":"m","m":0,"n":"is-compile-time","s":{"r":"Bool","p":["*%_"]}},{"m":0,"k":"m","n":"throw","s":{"r":"Mu","p":["$bt?","*%_"]}},{"s":{"r":"Mu","p":["*%_"]},"n":"fail","m":0,"k":"m"},{"k":"m","m":1,"n":"Str","s":{"r":"Mu","p":["*%_"]}},{"n":"Str","s":{"r":"Mu","p":["*%_"]},"k":"m","m":1},{"n":"Str","s":{"p":["*%_"],"r":"Mu"},"m":1,"k":"m"},{"m":0,"k":"m","s":{"r":"Mu","p":["*%_"]},"n":"die"},{"s":{"p":["*%_"],"r":"Mu"},"n":"rethrow","m":0,"k":"m"},{"k":"m","m":0,"n":"backtrace","s":{"r":"Mu","p":["*%_"]}},{"k":"m","m":1,"s":{"r":"Mu","p":["*%_"]},"n":"gist"},{"n":"gist","s":{"r":"Mu","p":["*%_"]},"m":1,"k":"m"},{"m":1,"k":"m","s":{"r":"Mu","p":["*%_"]},"n":"gist"},{"k":"m","m":0,"s":{"p":["*%_"],"r":"Mu"},"n":"vault-backtrace"},{"n":"BUILDALL","s":{"r":"Mu","p":["@auto","%init","*%_"]},"k":"s","m":0}]},{"n":"X::MustBeParametric","t":"X::MustBeParametric","k":"c","m":[{"m":0,"k":"m","s":{"p":["*%_"],"r":"Mu"},"n":"message"},{"k":"m","m":0,"s":{"p":["*%_"],"r":"Mu"},"n":"type"},{"s":{"r":"Mu","p":["@auto","%init","*%_"]},"n":"BUILDALL","m":0,"k":"s"},{"m":0,"k":"m","n":"resume","s":{"r":"Bool","p":["*%_"]}},{"n":"reset-backtrace","s":{"r":"Mu","p":["*%_"]},"m":0,"k":"m"},{"n":"is-compile-time","s":{"r":"Bool","p":["*%_"]},"k":"m","m":0},{"s":{"p":["$bt?","*%_"],"r":"Mu"},"n":"throw","k":"m","m":0},{"m":0,"k":"m","n":"fail","s":{"p":["*%_"],"r":"Mu"}},{"n":"Str","s":{"p":["*%_"],"r":"Mu"},"m":1,"k":"m"},{"s":{"p":["*%_"],"r":"Mu"},"n":"Str","k":"m","m":1},{"m":1,"k":"m","s":{"p":["*%_"],"r":"Mu"},"n":"Str"},{"n":"die","s":{"p":["*%_"],"r":"Mu"},"m":0,"k":"m"},{"k":"m","m":0,"n":"rethrow","s":{"p":["*%_"],"r":"Mu"}},{"m":0,"k":"m","n":"backtrace","s":{"r":"Mu","p":["*%_"]}},{"m":1,"k":"m","n":"gist","s":{"r":"Mu","p":["*%_"]}},{"n":"gist","s":{"p":["*%_"],"r":"Mu"},"m":1,"k":"m"},{"s":{"r":"Mu","p":["*%_"]},"n":"gist","m":1,"k":"m"},{"n":"vault-backtrace","s":{"p":["*%_"],"r":"Mu"},"k":"m","m":0},{"m":0,"k":"s","n":"BUILDALL","s":{"r":"Mu","p":["@auto","%init","*%_"]}}],"a":[{"k":"v","t":"Mu","n":"$.type"},{"t":"Mu","n":"$!ex","k":"v"},{"k":"v","n":"$!bt","t":"Mu"}],"b":"A"},{"k":"c","m":[{"k":"m","m":0,"s":{"r":"Mu","p":["*%_"]},"n":"message"},{"k":"m","m":0,"s":{"r":"Mu","p":["*%_"]},"n":"operation"},{"k":"m","m":0,"n":"got-dimensions","s":{"r":"Mu","p":["*%_"]}},{"m":0,"k":"m","n":"needed-dimensions","s":{"p":["*%_"],"r":"Mu"}},{"n":"BUILDALL","s":{"r":"Mu","p":["@auto","%init","*%_"]},"m":0,"k":"s"},{"s":{"r":"Bool","p":["*%_"]},"n":"resume","m":0,"k":"m"},{"s":{"r":"Mu","p":["*%_"]},"n":"reset-backtrace","m":0,"k":"m"},{"s":{"r":"Bool","p":["*%_"]},"n":"is-compile-time","k":"m","m":0},{"k":"m","m":0,"s":{"p":["$bt?","*%_"],"r":"Mu"},"n":"throw"},{"s":{"p":["*%_"],"r":"Mu"},"n":"fail","k":"m","m":0},{"s":{"p":["*%_"],"r":"Mu"},"n":"Str","m":1,"k":"m"},{"s":{"r":"Mu","p":["*%_"]},"n":"Str","m":1,"k":"m"},{"n":"Str","s":{"r":"Mu","p":["*%_"]},"k":"m","m":1},{"n":"die","s":{"r":"Mu","p":["*%_"]},"m":0,"k":"m"},{"s":{"p":["*%_"],"r":"Mu"},"n":"rethrow","m":0,"k":"m"},{"n":"backtrace","s":{"r":"Mu","p":["*%_"]},"m":0,"k":"m"},{"m":1,"k":"m","n":"gist","s":{"p":["*%_"],"r":"Mu"}},{"k":"m","m":1,"n":"gist","s":{"r":"Mu","p":["*%_"]}},{"s":{"r":"Mu","p":["*%_"]},"n":"gist","m":1,"k":"m"},{"m":0,"k":"m","s":{"r":"Mu","p":["*%_"]},"n":"vault-backtrace"},{"s":{"r":"Mu","p":["@auto","%init","*%_"]},"n":"BUILDALL","k":"s","m":0}],"b":"A","a":[{"k":"v","t":"Mu","n":"$.operation"},{"k":"v","n":"$.got-dimensions","t":"Mu"},{"n":"$.needed-dimensions","t":"Mu","k":"v"},{"k":"v","t":"Mu","n":"$!ex"},{"n":"$!bt","t":"Mu","k":"v"}],"t":"X::NotEnoughDimensions","n":"X::NotEnoughDimensions"},{"k":"c","m":[{"n":"message","s":{"r":"Mu","p":["*%_"]},"k":"m","m":0},{"s":{"p":["@auto","%init","*%_"],"r":"Mu"},"n":"BUILDALL","k":"s","m":0},{"s":{"p":["*%_"],"r":"Bool"},"n":"resume","m":0,"k":"m"},{"k":"m","m":0,"s":{"p":["*%_"],"r":"Mu"},"n":"reset-backtrace"},{"s":{"p":["*%_"],"r":"Bool"},"n":"is-compile-time","m":0,"k":"m"},{"n":"throw","s":{"p":["$bt?","*%_"],"r":"Mu"},"k":"m","m":0},{"n":"fail","s":{"r":"Mu","p":["*%_"]},"m":0,"k":"m"},{"n":"Str","s":{"p":["*%_"],"r":"Mu"},"m":1,"k":"m"},{"k":"m","m":1,"s":{"r":"Mu","p":["*%_"]},"n":"Str"},{"m":1,"k":"m","n":"Str","s":{"r":"Mu","p":["*%_"]}},{"m":0,"k":"m","s":{"p":["*%_"],"r":"Mu"},"n":"die"},{"m":0,"k":"m","s":{"r":"Mu","p":["*%_"]},"n":"rethrow"},{"m":0,"k":"m","s":{"r":"Mu","p":["*%_"]},"n":"backtrace"},{"n":"gist","s":{"p":["*%_"],"r":"Mu"},"m":1,"k":"m"},{"n":"gist","s":{"p":["*%_"],"r":"Mu"},"m":1,"k":"m"},{"m":1,"k":"m","n":"gist","s":{"p":["*%_"],"r":"Mu"}},{"k":"m","m":0,"n":"vault-backtrace","s":{"r":"Mu","p":["*%_"]}},{"k":"s","m":0,"s":{"r":"Mu","p":["@auto","%init","*%_"]},"n":"BUILDALL"}],"a":[{"k":"v","n":"$!ex","t":"Mu"},{"k":"v","n":"$!bt","t":"Mu"}],"b":"A","t":"X::WheneverOutOfScope","n":"X::WheneverOutOfScope"},{"k":"ro","b":"C","d":"TITLE\nrole X::Control\n\nSUBTITLE\nRole for control exceptions\n\n    role X::Control is Exception { }\n\nThis role turns an exception into a control exception, such as CX::Next or\nCX::Take. It has got no code other than the definition.\n\nSince Rakudo 2019.03, throwing an object that mixes in this role X::Control\ncan raise a control exception which is caught by the CONTROL phaser instead\nof CATCH. This allows to define custom control exceptions.\n\nFor example, the custom CX::Oops control exception we define below:\n\n    class CX::Vaya does X::Control {\n        has $.message\n    }\n\n    sub ea {\n        CONTROL {\n            default {\n                say \"Controlled { .^name }: { .message }\"\n            }\n        }\n        CX::Vaya.new( message => \"I messed up!\" ).throw;\n\n    }\n    ea;\n    # OUTPUT: «Controlled CX::Vaya: I messed up!␤»\n","n":"X::Control","t":"X::Control"},{"m":[{"n":"message","s":{"r":"Mu","p":["*%_"]},"k":"m","m":0},{"m":0,"k":"m","s":{"p":["*%_"],"r":"Mu"},"n":"thing"},{"k":"s","m":0,"n":"BUILDALL","s":{"p":["@auto","%init","*%_"],"r":"Mu"}},{"n":"resume","s":{"r":"Bool","p":["*%_"]},"m":0,"k":"m"},{"m":0,"k":"m","s":{"r":"Mu","p":["*%_"]},"n":"reset-backtrace"},{"k":"m","m":0,"s":{"p":["*%_"],"r":"Bool"},"n":"is-compile-time"},{"m":0,"k":"m","s":{"r":"Mu","p":["$bt?","*%_"]},"n":"throw"},{"s":{"p":["*%_"],"r":"Mu"},"n":"fail","m":0,"k":"m"},{"k":"m","m":1,"n":"Str","s":{"r":"Mu","p":["*%_"]}},{"n":"Str","s":{"r":"Mu","p":["*%_"]},"m":1,"k":"m"},{"m":1,"k":"m","s":{"p":["*%_"],"r":"Mu"},"n":"Str"},{"n":"die","s":{"p":["*%_"],"r":"Mu"},"m":0,"k":"m"},{"s":{"r":"Mu","p":["*%_"]},"n":"rethrow","m":0,"k":"m"},{"s":{"r":"Mu","p":["*%_"]},"n":"backtrace","m":0,"k":"m"},{"k":"m","m":1,"s":{"r":"Mu","p":["*%_"]},"n":"gist"},{"n":"gist","s":{"r":"Mu","p":["*%_"]},"k":"m","m":1},{"k":"m","m":1,"s":{"r":"Mu","p":["*%_"]},"n":"gist"},{"m":0,"k":"m","s":{"r":"Mu","p":["*%_"]},"n":"vault-backtrace"},{"s":{"p":["@auto","%init","*%_"],"r":"Mu"},"n":"BUILDALL","k":"s","m":0}],"k":"c","b":"A","a":[{"t":"Mu","n":"$.thing","k":"v"},{"t":"Mu","n":"$!ex","k":"v"},{"t":"Mu","n":"$!bt","k":"v"}],"t":"X::Set::Coerce","n":"X::Set::Coerce"},{"t":"X::Seq::NotIndexable","n":"X::Seq::NotIndexable","k":"c","m":[{"k":"m","m":0,"s":{"r":"Mu","p":["*%_"]},"n":"message"},{"m":0,"k":"s","n":"BUILDALL","s":{"p":["@auto","%init","*%_"],"r":"Mu"}},{"m":0,"k":"m","s":{"p":["*%_"],"r":"Bool"},"n":"resume"},{"m":0,"k":"m","s":{"r":"Mu","p":["*%_"]},"n":"reset-backtrace"},{"n":"is-compile-time","s":{"p":["*%_"],"r":"Bool"},"k":"m","m":0},{"m":0,"k":"m","s":{"p":["$bt?","*%_"],"r":"Mu"},"n":"throw"},{"s":{"r":"Mu","p":["*%_"]},"n":"fail","k":"m","m":0},{"s":{"p":["*%_"],"r":"Mu"},"n":"Str","k":"m","m":1},{"m":1,"k":"m","s":{"p":["*%_"],"r":"Mu"},"n":"Str"},{"s":{"r":"Mu","p":["*%_"]},"n":"Str","k":"m","m":1},{"n":"die","s":{"r":"Mu","p":["*%_"]},"m":0,"k":"m"},{"k":"m","m":0,"n":"rethrow","s":{"r":"Mu","p":["*%_"]}},{"s":{"r":"Mu","p":["*%_"]},"n":"backtrace","m":0,"k":"m"},{"m":1,"k":"m","s":{"r":"Mu","p":["*%_"]},"n":"gist"},{"s":{"r":"Mu","p":["*%_"]},"n":"gist","m":1,"k":"m"},{"k":"m","m":1,"s":{"p":["*%_"],"r":"Mu"},"n":"gist"},{"s":{"p":["*%_"],"r":"Mu"},"n":"vault-backtrace","k":"m","m":0},{"n":"BUILDALL","s":{"r":"Mu","p":["@auto","%init","*%_"]},"k":"s","m":0}],"b":"A","a":[{"n":"$!ex","t":"Mu","k":"v"},{"n":"$!bt","t":"Mu","k":"v"}]},{"d":"TITLE\nclass X::Seq::Consumed\n\nSUBTITLE\nError due to trying to reuse a consumed sequence\n\n    class X::Seq::Consumed is Exception { }\n\nThis exception is thrown when a piece of code tries to reuse a Seq which\nhas already been iterated.","a":[{"k":"v","n":"$!ex","t":"Mu"},{"k":"v","n":"$!bt","t":"Mu"}],"b":"A","k":"c","m":[{"n":"message","s":{"p":["*%_"],"r":"Mu"},"k":"m","m":0},{"s":{"r":"Mu","p":["@auto","%init","*%_"]},"n":"BUILDALL","k":"s","m":0},{"m":0,"k":"m","n":"resume","s":{"r":"Bool","p":["*%_"]}},{"k":"m","m":0,"s":{"r":"Mu","p":["*%_"]},"n":"reset-backtrace"},{"s":{"p":["*%_"],"r":"Bool"},"n":"is-compile-time","m":0,"k":"m"},{"n":"throw","s":{"p":["$bt?","*%_"],"r":"Mu"},"k":"m","m":0},{"n":"fail","s":{"r":"Mu","p":["*%_"]},"k":"m","m":0},{"s":{"r":"Mu","p":["*%_"]},"n":"Str","k":"m","m":1},{"s":{"p":["*%_"],"r":"Mu"},"n":"Str","k":"m","m":1},{"s":{"p":["*%_"],"r":"Mu"},"n":"Str","k":"m","m":1},{"n":"die","s":{"r":"Mu","p":["*%_"]},"m":0,"k":"m"},{"k":"m","m":0,"n":"rethrow","s":{"r":"Mu","p":["*%_"]}},{"m":0,"k":"m","s":{"r":"Mu","p":["*%_"]},"n":"backtrace"},{"k":"m","m":1,"n":"gist","s":{"r":"Mu","p":["*%_"]}},{"n":"gist","s":{"p":["*%_"],"r":"Mu"},"m":1,"k":"m"},{"k":"m","m":1,"s":{"r":"Mu","p":["*%_"]},"n":"gist"},{"s":{"r":"Mu","p":["*%_"]},"n":"vault-backtrace","k":"m","m":0},{"m":0,"k":"s","n":"BUILDALL","s":{"r":"Mu","p":["@auto","%init","*%_"]}}],"t":"X::Seq::Consumed","n":"X::Seq::Consumed"},{"n":"X::Experimental","t":"X::Experimental","a":[{"n":"$.feature","t":"Mu","k":"v"},{"k":"v","t":"Mu","n":"$.use"},{"k":"v","n":"$.filename","t":"Mu"},{"n":"$.pos","t":"Mu","k":"v"},{"k":"v","t":"Mu","n":"$.line"},{"k":"v","n":"$.column","t":"Mu"},{"n":"@.modules","t":"Positional","k":"v"},{"n":"$.is-compile-time","t":"Mu","k":"v"},{"k":"v","t":"Mu","n":"$.pre"},{"n":"$.post","t":"Mu","k":"v"},{"t":"Positional","n":"@.highexpect","k":"v"},{"t":"Mu","n":"$!ex","k":"v"},{"k":"v","n":"$!bt","t":"Mu"}],"b":"A","m":[{"k":"m","m":0,"s":{"p":["*%_"],"r":"Mu"},"n":"message"},{"s":{"r":"Mu","p":["*%_"]},"n":"sorry_heading","m":0,"k":"m"},{"k":"m","m":0,"n":"SET_FILE_LINE","s":{"r":"Mu","p":["$file","$line","*%_"]}},{"n":"gist","s":{"r":"Mu","p":["*%_"]},"k":"m","m":1},{"s":{"p":["*%_"],"r":"Mu"},"n":"gist","k":"m","m":1},{"m":1,"k":"m","n":"gist","s":{"p":["*%_"],"r":"Mu"}},{"k":"m","m":1,"s":{"r":"Mu","p":[":$sorry = Bool::True",":$expect = Bool::True","*%_"]},"n":"gist"},{"m":0,"k":"m","n":"feature","s":{"r":"Mu","p":["*%_"]}},{"s":{"r":"Mu","p":["*%_"]},"n":"use","k":"m","m":0},{"m":0,"k":"m","s":{"r":"Mu","p":["*%_"]},"n":"filename"},{"s":{"r":"Mu","p":["*%_"]},"n":"pos","m":0,"k":"m"},{"n":"line","s":{"r":"Mu","p":["*%_"]},"m":0,"k":"m"},{"s":{"r":"Mu","p":["*%_"]},"n":"column","k":"m","m":0},{"k":"m","m":0,"n":"modules","s":{"r":"Mu","p":["*%_"]}},{"n":"is-compile-time","s":{"p":["*%_"],"r":"Mu"},"k":"m","m":0},{"n":"pre","s":{"r":"Mu","p":["*%_"]},"k":"m","m":0},{"s":{"p":["*%_"],"r":"Mu"},"n":"post","k":"m","m":0},{"s":{"p":["*%_"],"r":"Mu"},"n":"highexpect","m":0,"k":"m"},{"m":0,"k":"s","n":"BUILDALL","s":{"r":"Mu","p":["@auto","%init","*%_"]}},{"k":"m","m":0,"s":{"r":"Bool","p":["*%_"]},"n":"resume"},{"s":{"p":["*%_"],"r":"Mu"},"n":"reset-backtrace","m":0,"k":"m"},{"n":"is-compile-time","s":{"r":"Bool","p":["*%_"]},"k":"m","m":0},{"m":0,"k":"m","n":"throw","s":{"p":["$bt?","*%_"],"r":"Mu"}},{"m":0,"k":"m","s":{"p":["*%_"],"r":"Mu"},"n":"fail"},{"m":1,"k":"m","n":"Str","s":{"r":"Mu","p":["*%_"]}},{"n":"Str","s":{"p":["*%_"],"r":"Mu"},"m":1,"k":"m"},{"s":{"p":["*%_"],"r":"Mu"},"n":"Str","k":"m","m":1},{"m":0,"k":"m","n":"die","s":{"p":["*%_"],"r":"Mu"}},{"k":"m","m":0,"n":"rethrow","s":{"p":["*%_"],"r":"Mu"}},{"n":"backtrace","s":{"r":"Mu","p":["*%_"]},"m":0,"k":"m"},{"s":{"p":["*%_"],"r":"Mu"},"n":"gist","k":"m","m":1},{"k":"m","m":1,"n":"gist","s":{"p":["*%_"],"r":"Mu"}},{"m":1,"k":"m","n":"gist","s":{"p":["*%_"],"r":"Mu"}},{"n":"vault-backtrace","s":{"r":"Mu","p":["*%_"]},"k":"m","m":0},{"m":0,"k":"s","s":{"r":"Mu","p":["@auto","%init","*%_"]},"n":"BUILDALL"}],"k":"c"},{"k":"c","m":[{"m":0,"k":"m","s":{"p":["*%_"],"r":"Mu"},"n":"message"},{"s":{"r":"Mu","p":["*%_"]},"n":"index","m":0,"k":"m"},{"m":0,"k":"m","s":{"r":"Mu","p":["*%_"]},"n":"type"},{"n":"BUILDALL","s":{"p":["@auto","%init","*%_"],"r":"Mu"},"k":"s","m":0},{"k":"m","m":0,"s":{"p":["*%_"],"r":"Bool"},"n":"resume"},{"m":0,"k":"m","n":"reset-backtrace","s":{"p":["*%_"],"r":"Mu"}},{"n":"is-compile-time","s":{"r":"Bool","p":["*%_"]},"k":"m","m":0},{"n":"throw","s":{"r":"Mu","p":["$bt?","*%_"]},"m":0,"k":"m"},{"k":"m","m":0,"s":{"p":["*%_"],"r":"Mu"},"n":"fail"},{"k":"m","m":1,"s":{"p":["*%_"],"r":"Mu"},"n":"Str"},{"k":"m","m":1,"s":{"r":"Mu","p":["*%_"]},"n":"Str"},{"n":"Str","s":{"p":["*%_"],"r":"Mu"},"k":"m","m":1},{"n":"die","s":{"r":"Mu","p":["*%_"]},"m":0,"k":"m"},{"s":{"r":"Mu","p":["*%_"]},"n":"rethrow","k":"m","m":0},{"s":{"p":["*%_"],"r":"Mu"},"n":"backtrace","k":"m","m":0},{"n":"gist","s":{"r":"Mu","p":["*%_"]},"m":1,"k":"m"},{"k":"m","m":1,"n":"gist","s":{"p":["*%_"],"r":"Mu"}},{"m":1,"k":"m","n":"gist","s":{"p":["*%_"],"r":"Mu"}},{"s":{"p":["*%_"],"r":"Mu"},"n":"vault-backtrace","k":"m","m":0},{"k":"s","m":0,"s":{"p":["@auto","%init","*%_"],"r":"Mu"},"n":"BUILDALL"}],"b":"A","a":[{"n":"$.index","t":"Mu","k":"v"},{"k":"v","t":"Mu","n":"$.type"},{"n":"$!ex","t":"Mu","k":"v"},{"k":"v","n":"$!bt","t":"Mu"}],"t":"X::Subscript::Negative","n":"X::Subscript::Negative"},{"d":"TITLE\nclass X::Signature::NameClash\n\nSUBTITLE\nCompilation error due to two named parameters with the same name\n\n    my class X::Signature::NameClash does X::Comp { }\n\nCompile time error thrown when two named parameters have the same name,\npotentially through aliases.\n\nFor example\n\n    sub f(:$a, :a(:@b)) { }\n\n\ndies with\n\n    ===SORRY!===\n    Name a used for more than one named parameter\n\n\n","k":"c","m":[{"s":{"r":"Mu","p":["*%_"]},"n":"message","k":"m","m":0},{"m":0,"k":"m","n":"sorry_heading","s":{"r":"Mu","p":["*%_"]}},{"s":{"r":"Mu","p":["$file","$line","*%_"]},"n":"SET_FILE_LINE","k":"m","m":0},{"k":"m","m":1,"n":"gist","s":{"p":["*%_"],"r":"Mu"}},{"m":1,"k":"m","n":"gist","s":{"r":"Mu","p":["*%_"]}},{"n":"gist","s":{"p":["*%_"],"r":"Mu"},"k":"m","m":1},{"k":"m","m":1,"n":"gist","s":{"r":"Mu","p":[":$sorry = Bool::True",":$expect = Bool::True","*%_"]}},{"s":{"p":["*%_"],"r":"Mu"},"n":"name","k":"m","m":0},{"k":"m","m":0,"s":{"p":["*%_"],"r":"Mu"},"n":"filename"},{"k":"m","m":0,"s":{"r":"Mu","p":["*%_"]},"n":"pos"},{"k":"m","m":0,"s":{"p":["*%_"],"r":"Mu"},"n":"line"},{"n":"column","s":{"p":["*%_"],"r":"Mu"},"m":0,"k":"m"},{"s":{"r":"Mu","p":["*%_"]},"n":"modules","m":0,"k":"m"},{"k":"m","m":0,"n":"is-compile-time","s":{"r":"Mu","p":["*%_"]}},{"m":0,"k":"m","s":{"p":["*%_"],"r":"Mu"},"n":"pre"},{"k":"m","m":0,"n":"post","s":{"r":"Mu","p":["*%_"]}},{"s":{"r":"Mu","p":["*%_"]},"n":"highexpect","m":0,"k":"m"},{"m":0,"k":"s","s":{"r":"Mu","p":["@auto","%init","*%_"]},"n":"BUILDALL"},{"k":"m","m":0,"n":"resume","s":{"p":["*%_"],"r":"Bool"}},{"n":"reset-backtrace","s":{"p":["*%_"],"r":"Mu"},"m":0,"k":"m"},{"k":"m","m":0,"s":{"r":"Bool","p":["*%_"]},"n":"is-compile-time"},{"m":0,"k":"m","s":{"r":"Mu","p":["$bt?","*%_"]},"n":"throw"},{"m":0,"k":"m","n":"fail","s":{"p":["*%_"],"r":"Mu"}},{"n":"Str","s":{"p":["*%_"],"r":"Mu"},"k":"m","m":1},{"n":"Str","s":{"p":["*%_"],"r":"Mu"},"k":"m","m":1},{"m":1,"k":"m","s":{"r":"Mu","p":["*%_"]},"n":"Str"},{"k":"m","m":0,"n":"die","s":{"p":["*%_"],"r":"Mu"}},{"k":"m","m":0,"s":{"p":["*%_"],"r":"Mu"},"n":"rethrow"},{"m":0,"k":"m","n":"backtrace","s":{"p":["*%_"],"r":"Mu"}},{"k":"m","m":1,"s":{"p":["*%_"],"r":"Mu"},"n":"gist"},{"s":{"p":["*%_"],"r":"Mu"},"n":"gist","m":1,"k":"m"},{"m":1,"k":"m","n":"gist","s":{"r":"Mu","p":["*%_"]}},{"m":0,"k":"m","s":{"p":["*%_"],"r":"Mu"},"n":"vault-backtrace"},{"m":0,"k":"s","s":{"p":["@auto","%init","*%_"],"r":"Mu"},"n":"BUILDALL"}],"b":"A","a":[{"k":"v","t":"Mu","n":"$.name"},{"k":"v","t":"Mu","n":"$.filename"},{"k":"v","t":"Mu","n":"$.pos"},{"k":"v","n":"$.line","t":"Mu"},{"t":"Mu","n":"$.column","k":"v"},{"k":"v","t":"Positional","n":"@.modules"},{"t":"Mu","n":"$.is-compile-time","k":"v"},{"n":"$.pre","t":"Mu","k":"v"},{"t":"Mu","n":"$.post","k":"v"},{"k":"v","n":"@.highexpect","t":"Positional"},{"k":"v","t":"Mu","n":"$!ex"},{"k":"v","n":"$!bt","t":"Mu"}],"t":"X::Signature::NameClash","n":"X::Signature::NameClash"},{"d":"TITLE\nclass X::Signature::Placeholder\n\nSUBTITLE\nCompilation error due to placeholders in a block with a signature\n\n    class X::Signature::Placeholder does X::Comp { }\n\n\nCompile time error thrown when a block has both an explicit signature and\nplaceholder parameters.\n\nFor example\n\n    sub f() { $^x }\n\n\ndies with\n\n    ===SORRY!===\n    Placeholder variable '$^x' cannot override existing signature\n\n\n","a":[{"k":"v","n":"$.placeholder","t":"Mu"},{"t":"Mu","n":"$.filename","k":"v"},{"n":"$.pos","t":"Mu","k":"v"},{"k":"v","t":"Mu","n":"$.line"},{"k":"v","n":"$.column","t":"Mu"},{"n":"@.modules","t":"Positional","k":"v"},{"t":"Mu","n":"$.is-compile-time","k":"v"},{"n":"$.pre","t":"Mu","k":"v"},{"t":"Mu","n":"$.post","k":"v"},{"n":"@.highexpect","t":"Positional","k":"v"},{"k":"v","t":"Mu","n":"$!ex"},{"k":"v","t":"Mu","n":"$!bt"}],"b":"A","m":[{"k":"m","m":0,"s":{"p":["*%_"],"r":"Mu"},"n":"message"},{"n":"sorry_heading","s":{"r":"Mu","p":["*%_"]},"m":0,"k":"m"},{"m":0,"k":"m","n":"SET_FILE_LINE","s":{"r":"Mu","p":["$file","$line","*%_"]}},{"m":1,"k":"m","s":{"r":"Mu","p":["*%_"]},"n":"gist"},{"s":{"p":["*%_"],"r":"Mu"},"n":"gist","k":"m","m":1},{"m":1,"k":"m","n":"gist","s":{"r":"Mu","p":["*%_"]}},{"m":1,"k":"m","s":{"p":[":$sorry = Bool::True",":$expect = Bool::True","*%_"],"r":"Mu"},"n":"gist"},{"k":"m","m":0,"n":"placeholder","s":{"p":["*%_"],"r":"Mu"}},{"k":"m","m":0,"n":"filename","s":{"r":"Mu","p":["*%_"]}},{"n":"pos","s":{"p":["*%_"],"r":"Mu"},"k":"m","m":0},{"n":"line","s":{"r":"Mu","p":["*%_"]},"m":0,"k":"m"},{"n":"column","s":{"p":["*%_"],"r":"Mu"},"m":0,"k":"m"},{"m":0,"k":"m","n":"modules","s":{"r":"Mu","p":["*%_"]}},{"s":{"p":["*%_"],"r":"Mu"},"n":"is-compile-time","m":0,"k":"m"},{"n":"pre","s":{"r":"Mu","p":["*%_"]},"k":"m","m":0},{"s":{"r":"Mu","p":["*%_"]},"n":"post","k":"m","m":0},{"k":"m","m":0,"s":{"p":["*%_"],"r":"Mu"},"n":"highexpect"},{"k":"s","m":0,"s":{"r":"Mu","p":["@auto","%init","*%_"]},"n":"BUILDALL"},{"k":"m","m":0,"n":"resume","s":{"p":["*%_"],"r":"Bool"}},{"k":"m","m":0,"s":{"r":"Mu","p":["*%_"]},"n":"reset-backtrace"},{"k":"m","m":0,"n":"is-compile-time","s":{"r":"Bool","p":["*%_"]}},{"k":"m","m":0,"s":{"r":"Mu","p":["$bt?","*%_"]},"n":"throw"},{"n":"fail","s":{"r":"Mu","p":["*%_"]},"m":0,"k":"m"},{"m":1,"k":"m","s":{"r":"Mu","p":["*%_"]},"n":"Str"},{"m":1,"k":"m","n":"Str","s":{"p":["*%_"],"r":"Mu"}},{"k":"m","m":1,"n":"Str","s":{"r":"Mu","p":["*%_"]}},{"n":"die","s":{"p":["*%_"],"r":"Mu"},"m":0,"k":"m"},{"n":"rethrow","s":{"p":["*%_"],"r":"Mu"},"k":"m","m":0},{"m":0,"k":"m","s":{"p":["*%_"],"r":"Mu"},"n":"backtrace"},{"m":1,"k":"m","n":"gist","s":{"p":["*%_"],"r":"Mu"}},{"k":"m","m":1,"n":"gist","s":{"r":"Mu","p":["*%_"]}},{"s":{"p":["*%_"],"r":"Mu"},"n":"gist","k":"m","m":1},{"m":0,"k":"m","s":{"r":"Mu","p":["*%_"]},"n":"vault-backtrace"},{"n":"BUILDALL","s":{"p":["@auto","%init","*%_"],"r":"Mu"},"k":"s","m":0}],"k":"c","t":"X::Signature::Placeholder","n":"X::Signature::Placeholder"},{"n":"X::Encoding","t":"X::Encoding","b":"C","k":"ro"},{"t":"X::Encoding::Unknown","n":"X::Encoding::Unknown","k":"c","m":[{"n":"message","s":{"p":["*%_"],"r":"Mu"},"m":0,"k":"m"},{"k":"m","m":0,"n":"name","s":{"p":["*%_"],"r":"Mu"}},{"m":0,"k":"s","n":"BUILDALL","s":{"p":["@auto","%init","*%_"],"r":"Mu"}},{"m":0,"k":"m","s":{"r":"Bool","p":["*%_"]},"n":"resume"},{"m":0,"k":"m","s":{"r":"Mu","p":["*%_"]},"n":"reset-backtrace"},{"n":"is-compile-time","s":{"r":"Bool","p":["*%_"]},"m":0,"k":"m"},{"n":"throw","s":{"r":"Mu","p":["$bt?","*%_"]},"k":"m","m":0},{"k":"m","m":0,"s":{"p":["*%_"],"r":"Mu"},"n":"fail"},{"n":"Str","s":{"p":["*%_"],"r":"Mu"},"k":"m","m":1},{"n":"Str","s":{"r":"Mu","p":["*%_"]},"m":1,"k":"m"},{"s":{"p":["*%_"],"r":"Mu"},"n":"Str","m":1,"k":"m"},{"m":0,"k":"m","s":{"p":["*%_"],"r":"Mu"},"n":"die"},{"n":"rethrow","s":{"p":["*%_"],"r":"Mu"},"m":0,"k":"m"},{"m":0,"k":"m","n":"backtrace","s":{"r":"Mu","p":["*%_"]}},{"s":{"p":["*%_"],"r":"Mu"},"n":"gist","k":"m","m":1},{"s":{"r":"Mu","p":["*%_"]},"n":"gist","k":"m","m":1},{"s":{"p":["*%_"],"r":"Mu"},"n":"gist","k":"m","m":1},{"k":"m","m":0,"n":"vault-backtrace","s":{"r":"Mu","p":["*%_"]}},{"n":"BUILDALL","s":{"p":["@auto","%init","*%_"],"r":"Mu"},"k":"s","m":0}],"b":"A","a":[{"k":"v","t":"Mu","n":"$.name"},{"k":"v","t":"Mu","n":"$!ex"},{"k":"v","t":"Mu","n":"$!bt"}]},{"t":"X::Encoding::AlreadyRegistered","n":"X::Encoding::AlreadyRegistered","m":[{"m":0,"k":"m","s":{"p":["*%_"],"r":"Mu"},"n":"message"},{"k":"m","m":0,"s":{"p":["*%_"],"r":"Mu"},"n":"name"},{"s":{"p":["@auto","%init","*%_"],"r":"Mu"},"n":"BUILDALL","k":"s","m":0},{"s":{"r":"Bool","p":["*%_"]},"n":"resume","m":0,"k":"m"},{"k":"m","m":0,"n":"reset-backtrace","s":{"r":"Mu","p":["*%_"]}},{"k":"m","m":0,"s":{"r":"Bool","p":["*%_"]},"n":"is-compile-time"},{"k":"m","m":0,"n":"throw","s":{"r":"Mu","p":["$bt?","*%_"]}},{"k":"m","m":0,"n":"fail","s":{"p":["*%_"],"r":"Mu"}},{"s":{"p":["*%_"],"r":"Mu"},"n":"Str","m":1,"k":"m"},{"k":"m","m":1,"s":{"p":["*%_"],"r":"Mu"},"n":"Str"},{"k":"m","m":1,"s":{"p":["*%_"],"r":"Mu"},"n":"Str"},{"s":{"p":["*%_"],"r":"Mu"},"n":"die","m":0,"k":"m"},{"k":"m","m":0,"s":{"r":"Mu","p":["*%_"]},"n":"rethrow"},{"k":"m","m":0,"s":{"p":["*%_"],"r":"Mu"},"n":"backtrace"},{"k":"m","m":1,"n":"gist","s":{"r":"Mu","p":["*%_"]}},{"n":"gist","s":{"r":"Mu","p":["*%_"]},"m":1,"k":"m"},{"k":"m","m":1,"n":"gist","s":{"p":["*%_"],"r":"Mu"}},{"n":"vault-backtrace","s":{"r":"Mu","p":["*%_"]},"m":0,"k":"m"},{"n":"BUILDALL","s":{"p":["@auto","%init","*%_"],"r":"Mu"},"k":"s","m":0}],"k":"c","b":"A","a":[{"n":"$.name","t":"Mu","k":"v"},{"k":"v","n":"$!ex","t":"Mu"},{"k":"v","n":"$!bt","t":"Mu"}]},{"m":[{"m":0,"k":"m","n":"message","s":{"p":["*%_"],"r":"Mu"}},{"k":"s","m":0,"n":"BUILDALL","s":{"p":["@auto","%init","*%_"],"r":"Mu"}},{"m":0,"k":"m","s":{"r":"Bool","p":["*%_"]},"n":"resume"},{"m":0,"k":"m","n":"reset-backtrace","s":{"r":"Mu","p":["*%_"]}},{"n":"is-compile-time","s":{"r":"Bool","p":["*%_"]},"m":0,"k":"m"},{"m":0,"k":"m","s":{"p":["$bt?","*%_"],"r":"Mu"},"n":"throw"},{"n":"fail","s":{"p":["*%_"],"r":"Mu"},"m":0,"k":"m"},{"n":"Str","s":{"r":"Mu","p":["*%_"]},"m":1,"k":"m"},{"s":{"r":"Mu","p":["*%_"]},"n":"Str","k":"m","m":1},{"n":"Str","s":{"p":["*%_"],"r":"Mu"},"m":1,"k":"m"},{"k":"m","m":0,"n":"die","s":{"p":["*%_"],"r":"Mu"}},{"n":"rethrow","s":{"r":"Mu","p":["*%_"]},"k":"m","m":0},{"n":"backtrace","s":{"r":"Mu","p":["*%_"]},"k":"m","m":0},{"m":1,"k":"m","s":{"r":"Mu","p":["*%_"]},"n":"gist"},{"m":1,"k":"m","s":{"p":["*%_"],"r":"Mu"},"n":"gist"},{"k":"m","m":1,"s":{"p":["*%_"],"r":"Mu"},"n":"gist"},{"m":0,"k":"m","s":{"p":["*%_"],"r":"Mu"},"n":"vault-backtrace"},{"n":"BUILDALL","s":{"p":["@auto","%init","*%_"],"r":"Mu"},"k":"s","m":0}],"k":"c","b":"A","a":[{"k":"v","t":"Mu","n":"$!ex"},{"k":"v","t":"Mu","n":"$!bt"}],"n":"X::Routine::Unwrap","t":"X::Routine::Unwrap"},{"t":"X::Proc::Unsuccessful","n":"X::Proc::Unsuccessful","d":"TITLE\nclass X::Proc::Unsuccessful\n\nSUBTITLE\nException thrown if a Proc object is sunk after the process it ran exited\nunsuccessfully\n\n    class X::Proc::Unsuccessful is Exception {}\n\n","a":[{"n":"$.proc","t":"Mu","k":"v"},{"k":"v","t":"Mu","n":"$!ex"},{"t":"Mu","n":"$!bt","k":"v"}],"b":"A","k":"c","m":[{"s":{"r":"Mu","p":["*%_"]},"n":"message","m":0,"k":"m"},{"m":0,"k":"m","s":{"p":["*%_"],"r":"Mu"},"n":"proc"},{"k":"s","m":0,"n":"BUILDALL","s":{"p":["@auto","%init","*%_"],"r":"Mu"}},{"k":"m","m":0,"s":{"r":"Bool","p":["*%_"]},"n":"resume"},{"n":"reset-backtrace","s":{"r":"Mu","p":["*%_"]},"m":0,"k":"m"},{"n":"is-compile-time","s":{"r":"Bool","p":["*%_"]},"k":"m","m":0},{"m":0,"k":"m","n":"throw","s":{"r":"Mu","p":["$bt?","*%_"]}},{"k":"m","m":0,"n":"fail","s":{"r":"Mu","p":["*%_"]}},{"k":"m","m":1,"n":"Str","s":{"r":"Mu","p":["*%_"]}},{"n":"Str","s":{"p":["*%_"],"r":"Mu"},"m":1,"k":"m"},{"k":"m","m":1,"n":"Str","s":{"p":["*%_"],"r":"Mu"}},{"n":"die","s":{"r":"Mu","p":["*%_"]},"k":"m","m":0},{"n":"rethrow","s":{"r":"Mu","p":["*%_"]},"k":"m","m":0},{"s":{"r":"Mu","p":["*%_"]},"n":"backtrace","m":0,"k":"m"},{"k":"m","m":1,"s":{"p":["*%_"],"r":"Mu"},"n":"gist"},{"s":{"r":"Mu","p":["*%_"]},"n":"gist","k":"m","m":1},{"k":"m","m":1,"s":{"r":"Mu","p":["*%_"]},"n":"gist"},{"s":{"r":"Mu","p":["*%_"]},"n":"vault-backtrace","m":0,"k":"m"},{"m":0,"k":"s","s":{"p":["@auto","%init","*%_"],"r":"Mu"},"n":"BUILDALL"}]},{"b":"C","a":[{"k":"v","t":"Proc::Async","n":"$.proc"}],"k":"ro","d":"TITLE\nrole X::Proc::Async\n\nSUBTITLE\nException thrown by Proc::Async\n\n    role X::Proc::Async is Exception { ... }\n\nAll exceptions thrown by Proc::Async do this common role.\n\n","n":"X::Proc::Async","t":"X::Proc::Async"},{"t":"X::Proc::Async::MustBeStarted","n":"X::Proc::Async::MustBeStarted","d":"TITLE\nclass X::Proc::Async::MustBeStarted\n\nSUBTITLE\nError due to interacting with a Proc::Async stream before spawning its\nprocess\n\n    class X::Proc::Async::MustBeStarted is Exception {}\n\nSeveral methods from Proc::Async expect that the external program has been\nspawned (by calling .start on it), including say, write, print and\nclose-stdin. If one of those methods is called before .start was called,\nthey throw an exception of type X::Proc::Async::MustBeStarted.\n\n    Proc::Async.new('echo', :w).say(42);\n    CATCH { default { put .^name, ': ', .Str } };\n    # OUTPUT: «X::Proc::Async::MustBeStarted: Process must be started first before calling 'say'␤»\n\n","a":[{"t":"Mu","n":"$.method","k":"v"},{"n":"$.proc","t":"Proc::Async","k":"v"},{"n":"$!ex","t":"Mu","k":"v"},{"n":"$!bt","t":"Mu","k":"v"}],"b":"A","k":"c","m":[{"m":0,"k":"m","n":"message","s":{"p":["*%_"],"r":"Mu"}},{"n":"method","s":{"r":"Mu","p":["*%_"]},"k":"m","m":0},{"s":{"r":"Mu","p":["*%_"]},"n":"proc","k":"m","m":0},{"s":{"p":["@auto","%init","*%_"],"r":"Mu"},"n":"BUILDALL","m":0,"k":"s"},{"s":{"r":"Bool","p":["*%_"]},"n":"resume","m":0,"k":"m"},{"k":"m","m":0,"n":"reset-backtrace","s":{"p":["*%_"],"r":"Mu"}},{"k":"m","m":0,"s":{"p":["*%_"],"r":"Bool"},"n":"is-compile-time"},{"k":"m","m":0,"n":"throw","s":{"p":["$bt?","*%_"],"r":"Mu"}},{"m":0,"k":"m","n":"fail","s":{"r":"Mu","p":["*%_"]}},{"k":"m","m":1,"n":"Str","s":{"r":"Mu","p":["*%_"]}},{"k":"m","m":1,"s":{"p":["*%_"],"r":"Mu"},"n":"Str"},{"k":"m","m":1,"s":{"p":["*%_"],"r":"Mu"},"n":"Str"},{"n":"die","s":{"p":["*%_"],"r":"Mu"},"k":"m","m":0},{"n":"rethrow","s":{"r":"Mu","p":["*%_"]},"m":0,"k":"m"},{"s":{"p":["*%_"],"r":"Mu"},"n":"backtrace","m":0,"k":"m"},{"k":"m","m":1,"s":{"p":["*%_"],"r":"Mu"},"n":"gist"},{"k":"m","m":1,"s":{"r":"Mu","p":["*%_"]},"n":"gist"},{"k":"m","m":1,"s":{"p":["*%_"],"r":"Mu"},"n":"gist"},{"n":"vault-backtrace","s":{"p":["*%_"],"r":"Mu"},"m":0,"k":"m"},{"m":0,"k":"s","s":{"r":"Mu","p":["@auto","%init","*%_"]},"n":"BUILDALL"}]},{"n":"X::Proc::Async::TapBeforeSpawn","t":"X::Proc::Async::TapBeforeSpawn","k":"c","m":[{"s":{"r":"Mu","p":["*%_"]},"n":"message","m":0,"k":"m"},{"k":"m","m":0,"s":{"p":["*%_"],"r":"Mu"},"n":"handle"},{"n":"proc","s":{"p":["*%_"],"r":"Mu"},"m":0,"k":"m"},{"k":"s","m":0,"s":{"p":["@auto","%init","*%_"],"r":"Mu"},"n":"BUILDALL"},{"k":"m","m":0,"s":{"p":["*%_"],"r":"Bool"},"n":"resume"},{"m":0,"k":"m","s":{"r":"Mu","p":["*%_"]},"n":"reset-backtrace"},{"n":"is-compile-time","s":{"p":["*%_"],"r":"Bool"},"m":0,"k":"m"},{"s":{"p":["$bt?","*%_"],"r":"Mu"},"n":"throw","k":"m","m":0},{"n":"fail","s":{"p":["*%_"],"r":"Mu"},"m":0,"k":"m"},{"n":"Str","s":{"p":["*%_"],"r":"Mu"},"m":1,"k":"m"},{"s":{"p":["*%_"],"r":"Mu"},"n":"Str","m":1,"k":"m"},{"k":"m","m":1,"s":{"r":"Mu","p":["*%_"]},"n":"Str"},{"m":0,"k":"m","s":{"r":"Mu","p":["*%_"]},"n":"die"},{"s":{"r":"Mu","p":["*%_"]},"n":"rethrow","m":0,"k":"m"},{"s":{"p":["*%_"],"r":"Mu"},"n":"backtrace","m":0,"k":"m"},{"m":1,"k":"m","n":"gist","s":{"p":["*%_"],"r":"Mu"}},{"k":"m","m":1,"n":"gist","s":{"r":"Mu","p":["*%_"]}},{"m":1,"k":"m","n":"gist","s":{"p":["*%_"],"r":"Mu"}},{"s":{"p":["*%_"],"r":"Mu"},"n":"vault-backtrace","k":"m","m":0},{"s":{"r":"Mu","p":["@auto","%init","*%_"]},"n":"BUILDALL","m":0,"k":"s"}],"b":"A","a":[{"k":"v","n":"$.handle","t":"Mu"},{"k":"v","t":"Proc::Async","n":"$.proc"},{"k":"v","n":"$!ex","t":"Mu"},{"k":"v","n":"$!bt","t":"Mu"}],"d":"TITLE\nclass X::Proc::Async::TapBeforeSpawn\n\nSUBTITLE\nError due to tapping a Proc::Async stream after spawning its process\n\n    class X::Proc::Async::TapBeforeSpawn is Exception {}\n\nIf the stdout or stderr methods of Proc::Async are called after the program\nhas been started, an exception of type X::Proc::Async::TapBeforeSpawn is\nthrown.\n\n    my $proc = Proc::Async.new(\"echo\", \"foo\");\n    $proc.start;\n    $proc.stdout.tap(&print);\n    CATCH { default { put .^name, ': ', .Str } };\n    # OUTPUT: «X::Proc::Async::TapBeforeSpawn: To avoid data races, you must tap stdout before running the process␤»\n\nThe right way is the reverse order\n\n    my $proc = Proc::Async.new(\"echo\", \"foo\");\n    $proc.stdout.tap(&print);\n    await $proc.start;\n\n"},{"n":"X::Proc::Async::CharsOrBytes","t":"X::Proc::Async::CharsOrBytes","a":[{"t":"Mu","n":"$.handle","k":"v"},{"n":"$.proc","t":"Proc::Async","k":"v"},{"n":"$!ex","t":"Mu","k":"v"},{"k":"v","t":"Mu","n":"$!bt"}],"b":"A","m":[{"n":"message","s":{"r":"Mu","p":["*%_"]},"m":0,"k":"m"},{"s":{"r":"Mu","p":["*%_"]},"n":"handle","k":"m","m":0},{"m":0,"k":"m","n":"proc","s":{"r":"Mu","p":["*%_"]}},{"k":"s","m":0,"n":"BUILDALL","s":{"r":"Mu","p":["@auto","%init","*%_"]}},{"s":{"r":"Bool","p":["*%_"]},"n":"resume","k":"m","m":0},{"m":0,"k":"m","n":"reset-backtrace","s":{"r":"Mu","p":["*%_"]}},{"k":"m","m":0,"s":{"r":"Bool","p":["*%_"]},"n":"is-compile-time"},{"k":"m","m":0,"n":"throw","s":{"p":["$bt?","*%_"],"r":"Mu"}},{"s":{"r":"Mu","p":["*%_"]},"n":"fail","m":0,"k":"m"},{"n":"Str","s":{"r":"Mu","p":["*%_"]},"m":1,"k":"m"},{"n":"Str","s":{"p":["*%_"],"r":"Mu"},"m":1,"k":"m"},{"s":{"r":"Mu","p":["*%_"]},"n":"Str","k":"m","m":1},{"s":{"r":"Mu","p":["*%_"]},"n":"die","k":"m","m":0},{"n":"rethrow","s":{"r":"Mu","p":["*%_"]},"m":0,"k":"m"},{"n":"backtrace","s":{"p":["*%_"],"r":"Mu"},"k":"m","m":0},{"m":1,"k":"m","s":{"r":"Mu","p":["*%_"]},"n":"gist"},{"n":"gist","s":{"r":"Mu","p":["*%_"]},"m":1,"k":"m"},{"n":"gist","s":{"r":"Mu","p":["*%_"]},"k":"m","m":1},{"k":"m","m":0,"n":"vault-backtrace","s":{"p":["*%_"],"r":"Mu"}},{"n":"BUILDALL","s":{"r":"Mu","p":["@auto","%init","*%_"]},"k":"s","m":0}],"k":"c","d":"TITLE\nclass X::Proc::Async::CharsOrBytes\n\nSUBTITLE\nError due to tapping the same Proc::Async stream for both text and binary\nreading\n\n    class X::Proc::Async::CharsOrBytes is Exception {}\n\nA Proc::Async object allows subscription to the output or error stream\neither for bytes (Blob) or for text data (Str), but not for both. If you do\ntry both, it throws an exception of type X::Proc::Async::CharsOrBytes.\n\n    my $proc = Proc::Async.new('echo');\n    $proc.stdout.tap(&print);\n    $proc.stdout(:bin).tap(&print);\n    CATCH { default { put .^name, ': ', .Str } };\n    # OUTPUT: «X::Proc::Async::CharsOrBytes: Can only tap one of chars or bytes supply for stdout␤»\n\n"},{"a":[{"k":"v","n":"$.method","t":"Mu"},{"k":"v","t":"Proc::Async","n":"$.proc"},{"t":"Mu","n":"$!ex","k":"v"},{"t":"Mu","n":"$!bt","k":"v"}],"b":"A","m":[{"k":"m","m":0,"s":{"p":["*%_"],"r":"Mu"},"n":"message"},{"n":"method","s":{"p":["*%_"],"r":"Mu"},"m":0,"k":"m"},{"k":"m","m":0,"n":"proc","s":{"p":["*%_"],"r":"Mu"}},{"k":"s","m":0,"n":"BUILDALL","s":{"p":["@auto","%init","*%_"],"r":"Mu"}},{"n":"resume","s":{"p":["*%_"],"r":"Bool"},"k":"m","m":0},{"n":"reset-backtrace","s":{"r":"Mu","p":["*%_"]},"m":0,"k":"m"},{"s":{"p":["*%_"],"r":"Bool"},"n":"is-compile-time","m":0,"k":"m"},{"m":0,"k":"m","s":{"p":["$bt?","*%_"],"r":"Mu"},"n":"throw"},{"n":"fail","s":{"p":["*%_"],"r":"Mu"},"m":0,"k":"m"},{"k":"m","m":1,"n":"Str","s":{"r":"Mu","p":["*%_"]}},{"s":{"p":["*%_"],"r":"Mu"},"n":"Str","m":1,"k":"m"},{"k":"m","m":1,"s":{"r":"Mu","p":["*%_"]},"n":"Str"},{"k":"m","m":0,"s":{"p":["*%_"],"r":"Mu"},"n":"die"},{"n":"rethrow","s":{"p":["*%_"],"r":"Mu"},"k":"m","m":0},{"k":"m","m":0,"s":{"p":["*%_"],"r":"Mu"},"n":"backtrace"},{"m":1,"k":"m","n":"gist","s":{"p":["*%_"],"r":"Mu"}},{"m":1,"k":"m","n":"gist","s":{"p":["*%_"],"r":"Mu"}},{"s":{"r":"Mu","p":["*%_"]},"n":"gist","m":1,"k":"m"},{"s":{"p":["*%_"],"r":"Mu"},"n":"vault-backtrace","k":"m","m":0},{"k":"s","m":0,"s":{"r":"Mu","p":["@auto","%init","*%_"]},"n":"BUILDALL"}],"k":"c","d":"TITLE\nclass X::Proc::Async::OpenForWriting\n\nSUBTITLE\nError due to writing to a read-only Proc::Async object\n\n    class X::Proc::Async::OpenForWriting is Exception {}\n\nWhen a Proc::Async object is opened only for reading from the external\nprogram (no :w passed to open), and a write operation such as write, print\nand say is performed, an exception of type X::Proc::Async::OpenForWriting\nis thrown:\n\n    my $proc = Proc::Async.new(\"echo\");\n    $proc.start;\n    $proc.say(42);\n    CATCH { default { put .^name, ': ', .Str } };\n    # OUTPUT: «X::Proc::Async::OpenForWriting: Process must be opened for writing with :w to call 'say'␤»\n\nTo fix that you can use writable commands with :w flag:\n\n    my $prog = Proc::Async.new(:w, 'cat');\n    $prog.stdout.tap( -> $str {\n        print $str;\n    });\n    my $promise = $prog.start;\n    await $prog.say('foo');\n    $prog.close-stdin;\n    await $promise;\n\n","n":"X::Proc::Async::OpenForWriting","t":"X::Proc::Async::OpenForWriting"},{"m":[{"n":"message","s":{"p":["*%_"],"r":"Mu"},"m":0,"k":"m"},{"s":{"r":"Mu","p":["*%_"]},"n":"handle","m":0,"k":"m"},{"s":{"p":["*%_"],"r":"Mu"},"n":"use","k":"m","m":0},{"k":"m","m":0,"s":{"p":["*%_"],"r":"Mu"},"n":"proc"},{"n":"BUILDALL","s":{"p":["@auto","%init","*%_"],"r":"Mu"},"m":0,"k":"s"},{"m":0,"k":"m","s":{"p":["*%_"],"r":"Bool"},"n":"resume"},{"m":0,"k":"m","n":"reset-backtrace","s":{"p":["*%_"],"r":"Mu"}},{"s":{"r":"Bool","p":["*%_"]},"n":"is-compile-time","k":"m","m":0},{"n":"throw","s":{"p":["$bt?","*%_"],"r":"Mu"},"k":"m","m":0},{"m":0,"k":"m","s":{"p":["*%_"],"r":"Mu"},"n":"fail"},{"n":"Str","s":{"p":["*%_"],"r":"Mu"},"k":"m","m":1},{"m":1,"k":"m","n":"Str","s":{"p":["*%_"],"r":"Mu"}},{"s":{"p":["*%_"],"r":"Mu"},"n":"Str","m":1,"k":"m"},{"s":{"r":"Mu","p":["*%_"]},"n":"die","k":"m","m":0},{"m":0,"k":"m","n":"rethrow","s":{"r":"Mu","p":["*%_"]}},{"s":{"p":["*%_"],"r":"Mu"},"n":"backtrace","m":0,"k":"m"},{"m":1,"k":"m","n":"gist","s":{"p":["*%_"],"r":"Mu"}},{"k":"m","m":1,"s":{"r":"Mu","p":["*%_"]},"n":"gist"},{"s":{"r":"Mu","p":["*%_"]},"n":"gist","k":"m","m":1},{"m":0,"k":"m","n":"vault-backtrace","s":{"r":"Mu","p":["*%_"]}},{"s":{"r":"Mu","p":["@auto","%init","*%_"]},"n":"BUILDALL","k":"s","m":0}],"k":"c","a":[{"k":"v","n":"$.handle","t":"Mu"},{"k":"v","t":"Mu","n":"$.use"},{"k":"v","t":"Proc::Async","n":"$.proc"},{"k":"v","t":"Mu","n":"$!ex"},{"k":"v","t":"Mu","n":"$!bt"}],"b":"A","d":"TITLE\nclass X::Proc::Async::BindOrUse\n\nSUBTITLE\nError due to trying to bind a handle that is also used\n\n        class X::Proc::Async::BindOrUse does X::Proc::Async {}\n\n\nIn general, it occurs when there's some mistake in the direction the stream\nflows, for instance:\n\n    my $p = Proc::Async.new(\"ls\", :w);\n    my $h = \"ls.out\".IO.open(:w);\n    $p.bind-stdin($h);\n    # Fails with OUTPUT: «Cannot both bind stdin to a handle and also use :w␤»\n\n\nIn this case, stdin is already bound and cannot be used again; one of them\nshould flow :out and the other one :w to work correctly.","n":"X::Proc::Async::BindOrUse","t":"X::Proc::Async::BindOrUse"},{"t":"X::Proc::Async::AlreadyStarted","n":"X::Proc::Async::AlreadyStarted","d":"TITLE\nclass X::Proc::Async::AlreadyStarted\n\nSUBTITLE\nError due to calling start on an already started Proc::Async object\n\n    class X::Proc::Async::AlreadyStarted is Exception {}\n\nWhen you call start twice on the same Proc::Async object, the second\ninvocation will die with an X::Proc::Async::AlreadyStarted exception.\n\n    my $proc = Proc::Async.new(\"echo\");\n    $proc.start;\n    $proc.start;\n    CATCH { default { put .^name, ': ', .Str } };\n    # OUTPUT: «X::Proc::Async::AlreadyStarted: Process has already been started␤»","b":"A","a":[{"k":"v","n":"$.proc","t":"Proc::Async"},{"n":"$!ex","t":"Mu","k":"v"},{"n":"$!bt","t":"Mu","k":"v"}],"k":"c","m":[{"s":{"r":"Mu","p":["*%_"]},"n":"message","m":0,"k":"m"},{"k":"m","m":0,"n":"proc","s":{"p":["*%_"],"r":"Mu"}},{"s":{"r":"Mu","p":["@auto","%init","*%_"]},"n":"BUILDALL","m":0,"k":"s"},{"n":"resume","s":{"p":["*%_"],"r":"Bool"},"m":0,"k":"m"},{"k":"m","m":0,"n":"reset-backtrace","s":{"r":"Mu","p":["*%_"]}},{"n":"is-compile-time","s":{"r":"Bool","p":["*%_"]},"k":"m","m":0},{"s":{"r":"Mu","p":["$bt?","*%_"]},"n":"throw","k":"m","m":0},{"m":0,"k":"m","n":"fail","s":{"p":["*%_"],"r":"Mu"}},{"s":{"p":["*%_"],"r":"Mu"},"n":"Str","m":1,"k":"m"},{"m":1,"k":"m","s":{"p":["*%_"],"r":"Mu"},"n":"Str"},{"n":"Str","s":{"p":["*%_"],"r":"Mu"},"k":"m","m":1},{"n":"die","s":{"r":"Mu","p":["*%_"]},"k":"m","m":0},{"n":"rethrow","s":{"p":["*%_"],"r":"Mu"},"m":0,"k":"m"},{"m":0,"k":"m","n":"backtrace","s":{"r":"Mu","p":["*%_"]}},{"s":{"p":["*%_"],"r":"Mu"},"n":"gist","k":"m","m":1},{"s":{"r":"Mu","p":["*%_"]},"n":"gist","k":"m","m":1},{"s":{"p":["*%_"],"r":"Mu"},"n":"gist","m":1,"k":"m"},{"n":"vault-backtrace","s":{"p":["*%_"],"r":"Mu"},"m":0,"k":"m"},{"k":"s","m":0,"n":"BUILDALL","s":{"r":"Mu","p":["@auto","%init","*%_"]}}]},{"n":"X::Proc::Async::SupplyOrStd","t":"X::Proc::Async::SupplyOrStd","k":"c","m":[{"s":{"r":"Mu","p":["*%_"]},"n":"message","k":"m","m":0},{"n":"proc","s":{"p":["*%_"],"r":"Mu"},"k":"m","m":0},{"s":{"r":"Mu","p":["@auto","%init","*%_"]},"n":"BUILDALL","m":0,"k":"s"},{"n":"resume","s":{"p":["*%_"],"r":"Bool"},"m":0,"k":"m"},{"k":"m","m":0,"n":"reset-backtrace","s":{"p":["*%_"],"r":"Mu"}},{"k":"m","m":0,"n":"is-compile-time","s":{"r":"Bool","p":["*%_"]}},{"m":0,"k":"m","s":{"r":"Mu","p":["$bt?","*%_"]},"n":"throw"},{"s":{"p":["*%_"],"r":"Mu"},"n":"fail","m":0,"k":"m"},{"n":"Str","s":{"r":"Mu","p":["*%_"]},"m":1,"k":"m"},{"k":"m","m":1,"s":{"r":"Mu","p":["*%_"]},"n":"Str"},{"n":"Str","s":{"r":"Mu","p":["*%_"]},"m":1,"k":"m"},{"n":"die","s":{"r":"Mu","p":["*%_"]},"k":"m","m":0},{"m":0,"k":"m","n":"rethrow","s":{"r":"Mu","p":["*%_"]}},{"n":"backtrace","s":{"r":"Mu","p":["*%_"]},"k":"m","m":0},{"n":"gist","s":{"r":"Mu","p":["*%_"]},"k":"m","m":1},{"s":{"r":"Mu","p":["*%_"]},"n":"gist","m":1,"k":"m"},{"s":{"p":["*%_"],"r":"Mu"},"n":"gist","m":1,"k":"m"},{"m":0,"k":"m","s":{"p":["*%_"],"r":"Mu"},"n":"vault-backtrace"},{"n":"BUILDALL","s":{"p":["@auto","%init","*%_"],"r":"Mu"},"k":"s","m":0}],"a":[{"k":"v","n":"$.proc","t":"Proc::Async"},{"k":"v","n":"$!ex","t":"Mu"},{"t":"Mu","n":"$!bt","k":"v"}],"b":"A"},{"k":"c","m":[{"m":0,"k":"m","s":{"p":["*%_"],"r":"Mu"},"n":"message"},{"s":{"p":["*%_"],"r":"Mu"},"n":"operator","m":0,"k":"m"},{"k":"m","m":0,"n":"left-elems","s":{"r":"Mu","p":["*%_"]}},{"m":0,"k":"m","s":{"r":"Mu","p":["*%_"]},"n":"right-elems"},{"n":"recursing","s":{"p":["*%_"],"r":"Mu"},"k":"m","m":0},{"m":0,"k":"s","s":{"r":"Mu","p":["@auto","%init","*%_"]},"n":"BUILDALL"},{"s":{"p":["*%_"],"r":"Bool"},"n":"resume","k":"m","m":0},{"k":"m","m":0,"n":"reset-backtrace","s":{"r":"Mu","p":["*%_"]}},{"n":"is-compile-time","s":{"p":["*%_"],"r":"Bool"},"m":0,"k":"m"},{"s":{"p":["$bt?","*%_"],"r":"Mu"},"n":"throw","k":"m","m":0},{"s":{"p":["*%_"],"r":"Mu"},"n":"fail","m":0,"k":"m"},{"k":"m","m":1,"n":"Str","s":{"r":"Mu","p":["*%_"]}},{"s":{"r":"Mu","p":["*%_"]},"n":"Str","k":"m","m":1},{"n":"Str","s":{"r":"Mu","p":["*%_"]},"k":"m","m":1},{"m":0,"k":"m","n":"die","s":{"p":["*%_"],"r":"Mu"}},{"k":"m","m":0,"n":"rethrow","s":{"p":["*%_"],"r":"Mu"}},{"k":"m","m":0,"s":{"r":"Mu","p":["*%_"]},"n":"backtrace"},{"n":"gist","s":{"r":"Mu","p":["*%_"]},"m":1,"k":"m"},{"k":"m","m":1,"s":{"r":"Mu","p":["*%_"]},"n":"gist"},{"k":"m","m":1,"n":"gist","s":{"p":["*%_"],"r":"Mu"}},{"k":"m","m":0,"s":{"p":["*%_"],"r":"Mu"},"n":"vault-backtrace"},{"k":"s","m":0,"s":{"r":"Mu","p":["@auto","%init","*%_"]},"n":"BUILDALL"}],"b":"A","a":[{"k":"v","t":"Callable","n":"&.operator"},{"k":"v","n":"$.left-elems","t":"Mu"},{"t":"Mu","n":"$.right-elems","k":"v"},{"t":"Mu","n":"$.recursing","k":"v"},{"k":"v","n":"$!ex","t":"Mu"},{"t":"Mu","n":"$!bt","k":"v"}],"n":"X::HyperOp::NonDWIM","t":"X::HyperOp::NonDWIM"},{"b":"A","a":[{"n":"&.operator","t":"Callable","k":"v"},{"n":"$.side","t":"Mu","k":"v"},{"k":"v","t":"Mu","n":"$!ex"},{"n":"$!bt","t":"Mu","k":"v"}],"k":"c","m":[{"s":{"r":"Mu","p":["*%_"]},"n":"message","k":"m","m":0},{"s":{"p":["*%_"],"r":"Mu"},"n":"operator","k":"m","m":0},{"n":"side","s":{"p":["*%_"],"r":"Mu"},"k":"m","m":0},{"k":"s","m":0,"n":"BUILDALL","s":{"p":["@auto","%init","*%_"],"r":"Mu"}},{"k":"m","m":0,"s":{"p":["*%_"],"r":"Bool"},"n":"resume"},{"s":{"p":["*%_"],"r":"Mu"},"n":"reset-backtrace","m":0,"k":"m"},{"m":0,"k":"m","s":{"p":["*%_"],"r":"Bool"},"n":"is-compile-time"},{"k":"m","m":0,"s":{"p":["$bt?","*%_"],"r":"Mu"},"n":"throw"},{"s":{"r":"Mu","p":["*%_"]},"n":"fail","k":"m","m":0},{"k":"m","m":1,"s":{"p":["*%_"],"r":"Mu"},"n":"Str"},{"n":"Str","s":{"r":"Mu","p":["*%_"]},"m":1,"k":"m"},{"m":1,"k":"m","s":{"r":"Mu","p":["*%_"]},"n":"Str"},{"k":"m","m":0,"n":"die","s":{"p":["*%_"],"r":"Mu"}},{"k":"m","m":0,"n":"rethrow","s":{"p":["*%_"],"r":"Mu"}},{"k":"m","m":0,"n":"backtrace","s":{"p":["*%_"],"r":"Mu"}},{"s":{"p":["*%_"],"r":"Mu"},"n":"gist","k":"m","m":1},{"n":"gist","s":{"r":"Mu","p":["*%_"]},"m":1,"k":"m"},{"s":{"r":"Mu","p":["*%_"]},"n":"gist","k":"m","m":1},{"k":"m","m":0,"n":"vault-backtrace","s":{"p":["*%_"],"r":"Mu"}},{"m":0,"k":"s","n":"BUILDALL","s":{"r":"Mu","p":["@auto","%init","*%_"]}}],"n":"X::HyperOp::Infinite","t":"X::HyperOp::Infinite"},{"m":[{"k":"m","m":0,"s":{"p":["*%_"],"r":"Mu"},"n":"message"},{"s":{"p":["*%_"],"r":"Mu"},"n":"aggregate","k":"m","m":0},{"s":{"r":"Mu","p":["*%_"]},"n":"index","k":"m","m":0},{"m":0,"k":"s","s":{"p":["@auto","%init","*%_"],"r":"Mu"},"n":"BUILDALL"},{"m":0,"k":"m","s":{"p":["*%_"],"r":"Bool"},"n":"resume"},{"n":"reset-backtrace","s":{"p":["*%_"],"r":"Mu"},"k":"m","m":0},{"n":"is-compile-time","s":{"p":["*%_"],"r":"Bool"},"k":"m","m":0},{"m":0,"k":"m","n":"throw","s":{"p":["$bt?","*%_"],"r":"Mu"}},{"m":0,"k":"m","n":"fail","s":{"r":"Mu","p":["*%_"]}},{"k":"m","m":1,"n":"Str","s":{"r":"Mu","p":["*%_"]}},{"s":{"p":["*%_"],"r":"Mu"},"n":"Str","k":"m","m":1},{"m":1,"k":"m","n":"Str","s":{"r":"Mu","p":["*%_"]}},{"k":"m","m":0,"n":"die","s":{"r":"Mu","p":["*%_"]}},{"s":{"p":["*%_"],"r":"Mu"},"n":"rethrow","k":"m","m":0},{"s":{"r":"Mu","p":["*%_"]},"n":"backtrace","k":"m","m":0},{"s":{"r":"Mu","p":["*%_"]},"n":"gist","m":1,"k":"m"},{"k":"m","m":1,"s":{"p":["*%_"],"r":"Mu"},"n":"gist"},{"m":1,"k":"m","n":"gist","s":{"p":["*%_"],"r":"Mu"}},{"m":0,"k":"m","n":"vault-backtrace","s":{"r":"Mu","p":["*%_"]}},{"k":"s","m":0,"s":{"r":"Mu","p":["@auto","%init","*%_"]},"n":"BUILDALL"}],"k":"c","a":[{"n":"$.aggregate","t":"Mu","k":"v"},{"n":"$.index","t":"Mu","k":"v"},{"n":"$!ex","t":"Mu","k":"v"},{"k":"v","n":"$!bt","t":"Mu"}],"b":"A","n":"X::Item","t":"X::Item"},{"d":"TITLE\nrole X::IO\n\nSUBTITLE\nIO related error\n\n    role X::IO does X::OS {}\n\nCommon role for IO related errors.\n\nThis role does not provide any additional methods.","k":"ro","b":"C","t":"X::IO","n":"X::IO"},{"t":"X::IO::Rename","n":"X::IO::Rename","d":"TITLE\nclass X::IO::Rename\n\nSUBTITLE\nError while trying to rename a file or directory\n\n    class X::IO::Rename does X::IO is Exception { }\n\n\nError class for failed file or directory rename operations. A typical error\nmessage is\n\n    Failed to rename 'source' to 'destination': is a directory\n\n\n","m":[{"k":"m","m":0,"n":"message","s":{"p":["*%_"],"r":"Mu"}},{"s":{"p":["*%_"],"r":"Mu"},"n":"from","k":"m","m":0},{"s":{"p":["*%_"],"r":"Mu"},"n":"to","m":0,"k":"m"},{"s":{"r":"Mu","p":["*%_"]},"n":"os-error","m":0,"k":"m"},{"m":0,"k":"s","n":"BUILDALL","s":{"p":["@auto","%init","*%_"],"r":"Mu"}},{"n":"resume","s":{"r":"Bool","p":["*%_"]},"k":"m","m":0},{"n":"reset-backtrace","s":{"r":"Mu","p":["*%_"]},"k":"m","m":0},{"m":0,"k":"m","s":{"p":["*%_"],"r":"Bool"},"n":"is-compile-time"},{"s":{"r":"Mu","p":["$bt?","*%_"]},"n":"throw","k":"m","m":0},{"n":"fail","s":{"p":["*%_"],"r":"Mu"},"k":"m","m":0},{"m":1,"k":"m","n":"Str","s":{"p":["*%_"],"r":"Mu"}},{"m":1,"k":"m","s":{"r":"Mu","p":["*%_"]},"n":"Str"},{"n":"Str","s":{"r":"Mu","p":["*%_"]},"m":1,"k":"m"},{"s":{"r":"Mu","p":["*%_"]},"n":"die","k":"m","m":0},{"m":0,"k":"m","n":"rethrow","s":{"r":"Mu","p":["*%_"]}},{"s":{"r":"Mu","p":["*%_"]},"n":"backtrace","m":0,"k":"m"},{"s":{"r":"Mu","p":["*%_"]},"n":"gist","m":1,"k":"m"},{"m":1,"k":"m","s":{"r":"Mu","p":["*%_"]},"n":"gist"},{"m":1,"k":"m","n":"gist","s":{"r":"Mu","p":["*%_"]}},{"n":"vault-backtrace","s":{"r":"Mu","p":["*%_"]},"k":"m","m":0},{"k":"s","m":0,"n":"BUILDALL","s":{"r":"Mu","p":["@auto","%init","*%_"]}}],"k":"c","a":[{"k":"v","t":"Mu","n":"$.from"},{"t":"Mu","n":"$.to","k":"v"},{"t":"Mu","n":"$.os-error","k":"v"},{"k":"v","n":"$!ex","t":"Mu"},{"t":"Mu","n":"$!bt","k":"v"}],"b":"A"},{"a":[{"t":"Mu","n":"$.os-error","k":"v"},{"t":"Mu","n":"$!ex","k":"v"},{"k":"v","n":"$!bt","t":"Mu"}],"b":"A","k":"c","m":[{"m":0,"k":"m","n":"message","s":{"r":"Mu","p":["*%_"]}},{"s":{"p":["*%_"],"r":"Mu"},"n":"os-error","k":"m","m":0},{"n":"BUILDALL","s":{"p":["@auto","%init","*%_"],"r":"Mu"},"m":0,"k":"s"},{"s":{"p":["*%_"],"r":"Bool"},"n":"resume","m":0,"k":"m"},{"k":"m","m":0,"n":"reset-backtrace","s":{"p":["*%_"],"r":"Mu"}},{"m":0,"k":"m","n":"is-compile-time","s":{"p":["*%_"],"r":"Bool"}},{"n":"throw","s":{"r":"Mu","p":["$bt?","*%_"]},"k":"m","m":0},{"k":"m","m":0,"s":{"p":["*%_"],"r":"Mu"},"n":"fail"},{"k":"m","m":1,"n":"Str","s":{"r":"Mu","p":["*%_"]}},{"n":"Str","s":{"r":"Mu","p":["*%_"]},"m":1,"k":"m"},{"k":"m","m":1,"s":{"p":["*%_"],"r":"Mu"},"n":"Str"},{"k":"m","m":0,"s":{"r":"Mu","p":["*%_"]},"n":"die"},{"n":"rethrow","s":{"r":"Mu","p":["*%_"]},"m":0,"k":"m"},{"s":{"r":"Mu","p":["*%_"]},"n":"backtrace","k":"m","m":0},{"n":"gist","s":{"r":"Mu","p":["*%_"]},"m":1,"k":"m"},{"n":"gist","s":{"r":"Mu","p":["*%_"]},"k":"m","m":1},{"n":"gist","s":{"r":"Mu","p":["*%_"]},"k":"m","m":1},{"n":"vault-backtrace","s":{"r":"Mu","p":["*%_"]},"k":"m","m":0},{"k":"s","m":0,"n":"BUILDALL","s":{"r":"Mu","p":["@auto","%init","*%_"]}}],"t":"X::IO::BinaryAndEncoding","n":"X::IO::BinaryAndEncoding"},{"t":"X::IO::Lock","n":"X::IO::Lock","k":"c","m":[{"n":"message","s":{"p":["*%_"],"r":"Mu"},"m":0,"k":"m"},{"n":"lock-type","s":{"r":"Mu","p":["*%_"]},"m":0,"k":"m"},{"n":"os-error","s":{"r":"Mu","p":["*%_"]},"k":"m","m":0},{"m":0,"k":"s","s":{"r":"Mu","p":["@auto","%init","*%_"]},"n":"BUILDALL"},{"n":"resume","s":{"p":["*%_"],"r":"Bool"},"m":0,"k":"m"},{"s":{"p":["*%_"],"r":"Mu"},"n":"reset-backtrace","k":"m","m":0},{"n":"is-compile-time","s":{"p":["*%_"],"r":"Bool"},"m":0,"k":"m"},{"m":0,"k":"m","n":"throw","s":{"p":["$bt?","*%_"],"r":"Mu"}},{"k":"m","m":0,"n":"fail","s":{"p":["*%_"],"r":"Mu"}},{"s":{"r":"Mu","p":["*%_"]},"n":"Str","k":"m","m":1},{"k":"m","m":1,"n":"Str","s":{"r":"Mu","p":["*%_"]}},{"m":1,"k":"m","n":"Str","s":{"p":["*%_"],"r":"Mu"}},{"k":"m","m":0,"s":{"p":["*%_"],"r":"Mu"},"n":"die"},{"k":"m","m":0,"n":"rethrow","s":{"r":"Mu","p":["*%_"]}},{"n":"backtrace","s":{"r":"Mu","p":["*%_"]},"m":0,"k":"m"},{"n":"gist","s":{"r":"Mu","p":["*%_"]},"k":"m","m":1},{"k":"m","m":1,"n":"gist","s":{"r":"Mu","p":["*%_"]}},{"n":"gist","s":{"p":["*%_"],"r":"Mu"},"m":1,"k":"m"},{"k":"m","m":0,"s":{"r":"Mu","p":["*%_"]},"n":"vault-backtrace"},{"n":"BUILDALL","s":{"r":"Mu","p":["@auto","%init","*%_"]},"k":"s","m":0}],"a":[{"n":"$.lock-type","t":"Mu","k":"v"},{"k":"v","t":"Mu","n":"$.os-error"},{"k":"v","n":"$!ex","t":"Mu"},{"t":"Mu","n":"$!bt","k":"v"}],"b":"A"},{"a":[{"t":"Mu","n":"$.trying","k":"v"},{"t":"Mu","n":"$.os-error","k":"v"},{"n":"$!ex","t":"Mu","k":"v"},{"k":"v","t":"Mu","n":"$!bt"}],"b":"A","k":"c","m":[{"m":0,"k":"m","n":"message","s":{"p":["*%_"],"r":"Mu"}},{"m":0,"k":"m","s":{"r":"Mu","p":["*%_"]},"n":"trying"},{"m":0,"k":"m","s":{"p":["*%_"],"r":"Mu"},"n":"os-error"},{"k":"s","m":0,"n":"BUILDALL","s":{"p":["@auto","%init","*%_"],"r":"Mu"}},{"k":"m","m":0,"n":"resume","s":{"r":"Bool","p":["*%_"]}},{"n":"reset-backtrace","s":{"p":["*%_"],"r":"Mu"},"m":0,"k":"m"},{"k":"m","m":0,"n":"is-compile-time","s":{"p":["*%_"],"r":"Bool"}},{"k":"m","m":0,"n":"throw","s":{"p":["$bt?","*%_"],"r":"Mu"}},{"m":0,"k":"m","n":"fail","s":{"r":"Mu","p":["*%_"]}},{"n":"Str","s":{"r":"Mu","p":["*%_"]},"k":"m","m":1},{"n":"Str","s":{"p":["*%_"],"r":"Mu"},"m":1,"k":"m"},{"k":"m","m":1,"s":{"r":"Mu","p":["*%_"]},"n":"Str"},{"m":0,"k":"m","n":"die","s":{"r":"Mu","p":["*%_"]}},{"m":0,"k":"m","n":"rethrow","s":{"r":"Mu","p":["*%_"]}},{"s":{"r":"Mu","p":["*%_"]},"n":"backtrace","k":"m","m":0},{"m":1,"k":"m","n":"gist","s":{"p":["*%_"],"r":"Mu"}},{"k":"m","m":1,"s":{"r":"Mu","p":["*%_"]},"n":"gist"},{"s":{"p":["*%_"],"r":"Mu"},"n":"gist","m":1,"k":"m"},{"k":"m","m":0,"n":"vault-backtrace","s":{"r":"Mu","p":["*%_"]}},{"k":"s","m":0,"s":{"p":["@auto","%init","*%_"],"r":"Mu"},"n":"BUILDALL"}],"n":"X::IO::Unknown","t":"X::IO::Unknown"},{"d":"TITLE\nclass X::IO::Copy\n\nSUBTITLE\nError while trying to copy a file\n\n    class X::IO::Copy does X::IO is Exception { }\n\n\nError class for failed file copy operations. A typical error message is\n\n    Failed to copy 'source' to 'destination': permission denied\n\n\n","b":"A","a":[{"n":"$.from","t":"Mu","k":"v"},{"k":"v","t":"Mu","n":"$.to"},{"k":"v","n":"$.os-error","t":"Mu"},{"t":"Mu","n":"$!ex","k":"v"},{"k":"v","t":"Mu","n":"$!bt"}],"k":"c","m":[{"s":{"r":"Mu","p":["*%_"]},"n":"message","k":"m","m":0},{"s":{"p":["*%_"],"r":"Mu"},"n":"from","m":0,"k":"m"},{"s":{"p":["*%_"],"r":"Mu"},"n":"to","k":"m","m":0},{"k":"m","m":0,"n":"os-error","s":{"p":["*%_"],"r":"Mu"}},{"n":"BUILDALL","s":{"r":"Mu","p":["@auto","%init","*%_"]},"m":0,"k":"s"},{"n":"resume","s":{"p":["*%_"],"r":"Bool"},"m":0,"k":"m"},{"k":"m","m":0,"n":"reset-backtrace","s":{"p":["*%_"],"r":"Mu"}},{"k":"m","m":0,"n":"is-compile-time","s":{"p":["*%_"],"r":"Bool"}},{"k":"m","m":0,"n":"throw","s":{"p":["$bt?","*%_"],"r":"Mu"}},{"s":{"r":"Mu","p":["*%_"]},"n":"fail","k":"m","m":0},{"s":{"r":"Mu","p":["*%_"]},"n":"Str","m":1,"k":"m"},{"k":"m","m":1,"n":"Str","s":{"r":"Mu","p":["*%_"]}},{"n":"Str","s":{"r":"Mu","p":["*%_"]},"m":1,"k":"m"},{"k":"m","m":0,"n":"die","s":{"p":["*%_"],"r":"Mu"}},{"s":{"r":"Mu","p":["*%_"]},"n":"rethrow","k":"m","m":0},{"n":"backtrace","s":{"p":["*%_"],"r":"Mu"},"k":"m","m":0},{"s":{"p":["*%_"],"r":"Mu"},"n":"gist","m":1,"k":"m"},{"n":"gist","s":{"r":"Mu","p":["*%_"]},"k":"m","m":1},{"s":{"r":"Mu","p":["*%_"]},"n":"gist","k":"m","m":1},{"s":{"r":"Mu","p":["*%_"]},"n":"vault-backtrace","k":"m","m":0},{"s":{"p":["@auto","%init","*%_"],"r":"Mu"},"n":"BUILDALL","k":"s","m":0}],"t":"X::IO::Copy","n":"X::IO::Copy"},{"k":"c","m":[{"k":"m","m":0,"n":"message","s":{"r":"Mu","p":["*%_"]}},{"n":"path","s":{"r":"Mu","p":["*%_"]},"k":"m","m":0},{"s":{"p":["*%_"],"r":"Mu"},"n":"os-error","k":"m","m":0},{"s":{"p":["@auto","%init","*%_"],"r":"Mu"},"n":"BUILDALL","k":"s","m":0},{"k":"m","m":0,"n":"resume","s":{"p":["*%_"],"r":"Bool"}},{"m":0,"k":"m","s":{"r":"Mu","p":["*%_"]},"n":"reset-backtrace"},{"m":0,"k":"m","n":"is-compile-time","s":{"r":"Bool","p":["*%_"]}},{"s":{"r":"Mu","p":["$bt?","*%_"]},"n":"throw","k":"m","m":0},{"s":{"p":["*%_"],"r":"Mu"},"n":"fail","k":"m","m":0},{"k":"m","m":1,"n":"Str","s":{"p":["*%_"],"r":"Mu"}},{"n":"Str","s":{"p":["*%_"],"r":"Mu"},"m":1,"k":"m"},{"n":"Str","s":{"r":"Mu","p":["*%_"]},"m":1,"k":"m"},{"s":{"r":"Mu","p":["*%_"]},"n":"die","m":0,"k":"m"},{"s":{"r":"Mu","p":["*%_"]},"n":"rethrow","k":"m","m":0},{"m":0,"k":"m","n":"backtrace","s":{"p":["*%_"],"r":"Mu"}},{"n":"gist","s":{"r":"Mu","p":["*%_"]},"m":1,"k":"m"},{"s":{"p":["*%_"],"r":"Mu"},"n":"gist","m":1,"k":"m"},{"m":1,"k":"m","n":"gist","s":{"r":"Mu","p":["*%_"]}},{"s":{"r":"Mu","p":["*%_"]},"n":"vault-backtrace","m":0,"k":"m"},{"k":"s","m":0,"s":{"p":["@auto","%init","*%_"],"r":"Mu"},"n":"BUILDALL"}],"a":[{"t":"Mu","n":"$.path","k":"v"},{"k":"v","t":"Mu","n":"$.os-error"},{"k":"v","n":"$!ex","t":"Mu"},{"k":"v","n":"$!bt","t":"Mu"}],"b":"A","t":"X::IO::Resolve","n":"X::IO::Resolve"},{"t":"X::IO::Link","n":"X::IO::Link","d":"TITLE\nclass X::IO::Link\n\nSUBTITLE\nError while trying to create a link\n\n    class X::IO::Link does X::IO is Exception { }\n\n\nError class for failed link operation.\n\nA typical error message is\n\n    Failed to create link called 'my-link' on target 'does-not exist': Failed to link file\n\n\n","m":[{"m":0,"k":"m","n":"message","s":{"p":["*%_"],"r":"Mu"}},{"n":"target","s":{"r":"Mu","p":["*%_"]},"m":0,"k":"m"},{"k":"m","m":0,"n":"name","s":{"p":["*%_"],"r":"Mu"}},{"m":0,"k":"m","s":{"r":"Mu","p":["*%_"]},"n":"os-error"},{"s":{"r":"Mu","p":["@auto","%init","*%_"]},"n":"BUILDALL","k":"s","m":0},{"m":0,"k":"m","n":"resume","s":{"r":"Bool","p":["*%_"]}},{"s":{"p":["*%_"],"r":"Mu"},"n":"reset-backtrace","m":0,"k":"m"},{"m":0,"k":"m","n":"is-compile-time","s":{"p":["*%_"],"r":"Bool"}},{"n":"throw","s":{"r":"Mu","p":["$bt?","*%_"]},"k":"m","m":0},{"s":{"r":"Mu","p":["*%_"]},"n":"fail","k":"m","m":0},{"s":{"r":"Mu","p":["*%_"]},"n":"Str","k":"m","m":1},{"m":1,"k":"m","n":"Str","s":{"r":"Mu","p":["*%_"]}},{"k":"m","m":1,"n":"Str","s":{"r":"Mu","p":["*%_"]}},{"n":"die","s":{"r":"Mu","p":["*%_"]},"m":0,"k":"m"},{"k":"m","m":0,"n":"rethrow","s":{"r":"Mu","p":["*%_"]}},{"k":"m","m":0,"s":{"p":["*%_"],"r":"Mu"},"n":"backtrace"},{"n":"gist","s":{"p":["*%_"],"r":"Mu"},"m":1,"k":"m"},{"m":1,"k":"m","n":"gist","s":{"p":["*%_"],"r":"Mu"}},{"n":"gist","s":{"p":["*%_"],"r":"Mu"},"m":1,"k":"m"},{"n":"vault-backtrace","s":{"p":["*%_"],"r":"Mu"},"k":"m","m":0},{"m":0,"k":"s","s":{"p":["@auto","%init","*%_"],"r":"Mu"},"n":"BUILDALL"}],"k":"c","b":"A","a":[{"n":"$.target","t":"Mu","k":"v"},{"k":"v","t":"Mu","n":"$.name"},{"k":"v","n":"$.os-error","t":"Mu"},{"t":"Mu","n":"$!ex","k":"v"},{"n":"$!bt","t":"Mu","k":"v"}]},{"d":"TITLE\nclass X::IO::Dir\n\nSUBTITLE\nError while trying to get a directory's contents\n\n    class X::IO::Dir does X::IO is Exception { }\n\n\nError class that is thrown when a dir call fails.\n\nA typical error message is\n\n    Failed to get the directory contents of '/tmp/': No such file or directory\n\n\n","a":[{"k":"v","n":"$.path","t":"Mu"},{"k":"v","n":"$.os-error","t":"Mu"},{"k":"v","n":"$!ex","t":"Mu"},{"n":"$!bt","t":"Mu","k":"v"}],"b":"A","k":"c","m":[{"s":{"p":["*%_"],"r":"Mu"},"n":"message","m":0,"k":"m"},{"k":"m","m":0,"n":"path","s":{"r":"Mu","p":["*%_"]}},{"k":"m","m":0,"n":"os-error","s":{"r":"Mu","p":["*%_"]}},{"m":0,"k":"s","s":{"r":"Mu","p":["@auto","%init","*%_"]},"n":"BUILDALL"},{"k":"m","m":0,"n":"resume","s":{"r":"Bool","p":["*%_"]}},{"s":{"r":"Mu","p":["*%_"]},"n":"reset-backtrace","k":"m","m":0},{"m":0,"k":"m","s":{"p":["*%_"],"r":"Bool"},"n":"is-compile-time"},{"n":"throw","s":{"p":["$bt?","*%_"],"r":"Mu"},"k":"m","m":0},{"m":0,"k":"m","n":"fail","s":{"p":["*%_"],"r":"Mu"}},{"m":1,"k":"m","n":"Str","s":{"r":"Mu","p":["*%_"]}},{"m":1,"k":"m","n":"Str","s":{"p":["*%_"],"r":"Mu"}},{"k":"m","m":1,"s":{"p":["*%_"],"r":"Mu"},"n":"Str"},{"m":0,"k":"m","s":{"p":["*%_"],"r":"Mu"},"n":"die"},{"n":"rethrow","s":{"r":"Mu","p":["*%_"]},"m":0,"k":"m"},{"n":"backtrace","s":{"r":"Mu","p":["*%_"]},"m":0,"k":"m"},{"n":"gist","s":{"p":["*%_"],"r":"Mu"},"m":1,"k":"m"},{"m":1,"k":"m","n":"gist","s":{"r":"Mu","p":["*%_"]}},{"s":{"r":"Mu","p":["*%_"]},"n":"gist","m":1,"k":"m"},{"k":"m","m":0,"n":"vault-backtrace","s":{"p":["*%_"],"r":"Mu"}},{"m":0,"k":"s","n":"BUILDALL","s":{"p":["@auto","%init","*%_"],"r":"Mu"}}],"t":"X::IO::Dir","n":"X::IO::Dir"},{"a":[{"k":"v","n":"$.path","t":"Mu"},{"k":"v","n":"$.os-error","t":"Mu"},{"k":"v","t":"Mu","n":"$!ex"},{"n":"$!bt","t":"Mu","k":"v"}],"b":"A","m":[{"n":"message","s":{"r":"Mu","p":["*%_"]},"k":"m","m":0},{"n":"path","s":{"p":["*%_"],"r":"Mu"},"k":"m","m":0},{"m":0,"k":"m","n":"os-error","s":{"r":"Mu","p":["*%_"]}},{"m":0,"k":"s","s":{"p":["@auto","%init","*%_"],"r":"Mu"},"n":"BUILDALL"},{"m":0,"k":"m","s":{"p":["*%_"],"r":"Bool"},"n":"resume"},{"k":"m","m":0,"s":{"p":["*%_"],"r":"Mu"},"n":"reset-backtrace"},{"k":"m","m":0,"n":"is-compile-time","s":{"r":"Bool","p":["*%_"]}},{"s":{"p":["$bt?","*%_"],"r":"Mu"},"n":"throw","m":0,"k":"m"},{"m":0,"k":"m","s":{"p":["*%_"],"r":"Mu"},"n":"fail"},{"n":"Str","s":{"p":["*%_"],"r":"Mu"},"m":1,"k":"m"},{"m":1,"k":"m","n":"Str","s":{"r":"Mu","p":["*%_"]}},{"m":1,"k":"m","n":"Str","s":{"r":"Mu","p":["*%_"]}},{"m":0,"k":"m","s":{"p":["*%_"],"r":"Mu"},"n":"die"},{"m":0,"k":"m","s":{"r":"Mu","p":["*%_"]},"n":"rethrow"},{"n":"backtrace","s":{"p":["*%_"],"r":"Mu"},"m":0,"k":"m"},{"n":"gist","s":{"p":["*%_"],"r":"Mu"},"k":"m","m":1},{"k":"m","m":1,"n":"gist","s":{"p":["*%_"],"r":"Mu"}},{"n":"gist","s":{"p":["*%_"],"r":"Mu"},"k":"m","m":1},{"m":0,"k":"m","n":"vault-backtrace","s":{"p":["*%_"],"r":"Mu"}},{"n":"BUILDALL","s":{"p":["@auto","%init","*%_"],"r":"Mu"},"m":0,"k":"s"}],"k":"c","d":"TITLE\nclass X::IO::Unlink\n\nSUBTITLE\nError while trying to remove a file\n\n    class X::IO::Unlink does X::IO is Exception { }\n\n\nError class for failed unlink operation.\n\nA typical error message is\n\n    Failed to remove the file 'secret': Permission defined\n\n\n","n":"X::IO::Unlink","t":"X::IO::Unlink"},{"b":"A","a":[{"n":"$.path","t":"Mu","k":"v"},{"n":"$.trying","t":"Mu","k":"v"},{"t":"Mu","n":"$.use","k":"v"},{"k":"v","t":"Mu","n":"$.os-error"},{"t":"Mu","n":"$!ex","k":"v"},{"n":"$!bt","t":"Mu","k":"v"}],"k":"c","m":[{"n":"message","s":{"r":"Mu","p":["*%_"]},"m":0,"k":"m"},{"n":"path","s":{"r":"Mu","p":["*%_"]},"m":0,"k":"m"},{"s":{"p":["*%_"],"r":"Mu"},"n":"trying","m":0,"k":"m"},{"k":"m","m":0,"n":"use","s":{"p":["*%_"],"r":"Mu"}},{"m":0,"k":"m","s":{"r":"Mu","p":["*%_"]},"n":"os-error"},{"s":{"p":["@auto","%init","*%_"],"r":"Mu"},"n":"BUILDALL","k":"s","m":0},{"s":{"r":"Bool","p":["*%_"]},"n":"resume","m":0,"k":"m"},{"s":{"r":"Mu","p":["*%_"]},"n":"reset-backtrace","k":"m","m":0},{"k":"m","m":0,"n":"is-compile-time","s":{"r":"Bool","p":["*%_"]}},{"s":{"p":["$bt?","*%_"],"r":"Mu"},"n":"throw","k":"m","m":0},{"n":"fail","s":{"r":"Mu","p":["*%_"]},"m":0,"k":"m"},{"k":"m","m":1,"n":"Str","s":{"r":"Mu","p":["*%_"]}},{"s":{"r":"Mu","p":["*%_"]},"n":"Str","m":1,"k":"m"},{"s":{"p":["*%_"],"r":"Mu"},"n":"Str","k":"m","m":1},{"k":"m","m":0,"n":"die","s":{"r":"Mu","p":["*%_"]}},{"k":"m","m":0,"n":"rethrow","s":{"r":"Mu","p":["*%_"]}},{"m":0,"k":"m","n":"backtrace","s":{"r":"Mu","p":["*%_"]}},{"k":"m","m":1,"s":{"r":"Mu","p":["*%_"]},"n":"gist"},{"m":1,"k":"m","n":"gist","s":{"r":"Mu","p":["*%_"]}},{"m":1,"k":"m","n":"gist","s":{"r":"Mu","p":["*%_"]}},{"m":0,"k":"m","s":{"r":"Mu","p":["*%_"]},"n":"vault-backtrace"},{"n":"BUILDALL","s":{"r":"Mu","p":["@auto","%init","*%_"]},"k":"s","m":0}],"t":"X::IO::Directory","n":"X::IO::Directory"},{"d":"TITLE\nclass X::IO::Symlink\n\nSUBTITLE\nError while trying to create a symbolic link\n\n    class X::IO::Symlink does X::IO is Exception { }\n\n\nError class for failed symlink creation.\n\nA typical error message is\n\n    Failed to create symlink called 'euler' on target '/home/myhome/euler-1.p6': Failed to symlink file: file already exist\n\n\n","b":"A","a":[{"k":"v","n":"$.target","t":"Mu"},{"t":"Mu","n":"$.name","k":"v"},{"k":"v","t":"Mu","n":"$.os-error"},{"t":"Mu","n":"$!ex","k":"v"},{"t":"Mu","n":"$!bt","k":"v"}],"m":[{"k":"m","m":0,"n":"message","s":{"r":"Mu","p":["*%_"]}},{"k":"m","m":0,"n":"target","s":{"r":"Mu","p":["*%_"]}},{"k":"m","m":0,"n":"name","s":{"r":"Mu","p":["*%_"]}},{"n":"os-error","s":{"r":"Mu","p":["*%_"]},"m":0,"k":"m"},{"m":0,"k":"s","s":{"r":"Mu","p":["@auto","%init","*%_"]},"n":"BUILDALL"},{"m":0,"k":"m","s":{"r":"Bool","p":["*%_"]},"n":"resume"},{"s":{"p":["*%_"],"r":"Mu"},"n":"reset-backtrace","k":"m","m":0},{"s":{"p":["*%_"],"r":"Bool"},"n":"is-compile-time","k":"m","m":0},{"m":0,"k":"m","s":{"r":"Mu","p":["$bt?","*%_"]},"n":"throw"},{"n":"fail","s":{"r":"Mu","p":["*%_"]},"m":0,"k":"m"},{"k":"m","m":1,"n":"Str","s":{"r":"Mu","p":["*%_"]}},{"s":{"p":["*%_"],"r":"Mu"},"n":"Str","k":"m","m":1},{"k":"m","m":1,"n":"Str","s":{"p":["*%_"],"r":"Mu"}},{"k":"m","m":0,"s":{"r":"Mu","p":["*%_"]},"n":"die"},{"k":"m","m":0,"s":{"p":["*%_"],"r":"Mu"},"n":"rethrow"},{"s":{"p":["*%_"],"r":"Mu"},"n":"backtrace","k":"m","m":0},{"k":"m","m":1,"n":"gist","s":{"r":"Mu","p":["*%_"]}},{"n":"gist","s":{"p":["*%_"],"r":"Mu"},"k":"m","m":1},{"n":"gist","s":{"r":"Mu","p":["*%_"]},"k":"m","m":1},{"s":{"r":"Mu","p":["*%_"]},"n":"vault-backtrace","k":"m","m":0},{"m":0,"k":"s","s":{"p":["@auto","%init","*%_"],"r":"Mu"},"n":"BUILDALL"}],"k":"c","t":"X::IO::Symlink","n":"X::IO::Symlink"},{"k":"c","m":[{"s":{"p":["*%_"],"r":"Mu"},"n":"message","m":0,"k":"m"},{"s":{"p":["*%_"],"r":"Mu"},"n":"from","m":0,"k":"m"},{"s":{"p":["*%_"],"r":"Mu"},"n":"to","m":0,"k":"m"},{"k":"m","m":0,"n":"os-error","s":{"r":"Mu","p":["*%_"]}},{"n":"BUILDALL","s":{"r":"Mu","p":["@auto","%init","*%_"]},"k":"s","m":0},{"s":{"r":"Bool","p":["*%_"]},"n":"resume","m":0,"k":"m"},{"n":"reset-backtrace","s":{"r":"Mu","p":["*%_"]},"k":"m","m":0},{"m":0,"k":"m","n":"is-compile-time","s":{"r":"Bool","p":["*%_"]}},{"m":0,"k":"m","n":"throw","s":{"p":["$bt?","*%_"],"r":"Mu"}},{"s":{"p":["*%_"],"r":"Mu"},"n":"fail","k":"m","m":0},{"n":"Str","s":{"r":"Mu","p":["*%_"]},"m":1,"k":"m"},{"s":{"p":["*%_"],"r":"Mu"},"n":"Str","m":1,"k":"m"},{"m":1,"k":"m","s":{"r":"Mu","p":["*%_"]},"n":"Str"},{"n":"die","s":{"p":["*%_"],"r":"Mu"},"k":"m","m":0},{"m":0,"k":"m","s":{"p":["*%_"],"r":"Mu"},"n":"rethrow"},{"s":{"r":"Mu","p":["*%_"]},"n":"backtrace","m":0,"k":"m"},{"k":"m","m":1,"s":{"p":["*%_"],"r":"Mu"},"n":"gist"},{"k":"m","m":1,"s":{"p":["*%_"],"r":"Mu"},"n":"gist"},{"k":"m","m":1,"s":{"r":"Mu","p":["*%_"]},"n":"gist"},{"m":0,"k":"m","n":"vault-backtrace","s":{"p":["*%_"],"r":"Mu"}},{"n":"BUILDALL","s":{"p":["@auto","%init","*%_"],"r":"Mu"},"k":"s","m":0}],"b":"A","a":[{"n":"$.from","t":"Mu","k":"v"},{"k":"v","t":"Mu","n":"$.to"},{"t":"Mu","n":"$.os-error","k":"v"},{"k":"v","t":"Mu","n":"$!ex"},{"t":"Mu","n":"$!bt","k":"v"}],"d":"TITLE\nclass X::IO::Move\n\nSUBTITLE\nError while trying to move a file\n\n    class X::IO::Move does X::IO is Exception { }\n\n\nError class for a failed file move operation. A typical error message is\n\n    Failed to move '/tmp/alpha.p6' to 'test.p6': :createonly specified and destination exists\n\n\n","n":"X::IO::Move","t":"X::IO::Move"},{"a":[{"n":"$.path","t":"Mu","k":"v"},{"n":"$.child","t":"Mu","k":"v"},{"k":"v","n":"$.os-error","t":"Mu"},{"n":"$!ex","t":"Mu","k":"v"},{"k":"v","t":"Mu","n":"$!bt"}],"b":"A","k":"c","m":[{"s":{"p":["*%_"],"r":"Mu"},"n":"message","m":0,"k":"m"},{"m":0,"k":"m","n":"path","s":{"r":"Mu","p":["*%_"]}},{"s":{"r":"Mu","p":["*%_"]},"n":"child","k":"m","m":0},{"m":0,"k":"m","n":"os-error","s":{"r":"Mu","p":["*%_"]}},{"s":{"r":"Mu","p":["@auto","%init","*%_"]},"n":"BUILDALL","k":"s","m":0},{"s":{"p":["*%_"],"r":"Bool"},"n":"resume","m":0,"k":"m"},{"m":0,"k":"m","n":"reset-backtrace","s":{"p":["*%_"],"r":"Mu"}},{"m":0,"k":"m","n":"is-compile-time","s":{"r":"Bool","p":["*%_"]}},{"m":0,"k":"m","n":"throw","s":{"r":"Mu","p":["$bt?","*%_"]}},{"s":{"r":"Mu","p":["*%_"]},"n":"fail","k":"m","m":0},{"s":{"p":["*%_"],"r":"Mu"},"n":"Str","m":1,"k":"m"},{"n":"Str","s":{"p":["*%_"],"r":"Mu"},"k":"m","m":1},{"s":{"r":"Mu","p":["*%_"]},"n":"Str","m":1,"k":"m"},{"s":{"r":"Mu","p":["*%_"]},"n":"die","k":"m","m":0},{"m":0,"k":"m","n":"rethrow","s":{"r":"Mu","p":["*%_"]}},{"n":"backtrace","s":{"r":"Mu","p":["*%_"]},"m":0,"k":"m"},{"s":{"r":"Mu","p":["*%_"]},"n":"gist","k":"m","m":1},{"n":"gist","s":{"r":"Mu","p":["*%_"]},"k":"m","m":1},{"m":1,"k":"m","s":{"r":"Mu","p":["*%_"]},"n":"gist"},{"n":"vault-backtrace","s":{"p":["*%_"],"r":"Mu"},"m":0,"k":"m"},{"n":"BUILDALL","s":{"p":["@auto","%init","*%_"],"r":"Mu"},"k":"s","m":0}],"t":"X::IO::NotAChild","n":"X::IO::NotAChild"},{"n":"X::IO::NotAFile","t":"X::IO::NotAFile","b":"A","a":[{"k":"v","n":"$.path","t":"Mu"},{"n":"$.trying","t":"Mu","k":"v"},{"n":"$.os-error","t":"Mu","k":"v"},{"n":"$!ex","t":"Mu","k":"v"},{"k":"v","n":"$!bt","t":"Mu"}],"k":"c","m":[{"m":0,"k":"m","n":"message","s":{"r":"Mu","p":["*%_"]}},{"n":"path","s":{"p":["*%_"],"r":"Mu"},"m":0,"k":"m"},{"m":0,"k":"m","n":"trying","s":{"r":"Mu","p":["*%_"]}},{"n":"os-error","s":{"p":["*%_"],"r":"Mu"},"m":0,"k":"m"},{"s":{"p":["@auto","%init","*%_"],"r":"Mu"},"n":"BUILDALL","m":0,"k":"s"},{"n":"resume","s":{"p":["*%_"],"r":"Bool"},"m":0,"k":"m"},{"m":0,"k":"m","n":"reset-backtrace","s":{"r":"Mu","p":["*%_"]}},{"m":0,"k":"m","s":{"r":"Bool","p":["*%_"]},"n":"is-compile-time"},{"k":"m","m":0,"s":{"p":["$bt?","*%_"],"r":"Mu"},"n":"throw"},{"s":{"r":"Mu","p":["*%_"]},"n":"fail","k":"m","m":0},{"s":{"p":["*%_"],"r":"Mu"},"n":"Str","k":"m","m":1},{"m":1,"k":"m","s":{"r":"Mu","p":["*%_"]},"n":"Str"},{"n":"Str","s":{"r":"Mu","p":["*%_"]},"k":"m","m":1},{"s":{"p":["*%_"],"r":"Mu"},"n":"die","k":"m","m":0},{"s":{"r":"Mu","p":["*%_"]},"n":"rethrow","k":"m","m":0},{"m":0,"k":"m","n":"backtrace","s":{"p":["*%_"],"r":"Mu"}},{"n":"gist","s":{"r":"Mu","p":["*%_"]},"k":"m","m":1},{"n":"gist","s":{"r":"Mu","p":["*%_"]},"k":"m","m":1},{"m":1,"k":"m","n":"gist","s":{"p":["*%_"],"r":"Mu"}},{"s":{"r":"Mu","p":["*%_"]},"n":"vault-backtrace","k":"m","m":0},{"n":"BUILDALL","s":{"r":"Mu","p":["@auto","%init","*%_"]},"k":"s","m":0}]},{"b":"A","a":[{"t":"Mu","n":"$.path","k":"v"},{"k":"v","t":"Mu","n":"$.os-error"},{"k":"v","n":"$!ex","t":"Mu"},{"t":"Mu","n":"$!bt","k":"v"}],"k":"c","m":[{"k":"m","m":0,"n":"message","s":{"p":["*%_"],"r":"Mu"}},{"s":{"r":"Mu","p":["*%_"]},"n":"path","m":0,"k":"m"},{"m":0,"k":"m","s":{"r":"Mu","p":["*%_"]},"n":"os-error"},{"m":0,"k":"s","s":{"p":["@auto","%init","*%_"],"r":"Mu"},"n":"BUILDALL"},{"n":"resume","s":{"r":"Bool","p":["*%_"]},"k":"m","m":0},{"k":"m","m":0,"s":{"r":"Mu","p":["*%_"]},"n":"reset-backtrace"},{"n":"is-compile-time","s":{"r":"Bool","p":["*%_"]},"k":"m","m":0},{"k":"m","m":0,"s":{"r":"Mu","p":["$bt?","*%_"]},"n":"throw"},{"k":"m","m":0,"s":{"r":"Mu","p":["*%_"]},"n":"fail"},{"m":1,"k":"m","n":"Str","s":{"r":"Mu","p":["*%_"]}},{"s":{"p":["*%_"],"r":"Mu"},"n":"Str","k":"m","m":1},{"s":{"p":["*%_"],"r":"Mu"},"n":"Str","k":"m","m":1},{"n":"die","s":{"r":"Mu","p":["*%_"]},"k":"m","m":0},{"k":"m","m":0,"s":{"p":["*%_"],"r":"Mu"},"n":"rethrow"},{"m":0,"k":"m","s":{"p":["*%_"],"r":"Mu"},"n":"backtrace"},{"m":1,"k":"m","s":{"p":["*%_"],"r":"Mu"},"n":"gist"},{"n":"gist","s":{"p":["*%_"],"r":"Mu"},"m":1,"k":"m"},{"s":{"p":["*%_"],"r":"Mu"},"n":"gist","k":"m","m":1},{"n":"vault-backtrace","s":{"r":"Mu","p":["*%_"]},"m":0,"k":"m"},{"k":"s","m":0,"s":{"p":["@auto","%init","*%_"],"r":"Mu"},"n":"BUILDALL"}],"d":"TITLE\nclass X::IO::Chdir\n\nSUBTITLE\nError while trying to change the working directory\n\n    class X::IO::Chdir does X::IO is Exception { }\n\n\nError class when a chdir call failed.\n\nFor example\n\n    chdir '/home/other'\n\n\nthrows\n\n    Failed to change the working directory to '/home/other': permission denied\n\n\n","n":"X::IO::Chdir","t":"X::IO::Chdir"},{"b":"A","a":[{"t":"Mu","n":"$.os-error","k":"v"},{"k":"v","n":"$!ex","t":"Mu"},{"k":"v","t":"Mu","n":"$!bt"}],"m":[{"s":{"r":"Mu","p":["*%_"]},"n":"message","m":0,"k":"m"},{"n":"os-error","s":{"r":"Mu","p":["*%_"]},"m":0,"k":"m"},{"m":0,"k":"s","s":{"r":"Mu","p":["@auto","%init","*%_"]},"n":"BUILDALL"},{"s":{"p":["*%_"],"r":"Bool"},"n":"resume","k":"m","m":0},{"n":"reset-backtrace","s":{"r":"Mu","p":["*%_"]},"m":0,"k":"m"},{"s":{"p":["*%_"],"r":"Bool"},"n":"is-compile-time","m":0,"k":"m"},{"s":{"p":["$bt?","*%_"],"r":"Mu"},"n":"throw","m":0,"k":"m"},{"m":0,"k":"m","s":{"r":"Mu","p":["*%_"]},"n":"fail"},{"m":1,"k":"m","s":{"p":["*%_"],"r":"Mu"},"n":"Str"},{"k":"m","m":1,"s":{"r":"Mu","p":["*%_"]},"n":"Str"},{"m":1,"k":"m","n":"Str","s":{"p":["*%_"],"r":"Mu"}},{"n":"die","s":{"p":["*%_"],"r":"Mu"},"k":"m","m":0},{"s":{"r":"Mu","p":["*%_"]},"n":"rethrow","k":"m","m":0},{"m":0,"k":"m","n":"backtrace","s":{"p":["*%_"],"r":"Mu"}},{"n":"gist","s":{"r":"Mu","p":["*%_"]},"k":"m","m":1},{"n":"gist","s":{"p":["*%_"],"r":"Mu"},"k":"m","m":1},{"m":1,"k":"m","s":{"p":["*%_"],"r":"Mu"},"n":"gist"},{"s":{"p":["*%_"],"r":"Mu"},"n":"vault-backtrace","m":0,"k":"m"},{"s":{"p":["@auto","%init","*%_"],"r":"Mu"},"n":"BUILDALL","m":0,"k":"s"}],"k":"c","d":"TITLE\nclass X::IO::Cwd\n\nSUBTITLE\nError while trying to determine the current working directory\n\n    class X::IO::Cwd does X::IO is Exception { }\n\n\nError class when the runtime fails to determine the current directory.\n\nA typical error message is\n\n    Failed to get the working directory: permission denied\n","n":"X::IO::Cwd","t":"X::IO::Cwd"},{"d":"TITLE\nclass X::IO::Chmod\n\nSUBTITLE\nError while trying to change file permissions\n\n    class X::IO::Chmod does X::IO is Exception { }\n\n\nError class for failed chmod calls.\n\nA typical error message is\n\n    Failed to set the mode of '/home/other' to '0o777': Permission denied\n","a":[{"t":"Mu","n":"$.path","k":"v"},{"n":"$.mode","t":"Mu","k":"v"},{"k":"v","t":"Mu","n":"$.os-error"},{"n":"$!ex","t":"Mu","k":"v"},{"t":"Mu","n":"$!bt","k":"v"}],"b":"A","k":"c","m":[{"n":"message","s":{"p":["*%_"],"r":"Mu"},"k":"m","m":0},{"k":"m","m":0,"n":"path","s":{"p":["*%_"],"r":"Mu"}},{"k":"m","m":0,"s":{"p":["*%_"],"r":"Mu"},"n":"mode"},{"m":0,"k":"m","s":{"p":["*%_"],"r":"Mu"},"n":"os-error"},{"m":0,"k":"s","s":{"r":"Mu","p":["@auto","%init","*%_"]},"n":"BUILDALL"},{"s":{"r":"Bool","p":["*%_"]},"n":"resume","m":0,"k":"m"},{"n":"reset-backtrace","s":{"p":["*%_"],"r":"Mu"},"k":"m","m":0},{"k":"m","m":0,"n":"is-compile-time","s":{"r":"Bool","p":["*%_"]}},{"m":0,"k":"m","n":"throw","s":{"r":"Mu","p":["$bt?","*%_"]}},{"k":"m","m":0,"n":"fail","s":{"p":["*%_"],"r":"Mu"}},{"k":"m","m":1,"s":{"p":["*%_"],"r":"Mu"},"n":"Str"},{"k":"m","m":1,"s":{"p":["*%_"],"r":"Mu"},"n":"Str"},{"m":1,"k":"m","n":"Str","s":{"p":["*%_"],"r":"Mu"}},{"n":"die","s":{"p":["*%_"],"r":"Mu"},"k":"m","m":0},{"n":"rethrow","s":{"p":["*%_"],"r":"Mu"},"m":0,"k":"m"},{"m":0,"k":"m","s":{"p":["*%_"],"r":"Mu"},"n":"backtrace"},{"m":1,"k":"m","s":{"r":"Mu","p":["*%_"]},"n":"gist"},{"k":"m","m":1,"s":{"r":"Mu","p":["*%_"]},"n":"gist"},{"k":"m","m":1,"n":"gist","s":{"p":["*%_"],"r":"Mu"}},{"k":"m","m":0,"s":{"r":"Mu","p":["*%_"]},"n":"vault-backtrace"},{"m":0,"k":"s","s":{"p":["@auto","%init","*%_"],"r":"Mu"},"n":"BUILDALL"}],"t":"X::IO::Chmod","n":"X::IO::Chmod"},{"n":"X::IO::Mkdir","t":"X::IO::Mkdir","m":[{"k":"m","m":0,"s":{"p":["*%_"],"r":"Mu"},"n":"message"},{"k":"m","m":0,"s":{"r":"Mu","p":["*%_"]},"n":"path"},{"k":"m","m":0,"s":{"p":["*%_"],"r":"Mu"},"n":"mode"},{"m":0,"k":"m","s":{"p":["*%_"],"r":"Mu"},"n":"os-error"},{"k":"s","m":0,"s":{"r":"Mu","p":["@auto","%init","*%_"]},"n":"BUILDALL"},{"n":"resume","s":{"r":"Bool","p":["*%_"]},"k":"m","m":0},{"s":{"r":"Mu","p":["*%_"]},"n":"reset-backtrace","k":"m","m":0},{"s":{"p":["*%_"],"r":"Bool"},"n":"is-compile-time","m":0,"k":"m"},{"m":0,"k":"m","n":"throw","s":{"p":["$bt?","*%_"],"r":"Mu"}},{"s":{"r":"Mu","p":["*%_"]},"n":"fail","k":"m","m":0},{"m":1,"k":"m","n":"Str","s":{"r":"Mu","p":["*%_"]}},{"s":{"r":"Mu","p":["*%_"]},"n":"Str","m":1,"k":"m"},{"m":1,"k":"m","s":{"r":"Mu","p":["*%_"]},"n":"Str"},{"s":{"r":"Mu","p":["*%_"]},"n":"die","k":"m","m":0},{"s":{"p":["*%_"],"r":"Mu"},"n":"rethrow","k":"m","m":0},{"s":{"r":"Mu","p":["*%_"]},"n":"backtrace","m":0,"k":"m"},{"s":{"p":["*%_"],"r":"Mu"},"n":"gist","m":1,"k":"m"},{"k":"m","m":1,"n":"gist","s":{"r":"Mu","p":["*%_"]}},{"n":"gist","s":{"p":["*%_"],"r":"Mu"},"m":1,"k":"m"},{"n":"vault-backtrace","s":{"r":"Mu","p":["*%_"]},"k":"m","m":0},{"m":0,"k":"s","s":{"r":"Mu","p":["@auto","%init","*%_"]},"n":"BUILDALL"}],"k":"c","b":"A","a":[{"k":"v","t":"Mu","n":"$.path"},{"k":"v","t":"Mu","n":"$.mode"},{"t":"Mu","n":"$.os-error","k":"v"},{"k":"v","n":"$!ex","t":"Mu"},{"t":"Mu","n":"$!bt","k":"v"}],"d":"TITLE\nclass X::IO::Mkdir\n\nSUBTITLE\nError while trying to create a directory\n\n    class X::IO::Mkdir does X::IO is Exception { }\n\n\nError class for failed mkdir operations.\n\nA typical error message is\n\n    Failed to create directory 'destination' with mode '0o755': File exists\n\n\n"},{"m":[{"k":"m","m":0,"n":"message","s":{"p":["*%_"],"r":"Mu"}},{"m":0,"k":"m","s":{"r":"Mu","p":["*%_"]},"n":"os-error"},{"k":"s","m":0,"s":{"r":"Mu","p":["@auto","%init","*%_"]},"n":"BUILDALL"},{"m":0,"k":"m","n":"resume","s":{"r":"Bool","p":["*%_"]}},{"k":"m","m":0,"s":{"p":["*%_"],"r":"Mu"},"n":"reset-backtrace"},{"k":"m","m":0,"s":{"r":"Bool","p":["*%_"]},"n":"is-compile-time"},{"s":{"r":"Mu","p":["$bt?","*%_"]},"n":"throw","m":0,"k":"m"},{"m":0,"k":"m","n":"fail","s":{"r":"Mu","p":["*%_"]}},{"n":"Str","s":{"r":"Mu","p":["*%_"]},"k":"m","m":1},{"n":"Str","s":{"r":"Mu","p":["*%_"]},"m":1,"k":"m"},{"k":"m","m":1,"s":{"p":["*%_"],"r":"Mu"},"n":"Str"},{"m":0,"k":"m","n":"die","s":{"p":["*%_"],"r":"Mu"}},{"k":"m","m":0,"n":"rethrow","s":{"p":["*%_"],"r":"Mu"}},{"n":"backtrace","s":{"r":"Mu","p":["*%_"]},"k":"m","m":0},{"n":"gist","s":{"r":"Mu","p":["*%_"]},"k":"m","m":1},{"k":"m","m":1,"s":{"p":["*%_"],"r":"Mu"},"n":"gist"},{"n":"gist","s":{"r":"Mu","p":["*%_"]},"k":"m","m":1},{"s":{"p":["*%_"],"r":"Mu"},"n":"vault-backtrace","k":"m","m":0},{"s":{"p":["@auto","%init","*%_"],"r":"Mu"},"n":"BUILDALL","k":"s","m":0}],"k":"c","a":[{"k":"v","t":"Mu","n":"$.os-error"},{"t":"Mu","n":"$!ex","k":"v"},{"k":"v","n":"$!bt","t":"Mu"}],"b":"A","n":"X::IO::Flush","t":"X::IO::Flush"},{"t":"X::IO::BinaryMode","n":"X::IO::BinaryMode","a":[{"n":"$.trying","t":"Mu","k":"v"},{"k":"v","t":"Mu","n":"$.os-error"},{"t":"Mu","n":"$!ex","k":"v"},{"k":"v","t":"Mu","n":"$!bt"}],"b":"A","k":"c","m":[{"s":{"r":"Mu","p":["*%_"]},"n":"message","m":0,"k":"m"},{"s":{"r":"Mu","p":["*%_"]},"n":"trying","k":"m","m":0},{"s":{"p":["*%_"],"r":"Mu"},"n":"os-error","m":0,"k":"m"},{"n":"BUILDALL","s":{"r":"Mu","p":["@auto","%init","*%_"]},"k":"s","m":0},{"m":0,"k":"m","n":"resume","s":{"p":["*%_"],"r":"Bool"}},{"k":"m","m":0,"n":"reset-backtrace","s":{"p":["*%_"],"r":"Mu"}},{"s":{"r":"Bool","p":["*%_"]},"n":"is-compile-time","m":0,"k":"m"},{"m":0,"k":"m","s":{"r":"Mu","p":["$bt?","*%_"]},"n":"throw"},{"k":"m","m":0,"s":{"r":"Mu","p":["*%_"]},"n":"fail"},{"n":"Str","s":{"r":"Mu","p":["*%_"]},"m":1,"k":"m"},{"s":{"p":["*%_"],"r":"Mu"},"n":"Str","m":1,"k":"m"},{"n":"Str","s":{"p":["*%_"],"r":"Mu"},"m":1,"k":"m"},{"k":"m","m":0,"n":"die","s":{"p":["*%_"],"r":"Mu"}},{"s":{"p":["*%_"],"r":"Mu"},"n":"rethrow","m":0,"k":"m"},{"n":"backtrace","s":{"r":"Mu","p":["*%_"]},"m":0,"k":"m"},{"m":1,"k":"m","n":"gist","s":{"p":["*%_"],"r":"Mu"}},{"m":1,"k":"m","s":{"p":["*%_"],"r":"Mu"},"n":"gist"},{"k":"m","m":1,"n":"gist","s":{"p":["*%_"],"r":"Mu"}},{"k":"m","m":0,"s":{"p":["*%_"],"r":"Mu"},"n":"vault-backtrace"},{"m":0,"k":"s","s":{"p":["@auto","%init","*%_"],"r":"Mu"},"n":"BUILDALL"}]},{"n":"X::IO::DoesNotExist","t":"X::IO::DoesNotExist","b":"A","a":[{"k":"v","t":"Mu","n":"$.path"},{"k":"v","n":"$.trying","t":"Mu"},{"t":"Mu","n":"$.os-error","k":"v"},{"k":"v","t":"Mu","n":"$!ex"},{"k":"v","n":"$!bt","t":"Mu"}],"m":[{"m":0,"k":"m","s":{"r":"Mu","p":["*%_"]},"n":"message"},{"s":{"r":"Mu","p":["*%_"]},"n":"path","k":"m","m":0},{"m":0,"k":"m","n":"trying","s":{"p":["*%_"],"r":"Mu"}},{"k":"m","m":0,"n":"os-error","s":{"r":"Mu","p":["*%_"]}},{"k":"s","m":0,"s":{"r":"Mu","p":["@auto","%init","*%_"]},"n":"BUILDALL"},{"k":"m","m":0,"s":{"p":["*%_"],"r":"Bool"},"n":"resume"},{"m":0,"k":"m","n":"reset-backtrace","s":{"p":["*%_"],"r":"Mu"}},{"k":"m","m":0,"n":"is-compile-time","s":{"p":["*%_"],"r":"Bool"}},{"k":"m","m":0,"n":"throw","s":{"r":"Mu","p":["$bt?","*%_"]}},{"n":"fail","s":{"p":["*%_"],"r":"Mu"},"k":"m","m":0},{"n":"Str","s":{"r":"Mu","p":["*%_"]},"k":"m","m":1},{"m":1,"k":"m","n":"Str","s":{"p":["*%_"],"r":"Mu"}},{"n":"Str","s":{"p":["*%_"],"r":"Mu"},"k":"m","m":1},{"k":"m","m":0,"n":"die","s":{"r":"Mu","p":["*%_"]}},{"n":"rethrow","s":{"p":["*%_"],"r":"Mu"},"k":"m","m":0},{"k":"m","m":0,"n":"backtrace","s":{"r":"Mu","p":["*%_"]}},{"m":1,"k":"m","s":{"p":["*%_"],"r":"Mu"},"n":"gist"},{"k":"m","m":1,"n":"gist","s":{"p":["*%_"],"r":"Mu"}},{"n":"gist","s":{"p":["*%_"],"r":"Mu"},"m":1,"k":"m"},{"s":{"r":"Mu","p":["*%_"]},"n":"vault-backtrace","k":"m","m":0},{"k":"s","m":0,"n":"BUILDALL","s":{"r":"Mu","p":["@auto","%init","*%_"]}}],"k":"c","d":"TITLE\nclass X::IO::DoesNotExist\n\nSUBTITLE\nError while doing file tests on a non existing path\n\n    class X::IO::DoesNotExist does X::IO is Exception { }\n\n\nThrown when doing file test operations on a non existing path.\n\nA typical error message is\n\n    Failed to find 'euler-5.p6' while trying to do '.f'\n\n\n"},{"d":"TITLE\nclass X::IO::Rmdir\n\nSUBTITLE\nError while trying to remove a directory\n\n    my class X::IO::Rmdir does X::IO is Exception { }\n\n\nError class for failed rmdir operations.\n\nA typical error message is\n\n    Failed to remove the directory 'lib': Directory not empty\n\n\n","m":[{"n":"message","s":{"r":"Mu","p":["*%_"]},"k":"m","m":0},{"n":"path","s":{"p":["*%_"],"r":"Mu"},"m":0,"k":"m"},{"s":{"p":["*%_"],"r":"Mu"},"n":"os-error","m":0,"k":"m"},{"m":0,"k":"s","n":"BUILDALL","s":{"r":"Mu","p":["@auto","%init","*%_"]}},{"s":{"r":"Bool","p":["*%_"]},"n":"resume","k":"m","m":0},{"m":0,"k":"m","n":"reset-backtrace","s":{"r":"Mu","p":["*%_"]}},{"s":{"r":"Bool","p":["*%_"]},"n":"is-compile-time","k":"m","m":0},{"s":{"p":["$bt?","*%_"],"r":"Mu"},"n":"throw","m":0,"k":"m"},{"k":"m","m":0,"n":"fail","s":{"p":["*%_"],"r":"Mu"}},{"k":"m","m":1,"s":{"p":["*%_"],"r":"Mu"},"n":"Str"},{"s":{"r":"Mu","p":["*%_"]},"n":"Str","m":1,"k":"m"},{"s":{"p":["*%_"],"r":"Mu"},"n":"Str","m":1,"k":"m"},{"m":0,"k":"m","n":"die","s":{"r":"Mu","p":["*%_"]}},{"n":"rethrow","s":{"r":"Mu","p":["*%_"]},"m":0,"k":"m"},{"s":{"p":["*%_"],"r":"Mu"},"n":"backtrace","k":"m","m":0},{"m":1,"k":"m","s":{"p":["*%_"],"r":"Mu"},"n":"gist"},{"m":1,"k":"m","n":"gist","s":{"p":["*%_"],"r":"Mu"}},{"k":"m","m":1,"n":"gist","s":{"p":["*%_"],"r":"Mu"}},{"m":0,"k":"m","s":{"p":["*%_"],"r":"Mu"},"n":"vault-backtrace"},{"s":{"r":"Mu","p":["@auto","%init","*%_"]},"n":"BUILDALL","m":0,"k":"s"}],"k":"c","a":[{"k":"v","n":"$.path","t":"Mu"},{"k":"v","t":"Mu","n":"$.os-error"},{"k":"v","n":"$!ex","t":"Mu"},{"t":"Mu","n":"$!bt","k":"v"}],"b":"A","t":"X::IO::Rmdir","n":"X::IO::Rmdir"},{"t":"X::IO::Null","n":"X::IO::Null","b":"A","a":[{"t":"Mu","n":"$.os-error","k":"v"},{"n":"$!ex","t":"Mu","k":"v"},{"k":"v","n":"$!bt","t":"Mu"}],"k":"c","m":[{"m":0,"k":"m","n":"message","s":{"r":"Mu","p":["*%_"]}},{"m":0,"k":"m","n":"os-error","s":{"p":["*%_"],"r":"Mu"}},{"m":0,"k":"s","n":"BUILDALL","s":{"r":"Mu","p":["@auto","%init","*%_"]}},{"m":0,"k":"m","s":{"p":["*%_"],"r":"Bool"},"n":"resume"},{"n":"reset-backtrace","s":{"r":"Mu","p":["*%_"]},"k":"m","m":0},{"m":0,"k":"m","n":"is-compile-time","s":{"r":"Bool","p":["*%_"]}},{"m":0,"k":"m","n":"throw","s":{"r":"Mu","p":["$bt?","*%_"]}},{"s":{"p":["*%_"],"r":"Mu"},"n":"fail","k":"m","m":0},{"s":{"p":["*%_"],"r":"Mu"},"n":"Str","m":1,"k":"m"},{"m":1,"k":"m","s":{"r":"Mu","p":["*%_"]},"n":"Str"},{"n":"Str","s":{"r":"Mu","p":["*%_"]},"m":1,"k":"m"},{"s":{"r":"Mu","p":["*%_"]},"n":"die","m":0,"k":"m"},{"n":"rethrow","s":{"p":["*%_"],"r":"Mu"},"m":0,"k":"m"},{"n":"backtrace","s":{"r":"Mu","p":["*%_"]},"k":"m","m":0},{"k":"m","m":1,"s":{"p":["*%_"],"r":"Mu"},"n":"gist"},{"m":1,"k":"m","n":"gist","s":{"r":"Mu","p":["*%_"]}},{"k":"m","m":1,"n":"gist","s":{"p":["*%_"],"r":"Mu"}},{"k":"m","m":0,"s":{"r":"Mu","p":["*%_"]},"n":"vault-backtrace"},{"k":"s","m":0,"s":{"p":["@auto","%init","*%_"],"r":"Mu"},"n":"BUILDALL"}]},{"n":"X::Range::InvalidArg","t":"X::Range::InvalidArg","a":[{"k":"v","n":"$.got","t":"Mu"},{"t":"Mu","n":"$!ex","k":"v"},{"t":"Mu","n":"$!bt","k":"v"}],"b":"A","m":[{"k":"m","m":0,"n":"message","s":{"p":["*%_"],"r":"Mu"}},{"s":{"r":"Mu","p":["*%_"]},"n":"got","k":"m","m":0},{"k":"s","m":0,"s":{"r":"Mu","p":["@auto","%init","*%_"]},"n":"BUILDALL"},{"k":"m","m":0,"s":{"p":["*%_"],"r":"Bool"},"n":"resume"},{"k":"m","m":0,"s":{"r":"Mu","p":["*%_"]},"n":"reset-backtrace"},{"n":"is-compile-time","s":{"p":["*%_"],"r":"Bool"},"k":"m","m":0},{"m":0,"k":"m","s":{"r":"Mu","p":["$bt?","*%_"]},"n":"throw"},{"s":{"r":"Mu","p":["*%_"]},"n":"fail","k":"m","m":0},{"m":1,"k":"m","n":"Str","s":{"p":["*%_"],"r":"Mu"}},{"n":"Str","s":{"p":["*%_"],"r":"Mu"},"k":"m","m":1},{"k":"m","m":1,"n":"Str","s":{"r":"Mu","p":["*%_"]}},{"s":{"p":["*%_"],"r":"Mu"},"n":"die","m":0,"k":"m"},{"k":"m","m":0,"n":"rethrow","s":{"r":"Mu","p":["*%_"]}},{"k":"m","m":0,"n":"backtrace","s":{"p":["*%_"],"r":"Mu"}},{"k":"m","m":1,"n":"gist","s":{"p":["*%_"],"r":"Mu"}},{"k":"m","m":1,"n":"gist","s":{"p":["*%_"],"r":"Mu"}},{"k":"m","m":1,"n":"gist","s":{"r":"Mu","p":["*%_"]}},{"k":"m","m":0,"n":"vault-backtrace","s":{"r":"Mu","p":["*%_"]}},{"n":"BUILDALL","s":{"p":["@auto","%init","*%_"],"r":"Mu"},"k":"s","m":0}],"k":"c"},{"n":"X::Augment::NoSuchType","t":"X::Augment::NoSuchType","a":[{"k":"v","t":"Mu","n":"$.package-kind"},{"k":"v","n":"$.package","t":"Mu"},{"k":"v","n":"$.filename","t":"Mu"},{"t":"Mu","n":"$.pos","k":"v"},{"k":"v","n":"$.line","t":"Mu"},{"n":"$.column","t":"Mu","k":"v"},{"k":"v","n":"@.modules","t":"Positional"},{"t":"Mu","n":"$.is-compile-time","k":"v"},{"k":"v","t":"Mu","n":"$.pre"},{"k":"v","t":"Mu","n":"$.post"},{"t":"Positional","n":"@.highexpect","k":"v"},{"k":"v","t":"Mu","n":"$!ex"},{"k":"v","t":"Mu","n":"$!bt"}],"b":"A","m":[{"k":"m","m":0,"s":{"r":"Mu","p":["*%_"]},"n":"message"},{"n":"sorry_heading","s":{"r":"Mu","p":["*%_"]},"m":0,"k":"m"},{"s":{"p":["$file","$line","*%_"],"r":"Mu"},"n":"SET_FILE_LINE","k":"m","m":0},{"m":1,"k":"m","n":"gist","s":{"r":"Mu","p":["*%_"]}},{"k":"m","m":1,"s":{"p":["*%_"],"r":"Mu"},"n":"gist"},{"n":"gist","s":{"p":["*%_"],"r":"Mu"},"m":1,"k":"m"},{"m":1,"k":"m","n":"gist","s":{"p":[":$sorry = Bool::True",":$expect = Bool::True","*%_"],"r":"Mu"}},{"s":{"r":"Mu","p":["*%_"]},"n":"package-kind","k":"m","m":0},{"s":{"p":["*%_"],"r":"Mu"},"n":"package","k":"m","m":0},{"m":0,"k":"m","n":"filename","s":{"p":["*%_"],"r":"Mu"}},{"m":0,"k":"m","s":{"r":"Mu","p":["*%_"]},"n":"pos"},{"s":{"p":["*%_"],"r":"Mu"},"n":"line","k":"m","m":0},{"m":0,"k":"m","n":"column","s":{"p":["*%_"],"r":"Mu"}},{"m":0,"k":"m","n":"modules","s":{"r":"Mu","p":["*%_"]}},{"k":"m","m":0,"n":"is-compile-time","s":{"p":["*%_"],"r":"Mu"}},{"n":"pre","s":{"p":["*%_"],"r":"Mu"},"k":"m","m":0},{"n":"post","s":{"r":"Mu","p":["*%_"]},"k":"m","m":0},{"k":"m","m":0,"s":{"p":["*%_"],"r":"Mu"},"n":"highexpect"},{"k":"s","m":0,"n":"BUILDALL","s":{"p":["@auto","%init","*%_"],"r":"Mu"}},{"m":0,"k":"m","s":{"p":["*%_"],"r":"Bool"},"n":"resume"},{"n":"reset-backtrace","s":{"p":["*%_"],"r":"Mu"},"m":0,"k":"m"},{"s":{"r":"Bool","p":["*%_"]},"n":"is-compile-time","k":"m","m":0},{"s":{"p":["$bt?","*%_"],"r":"Mu"},"n":"throw","m":0,"k":"m"},{"s":{"r":"Mu","p":["*%_"]},"n":"fail","k":"m","m":0},{"s":{"r":"Mu","p":["*%_"]},"n":"Str","m":1,"k":"m"},{"n":"Str","s":{"r":"Mu","p":["*%_"]},"k":"m","m":1},{"s":{"r":"Mu","p":["*%_"]},"n":"Str","k":"m","m":1},{"n":"die","s":{"r":"Mu","p":["*%_"]},"m":0,"k":"m"},{"m":0,"k":"m","n":"rethrow","s":{"p":["*%_"],"r":"Mu"}},{"k":"m","m":0,"s":{"p":["*%_"],"r":"Mu"},"n":"backtrace"},{"k":"m","m":1,"s":{"r":"Mu","p":["*%_"]},"n":"gist"},{"k":"m","m":1,"n":"gist","s":{"r":"Mu","p":["*%_"]}},{"k":"m","m":1,"n":"gist","s":{"r":"Mu","p":["*%_"]}},{"s":{"r":"Mu","p":["*%_"]},"n":"vault-backtrace","m":0,"k":"m"},{"n":"BUILDALL","s":{"p":["@auto","%init","*%_"],"r":"Mu"},"k":"s","m":0}],"k":"c","d":"TITLE\nclass X::Augment::NoSuchType\n\nSUBTITLE\nCompilation error due to augmenting a non-existing type\n\n    class X::Augment::NoSuchType does X::Comp { }\n\nThrown when trying to augment a type which doesn't exist.\n\nFor example\n\n    use MONKEY-TYPING;\n    augment class NoSuch { }\n\n\ndies with\n\n    You tried to augment class NoSuch, but it does not exist\n\n\n"},{"n":"X::OutOfRange","t":"X::OutOfRange","b":"A","a":[{"n":"$.what","t":"Mu","k":"v"},{"n":"$.got","t":"Mu","k":"v"},{"n":"$.range","t":"Mu","k":"v"},{"n":"$.comment","t":"Mu","k":"v"},{"k":"v","n":"$!ex","t":"Mu"},{"k":"v","t":"Mu","n":"$!bt"}],"k":"c","m":[{"m":0,"k":"m","n":"message","s":{"r":"Mu","p":["*%_"]}},{"n":"what","s":{"r":"Mu","p":["*%_"]},"m":0,"k":"m"},{"n":"got","s":{"r":"Mu","p":["*%_"]},"k":"m","m":0},{"k":"m","m":0,"s":{"p":["*%_"],"r":"Mu"},"n":"range"},{"s":{"r":"Mu","p":["*%_"]},"n":"comment","m":0,"k":"m"},{"s":{"p":["@auto","%init","*%_"],"r":"Mu"},"n":"BUILDALL","k":"s","m":0},{"s":{"r":"Bool","p":["*%_"]},"n":"resume","m":0,"k":"m"},{"m":0,"k":"m","s":{"r":"Mu","p":["*%_"]},"n":"reset-backtrace"},{"m":0,"k":"m","n":"is-compile-time","s":{"p":["*%_"],"r":"Bool"}},{"n":"throw","s":{"r":"Mu","p":["$bt?","*%_"]},"m":0,"k":"m"},{"s":{"r":"Mu","p":["*%_"]},"n":"fail","m":0,"k":"m"},{"n":"Str","s":{"p":["*%_"],"r":"Mu"},"k":"m","m":1},{"n":"Str","s":{"p":["*%_"],"r":"Mu"},"m":1,"k":"m"},{"s":{"r":"Mu","p":["*%_"]},"n":"Str","m":1,"k":"m"},{"k":"m","m":0,"n":"die","s":{"r":"Mu","p":["*%_"]}},{"k":"m","m":0,"s":{"p":["*%_"],"r":"Mu"},"n":"rethrow"},{"m":0,"k":"m","s":{"p":["*%_"],"r":"Mu"},"n":"backtrace"},{"m":1,"k":"m","s":{"r":"Mu","p":["*%_"]},"n":"gist"},{"s":{"p":["*%_"],"r":"Mu"},"n":"gist","m":1,"k":"m"},{"n":"gist","s":{"p":["*%_"],"r":"Mu"},"m":1,"k":"m"},{"s":{"r":"Mu","p":["*%_"]},"n":"vault-backtrace","m":0,"k":"m"},{"k":"s","m":0,"n":"BUILDALL","s":{"p":["@auto","%init","*%_"],"r":"Mu"}}],"d":"TITLE\nclass X::OutOfRange\n\nSUBTITLE\nError due to indexing outside of an allowed range\n\n    class X::OutOfRange is Exception { }\n\nGeneral error when something (for example an array index) is out of an\nallowed range.\n\nFor example\n\n    say 42[2];\n    CATCH { default { put .^name, ': ', .Str } };\n    # OUTPUT: «X::OutOfRange: Index out of range. Is: 2, should be in 0..0␤»\n\nsince scalars generally act as a one-element list.\n\n"},{"t":"X::Cannot::New","n":"X::Cannot::New","k":"c","m":[{"s":{"p":["*%_"],"r":"Mu"},"n":"message","k":"m","m":0},{"n":"class","s":{"p":["*%_"],"r":"Mu"},"k":"m","m":0},{"m":0,"k":"s","s":{"r":"Mu","p":["@auto","%init","*%_"]},"n":"BUILDALL"},{"m":0,"k":"m","n":"resume","s":{"p":["*%_"],"r":"Bool"}},{"n":"reset-backtrace","s":{"p":["*%_"],"r":"Mu"},"m":0,"k":"m"},{"m":0,"k":"m","n":"is-compile-time","s":{"r":"Bool","p":["*%_"]}},{"n":"throw","s":{"r":"Mu","p":["$bt?","*%_"]},"k":"m","m":0},{"n":"fail","s":{"r":"Mu","p":["*%_"]},"m":0,"k":"m"},{"s":{"r":"Mu","p":["*%_"]},"n":"Str","m":1,"k":"m"},{"n":"Str","s":{"p":["*%_"],"r":"Mu"},"k":"m","m":1},{"m":1,"k":"m","s":{"p":["*%_"],"r":"Mu"},"n":"Str"},{"k":"m","m":0,"s":{"r":"Mu","p":["*%_"]},"n":"die"},{"s":{"r":"Mu","p":["*%_"]},"n":"rethrow","m":0,"k":"m"},{"s":{"p":["*%_"],"r":"Mu"},"n":"backtrace","m":0,"k":"m"},{"s":{"p":["*%_"],"r":"Mu"},"n":"gist","k":"m","m":1},{"s":{"p":["*%_"],"r":"Mu"},"n":"gist","k":"m","m":1},{"n":"gist","s":{"p":["*%_"],"r":"Mu"},"m":1,"k":"m"},{"k":"m","m":0,"n":"vault-backtrace","s":{"r":"Mu","p":["*%_"]}},{"k":"s","m":0,"s":{"p":["@auto","%init","*%_"],"r":"Mu"},"n":"BUILDALL"}],"b":"A","a":[{"t":"Mu","n":"$.class","k":"v"},{"k":"v","t":"Mu","n":"$!ex"},{"k":"v","n":"$!bt","t":"Mu"}]},{"n":"X::Cannot::Junction","t":"X::Cannot::Junction","m":[{"s":{"r":"Mu","p":["*%_"]},"n":"message","m":0,"k":"m"},{"n":"junction","s":{"p":["*%_"],"r":"Mu"},"m":0,"k":"m"},{"s":{"r":"Mu","p":["*%_"]},"n":"for","m":0,"k":"m"},{"n":"BUILDALL","s":{"r":"Mu","p":["@auto","%init","*%_"]},"k":"s","m":0},{"n":"resume","s":{"p":["*%_"],"r":"Bool"},"k":"m","m":0},{"k":"m","m":0,"s":{"r":"Mu","p":["*%_"]},"n":"reset-backtrace"},{"s":{"p":["*%_"],"r":"Bool"},"n":"is-compile-time","m":0,"k":"m"},{"k":"m","m":0,"n":"throw","s":{"r":"Mu","p":["$bt?","*%_"]}},{"m":0,"k":"m","n":"fail","s":{"p":["*%_"],"r":"Mu"}},{"m":1,"k":"m","s":{"r":"Mu","p":["*%_"]},"n":"Str"},{"k":"m","m":1,"s":{"p":["*%_"],"r":"Mu"},"n":"Str"},{"s":{"r":"Mu","p":["*%_"]},"n":"Str","m":1,"k":"m"},{"n":"die","s":{"r":"Mu","p":["*%_"]},"m":0,"k":"m"},{"n":"rethrow","s":{"r":"Mu","p":["*%_"]},"m":0,"k":"m"},{"s":{"r":"Mu","p":["*%_"]},"n":"backtrace","k":"m","m":0},{"s":{"r":"Mu","p":["*%_"]},"n":"gist","m":1,"k":"m"},{"m":1,"k":"m","s":{"p":["*%_"],"r":"Mu"},"n":"gist"},{"k":"m","m":1,"s":{"p":["*%_"],"r":"Mu"},"n":"gist"},{"k":"m","m":0,"n":"vault-backtrace","s":{"p":["*%_"],"r":"Mu"}},{"m":0,"k":"s","n":"BUILDALL","s":{"p":["@auto","%init","*%_"],"r":"Mu"}}],"k":"c","a":[{"t":"Mu","n":"$.junction","k":"v"},{"k":"v","t":"Mu","n":"$.for"},{"k":"v","n":"$!ex","t":"Mu"},{"t":"Mu","n":"$!bt","k":"v"}],"b":"A"},{"k":"c","m":[{"n":"message","s":{"p":["*%_"],"r":"Mu"},"k":"m","m":0},{"m":0,"k":"m","s":{"r":"Mu","p":["*%_"]},"n":"action"},{"k":"m","m":0,"s":{"r":"Mu","p":["*%_"]},"n":"what"},{"n":"BUILDALL","s":{"p":["@auto","%init","*%_"],"r":"Mu"},"m":0,"k":"s"},{"s":{"r":"Bool","p":["*%_"]},"n":"resume","k":"m","m":0},{"s":{"p":["*%_"],"r":"Mu"},"n":"reset-backtrace","m":0,"k":"m"},{"n":"is-compile-time","s":{"p":["*%_"],"r":"Bool"},"m":0,"k":"m"},{"m":0,"k":"m","n":"throw","s":{"r":"Mu","p":["$bt?","*%_"]}},{"k":"m","m":0,"n":"fail","s":{"p":["*%_"],"r":"Mu"}},{"k":"m","m":1,"s":{"r":"Mu","p":["*%_"]},"n":"Str"},{"n":"Str","s":{"p":["*%_"],"r":"Mu"},"k":"m","m":1},{"k":"m","m":1,"s":{"r":"Mu","p":["*%_"]},"n":"Str"},{"m":0,"k":"m","n":"die","s":{"r":"Mu","p":["*%_"]}},{"k":"m","m":0,"n":"rethrow","s":{"r":"Mu","p":["*%_"]}},{"m":0,"k":"m","n":"backtrace","s":{"p":["*%_"],"r":"Mu"}},{"s":{"p":["*%_"],"r":"Mu"},"n":"gist","k":"m","m":1},{"s":{"p":["*%_"],"r":"Mu"},"n":"gist","m":1,"k":"m"},{"k":"m","m":1,"n":"gist","s":{"r":"Mu","p":["*%_"]}},{"k":"m","m":0,"s":{"p":["*%_"],"r":"Mu"},"n":"vault-backtrace"},{"k":"s","m":0,"n":"BUILDALL","s":{"r":"Mu","p":["@auto","%init","*%_"]}}],"a":[{"k":"v","n":"$.action","t":"Mu"},{"n":"$.what","t":"Mu","k":"v"},{"k":"v","n":"$!ex","t":"Mu"},{"k":"v","n":"$!bt","t":"Mu"}],"b":"A","t":"X::Cannot::Lazy","n":"X::Cannot::Lazy"},{"t":"X::Cannot::Capture","n":"X::Cannot::Capture","k":"c","m":[{"s":{"r":"Mu","p":["*%_"]},"n":"message","k":"m","m":0},{"n":"what","s":{"p":["*%_"],"r":"Mu"},"k":"m","m":0},{"m":0,"k":"s","s":{"p":["@auto","%init","*%_"],"r":"Mu"},"n":"BUILDALL"},{"s":{"r":"Bool","p":["*%_"]},"n":"resume","k":"m","m":0},{"k":"m","m":0,"s":{"r":"Mu","p":["*%_"]},"n":"reset-backtrace"},{"n":"is-compile-time","s":{"p":["*%_"],"r":"Bool"},"k":"m","m":0},{"s":{"r":"Mu","p":["$bt?","*%_"]},"n":"throw","m":0,"k":"m"},{"n":"fail","s":{"r":"Mu","p":["*%_"]},"k":"m","m":0},{"n":"Str","s":{"r":"Mu","p":["*%_"]},"k":"m","m":1},{"s":{"r":"Mu","p":["*%_"]},"n":"Str","k":"m","m":1},{"m":1,"k":"m","n":"Str","s":{"p":["*%_"],"r":"Mu"}},{"n":"die","s":{"r":"Mu","p":["*%_"]},"k":"m","m":0},{"k":"m","m":0,"s":{"p":["*%_"],"r":"Mu"},"n":"rethrow"},{"m":0,"k":"m","s":{"p":["*%_"],"r":"Mu"},"n":"backtrace"},{"m":1,"k":"m","s":{"r":"Mu","p":["*%_"]},"n":"gist"},{"s":{"p":["*%_"],"r":"Mu"},"n":"gist","k":"m","m":1},{"k":"m","m":1,"s":{"r":"Mu","p":["*%_"]},"n":"gist"},{"s":{"r":"Mu","p":["*%_"]},"n":"vault-backtrace","k":"m","m":0},{"s":{"r":"Mu","p":["@auto","%init","*%_"]},"n":"BUILDALL","k":"s","m":0}],"b":"A","a":[{"t":"Mu","n":"$.what","k":"v"},{"n":"$!ex","t":"Mu","k":"v"},{"k":"v","t":"Mu","n":"$!bt"}]},{"n":"X::Cannot::Empty","t":"X::Cannot::Empty","a":[{"t":"Mu","n":"$.action","k":"v"},{"n":"$.what","t":"Mu","k":"v"},{"k":"v","n":"$!ex","t":"Mu"},{"k":"v","n":"$!bt","t":"Mu"}],"b":"A","m":[{"n":"message","s":{"p":["*%_"],"r":"Mu"},"k":"m","m":0},{"k":"m","m":0,"n":"action","s":{"p":["*%_"],"r":"Mu"}},{"s":{"p":["*%_"],"r":"Mu"},"n":"what","m":0,"k":"m"},{"s":{"p":["@auto","%init","*%_"],"r":"Mu"},"n":"BUILDALL","k":"s","m":0},{"n":"resume","s":{"r":"Bool","p":["*%_"]},"m":0,"k":"m"},{"n":"reset-backtrace","s":{"p":["*%_"],"r":"Mu"},"k":"m","m":0},{"n":"is-compile-time","s":{"r":"Bool","p":["*%_"]},"m":0,"k":"m"},{"s":{"p":["$bt?","*%_"],"r":"Mu"},"n":"throw","k":"m","m":0},{"m":0,"k":"m","n":"fail","s":{"r":"Mu","p":["*%_"]}},{"n":"Str","s":{"r":"Mu","p":["*%_"]},"k":"m","m":1},{"s":{"p":["*%_"],"r":"Mu"},"n":"Str","m":1,"k":"m"},{"s":{"r":"Mu","p":["*%_"]},"n":"Str","k":"m","m":1},{"s":{"r":"Mu","p":["*%_"]},"n":"die","k":"m","m":0},{"n":"rethrow","s":{"r":"Mu","p":["*%_"]},"m":0,"k":"m"},{"s":{"p":["*%_"],"r":"Mu"},"n":"backtrace","k":"m","m":0},{"m":1,"k":"m","s":{"r":"Mu","p":["*%_"]},"n":"gist"},{"s":{"r":"Mu","p":["*%_"]},"n":"gist","m":1,"k":"m"},{"n":"gist","s":{"r":"Mu","p":["*%_"]},"k":"m","m":1},{"s":{"p":["*%_"],"r":"Mu"},"n":"vault-backtrace","m":0,"k":"m"},{"s":{"p":["@auto","%init","*%_"],"r":"Mu"},"n":"BUILDALL","m":0,"k":"s"}],"k":"c"},{"m":[{"s":{"p":["*%_"],"r":"Mu"},"n":"message","k":"m","m":0},{"n":"what","s":{"r":"Mu","p":["*%_"]},"m":0,"k":"m"},{"s":{"p":["*%_"],"r":"Mu"},"n":"using","k":"m","m":0},{"m":0,"k":"m","s":{"p":["*%_"],"r":"Mu"},"n":"suggestion"},{"k":"s","m":0,"s":{"r":"Mu","p":["@auto","%init","*%_"]},"n":"BUILDALL"},{"m":0,"k":"m","s":{"r":"Bool","p":["*%_"]},"n":"resume"},{"k":"m","m":0,"s":{"r":"Mu","p":["*%_"]},"n":"reset-backtrace"},{"k":"m","m":0,"s":{"r":"Bool","p":["*%_"]},"n":"is-compile-time"},{"k":"m","m":0,"s":{"r":"Mu","p":["$bt?","*%_"]},"n":"throw"},{"n":"fail","s":{"p":["*%_"],"r":"Mu"},"k":"m","m":0},{"s":{"r":"Mu","p":["*%_"]},"n":"Str","m":1,"k":"m"},{"n":"Str","s":{"r":"Mu","p":["*%_"]},"k":"m","m":1},{"k":"m","m":1,"s":{"r":"Mu","p":["*%_"]},"n":"Str"},{"k":"m","m":0,"n":"die","s":{"r":"Mu","p":["*%_"]}},{"n":"rethrow","s":{"p":["*%_"],"r":"Mu"},"m":0,"k":"m"},{"s":{"r":"Mu","p":["*%_"]},"n":"backtrace","m":0,"k":"m"},{"n":"gist","s":{"r":"Mu","p":["*%_"]},"k":"m","m":1},{"n":"gist","s":{"r":"Mu","p":["*%_"]},"k":"m","m":1},{"s":{"r":"Mu","p":["*%_"]},"n":"gist","k":"m","m":1},{"s":{"p":["*%_"],"r":"Mu"},"n":"vault-backtrace","m":0,"k":"m"},{"s":{"r":"Mu","p":["@auto","%init","*%_"]},"n":"BUILDALL","k":"s","m":0}],"k":"c","a":[{"t":"Mu","n":"$.what","k":"v"},{"t":"Mu","n":"$.using","k":"v"},{"k":"v","t":"Mu","n":"$.suggestion"},{"n":"$!ex","t":"Mu","k":"v"},{"k":"v","n":"$!bt","t":"Mu"}],"b":"A","t":"X::Cannot::Map","n":"X::Cannot::Map"},{"m":[{"n":"message","s":{"r":"Mu","p":["*%_"]},"m":0,"k":"m"},{"m":0,"k":"m","s":{"r":"Mu","p":["*%_"]},"n":"sorry_heading"},{"k":"m","m":0,"n":"SET_FILE_LINE","s":{"p":["$file","$line","*%_"],"r":"Mu"}},{"k":"m","m":1,"s":{"p":["*%_"],"r":"Mu"},"n":"gist"},{"k":"m","m":1,"n":"gist","s":{"p":["*%_"],"r":"Mu"}},{"s":{"r":"Mu","p":["*%_"]},"n":"gist","m":1,"k":"m"},{"k":"m","m":1,"s":{"r":"Mu","p":[":$sorry = Bool::True",":$expect = Bool::True","*%_"]},"n":"gist"},{"m":0,"k":"m","s":{"p":["*%_"],"r":"Mu"},"n":"filename"},{"m":0,"k":"m","s":{"p":["*%_"],"r":"Mu"},"n":"pos"},{"k":"m","m":0,"s":{"r":"Mu","p":["*%_"]},"n":"line"},{"k":"m","m":0,"n":"column","s":{"p":["*%_"],"r":"Mu"}},{"k":"m","m":0,"n":"modules","s":{"p":["*%_"],"r":"Mu"}},{"k":"m","m":0,"s":{"r":"Mu","p":["*%_"]},"n":"is-compile-time"},{"k":"m","m":0,"s":{"p":["*%_"],"r":"Mu"},"n":"pre"},{"m":0,"k":"m","n":"post","s":{"r":"Mu","p":["*%_"]}},{"n":"highexpect","s":{"r":"Mu","p":["*%_"]},"m":0,"k":"m"},{"m":0,"k":"s","n":"BUILDALL","s":{"p":["@auto","%init","*%_"],"r":"Mu"}},{"m":0,"k":"m","n":"resume","s":{"p":["*%_"],"r":"Bool"}},{"n":"reset-backtrace","s":{"r":"Mu","p":["*%_"]},"m":0,"k":"m"},{"s":{"p":["*%_"],"r":"Bool"},"n":"is-compile-time","m":0,"k":"m"},{"m":0,"k":"m","n":"throw","s":{"p":["$bt?","*%_"],"r":"Mu"}},{"s":{"r":"Mu","p":["*%_"]},"n":"fail","k":"m","m":0},{"k":"m","m":1,"s":{"r":"Mu","p":["*%_"]},"n":"Str"},{"s":{"p":["*%_"],"r":"Mu"},"n":"Str","m":1,"k":"m"},{"m":1,"k":"m","s":{"p":["*%_"],"r":"Mu"},"n":"Str"},{"n":"die","s":{"r":"Mu","p":["*%_"]},"m":0,"k":"m"},{"k":"m","m":0,"s":{"r":"Mu","p":["*%_"]},"n":"rethrow"},{"s":{"r":"Mu","p":["*%_"]},"n":"backtrace","k":"m","m":0},{"m":1,"k":"m","n":"gist","s":{"r":"Mu","p":["*%_"]}},{"n":"gist","s":{"r":"Mu","p":["*%_"]},"k":"m","m":1},{"m":1,"k":"m","n":"gist","s":{"r":"Mu","p":["*%_"]}},{"s":{"p":["*%_"],"r":"Mu"},"n":"vault-backtrace","m":0,"k":"m"},{"m":0,"k":"s","s":{"p":["@auto","%init","*%_"],"r":"Mu"},"n":"BUILDALL"}],"k":"c","b":"A","a":[{"n":"$.filename","t":"Mu","k":"v"},{"k":"v","t":"Mu","n":"$.pos"},{"k":"v","t":"Mu","n":"$.line"},{"k":"v","n":"$.column","t":"Mu"},{"n":"@.modules","t":"Positional","k":"v"},{"k":"v","n":"$.is-compile-time","t":"Mu"},{"k":"v","t":"Mu","n":"$.pre"},{"k":"v","t":"Mu","n":"$.post"},{"t":"Positional","n":"@.highexpect","k":"v"},{"k":"v","t":"Mu","n":"$!ex"},{"n":"$!bt","t":"Mu","k":"v"}],"t":"X::Backslash::NonVariableDollar","n":"X::Backslash::NonVariableDollar"},{"b":"A","a":[{"k":"v","t":"Mu","n":"$.sequence"},{"k":"v","t":"Mu","n":"$.suggestion"},{"n":"$.filename","t":"Mu","k":"v"},{"k":"v","t":"Mu","n":"$.pos"},{"k":"v","n":"$.line","t":"Mu"},{"k":"v","t":"Mu","n":"$.column"},{"n":"@.modules","t":"Positional","k":"v"},{"k":"v","n":"$.is-compile-time","t":"Mu"},{"k":"v","t":"Mu","n":"$.pre"},{"n":"$.post","t":"Mu","k":"v"},{"n":"@.highexpect","t":"Positional","k":"v"},{"t":"Mu","n":"$!ex","k":"v"},{"k":"v","n":"$!bt","t":"Mu"}],"k":"c","m":[{"k":"m","m":0,"s":{"r":"Mu","p":["*%_"]},"n":"message"},{"s":{"r":"Mu","p":["*%_"]},"n":"sorry_heading","m":0,"k":"m"},{"m":0,"k":"m","n":"SET_FILE_LINE","s":{"r":"Mu","p":["$file","$line","*%_"]}},{"k":"m","m":1,"n":"gist","s":{"p":["*%_"],"r":"Mu"}},{"k":"m","m":1,"n":"gist","s":{"r":"Mu","p":["*%_"]}},{"n":"gist","s":{"r":"Mu","p":["*%_"]},"k":"m","m":1},{"k":"m","m":1,"n":"gist","s":{"r":"Mu","p":[":$sorry = Bool::True",":$expect = Bool::True","*%_"]}},{"n":"sequence","s":{"p":["*%_"],"r":"Mu"},"k":"m","m":0},{"s":{"p":["*%_"],"r":"Mu"},"n":"suggestion","m":0,"k":"m"},{"s":{"p":["*%_"],"r":"Mu"},"n":"filename","k":"m","m":0},{"s":{"r":"Mu","p":["*%_"]},"n":"pos","k":"m","m":0},{"k":"m","m":0,"n":"line","s":{"r":"Mu","p":["*%_"]}},{"k":"m","m":0,"n":"column","s":{"r":"Mu","p":["*%_"]}},{"s":{"p":["*%_"],"r":"Mu"},"n":"modules","m":0,"k":"m"},{"m":0,"k":"m","s":{"r":"Mu","p":["*%_"]},"n":"is-compile-time"},{"m":0,"k":"m","s":{"p":["*%_"],"r":"Mu"},"n":"pre"},{"n":"post","s":{"r":"Mu","p":["*%_"]},"k":"m","m":0},{"m":0,"k":"m","n":"highexpect","s":{"p":["*%_"],"r":"Mu"}},{"n":"BUILDALL","s":{"r":"Mu","p":["@auto","%init","*%_"]},"k":"s","m":0},{"m":0,"k":"m","s":{"r":"Bool","p":["*%_"]},"n":"resume"},{"n":"reset-backtrace","s":{"r":"Mu","p":["*%_"]},"m":0,"k":"m"},{"n":"is-compile-time","s":{"r":"Bool","p":["*%_"]},"m":0,"k":"m"},{"s":{"p":["$bt?","*%_"],"r":"Mu"},"n":"throw","m":0,"k":"m"},{"n":"fail","s":{"p":["*%_"],"r":"Mu"},"k":"m","m":0},{"s":{"r":"Mu","p":["*%_"]},"n":"Str","k":"m","m":1},{"m":1,"k":"m","n":"Str","s":{"p":["*%_"],"r":"Mu"}},{"n":"Str","s":{"p":["*%_"],"r":"Mu"},"m":1,"k":"m"},{"k":"m","m":0,"n":"die","s":{"r":"Mu","p":["*%_"]}},{"k":"m","m":0,"n":"rethrow","s":{"p":["*%_"],"r":"Mu"}},{"s":{"p":["*%_"],"r":"Mu"},"n":"backtrace","k":"m","m":0},{"n":"gist","s":{"p":["*%_"],"r":"Mu"},"k":"m","m":1},{"s":{"p":["*%_"],"r":"Mu"},"n":"gist","m":1,"k":"m"},{"n":"gist","s":{"p":["*%_"],"r":"Mu"},"k":"m","m":1},{"n":"vault-backtrace","s":{"r":"Mu","p":["*%_"]},"k":"m","m":0},{"m":0,"k":"s","n":"BUILDALL","s":{"p":["@auto","%init","*%_"],"r":"Mu"}}],"t":"X::Backslash::UnrecognizedSequence","n":"X::Backslash::UnrecognizedSequence"},{"k":"c","m":[{"k":"m","m":0,"s":{"r":"Mu","p":["*%_"]},"n":"message"},{"k":"m","m":0,"n":"sorry_heading","s":{"p":["*%_"],"r":"Mu"}},{"k":"m","m":0,"s":{"p":["$file","$line","*%_"],"r":"Mu"},"n":"SET_FILE_LINE"},{"m":1,"k":"m","n":"gist","s":{"r":"Mu","p":["*%_"]}},{"m":1,"k":"m","n":"gist","s":{"r":"Mu","p":["*%_"]}},{"n":"gist","s":{"p":["*%_"],"r":"Mu"},"k":"m","m":1},{"k":"m","m":1,"s":{"r":"Mu","p":[":$sorry = Bool::True",":$expect = Bool::True","*%_"]},"n":"gist"},{"k":"m","m":0,"s":{"r":"Mu","p":["*%_"]},"n":"typename"},{"m":0,"k":"m","s":{"r":"Mu","p":["*%_"]},"n":"suggestions"},{"k":"m","m":0,"n":"filename","s":{"r":"Mu","p":["*%_"]}},{"k":"m","m":0,"n":"pos","s":{"p":["*%_"],"r":"Mu"}},{"k":"m","m":0,"n":"line","s":{"r":"Mu","p":["*%_"]}},{"n":"column","s":{"r":"Mu","p":["*%_"]},"m":0,"k":"m"},{"s":{"p":["*%_"],"r":"Mu"},"n":"modules","k":"m","m":0},{"s":{"r":"Mu","p":["*%_"]},"n":"is-compile-time","m":0,"k":"m"},{"k":"m","m":0,"n":"pre","s":{"p":["*%_"],"r":"Mu"}},{"n":"post","s":{"r":"Mu","p":["*%_"]},"k":"m","m":0},{"m":0,"k":"m","s":{"p":["*%_"],"r":"Mu"},"n":"highexpect"},{"s":{"p":["@auto","%init","*%_"],"r":"Mu"},"n":"BUILDALL","m":0,"k":"s"},{"s":{"p":["*%_"],"r":"Bool"},"n":"resume","k":"m","m":0},{"m":0,"k":"m","s":{"p":["*%_"],"r":"Mu"},"n":"reset-backtrace"},{"k":"m","m":0,"s":{"p":["*%_"],"r":"Bool"},"n":"is-compile-time"},{"s":{"p":["$bt?","*%_"],"r":"Mu"},"n":"throw","k":"m","m":0},{"k":"m","m":0,"s":{"p":["*%_"],"r":"Mu"},"n":"fail"},{"s":{"r":"Mu","p":["*%_"]},"n":"Str","k":"m","m":1},{"k":"m","m":1,"s":{"r":"Mu","p":["*%_"]},"n":"Str"},{"s":{"r":"Mu","p":["*%_"]},"n":"Str","k":"m","m":1},{"m":0,"k":"m","s":{"p":["*%_"],"r":"Mu"},"n":"die"},{"k":"m","m":0,"s":{"p":["*%_"],"r":"Mu"},"n":"rethrow"},{"k":"m","m":0,"s":{"r":"Mu","p":["*%_"]},"n":"backtrace"},{"m":1,"k":"m","n":"gist","s":{"r":"Mu","p":["*%_"]}},{"m":1,"k":"m","n":"gist","s":{"p":["*%_"],"r":"Mu"}},{"s":{"p":["*%_"],"r":"Mu"},"n":"gist","k":"m","m":1},{"m":0,"k":"m","n":"vault-backtrace","s":{"p":["*%_"],"r":"Mu"}},{"n":"BUILDALL","s":{"r":"Mu","p":["@auto","%init","*%_"]},"m":0,"k":"s"}],"a":[{"k":"v","t":"Mu","n":"$.typename"},{"k":"v","t":"Positional","n":"@.suggestions"},{"n":"$.filename","t":"Mu","k":"v"},{"t":"Mu","n":"$.pos","k":"v"},{"k":"v","n":"$.line","t":"Mu"},{"k":"v","t":"Mu","n":"$.column"},{"k":"v","n":"@.modules","t":"Positional"},{"t":"Mu","n":"$.is-compile-time","k":"v"},{"n":"$.pre","t":"Mu","k":"v"},{"t":"Mu","n":"$.post","k":"v"},{"t":"Positional","n":"@.highexpect","k":"v"},{"k":"v","n":"$!ex","t":"Mu"},{"k":"v","n":"$!bt","t":"Mu"}],"b":"A","t":"X::InvalidType","n":"X::InvalidType"},{"k":"c","m":[{"m":0,"k":"m","s":{"p":["*%_"],"r":"Mu"},"n":"message"},{"n":"localizer","s":{"p":["*%_"],"r":"Mu"},"k":"m","m":0},{"k":"s","m":0,"n":"BUILDALL","s":{"r":"Mu","p":["@auto","%init","*%_"]}},{"s":{"p":["*%_"],"r":"Bool"},"n":"resume","m":0,"k":"m"},{"k":"m","m":0,"n":"reset-backtrace","s":{"r":"Mu","p":["*%_"]}},{"m":0,"k":"m","s":{"r":"Bool","p":["*%_"]},"n":"is-compile-time"},{"k":"m","m":0,"s":{"p":["$bt?","*%_"],"r":"Mu"},"n":"throw"},{"m":0,"k":"m","s":{"p":["*%_"],"r":"Mu"},"n":"fail"},{"m":1,"k":"m","n":"Str","s":{"p":["*%_"],"r":"Mu"}},{"n":"Str","s":{"r":"Mu","p":["*%_"]},"k":"m","m":1},{"s":{"p":["*%_"],"r":"Mu"},"n":"Str","m":1,"k":"m"},{"s":{"r":"Mu","p":["*%_"]},"n":"die","k":"m","m":0},{"k":"m","m":0,"n":"rethrow","s":{"p":["*%_"],"r":"Mu"}},{"k":"m","m":0,"n":"backtrace","s":{"r":"Mu","p":["*%_"]}},{"s":{"r":"Mu","p":["*%_"]},"n":"gist","m":1,"k":"m"},{"n":"gist","s":{"r":"Mu","p":["*%_"]},"k":"m","m":1},{"m":1,"k":"m","s":{"r":"Mu","p":["*%_"]},"n":"gist"},{"m":0,"k":"m","n":"vault-backtrace","s":{"p":["*%_"],"r":"Mu"}},{"n":"BUILDALL","s":{"r":"Mu","p":["@auto","%init","*%_"]},"m":0,"k":"s"}],"a":[{"k":"v","t":"Mu","n":"$.localizer"},{"n":"$!ex","t":"Mu","k":"v"},{"t":"Mu","n":"$!bt","k":"v"}],"b":"A","t":"X::Localizer::NoContainer","n":"X::Localizer::NoContainer"},{"m":[{"n":"message","s":{"p":["*%_"],"r":"Mu"},"m":0,"k":"m"},{"m":0,"k":"s","n":"BUILDALL","s":{"p":["@auto","%init","*%_"],"r":"Mu"}},{"k":"m","m":0,"s":{"p":["*%_"],"r":"Bool"},"n":"resume"},{"k":"m","m":0,"n":"reset-backtrace","s":{"r":"Mu","p":["*%_"]}},{"k":"m","m":0,"n":"is-compile-time","s":{"r":"Bool","p":["*%_"]}},{"n":"throw","s":{"p":["$bt?","*%_"],"r":"Mu"},"m":0,"k":"m"},{"k":"m","m":0,"n":"fail","s":{"p":["*%_"],"r":"Mu"}},{"m":1,"k":"m","n":"Str","s":{"p":["*%_"],"r":"Mu"}},{"n":"Str","s":{"r":"Mu","p":["*%_"]},"k":"m","m":1},{"k":"m","m":1,"n":"Str","s":{"r":"Mu","p":["*%_"]}},{"k":"m","m":0,"n":"die","s":{"p":["*%_"],"r":"Mu"}},{"k":"m","m":0,"s":{"r":"Mu","p":["*%_"]},"n":"rethrow"},{"m":0,"k":"m","s":{"r":"Mu","p":["*%_"]},"n":"backtrace"},{"n":"gist","s":{"r":"Mu","p":["*%_"]},"m":1,"k":"m"},{"k":"m","m":1,"s":{"r":"Mu","p":["*%_"]},"n":"gist"},{"m":1,"k":"m","s":{"p":["*%_"],"r":"Mu"},"n":"gist"},{"n":"vault-backtrace","s":{"r":"Mu","p":["*%_"]},"k":"m","m":0},{"n":"BUILDALL","s":{"p":["@auto","%init","*%_"],"r":"Mu"},"k":"s","m":0}],"k":"c","b":"A","a":[{"t":"Mu","n":"$!ex","k":"v"},{"t":"Mu","n":"$!bt","k":"v"}],"t":"X::Numeric::Underflow","n":"X::Numeric::Underflow"},{"a":[{"t":"Mu","n":"$.target","k":"v"},{"k":"v","t":"Mu","n":"$.reason"},{"t":"Mu","n":"$.source","k":"v"},{"k":"v","n":"$!ex","t":"Mu"},{"k":"v","t":"Mu","n":"$!bt"}],"b":"A","k":"c","m":[{"s":{"r":"Mu","p":["*%_"]},"n":"message","m":0,"k":"m"},{"m":0,"k":"m","s":{"p":["*%_"],"r":"Mu"},"n":"target"},{"k":"m","m":0,"s":{"r":"Mu","p":["*%_"]},"n":"reason"},{"k":"m","m":0,"s":{"r":"Mu","p":["*%_"]},"n":"source"},{"m":0,"k":"s","s":{"r":"Mu","p":["@auto","%init","*%_"]},"n":"BUILDALL"},{"s":{"r":"Bool","p":["*%_"]},"n":"resume","k":"m","m":0},{"s":{"r":"Mu","p":["*%_"]},"n":"reset-backtrace","k":"m","m":0},{"k":"m","m":0,"s":{"p":["*%_"],"r":"Bool"},"n":"is-compile-time"},{"k":"m","m":0,"n":"throw","s":{"p":["$bt?","*%_"],"r":"Mu"}},{"k":"m","m":0,"n":"fail","s":{"p":["*%_"],"r":"Mu"}},{"k":"m","m":1,"n":"Str","s":{"r":"Mu","p":["*%_"]}},{"n":"Str","s":{"r":"Mu","p":["*%_"]},"k":"m","m":1},{"m":1,"k":"m","s":{"r":"Mu","p":["*%_"]},"n":"Str"},{"n":"die","s":{"p":["*%_"],"r":"Mu"},"m":0,"k":"m"},{"m":0,"k":"m","s":{"r":"Mu","p":["*%_"]},"n":"rethrow"},{"s":{"r":"Mu","p":["*%_"]},"n":"backtrace","k":"m","m":0},{"s":{"r":"Mu","p":["*%_"]},"n":"gist","m":1,"k":"m"},{"s":{"p":["*%_"],"r":"Mu"},"n":"gist","m":1,"k":"m"},{"s":{"p":["*%_"],"r":"Mu"},"n":"gist","k":"m","m":1},{"k":"m","m":0,"s":{"r":"Mu","p":["*%_"]},"n":"vault-backtrace"},{"n":"BUILDALL","s":{"p":["@auto","%init","*%_"],"r":"Mu"},"k":"s","m":0}],"t":"X::Numeric::CannotConvert","n":"X::Numeric::CannotConvert"},{"k":"c","m":[{"s":{"r":"Mu","p":["*%_"]},"n":"message","k":"m","m":0},{"m":0,"k":"s","n":"BUILDALL","s":{"r":"Mu","p":["@auto","%init","*%_"]}},{"k":"m","m":0,"n":"resume","s":{"r":"Bool","p":["*%_"]}},{"k":"m","m":0,"s":{"p":["*%_"],"r":"Mu"},"n":"reset-backtrace"},{"s":{"r":"Bool","p":["*%_"]},"n":"is-compile-time","k":"m","m":0},{"n":"throw","s":{"p":["$bt?","*%_"],"r":"Mu"},"m":0,"k":"m"},{"k":"m","m":0,"s":{"r":"Mu","p":["*%_"]},"n":"fail"},{"m":1,"k":"m","n":"Str","s":{"r":"Mu","p":["*%_"]}},{"n":"Str","s":{"r":"Mu","p":["*%_"]},"m":1,"k":"m"},{"m":1,"k":"m","s":{"r":"Mu","p":["*%_"]},"n":"Str"},{"s":{"p":["*%_"],"r":"Mu"},"n":"die","m":0,"k":"m"},{"n":"rethrow","s":{"r":"Mu","p":["*%_"]},"m":0,"k":"m"},{"m":0,"k":"m","n":"backtrace","s":{"r":"Mu","p":["*%_"]}},{"n":"gist","s":{"p":["*%_"],"r":"Mu"},"m":1,"k":"m"},{"n":"gist","s":{"r":"Mu","p":["*%_"]},"m":1,"k":"m"},{"n":"gist","s":{"p":["*%_"],"r":"Mu"},"k":"m","m":1},{"s":{"r":"Mu","p":["*%_"]},"n":"vault-backtrace","m":0,"k":"m"},{"m":0,"k":"s","n":"BUILDALL","s":{"r":"Mu","p":["@auto","%init","*%_"]}}],"a":[{"k":"v","t":"Mu","n":"$!ex"},{"k":"v","n":"$!bt","t":"Mu"}],"b":"A","t":"X::Numeric::Overflow","n":"X::Numeric::Overflow"},{"b":"A","a":[{"k":"v","t":"Mu","n":"$.num"},{"k":"v","n":"$.base","t":"Mu"},{"t":"Mu","n":"$!ex","k":"v"},{"n":"$!bt","t":"Mu","k":"v"}],"k":"c","m":[{"m":0,"k":"m","n":"message","s":{"p":["*%_"],"r":"Mu"}},{"s":{"r":"Mu","p":["*%_"]},"n":"num","k":"m","m":0},{"s":{"r":"Mu","p":["*%_"]},"n":"base","k":"m","m":0},{"n":"BUILDALL","s":{"p":["@auto","%init","*%_"],"r":"Mu"},"m":0,"k":"s"},{"k":"m","m":0,"n":"resume","s":{"r":"Bool","p":["*%_"]}},{"s":{"r":"Mu","p":["*%_"]},"n":"reset-backtrace","k":"m","m":0},{"n":"is-compile-time","s":{"p":["*%_"],"r":"Bool"},"k":"m","m":0},{"n":"throw","s":{"r":"Mu","p":["$bt?","*%_"]},"k":"m","m":0},{"n":"fail","s":{"r":"Mu","p":["*%_"]},"k":"m","m":0},{"n":"Str","s":{"r":"Mu","p":["*%_"]},"m":1,"k":"m"},{"s":{"p":["*%_"],"r":"Mu"},"n":"Str","m":1,"k":"m"},{"s":{"p":["*%_"],"r":"Mu"},"n":"Str","k":"m","m":1},{"k":"m","m":0,"s":{"r":"Mu","p":["*%_"]},"n":"die"},{"m":0,"k":"m","n":"rethrow","s":{"r":"Mu","p":["*%_"]}},{"n":"backtrace","s":{"r":"Mu","p":["*%_"]},"m":0,"k":"m"},{"s":{"r":"Mu","p":["*%_"]},"n":"gist","m":1,"k":"m"},{"n":"gist","s":{"p":["*%_"],"r":"Mu"},"m":1,"k":"m"},{"m":1,"k":"m","s":{"r":"Mu","p":["*%_"]},"n":"gist"},{"m":0,"k":"m","n":"vault-backtrace","s":{"r":"Mu","p":["*%_"]}},{"n":"BUILDALL","s":{"p":["@auto","%init","*%_"],"r":"Mu"},"m":0,"k":"s"}],"t":"X::Numeric::Confused","n":"X::Numeric::Confused"},{"m":[{"k":"m","m":0,"n":"message","s":{"r":"Mu","p":["*%_"]}},{"m":0,"k":"m","s":{"p":["*%_"],"r":"Mu"},"n":"using"},{"n":"details","s":{"r":"Mu","p":["*%_"]},"k":"m","m":0},{"n":"numerator","s":{"r":"Mu","p":["*%_"]},"k":"m","m":0},{"n":"BUILDALL","s":{"r":"Mu","p":["@auto","%init","*%_"]},"k":"s","m":0},{"k":"m","m":0,"s":{"p":["*%_"],"r":"Bool"},"n":"resume"},{"k":"m","m":0,"n":"reset-backtrace","s":{"r":"Mu","p":["*%_"]}},{"k":"m","m":0,"s":{"p":["*%_"],"r":"Bool"},"n":"is-compile-time"},{"m":0,"k":"m","n":"throw","s":{"r":"Mu","p":["$bt?","*%_"]}},{"n":"fail","s":{"r":"Mu","p":["*%_"]},"k":"m","m":0},{"k":"m","m":1,"s":{"r":"Mu","p":["*%_"]},"n":"Str"},{"m":1,"k":"m","s":{"p":["*%_"],"r":"Mu"},"n":"Str"},{"n":"Str","s":{"p":["*%_"],"r":"Mu"},"m":1,"k":"m"},{"s":{"r":"Mu","p":["*%_"]},"n":"die","m":0,"k":"m"},{"k":"m","m":0,"s":{"p":["*%_"],"r":"Mu"},"n":"rethrow"},{"s":{"r":"Mu","p":["*%_"]},"n":"backtrace","m":0,"k":"m"},{"m":1,"k":"m","s":{"r":"Mu","p":["*%_"]},"n":"gist"},{"m":1,"k":"m","s":{"r":"Mu","p":["*%_"]},"n":"gist"},{"s":{"p":["*%_"],"r":"Mu"},"n":"gist","k":"m","m":1},{"n":"vault-backtrace","s":{"r":"Mu","p":["*%_"]},"k":"m","m":0},{"k":"s","m":0,"n":"BUILDALL","s":{"p":["@auto","%init","*%_"],"r":"Mu"}}],"k":"c","b":"A","a":[{"k":"v","t":"Mu","n":"$.using"},{"k":"v","t":"Mu","n":"$.details"},{"n":"$.numerator","t":"Mu","k":"v"},{"t":"Mu","n":"$!ex","k":"v"},{"k":"v","t":"Mu","n":"$!bt"}],"t":"X::Numeric::DivideByZero","n":"X::Numeric::DivideByZero"},{"t":"X::Numeric::Real","n":"X::Numeric::Real","d":"TITLE\nclass X::Numeric::Real\n\nSUBTITLE\nError while trying to coerce a number to a Real type\n\n    class X::Numeric::Real is Exception { }\n\nOccurs when an attempt to coerce a Numeric to a Real, Num, Int or Rat fails\n(due to a number with a nonzero imaginary part, for instance).\n\nFor example\n\n    say (1+2i).Int;\n    CATCH { default { put .^name, ': ', .Str } };\n    # OUTPUT: «X::Numeric::Real: Can not convert 1+2i to Int: imaginary part not zero␤»\n\n","b":"A","a":[{"n":"$.target","t":"Mu","k":"v"},{"k":"v","n":"$.reason","t":"Mu"},{"t":"Mu","n":"$.source","k":"v"},{"k":"v","t":"Mu","n":"$!ex"},{"t":"Mu","n":"$!bt","k":"v"}],"m":[{"m":0,"k":"s","s":{"p":["@auto","%init","*%_"],"r":"Mu"},"n":"BUILDALL"},{"s":{"p":["*%_"],"r":"Mu"},"n":"message","k":"m","m":0},{"n":"reason","s":{"p":["*%_"],"r":"Mu"},"m":0,"k":"m"},{"s":{"p":["*%_"],"r":"Mu"},"n":"source","k":"m","m":0},{"s":{"r":"Mu","p":["*%_"]},"n":"target","k":"m","m":0},{"s":{"p":["@auto","%init","*%_"],"r":"Mu"},"n":"BUILDALL","k":"s","m":0},{"m":0,"k":"m","n":"resume","s":{"r":"Bool","p":["*%_"]}},{"m":0,"k":"m","n":"reset-backtrace","s":{"p":["*%_"],"r":"Mu"}},{"m":0,"k":"m","n":"is-compile-time","s":{"p":["*%_"],"r":"Bool"}},{"k":"m","m":0,"n":"throw","s":{"p":["$bt?","*%_"],"r":"Mu"}},{"s":{"r":"Mu","p":["*%_"]},"n":"fail","k":"m","m":0},{"k":"m","m":1,"n":"Str","s":{"p":["*%_"],"r":"Mu"}},{"k":"m","m":1,"s":{"p":["*%_"],"r":"Mu"},"n":"Str"},{"s":{"r":"Mu","p":["*%_"]},"n":"Str","k":"m","m":1},{"n":"die","s":{"r":"Mu","p":["*%_"]},"m":0,"k":"m"},{"s":{"p":["*%_"],"r":"Mu"},"n":"rethrow","m":0,"k":"m"},{"s":{"r":"Mu","p":["*%_"]},"n":"backtrace","k":"m","m":0},{"k":"m","m":1,"s":{"p":["*%_"],"r":"Mu"},"n":"gist"},{"s":{"p":["*%_"],"r":"Mu"},"n":"gist","k":"m","m":1},{"n":"gist","s":{"r":"Mu","p":["*%_"]},"k":"m","m":1},{"k":"m","m":0,"s":{"p":["*%_"],"r":"Mu"},"n":"vault-backtrace"},{"n":"BUILDALL","s":{"r":"Mu","p":["@auto","%init","*%_"]},"m":0,"k":"s"}],"k":"c"},{"t":"X::Phaser::PrePost","n":"X::Phaser::PrePost","d":"TITLE\nclass X::Phaser::PrePost\n\nSUBTITLE\nError due to a false return value of a PRE/POST phaser\n\n    class X::Phaser::PrePost is Exception { }\n\n\nThrown when the condition inside a PRE or POST phaser evaluate to a false\nvalue.\n\nFor example\n\n    sub f($x) { PRE { $x ~~ Int } };\n    f \"foo\";\n    CATCH { default { put .^name, ': ', .Str } };\n    # OUTPUT: X::Phaser::PrePost: Precondition '{ $x ~~ Int }' failed«␤»\n\n","k":"c","m":[{"s":{"p":["*%_"],"r":"Mu"},"n":"message","k":"m","m":0},{"m":0,"k":"m","s":{"p":["*%_"],"r":"Mu"},"n":"phaser"},{"n":"condition","s":{"p":["*%_"],"r":"Mu"},"m":0,"k":"m"},{"s":{"p":["@auto","%init","*%_"],"r":"Mu"},"n":"BUILDALL","m":0,"k":"s"},{"n":"resume","s":{"r":"Bool","p":["*%_"]},"m":0,"k":"m"},{"s":{"p":["*%_"],"r":"Mu"},"n":"reset-backtrace","k":"m","m":0},{"s":{"p":["*%_"],"r":"Bool"},"n":"is-compile-time","k":"m","m":0},{"k":"m","m":0,"n":"throw","s":{"r":"Mu","p":["$bt?","*%_"]}},{"k":"m","m":0,"n":"fail","s":{"p":["*%_"],"r":"Mu"}},{"k":"m","m":1,"s":{"p":["*%_"],"r":"Mu"},"n":"Str"},{"k":"m","m":1,"s":{"r":"Mu","p":["*%_"]},"n":"Str"},{"m":1,"k":"m","n":"Str","s":{"r":"Mu","p":["*%_"]}},{"m":0,"k":"m","s":{"r":"Mu","p":["*%_"]},"n":"die"},{"m":0,"k":"m","n":"rethrow","s":{"p":["*%_"],"r":"Mu"}},{"k":"m","m":0,"s":{"p":["*%_"],"r":"Mu"},"n":"backtrace"},{"m":1,"k":"m","n":"gist","s":{"p":["*%_"],"r":"Mu"}},{"k":"m","m":1,"s":{"r":"Mu","p":["*%_"]},"n":"gist"},{"k":"m","m":1,"s":{"p":["*%_"],"r":"Mu"},"n":"gist"},{"s":{"p":["*%_"],"r":"Mu"},"n":"vault-backtrace","m":0,"k":"m"},{"k":"s","m":0,"s":{"r":"Mu","p":["@auto","%init","*%_"]},"n":"BUILDALL"}],"a":[{"k":"v","t":"Mu","n":"$.phaser"},{"n":"$.condition","t":"Mu","k":"v"},{"n":"$!ex","t":"Mu","k":"v"},{"k":"v","n":"$!bt","t":"Mu"}],"b":"A"},{"d":"TITLE\nclass X::Phaser::Multiple\n\nSUBTITLE\nCompilation error due to multiple phasers of the same type\n\n    class X::Phaser::Multiple does X::Comp { }\n\nThrown when multiple phasers of the same type occur in a block, but only\none is allowed (for example CATCH or CONTROL).\n\nFor example\n\n    CATCH { }; CATCH { }\n\n\ndies with\n\n    ===SORRY!===\n    Only one CATCH block is allowed\n\n\n","m":[{"k":"m","m":0,"s":{"p":["*%_"],"r":"Mu"},"n":"message"},{"m":0,"k":"m","s":{"r":"Mu","p":["*%_"]},"n":"sorry_heading"},{"m":0,"k":"m","s":{"r":"Mu","p":["$file","$line","*%_"]},"n":"SET_FILE_LINE"},{"s":{"r":"Mu","p":["*%_"]},"n":"gist","m":1,"k":"m"},{"n":"gist","s":{"r":"Mu","p":["*%_"]},"k":"m","m":1},{"s":{"r":"Mu","p":["*%_"]},"n":"gist","m":1,"k":"m"},{"n":"gist","s":{"r":"Mu","p":[":$sorry = Bool::True",":$expect = Bool::True","*%_"]},"m":1,"k":"m"},{"k":"m","m":0,"n":"block","s":{"p":["*%_"],"r":"Mu"}},{"n":"filename","s":{"r":"Mu","p":["*%_"]},"k":"m","m":0},{"s":{"r":"Mu","p":["*%_"]},"n":"pos","k":"m","m":0},{"n":"line","s":{"p":["*%_"],"r":"Mu"},"k":"m","m":0},{"k":"m","m":0,"s":{"r":"Mu","p":["*%_"]},"n":"column"},{"n":"modules","s":{"r":"Mu","p":["*%_"]},"m":0,"k":"m"},{"s":{"r":"Mu","p":["*%_"]},"n":"is-compile-time","k":"m","m":0},{"k":"m","m":0,"n":"pre","s":{"p":["*%_"],"r":"Mu"}},{"m":0,"k":"m","s":{"r":"Mu","p":["*%_"]},"n":"post"},{"s":{"p":["*%_"],"r":"Mu"},"n":"highexpect","m":0,"k":"m"},{"s":{"p":["@auto","%init","*%_"],"r":"Mu"},"n":"BUILDALL","k":"s","m":0},{"s":{"r":"Bool","p":["*%_"]},"n":"resume","k":"m","m":0},{"s":{"p":["*%_"],"r":"Mu"},"n":"reset-backtrace","m":0,"k":"m"},{"m":0,"k":"m","s":{"p":["*%_"],"r":"Bool"},"n":"is-compile-time"},{"m":0,"k":"m","s":{"p":["$bt?","*%_"],"r":"Mu"},"n":"throw"},{"s":{"p":["*%_"],"r":"Mu"},"n":"fail","k":"m","m":0},{"m":1,"k":"m","n":"Str","s":{"r":"Mu","p":["*%_"]}},{"k":"m","m":1,"n":"Str","s":{"p":["*%_"],"r":"Mu"}},{"s":{"p":["*%_"],"r":"Mu"},"n":"Str","k":"m","m":1},{"m":0,"k":"m","n":"die","s":{"p":["*%_"],"r":"Mu"}},{"s":{"p":["*%_"],"r":"Mu"},"n":"rethrow","m":0,"k":"m"},{"n":"backtrace","s":{"p":["*%_"],"r":"Mu"},"k":"m","m":0},{"s":{"r":"Mu","p":["*%_"]},"n":"gist","k":"m","m":1},{"n":"gist","s":{"r":"Mu","p":["*%_"]},"m":1,"k":"m"},{"n":"gist","s":{"r":"Mu","p":["*%_"]},"m":1,"k":"m"},{"k":"m","m":0,"s":{"r":"Mu","p":["*%_"]},"n":"vault-backtrace"},{"m":0,"k":"s","n":"BUILDALL","s":{"r":"Mu","p":["@auto","%init","*%_"]}}],"k":"c","a":[{"k":"v","t":"Mu","n":"$.block"},{"k":"v","t":"Mu","n":"$.filename"},{"t":"Mu","n":"$.pos","k":"v"},{"n":"$.line","t":"Mu","k":"v"},{"k":"v","n":"$.column","t":"Mu"},{"n":"@.modules","t":"Positional","k":"v"},{"n":"$.is-compile-time","t":"Mu","k":"v"},{"t":"Mu","n":"$.pre","k":"v"},{"n":"$.post","t":"Mu","k":"v"},{"k":"v","n":"@.highexpect","t":"Positional"},{"t":"Mu","n":"$!ex","k":"v"},{"t":"Mu","n":"$!bt","k":"v"}],"b":"A","t":"X::Phaser::Multiple","n":"X::Phaser::Multiple"},{"a":[{"k":"v","n":"$.action","t":"Mu"},{"k":"v","t":"Mu","n":"$.target-shape"},{"k":"v","n":"$.source-shape","t":"Mu"},{"t":"Mu","n":"$!ex","k":"v"},{"t":"Mu","n":"$!bt","k":"v"}],"b":"A","k":"c","m":[{"m":0,"k":"m","n":"message","s":{"p":["*%_"],"r":"Mu"}},{"m":0,"k":"m","n":"action","s":{"r":"Mu","p":["*%_"]}},{"s":{"r":"Mu","p":["*%_"]},"n":"target-shape","m":0,"k":"m"},{"n":"source-shape","s":{"p":["*%_"],"r":"Mu"},"k":"m","m":0},{"m":0,"k":"s","n":"BUILDALL","s":{"p":["@auto","%init","*%_"],"r":"Mu"}},{"k":"m","m":0,"s":{"p":["*%_"],"r":"Bool"},"n":"resume"},{"m":0,"k":"m","n":"reset-backtrace","s":{"r":"Mu","p":["*%_"]}},{"n":"is-compile-time","s":{"r":"Bool","p":["*%_"]},"k":"m","m":0},{"k":"m","m":0,"s":{"r":"Mu","p":["$bt?","*%_"]},"n":"throw"},{"m":0,"k":"m","s":{"r":"Mu","p":["*%_"]},"n":"fail"},{"m":1,"k":"m","n":"Str","s":{"r":"Mu","p":["*%_"]}},{"s":{"r":"Mu","p":["*%_"]},"n":"Str","m":1,"k":"m"},{"s":{"r":"Mu","p":["*%_"]},"n":"Str","k":"m","m":1},{"m":0,"k":"m","s":{"p":["*%_"],"r":"Mu"},"n":"die"},{"m":0,"k":"m","s":{"r":"Mu","p":["*%_"]},"n":"rethrow"},{"m":0,"k":"m","s":{"p":["*%_"],"r":"Mu"},"n":"backtrace"},{"m":1,"k":"m","s":{"p":["*%_"],"r":"Mu"},"n":"gist"},{"n":"gist","s":{"r":"Mu","p":["*%_"]},"m":1,"k":"m"},{"n":"gist","s":{"p":["*%_"],"r":"Mu"},"m":1,"k":"m"},{"k":"m","m":0,"s":{"r":"Mu","p":["*%_"]},"n":"vault-backtrace"},{"k":"s","m":0,"s":{"p":["@auto","%init","*%_"],"r":"Mu"},"n":"BUILDALL"}],"t":"X::ArrayShapeMismatch","n":"X::ArrayShapeMismatch"},{"t":"X::Hash::Store::OddNumber","n":"X::Hash::Store::OddNumber","k":"c","m":[{"n":"message","s":{"p":["*%_"],"r":"Mu"},"m":0,"k":"m"},{"n":"found","s":{"r":"Mu","p":["*%_"]},"m":0,"k":"m"},{"n":"last","s":{"r":"Mu","p":["*%_"]},"k":"m","m":0},{"n":"BUILDALL","s":{"r":"Mu","p":["@auto","%init","*%_"]},"m":0,"k":"s"},{"m":0,"k":"m","n":"resume","s":{"r":"Bool","p":["*%_"]}},{"k":"m","m":0,"n":"reset-backtrace","s":{"r":"Mu","p":["*%_"]}},{"s":{"p":["*%_"],"r":"Bool"},"n":"is-compile-time","m":0,"k":"m"},{"n":"throw","s":{"p":["$bt?","*%_"],"r":"Mu"},"k":"m","m":0},{"m":0,"k":"m","s":{"r":"Mu","p":["*%_"]},"n":"fail"},{"k":"m","m":1,"s":{"r":"Mu","p":["*%_"]},"n":"Str"},{"s":{"p":["*%_"],"r":"Mu"},"n":"Str","m":1,"k":"m"},{"n":"Str","s":{"p":["*%_"],"r":"Mu"},"m":1,"k":"m"},{"m":0,"k":"m","s":{"r":"Mu","p":["*%_"]},"n":"die"},{"n":"rethrow","s":{"p":["*%_"],"r":"Mu"},"m":0,"k":"m"},{"k":"m","m":0,"n":"backtrace","s":{"r":"Mu","p":["*%_"]}},{"k":"m","m":1,"n":"gist","s":{"p":["*%_"],"r":"Mu"}},{"m":1,"k":"m","s":{"r":"Mu","p":["*%_"]},"n":"gist"},{"n":"gist","s":{"p":["*%_"],"r":"Mu"},"k":"m","m":1},{"m":0,"k":"m","n":"vault-backtrace","s":{"r":"Mu","p":["*%_"]}},{"m":0,"k":"s","s":{"r":"Mu","p":["@auto","%init","*%_"]},"n":"BUILDALL"}],"b":"A","a":[{"k":"v","t":"Mu","n":"$.found"},{"t":"Mu","n":"$.last","k":"v"},{"n":"$!ex","t":"Mu","k":"v"},{"n":"$!bt","t":"Mu","k":"v"}]},{"b":"A","a":[{"t":"Mu","n":"$.channel","k":"v"},{"k":"v","n":"$!ex","t":"Mu"},{"k":"v","n":"$!bt","t":"Mu"}],"k":"c","m":[{"k":"m","m":0,"s":{"r":"Mu","p":["*%_"]},"n":"message"},{"k":"m","m":0,"s":{"p":["*%_"],"r":"Mu"},"n":"channel"},{"m":0,"k":"s","n":"BUILDALL","s":{"p":["@auto","%init","*%_"],"r":"Mu"}},{"k":"m","m":0,"n":"resume","s":{"p":["*%_"],"r":"Bool"}},{"k":"m","m":0,"s":{"p":["*%_"],"r":"Mu"},"n":"reset-backtrace"},{"k":"m","m":0,"s":{"r":"Bool","p":["*%_"]},"n":"is-compile-time"},{"s":{"r":"Mu","p":["$bt?","*%_"]},"n":"throw","m":0,"k":"m"},{"m":0,"k":"m","s":{"r":"Mu","p":["*%_"]},"n":"fail"},{"n":"Str","s":{"r":"Mu","p":["*%_"]},"m":1,"k":"m"},{"n":"Str","s":{"r":"Mu","p":["*%_"]},"m":1,"k":"m"},{"n":"Str","s":{"r":"Mu","p":["*%_"]},"k":"m","m":1},{"m":0,"k":"m","s":{"p":["*%_"],"r":"Mu"},"n":"die"},{"s":{"r":"Mu","p":["*%_"]},"n":"rethrow","m":0,"k":"m"},{"n":"backtrace","s":{"p":["*%_"],"r":"Mu"},"k":"m","m":0},{"s":{"p":["*%_"],"r":"Mu"},"n":"gist","m":1,"k":"m"},{"s":{"p":["*%_"],"r":"Mu"},"n":"gist","k":"m","m":1},{"k":"m","m":1,"n":"gist","s":{"p":["*%_"],"r":"Mu"}},{"n":"vault-backtrace","s":{"r":"Mu","p":["*%_"]},"k":"m","m":0},{"k":"s","m":0,"n":"BUILDALL","s":{"p":["@auto","%init","*%_"],"r":"Mu"}}],"d":"TITLE\nclass X::Channel::SendOnClosed\n\nSUBTITLE\nError due to calling send on a closed channel\n\n    class X::Channel::SendOnClosed {}\n\nThis exception is thrown when a calling send on a Channel that has been\nclosed:\n\n    my $s = Channel.new;\n    $s.close;\n    $s.send(42);\n    CATCH { default { put .^name, ': ', .Str } };\n    # OUTPUT: «X::Channel::SendOnClosed: Cannot send a message on a closed channel␤»\n\n","n":"X::Channel::SendOnClosed","t":"X::Channel::SendOnClosed"},{"n":"X::Channel::ReceiveOnClosed","t":"X::Channel::ReceiveOnClosed","m":[{"k":"m","m":0,"n":"message","s":{"p":["*%_"],"r":"Mu"}},{"k":"m","m":0,"n":"channel","s":{"r":"Mu","p":["*%_"]}},{"k":"s","m":0,"s":{"p":["@auto","%init","*%_"],"r":"Mu"},"n":"BUILDALL"},{"k":"m","m":0,"s":{"r":"Bool","p":["*%_"]},"n":"resume"},{"n":"reset-backtrace","s":{"r":"Mu","p":["*%_"]},"k":"m","m":0},{"k":"m","m":0,"n":"is-compile-time","s":{"r":"Bool","p":["*%_"]}},{"k":"m","m":0,"s":{"p":["$bt?","*%_"],"r":"Mu"},"n":"throw"},{"s":{"r":"Mu","p":["*%_"]},"n":"fail","m":0,"k":"m"},{"n":"Str","s":{"p":["*%_"],"r":"Mu"},"k":"m","m":1},{"s":{"p":["*%_"],"r":"Mu"},"n":"Str","k":"m","m":1},{"n":"Str","s":{"r":"Mu","p":["*%_"]},"m":1,"k":"m"},{"s":{"r":"Mu","p":["*%_"]},"n":"die","m":0,"k":"m"},{"s":{"p":["*%_"],"r":"Mu"},"n":"rethrow","m":0,"k":"m"},{"k":"m","m":0,"s":{"p":["*%_"],"r":"Mu"},"n":"backtrace"},{"m":1,"k":"m","s":{"p":["*%_"],"r":"Mu"},"n":"gist"},{"s":{"r":"Mu","p":["*%_"]},"n":"gist","m":1,"k":"m"},{"s":{"r":"Mu","p":["*%_"]},"n":"gist","k":"m","m":1},{"n":"vault-backtrace","s":{"p":["*%_"],"r":"Mu"},"m":0,"k":"m"},{"n":"BUILDALL","s":{"p":["@auto","%init","*%_"],"r":"Mu"},"m":0,"k":"s"}],"k":"c","a":[{"t":"Mu","n":"$.channel","k":"v"},{"n":"$!ex","t":"Mu","k":"v"},{"t":"Mu","n":"$!bt","k":"v"}],"b":"A","d":"TITLE\nclass X::Channel::ReceiveOnClosed\n\nSUBTITLE\nError due to calling receive on a closed channel\n\n    class X::Channel::ReceiveOnClosed {}\n\nThis exception is thrown when a calling receive on a Channel that has been\nclosed:\n\n    my $s = Channel.new;\n    $s.close;\n    $s.receive;     # Cannot receive a message on a closed channel\n    CATCH { default { put .^name, ': ', .Str } };\n    # OUTPUT: «X::Channel::ReceiveOnClosed: Cannot receive a message on a closed channel␤»\n\n"},{"a":[{"k":"v","n":"$.from","t":"Mu"},{"k":"v","t":"Mu","n":"$!ex"},{"n":"$!bt","t":"Mu","k":"v"}],"b":"A","k":"c","m":[{"m":0,"k":"m","n":"message","s":{"p":["*%_"],"r":"Mu"}},{"m":0,"k":"m","n":"from","s":{"r":"Mu","p":["*%_"]}},{"k":"s","m":0,"s":{"r":"Mu","p":["@auto","%init","*%_"]},"n":"BUILDALL"},{"s":{"r":"Bool","p":["*%_"]},"n":"resume","m":0,"k":"m"},{"m":0,"k":"m","s":{"p":["*%_"],"r":"Mu"},"n":"reset-backtrace"},{"m":0,"k":"m","n":"is-compile-time","s":{"p":["*%_"],"r":"Bool"}},{"k":"m","m":0,"n":"throw","s":{"r":"Mu","p":["$bt?","*%_"]}},{"n":"fail","s":{"r":"Mu","p":["*%_"]},"k":"m","m":0},{"k":"m","m":1,"s":{"r":"Mu","p":["*%_"]},"n":"Str"},{"n":"Str","s":{"r":"Mu","p":["*%_"]},"k":"m","m":1},{"k":"m","m":1,"s":{"r":"Mu","p":["*%_"]},"n":"Str"},{"m":0,"k":"m","n":"die","s":{"p":["*%_"],"r":"Mu"}},{"s":{"r":"Mu","p":["*%_"]},"n":"rethrow","k":"m","m":0},{"k":"m","m":0,"n":"backtrace","s":{"p":["*%_"],"r":"Mu"}},{"s":{"p":["*%_"],"r":"Mu"},"n":"gist","m":1,"k":"m"},{"m":1,"k":"m","s":{"p":["*%_"],"r":"Mu"},"n":"gist"},{"k":"m","m":1,"s":{"p":["*%_"],"r":"Mu"},"n":"gist"},{"k":"m","m":0,"n":"vault-backtrace","s":{"r":"Mu","p":["*%_"]}},{"n":"BUILDALL","s":{"p":["@auto","%init","*%_"],"r":"Mu"},"m":0,"k":"s"}],"d":"TITLE\nclass X::Sequence::Deduction\n\nSUBTITLE\nError due to constructing a sequence from ineligible input\n\n    class X::Sequence::Deduction is Exception { }\n\nException type thrown when the ... sequence operator is being called\nwithout an explicit closure, and the sequence cannot be deduced.","n":"X::Sequence::Deduction","t":"X::Sequence::Deduction"},{"m":[{"m":0,"k":"m","s":{"r":"Mu","p":["*%_"]},"n":"message"},{"k":"m","m":0,"s":{"r":"Mu","p":["*%_"]},"n":"sorry_heading"},{"s":{"r":"Mu","p":["$file","$line","*%_"]},"n":"SET_FILE_LINE","m":0,"k":"m"},{"m":1,"k":"m","n":"gist","s":{"p":["*%_"],"r":"Mu"}},{"m":1,"k":"m","n":"gist","s":{"p":["*%_"],"r":"Mu"}},{"m":1,"k":"m","n":"gist","s":{"p":["*%_"],"r":"Mu"}},{"n":"gist","s":{"p":[":$sorry = Bool::True",":$expect = Bool::True","*%_"],"r":"Mu"},"k":"m","m":1},{"k":"m","m":0,"n":"old","s":{"p":["*%_"],"r":"Mu"}},{"n":"replacement","s":{"r":"Mu","p":["*%_"]},"k":"m","m":0},{"m":0,"k":"m","n":"when","s":{"r":"Mu","p":["*%_"]}},{"m":0,"k":"m","s":{"r":"Mu","p":["*%_"]},"n":"filename"},{"n":"pos","s":{"r":"Mu","p":["*%_"]},"m":0,"k":"m"},{"k":"m","m":0,"n":"line","s":{"r":"Mu","p":["*%_"]}},{"n":"column","s":{"p":["*%_"],"r":"Mu"},"m":0,"k":"m"},{"k":"m","m":0,"s":{"p":["*%_"],"r":"Mu"},"n":"modules"},{"n":"is-compile-time","s":{"p":["*%_"],"r":"Mu"},"k":"m","m":0},{"s":{"r":"Mu","p":["*%_"]},"n":"pre","k":"m","m":0},{"k":"m","m":0,"s":{"r":"Mu","p":["*%_"]},"n":"post"},{"k":"m","m":0,"n":"highexpect","s":{"p":["*%_"],"r":"Mu"}},{"m":0,"k":"s","s":{"p":["@auto","%init","*%_"],"r":"Mu"},"n":"BUILDALL"},{"n":"resume","s":{"p":["*%_"],"r":"Bool"},"m":0,"k":"m"},{"k":"m","m":0,"n":"reset-backtrace","s":{"r":"Mu","p":["*%_"]}},{"m":0,"k":"m","n":"is-compile-time","s":{"p":["*%_"],"r":"Bool"}},{"s":{"r":"Mu","p":["$bt?","*%_"]},"n":"throw","m":0,"k":"m"},{"s":{"p":["*%_"],"r":"Mu"},"n":"fail","k":"m","m":0},{"s":{"p":["*%_"],"r":"Mu"},"n":"Str","k":"m","m":1},{"s":{"r":"Mu","p":["*%_"]},"n":"Str","m":1,"k":"m"},{"k":"m","m":1,"n":"Str","s":{"r":"Mu","p":["*%_"]}},{"s":{"p":["*%_"],"r":"Mu"},"n":"die","m":0,"k":"m"},{"m":0,"k":"m","n":"rethrow","s":{"r":"Mu","p":["*%_"]}},{"m":0,"k":"m","s":{"p":["*%_"],"r":"Mu"},"n":"backtrace"},{"n":"gist","s":{"r":"Mu","p":["*%_"]},"k":"m","m":1},{"s":{"r":"Mu","p":["*%_"]},"n":"gist","m":1,"k":"m"},{"n":"gist","s":{"r":"Mu","p":["*%_"]},"k":"m","m":1},{"k":"m","m":0,"n":"vault-backtrace","s":{"r":"Mu","p":["*%_"]}},{"n":"BUILDALL","s":{"p":["@auto","%init","*%_"],"r":"Mu"},"k":"s","m":0}],"k":"c","a":[{"k":"v","t":"Mu","n":"$.old"},{"k":"v","t":"Mu","n":"$.replacement"},{"k":"v","t":"Mu","n":"$.when"},{"n":"$.filename","t":"Mu","k":"v"},{"n":"$.pos","t":"Mu","k":"v"},{"k":"v","t":"Mu","n":"$.line"},{"t":"Mu","n":"$.column","k":"v"},{"k":"v","t":"Positional","n":"@.modules"},{"n":"$.is-compile-time","t":"Mu","k":"v"},{"n":"$.pre","t":"Mu","k":"v"},{"k":"v","n":"$.post","t":"Mu"},{"k":"v","n":"@.highexpect","t":"Positional"},{"k":"v","t":"Mu","n":"$!ex"},{"t":"Mu","n":"$!bt","k":"v"}],"b":"A","d":"TITLE\nclass X::Obsolete\n\nSUBTITLE\nCompilation error due to use of obsolete syntax\n\n    class X::Obsolete does X::Comp { }\n\nSyntax error thrown when the user is attempting to use constructs from\nother languages.\n\nFor example\n\n    m/abc/i\n\n\ndies with\n\n    ===SORRY!===\n    Unsupported use of /i; in Raku please use :i\n\n\n","n":"X::Obsolete","t":"X::Obsolete"},{"m":[{"k":"m","m":0,"s":{"p":["*%_"],"r":"Mu"},"n":"message"},{"m":0,"k":"s","n":"BUILDALL","s":{"r":"Mu","p":["@auto","%init","*%_"]}},{"m":0,"k":"m","s":{"p":["*%_"],"r":"Bool"},"n":"resume"},{"m":0,"k":"m","s":{"r":"Mu","p":["*%_"]},"n":"reset-backtrace"},{"k":"m","m":0,"s":{"p":["*%_"],"r":"Bool"},"n":"is-compile-time"},{"m":0,"k":"m","s":{"r":"Mu","p":["$bt?","*%_"]},"n":"throw"},{"n":"fail","s":{"r":"Mu","p":["*%_"]},"k":"m","m":0},{"n":"Str","s":{"p":["*%_"],"r":"Mu"},"m":1,"k":"m"},{"n":"Str","s":{"r":"Mu","p":["*%_"]},"k":"m","m":1},{"k":"m","m":1,"s":{"r":"Mu","p":["*%_"]},"n":"Str"},{"s":{"p":["*%_"],"r":"Mu"},"n":"die","m":0,"k":"m"},{"s":{"p":["*%_"],"r":"Mu"},"n":"rethrow","k":"m","m":0},{"s":{"p":["*%_"],"r":"Mu"},"n":"backtrace","k":"m","m":0},{"n":"gist","s":{"p":["*%_"],"r":"Mu"},"k":"m","m":1},{"s":{"p":["*%_"],"r":"Mu"},"n":"gist","m":1,"k":"m"},{"k":"m","m":1,"n":"gist","s":{"p":["*%_"],"r":"Mu"}},{"k":"m","m":0,"n":"vault-backtrace","s":{"p":["*%_"],"r":"Mu"}},{"s":{"p":["@auto","%init","*%_"],"r":"Mu"},"n":"BUILDALL","k":"s","m":0}],"k":"c","b":"A","a":[{"k":"v","n":"$!ex","t":"Mu"},{"t":"Mu","n":"$!bt","k":"v"}],"t":"X::ParametricConstant","n":"X::ParametricConstant"},{"t":"X::Bind","n":"X::Bind","d":"TITLE\nclass X::Bind\n\nSUBTITLE\nError due to binding to something that is not a variable or container\n\n    class X::Bind is Exception {}\n\nIf you write code like this:\n\n    floor(1.1) := 42;\n\n\nit dies with an X::Bind exception:\n\n    Cannot use bind operator with this left-hand side\n","k":"c","m":[{"s":{"p":["*%_"],"r":"Mu"},"n":"message","m":0,"k":"m"},{"s":{"p":["*%_"],"r":"Mu"},"n":"target","k":"m","m":0},{"k":"s","m":0,"s":{"p":["@auto","%init","*%_"],"r":"Mu"},"n":"BUILDALL"},{"n":"resume","s":{"r":"Bool","p":["*%_"]},"m":0,"k":"m"},{"k":"m","m":0,"s":{"p":["*%_"],"r":"Mu"},"n":"reset-backtrace"},{"s":{"r":"Bool","p":["*%_"]},"n":"is-compile-time","k":"m","m":0},{"k":"m","m":0,"n":"throw","s":{"r":"Mu","p":["$bt?","*%_"]}},{"s":{"p":["*%_"],"r":"Mu"},"n":"fail","k":"m","m":0},{"k":"m","m":1,"s":{"p":["*%_"],"r":"Mu"},"n":"Str"},{"n":"Str","s":{"p":["*%_"],"r":"Mu"},"k":"m","m":1},{"k":"m","m":1,"s":{"r":"Mu","p":["*%_"]},"n":"Str"},{"n":"die","s":{"p":["*%_"],"r":"Mu"},"m":0,"k":"m"},{"m":0,"k":"m","n":"rethrow","s":{"p":["*%_"],"r":"Mu"}},{"n":"backtrace","s":{"r":"Mu","p":["*%_"]},"k":"m","m":0},{"n":"gist","s":{"r":"Mu","p":["*%_"]},"m":1,"k":"m"},{"k":"m","m":1,"n":"gist","s":{"p":["*%_"],"r":"Mu"}},{"n":"gist","s":{"r":"Mu","p":["*%_"]},"k":"m","m":1},{"m":0,"k":"m","n":"vault-backtrace","s":{"r":"Mu","p":["*%_"]}},{"s":{"p":["@auto","%init","*%_"],"r":"Mu"},"n":"BUILDALL","m":0,"k":"s"}],"a":[{"t":"Mu","n":"$.target","k":"v"},{"t":"Mu","n":"$!ex","k":"v"},{"n":"$!bt","t":"Mu","k":"v"}],"b":"A"},{"d":"TITLE\nclass X::Bind::Slice\n\nSUBTITLE\nError due to binding to a slice\n\n    class X::Bind::Slice is Exception {}\n\nWhen you try to bind to an array or hash slice:\n\n    my @a; @a[0, 1] := [42];\n    CATCH { default { put .^name, ': ', .Str } };\n    # OUTPUT: «X::Bind::Slice: Cannot bind to Array slice␤»\n\nand\n\n    my %h; %h<a b> := {};\n    CATCH { default { put .^name, ': ', .Str } };\n    # OUTPUT: «X::Bind::Slice: Cannot bind to Hash slice␤»\n\nyou get an exception of type ::Bind::Slice\n\n","a":[{"t":"Mu","n":"$.type","k":"v"},{"k":"v","t":"Mu","n":"$!ex"},{"k":"v","n":"$!bt","t":"Mu"}],"b":"A","m":[{"m":0,"k":"m","s":{"p":["*%_"],"r":"Mu"},"n":"message"},{"m":0,"k":"m","n":"type","s":{"p":["*%_"],"r":"Mu"}},{"k":"s","m":0,"s":{"p":["@auto","%init","*%_"],"r":"Mu"},"n":"BUILDALL"},{"k":"m","m":0,"s":{"r":"Bool","p":["*%_"]},"n":"resume"},{"n":"reset-backtrace","s":{"p":["*%_"],"r":"Mu"},"k":"m","m":0},{"k":"m","m":0,"n":"is-compile-time","s":{"r":"Bool","p":["*%_"]}},{"m":0,"k":"m","n":"throw","s":{"p":["$bt?","*%_"],"r":"Mu"}},{"k":"m","m":0,"s":{"p":["*%_"],"r":"Mu"},"n":"fail"},{"s":{"r":"Mu","p":["*%_"]},"n":"Str","m":1,"k":"m"},{"k":"m","m":1,"n":"Str","s":{"p":["*%_"],"r":"Mu"}},{"k":"m","m":1,"s":{"r":"Mu","p":["*%_"]},"n":"Str"},{"m":0,"k":"m","s":{"p":["*%_"],"r":"Mu"},"n":"die"},{"k":"m","m":0,"s":{"p":["*%_"],"r":"Mu"},"n":"rethrow"},{"k":"m","m":0,"s":{"p":["*%_"],"r":"Mu"},"n":"backtrace"},{"n":"gist","s":{"r":"Mu","p":["*%_"]},"m":1,"k":"m"},{"m":1,"k":"m","n":"gist","s":{"r":"Mu","p":["*%_"]}},{"k":"m","m":1,"n":"gist","s":{"p":["*%_"],"r":"Mu"}},{"n":"vault-backtrace","s":{"r":"Mu","p":["*%_"]},"m":0,"k":"m"},{"m":0,"k":"s","n":"BUILDALL","s":{"p":["@auto","%init","*%_"],"r":"Mu"}}],"k":"c","t":"X::Bind::Slice","n":"X::Bind::Slice"},{"n":"X::Bind::ZenSlice","t":"X::Bind::ZenSlice","b":"A","a":[{"n":"$.type","t":"Mu","k":"v"},{"n":"$!ex","t":"Mu","k":"v"},{"n":"$!bt","t":"Mu","k":"v"}],"m":[{"n":"message","s":{"r":"Mu","p":["*%_"]},"m":0,"k":"m"},{"m":0,"k":"s","s":{"r":"Mu","p":["@auto","%init","*%_"]},"n":"BUILDALL"},{"s":{"r":"Mu","p":["*%_"]},"n":"message","k":"m","m":0},{"m":0,"k":"m","n":"type","s":{"r":"Mu","p":["*%_"]}},{"s":{"p":["@auto","%init","*%_"],"r":"Mu"},"n":"BUILDALL","m":0,"k":"s"},{"s":{"p":["*%_"],"r":"Bool"},"n":"resume","k":"m","m":0},{"n":"reset-backtrace","s":{"p":["*%_"],"r":"Mu"},"k":"m","m":0},{"m":0,"k":"m","s":{"p":["*%_"],"r":"Bool"},"n":"is-compile-time"},{"s":{"p":["$bt?","*%_"],"r":"Mu"},"n":"throw","k":"m","m":0},{"n":"fail","s":{"r":"Mu","p":["*%_"]},"k":"m","m":0},{"s":{"p":["*%_"],"r":"Mu"},"n":"Str","m":1,"k":"m"},{"m":1,"k":"m","s":{"p":["*%_"],"r":"Mu"},"n":"Str"},{"k":"m","m":1,"s":{"r":"Mu","p":["*%_"]},"n":"Str"},{"s":{"r":"Mu","p":["*%_"]},"n":"die","k":"m","m":0},{"n":"rethrow","s":{"p":["*%_"],"r":"Mu"},"m":0,"k":"m"},{"s":{"r":"Mu","p":["*%_"]},"n":"backtrace","k":"m","m":0},{"s":{"p":["*%_"],"r":"Mu"},"n":"gist","k":"m","m":1},{"s":{"p":["*%_"],"r":"Mu"},"n":"gist","k":"m","m":1},{"k":"m","m":1,"s":{"p":["*%_"],"r":"Mu"},"n":"gist"},{"m":0,"k":"m","s":{"r":"Mu","p":["*%_"]},"n":"vault-backtrace"},{"m":0,"k":"s","s":{"r":"Mu","p":["@auto","%init","*%_"]},"n":"BUILDALL"}],"k":"c"},{"t":"X::Bind::NativeType","n":"X::Bind::NativeType","d":"TITLE\nclass X::Bind::NativeType\n\nSUBTITLE\nCompilation error due to binding to a natively typed variable\n\n    class X::Bind::NativeType does X::Comp { }\n\nCompile-time error thrown when trying to bind to a natively typed\nvariable.\n\nSince native variables explicitly don't have the concept of a container at\nruntime, it does not make sense to support both binding and assignment;\nRaku supports only assignment (which makes more sense, because native types\nare value types).\n\nFor example the code\n\n    my int $x := 3;\n\n\ndies with\n\n    Cannot bind to natively typed variable '$x'; use assignment instead\n\n\nand can be fixed by writing it as\n\n    my int $x = 3;\n\n","m":[{"n":"message","s":{"r":"Mu","p":["*%_"]},"m":0,"k":"m"},{"s":{"r":"Mu","p":["*%_"]},"n":"sorry_heading","m":0,"k":"m"},{"k":"m","m":0,"n":"SET_FILE_LINE","s":{"p":["$file","$line","*%_"],"r":"Mu"}},{"n":"gist","s":{"p":["*%_"],"r":"Mu"},"m":1,"k":"m"},{"k":"m","m":1,"n":"gist","s":{"p":["*%_"],"r":"Mu"}},{"n":"gist","s":{"p":["*%_"],"r":"Mu"},"m":1,"k":"m"},{"k":"m","m":1,"n":"gist","s":{"p":[":$sorry = Bool::True",":$expect = Bool::True","*%_"],"r":"Mu"}},{"s":{"r":"Mu","p":["*%_"]},"n":"name","k":"m","m":0},{"m":0,"k":"m","n":"filename","s":{"p":["*%_"],"r":"Mu"}},{"n":"pos","s":{"r":"Mu","p":["*%_"]},"m":0,"k":"m"},{"k":"m","m":0,"s":{"r":"Mu","p":["*%_"]},"n":"line"},{"n":"column","s":{"r":"Mu","p":["*%_"]},"m":0,"k":"m"},{"k":"m","m":0,"n":"modules","s":{"r":"Mu","p":["*%_"]}},{"m":0,"k":"m","s":{"r":"Mu","p":["*%_"]},"n":"is-compile-time"},{"n":"pre","s":{"p":["*%_"],"r":"Mu"},"k":"m","m":0},{"m":0,"k":"m","n":"post","s":{"r":"Mu","p":["*%_"]}},{"k":"m","m":0,"s":{"r":"Mu","p":["*%_"]},"n":"highexpect"},{"k":"s","m":0,"s":{"r":"Mu","p":["@auto","%init","*%_"]},"n":"BUILDALL"},{"k":"m","m":0,"s":{"r":"Bool","p":["*%_"]},"n":"resume"},{"n":"reset-backtrace","s":{"p":["*%_"],"r":"Mu"},"m":0,"k":"m"},{"n":"is-compile-time","s":{"p":["*%_"],"r":"Bool"},"m":0,"k":"m"},{"s":{"p":["$bt?","*%_"],"r":"Mu"},"n":"throw","k":"m","m":0},{"s":{"r":"Mu","p":["*%_"]},"n":"fail","m":0,"k":"m"},{"n":"Str","s":{"r":"Mu","p":["*%_"]},"m":1,"k":"m"},{"n":"Str","s":{"p":["*%_"],"r":"Mu"},"m":1,"k":"m"},{"m":1,"k":"m","n":"Str","s":{"p":["*%_"],"r":"Mu"}},{"n":"die","s":{"r":"Mu","p":["*%_"]},"k":"m","m":0},{"s":{"p":["*%_"],"r":"Mu"},"n":"rethrow","m":0,"k":"m"},{"n":"backtrace","s":{"r":"Mu","p":["*%_"]},"m":0,"k":"m"},{"n":"gist","s":{"r":"Mu","p":["*%_"]},"m":1,"k":"m"},{"m":1,"k":"m","n":"gist","s":{"r":"Mu","p":["*%_"]}},{"n":"gist","s":{"p":["*%_"],"r":"Mu"},"k":"m","m":1},{"k":"m","m":0,"n":"vault-backtrace","s":{"p":["*%_"],"r":"Mu"}},{"m":0,"k":"s","n":"BUILDALL","s":{"p":["@auto","%init","*%_"],"r":"Mu"}}],"k":"c","a":[{"k":"v","n":"$.name","t":"Mu"},{"n":"$.filename","t":"Mu","k":"v"},{"n":"$.pos","t":"Mu","k":"v"},{"t":"Mu","n":"$.line","k":"v"},{"k":"v","n":"$.column","t":"Mu"},{"n":"@.modules","t":"Positional","k":"v"},{"n":"$.is-compile-time","t":"Mu","k":"v"},{"k":"v","n":"$.pre","t":"Mu"},{"k":"v","t":"Mu","n":"$.post"},{"n":"@.highexpect","t":"Positional","k":"v"},{"n":"$!ex","t":"Mu","k":"v"},{"t":"Mu","n":"$!bt","k":"v"}],"b":"A"},{"n":"X::Caller::NotDynamic","t":"X::Caller::NotDynamic","k":"c","m":[{"n":"message","s":{"r":"Mu","p":["*%_"]},"k":"m","m":0},{"n":"symbol","s":{"p":["*%_"],"r":"Mu"},"k":"m","m":0},{"k":"s","m":0,"s":{"r":"Mu","p":["@auto","%init","*%_"]},"n":"BUILDALL"},{"m":0,"k":"m","s":{"p":["*%_"],"r":"Bool"},"n":"resume"},{"m":0,"k":"m","n":"reset-backtrace","s":{"r":"Mu","p":["*%_"]}},{"n":"is-compile-time","s":{"p":["*%_"],"r":"Bool"},"k":"m","m":0},{"m":0,"k":"m","n":"throw","s":{"r":"Mu","p":["$bt?","*%_"]}},{"s":{"r":"Mu","p":["*%_"]},"n":"fail","k":"m","m":0},{"m":1,"k":"m","n":"Str","s":{"p":["*%_"],"r":"Mu"}},{"k":"m","m":1,"s":{"p":["*%_"],"r":"Mu"},"n":"Str"},{"m":1,"k":"m","n":"Str","s":{"p":["*%_"],"r":"Mu"}},{"m":0,"k":"m","s":{"r":"Mu","p":["*%_"]},"n":"die"},{"n":"rethrow","s":{"p":["*%_"],"r":"Mu"},"k":"m","m":0},{"s":{"r":"Mu","p":["*%_"]},"n":"backtrace","m":0,"k":"m"},{"s":{"r":"Mu","p":["*%_"]},"n":"gist","k":"m","m":1},{"n":"gist","s":{"r":"Mu","p":["*%_"]},"m":1,"k":"m"},{"n":"gist","s":{"p":["*%_"],"r":"Mu"},"m":1,"k":"m"},{"s":{"p":["*%_"],"r":"Mu"},"n":"vault-backtrace","m":0,"k":"m"},{"k":"s","m":0,"n":"BUILDALL","s":{"r":"Mu","p":["@auto","%init","*%_"]}}],"b":"A","a":[{"k":"v","n":"$.symbol","t":"Mu"},{"t":"Mu","n":"$!ex","k":"v"},{"k":"v","t":"Mu","n":"$!bt"}],"d":"TITLE\nclass X::Caller::NotDynamic\n\nSUBTITLE\nError while trying to access a non dynamic variable through CALLER\n\n    class X::Caller::NotDynamic is Exception { }\n\nThrown when trying to access a non dynamic variable through CALLER\n\nA typical error message is\n\n    Cannot access '$x' through CALLER, because it is not declared as dynamic\n\n\n"},{"k":"c","m":[{"k":"m","m":0,"n":"message","s":{"p":["*%_"],"r":"Mu"}},{"s":{"p":["*%_"],"r":"Mu"},"n":"specification","k":"m","m":0},{"s":{"r":"Mu","p":["@auto","%init","*%_"]},"n":"BUILDALL","k":"s","m":0},{"s":{"r":"Bool","p":["*%_"]},"n":"resume","m":0,"k":"m"},{"k":"m","m":0,"n":"reset-backtrace","s":{"r":"Mu","p":["*%_"]}},{"k":"m","m":0,"s":{"p":["*%_"],"r":"Bool"},"n":"is-compile-time"},{"m":0,"k":"m","n":"throw","s":{"r":"Mu","p":["$bt?","*%_"]}},{"k":"m","m":0,"n":"fail","s":{"p":["*%_"],"r":"Mu"}},{"s":{"r":"Mu","p":["*%_"]},"n":"Str","m":1,"k":"m"},{"m":1,"k":"m","n":"Str","s":{"r":"Mu","p":["*%_"]}},{"n":"Str","s":{"p":["*%_"],"r":"Mu"},"m":1,"k":"m"},{"k":"m","m":0,"s":{"p":["*%_"],"r":"Mu"},"n":"die"},{"s":{"r":"Mu","p":["*%_"]},"n":"rethrow","m":0,"k":"m"},{"s":{"p":["*%_"],"r":"Mu"},"n":"backtrace","k":"m","m":0},{"m":1,"k":"m","n":"gist","s":{"r":"Mu","p":["*%_"]}},{"n":"gist","s":{"r":"Mu","p":["*%_"]},"m":1,"k":"m"},{"k":"m","m":1,"s":{"p":["*%_"],"r":"Mu"},"n":"gist"},{"n":"vault-backtrace","s":{"r":"Mu","p":["*%_"]},"m":0,"k":"m"},{"m":0,"k":"s","s":{"p":["@auto","%init","*%_"],"r":"Mu"},"n":"BUILDALL"}],"a":[{"k":"v","n":"$.specification","t":"CompUnit::DependencySpecification"},{"n":"$!ex","t":"Mu","k":"v"},{"n":"$!bt","t":"Mu","k":"v"}],"b":"A","t":"X::CompUnit::UnsatisfiedDependency","n":"X::CompUnit::UnsatisfiedDependency"},{"n":"X::IllegalDimensionInShape","t":"X::IllegalDimensionInShape","m":[{"n":"message","s":{"r":"Mu","p":["*%_"]},"k":"m","m":0},{"m":0,"k":"m","s":{"r":"Mu","p":["*%_"]},"n":"dim"},{"k":"s","m":0,"n":"BUILDALL","s":{"r":"Mu","p":["@auto","%init","*%_"]}},{"n":"resume","s":{"p":["*%_"],"r":"Bool"},"k":"m","m":0},{"m":0,"k":"m","s":{"r":"Mu","p":["*%_"]},"n":"reset-backtrace"},{"m":0,"k":"m","n":"is-compile-time","s":{"r":"Bool","p":["*%_"]}},{"s":{"p":["$bt?","*%_"],"r":"Mu"},"n":"throw","k":"m","m":0},{"n":"fail","s":{"r":"Mu","p":["*%_"]},"k":"m","m":0},{"k":"m","m":1,"n":"Str","s":{"p":["*%_"],"r":"Mu"}},{"n":"Str","s":{"p":["*%_"],"r":"Mu"},"m":1,"k":"m"},{"k":"m","m":1,"n":"Str","s":{"r":"Mu","p":["*%_"]}},{"s":{"p":["*%_"],"r":"Mu"},"n":"die","k":"m","m":0},{"n":"rethrow","s":{"p":["*%_"],"r":"Mu"},"m":0,"k":"m"},{"n":"backtrace","s":{"r":"Mu","p":["*%_"]},"m":0,"k":"m"},{"m":1,"k":"m","n":"gist","s":{"r":"Mu","p":["*%_"]}},{"n":"gist","s":{"p":["*%_"],"r":"Mu"},"k":"m","m":1},{"n":"gist","s":{"p":["*%_"],"r":"Mu"},"m":1,"k":"m"},{"n":"vault-backtrace","s":{"r":"Mu","p":["*%_"]},"m":0,"k":"m"},{"m":0,"k":"s","s":{"r":"Mu","p":["@auto","%init","*%_"]},"n":"BUILDALL"}],"k":"c","a":[{"t":"Mu","n":"$.dim","k":"v"},{"t":"Mu","n":"$!ex","k":"v"},{"t":"Mu","n":"$!bt","k":"v"}],"b":"A"},{"n":"X::HyperWhatever::Multiple","t":"X::HyperWhatever::Multiple","m":[{"s":{"p":["*%_"],"r":"Mu"},"n":"message","k":"m","m":0},{"s":{"r":"Mu","p":["@auto","%init","*%_"]},"n":"BUILDALL","k":"s","m":0},{"m":0,"k":"m","n":"resume","s":{"p":["*%_"],"r":"Bool"}},{"s":{"r":"Mu","p":["*%_"]},"n":"reset-backtrace","m":0,"k":"m"},{"k":"m","m":0,"s":{"p":["*%_"],"r":"Bool"},"n":"is-compile-time"},{"m":0,"k":"m","n":"throw","s":{"p":["$bt?","*%_"],"r":"Mu"}},{"n":"fail","s":{"p":["*%_"],"r":"Mu"},"m":0,"k":"m"},{"s":{"r":"Mu","p":["*%_"]},"n":"Str","k":"m","m":1},{"m":1,"k":"m","s":{"r":"Mu","p":["*%_"]},"n":"Str"},{"k":"m","m":1,"n":"Str","s":{"r":"Mu","p":["*%_"]}},{"k":"m","m":0,"n":"die","s":{"p":["*%_"],"r":"Mu"}},{"m":0,"k":"m","n":"rethrow","s":{"r":"Mu","p":["*%_"]}},{"n":"backtrace","s":{"p":["*%_"],"r":"Mu"},"k":"m","m":0},{"k":"m","m":1,"n":"gist","s":{"r":"Mu","p":["*%_"]}},{"m":1,"k":"m","s":{"r":"Mu","p":["*%_"]},"n":"gist"},{"k":"m","m":1,"s":{"r":"Mu","p":["*%_"]},"n":"gist"},{"k":"m","m":0,"n":"vault-backtrace","s":{"r":"Mu","p":["*%_"]}},{"m":0,"k":"s","n":"BUILDALL","s":{"r":"Mu","p":["@auto","%init","*%_"]}}],"k":"c","a":[{"k":"v","t":"Mu","n":"$!ex"},{"t":"Mu","n":"$!bt","k":"v"}],"b":"A"},{"b":"C","k":"ro","n":"X::MOP","t":"X::MOP"},{"n":"X::Undeclared","t":"X::Undeclared","k":"c","m":[{"m":0,"k":"m","n":"message","s":{"r":"Mu","p":["*%_"]}},{"k":"m","m":0,"s":{"r":"Mu","p":["*%_"]},"n":"sorry_heading"},{"n":"SET_FILE_LINE","s":{"r":"Mu","p":["$file","$line","*%_"]},"m":0,"k":"m"},{"k":"m","m":1,"s":{"r":"Mu","p":["*%_"]},"n":"gist"},{"k":"m","m":1,"n":"gist","s":{"p":["*%_"],"r":"Mu"}},{"n":"gist","s":{"r":"Mu","p":["*%_"]},"m":1,"k":"m"},{"s":{"p":[":$sorry = Bool::True",":$expect = Bool::True","*%_"],"r":"Mu"},"n":"gist","k":"m","m":1},{"m":0,"k":"m","n":"what","s":{"p":["*%_"],"r":"Mu"}},{"n":"symbol","s":{"p":["*%_"],"r":"Mu"},"m":0,"k":"m"},{"k":"m","m":0,"s":{"p":["*%_"],"r":"Mu"},"n":"suggestions"},{"s":{"p":["*%_"],"r":"Mu"},"n":"filename","m":0,"k":"m"},{"s":{"p":["*%_"],"r":"Mu"},"n":"pos","k":"m","m":0},{"m":0,"k":"m","n":"line","s":{"p":["*%_"],"r":"Mu"}},{"s":{"r":"Mu","p":["*%_"]},"n":"column","m":0,"k":"m"},{"s":{"r":"Mu","p":["*%_"]},"n":"modules","m":0,"k":"m"},{"m":0,"k":"m","s":{"p":["*%_"],"r":"Mu"},"n":"is-compile-time"},{"s":{"r":"Mu","p":["*%_"]},"n":"pre","k":"m","m":0},{"k":"m","m":0,"n":"post","s":{"p":["*%_"],"r":"Mu"}},{"s":{"r":"Mu","p":["*%_"]},"n":"highexpect","m":0,"k":"m"},{"s":{"p":["@auto","%init","*%_"],"r":"Mu"},"n":"BUILDALL","m":0,"k":"s"},{"m":0,"k":"m","s":{"p":["*%_"],"r":"Bool"},"n":"resume"},{"n":"reset-backtrace","s":{"r":"Mu","p":["*%_"]},"m":0,"k":"m"},{"s":{"p":["*%_"],"r":"Bool"},"n":"is-compile-time","m":0,"k":"m"},{"s":{"p":["$bt?","*%_"],"r":"Mu"},"n":"throw","m":0,"k":"m"},{"m":0,"k":"m","s":{"r":"Mu","p":["*%_"]},"n":"fail"},{"k":"m","m":1,"s":{"p":["*%_"],"r":"Mu"},"n":"Str"},{"n":"Str","s":{"r":"Mu","p":["*%_"]},"m":1,"k":"m"},{"m":1,"k":"m","s":{"r":"Mu","p":["*%_"]},"n":"Str"},{"s":{"p":["*%_"],"r":"Mu"},"n":"die","k":"m","m":0},{"m":0,"k":"m","n":"rethrow","s":{"r":"Mu","p":["*%_"]}},{"n":"backtrace","s":{"r":"Mu","p":["*%_"]},"k":"m","m":0},{"m":1,"k":"m","n":"gist","s":{"r":"Mu","p":["*%_"]}},{"k":"m","m":1,"n":"gist","s":{"r":"Mu","p":["*%_"]}},{"m":1,"k":"m","n":"gist","s":{"p":["*%_"],"r":"Mu"}},{"s":{"p":["*%_"],"r":"Mu"},"n":"vault-backtrace","k":"m","m":0},{"s":{"r":"Mu","p":["@auto","%init","*%_"]},"n":"BUILDALL","k":"s","m":0}],"b":"A","a":[{"k":"v","t":"Mu","n":"$.what"},{"k":"v","n":"$.symbol","t":"Mu"},{"t":"Positional","n":"@.suggestions","k":"v"},{"n":"$.filename","t":"Mu","k":"v"},{"t":"Mu","n":"$.pos","k":"v"},{"k":"v","n":"$.line","t":"Mu"},{"n":"$.column","t":"Mu","k":"v"},{"k":"v","t":"Positional","n":"@.modules"},{"k":"v","t":"Mu","n":"$.is-compile-time"},{"k":"v","t":"Mu","n":"$.pre"},{"k":"v","t":"Mu","n":"$.post"},{"t":"Positional","n":"@.highexpect","k":"v"},{"k":"v","t":"Mu","n":"$!ex"},{"k":"v","t":"Mu","n":"$!bt"}],"d":"TITLE\nclass X::Undeclared\n\nSUBTITLE\nCompilation error due to an undeclared symbol\n\n    class X::Undeclared does X::Comp {}\n\nThrown when the compiler encounters a symbol that has not been declared,\nbut needs to be.\n\nExample\n\n    $x;\n\n\nresults in\n\n    ===SORRY!===\n    Variable $x is not declared\n\n\n"},{"n":"X::Undeclared::Symbols","t":"X::Undeclared::Symbols","m":[{"n":"message","s":{"p":["*%_"],"r":"Mu"},"m":0,"k":"m"},{"s":{"r":"Mu","p":["*%_"]},"n":"sorry_heading","m":0,"k":"m"},{"k":"m","m":0,"n":"SET_FILE_LINE","s":{"p":["$file","$line","*%_"],"r":"Mu"}},{"k":"m","m":1,"s":{"r":"Mu","p":["*%_"]},"n":"gist"},{"m":1,"k":"m","s":{"p":["*%_"],"r":"Mu"},"n":"gist"},{"s":{"p":["*%_"],"r":"Mu"},"n":"gist","m":1,"k":"m"},{"n":"gist","s":{"r":"Mu","p":[":$sorry = Bool::True","*%_"]},"k":"m","m":1},{"n":"gist","s":{"p":[":$sorry = Bool::True",":$expect = Bool::True","*%_"],"r":"Mu"},"m":1,"k":"m"},{"n":"post_types","s":{"p":["*%_"],"r":"Mu"},"k":"m","m":0},{"m":0,"k":"m","n":"unk_types","s":{"r":"Mu","p":["*%_"]}},{"s":{"r":"Mu","p":["*%_"]},"n":"unk_routines","m":0,"k":"m"},{"n":"routine_suggestion","s":{"r":"Mu","p":["*%_"]},"m":0,"k":"m"},{"k":"m","m":0,"s":{"p":["*%_"],"r":"Mu"},"n":"type_suggestion"},{"s":{"p":["*%_"],"r":"Mu"},"n":"filename","k":"m","m":0},{"n":"pos","s":{"p":["*%_"],"r":"Mu"},"k":"m","m":0},{"s":{"r":"Mu","p":["*%_"]},"n":"line","k":"m","m":0},{"m":0,"k":"m","s":{"r":"Mu","p":["*%_"]},"n":"column"},{"k":"m","m":0,"n":"modules","s":{"r":"Mu","p":["*%_"]}},{"s":{"p":["*%_"],"r":"Mu"},"n":"is-compile-time","m":0,"k":"m"},{"s":{"r":"Mu","p":["*%_"]},"n":"pre","m":0,"k":"m"},{"n":"post","s":{"p":["*%_"],"r":"Mu"},"m":0,"k":"m"},{"k":"m","m":0,"n":"highexpect","s":{"r":"Mu","p":["*%_"]}},{"m":0,"k":"s","s":{"p":["@auto","%init","*%_"],"r":"Mu"},"n":"BUILDALL"},{"m":0,"k":"m","s":{"p":["*%_"],"r":"Bool"},"n":"resume"},{"n":"reset-backtrace","s":{"r":"Mu","p":["*%_"]},"k":"m","m":0},{"s":{"r":"Bool","p":["*%_"]},"n":"is-compile-time","k":"m","m":0},{"n":"throw","s":{"r":"Mu","p":["$bt?","*%_"]},"k":"m","m":0},{"s":{"r":"Mu","p":["*%_"]},"n":"fail","k":"m","m":0},{"s":{"r":"Mu","p":["*%_"]},"n":"Str","m":1,"k":"m"},{"n":"Str","s":{"r":"Mu","p":["*%_"]},"k":"m","m":1},{"m":1,"k":"m","s":{"r":"Mu","p":["*%_"]},"n":"Str"},{"m":0,"k":"m","n":"die","s":{"p":["*%_"],"r":"Mu"}},{"k":"m","m":0,"n":"rethrow","s":{"p":["*%_"],"r":"Mu"}},{"s":{"p":["*%_"],"r":"Mu"},"n":"backtrace","m":0,"k":"m"},{"s":{"p":["*%_"],"r":"Mu"},"n":"gist","m":1,"k":"m"},{"k":"m","m":1,"n":"gist","s":{"p":["*%_"],"r":"Mu"}},{"m":1,"k":"m","n":"gist","s":{"p":["*%_"],"r":"Mu"}},{"k":"m","m":0,"n":"vault-backtrace","s":{"r":"Mu","p":["*%_"]}},{"s":{"p":["@auto","%init","*%_"],"r":"Mu"},"n":"BUILDALL","k":"s","m":0}],"k":"c","b":"A","a":[{"k":"v","t":"Associative","n":"%.post_types"},{"k":"v","n":"%.unk_types","t":"Associative"},{"k":"v","t":"Associative","n":"%.unk_routines"},{"n":"%.routine_suggestion","t":"Associative","k":"v"},{"k":"v","t":"Associative","n":"%.type_suggestion"},{"t":"Mu","n":"$.filename","k":"v"},{"n":"$.pos","t":"Mu","k":"v"},{"k":"v","t":"Mu","n":"$.line"},{"t":"Mu","n":"$.column","k":"v"},{"k":"v","n":"@.modules","t":"Positional"},{"n":"$.is-compile-time","t":"Mu","k":"v"},{"t":"Mu","n":"$.pre","k":"v"},{"t":"Mu","n":"$.post","k":"v"},{"t":"Positional","n":"@.highexpect","k":"v"},{"k":"v","n":"$!ex","t":"Mu"},{"t":"Mu","n":"$!bt","k":"v"}]},{"a":[{"k":"v","n":"$.what","t":"Mu"},{"k":"v","t":"Mu","n":"$.filename"},{"t":"Mu","n":"$.pos","k":"v"},{"t":"Mu","n":"$.line","k":"v"},{"k":"v","t":"Mu","n":"$.column"},{"k":"v","n":"@.modules","t":"Positional"},{"t":"Mu","n":"$.is-compile-time","k":"v"},{"k":"v","t":"Mu","n":"$.pre"},{"k":"v","t":"Mu","n":"$.post"},{"t":"Positional","n":"@.highexpect","k":"v"},{"k":"v","n":"$!ex","t":"Mu"},{"k":"v","t":"Mu","n":"$!bt"}],"b":"A","m":[{"m":0,"k":"m","n":"message","s":{"r":"Mu","p":["*%_"]}},{"k":"m","m":0,"s":{"p":["*%_"],"r":"Mu"},"n":"sorry_heading"},{"k":"m","m":0,"s":{"p":["$file","$line","*%_"],"r":"Mu"},"n":"SET_FILE_LINE"},{"s":{"p":["*%_"],"r":"Mu"},"n":"gist","m":1,"k":"m"},{"s":{"r":"Mu","p":["*%_"]},"n":"gist","k":"m","m":1},{"m":1,"k":"m","n":"gist","s":{"r":"Mu","p":["*%_"]}},{"s":{"r":"Mu","p":[":$sorry = Bool::True",":$expect = Bool::True","*%_"]},"n":"gist","k":"m","m":1},{"n":"what","s":{"p":["*%_"],"r":"Mu"},"k":"m","m":0},{"n":"filename","s":{"p":["*%_"],"r":"Mu"},"k":"m","m":0},{"m":0,"k":"m","s":{"r":"Mu","p":["*%_"]},"n":"pos"},{"k":"m","m":0,"n":"line","s":{"r":"Mu","p":["*%_"]}},{"m":0,"k":"m","s":{"r":"Mu","p":["*%_"]},"n":"column"},{"k":"m","m":0,"n":"modules","s":{"r":"Mu","p":["*%_"]}},{"s":{"r":"Mu","p":["*%_"]},"n":"is-compile-time","m":0,"k":"m"},{"s":{"p":["*%_"],"r":"Mu"},"n":"pre","m":0,"k":"m"},{"n":"post","s":{"p":["*%_"],"r":"Mu"},"k":"m","m":0},{"m":0,"k":"m","n":"highexpect","s":{"p":["*%_"],"r":"Mu"}},{"m":0,"k":"s","n":"BUILDALL","s":{"r":"Mu","p":["@auto","%init","*%_"]}},{"m":0,"k":"m","s":{"r":"Bool","p":["*%_"]},"n":"resume"},{"k":"m","m":0,"n":"reset-backtrace","s":{"p":["*%_"],"r":"Mu"}},{"n":"is-compile-time","s":{"p":["*%_"],"r":"Bool"},"m":0,"k":"m"},{"k":"m","m":0,"n":"throw","s":{"r":"Mu","p":["$bt?","*%_"]}},{"k":"m","m":0,"s":{"r":"Mu","p":["*%_"]},"n":"fail"},{"m":1,"k":"m","n":"Str","s":{"r":"Mu","p":["*%_"]}},{"n":"Str","s":{"p":["*%_"],"r":"Mu"},"k":"m","m":1},{"k":"m","m":1,"s":{"r":"Mu","p":["*%_"]},"n":"Str"},{"k":"m","m":0,"n":"die","s":{"r":"Mu","p":["*%_"]}},{"m":0,"k":"m","s":{"p":["*%_"],"r":"Mu"},"n":"rethrow"},{"k":"m","m":0,"s":{"p":["*%_"],"r":"Mu"},"n":"backtrace"},{"m":1,"k":"m","s":{"r":"Mu","p":["*%_"]},"n":"gist"},{"m":1,"k":"m","n":"gist","s":{"r":"Mu","p":["*%_"]}},{"m":1,"k":"m","s":{"r":"Mu","p":["*%_"]},"n":"gist"},{"k":"m","m":0,"s":{"r":"Mu","p":["*%_"]},"n":"vault-backtrace"},{"s":{"r":"Mu","p":["@auto","%init","*%_"]},"n":"BUILDALL","k":"s","m":0}],"k":"c","n":"X::Value::Dynamic","t":"X::Value::Dynamic"},{"d":"TITLE\nclass X::Scheduler::CueInNaNSeconds\n\nSUBTITLE\nError caused by passing NaN to Scheduler.cue as :at, :in, or :every\n\n    class X::Scheduler::CueInNaNSeconds is Exception { }\n\nWhen calling ThreadPoolScheduler.cue or CurrentThreadScheduler.cue with\n:at, :in, or :every as NaN, this exception gets thrown. For example, the\nfollowing code:\n\n    my Cancellation $c = $*SCHEDULER.cue({\n        say 'This will never output :(';\n    }, at => NaN);\n\n\nThrows with:\n\n    Cannot pass NaN as a number of seconds to Scheduler.cue\n\n\nThis class only exists in releases 2019.05 and later.","a":[{"t":"Mu","n":"$!ex","k":"v"},{"t":"Mu","n":"$!bt","k":"v"}],"b":"A","k":"c","m":[{"n":"message","s":{"p":["*%_"],"r":"Str"},"k":"m","m":0},{"k":"s","m":0,"s":{"p":["@auto","%init","*%_"],"r":"Mu"},"n":"BUILDALL"},{"n":"resume","s":{"r":"Bool","p":["*%_"]},"m":0,"k":"m"},{"n":"reset-backtrace","s":{"r":"Mu","p":["*%_"]},"m":0,"k":"m"},{"m":0,"k":"m","n":"is-compile-time","s":{"p":["*%_"],"r":"Bool"}},{"s":{"p":["$bt?","*%_"],"r":"Mu"},"n":"throw","k":"m","m":0},{"n":"fail","s":{"r":"Mu","p":["*%_"]},"k":"m","m":0},{"n":"Str","s":{"p":["*%_"],"r":"Mu"},"k":"m","m":1},{"n":"Str","s":{"p":["*%_"],"r":"Mu"},"k":"m","m":1},{"m":1,"k":"m","s":{"p":["*%_"],"r":"Mu"},"n":"Str"},{"s":{"r":"Mu","p":["*%_"]},"n":"die","k":"m","m":0},{"k":"m","m":0,"s":{"p":["*%_"],"r":"Mu"},"n":"rethrow"},{"n":"backtrace","s":{"p":["*%_"],"r":"Mu"},"k":"m","m":0},{"s":{"p":["*%_"],"r":"Mu"},"n":"gist","k":"m","m":1},{"n":"gist","s":{"p":["*%_"],"r":"Mu"},"k":"m","m":1},{"m":1,"k":"m","s":{"r":"Mu","p":["*%_"]},"n":"gist"},{"m":0,"k":"m","n":"vault-backtrace","s":{"p":["*%_"],"r":"Mu"}},{"k":"s","m":0,"s":{"r":"Mu","p":["@auto","%init","*%_"]},"n":"BUILDALL"}],"t":"X::Scheduler::CueInNaNSeconds","n":"X::Scheduler::CueInNaNSeconds"},{"n":"X::Immutable","t":"X::Immutable","m":[{"k":"m","m":0,"s":{"r":"Mu","p":["*%_"]},"n":"message"},{"s":{"r":"Mu","p":["*%_"]},"n":"typename","k":"m","m":0},{"s":{"p":["*%_"],"r":"Mu"},"n":"method","k":"m","m":0},{"k":"s","m":0,"n":"BUILDALL","s":{"r":"Mu","p":["@auto","%init","*%_"]}},{"n":"resume","s":{"r":"Bool","p":["*%_"]},"k":"m","m":0},{"s":{"r":"Mu","p":["*%_"]},"n":"reset-backtrace","m":0,"k":"m"},{"k":"m","m":0,"s":{"p":["*%_"],"r":"Bool"},"n":"is-compile-time"},{"m":0,"k":"m","s":{"p":["$bt?","*%_"],"r":"Mu"},"n":"throw"},{"m":0,"k":"m","s":{"r":"Mu","p":["*%_"]},"n":"fail"},{"n":"Str","s":{"p":["*%_"],"r":"Mu"},"m":1,"k":"m"},{"m":1,"k":"m","n":"Str","s":{"p":["*%_"],"r":"Mu"}},{"s":{"p":["*%_"],"r":"Mu"},"n":"Str","m":1,"k":"m"},{"s":{"p":["*%_"],"r":"Mu"},"n":"die","k":"m","m":0},{"k":"m","m":0,"n":"rethrow","s":{"p":["*%_"],"r":"Mu"}},{"k":"m","m":0,"n":"backtrace","s":{"r":"Mu","p":["*%_"]}},{"m":1,"k":"m","n":"gist","s":{"r":"Mu","p":["*%_"]}},{"s":{"r":"Mu","p":["*%_"]},"n":"gist","k":"m","m":1},{"n":"gist","s":{"r":"Mu","p":["*%_"]},"k":"m","m":1},{"n":"vault-backtrace","s":{"p":["*%_"],"r":"Mu"},"k":"m","m":0},{"k":"s","m":0,"n":"BUILDALL","s":{"p":["@auto","%init","*%_"],"r":"Mu"}}],"k":"c","a":[{"k":"v","t":"Mu","n":"$.typename"},{"t":"Mu","n":"$.method","k":"v"},{"n":"$!ex","t":"Mu","k":"v"},{"k":"v","n":"$!bt","t":"Mu"}],"b":"A"},{"d":"TITLE\nrole X::OS\n\nSUBTITLE\nError reported by the operating system\n\n    role X::OS { has $.os-error }\n\nCommon role for all exceptions that are triggered by some error reported by\nthe operating system (failed IO, system calls, fork, memory allocation).\n\n","b":"C","a":[{"k":"v","t":"Mu","n":"$.os-error"}],"m":[{"n":"message","s":{"r":"Mu","p":["*%_"]},"k":"m","m":0}],"k":"ro","t":"X::OS","n":"X::OS"},{"b":"A","a":[{"n":"$.operation","t":"Mu","k":"v"},{"t":"Mu","n":"$!ex","k":"v"},{"k":"v","t":"Mu","n":"$!bt"}],"k":"c","m":[{"k":"m","m":0,"n":"message","s":{"r":"Mu","p":["*%_"]}},{"m":0,"k":"m","s":{"r":"Mu","p":["*%_"]},"n":"operation"},{"n":"BUILDALL","s":{"r":"Mu","p":["@auto","%init","*%_"]},"m":0,"k":"s"},{"k":"m","m":0,"n":"resume","s":{"r":"Bool","p":["*%_"]}},{"m":0,"k":"m","n":"reset-backtrace","s":{"r":"Mu","p":["*%_"]}},{"m":0,"k":"m","n":"is-compile-time","s":{"r":"Bool","p":["*%_"]}},{"k":"m","m":0,"s":{"p":["$bt?","*%_"],"r":"Mu"},"n":"throw"},{"s":{"p":["*%_"],"r":"Mu"},"n":"fail","m":0,"k":"m"},{"n":"Str","s":{"r":"Mu","p":["*%_"]},"k":"m","m":1},{"s":{"r":"Mu","p":["*%_"]},"n":"Str","k":"m","m":1},{"s":{"r":"Mu","p":["*%_"]},"n":"Str","m":1,"k":"m"},{"k":"m","m":0,"n":"die","s":{"p":["*%_"],"r":"Mu"}},{"k":"m","m":0,"n":"rethrow","s":{"r":"Mu","p":["*%_"]}},{"n":"backtrace","s":{"r":"Mu","p":["*%_"]},"m":0,"k":"m"},{"n":"gist","s":{"r":"Mu","p":["*%_"]},"m":1,"k":"m"},{"n":"gist","s":{"r":"Mu","p":["*%_"]},"m":1,"k":"m"},{"m":1,"k":"m","s":{"p":["*%_"],"r":"Mu"},"n":"gist"},{"m":0,"k":"m","s":{"r":"Mu","p":["*%_"]},"n":"vault-backtrace"},{"k":"s","m":0,"n":"BUILDALL","s":{"p":["@auto","%init","*%_"],"r":"Mu"}}],"t":"X::IllegalOnFixedDimensionArray","n":"X::IllegalOnFixedDimensionArray"},{"t":"X::React::Died","n":"X::React::Died","k":"ro","b":"C","a":[{"t":"Mu","n":"$.react-backtrace","k":"v"}]},{"n":"X::Redeclaration","t":"X::Redeclaration","m":[{"s":{"r":"Mu","p":["*%_"]},"n":"message","m":0,"k":"m"},{"k":"m","m":0,"s":{"r":"Mu","p":["*%_"]},"n":"sorry_heading"},{"m":0,"k":"m","s":{"r":"Mu","p":["$file","$line","*%_"]},"n":"SET_FILE_LINE"},{"n":"gist","s":{"p":["*%_"],"r":"Mu"},"k":"m","m":1},{"k":"m","m":1,"n":"gist","s":{"p":["*%_"],"r":"Mu"}},{"n":"gist","s":{"r":"Mu","p":["*%_"]},"m":1,"k":"m"},{"k":"m","m":1,"n":"gist","s":{"p":[":$sorry = Bool::True",":$expect = Bool::True","*%_"],"r":"Mu"}},{"m":0,"k":"m","n":"symbol","s":{"p":["*%_"],"r":"Mu"}},{"s":{"r":"Mu","p":["*%_"]},"n":"postfix","m":0,"k":"m"},{"k":"m","m":0,"n":"what","s":{"p":["*%_"],"r":"Mu"}},{"k":"m","m":0,"n":"filename","s":{"r":"Mu","p":["*%_"]}},{"s":{"p":["*%_"],"r":"Mu"},"n":"pos","m":0,"k":"m"},{"k":"m","m":0,"s":{"r":"Mu","p":["*%_"]},"n":"line"},{"s":{"p":["*%_"],"r":"Mu"},"n":"column","k":"m","m":0},{"m":0,"k":"m","n":"modules","s":{"p":["*%_"],"r":"Mu"}},{"k":"m","m":0,"n":"is-compile-time","s":{"p":["*%_"],"r":"Mu"}},{"s":{"p":["*%_"],"r":"Mu"},"n":"pre","m":0,"k":"m"},{"s":{"r":"Mu","p":["*%_"]},"n":"post","k":"m","m":0},{"k":"m","m":0,"n":"highexpect","s":{"r":"Mu","p":["*%_"]}},{"s":{"p":["@auto","%init","*%_"],"r":"Mu"},"n":"BUILDALL","k":"s","m":0},{"n":"resume","s":{"p":["*%_"],"r":"Bool"},"k":"m","m":0},{"k":"m","m":0,"s":{"p":["*%_"],"r":"Mu"},"n":"reset-backtrace"},{"m":0,"k":"m","s":{"r":"Bool","p":["*%_"]},"n":"is-compile-time"},{"k":"m","m":0,"s":{"p":["$bt?","*%_"],"r":"Mu"},"n":"throw"},{"s":{"r":"Mu","p":["*%_"]},"n":"fail","m":0,"k":"m"},{"k":"m","m":1,"s":{"r":"Mu","p":["*%_"]},"n":"Str"},{"s":{"p":["*%_"],"r":"Mu"},"n":"Str","k":"m","m":1},{"n":"Str","s":{"p":["*%_"],"r":"Mu"},"m":1,"k":"m"},{"k":"m","m":0,"s":{"p":["*%_"],"r":"Mu"},"n":"die"},{"s":{"p":["*%_"],"r":"Mu"},"n":"rethrow","m":0,"k":"m"},{"m":0,"k":"m","s":{"p":["*%_"],"r":"Mu"},"n":"backtrace"},{"k":"m","m":1,"s":{"p":["*%_"],"r":"Mu"},"n":"gist"},{"m":1,"k":"m","n":"gist","s":{"r":"Mu","p":["*%_"]}},{"n":"gist","s":{"p":["*%_"],"r":"Mu"},"m":1,"k":"m"},{"s":{"r":"Mu","p":["*%_"]},"n":"vault-backtrace","m":0,"k":"m"},{"k":"s","m":0,"s":{"r":"Mu","p":["@auto","%init","*%_"]},"n":"BUILDALL"}],"k":"c","b":"A","a":[{"t":"Mu","n":"$.symbol","k":"v"},{"k":"v","n":"$.postfix","t":"Mu"},{"t":"Mu","n":"$.what","k":"v"},{"k":"v","n":"$.filename","t":"Mu"},{"n":"$.pos","t":"Mu","k":"v"},{"k":"v","n":"$.line","t":"Mu"},{"k":"v","t":"Mu","n":"$.column"},{"k":"v","t":"Positional","n":"@.modules"},{"n":"$.is-compile-time","t":"Mu","k":"v"},{"k":"v","n":"$.pre","t":"Mu"},{"t":"Mu","n":"$.post","k":"v"},{"k":"v","n":"@.highexpect","t":"Positional"},{"n":"$!ex","t":"Mu","k":"v"},{"k":"v","t":"Mu","n":"$!bt"}],"d":"TITLE\nclass X::Redeclaration\n\nSUBTITLE\nCompilation error due to declaring an already declared symbol\n\n    class X::Redeclaration does X::Comp { }\n\nThrown when a symbol (variable, routine, type, parameter, ...) is\nredeclared. Note that redeclarations are generally fine in an inner scope,\nbut if the redeclaration appears in the same scope as the original\ndeclaration, it usually indicates an error and is treated as one.\n\nExamples\n\n    my $x; my $x;\n\n\ndies with\n\n    ===SORRY!===\n    Redeclaration of symbol $x\n\n\nIt works with routines too:\n\n    sub f() { }\n    sub f() { }\n\n\ndies with\n\n    ===SORRY!===\n    Redeclaration of routine f\n\n\nBut those are fine\n\n    my $x;\n    sub f() {\n        my $x;          # not a redeclaration,\n                        # because it's in an inner scope\n        sub f() { };    # same\n    }\n\n\n"},{"t":"X::Redeclaration::Outer","n":"X::Redeclaration::Outer","k":"c","m":[{"m":0,"k":"m","s":{"r":"Mu","p":["*%_"]},"n":"message"},{"s":{"r":"Mu","p":["*%_"]},"n":"sorry_heading","m":0,"k":"m"},{"n":"SET_FILE_LINE","s":{"p":["$file","$line","*%_"],"r":"Mu"},"k":"m","m":0},{"n":"gist","s":{"r":"Mu","p":["*%_"]},"k":"m","m":1},{"n":"gist","s":{"p":["*%_"],"r":"Mu"},"m":1,"k":"m"},{"n":"gist","s":{"r":"Mu","p":["*%_"]},"m":1,"k":"m"},{"n":"gist","s":{"r":"Mu","p":[":$sorry = Bool::True",":$expect = Bool::True","*%_"]},"m":1,"k":"m"},{"k":"m","m":0,"s":{"r":"Mu","p":["*%_"]},"n":"symbol"},{"s":{"r":"Mu","p":["*%_"]},"n":"filename","m":0,"k":"m"},{"m":0,"k":"m","n":"pos","s":{"r":"Mu","p":["*%_"]}},{"k":"m","m":0,"s":{"r":"Mu","p":["*%_"]},"n":"line"},{"s":{"r":"Mu","p":["*%_"]},"n":"column","m":0,"k":"m"},{"n":"modules","s":{"p":["*%_"],"r":"Mu"},"k":"m","m":0},{"m":0,"k":"m","n":"is-compile-time","s":{"p":["*%_"],"r":"Mu"}},{"m":0,"k":"m","s":{"p":["*%_"],"r":"Mu"},"n":"pre"},{"n":"post","s":{"r":"Mu","p":["*%_"]},"m":0,"k":"m"},{"s":{"p":["*%_"],"r":"Mu"},"n":"highexpect","m":0,"k":"m"},{"n":"BUILDALL","s":{"r":"Mu","p":["@auto","%init","*%_"]},"m":0,"k":"s"},{"k":"m","m":0,"s":{"p":["*%_"],"r":"Bool"},"n":"resume"},{"k":"m","m":0,"n":"reset-backtrace","s":{"p":["*%_"],"r":"Mu"}},{"m":0,"k":"m","n":"is-compile-time","s":{"r":"Bool","p":["*%_"]}},{"m":0,"k":"m","s":{"p":["$bt?","*%_"],"r":"Mu"},"n":"throw"},{"m":0,"k":"m","s":{"r":"Mu","p":["*%_"]},"n":"fail"},{"n":"Str","s":{"r":"Mu","p":["*%_"]},"m":1,"k":"m"},{"m":1,"k":"m","n":"Str","s":{"r":"Mu","p":["*%_"]}},{"n":"Str","s":{"r":"Mu","p":["*%_"]},"m":1,"k":"m"},{"k":"m","m":0,"n":"die","s":{"p":["*%_"],"r":"Mu"}},{"s":{"p":["*%_"],"r":"Mu"},"n":"rethrow","m":0,"k":"m"},{"s":{"p":["*%_"],"r":"Mu"},"n":"backtrace","k":"m","m":0},{"s":{"r":"Mu","p":["*%_"]},"n":"gist","k":"m","m":1},{"n":"gist","s":{"r":"Mu","p":["*%_"]},"k":"m","m":1},{"m":1,"k":"m","n":"gist","s":{"p":["*%_"],"r":"Mu"}},{"s":{"r":"Mu","p":["*%_"]},"n":"vault-backtrace","m":0,"k":"m"},{"s":{"p":["@auto","%init","*%_"],"r":"Mu"},"n":"BUILDALL","k":"s","m":0}],"b":"A","a":[{"k":"v","n":"$.symbol","t":"Mu"},{"k":"v","n":"$.filename","t":"Mu"},{"k":"v","t":"Mu","n":"$.pos"},{"n":"$.line","t":"Mu","k":"v"},{"k":"v","t":"Mu","n":"$.column"},{"k":"v","n":"@.modules","t":"Positional"},{"n":"$.is-compile-time","t":"Mu","k":"v"},{"t":"Mu","n":"$.pre","k":"v"},{"t":"Mu","n":"$.post","k":"v"},{"k":"v","n":"@.highexpect","t":"Positional"},{"k":"v","t":"Mu","n":"$!ex"},{"k":"v","t":"Mu","n":"$!bt"}]},{"k":"c","m":[{"n":"message","s":{"p":["*%_"],"r":"Mu"},"k":"m","m":0},{"k":"m","m":0,"n":"type","s":{"r":"Mu","p":["*%_"]}},{"n":"BUILDALL","s":{"p":["@auto","%init","*%_"],"r":"Mu"},"m":0,"k":"s"},{"n":"resume","s":{"p":["*%_"],"r":"Bool"},"k":"m","m":0},{"s":{"r":"Mu","p":["*%_"]},"n":"reset-backtrace","k":"m","m":0},{"k":"m","m":0,"n":"is-compile-time","s":{"p":["*%_"],"r":"Bool"}},{"n":"throw","s":{"r":"Mu","p":["$bt?","*%_"]},"k":"m","m":0},{"n":"fail","s":{"r":"Mu","p":["*%_"]},"k":"m","m":0},{"m":1,"k":"m","n":"Str","s":{"p":["*%_"],"r":"Mu"}},{"k":"m","m":1,"s":{"p":["*%_"],"r":"Mu"},"n":"Str"},{"m":1,"k":"m","s":{"p":["*%_"],"r":"Mu"},"n":"Str"},{"m":0,"k":"m","s":{"p":["*%_"],"r":"Mu"},"n":"die"},{"n":"rethrow","s":{"p":["*%_"],"r":"Mu"},"m":0,"k":"m"},{"n":"backtrace","s":{"p":["*%_"],"r":"Mu"},"m":0,"k":"m"},{"m":1,"k":"m","s":{"r":"Mu","p":["*%_"]},"n":"gist"},{"n":"gist","s":{"p":["*%_"],"r":"Mu"},"m":1,"k":"m"},{"m":1,"k":"m","n":"gist","s":{"r":"Mu","p":["*%_"]}},{"s":{"p":["*%_"],"r":"Mu"},"n":"vault-backtrace","k":"m","m":0},{"n":"BUILDALL","s":{"p":["@auto","%init","*%_"],"r":"Mu"},"k":"s","m":0}],"b":"A","a":[{"k":"v","n":"$.type","t":"Mu"},{"t":"Mu","n":"$!ex","k":"v"},{"k":"v","n":"$!bt","t":"Mu"}],"t":"X::NotParametric","n":"X::NotParametric"},{"b":"A","a":[{"k":"v","n":"$.what","t":"Mu"},{"k":"v","n":"$.source","t":"Mu"},{"t":"Positional","n":"@.unexpected","k":"v"},{"t":"Positional","n":"@.nogo","k":"v"},{"t":"Mu","n":"$!ex","k":"v"},{"k":"v","n":"$!bt","t":"Mu"}],"k":"c","m":[{"n":"message","s":{"r":"Mu","p":["*%_"]},"m":0,"k":"m"},{"s":{"r":"Mu","p":["*%_"]},"n":"unexpected","k":"m","m":0},{"k":"m","m":0,"s":{"r":"Mu","p":["*%_"]},"n":"nogo"},{"k":"m","m":0,"s":{"r":"Mu","p":["*%_"]},"n":"what"},{"n":"source","s":{"r":"Mu","p":["*%_"]},"k":"m","m":0},{"n":"BUILDALL","s":{"r":"Mu","p":["@auto","%init","*%_"]},"m":0,"k":"s"},{"k":"m","m":0,"n":"resume","s":{"r":"Bool","p":["*%_"]}},{"s":{"r":"Mu","p":["*%_"]},"n":"reset-backtrace","k":"m","m":0},{"m":0,"k":"m","s":{"p":["*%_"],"r":"Bool"},"n":"is-compile-time"},{"s":{"p":["$bt?","*%_"],"r":"Mu"},"n":"throw","m":0,"k":"m"},{"s":{"r":"Mu","p":["*%_"]},"n":"fail","k":"m","m":0},{"m":1,"k":"m","n":"Str","s":{"r":"Mu","p":["*%_"]}},{"s":{"r":"Mu","p":["*%_"]},"n":"Str","m":1,"k":"m"},{"n":"Str","s":{"p":["*%_"],"r":"Mu"},"k":"m","m":1},{"m":0,"k":"m","n":"die","s":{"p":["*%_"],"r":"Mu"}},{"k":"m","m":0,"s":{"r":"Mu","p":["*%_"]},"n":"rethrow"},{"s":{"p":["*%_"],"r":"Mu"},"n":"backtrace","m":0,"k":"m"},{"k":"m","m":1,"s":{"p":["*%_"],"r":"Mu"},"n":"gist"},{"n":"gist","s":{"r":"Mu","p":["*%_"]},"m":1,"k":"m"},{"k":"m","m":1,"s":{"r":"Mu","p":["*%_"]},"n":"gist"},{"k":"m","m":0,"s":{"r":"Mu","p":["*%_"]},"n":"vault-backtrace"},{"k":"s","m":0,"n":"BUILDALL","s":{"r":"Mu","p":["@auto","%init","*%_"]}}],"n":"X::Adverb","t":"X::Adverb"},{"t":"X::Does::TypeObject","n":"X::Does::TypeObject","d":"TITLE\nclass X::Does::TypeObject\n\nSUBTITLE\nError due to mixing into a type object\n\n    class X::Does::TypeObject is Exception {}\n\nWhen you try to add one or more roles to a type object with does after it\nhas been composed, an error of type X::Does::TypeObject is thrown:\n\n    Mu does Numeric;    # Cannot use 'does' operator with a type object.\n\n\nThe correct way to apply roles to a type is at declaration time:\n\n    class GrassmannNumber does Numeric { ... };\n    role AlgebraDebugger does IO { ... };\n    grammar IntegralParser does AlgebraParser { ... };\n\n\nRoles may only be runtime-mixed into defined object instances:\n\n    GrassmannNumber.new does AlgebraDebugger;\n\n\n(This restriction may be worked around by using augment or supersede, or\nwith dark Metamodel magics, but this will likely result in a significant\nperformance penalty.)\n\n","a":[{"t":"Mu","n":"$.type","k":"v"},{"k":"v","n":"%.nameds","t":"Associative"},{"k":"v","t":"Mu","n":"$!ex"},{"t":"Mu","n":"$!bt","k":"v"}],"b":"A","k":"c","m":[{"m":0,"k":"m","s":{"p":["*%_"],"r":"Mu"},"n":"message"},{"n":"type","s":{"p":["*%_"],"r":"Mu"},"m":0,"k":"m"},{"m":0,"k":"m","s":{"r":"Mu","p":["*%_"]},"n":"nameds"},{"s":{"r":"Mu","p":["@auto","%init","*%_"]},"n":"BUILDALL","k":"s","m":0},{"m":0,"k":"m","s":{"r":"Bool","p":["*%_"]},"n":"resume"},{"n":"reset-backtrace","s":{"r":"Mu","p":["*%_"]},"m":0,"k":"m"},{"k":"m","m":0,"s":{"p":["*%_"],"r":"Bool"},"n":"is-compile-time"},{"n":"throw","s":{"r":"Mu","p":["$bt?","*%_"]},"m":0,"k":"m"},{"m":0,"k":"m","s":{"r":"Mu","p":["*%_"]},"n":"fail"},{"m":1,"k":"m","s":{"r":"Mu","p":["*%_"]},"n":"Str"},{"m":1,"k":"m","s":{"p":["*%_"],"r":"Mu"},"n":"Str"},{"m":1,"k":"m","s":{"p":["*%_"],"r":"Mu"},"n":"Str"},{"n":"die","s":{"r":"Mu","p":["*%_"]},"m":0,"k":"m"},{"n":"rethrow","s":{"p":["*%_"],"r":"Mu"},"m":0,"k":"m"},{"n":"backtrace","s":{"r":"Mu","p":["*%_"]},"k":"m","m":0},{"s":{"r":"Mu","p":["*%_"]},"n":"gist","m":1,"k":"m"},{"k":"m","m":1,"s":{"r":"Mu","p":["*%_"]},"n":"gist"},{"s":{"r":"Mu","p":["*%_"]},"n":"gist","m":1,"k":"m"},{"m":0,"k":"m","n":"vault-backtrace","s":{"r":"Mu","p":["*%_"]}},{"m":0,"k":"s","s":{"r":"Mu","p":["@auto","%init","*%_"]},"n":"BUILDALL"}]},{"n":"X::Constructor::Positional","t":"X::Constructor::Positional","m":[{"m":0,"k":"m","n":"message","s":{"p":["*%_"],"r":"Mu"}},{"s":{"p":["*%_"],"r":"Mu"},"n":"type","m":0,"k":"m"},{"m":0,"k":"s","s":{"r":"Mu","p":["@auto","%init","*%_"]},"n":"BUILDALL"},{"n":"resume","s":{"r":"Bool","p":["*%_"]},"k":"m","m":0},{"k":"m","m":0,"n":"reset-backtrace","s":{"p":["*%_"],"r":"Mu"}},{"k":"m","m":0,"s":{"r":"Bool","p":["*%_"]},"n":"is-compile-time"},{"k":"m","m":0,"n":"throw","s":{"r":"Mu","p":["$bt?","*%_"]}},{"k":"m","m":0,"n":"fail","s":{"p":["*%_"],"r":"Mu"}},{"s":{"p":["*%_"],"r":"Mu"},"n":"Str","k":"m","m":1},{"m":1,"k":"m","s":{"p":["*%_"],"r":"Mu"},"n":"Str"},{"n":"Str","s":{"r":"Mu","p":["*%_"]},"m":1,"k":"m"},{"m":0,"k":"m","s":{"r":"Mu","p":["*%_"]},"n":"die"},{"s":{"r":"Mu","p":["*%_"]},"n":"rethrow","m":0,"k":"m"},{"n":"backtrace","s":{"r":"Mu","p":["*%_"]},"k":"m","m":0},{"m":1,"k":"m","s":{"r":"Mu","p":["*%_"]},"n":"gist"},{"k":"m","m":1,"n":"gist","s":{"p":["*%_"],"r":"Mu"}},{"k":"m","m":1,"s":{"r":"Mu","p":["*%_"]},"n":"gist"},{"m":0,"k":"m","s":{"r":"Mu","p":["*%_"]},"n":"vault-backtrace"},{"m":0,"k":"s","n":"BUILDALL","s":{"p":["@auto","%init","*%_"],"r":"Mu"}}],"k":"c","b":"A","a":[{"k":"v","n":"$.type","t":"Mu"},{"k":"v","t":"Mu","n":"$!ex"},{"k":"v","n":"$!bt","t":"Mu"}],"d":"TITLE\nclass X::Constructor::Positional\n\nSUBTITLE\nError due to passing positional arguments to a default constructor\n\n    class X::Constructor::Positional is Exception { }\n\nThrown from Mu.new when positional arguments are passed to it.\n\nFor example\n\n    class A { };\n    A.new(2, 3);\n    CATCH { default { put .^name, ': ', .Str } };\n    # OUTPUT: «X::Constructor::Positional: Default constructor for 'A' only takes named arguments␤»"},{"m":[{"n":"message","s":{"r":"Mu","p":["*%_"]},"m":0,"k":"m"},{"s":{"r":"Mu","p":["*%_"]},"n":"what","m":0,"k":"m"},{"k":"m","m":0,"s":{"r":"Mu","p":["*%_"]},"n":"reason"},{"n":"BUILDALL","s":{"p":["@auto","%init","*%_"],"r":"Mu"},"m":0,"k":"s"},{"m":0,"k":"m","n":"resume","s":{"r":"Bool","p":["*%_"]}},{"s":{"p":["*%_"],"r":"Mu"},"n":"reset-backtrace","m":0,"k":"m"},{"m":0,"k":"m","s":{"r":"Bool","p":["*%_"]},"n":"is-compile-time"},{"n":"throw","s":{"p":["$bt?","*%_"],"r":"Mu"},"k":"m","m":0},{"k":"m","m":0,"n":"fail","s":{"p":["*%_"],"r":"Mu"}},{"n":"Str","s":{"p":["*%_"],"r":"Mu"},"k":"m","m":1},{"m":1,"k":"m","n":"Str","s":{"p":["*%_"],"r":"Mu"}},{"n":"Str","s":{"r":"Mu","p":["*%_"]},"k":"m","m":1},{"n":"die","s":{"r":"Mu","p":["*%_"]},"m":0,"k":"m"},{"n":"rethrow","s":{"p":["*%_"],"r":"Mu"},"m":0,"k":"m"},{"k":"m","m":0,"n":"backtrace","s":{"r":"Mu","p":["*%_"]}},{"n":"gist","s":{"r":"Mu","p":["*%_"]},"k":"m","m":1},{"n":"gist","s":{"p":["*%_"],"r":"Mu"},"k":"m","m":1},{"n":"gist","s":{"r":"Mu","p":["*%_"]},"m":1,"k":"m"},{"m":0,"k":"m","s":{"r":"Mu","p":["*%_"]},"n":"vault-backtrace"},{"m":0,"k":"s","n":"BUILDALL","s":{"p":["@auto","%init","*%_"],"r":"Mu"}}],"k":"c","a":[{"n":"$.what","t":"Mu","k":"v"},{"n":"$.reason","t":"Mu","k":"v"},{"k":"v","n":"$!ex","t":"Mu"},{"k":"v","t":"Mu","n":"$!bt"}],"b":"A","t":"X::Exhausted","n":"X::Exhausted"},{"k":"c","m":[{"m":0,"k":"m","n":"message","s":{"r":"Mu","p":["*%_"]}},{"s":{"p":["*%_"],"r":"Mu"},"n":"sorry_heading","m":0,"k":"m"},{"m":0,"k":"m","s":{"r":"Mu","p":["$file","$line","*%_"]},"n":"SET_FILE_LINE"},{"m":1,"k":"m","n":"gist","s":{"r":"Mu","p":["*%_"]}},{"n":"gist","s":{"p":["*%_"],"r":"Mu"},"k":"m","m":1},{"n":"gist","s":{"p":["*%_"],"r":"Mu"},"k":"m","m":1},{"n":"gist","s":{"r":"Mu","p":[":$sorry = Bool::True",":$expect = Bool::True","*%_"]},"k":"m","m":1},{"s":{"r":"Mu","p":["*%_"]},"n":"symbol","k":"m","m":0},{"s":{"r":"Mu","p":["*%_"]},"n":"filename","m":0,"k":"m"},{"m":0,"k":"m","s":{"r":"Mu","p":["*%_"]},"n":"pos"},{"m":0,"k":"m","n":"line","s":{"r":"Mu","p":["*%_"]}},{"s":{"r":"Mu","p":["*%_"]},"n":"column","k":"m","m":0},{"s":{"p":["*%_"],"r":"Mu"},"n":"modules","k":"m","m":0},{"k":"m","m":0,"n":"is-compile-time","s":{"r":"Mu","p":["*%_"]}},{"s":{"p":["*%_"],"r":"Mu"},"n":"pre","k":"m","m":0},{"m":0,"k":"m","s":{"r":"Mu","p":["*%_"]},"n":"post"},{"m":0,"k":"m","n":"highexpect","s":{"p":["*%_"],"r":"Mu"}},{"m":0,"k":"s","s":{"p":["@auto","%init","*%_"],"r":"Mu"},"n":"BUILDALL"},{"m":0,"k":"m","s":{"r":"Bool","p":["*%_"]},"n":"resume"},{"m":0,"k":"m","s":{"p":["*%_"],"r":"Mu"},"n":"reset-backtrace"},{"n":"is-compile-time","s":{"r":"Bool","p":["*%_"]},"m":0,"k":"m"},{"k":"m","m":0,"s":{"p":["$bt?","*%_"],"r":"Mu"},"n":"throw"},{"m":0,"k":"m","s":{"p":["*%_"],"r":"Mu"},"n":"fail"},{"n":"Str","s":{"r":"Mu","p":["*%_"]},"k":"m","m":1},{"k":"m","m":1,"s":{"p":["*%_"],"r":"Mu"},"n":"Str"},{"m":1,"k":"m","n":"Str","s":{"p":["*%_"],"r":"Mu"}},{"m":0,"k":"m","n":"die","s":{"p":["*%_"],"r":"Mu"}},{"m":0,"k":"m","n":"rethrow","s":{"r":"Mu","p":["*%_"]}},{"m":0,"k":"m","n":"backtrace","s":{"r":"Mu","p":["*%_"]}},{"k":"m","m":1,"n":"gist","s":{"p":["*%_"],"r":"Mu"}},{"k":"m","m":1,"s":{"r":"Mu","p":["*%_"]},"n":"gist"},{"m":1,"k":"m","n":"gist","s":{"p":["*%_"],"r":"Mu"}},{"s":{"r":"Mu","p":["*%_"]},"n":"vault-backtrace","m":0,"k":"m"},{"s":{"p":["@auto","%init","*%_"],"r":"Mu"},"n":"BUILDALL","k":"s","m":0}],"a":[{"n":"$.symbol","t":"Mu","k":"v"},{"k":"v","n":"$.filename","t":"Mu"},{"k":"v","n":"$.pos","t":"Mu"},{"n":"$.line","t":"Mu","k":"v"},{"k":"v","n":"$.column","t":"Mu"},{"n":"@.modules","t":"Positional","k":"v"},{"k":"v","n":"$.is-compile-time","t":"Mu"},{"n":"$.pre","t":"Mu","k":"v"},{"k":"v","t":"Mu","n":"$.post"},{"n":"@.highexpect","t":"Positional","k":"v"},{"t":"Mu","n":"$!ex","k":"v"},{"k":"v","t":"Mu","n":"$!bt"}],"b":"A","d":"TITLE\nclass X::Export::NameClash\n\nSUBTITLE\nCompilation error due to exporting the same symbol twice\n\n    class X::Export::NameClash does X::Comp { }\n\nCompile time error thrown when a symbol is exported twice.\n\nFor example\n\n    sub f() is export { };\n    {\n        sub f() is export { }\n    }\n\n\ndies with\n\n    ===SORRY!===\n    A symbol '&f' has already been exported\n\n\n","n":"X::Export::NameClash","t":"X::Export::NameClash"},{"b":"A","a":[{"k":"v","t":"Mu","n":"$.operation"},{"n":"$.got-dimensions","t":"Mu","k":"v"},{"k":"v","n":"$.needed-dimensions","t":"Mu"},{"n":"$!ex","t":"Mu","k":"v"},{"n":"$!bt","t":"Mu","k":"v"}],"m":[{"n":"message","s":{"p":["*%_"],"r":"Mu"},"m":0,"k":"m"},{"k":"m","m":0,"n":"operation","s":{"p":["*%_"],"r":"Mu"}},{"k":"m","m":0,"n":"got-dimensions","s":{"r":"Mu","p":["*%_"]}},{"s":{"r":"Mu","p":["*%_"]},"n":"needed-dimensions","m":0,"k":"m"},{"n":"BUILDALL","s":{"p":["@auto","%init","*%_"],"r":"Mu"},"k":"s","m":0},{"n":"resume","s":{"p":["*%_"],"r":"Bool"},"k":"m","m":0},{"m":0,"k":"m","s":{"r":"Mu","p":["*%_"]},"n":"reset-backtrace"},{"m":0,"k":"m","n":"is-compile-time","s":{"r":"Bool","p":["*%_"]}},{"k":"m","m":0,"n":"throw","s":{"r":"Mu","p":["$bt?","*%_"]}},{"k":"m","m":0,"s":{"r":"Mu","p":["*%_"]},"n":"fail"},{"n":"Str","s":{"p":["*%_"],"r":"Mu"},"k":"m","m":1},{"s":{"p":["*%_"],"r":"Mu"},"n":"Str","k":"m","m":1},{"s":{"p":["*%_"],"r":"Mu"},"n":"Str","m":1,"k":"m"},{"s":{"r":"Mu","p":["*%_"]},"n":"die","k":"m","m":0},{"n":"rethrow","s":{"r":"Mu","p":["*%_"]},"k":"m","m":0},{"s":{"r":"Mu","p":["*%_"]},"n":"backtrace","m":0,"k":"m"},{"m":1,"k":"m","n":"gist","s":{"p":["*%_"],"r":"Mu"}},{"s":{"r":"Mu","p":["*%_"]},"n":"gist","k":"m","m":1},{"k":"m","m":1,"s":{"p":["*%_"],"r":"Mu"},"n":"gist"},{"n":"vault-backtrace","s":{"p":["*%_"],"r":"Mu"},"m":0,"k":"m"},{"s":{"p":["@auto","%init","*%_"],"r":"Mu"},"n":"BUILDALL","k":"s","m":0}],"k":"c","n":"X::TooManyDimensions","t":"X::TooManyDimensions"},{"m":[{"k":"m","m":0,"s":{"p":["*%_"],"r":"Mu"},"n":"message"},{"n":"BUILDALL","s":{"r":"Mu","p":["@auto","%init","*%_"]},"k":"s","m":0},{"m":0,"k":"m","s":{"p":["*%_"],"r":"Bool"},"n":"resume"},{"m":0,"k":"m","n":"reset-backtrace","s":{"r":"Mu","p":["*%_"]}},{"n":"is-compile-time","s":{"p":["*%_"],"r":"Bool"},"m":0,"k":"m"},{"s":{"r":"Mu","p":["$bt?","*%_"]},"n":"throw","m":0,"k":"m"},{"s":{"p":["*%_"],"r":"Mu"},"n":"fail","k":"m","m":0},{"m":1,"k":"m","n":"Str","s":{"p":["*%_"],"r":"Mu"}},{"k":"m","m":1,"n":"Str","s":{"p":["*%_"],"r":"Mu"}},{"n":"Str","s":{"p":["*%_"],"r":"Mu"},"m":1,"k":"m"},{"s":{"p":["*%_"],"r":"Mu"},"n":"die","m":0,"k":"m"},{"k":"m","m":0,"s":{"p":["*%_"],"r":"Mu"},"n":"rethrow"},{"k":"m","m":0,"n":"backtrace","s":{"p":["*%_"],"r":"Mu"}},{"m":1,"k":"m","n":"gist","s":{"p":["*%_"],"r":"Mu"}},{"k":"m","m":1,"n":"gist","s":{"p":["*%_"],"r":"Mu"}},{"m":1,"k":"m","n":"gist","s":{"r":"Mu","p":["*%_"]}},{"k":"m","m":0,"s":{"p":["*%_"],"r":"Mu"},"n":"vault-backtrace"},{"k":"s","m":0,"n":"BUILDALL","s":{"p":["@auto","%init","*%_"],"r":"Mu"}}],"k":"c","b":"A","a":[{"k":"v","n":"$!ex","t":"Mu"},{"k":"v","n":"$!bt","t":"Mu"}],"t":"X::Pairup::OddNumber","n":"X::Pairup::OddNumber"},{"k":"c","m":[{"k":"m","m":0,"n":"message","s":{"r":"Mu","p":["*%_"]}},{"k":"m","m":0,"s":{"r":"Mu","p":["*%_"]},"n":"method"},{"n":"BUILDALL","s":{"p":["@auto","%init","*%_"],"r":"Mu"},"m":0,"k":"s"},{"s":{"p":["*%_"],"r":"Bool"},"n":"resume","k":"m","m":0},{"k":"m","m":0,"n":"reset-backtrace","s":{"p":["*%_"],"r":"Mu"}},{"s":{"p":["*%_"],"r":"Bool"},"n":"is-compile-time","m":0,"k":"m"},{"k":"m","m":0,"n":"throw","s":{"r":"Mu","p":["$bt?","*%_"]}},{"s":{"p":["*%_"],"r":"Mu"},"n":"fail","m":0,"k":"m"},{"k":"m","m":1,"n":"Str","s":{"r":"Mu","p":["*%_"]}},{"k":"m","m":1,"s":{"p":["*%_"],"r":"Mu"},"n":"Str"},{"m":1,"k":"m","n":"Str","s":{"p":["*%_"],"r":"Mu"}},{"s":{"r":"Mu","p":["*%_"]},"n":"die","k":"m","m":0},{"n":"rethrow","s":{"p":["*%_"],"r":"Mu"},"k":"m","m":0},{"m":0,"k":"m","s":{"p":["*%_"],"r":"Mu"},"n":"backtrace"},{"s":{"p":["*%_"],"r":"Mu"},"n":"gist","m":1,"k":"m"},{"s":{"r":"Mu","p":["*%_"]},"n":"gist","m":1,"k":"m"},{"s":{"p":["*%_"],"r":"Mu"},"n":"gist","m":1,"k":"m"},{"m":0,"k":"m","n":"vault-backtrace","s":{"r":"Mu","p":["*%_"]}},{"k":"s","m":0,"s":{"r":"Mu","p":["@auto","%init","*%_"]},"n":"BUILDALL"}],"a":[{"k":"v","t":"Mu","n":"$.method"},{"t":"Mu","n":"$!ex","k":"v"},{"k":"v","t":"Mu","n":"$!bt"}],"b":"A","n":"X::Buf::AsStr","t":"X::Buf::AsStr"},{"n":"X::Buf::Pack","t":"X::Buf::Pack","m":[{"m":0,"k":"m","s":{"p":["*%_"],"r":"Mu"},"n":"message"},{"n":"directive","s":{"p":["*%_"],"r":"Mu"},"k":"m","m":0},{"k":"s","m":0,"n":"BUILDALL","s":{"p":["@auto","%init","*%_"],"r":"Mu"}},{"n":"resume","s":{"p":["*%_"],"r":"Bool"},"m":0,"k":"m"},{"k":"m","m":0,"s":{"p":["*%_"],"r":"Mu"},"n":"reset-backtrace"},{"k":"m","m":0,"s":{"r":"Bool","p":["*%_"]},"n":"is-compile-time"},{"s":{"r":"Mu","p":["$bt?","*%_"]},"n":"throw","k":"m","m":0},{"s":{"r":"Mu","p":["*%_"]},"n":"fail","k":"m","m":0},{"s":{"p":["*%_"],"r":"Mu"},"n":"Str","k":"m","m":1},{"m":1,"k":"m","n":"Str","s":{"r":"Mu","p":["*%_"]}},{"n":"Str","s":{"p":["*%_"],"r":"Mu"},"m":1,"k":"m"},{"k":"m","m":0,"n":"die","s":{"p":["*%_"],"r":"Mu"}},{"s":{"p":["*%_"],"r":"Mu"},"n":"rethrow","m":0,"k":"m"},{"n":"backtrace","s":{"p":["*%_"],"r":"Mu"},"m":0,"k":"m"},{"s":{"p":["*%_"],"r":"Mu"},"n":"gist","k":"m","m":1},{"n":"gist","s":{"p":["*%_"],"r":"Mu"},"k":"m","m":1},{"n":"gist","s":{"r":"Mu","p":["*%_"]},"k":"m","m":1},{"n":"vault-backtrace","s":{"r":"Mu","p":["*%_"]},"m":0,"k":"m"},{"s":{"p":["@auto","%init","*%_"],"r":"Mu"},"n":"BUILDALL","m":0,"k":"s"}],"k":"c","a":[{"t":"Mu","n":"$.directive","k":"v"},{"n":"$!ex","t":"Mu","k":"v"},{"k":"v","t":"Mu","n":"$!bt"}],"b":"A"},{"m":[{"m":0,"k":"m","s":{"r":"Mu","p":["*%_"]},"n":"message"},{"s":{"r":"Mu","p":["*%_"]},"n":"char","k":"m","m":0},{"m":0,"k":"s","s":{"p":["@auto","%init","*%_"],"r":"Mu"},"n":"BUILDALL"},{"n":"resume","s":{"p":["*%_"],"r":"Bool"},"k":"m","m":0},{"m":0,"k":"m","s":{"r":"Mu","p":["*%_"]},"n":"reset-backtrace"},{"s":{"r":"Bool","p":["*%_"]},"n":"is-compile-time","k":"m","m":0},{"n":"throw","s":{"r":"Mu","p":["$bt?","*%_"]},"k":"m","m":0},{"m":0,"k":"m","s":{"r":"Mu","p":["*%_"]},"n":"fail"},{"n":"Str","s":{"r":"Mu","p":["*%_"]},"m":1,"k":"m"},{"s":{"r":"Mu","p":["*%_"]},"n":"Str","k":"m","m":1},{"n":"Str","s":{"r":"Mu","p":["*%_"]},"m":1,"k":"m"},{"k":"m","m":0,"n":"die","s":{"p":["*%_"],"r":"Mu"}},{"k":"m","m":0,"s":{"p":["*%_"],"r":"Mu"},"n":"rethrow"},{"k":"m","m":0,"n":"backtrace","s":{"r":"Mu","p":["*%_"]}},{"m":1,"k":"m","n":"gist","s":{"r":"Mu","p":["*%_"]}},{"n":"gist","s":{"r":"Mu","p":["*%_"]},"m":1,"k":"m"},{"m":1,"k":"m","s":{"p":["*%_"],"r":"Mu"},"n":"gist"},{"n":"vault-backtrace","s":{"p":["*%_"],"r":"Mu"},"k":"m","m":0},{"n":"BUILDALL","s":{"p":["@auto","%init","*%_"],"r":"Mu"},"m":0,"k":"s"}],"k":"c","a":[{"k":"v","t":"Mu","n":"$.char"},{"n":"$!ex","t":"Mu","k":"v"},{"t":"Mu","n":"$!bt","k":"v"}],"b":"A","t":"X::Buf::Pack::NonASCII","n":"X::Buf::Pack::NonASCII"},{"n":"X::Dynamic::NotFound","t":"X::Dynamic::NotFound","a":[{"k":"v","n":"$.name","t":"Mu"},{"k":"v","t":"Mu","n":"$!ex"},{"t":"Mu","n":"$!bt","k":"v"}],"b":"A","m":[{"n":"message","s":{"r":"Mu","p":["*%_"]},"m":0,"k":"m"},{"n":"name","s":{"r":"Mu","p":["*%_"]},"m":0,"k":"m"},{"n":"BUILDALL","s":{"r":"Mu","p":["@auto","%init","*%_"]},"k":"s","m":0},{"s":{"p":["*%_"],"r":"Bool"},"n":"resume","k":"m","m":0},{"k":"m","m":0,"n":"reset-backtrace","s":{"p":["*%_"],"r":"Mu"}},{"m":0,"k":"m","n":"is-compile-time","s":{"p":["*%_"],"r":"Bool"}},{"k":"m","m":0,"n":"throw","s":{"r":"Mu","p":["$bt?","*%_"]}},{"s":{"p":["*%_"],"r":"Mu"},"n":"fail","k":"m","m":0},{"n":"Str","s":{"r":"Mu","p":["*%_"]},"k":"m","m":1},{"k":"m","m":1,"s":{"p":["*%_"],"r":"Mu"},"n":"Str"},{"s":{"r":"Mu","p":["*%_"]},"n":"Str","k":"m","m":1},{"m":0,"k":"m","n":"die","s":{"p":["*%_"],"r":"Mu"}},{"k":"m","m":0,"n":"rethrow","s":{"p":["*%_"],"r":"Mu"}},{"n":"backtrace","s":{"p":["*%_"],"r":"Mu"},"m":0,"k":"m"},{"s":{"p":["*%_"],"r":"Mu"},"n":"gist","m":1,"k":"m"},{"n":"gist","s":{"p":["*%_"],"r":"Mu"},"m":1,"k":"m"},{"n":"gist","s":{"r":"Mu","p":["*%_"]},"m":1,"k":"m"},{"k":"m","m":0,"n":"vault-backtrace","s":{"r":"Mu","p":["*%_"]}},{"k":"s","m":0,"n":"BUILDALL","s":{"r":"Mu","p":["@auto","%init","*%_"]}}],"k":"c","d":"TITLE\nclass X::Dynamic::NotFound\n\nSUBTITLE\nRuntime error thrown when a dynamic variable does not exist\n\n    class X::Dynamic::NotFound is Exception {}\n\nThis exception is raised when a dynamic variable that has not been declared\nis used.\n\n    $*dynamic-not-found = 33;\n    # OUTPUT: «Dynamic variable $*dynamic-not-found not found␤»\n\n\n"},{"t":"X::Dynamic::Postdeclaration","n":"X::Dynamic::Postdeclaration","k":"c","m":[{"s":{"r":"Mu","p":["*%_"]},"n":"message","k":"m","m":0},{"k":"m","m":0,"s":{"p":["*%_"],"r":"Mu"},"n":"sorry_heading"},{"k":"m","m":0,"n":"SET_FILE_LINE","s":{"r":"Mu","p":["$file","$line","*%_"]}},{"k":"m","m":1,"n":"gist","s":{"r":"Mu","p":["*%_"]}},{"m":1,"k":"m","n":"gist","s":{"r":"Mu","p":["*%_"]}},{"m":1,"k":"m","s":{"p":["*%_"],"r":"Mu"},"n":"gist"},{"n":"gist","s":{"r":"Mu","p":[":$sorry = Bool::True",":$expect = Bool::True","*%_"]},"m":1,"k":"m"},{"n":"symbol","s":{"p":["*%_"],"r":"Mu"},"m":0,"k":"m"},{"m":0,"k":"m","s":{"r":"Mu","p":["*%_"]},"n":"filename"},{"m":0,"k":"m","s":{"p":["*%_"],"r":"Mu"},"n":"pos"},{"m":0,"k":"m","s":{"r":"Mu","p":["*%_"]},"n":"line"},{"n":"column","s":{"r":"Mu","p":["*%_"]},"k":"m","m":0},{"n":"modules","s":{"r":"Mu","p":["*%_"]},"m":0,"k":"m"},{"m":0,"k":"m","s":{"p":["*%_"],"r":"Mu"},"n":"is-compile-time"},{"m":0,"k":"m","n":"pre","s":{"r":"Mu","p":["*%_"]}},{"n":"post","s":{"p":["*%_"],"r":"Mu"},"m":0,"k":"m"},{"n":"highexpect","s":{"p":["*%_"],"r":"Mu"},"k":"m","m":0},{"n":"BUILDALL","s":{"r":"Mu","p":["@auto","%init","*%_"]},"m":0,"k":"s"},{"s":{"p":["*%_"],"r":"Bool"},"n":"resume","k":"m","m":0},{"n":"reset-backtrace","s":{"p":["*%_"],"r":"Mu"},"m":0,"k":"m"},{"n":"is-compile-time","s":{"p":["*%_"],"r":"Bool"},"m":0,"k":"m"},{"n":"throw","s":{"p":["$bt?","*%_"],"r":"Mu"},"k":"m","m":0},{"n":"fail","s":{"p":["*%_"],"r":"Mu"},"k":"m","m":0},{"s":{"p":["*%_"],"r":"Mu"},"n":"Str","k":"m","m":1},{"s":{"r":"Mu","p":["*%_"]},"n":"Str","m":1,"k":"m"},{"m":1,"k":"m","n":"Str","s":{"p":["*%_"],"r":"Mu"}},{"n":"die","s":{"r":"Mu","p":["*%_"]},"m":0,"k":"m"},{"m":0,"k":"m","n":"rethrow","s":{"r":"Mu","p":["*%_"]}},{"k":"m","m":0,"n":"backtrace","s":{"p":["*%_"],"r":"Mu"}},{"k":"m","m":1,"s":{"r":"Mu","p":["*%_"]},"n":"gist"},{"s":{"p":["*%_"],"r":"Mu"},"n":"gist","m":1,"k":"m"},{"n":"gist","s":{"r":"Mu","p":["*%_"]},"k":"m","m":1},{"n":"vault-backtrace","s":{"r":"Mu","p":["*%_"]},"m":0,"k":"m"},{"n":"BUILDALL","s":{"r":"Mu","p":["@auto","%init","*%_"]},"k":"s","m":0}],"a":[{"k":"v","t":"Mu","n":"$.symbol"},{"k":"v","t":"Mu","n":"$.filename"},{"n":"$.pos","t":"Mu","k":"v"},{"k":"v","t":"Mu","n":"$.line"},{"t":"Mu","n":"$.column","k":"v"},{"k":"v","n":"@.modules","t":"Positional"},{"k":"v","n":"$.is-compile-time","t":"Mu"},{"n":"$.pre","t":"Mu","k":"v"},{"k":"v","n":"$.post","t":"Mu"},{"k":"v","n":"@.highexpect","t":"Positional"},{"t":"Mu","n":"$!ex","k":"v"},{"k":"v","n":"$!bt","t":"Mu"}],"b":"A"},{"a":[{"n":"$.symbol","t":"Mu","k":"v"},{"n":"$.filename","t":"Mu","k":"v"},{"t":"Mu","n":"$.pos","k":"v"},{"n":"$.line","t":"Mu","k":"v"},{"n":"$.column","t":"Mu","k":"v"},{"k":"v","t":"Positional","n":"@.modules"},{"n":"$.is-compile-time","t":"Mu","k":"v"},{"t":"Mu","n":"$.pre","k":"v"},{"k":"v","n":"$.post","t":"Mu"},{"k":"v","t":"Positional","n":"@.highexpect"},{"n":"$!ex","t":"Mu","k":"v"},{"k":"v","t":"Mu","n":"$!bt"}],"b":"A","k":"c","m":[{"k":"m","m":0,"s":{"p":["*%_"],"r":"Mu"},"n":"message"},{"k":"m","m":0,"n":"sorry_heading","s":{"r":"Mu","p":["*%_"]}},{"n":"SET_FILE_LINE","s":{"p":["$file","$line","*%_"],"r":"Mu"},"k":"m","m":0},{"m":1,"k":"m","s":{"r":"Mu","p":["*%_"]},"n":"gist"},{"s":{"r":"Mu","p":["*%_"]},"n":"gist","k":"m","m":1},{"m":1,"k":"m","s":{"p":["*%_"],"r":"Mu"},"n":"gist"},{"m":1,"k":"m","s":{"p":[":$sorry = Bool::True",":$expect = Bool::True","*%_"],"r":"Mu"},"n":"gist"},{"k":"m","m":0,"n":"symbol","s":{"p":["*%_"],"r":"Mu"}},{"s":{"p":["*%_"],"r":"Mu"},"n":"filename","k":"m","m":0},{"n":"pos","s":{"p":["*%_"],"r":"Mu"},"k":"m","m":0},{"n":"line","s":{"r":"Mu","p":["*%_"]},"m":0,"k":"m"},{"k":"m","m":0,"n":"column","s":{"r":"Mu","p":["*%_"]}},{"m":0,"k":"m","n":"modules","s":{"p":["*%_"],"r":"Mu"}},{"m":0,"k":"m","s":{"r":"Mu","p":["*%_"]},"n":"is-compile-time"},{"k":"m","m":0,"s":{"r":"Mu","p":["*%_"]},"n":"pre"},{"s":{"r":"Mu","p":["*%_"]},"n":"post","m":0,"k":"m"},{"n":"highexpect","s":{"p":["*%_"],"r":"Mu"},"k":"m","m":0},{"k":"s","m":0,"n":"BUILDALL","s":{"r":"Mu","p":["@auto","%init","*%_"]}},{"s":{"p":["*%_"],"r":"Bool"},"n":"resume","m":0,"k":"m"},{"k":"m","m":0,"s":{"p":["*%_"],"r":"Mu"},"n":"reset-backtrace"},{"k":"m","m":0,"n":"is-compile-time","s":{"r":"Bool","p":["*%_"]}},{"s":{"r":"Mu","p":["$bt?","*%_"]},"n":"throw","k":"m","m":0},{"m":0,"k":"m","n":"fail","s":{"p":["*%_"],"r":"Mu"}},{"n":"Str","s":{"r":"Mu","p":["*%_"]},"m":1,"k":"m"},{"s":{"p":["*%_"],"r":"Mu"},"n":"Str","m":1,"k":"m"},{"k":"m","m":1,"n":"Str","s":{"p":["*%_"],"r":"Mu"}},{"m":0,"k":"m","s":{"r":"Mu","p":["*%_"]},"n":"die"},{"k":"m","m":0,"n":"rethrow","s":{"p":["*%_"],"r":"Mu"}},{"k":"m","m":0,"s":{"p":["*%_"],"r":"Mu"},"n":"backtrace"},{"k":"m","m":1,"n":"gist","s":{"p":["*%_"],"r":"Mu"}},{"m":1,"k":"m","n":"gist","s":{"p":["*%_"],"r":"Mu"}},{"m":1,"k":"m","n":"gist","s":{"r":"Mu","p":["*%_"]}},{"n":"vault-backtrace","s":{"p":["*%_"],"r":"Mu"},"k":"m","m":0},{"k":"s","m":0,"n":"BUILDALL","s":{"r":"Mu","p":["@auto","%init","*%_"]}}],"n":"X::Dynamic::Package","t":"X::Dynamic::Package"},{"b":"C","a":[{"k":"v","n":"$.start-backtrace","t":"Mu"}],"k":"ro","n":"X::HyperRace::Died","t":"X::HyperRace::Died"},{"t":"X::LibNone","n":"X::LibNone","k":"c","m":[{"m":0,"k":"m","s":{"r":"Mu","p":["*%_"]},"n":"message"},{"k":"m","m":0,"n":"sorry_heading","s":{"p":["*%_"],"r":"Mu"}},{"s":{"r":"Mu","p":["$file","$line","*%_"]},"n":"SET_FILE_LINE","m":0,"k":"m"},{"k":"m","m":1,"n":"gist","s":{"r":"Mu","p":["*%_"]}},{"k":"m","m":1,"n":"gist","s":{"r":"Mu","p":["*%_"]}},{"s":{"r":"Mu","p":["*%_"]},"n":"gist","m":1,"k":"m"},{"s":{"r":"Mu","p":[":$sorry = Bool::True",":$expect = Bool::True","*%_"]},"n":"gist","m":1,"k":"m"},{"k":"m","m":0,"s":{"r":"Mu","p":["*%_"]},"n":"filename"},{"s":{"p":["*%_"],"r":"Mu"},"n":"pos","k":"m","m":0},{"n":"line","s":{"r":"Mu","p":["*%_"]},"m":0,"k":"m"},{"n":"column","s":{"r":"Mu","p":["*%_"]},"m":0,"k":"m"},{"m":0,"k":"m","n":"modules","s":{"p":["*%_"],"r":"Mu"}},{"s":{"r":"Mu","p":["*%_"]},"n":"is-compile-time","k":"m","m":0},{"n":"pre","s":{"p":["*%_"],"r":"Mu"},"m":0,"k":"m"},{"n":"post","s":{"r":"Mu","p":["*%_"]},"k":"m","m":0},{"k":"m","m":0,"s":{"p":["*%_"],"r":"Mu"},"n":"highexpect"},{"k":"s","m":0,"n":"BUILDALL","s":{"p":["@auto","%init","*%_"],"r":"Mu"}},{"s":{"r":"Bool","p":["*%_"]},"n":"resume","k":"m","m":0},{"s":{"r":"Mu","p":["*%_"]},"n":"reset-backtrace","m":0,"k":"m"},{"k":"m","m":0,"s":{"p":["*%_"],"r":"Bool"},"n":"is-compile-time"},{"k":"m","m":0,"s":{"r":"Mu","p":["$bt?","*%_"]},"n":"throw"},{"n":"fail","s":{"r":"Mu","p":["*%_"]},"k":"m","m":0},{"k":"m","m":1,"n":"Str","s":{"p":["*%_"],"r":"Mu"}},{"s":{"r":"Mu","p":["*%_"]},"n":"Str","k":"m","m":1},{"n":"Str","s":{"p":["*%_"],"r":"Mu"},"m":1,"k":"m"},{"k":"m","m":0,"s":{"p":["*%_"],"r":"Mu"},"n":"die"},{"m":0,"k":"m","s":{"r":"Mu","p":["*%_"]},"n":"rethrow"},{"n":"backtrace","s":{"r":"Mu","p":["*%_"]},"m":0,"k":"m"},{"k":"m","m":1,"s":{"r":"Mu","p":["*%_"]},"n":"gist"},{"n":"gist","s":{"p":["*%_"],"r":"Mu"},"k":"m","m":1},{"n":"gist","s":{"p":["*%_"],"r":"Mu"},"k":"m","m":1},{"m":0,"k":"m","s":{"p":["*%_"],"r":"Mu"},"n":"vault-backtrace"},{"s":{"p":["@auto","%init","*%_"],"r":"Mu"},"n":"BUILDALL","m":0,"k":"s"}],"b":"A","a":[{"k":"v","n":"$.filename","t":"Mu"},{"k":"v","t":"Mu","n":"$.pos"},{"k":"v","t":"Mu","n":"$.line"},{"t":"Mu","n":"$.column","k":"v"},{"n":"@.modules","t":"Positional","k":"v"},{"k":"v","t":"Mu","n":"$.is-compile-time"},{"k":"v","t":"Mu","n":"$.pre"},{"n":"$.post","t":"Mu","k":"v"},{"k":"v","t":"Positional","n":"@.highexpect"},{"k":"v","t":"Mu","n":"$!ex"},{"k":"v","n":"$!bt","t":"Mu"}]},{"d":"TITLE\nrole X::Temporal\n\nSUBTITLE\nError related to DateTime or Date\n\n    role X::Temporal is Exception { }\n\nA common exception type for all errors related to DateTime or Date.","b":"C","k":"ro","t":"X::Temporal","n":"X::Temporal"},{"t":"X::Temporal::InvalidFormat","n":"X::Temporal::InvalidFormat","d":"TITLE\nclass X::Temporal::InvalidFormat\n\nSUBTITLE\nError due to using an invalid format when creating a DateTime or Date\n\n    class X::Temporal::InvalidFormat does X::Temporal is Exception { }\n\n\nThis exception is thrown when code tries to create a DateTime or Date\nobject using an invalid format.\n\n    my $dt = Date.new(\"12/25/2015\");\n    CATCH { default { put .^name, ': ', .Str } };\n    # OUTPUT: «X::Temporal::InvalidFormat: Invalid Date string '12/25/2015'; use yyyy-mm-dd instead␤»\n\n\n","b":"A","a":[{"k":"v","t":"Mu","n":"$.invalid-str"},{"n":"$.target","t":"Mu","k":"v"},{"t":"Mu","n":"$.format","k":"v"},{"k":"v","n":"$!ex","t":"Mu"},{"t":"Mu","n":"$!bt","k":"v"}],"k":"c","m":[{"n":"message","s":{"p":["*%_"],"r":"Mu"},"m":0,"k":"m"},{"n":"invalid-str","s":{"p":["*%_"],"r":"Mu"},"m":0,"k":"m"},{"m":0,"k":"m","n":"target","s":{"r":"Mu","p":["*%_"]}},{"k":"m","m":0,"s":{"r":"Mu","p":["*%_"]},"n":"format"},{"m":0,"k":"s","s":{"p":["@auto","%init","*%_"],"r":"Mu"},"n":"BUILDALL"},{"m":0,"k":"m","s":{"p":["*%_"],"r":"Bool"},"n":"resume"},{"k":"m","m":0,"n":"reset-backtrace","s":{"r":"Mu","p":["*%_"]}},{"k":"m","m":0,"n":"is-compile-time","s":{"p":["*%_"],"r":"Bool"}},{"n":"throw","s":{"r":"Mu","p":["$bt?","*%_"]},"m":0,"k":"m"},{"k":"m","m":0,"s":{"r":"Mu","p":["*%_"]},"n":"fail"},{"n":"Str","s":{"r":"Mu","p":["*%_"]},"k":"m","m":1},{"n":"Str","s":{"p":["*%_"],"r":"Mu"},"k":"m","m":1},{"k":"m","m":1,"s":{"p":["*%_"],"r":"Mu"},"n":"Str"},{"m":0,"k":"m","n":"die","s":{"p":["*%_"],"r":"Mu"}},{"m":0,"k":"m","s":{"r":"Mu","p":["*%_"]},"n":"rethrow"},{"s":{"p":["*%_"],"r":"Mu"},"n":"backtrace","m":0,"k":"m"},{"k":"m","m":1,"s":{"p":["*%_"],"r":"Mu"},"n":"gist"},{"s":{"r":"Mu","p":["*%_"]},"n":"gist","m":1,"k":"m"},{"n":"gist","s":{"p":["*%_"],"r":"Mu"},"m":1,"k":"m"},{"k":"m","m":0,"n":"vault-backtrace","s":{"r":"Mu","p":["*%_"]}},{"k":"s","m":0,"s":{"r":"Mu","p":["@auto","%init","*%_"]},"n":"BUILDALL"}]},{"d":"TITLE\nclass X::TypeCheck\n\nSUBTITLE\nError due to a failed type check\n\n    class X::TypeCheck is Exception { }\n\nError class thrown when a type check fails.\n\n","m":[{"m":0,"k":"m","s":{"p":["*%_"],"r":"Mu"},"n":"gotn"},{"k":"m","m":0,"s":{"p":["*%_"],"r":"Mu"},"n":"expectedn"},{"k":"m","m":0,"s":{"r":"Mu","p":["*%_"]},"n":"priors"},{"s":{"r":"Mu","p":["*%_"]},"n":"message","m":0,"k":"m"},{"s":{"p":["*%_"],"r":"Mu"},"n":"operation","k":"m","m":0},{"s":{"r":"Mu","p":["*%_"]},"n":"got","k":"m","m":0},{"s":{"p":["*%_"],"r":"Mu"},"n":"expected","k":"m","m":0},{"n":"BUILDALL","s":{"p":["@auto","%init","*%_"],"r":"Mu"},"k":"s","m":0},{"k":"m","m":0,"n":"resume","s":{"r":"Bool","p":["*%_"]}},{"k":"m","m":0,"s":{"p":["*%_"],"r":"Mu"},"n":"reset-backtrace"},{"n":"is-compile-time","s":{"p":["*%_"],"r":"Bool"},"k":"m","m":0},{"k":"m","m":0,"s":{"r":"Mu","p":["$bt?","*%_"]},"n":"throw"},{"s":{"r":"Mu","p":["*%_"]},"n":"fail","m":0,"k":"m"},{"s":{"r":"Mu","p":["*%_"]},"n":"Str","k":"m","m":1},{"n":"Str","s":{"p":["*%_"],"r":"Mu"},"k":"m","m":1},{"k":"m","m":1,"n":"Str","s":{"p":["*%_"],"r":"Mu"}},{"n":"die","s":{"r":"Mu","p":["*%_"]},"k":"m","m":0},{"k":"m","m":0,"n":"rethrow","s":{"p":["*%_"],"r":"Mu"}},{"n":"backtrace","s":{"p":["*%_"],"r":"Mu"},"k":"m","m":0},{"s":{"r":"Mu","p":["*%_"]},"n":"gist","m":1,"k":"m"},{"m":1,"k":"m","s":{"p":["*%_"],"r":"Mu"},"n":"gist"},{"n":"gist","s":{"p":["*%_"],"r":"Mu"},"m":1,"k":"m"},{"s":{"p":["*%_"],"r":"Mu"},"n":"vault-backtrace","m":0,"k":"m"},{"m":0,"k":"s","s":{"r":"Mu","p":["@auto","%init","*%_"]},"n":"BUILDALL"}],"k":"c","a":[{"n":"$.operation","t":"Mu","k":"v"},{"k":"v","t":"Mu","n":"$.got"},{"n":"$.expected","t":"Mu","k":"v"},{"k":"v","t":"Mu","n":"$!ex"},{"k":"v","n":"$!bt","t":"Mu"}],"b":"A","t":"X::TypeCheck","n":"X::TypeCheck"},{"n":"X::TypeCheck::Assignment","t":"X::TypeCheck::Assignment","a":[{"k":"v","t":"Mu","n":"$.symbol"},{"k":"v","t":"Mu","n":"$.operation"},{"t":"Mu","n":"$.got","k":"v"},{"k":"v","t":"Mu","n":"$.expected"},{"n":"$!ex","t":"Mu","k":"v"},{"n":"$!bt","t":"Mu","k":"v"}],"b":"A","k":"c","m":[{"s":{"p":["*%_"],"r":"Mu"},"n":"operation","k":"m","m":0},{"s":{"r":"Mu","p":["*%_"]},"n":"message","m":0,"k":"m"},{"k":"m","m":0,"n":"symbol","s":{"r":"Mu","p":["*%_"]}},{"m":0,"k":"s","n":"BUILDALL","s":{"r":"Mu","p":["@auto","%init","*%_"]}},{"n":"got","s":{"r":"Mu","p":["*%_"]},"k":"m","m":0},{"k":"m","m":0,"n":"operation","s":{"p":["*%_"],"r":"Mu"}},{"n":"expected","s":{"p":["*%_"],"r":"Mu"},"m":0,"k":"m"},{"k":"m","m":0,"n":"message","s":{"p":["*%_"],"r":"Mu"}},{"k":"m","m":0,"n":"expectedn","s":{"r":"Mu","p":["*%_"]}},{"k":"m","m":0,"s":{"p":["*%_"],"r":"Mu"},"n":"priors"},{"s":{"p":["*%_"],"r":"Mu"},"n":"gotn","k":"m","m":0},{"n":"BUILDALL","s":{"p":["@auto","%init","*%_"],"r":"Mu"},"k":"s","m":0},{"m":0,"k":"m","s":{"p":["*%_"],"r":"Bool"},"n":"resume"},{"k":"m","m":0,"n":"reset-backtrace","s":{"r":"Mu","p":["*%_"]}},{"k":"m","m":0,"s":{"p":["*%_"],"r":"Bool"},"n":"is-compile-time"},{"m":0,"k":"m","s":{"r":"Mu","p":["$bt?","*%_"]},"n":"throw"},{"k":"m","m":0,"s":{"r":"Mu","p":["*%_"]},"n":"fail"},{"k":"m","m":1,"n":"Str","s":{"p":["*%_"],"r":"Mu"}},{"k":"m","m":1,"s":{"r":"Mu","p":["*%_"]},"n":"Str"},{"s":{"r":"Mu","p":["*%_"]},"n":"Str","k":"m","m":1},{"n":"die","s":{"p":["*%_"],"r":"Mu"},"m":0,"k":"m"},{"m":0,"k":"m","n":"rethrow","s":{"r":"Mu","p":["*%_"]}},{"s":{"p":["*%_"],"r":"Mu"},"n":"backtrace","m":0,"k":"m"},{"k":"m","m":1,"n":"gist","s":{"p":["*%_"],"r":"Mu"}},{"s":{"r":"Mu","p":["*%_"]},"n":"gist","k":"m","m":1},{"m":1,"k":"m","n":"gist","s":{"r":"Mu","p":["*%_"]}},{"n":"vault-backtrace","s":{"r":"Mu","p":["*%_"]},"m":0,"k":"m"},{"n":"BUILDALL","s":{"r":"Mu","p":["@auto","%init","*%_"]},"k":"s","m":0}],"d":"TITLE\nclass X::TypeCheck::Assignment\n\nSUBTITLE\nError due to a failed type check during assignment\n\n    class X::TypeCheck::Assignment is X::TypeCheck { }\n\nError class thrown when the type check of an assignment fails.\n\nFor example, this will die\n\n    my Int $x = \"foo\";\n    CATCH { default { put .^name, ': ', .Str } };\n    # OUTPUT: «X::TypeCheck::Assignment: Type check failed in assignment to $x; expected Int but got Str (\"foo\")␤»\n\nthough compilers are allowed to detect obvious cases like this example and\ncomplain at compile time with a different error."},{"n":"X::TypeCheck::Splice","t":"X::TypeCheck::Splice","k":"c","m":[{"k":"m","m":0,"s":{"p":["*%_"],"r":"Mu"},"n":"message"},{"n":"sorry_heading","s":{"p":["*%_"],"r":"Mu"},"m":0,"k":"m"},{"s":{"p":["$file","$line","*%_"],"r":"Mu"},"n":"SET_FILE_LINE","k":"m","m":0},{"n":"gist","s":{"r":"Mu","p":["*%_"]},"m":1,"k":"m"},{"n":"gist","s":{"r":"Mu","p":["*%_"]},"k":"m","m":1},{"k":"m","m":1,"n":"gist","s":{"p":["*%_"],"r":"Mu"}},{"k":"m","m":1,"s":{"r":"Mu","p":[":$sorry = Bool::True",":$expect = Bool::True","*%_"]},"n":"gist"},{"n":"action","s":{"p":["*%_"],"r":"Mu"},"k":"m","m":0},{"n":"filename","s":{"p":["*%_"],"r":"Mu"},"m":0,"k":"m"},{"n":"pos","s":{"p":["*%_"],"r":"Mu"},"m":0,"k":"m"},{"m":0,"k":"m","s":{"r":"Mu","p":["*%_"]},"n":"line"},{"m":0,"k":"m","s":{"r":"Mu","p":["*%_"]},"n":"column"},{"s":{"p":["*%_"],"r":"Mu"},"n":"modules","m":0,"k":"m"},{"s":{"r":"Mu","p":["*%_"]},"n":"is-compile-time","k":"m","m":0},{"n":"pre","s":{"r":"Mu","p":["*%_"]},"k":"m","m":0},{"s":{"p":["*%_"],"r":"Mu"},"n":"post","k":"m","m":0},{"n":"highexpect","s":{"r":"Mu","p":["*%_"]},"m":0,"k":"m"},{"m":0,"k":"s","n":"BUILDALL","s":{"p":["@auto","%init","*%_"],"r":"Mu"}},{"n":"got","s":{"p":["*%_"],"r":"Mu"},"m":0,"k":"m"},{"n":"operation","s":{"r":"Mu","p":["*%_"]},"k":"m","m":0},{"m":0,"k":"m","s":{"r":"Mu","p":["*%_"]},"n":"expected"},{"m":0,"k":"m","s":{"p":["*%_"],"r":"Mu"},"n":"message"},{"s":{"r":"Mu","p":["*%_"]},"n":"expectedn","k":"m","m":0},{"n":"priors","s":{"p":["*%_"],"r":"Mu"},"k":"m","m":0},{"s":{"r":"Mu","p":["*%_"]},"n":"gotn","m":0,"k":"m"},{"k":"s","m":0,"s":{"p":["@auto","%init","*%_"],"r":"Mu"},"n":"BUILDALL"},{"n":"resume","s":{"r":"Bool","p":["*%_"]},"m":0,"k":"m"},{"k":"m","m":0,"n":"reset-backtrace","s":{"r":"Mu","p":["*%_"]}},{"k":"m","m":0,"n":"is-compile-time","s":{"r":"Bool","p":["*%_"]}},{"m":0,"k":"m","n":"throw","s":{"r":"Mu","p":["$bt?","*%_"]}},{"k":"m","m":0,"s":{"r":"Mu","p":["*%_"]},"n":"fail"},{"k":"m","m":1,"n":"Str","s":{"r":"Mu","p":["*%_"]}},{"s":{"r":"Mu","p":["*%_"]},"n":"Str","m":1,"k":"m"},{"n":"Str","s":{"r":"Mu","p":["*%_"]},"m":1,"k":"m"},{"n":"die","s":{"r":"Mu","p":["*%_"]},"k":"m","m":0},{"m":0,"k":"m","n":"rethrow","s":{"p":["*%_"],"r":"Mu"}},{"s":{"p":["*%_"],"r":"Mu"},"n":"backtrace","k":"m","m":0},{"m":1,"k":"m","s":{"p":["*%_"],"r":"Mu"},"n":"gist"},{"k":"m","m":1,"n":"gist","s":{"p":["*%_"],"r":"Mu"}},{"n":"gist","s":{"p":["*%_"],"r":"Mu"},"m":1,"k":"m"},{"m":0,"k":"m","s":{"r":"Mu","p":["*%_"]},"n":"vault-backtrace"},{"m":0,"k":"s","n":"BUILDALL","s":{"r":"Mu","p":["@auto","%init","*%_"]}}],"a":[{"t":"Mu","n":"$.action","k":"v"},{"k":"v","n":"$.filename","t":"Mu"},{"t":"Mu","n":"$.pos","k":"v"},{"t":"Mu","n":"$.line","k":"v"},{"k":"v","n":"$.column","t":"Mu"},{"t":"Positional","n":"@.modules","k":"v"},{"n":"$.is-compile-time","t":"Mu","k":"v"},{"k":"v","n":"$.pre","t":"Mu"},{"k":"v","n":"$.post","t":"Mu"},{"t":"Positional","n":"@.highexpect","k":"v"},{"t":"Mu","n":"$.operation","k":"v"},{"k":"v","n":"$.got","t":"Mu"},{"t":"Mu","n":"$.expected","k":"v"},{"t":"Mu","n":"$!ex","k":"v"},{"k":"v","t":"Mu","n":"$!bt"}],"b":"A","d":"TITLE\nclass X::TypeCheck::Splice\n\nSUBTITLE\nCompilation error due to a macro trying to splice a non-AST value\n\n    class X::TypeCheck::Splice is X::TypeCheck does X::Comp { }\n\nCompile time error thrown when a Macro or an unquote/hole in a quasi quote\ndoes not return an AST.\n\nFor example\n\n    use experimental :macros;\n    macro quasi-ast { quasi { {{{'not AST'}}} };};\n    say quasi-ast;\n\n\ndies with\n\n    ===SORRY!===\n    Type check failed in macro application; expected AST but got Str(\"not AST\")\n\n\nThis is because you are purposefully creating something that does not\nevaluate to an abstract syntax tree. To fix, instead write\n\n    use experimental :macros;\n    macro an-ast {\n        quasi { 'yes AST' }\n    }\n    say an-ast;              # OUTPUT: «yes AST␤»\n\n\n"},{"n":"X::TypeCheck::Argument","t":"X::TypeCheck::Argument","k":"c","m":[{"n":"message","s":{"p":["*%_"],"r":"Mu"},"m":0,"k":"m"},{"m":0,"k":"m","s":{"r":"Mu","p":["*%_"]},"n":"protoguilt"},{"n":"arguments","s":{"r":"Mu","p":["*%_"]},"m":0,"k":"m"},{"k":"m","m":0,"s":{"p":["*%_"],"r":"Mu"},"n":"objname"},{"m":0,"k":"m","n":"signature","s":{"r":"Mu","p":["*%_"]}},{"s":{"p":["@auto","%init","*%_"],"r":"Mu"},"n":"BUILDALL","m":0,"k":"s"},{"s":{"r":"Mu","p":["*%_"]},"n":"got","m":0,"k":"m"},{"m":0,"k":"m","n":"operation","s":{"p":["*%_"],"r":"Mu"}},{"k":"m","m":0,"n":"expected","s":{"p":["*%_"],"r":"Mu"}},{"n":"message","s":{"r":"Mu","p":["*%_"]},"m":0,"k":"m"},{"s":{"r":"Mu","p":["*%_"]},"n":"expectedn","m":0,"k":"m"},{"k":"m","m":0,"n":"priors","s":{"r":"Mu","p":["*%_"]}},{"k":"m","m":0,"n":"gotn","s":{"p":["*%_"],"r":"Mu"}},{"k":"s","m":0,"s":{"p":["@auto","%init","*%_"],"r":"Mu"},"n":"BUILDALL"},{"s":{"r":"Bool","p":["*%_"]},"n":"resume","m":0,"k":"m"},{"k":"m","m":0,"n":"reset-backtrace","s":{"r":"Mu","p":["*%_"]}},{"m":0,"k":"m","n":"is-compile-time","s":{"r":"Bool","p":["*%_"]}},{"s":{"p":["$bt?","*%_"],"r":"Mu"},"n":"throw","m":0,"k":"m"},{"k":"m","m":0,"s":{"p":["*%_"],"r":"Mu"},"n":"fail"},{"m":1,"k":"m","s":{"p":["*%_"],"r":"Mu"},"n":"Str"},{"s":{"r":"Mu","p":["*%_"]},"n":"Str","k":"m","m":1},{"m":1,"k":"m","n":"Str","s":{"p":["*%_"],"r":"Mu"}},{"m":0,"k":"m","s":{"p":["*%_"],"r":"Mu"},"n":"die"},{"n":"rethrow","s":{"r":"Mu","p":["*%_"]},"k":"m","m":0},{"k":"m","m":0,"s":{"r":"Mu","p":["*%_"]},"n":"backtrace"},{"s":{"r":"Mu","p":["*%_"]},"n":"gist","m":1,"k":"m"},{"m":1,"k":"m","s":{"p":["*%_"],"r":"Mu"},"n":"gist"},{"k":"m","m":1,"n":"gist","s":{"r":"Mu","p":["*%_"]}},{"n":"vault-backtrace","s":{"r":"Mu","p":["*%_"]},"m":0,"k":"m"},{"m":0,"k":"s","s":{"p":["@auto","%init","*%_"],"r":"Mu"},"n":"BUILDALL"}],"b":"A","a":[{"k":"v","n":"$.protoguilt","t":"Mu"},{"t":"Positional","n":"@.arguments","k":"v"},{"n":"$.objname","t":"Mu","k":"v"},{"k":"v","n":"$.signature","t":"Mu"},{"t":"Mu","n":"$.operation","k":"v"},{"k":"v","n":"$.got","t":"Mu"},{"n":"$.expected","t":"Mu","k":"v"},{"n":"$!ex","t":"Mu","k":"v"},{"k":"v","t":"Mu","n":"$!bt"}]},{"k":"c","m":[{"k":"m","m":0,"s":{"p":["*%_"],"r":"Mu"},"n":"operation"},{"n":"message","s":{"r":"Mu","p":["*%_"]},"m":0,"k":"m"},{"m":0,"k":"m","n":"symbol","s":{"r":"Mu","p":["*%_"]}},{"n":"BUILDALL","s":{"p":["@auto","%init","*%_"],"r":"Mu"},"k":"s","m":0},{"k":"m","m":0,"s":{"r":"Mu","p":["*%_"]},"n":"got"},{"k":"m","m":0,"s":{"p":["*%_"],"r":"Mu"},"n":"operation"},{"m":0,"k":"m","s":{"r":"Mu","p":["*%_"]},"n":"expected"},{"m":0,"k":"m","n":"message","s":{"p":["*%_"],"r":"Mu"}},{"s":{"p":["*%_"],"r":"Mu"},"n":"expectedn","k":"m","m":0},{"n":"priors","s":{"p":["*%_"],"r":"Mu"},"k":"m","m":0},{"n":"gotn","s":{"p":["*%_"],"r":"Mu"},"k":"m","m":0},{"k":"s","m":0,"n":"BUILDALL","s":{"p":["@auto","%init","*%_"],"r":"Mu"}},{"k":"m","m":0,"n":"resume","s":{"r":"Bool","p":["*%_"]}},{"m":0,"k":"m","s":{"r":"Mu","p":["*%_"]},"n":"reset-backtrace"},{"m":0,"k":"m","s":{"r":"Bool","p":["*%_"]},"n":"is-compile-time"},{"n":"throw","s":{"r":"Mu","p":["$bt?","*%_"]},"k":"m","m":0},{"n":"fail","s":{"p":["*%_"],"r":"Mu"},"m":0,"k":"m"},{"m":1,"k":"m","s":{"p":["*%_"],"r":"Mu"},"n":"Str"},{"n":"Str","s":{"r":"Mu","p":["*%_"]},"m":1,"k":"m"},{"n":"Str","s":{"p":["*%_"],"r":"Mu"},"m":1,"k":"m"},{"m":0,"k":"m","s":{"p":["*%_"],"r":"Mu"},"n":"die"},{"n":"rethrow","s":{"r":"Mu","p":["*%_"]},"k":"m","m":0},{"s":{"r":"Mu","p":["*%_"]},"n":"backtrace","k":"m","m":0},{"s":{"r":"Mu","p":["*%_"]},"n":"gist","k":"m","m":1},{"k":"m","m":1,"s":{"p":["*%_"],"r":"Mu"},"n":"gist"},{"m":1,"k":"m","n":"gist","s":{"r":"Mu","p":["*%_"]}},{"n":"vault-backtrace","s":{"r":"Mu","p":["*%_"]},"k":"m","m":0},{"n":"BUILDALL","s":{"p":["@auto","%init","*%_"],"r":"Mu"},"k":"s","m":0}],"b":"A","a":[{"n":"$.symbol","t":"Mu","k":"v"},{"k":"v","t":"Mu","n":"$.operation"},{"n":"$.got","t":"Mu","k":"v"},{"k":"v","n":"$.expected","t":"Mu"},{"n":"$!ex","t":"Mu","k":"v"},{"n":"$!bt","t":"Mu","k":"v"}],"d":"TITLE\nclass X::TypeCheck::Binding\n\nSUBTITLE\nError due to a failed type check during binding\n\n    class X::TypeCheck::Binding is X::TypeCheck { }\n\nThrown when the type check of a binding operation fails.\n\nFor example:\n\n    my Int $x := \"foo\";\n    CATCH { default { put .^name, ': ', .Str } };\n    # OUTPUT: «X::TypeCheck::Binding: Type check failed in binding; expected Int but got Str (\"foo\")␤»\n\nNote that the compiler is free to detect obvious errors at compile time,\nand complain with a different error at compile time.","n":"X::TypeCheck::Binding","t":"X::TypeCheck::Binding"},{"t":"X::TypeCheck::Binding::Parameter","n":"X::TypeCheck::Binding::Parameter","m":[{"s":{"p":["*%_"],"r":"Mu"},"n":"expectedn","k":"m","m":0},{"s":{"r":"Mu","p":["*%_"]},"n":"message","m":0,"k":"m"},{"n":"parameter","s":{"p":["*%_"],"r":"Mu"},"k":"m","m":0},{"k":"m","m":0,"n":"constraint","s":{"r":"Mu","p":["*%_"]}},{"s":{"r":"Mu","p":["@auto","%init","*%_"]},"n":"BUILDALL","m":0,"k":"s"},{"n":"message","s":{"p":["*%_"],"r":"Mu"},"k":"m","m":0},{"s":{"r":"Mu","p":["*%_"]},"n":"symbol","k":"m","m":0},{"n":"operation","s":{"p":["*%_"],"r":"Mu"},"m":0,"k":"m"},{"s":{"r":"Mu","p":["@auto","%init","*%_"]},"n":"BUILDALL","k":"s","m":0},{"k":"m","m":0,"s":{"p":["*%_"],"r":"Mu"},"n":"got"},{"n":"operation","s":{"r":"Mu","p":["*%_"]},"k":"m","m":0},{"n":"expected","s":{"p":["*%_"],"r":"Mu"},"k":"m","m":0},{"m":0,"k":"m","n":"message","s":{"r":"Mu","p":["*%_"]}},{"k":"m","m":0,"s":{"p":["*%_"],"r":"Mu"},"n":"expectedn"},{"k":"m","m":0,"n":"priors","s":{"p":["*%_"],"r":"Mu"}},{"n":"gotn","s":{"r":"Mu","p":["*%_"]},"m":0,"k":"m"},{"m":0,"k":"s","s":{"p":["@auto","%init","*%_"],"r":"Mu"},"n":"BUILDALL"},{"s":{"p":["*%_"],"r":"Bool"},"n":"resume","m":0,"k":"m"},{"n":"reset-backtrace","s":{"p":["*%_"],"r":"Mu"},"k":"m","m":0},{"k":"m","m":0,"n":"is-compile-time","s":{"p":["*%_"],"r":"Bool"}},{"m":0,"k":"m","s":{"r":"Mu","p":["$bt?","*%_"]},"n":"throw"},{"s":{"p":["*%_"],"r":"Mu"},"n":"fail","m":0,"k":"m"},{"s":{"p":["*%_"],"r":"Mu"},"n":"Str","m":1,"k":"m"},{"s":{"r":"Mu","p":["*%_"]},"n":"Str","m":1,"k":"m"},{"n":"Str","s":{"r":"Mu","p":["*%_"]},"k":"m","m":1},{"m":0,"k":"m","n":"die","s":{"p":["*%_"],"r":"Mu"}},{"k":"m","m":0,"n":"rethrow","s":{"r":"Mu","p":["*%_"]}},{"n":"backtrace","s":{"r":"Mu","p":["*%_"]},"k":"m","m":0},{"k":"m","m":1,"s":{"p":["*%_"],"r":"Mu"},"n":"gist"},{"m":1,"k":"m","s":{"p":["*%_"],"r":"Mu"},"n":"gist"},{"s":{"r":"Mu","p":["*%_"]},"n":"gist","m":1,"k":"m"},{"k":"m","m":0,"n":"vault-backtrace","s":{"r":"Mu","p":["*%_"]}},{"k":"s","m":0,"s":{"p":["@auto","%init","*%_"],"r":"Mu"},"n":"BUILDALL"}],"k":"c","b":"A","a":[{"k":"v","n":"$.parameter","t":"Parameter"},{"n":"$.constraint","t":"Bool","k":"v"},{"t":"Mu","n":"$.symbol","k":"v"},{"n":"$.operation","t":"Mu","k":"v"},{"k":"v","t":"Mu","n":"$.got"},{"k":"v","n":"$.expected","t":"Mu"},{"k":"v","t":"Mu","n":"$!ex"},{"k":"v","t":"Mu","n":"$!bt"}]},{"d":"TITLE\nclass X::TypeCheck::Return\n\nSUBTITLE\nError due to a failed typecheck during return\n\n    class X::TypeCheck::Return is X::TypeCheck { }\n\nThrown when a return type check fails.\n\nFor example\n\n    sub f(--> Int) { \"foo\" }\n    f();\n    CATCH { default { put .^name, ': ', .Str } };\n    # OUTPUT: «X::TypeCheck::Return: Type check failed for return value; expected Int but got Str (\"foo\")␤»","m":[{"n":"operation","s":{"r":"Mu","p":["*%_"]},"m":0,"k":"m"},{"m":0,"k":"m","n":"message","s":{"p":["*%_"],"r":"Mu"}},{"k":"s","m":0,"s":{"r":"Mu","p":["@auto","%init","*%_"]},"n":"BUILDALL"},{"k":"m","m":0,"n":"got","s":{"p":["*%_"],"r":"Mu"}},{"s":{"p":["*%_"],"r":"Mu"},"n":"operation","m":0,"k":"m"},{"k":"m","m":0,"s":{"r":"Mu","p":["*%_"]},"n":"expected"},{"s":{"r":"Mu","p":["*%_"]},"n":"message","k":"m","m":0},{"k":"m","m":0,"s":{"r":"Mu","p":["*%_"]},"n":"expectedn"},{"m":0,"k":"m","n":"priors","s":{"r":"Mu","p":["*%_"]}},{"s":{"r":"Mu","p":["*%_"]},"n":"gotn","k":"m","m":0},{"n":"BUILDALL","s":{"p":["@auto","%init","*%_"],"r":"Mu"},"m":0,"k":"s"},{"n":"resume","s":{"r":"Bool","p":["*%_"]},"m":0,"k":"m"},{"n":"reset-backtrace","s":{"r":"Mu","p":["*%_"]},"k":"m","m":0},{"n":"is-compile-time","s":{"r":"Bool","p":["*%_"]},"k":"m","m":0},{"s":{"p":["$bt?","*%_"],"r":"Mu"},"n":"throw","k":"m","m":0},{"k":"m","m":0,"s":{"r":"Mu","p":["*%_"]},"n":"fail"},{"n":"Str","s":{"p":["*%_"],"r":"Mu"},"k":"m","m":1},{"n":"Str","s":{"r":"Mu","p":["*%_"]},"m":1,"k":"m"},{"s":{"p":["*%_"],"r":"Mu"},"n":"Str","m":1,"k":"m"},{"m":0,"k":"m","s":{"r":"Mu","p":["*%_"]},"n":"die"},{"s":{"p":["*%_"],"r":"Mu"},"n":"rethrow","k":"m","m":0},{"m":0,"k":"m","n":"backtrace","s":{"p":["*%_"],"r":"Mu"}},{"k":"m","m":1,"n":"gist","s":{"p":["*%_"],"r":"Mu"}},{"s":{"p":["*%_"],"r":"Mu"},"n":"gist","k":"m","m":1},{"s":{"r":"Mu","p":["*%_"]},"n":"gist","k":"m","m":1},{"m":0,"k":"m","s":{"r":"Mu","p":["*%_"]},"n":"vault-backtrace"},{"s":{"p":["@auto","%init","*%_"],"r":"Mu"},"n":"BUILDALL","k":"s","m":0}],"k":"c","b":"A","a":[{"k":"v","t":"Mu","n":"$.operation"},{"k":"v","t":"Mu","n":"$.got"},{"n":"$.expected","t":"Mu","k":"v"},{"t":"Mu","n":"$!ex","k":"v"},{"k":"v","t":"Mu","n":"$!bt"}],"t":"X::TypeCheck::Return","n":"X::TypeCheck::Return"},{"k":"c","m":[{"k":"m","m":0,"n":"backtrace","s":{"r":"Mu","p":["*%_"]}},{"s":{"r":"Mu","p":["*%_"]},"n":"message","k":"m","m":0},{"k":"m","m":0,"n":"illegal","s":{"p":["*%_"],"r":"Mu"}},{"n":"enclosing","s":{"r":"Mu","p":["*%_"]},"k":"m","m":0},{"n":"BUILDALL","s":{"r":"Mu","p":["@auto","%init","*%_"]},"k":"s","m":0},{"k":"m","m":0,"n":"resume","s":{"p":["*%_"],"r":"Bool"}},{"m":0,"k":"m","s":{"r":"Mu","p":["*%_"]},"n":"reset-backtrace"},{"m":0,"k":"m","s":{"r":"Bool","p":["*%_"]},"n":"is-compile-time"},{"m":0,"k":"m","s":{"p":["$bt?","*%_"],"r":"Mu"},"n":"throw"},{"s":{"r":"Mu","p":["*%_"]},"n":"fail","k":"m","m":0},{"n":"Str","s":{"r":"Mu","p":["*%_"]},"k":"m","m":1},{"n":"Str","s":{"p":["*%_"],"r":"Mu"},"m":1,"k":"m"},{"m":1,"k":"m","s":{"p":["*%_"],"r":"Mu"},"n":"Str"},{"n":"die","s":{"p":["*%_"],"r":"Mu"},"m":0,"k":"m"},{"m":0,"k":"m","s":{"p":["*%_"],"r":"Mu"},"n":"rethrow"},{"s":{"p":["*%_"],"r":"Mu"},"n":"backtrace","k":"m","m":0},{"m":1,"k":"m","s":{"p":["*%_"],"r":"Mu"},"n":"gist"},{"n":"gist","s":{"r":"Mu","p":["*%_"]},"m":1,"k":"m"},{"s":{"p":["*%_"],"r":"Mu"},"n":"gist","m":1,"k":"m"},{"n":"vault-backtrace","s":{"p":["*%_"],"r":"Mu"},"k":"m","m":0},{"s":{"p":["@auto","%init","*%_"],"r":"Mu"},"n":"BUILDALL","m":0,"k":"s"}],"b":"A","a":[{"t":"Mu","n":"$.illegal","k":"v"},{"n":"$.enclosing","t":"Mu","k":"v"},{"k":"v","t":"Mu","n":"$.backtrace"},{"k":"v","n":"$!ex","t":"Mu"},{"t":"Mu","n":"$!bt","k":"v"}],"d":"TITLE\nclass X::ControlFlow\n\nSUBTITLE\nError due to calling a loop control command in an ineligible scope\n\n    class X::ControlFlow is Exception { }\n\nThrown when a control flow construct (such as next or redo) is called\noutside the dynamic scope of an enclosing construct that is supposed to\ncatch them.\n\nFor example\n\n    last;\n    CATCH { default { put .^name, ': ', .Str } };\n    # OUTPUT: «X::ControlFlow: last without loop construct␤»\n\n","n":"X::ControlFlow","t":"X::ControlFlow"},{"t":"X::ControlFlow::Return","n":"X::ControlFlow::Return","d":"TITLE\nclass X::ControlFlow::Return\n\nSUBTITLE\nError due to calling return outside a routine\n\n    class X::ControlFlow::Return is X::ControlFlow { }\n\nThrown when a return is called from outside a routine.\n\n    return;\n    CATCH { default { put .^name, ': ', .Str } };\n    # OUTPUT: «X::ControlFlow::Return: Attempt to return outside of any Routine␤»","k":"c","m":[{"m":0,"k":"s","n":"BUILD","s":{"p":[":out-of-dynamic-scope($!out-of-dynamic-scope)","*%_"],"r":"Mu"}},{"s":{"r":"Mu","p":["*%_"]},"n":"illegal","k":"m","m":0},{"k":"m","m":0,"n":"enclosing","s":{"p":["*%_"],"r":"Mu"}},{"k":"m","m":0,"s":{"p":["*%_"],"r":"Mu"},"n":"message"},{"k":"m","m":0,"s":{"r":"Mu","p":["*%_"]},"n":"out-of-dynamic-scope"},{"s":{"r":"Mu","p":["@auto","%init","*%_"]},"n":"BUILDALL","k":"s","m":0},{"k":"m","m":0,"n":"backtrace","s":{"r":"Mu","p":["*%_"]}},{"k":"m","m":0,"s":{"p":["*%_"],"r":"Mu"},"n":"illegal"},{"k":"m","m":0,"s":{"p":["*%_"],"r":"Mu"},"n":"enclosing"},{"m":0,"k":"m","s":{"p":["*%_"],"r":"Mu"},"n":"message"},{"n":"BUILDALL","s":{"r":"Mu","p":["@auto","%init","*%_"]},"m":0,"k":"s"},{"k":"m","m":0,"n":"resume","s":{"r":"Bool","p":["*%_"]}},{"m":0,"k":"m","s":{"p":["*%_"],"r":"Mu"},"n":"reset-backtrace"},{"s":{"r":"Bool","p":["*%_"]},"n":"is-compile-time","k":"m","m":0},{"k":"m","m":0,"s":{"p":["$bt?","*%_"],"r":"Mu"},"n":"throw"},{"s":{"r":"Mu","p":["*%_"]},"n":"fail","k":"m","m":0},{"m":1,"k":"m","n":"Str","s":{"p":["*%_"],"r":"Mu"}},{"s":{"p":["*%_"],"r":"Mu"},"n":"Str","k":"m","m":1},{"n":"Str","s":{"p":["*%_"],"r":"Mu"},"k":"m","m":1},{"k":"m","m":0,"n":"die","s":{"p":["*%_"],"r":"Mu"}},{"n":"rethrow","s":{"r":"Mu","p":["*%_"]},"m":0,"k":"m"},{"n":"backtrace","s":{"p":["*%_"],"r":"Mu"},"m":0,"k":"m"},{"m":1,"k":"m","n":"gist","s":{"p":["*%_"],"r":"Mu"}},{"s":{"p":["*%_"],"r":"Mu"},"n":"gist","k":"m","m":1},{"m":1,"k":"m","n":"gist","s":{"r":"Mu","p":["*%_"]}},{"n":"vault-backtrace","s":{"p":["*%_"],"r":"Mu"},"k":"m","m":0},{"s":{"r":"Mu","p":["@auto","%init","*%_"]},"n":"BUILDALL","m":0,"k":"s"}],"b":"A","a":[{"k":"v","n":"$.out-of-dynamic-scope","t":"Bool"},{"k":"v","t":"Mu","n":"$.illegal"},{"k":"v","t":"Mu","n":"$.enclosing"},{"n":"$.backtrace","t":"Mu","k":"v"},{"k":"v","n":"$!ex","t":"Mu"},{"k":"v","n":"$!bt","t":"Mu"}]},{"n":"X::Pragma::UnknownArg","t":"X::Pragma::UnknownArg","b":"A","a":[{"k":"v","n":"$.name","t":"Mu"},{"k":"v","n":"$.arg","t":"Mu"},{"n":"$!ex","t":"Mu","k":"v"},{"k":"v","t":"Mu","n":"$!bt"}],"m":[{"k":"m","m":0,"s":{"p":["*%_"],"r":"Mu"},"n":"message"},{"s":{"p":["*%_"],"r":"Mu"},"n":"name","k":"m","m":0},{"n":"arg","s":{"r":"Mu","p":["*%_"]},"k":"m","m":0},{"s":{"r":"Mu","p":["@auto","%init","*%_"]},"n":"BUILDALL","k":"s","m":0},{"n":"resume","s":{"p":["*%_"],"r":"Bool"},"k":"m","m":0},{"s":{"r":"Mu","p":["*%_"]},"n":"reset-backtrace","k":"m","m":0},{"n":"is-compile-time","s":{"p":["*%_"],"r":"Bool"},"m":0,"k":"m"},{"n":"throw","s":{"p":["$bt?","*%_"],"r":"Mu"},"m":0,"k":"m"},{"k":"m","m":0,"s":{"p":["*%_"],"r":"Mu"},"n":"fail"},{"m":1,"k":"m","s":{"r":"Mu","p":["*%_"]},"n":"Str"},{"s":{"p":["*%_"],"r":"Mu"},"n":"Str","k":"m","m":1},{"m":1,"k":"m","n":"Str","s":{"p":["*%_"],"r":"Mu"}},{"m":0,"k":"m","s":{"p":["*%_"],"r":"Mu"},"n":"die"},{"n":"rethrow","s":{"r":"Mu","p":["*%_"]},"k":"m","m":0},{"m":0,"k":"m","n":"backtrace","s":{"r":"Mu","p":["*%_"]}},{"k":"m","m":1,"s":{"p":["*%_"],"r":"Mu"},"n":"gist"},{"s":{"r":"Mu","p":["*%_"]},"n":"gist","m":1,"k":"m"},{"m":1,"k":"m","s":{"r":"Mu","p":["*%_"]},"n":"gist"},{"k":"m","m":0,"s":{"p":["*%_"],"r":"Mu"},"n":"vault-backtrace"},{"k":"s","m":0,"s":{"p":["@auto","%init","*%_"],"r":"Mu"},"n":"BUILDALL"}],"k":"c"},{"k":"c","m":[{"m":0,"k":"m","n":"message","s":{"p":["*%_"],"r":"Mu"}},{"n":"name","s":{"r":"Mu","p":["*%_"]},"k":"m","m":0},{"n":"alternatives","s":{"r":"Mu","p":["*%_"]},"k":"m","m":0},{"s":{"p":["@auto","%init","*%_"],"r":"Mu"},"n":"BUILDALL","k":"s","m":0},{"s":{"r":"Bool","p":["*%_"]},"n":"resume","m":0,"k":"m"},{"m":0,"k":"m","s":{"r":"Mu","p":["*%_"]},"n":"reset-backtrace"},{"n":"is-compile-time","s":{"r":"Bool","p":["*%_"]},"k":"m","m":0},{"s":{"r":"Mu","p":["$bt?","*%_"]},"n":"throw","k":"m","m":0},{"k":"m","m":0,"s":{"r":"Mu","p":["*%_"]},"n":"fail"},{"m":1,"k":"m","s":{"r":"Mu","p":["*%_"]},"n":"Str"},{"n":"Str","s":{"p":["*%_"],"r":"Mu"},"k":"m","m":1},{"k":"m","m":1,"n":"Str","s":{"p":["*%_"],"r":"Mu"}},{"m":0,"k":"m","s":{"p":["*%_"],"r":"Mu"},"n":"die"},{"k":"m","m":0,"n":"rethrow","s":{"p":["*%_"],"r":"Mu"}},{"m":0,"k":"m","n":"backtrace","s":{"p":["*%_"],"r":"Mu"}},{"n":"gist","s":{"p":["*%_"],"r":"Mu"},"m":1,"k":"m"},{"m":1,"k":"m","n":"gist","s":{"r":"Mu","p":["*%_"]}},{"m":1,"k":"m","s":{"p":["*%_"],"r":"Mu"},"n":"gist"},{"s":{"p":["*%_"],"r":"Mu"},"n":"vault-backtrace","k":"m","m":0},{"k":"s","m":0,"s":{"r":"Mu","p":["@auto","%init","*%_"]},"n":"BUILDALL"}],"b":"A","a":[{"n":"$.name","t":"Mu","k":"v"},{"k":"v","n":"$.alternatives","t":"Mu"},{"t":"Mu","n":"$!ex","k":"v"},{"k":"v","n":"$!bt","t":"Mu"}],"n":"X::Pragma::MustOneOf","t":"X::Pragma::MustOneOf"},{"k":"c","m":[{"k":"m","m":0,"s":{"p":["*%_"],"r":"Mu"},"n":"message"},{"n":"what","s":{"r":"Mu","p":["*%_"]},"k":"m","m":0},{"m":0,"k":"s","n":"BUILDALL","s":{"r":"Mu","p":["@auto","%init","*%_"]}},{"n":"resume","s":{"p":["*%_"],"r":"Bool"},"m":0,"k":"m"},{"m":0,"k":"m","n":"reset-backtrace","s":{"r":"Mu","p":["*%_"]}},{"k":"m","m":0,"s":{"p":["*%_"],"r":"Bool"},"n":"is-compile-time"},{"k":"m","m":0,"n":"throw","s":{"p":["$bt?","*%_"],"r":"Mu"}},{"n":"fail","s":{"r":"Mu","p":["*%_"]},"k":"m","m":0},{"k":"m","m":1,"s":{"r":"Mu","p":["*%_"]},"n":"Str"},{"k":"m","m":1,"s":{"p":["*%_"],"r":"Mu"},"n":"Str"},{"k":"m","m":1,"s":{"r":"Mu","p":["*%_"]},"n":"Str"},{"k":"m","m":0,"n":"die","s":{"p":["*%_"],"r":"Mu"}},{"s":{"p":["*%_"],"r":"Mu"},"n":"rethrow","k":"m","m":0},{"n":"backtrace","s":{"r":"Mu","p":["*%_"]},"m":0,"k":"m"},{"s":{"p":["*%_"],"r":"Mu"},"n":"gist","m":1,"k":"m"},{"k":"m","m":1,"s":{"r":"Mu","p":["*%_"]},"n":"gist"},{"k":"m","m":1,"n":"gist","s":{"p":["*%_"],"r":"Mu"}},{"n":"vault-backtrace","s":{"r":"Mu","p":["*%_"]},"m":0,"k":"m"},{"s":{"r":"Mu","p":["@auto","%init","*%_"]},"n":"BUILDALL","m":0,"k":"s"}],"a":[{"t":"Mu","n":"$.what","k":"v"},{"t":"Mu","n":"$!ex","k":"v"},{"k":"v","t":"Mu","n":"$!bt"}],"b":"A","t":"X::Pragma::CannotPrecomp","n":"X::Pragma::CannotPrecomp"},{"n":"X::Pragma::OnlyOne","t":"X::Pragma::OnlyOne","b":"A","a":[{"n":"$.name","t":"Mu","k":"v"},{"t":"Mu","n":"$!ex","k":"v"},{"k":"v","n":"$!bt","t":"Mu"}],"k":"c","m":[{"s":{"p":["*%_"],"r":"Mu"},"n":"message","k":"m","m":0},{"n":"name","s":{"p":["*%_"],"r":"Mu"},"m":0,"k":"m"},{"m":0,"k":"s","n":"BUILDALL","s":{"p":["@auto","%init","*%_"],"r":"Mu"}},{"n":"resume","s":{"p":["*%_"],"r":"Bool"},"k":"m","m":0},{"k":"m","m":0,"n":"reset-backtrace","s":{"p":["*%_"],"r":"Mu"}},{"s":{"r":"Bool","p":["*%_"]},"n":"is-compile-time","k":"m","m":0},{"s":{"r":"Mu","p":["$bt?","*%_"]},"n":"throw","m":0,"k":"m"},{"k":"m","m":0,"s":{"r":"Mu","p":["*%_"]},"n":"fail"},{"m":1,"k":"m","n":"Str","s":{"r":"Mu","p":["*%_"]}},{"n":"Str","s":{"r":"Mu","p":["*%_"]},"m":1,"k":"m"},{"s":{"r":"Mu","p":["*%_"]},"n":"Str","m":1,"k":"m"},{"m":0,"k":"m","s":{"r":"Mu","p":["*%_"]},"n":"die"},{"n":"rethrow","s":{"p":["*%_"],"r":"Mu"},"m":0,"k":"m"},{"s":{"p":["*%_"],"r":"Mu"},"n":"backtrace","m":0,"k":"m"},{"n":"gist","s":{"r":"Mu","p":["*%_"]},"m":1,"k":"m"},{"s":{"r":"Mu","p":["*%_"]},"n":"gist","k":"m","m":1},{"n":"gist","s":{"p":["*%_"],"r":"Mu"},"m":1,"k":"m"},{"n":"vault-backtrace","s":{"p":["*%_"],"r":"Mu"},"k":"m","m":0},{"s":{"p":["@auto","%init","*%_"],"r":"Mu"},"n":"BUILDALL","k":"s","m":0}]},{"n":"X::Pragma::CannotWhat","t":"X::Pragma::CannotWhat","a":[{"k":"v","n":"$.what","t":"Mu"},{"k":"v","t":"Mu","n":"$.name"},{"k":"v","t":"Mu","n":"$!ex"},{"k":"v","t":"Mu","n":"$!bt"}],"b":"A","k":"c","m":[{"n":"message","s":{"r":"Mu","p":["*%_"]},"m":0,"k":"m"},{"m":0,"k":"m","s":{"r":"Mu","p":["*%_"]},"n":"what"},{"n":"name","s":{"p":["*%_"],"r":"Mu"},"k":"m","m":0},{"n":"BUILDALL","s":{"p":["@auto","%init","*%_"],"r":"Mu"},"m":0,"k":"s"},{"s":{"r":"Bool","p":["*%_"]},"n":"resume","k":"m","m":0},{"s":{"p":["*%_"],"r":"Mu"},"n":"reset-backtrace","m":0,"k":"m"},{"n":"is-compile-time","s":{"r":"Bool","p":["*%_"]},"k":"m","m":0},{"s":{"r":"Mu","p":["$bt?","*%_"]},"n":"throw","k":"m","m":0},{"n":"fail","s":{"r":"Mu","p":["*%_"]},"k":"m","m":0},{"k":"m","m":1,"s":{"p":["*%_"],"r":"Mu"},"n":"Str"},{"n":"Str","s":{"r":"Mu","p":["*%_"]},"k":"m","m":1},{"s":{"p":["*%_"],"r":"Mu"},"n":"Str","m":1,"k":"m"},{"s":{"p":["*%_"],"r":"Mu"},"n":"die","k":"m","m":0},{"s":{"r":"Mu","p":["*%_"]},"n":"rethrow","k":"m","m":0},{"k":"m","m":0,"s":{"p":["*%_"],"r":"Mu"},"n":"backtrace"},{"k":"m","m":1,"n":"gist","s":{"p":["*%_"],"r":"Mu"}},{"m":1,"k":"m","s":{"p":["*%_"],"r":"Mu"},"n":"gist"},{"k":"m","m":1,"s":{"r":"Mu","p":["*%_"]},"n":"gist"},{"k":"m","m":0,"n":"vault-backtrace","s":{"r":"Mu","p":["*%_"]}},{"k":"s","m":0,"s":{"p":["@auto","%init","*%_"],"r":"Mu"},"n":"BUILDALL"}]},{"m":[{"k":"m","m":0,"s":{"p":["*%_"],"r":"Mu"},"n":"message"},{"m":0,"k":"m","s":{"p":["*%_"],"r":"Mu"},"n":"name"},{"n":"BUILDALL","s":{"r":"Mu","p":["@auto","%init","*%_"]},"m":0,"k":"s"},{"k":"m","m":0,"s":{"p":["*%_"],"r":"Bool"},"n":"resume"},{"m":0,"k":"m","s":{"r":"Mu","p":["*%_"]},"n":"reset-backtrace"},{"m":0,"k":"m","n":"is-compile-time","s":{"r":"Bool","p":["*%_"]}},{"s":{"p":["$bt?","*%_"],"r":"Mu"},"n":"throw","k":"m","m":0},{"n":"fail","s":{"p":["*%_"],"r":"Mu"},"k":"m","m":0},{"s":{"p":["*%_"],"r":"Mu"},"n":"Str","k":"m","m":1},{"m":1,"k":"m","s":{"p":["*%_"],"r":"Mu"},"n":"Str"},{"s":{"p":["*%_"],"r":"Mu"},"n":"Str","m":1,"k":"m"},{"m":0,"k":"m","n":"die","s":{"r":"Mu","p":["*%_"]}},{"m":0,"k":"m","n":"rethrow","s":{"r":"Mu","p":["*%_"]}},{"s":{"p":["*%_"],"r":"Mu"},"n":"backtrace","k":"m","m":0},{"s":{"p":["*%_"],"r":"Mu"},"n":"gist","k":"m","m":1},{"m":1,"k":"m","s":{"r":"Mu","p":["*%_"]},"n":"gist"},{"s":{"r":"Mu","p":["*%_"]},"n":"gist","k":"m","m":1},{"n":"vault-backtrace","s":{"p":["*%_"],"r":"Mu"},"k":"m","m":0},{"n":"BUILDALL","s":{"p":["@auto","%init","*%_"],"r":"Mu"},"k":"s","m":0}],"k":"c","b":"A","a":[{"t":"Mu","n":"$.name","k":"v"},{"k":"v","n":"$!ex","t":"Mu"},{"k":"v","t":"Mu","n":"$!bt"}],"n":"X::Pragma::NoArgs","t":"X::Pragma::NoArgs"},{"n":"X::EXPORTHOW::NothingToSupersede","t":"X::EXPORTHOW::NothingToSupersede","m":[{"s":{"p":["*%_"],"r":"Mu"},"n":"message","k":"m","m":0},{"n":"sorry_heading","s":{"p":["*%_"],"r":"Mu"},"m":0,"k":"m"},{"n":"SET_FILE_LINE","s":{"p":["$file","$line","*%_"],"r":"Mu"},"m":0,"k":"m"},{"s":{"p":["*%_"],"r":"Mu"},"n":"gist","k":"m","m":1},{"m":1,"k":"m","n":"gist","s":{"r":"Mu","p":["*%_"]}},{"n":"gist","s":{"p":["*%_"],"r":"Mu"},"m":1,"k":"m"},{"k":"m","m":1,"n":"gist","s":{"r":"Mu","p":[":$sorry = Bool::True",":$expect = Bool::True","*%_"]}},{"s":{"p":["*%_"],"r":"Mu"},"n":"declarator","k":"m","m":0},{"n":"filename","s":{"r":"Mu","p":["*%_"]},"m":0,"k":"m"},{"m":0,"k":"m","n":"pos","s":{"r":"Mu","p":["*%_"]}},{"n":"line","s":{"p":["*%_"],"r":"Mu"},"m":0,"k":"m"},{"m":0,"k":"m","s":{"r":"Mu","p":["*%_"]},"n":"column"},{"s":{"p":["*%_"],"r":"Mu"},"n":"modules","m":0,"k":"m"},{"k":"m","m":0,"n":"is-compile-time","s":{"p":["*%_"],"r":"Mu"}},{"k":"m","m":0,"s":{"p":["*%_"],"r":"Mu"},"n":"pre"},{"k":"m","m":0,"s":{"r":"Mu","p":["*%_"]},"n":"post"},{"m":0,"k":"m","n":"highexpect","s":{"p":["*%_"],"r":"Mu"}},{"s":{"p":["@auto","%init","*%_"],"r":"Mu"},"n":"BUILDALL","k":"s","m":0},{"k":"m","m":0,"s":{"r":"Bool","p":["*%_"]},"n":"resume"},{"k":"m","m":0,"s":{"p":["*%_"],"r":"Mu"},"n":"reset-backtrace"},{"s":{"r":"Bool","p":["*%_"]},"n":"is-compile-time","k":"m","m":0},{"k":"m","m":0,"s":{"r":"Mu","p":["$bt?","*%_"]},"n":"throw"},{"s":{"r":"Mu","p":["*%_"]},"n":"fail","k":"m","m":0},{"m":1,"k":"m","s":{"r":"Mu","p":["*%_"]},"n":"Str"},{"k":"m","m":1,"n":"Str","s":{"r":"Mu","p":["*%_"]}},{"s":{"p":["*%_"],"r":"Mu"},"n":"Str","k":"m","m":1},{"s":{"r":"Mu","p":["*%_"]},"n":"die","m":0,"k":"m"},{"m":0,"k":"m","s":{"p":["*%_"],"r":"Mu"},"n":"rethrow"},{"k":"m","m":0,"n":"backtrace","s":{"p":["*%_"],"r":"Mu"}},{"m":1,"k":"m","s":{"r":"Mu","p":["*%_"]},"n":"gist"},{"n":"gist","s":{"r":"Mu","p":["*%_"]},"m":1,"k":"m"},{"k":"m","m":1,"s":{"r":"Mu","p":["*%_"]},"n":"gist"},{"n":"vault-backtrace","s":{"p":["*%_"],"r":"Mu"},"m":0,"k":"m"},{"n":"BUILDALL","s":{"p":["@auto","%init","*%_"],"r":"Mu"},"k":"s","m":0}],"k":"c","a":[{"n":"$.declarator","t":"Mu","k":"v"},{"n":"$.filename","t":"Mu","k":"v"},{"k":"v","n":"$.pos","t":"Mu"},{"k":"v","t":"Mu","n":"$.line"},{"k":"v","t":"Mu","n":"$.column"},{"n":"@.modules","t":"Positional","k":"v"},{"n":"$.is-compile-time","t":"Mu","k":"v"},{"k":"v","n":"$.pre","t":"Mu"},{"n":"$.post","t":"Mu","k":"v"},{"k":"v","n":"@.highexpect","t":"Positional"},{"n":"$!ex","t":"Mu","k":"v"},{"t":"Mu","n":"$!bt","k":"v"}],"b":"A"},{"b":"A","a":[{"k":"v","n":"$.directive","t":"Mu"},{"k":"v","t":"Mu","n":"$.filename"},{"k":"v","n":"$.pos","t":"Mu"},{"n":"$.line","t":"Mu","k":"v"},{"k":"v","n":"$.column","t":"Mu"},{"t":"Positional","n":"@.modules","k":"v"},{"t":"Mu","n":"$.is-compile-time","k":"v"},{"t":"Mu","n":"$.pre","k":"v"},{"n":"$.post","t":"Mu","k":"v"},{"k":"v","t":"Positional","n":"@.highexpect"},{"n":"$!ex","t":"Mu","k":"v"},{"k":"v","n":"$!bt","t":"Mu"}],"k":"c","m":[{"n":"message","s":{"r":"Mu","p":["*%_"]},"m":0,"k":"m"},{"n":"sorry_heading","s":{"r":"Mu","p":["*%_"]},"k":"m","m":0},{"s":{"r":"Mu","p":["$file","$line","*%_"]},"n":"SET_FILE_LINE","k":"m","m":0},{"s":{"p":["*%_"],"r":"Mu"},"n":"gist","m":1,"k":"m"},{"m":1,"k":"m","n":"gist","s":{"r":"Mu","p":["*%_"]}},{"k":"m","m":1,"s":{"p":["*%_"],"r":"Mu"},"n":"gist"},{"n":"gist","s":{"p":[":$sorry = Bool::True",":$expect = Bool::True","*%_"],"r":"Mu"},"k":"m","m":1},{"n":"directive","s":{"r":"Mu","p":["*%_"]},"m":0,"k":"m"},{"k":"m","m":0,"s":{"r":"Mu","p":["*%_"]},"n":"filename"},{"s":{"r":"Mu","p":["*%_"]},"n":"pos","m":0,"k":"m"},{"n":"line","s":{"p":["*%_"],"r":"Mu"},"k":"m","m":0},{"s":{"p":["*%_"],"r":"Mu"},"n":"column","k":"m","m":0},{"k":"m","m":0,"s":{"p":["*%_"],"r":"Mu"},"n":"modules"},{"k":"m","m":0,"n":"is-compile-time","s":{"r":"Mu","p":["*%_"]}},{"k":"m","m":0,"n":"pre","s":{"p":["*%_"],"r":"Mu"}},{"k":"m","m":0,"n":"post","s":{"r":"Mu","p":["*%_"]}},{"k":"m","m":0,"n":"highexpect","s":{"p":["*%_"],"r":"Mu"}},{"m":0,"k":"s","n":"BUILDALL","s":{"p":["@auto","%init","*%_"],"r":"Mu"}},{"s":{"p":["*%_"],"r":"Bool"},"n":"resume","k":"m","m":0},{"s":{"r":"Mu","p":["*%_"]},"n":"reset-backtrace","m":0,"k":"m"},{"k":"m","m":0,"s":{"r":"Bool","p":["*%_"]},"n":"is-compile-time"},{"k":"m","m":0,"s":{"r":"Mu","p":["$bt?","*%_"]},"n":"throw"},{"k":"m","m":0,"n":"fail","s":{"p":["*%_"],"r":"Mu"}},{"k":"m","m":1,"s":{"p":["*%_"],"r":"Mu"},"n":"Str"},{"k":"m","m":1,"n":"Str","s":{"p":["*%_"],"r":"Mu"}},{"s":{"p":["*%_"],"r":"Mu"},"n":"Str","k":"m","m":1},{"n":"die","s":{"p":["*%_"],"r":"Mu"},"k":"m","m":0},{"s":{"r":"Mu","p":["*%_"]},"n":"rethrow","m":0,"k":"m"},{"k":"m","m":0,"n":"backtrace","s":{"p":["*%_"],"r":"Mu"}},{"k":"m","m":1,"n":"gist","s":{"p":["*%_"],"r":"Mu"}},{"s":{"r":"Mu","p":["*%_"]},"n":"gist","m":1,"k":"m"},{"m":1,"k":"m","n":"gist","s":{"r":"Mu","p":["*%_"]}},{"k":"m","m":0,"s":{"r":"Mu","p":["*%_"]},"n":"vault-backtrace"},{"n":"BUILDALL","s":{"p":["@auto","%init","*%_"],"r":"Mu"},"m":0,"k":"s"}],"n":"X::EXPORTHOW::InvalidDirective","t":"X::EXPORTHOW::InvalidDirective"},{"k":"c","m":[{"n":"message","s":{"p":["*%_"],"r":"Mu"},"k":"m","m":0},{"k":"m","m":0,"s":{"r":"Mu","p":["*%_"]},"n":"sorry_heading"},{"n":"SET_FILE_LINE","s":{"p":["$file","$line","*%_"],"r":"Mu"},"m":0,"k":"m"},{"s":{"p":["*%_"],"r":"Mu"},"n":"gist","m":1,"k":"m"},{"n":"gist","s":{"r":"Mu","p":["*%_"]},"k":"m","m":1},{"m":1,"k":"m","n":"gist","s":{"p":["*%_"],"r":"Mu"}},{"k":"m","m":1,"n":"gist","s":{"p":[":$sorry = Bool::True",":$expect = Bool::True","*%_"],"r":"Mu"}},{"k":"m","m":0,"s":{"r":"Mu","p":["*%_"]},"n":"declarator"},{"n":"directive","s":{"r":"Mu","p":["*%_"]},"k":"m","m":0},{"k":"m","m":0,"n":"filename","s":{"p":["*%_"],"r":"Mu"}},{"m":0,"k":"m","n":"pos","s":{"p":["*%_"],"r":"Mu"}},{"n":"line","s":{"r":"Mu","p":["*%_"]},"k":"m","m":0},{"s":{"p":["*%_"],"r":"Mu"},"n":"column","k":"m","m":0},{"m":0,"k":"m","n":"modules","s":{"r":"Mu","p":["*%_"]}},{"s":{"r":"Mu","p":["*%_"]},"n":"is-compile-time","k":"m","m":0},{"s":{"r":"Mu","p":["*%_"]},"n":"pre","k":"m","m":0},{"k":"m","m":0,"s":{"r":"Mu","p":["*%_"]},"n":"post"},{"m":0,"k":"m","n":"highexpect","s":{"r":"Mu","p":["*%_"]}},{"m":0,"k":"s","s":{"r":"Mu","p":["@auto","%init","*%_"]},"n":"BUILDALL"},{"n":"resume","s":{"r":"Bool","p":["*%_"]},"k":"m","m":0},{"s":{"p":["*%_"],"r":"Mu"},"n":"reset-backtrace","k":"m","m":0},{"m":0,"k":"m","n":"is-compile-time","s":{"r":"Bool","p":["*%_"]}},{"n":"throw","s":{"r":"Mu","p":["$bt?","*%_"]},"m":0,"k":"m"},{"k":"m","m":0,"s":{"p":["*%_"],"r":"Mu"},"n":"fail"},{"s":{"r":"Mu","p":["*%_"]},"n":"Str","m":1,"k":"m"},{"s":{"p":["*%_"],"r":"Mu"},"n":"Str","k":"m","m":1},{"n":"Str","s":{"p":["*%_"],"r":"Mu"},"k":"m","m":1},{"m":0,"k":"m","s":{"p":["*%_"],"r":"Mu"},"n":"die"},{"k":"m","m":0,"n":"rethrow","s":{"r":"Mu","p":["*%_"]}},{"n":"backtrace","s":{"p":["*%_"],"r":"Mu"},"k":"m","m":0},{"m":1,"k":"m","s":{"r":"Mu","p":["*%_"]},"n":"gist"},{"n":"gist","s":{"p":["*%_"],"r":"Mu"},"m":1,"k":"m"},{"k":"m","m":1,"s":{"p":["*%_"],"r":"Mu"},"n":"gist"},{"m":0,"k":"m","n":"vault-backtrace","s":{"r":"Mu","p":["*%_"]}},{"s":{"p":["@auto","%init","*%_"],"r":"Mu"},"n":"BUILDALL","m":0,"k":"s"}],"b":"A","a":[{"t":"Mu","n":"$.declarator","k":"v"},{"k":"v","n":"$.directive","t":"Mu"},{"k":"v","n":"$.filename","t":"Mu"},{"n":"$.pos","t":"Mu","k":"v"},{"k":"v","n":"$.line","t":"Mu"},{"n":"$.column","t":"Mu","k":"v"},{"k":"v","n":"@.modules","t":"Positional"},{"k":"v","n":"$.is-compile-time","t":"Mu"},{"n":"$.pre","t":"Mu","k":"v"},{"t":"Mu","n":"$.post","k":"v"},{"k":"v","t":"Positional","n":"@.highexpect"},{"k":"v","t":"Mu","n":"$!ex"},{"t":"Mu","n":"$!bt","k":"v"}],"n":"X::EXPORTHOW::Conflict","t":"X::EXPORTHOW::Conflict"},{"k":"c","m":[{"s":{"r":"Mu","p":["*%_"]},"n":"message","m":0,"k":"m"},{"s":{"p":["*%_"],"r":"Mu"},"n":"method","k":"m","m":0},{"n":"name","s":{"p":["*%_"],"r":"Mu"},"m":0,"k":"m"},{"n":"value","s":{"r":"Mu","p":["*%_"]},"k":"m","m":0},{"s":{"r":"Mu","p":["@auto","%init","*%_"]},"n":"BUILDALL","k":"s","m":0},{"n":"resume","s":{"r":"Bool","p":["*%_"]},"m":0,"k":"m"},{"n":"reset-backtrace","s":{"p":["*%_"],"r":"Mu"},"k":"m","m":0},{"n":"is-compile-time","s":{"p":["*%_"],"r":"Bool"},"m":0,"k":"m"},{"m":0,"k":"m","n":"throw","s":{"r":"Mu","p":["$bt?","*%_"]}},{"s":{"p":["*%_"],"r":"Mu"},"n":"fail","k":"m","m":0},{"m":1,"k":"m","s":{"r":"Mu","p":["*%_"]},"n":"Str"},{"k":"m","m":1,"s":{"r":"Mu","p":["*%_"]},"n":"Str"},{"m":1,"k":"m","n":"Str","s":{"r":"Mu","p":["*%_"]}},{"s":{"p":["*%_"],"r":"Mu"},"n":"die","k":"m","m":0},{"m":0,"k":"m","n":"rethrow","s":{"r":"Mu","p":["*%_"]}},{"k":"m","m":0,"s":{"p":["*%_"],"r":"Mu"},"n":"backtrace"},{"n":"gist","s":{"r":"Mu","p":["*%_"]},"k":"m","m":1},{"n":"gist","s":{"p":["*%_"],"r":"Mu"},"m":1,"k":"m"},{"n":"gist","s":{"r":"Mu","p":["*%_"]},"m":1,"k":"m"},{"m":0,"k":"m","s":{"p":["*%_"],"r":"Mu"},"n":"vault-backtrace"},{"s":{"p":["@auto","%init","*%_"],"r":"Mu"},"n":"BUILDALL","m":0,"k":"s"}],"b":"A","a":[{"n":"$.method","t":"Mu","k":"v"},{"t":"Mu","n":"$.name","k":"v"},{"k":"v","n":"$.value","t":"Mu"},{"n":"$!ex","t":"Mu","k":"v"},{"k":"v","n":"$!bt","t":"Mu"}],"t":"X::Invalid::Value","n":"X::Invalid::Value"},{"n":"X::Invalid::ComputedValue","t":"X::Invalid::ComputedValue","k":"c","m":[{"k":"m","m":0,"s":{"p":["*%_"],"r":"Mu"},"n":"message"},{"k":"m","m":0,"n":"method","s":{"r":"Mu","p":["*%_"]}},{"m":0,"k":"m","n":"name","s":{"p":["*%_"],"r":"Mu"}},{"m":0,"k":"m","s":{"r":"Mu","p":["*%_"]},"n":"value"},{"m":0,"k":"m","s":{"r":"Mu","p":["*%_"]},"n":"reason"},{"s":{"r":"Mu","p":["@auto","%init","*%_"]},"n":"BUILDALL","m":0,"k":"s"},{"s":{"r":"Bool","p":["*%_"]},"n":"resume","k":"m","m":0},{"n":"reset-backtrace","s":{"r":"Mu","p":["*%_"]},"m":0,"k":"m"},{"m":0,"k":"m","n":"is-compile-time","s":{"r":"Bool","p":["*%_"]}},{"s":{"r":"Mu","p":["$bt?","*%_"]},"n":"throw","k":"m","m":0},{"s":{"p":["*%_"],"r":"Mu"},"n":"fail","k":"m","m":0},{"m":1,"k":"m","s":{"r":"Mu","p":["*%_"]},"n":"Str"},{"m":1,"k":"m","s":{"r":"Mu","p":["*%_"]},"n":"Str"},{"m":1,"k":"m","n":"Str","s":{"r":"Mu","p":["*%_"]}},{"m":0,"k":"m","n":"die","s":{"p":["*%_"],"r":"Mu"}},{"n":"rethrow","s":{"p":["*%_"],"r":"Mu"},"m":0,"k":"m"},{"n":"backtrace","s":{"r":"Mu","p":["*%_"]},"k":"m","m":0},{"m":1,"k":"m","s":{"r":"Mu","p":["*%_"]},"n":"gist"},{"s":{"r":"Mu","p":["*%_"]},"n":"gist","m":1,"k":"m"},{"k":"m","m":1,"s":{"r":"Mu","p":["*%_"]},"n":"gist"},{"k":"m","m":0,"s":{"p":["*%_"],"r":"Mu"},"n":"vault-backtrace"},{"m":0,"k":"s","s":{"p":["@auto","%init","*%_"],"r":"Mu"},"n":"BUILDALL"}],"b":"A","a":[{"t":"Mu","n":"$.method","k":"v"},{"k":"v","n":"$.name","t":"Mu"},{"k":"v","n":"$.value","t":"Mu"},{"t":"Mu","n":"$.reason","k":"v"},{"k":"v","n":"$!ex","t":"Mu"},{"t":"Mu","n":"$!bt","k":"v"}]},{"n":"X::Composition::NotComposable","t":"X::Composition::NotComposable","m":[{"s":{"r":"Mu","p":["*%_"]},"n":"message","m":0,"k":"m"},{"m":0,"k":"m","n":"sorry_heading","s":{"r":"Mu","p":["*%_"]}},{"k":"m","m":0,"n":"SET_FILE_LINE","s":{"p":["$file","$line","*%_"],"r":"Mu"}},{"n":"gist","s":{"r":"Mu","p":["*%_"]},"m":1,"k":"m"},{"n":"gist","s":{"p":["*%_"],"r":"Mu"},"m":1,"k":"m"},{"n":"gist","s":{"p":["*%_"],"r":"Mu"},"k":"m","m":1},{"s":{"p":[":$sorry = Bool::True",":$expect = Bool::True","*%_"],"r":"Mu"},"n":"gist","k":"m","m":1},{"s":{"p":["*%_"],"r":"Mu"},"n":"target-name","m":0,"k":"m"},{"m":0,"k":"m","s":{"p":["*%_"],"r":"Mu"},"n":"composer"},{"k":"m","m":0,"n":"filename","s":{"p":["*%_"],"r":"Mu"}},{"n":"pos","s":{"p":["*%_"],"r":"Mu"},"k":"m","m":0},{"n":"line","s":{"r":"Mu","p":["*%_"]},"k":"m","m":0},{"m":0,"k":"m","n":"column","s":{"r":"Mu","p":["*%_"]}},{"n":"modules","s":{"r":"Mu","p":["*%_"]},"m":0,"k":"m"},{"m":0,"k":"m","n":"is-compile-time","s":{"r":"Mu","p":["*%_"]}},{"s":{"r":"Mu","p":["*%_"]},"n":"pre","m":0,"k":"m"},{"k":"m","m":0,"s":{"p":["*%_"],"r":"Mu"},"n":"post"},{"m":0,"k":"m","s":{"r":"Mu","p":["*%_"]},"n":"highexpect"},{"n":"BUILDALL","s":{"r":"Mu","p":["@auto","%init","*%_"]},"m":0,"k":"s"},{"m":0,"k":"m","n":"resume","s":{"r":"Bool","p":["*%_"]}},{"k":"m","m":0,"s":{"r":"Mu","p":["*%_"]},"n":"reset-backtrace"},{"m":0,"k":"m","n":"is-compile-time","s":{"p":["*%_"],"r":"Bool"}},{"k":"m","m":0,"s":{"r":"Mu","p":["$bt?","*%_"]},"n":"throw"},{"k":"m","m":0,"n":"fail","s":{"r":"Mu","p":["*%_"]}},{"s":{"r":"Mu","p":["*%_"]},"n":"Str","m":1,"k":"m"},{"n":"Str","s":{"r":"Mu","p":["*%_"]},"m":1,"k":"m"},{"k":"m","m":1,"n":"Str","s":{"r":"Mu","p":["*%_"]}},{"k":"m","m":0,"n":"die","s":{"p":["*%_"],"r":"Mu"}},{"n":"rethrow","s":{"r":"Mu","p":["*%_"]},"m":0,"k":"m"},{"n":"backtrace","s":{"p":["*%_"],"r":"Mu"},"k":"m","m":0},{"k":"m","m":1,"n":"gist","s":{"r":"Mu","p":["*%_"]}},{"k":"m","m":1,"n":"gist","s":{"p":["*%_"],"r":"Mu"}},{"s":{"p":["*%_"],"r":"Mu"},"n":"gist","m":1,"k":"m"},{"m":0,"k":"m","n":"vault-backtrace","s":{"p":["*%_"],"r":"Mu"}},{"m":0,"k":"s","n":"BUILDALL","s":{"p":["@auto","%init","*%_"],"r":"Mu"}}],"k":"c","a":[{"k":"v","n":"$.target-name","t":"Mu"},{"k":"v","n":"$.composer","t":"Mu"},{"t":"Mu","n":"$.filename","k":"v"},{"k":"v","t":"Mu","n":"$.pos"},{"t":"Mu","n":"$.line","k":"v"},{"t":"Mu","n":"$.column","k":"v"},{"n":"@.modules","t":"Positional","k":"v"},{"n":"$.is-compile-time","t":"Mu","k":"v"},{"k":"v","n":"$.pre","t":"Mu"},{"n":"$.post","t":"Mu","k":"v"},{"k":"v","t":"Positional","n":"@.highexpect"},{"k":"v","t":"Mu","n":"$!ex"},{"n":"$!bt","t":"Mu","k":"v"}],"b":"A","d":"TITLE\nclass X::Composition::NotComposable\n\nSUBTITLE\nCompilation error due to composing an ineligible type\n\n    class X::Composition::NotComposable is Exception { }\n\nThrown when trying to compose a type into a target type, but the composer\ntype cannot be used for composition (roles and enums are generally OK).\n\nFor example\n\n    class A { }\n    class B does A { }\n\n\ndies with\n\n    ===SORRY!===\n    ␤A is not composable, so B cannot compose it\n\n\nbecause does is reserved for role composition, and A is not a role, nor\nsomething that knows how to turn into a role.\n\nThe fix is to either make A a role, or use inheritance (class B is A { })\ninstead.\n\n"},{"d":"TITLE\nclass X::NoDispatcher\n\nSUBTITLE\nError due to calling a dispatch command in an ineligible scope\n\n    class X::NoDispatcher is Exception { }\n\nWhen a redispatcher like nextsame is called without being in the dynamic\nscope of a call where a redispatch is possible, an X::NoDispatcher is\nthrown.\n\nFor example\n\n    nextsame; # In the mainline\n    CATCH { default { put .^name, ': ', .Str } };\n    # OUTPUT: «X::NoDispatcher: nextsame is not in the dynamic scope of a dispatcher␤»\n\n","a":[{"k":"v","t":"Mu","n":"$.redispatcher"},{"n":"$!ex","t":"Mu","k":"v"},{"k":"v","t":"Mu","n":"$!bt"}],"b":"A","m":[{"n":"message","s":{"p":["*%_"],"r":"Mu"},"m":0,"k":"m"},{"n":"redispatcher","s":{"p":["*%_"],"r":"Mu"},"k":"m","m":0},{"k":"s","m":0,"n":"BUILDALL","s":{"r":"Mu","p":["@auto","%init","*%_"]}},{"m":0,"k":"m","n":"resume","s":{"p":["*%_"],"r":"Bool"}},{"m":0,"k":"m","n":"reset-backtrace","s":{"r":"Mu","p":["*%_"]}},{"k":"m","m":0,"s":{"r":"Bool","p":["*%_"]},"n":"is-compile-time"},{"n":"throw","s":{"p":["$bt?","*%_"],"r":"Mu"},"m":0,"k":"m"},{"n":"fail","s":{"p":["*%_"],"r":"Mu"},"m":0,"k":"m"},{"n":"Str","s":{"p":["*%_"],"r":"Mu"},"k":"m","m":1},{"n":"Str","s":{"r":"Mu","p":["*%_"]},"k":"m","m":1},{"k":"m","m":1,"n":"Str","s":{"p":["*%_"],"r":"Mu"}},{"s":{"r":"Mu","p":["*%_"]},"n":"die","k":"m","m":0},{"s":{"r":"Mu","p":["*%_"]},"n":"rethrow","m":0,"k":"m"},{"s":{"p":["*%_"],"r":"Mu"},"n":"backtrace","k":"m","m":0},{"s":{"p":["*%_"],"r":"Mu"},"n":"gist","k":"m","m":1},{"k":"m","m":1,"s":{"p":["*%_"],"r":"Mu"},"n":"gist"},{"k":"m","m":1,"n":"gist","s":{"p":["*%_"],"r":"Mu"}},{"k":"m","m":0,"n":"vault-backtrace","s":{"p":["*%_"],"r":"Mu"}},{"k":"s","m":0,"n":"BUILDALL","s":{"p":["@auto","%init","*%_"],"r":"Mu"}}],"k":"c","t":"X::NoDispatcher","n":"X::NoDispatcher"},{"n":"Compiler","t":"Compiler","b":"A","a":[{"k":"v","n":"$.id","t":"Str"},{"n":"$.release","t":"Str","k":"v"},{"n":"$.codename","t":"Str","k":"v"},{"k":"v","n":"$.name","t":"Str"},{"n":"$.auth","t":"Str","k":"v"},{"t":"Version","n":"$.version","k":"v"},{"k":"v","t":"Blob","n":"$.signature"},{"t":"Str","n":"$.desc","k":"v"}],"m":[{"k":"s","m":0,"s":{"p":[":name($!name) = \"rakudo\"",":auth($!auth) = \"The Perl Foundation\"",":$version",":$release",":$codename","*%_"],"r":"Nil"},"n":"BUILD"},{"s":{"r":"Mu","p":[":$say","*%_"]},"n":"verbose-config","k":"m","m":0},{"n":"Str","s":{"r":"Mu","p":["*%_"]},"k":"m","m":0},{"s":{"r":"Mu","p":["*%_"]},"n":"gist","m":1,"k":"m"},{"s":{"p":["*%_"],"r":"Mu"},"n":"gist","m":1,"k":"m"},{"m":1,"k":"m","s":{"r":"Mu","p":["*%_"]},"n":"gist"},{"s":{"p":["*%_"],"r":"Mu"},"n":"id","k":"m","m":0},{"n":"release","s":{"r":"Mu","p":["*%_"]},"m":0,"k":"m"},{"n":"codename","s":{"p":["*%_"],"r":"Mu"},"k":"m","m":0},{"n":"name","s":{"p":["*%_"],"r":"Mu"},"m":0,"k":"m"},{"m":0,"k":"m","n":"auth","s":{"r":"Mu","p":["*%_"]}},{"m":0,"k":"m","s":{"p":["*%_"],"r":"Mu"},"n":"version"},{"k":"m","m":0,"n":"signature","s":{"p":["*%_"],"r":"Mu"}},{"s":{"r":"Mu","p":["*%_"]},"n":"desc","k":"m","m":0},{"s":{"p":["@auto","%init","*%_"],"r":"Mu"},"n":"BUILDALL","k":"s","m":0}],"k":"c","d":"TITLE\nclass Compiler\n\nSUBTITLE\nInformation related to the compiler that is being used\n\n    class Compiler does Systemic {}\n\nBuilt-in class for providing compiler related information. Usually accessed\nthrough the compiler attribute of the $*PERL dynamic variable.\n\n    say $*PERL.compiler; # OUTPUT: «rakudo (2019.03.1.385.ga.643.b.8.be.1)␤»\n\n"},{"n":"Macro","t":"Macro","a":[{"k":"v","t":"List","n":"@!dispatchees"},{"n":"$!dispatcher_cache","t":"Mu","k":"v"},{"k":"v","t":"Mu","n":"$!dispatcher"},{"t":"int","n":"$!rw","k":"v"},{"k":"v","t":"Mu","n":"$!inline_info"},{"t":"int","n":"$!yada","k":"v"},{"k":"v","n":"$!package","t":"Mu"},{"t":"int","n":"$!onlystar","k":"v"},{"t":"List","n":"@!dispatch_order","k":"v"},{"k":"v","n":"$!dispatch_cache","t":"Mu"},{"k":"v","t":"Mu","n":"$!why"},{"t":"Code","n":"$!do","k":"v"},{"t":"Signature","n":"$!signature","k":"v"},{"k":"v","n":"@!compstuff","t":"List"}],"b":"A","m":[{"n":"BUILDALL","s":{"r":"Mu","p":["@auto","%init","*%_"]},"k":"s","m":0},{"n":"onlystar","s":{"r":"Mu","p":["*%_"]},"k":"m","m":0},{"s":{"p":["*@","*%_"],"r":"Mu"},"n":"leave","k":"m","m":0},{"n":"candidates","s":{"r":"Mu","p":["*%_"]},"k":"m","m":0},{"m":0,"k":"m","n":"cando","s":{"p":["Capture:D $c","*%_"],"r":"Mu"}},{"n":"unwrap","s":{"r":"Mu","p":["$handle","*%_"]},"k":"m","m":0},{"n":"multi","s":{"r":"Mu","p":["*%_"]},"k":"m","m":0},{"s":{"r":"Mu","p":["*%_"]},"n":"perl","k":"m","m":1},{"k":"m","m":1,"n":"perl","s":{"p":["*%_"],"r":"Mu"}},{"m":1,"k":"m","n":"perl","s":{"p":["*%_"],"r":"Mu"}},{"m":1,"k":"m","s":{"r":"Mu","p":["*%_"]},"n":"perl"},{"n":"perl","s":{"r":"Mu","p":["*%_"]},"m":1,"k":"m"},{"n":"soft","s":{"r":"Nil","p":["*%_"]},"k":"m","m":0},{"m":0,"k":"m","s":{"r":"Mu","p":["&wrapper","*%_"]},"n":"wrap"},{"m":0,"k":"m","s":{"r":"Mu","p":["*%_"]},"n":"yada"},{"m":1,"k":"m","n":"gist","s":{"p":["*%_"],"r":"Mu"}},{"m":1,"k":"m","n":"gist","s":{"p":["*%_"],"r":"Mu"}},{"m":1,"k":"m","s":{"r":"Mu","p":["*%_"]},"n":"gist"},{"n":"package","s":{"r":"Mu","p":["*%_"]},"k":"m","m":0},{"k":"s","m":0,"s":{"r":"Mu","p":["@auto","%init","*%_"]},"n":"BUILDALL"},{"k":"m","m":1,"s":{"p":["Failure:D \\failure","*%_"],"r":"Mu"},"n":"POSITIONS"},{"k":"m","m":1,"s":{"p":["Any:D \\list","*%_"],"r":"Mu"},"n":"POSITIONS"},{"s":{"p":["Str:D \\name","*%_"],"r":"Mu"},"n":"has-phaser","k":"m","m":0},{"k":"m","m":0,"n":"phasers","s":{"r":"Mu","p":["Str:D $name","*%_"]}},{"s":{"p":["*%_"],"r":"Mu"},"n":"WHY","m":0,"k":"m"},{"k":"m","m":1,"s":{"r":"Mu","p":["*%_"]},"n":"perl"},{"k":"m","m":1,"n":"perl","s":{"r":"Mu","p":["*%_"]}},{"m":1,"k":"m","n":"perl","s":{"r":"Mu","p":["*%_"]}},{"n":"perl","s":{"r":"Mu","p":["*%_"]},"m":1,"k":"m"},{"n":"of","s":{"r":"Mu","p":["*%_"]},"k":"m","m":0},{"s":{"p":["Str $name","*%_"],"r":"Nil"},"n":"fire_if_phasers","m":0,"k":"m"},{"m":0,"k":"m","s":{"p":["$why","*%_"],"r":"Nil"},"n":"set_why"},{"k":"m","m":0,"s":{"p":["*%_"],"r":"Mu"},"n":"returns"},{"n":"has-phasers","s":{"r":"Mu","p":["*%_"]},"k":"m","m":0},{"n":"add_phaser","s":{"r":"Nil","p":["Str:D \\name","&block","*%_"]},"m":0,"k":"m"},{"m":0,"k":"m","n":"fire_phasers","s":{"r":"Nil","p":["Str $name","*%_"]}},{"s":{"p":["@auto","%init","*%_"],"r":"Mu"},"n":"BUILDALL","m":0,"k":"s"},{"m":0,"k":"m","s":{"r":"Mu","p":["*%_"]},"n":"static_id"},{"m":0,"k":"m","s":{"r":"Mu","p":["*%_"]},"n":"returns"},{"s":{"p":["Capture:D $c","*%_"],"r":"Mu"},"n":"cando","k":"m","m":0},{"s":{"p":["*%_"],"r":"Mu"},"n":"outer","m":0,"k":"m"},{"n":"new","s":{"r":"Mu","p":["*%attrinit"]},"m":1,"k":"m"},{"s":{"r":"Mu","p":["$","*@","*%_"]},"n":"new","k":"m","m":1},{"m":1,"k":"m","n":"new","s":{"p":["*%_"],"r":"Mu"}},{"n":"count","s":{"r":"Mu","p":["*%_"]},"m":0,"k":"m"},{"n":"ACCEPTS","s":{"r":"Mu","p":["\\topic","*%_"]},"m":1,"k":"m"},{"m":1,"k":"m","s":{"p":["Mu:U \\topic","*%_"],"r":"Mu"},"n":"ACCEPTS"},{"m":1,"k":"m","n":"ACCEPTS","s":{"p":["Mu:D \\a","*%_"],"r":"Mu"}},{"s":{"p":["Mu:U $","*%_"],"r":"Bool"},"n":"ACCEPTS","k":"m","m":1},{"k":"m","m":1,"n":"ACCEPTS","s":{"r":"Bool:D","p":["\\topic","*%_"]}},{"n":"ACCEPTS","s":{"r":"Mu","p":["Mu $topic is raw","*%_"]},"k":"m","m":1},{"n":"perl","s":{"r":"Mu","p":["*%_"]},"k":"m","m":1},{"m":1,"k":"m","s":{"r":"Mu","p":["*%_"]},"n":"perl"},{"m":1,"k":"m","s":{"r":"Mu","p":["*%_"]},"n":"perl"},{"n":"of","s":{"r":"Mu","p":["*%_"]},"m":0,"k":"m"},{"s":{"p":["*%_"],"r":"Mu"},"n":"file","m":0,"k":"m"},{"s":{"p":["*%_"],"r":"Mu"},"n":"signature","k":"m","m":0},{"m":0,"k":"m","s":{"p":["*%_"],"r":"Mu"},"n":"Capture"},{"s":{"r":"Mu","p":["*%_"]},"n":"Str","m":1,"k":"m"},{"k":"m","m":1,"s":{"r":"Mu","p":["*%_"]},"n":"Str"},{"n":"Str","s":{"r":"Mu","p":["*%_"]},"m":1,"k":"m"},{"m":0,"k":"m","n":"assuming","s":{"r":"Mu","p":["|primers is raw"]}},{"s":{"r":"Mu","p":["*%_"]},"n":"prec","k":"m","m":1},{"m":1,"k":"m","s":{"r":"Mu","p":["Str:D $","*%_"]},"n":"prec"},{"m":0,"k":"m","s":{"p":["*%_"],"r":"Mu"},"n":"arity"},{"n":"line","s":{"r":"Mu","p":["*%_"]},"m":0,"k":"m"},{"m":0,"k":"s","s":{"r":"Mu","p":["@auto","%init","*%_"]},"n":"BUILDALL"}],"k":"c","d":"TITLE\nclass Macro\n\nSUBTITLE\nCompile-time routine\n\n    class Macro is Routine { }\n\nA macro is a Routine whose invocation typically happens during parsing. By\nreturning an AST, a macro can inject code into the calling location."},{"t":"Sub","n":"&take-rw","k":"v"},{"m":1,"k":"s","n":"take-rw","s":{"r":"Mu","p":[]}},{"k":"s","m":1,"s":{"r":"Mu","p":["\\x"]},"n":"take-rw"},{"m":1,"k":"s","n":"take-rw","s":{"r":"Mu","p":["|"]}},{"n":"&infix:<cmp>","t":"Sub+{is-pure}+{Precedence}","k":"v"},{"s":{"r":"Mu","p":["\\a","\\b"]},"n":"infix:<cmp>","k":"s","m":1},{"m":1,"k":"s","n":"infix:<cmp>","s":{"p":["Real:D \\a","\\b"],"r":"Mu"}},{"n":"infix:<cmp>","s":{"p":["\\a","Real:D \\b"],"r":"Mu"},"k":"s","m":1},{"n":"infix:<cmp>","s":{"r":"Mu","p":["Real:D \\a","Real:D \\b"]},"m":1,"k":"s"},{"k":"s","m":1,"s":{"r":"Mu","p":["Int:D \\a","Rational:D \\b"]},"n":"infix:<cmp>"},{"n":"infix:<cmp>","s":{"p":["Rational:D \\a","Int:D \\b"],"r":"Mu"},"m":1,"k":"s"},{"k":"s","m":1,"n":"infix:<cmp>","s":{"r":"Mu","p":["Int:D \\a","Int:D \\b"]}},{"m":1,"k":"s","n":"infix:<cmp>","s":{"r":"Mu","p":["int $a","int $b"]}},{"n":"infix:<cmp>","s":{"r":"Mu","p":["Num:D \\a","Num:D \\b"]},"k":"s","m":1},{"s":{"p":["num $a","num $b"],"r":"Mu"},"n":"infix:<cmp>","k":"s","m":1},{"s":{"p":["Blob:D \\a","Blob:D \\b"],"r":"Mu"},"n":"infix:<cmp>","k":"s","m":1},{"m":1,"k":"s","n":"infix:<cmp>","s":{"r":"Order:D","p":["Str:D \\a","Str:D \\b"]}},{"m":1,"k":"s","n":"infix:<cmp>","s":{"p":["str $a","str $b"],"r":"Order:D"}},{"m":1,"k":"s","n":"infix:<cmp>","s":{"p":["Range:D \\a","Range:D \\b"],"r":"Order:D"}},{"s":{"p":["Num(Real) \\a","Range:D \\b"],"r":"Order:D"},"n":"infix:<cmp>","m":1,"k":"s"},{"s":{"p":["Range:D \\a","Num(Real) \\b"],"r":"Order:D"},"n":"infix:<cmp>","k":"s","m":1},{"n":"infix:<cmp>","s":{"r":"Order:D","p":["Positional \\a","Range:D \\b"]},"m":1,"k":"s"},{"m":1,"k":"s","s":{"r":"Order:D","p":["Range:D \\a","Positional \\b"]},"n":"infix:<cmp>"},{"s":{"r":"Order:D","p":["@a","@b"]},"n":"infix:<cmp>","m":1,"k":"s"},{"n":"infix:<cmp>","s":{"p":["Pair:D \\a","Pair:D \\b"],"r":"Mu"},"m":1,"k":"s"},{"n":"infix:<cmp>","s":{"r":"Order:D","p":["Complex:D \\a","Complex:D \\b"]},"k":"s","m":1},{"s":{"p":["Num(Real) \\a","Complex:D \\b"],"r":"Order:D"},"n":"infix:<cmp>","k":"s","m":1},{"n":"infix:<cmp>","s":{"r":"Order:D","p":["Complex:D \\a","Num(Real) \\b"]},"m":1,"k":"s"},{"k":"s","m":1,"n":"infix:<cmp>","s":{"p":["IntStr:D $a","IntStr:D $b"],"r":"Mu"}},{"s":{"r":"Mu","p":["IntStr:D $a","RatStr:D $b"]},"n":"infix:<cmp>","m":1,"k":"s"},{"n":"infix:<cmp>","s":{"r":"Mu","p":["IntStr:D $a","NumStr:D $b"]},"k":"s","m":1},{"s":{"p":["IntStr:D $a","ComplexStr:D $b"],"r":"Mu"},"n":"infix:<cmp>","k":"s","m":1},{"k":"s","m":1,"n":"infix:<cmp>","s":{"r":"Mu","p":["RatStr:D $a","IntStr:D $b"]}},{"m":1,"k":"s","s":{"p":["RatStr:D $a","RatStr:D $b"],"r":"Mu"},"n":"infix:<cmp>"},{"s":{"p":["RatStr:D $a","NumStr:D $b"],"r":"Mu"},"n":"infix:<cmp>","m":1,"k":"s"},{"s":{"p":["RatStr:D $a","ComplexStr:D $b"],"r":"Mu"},"n":"infix:<cmp>","k":"s","m":1},{"k":"s","m":1,"s":{"p":["NumStr:D $a","IntStr:D $b"],"r":"Mu"},"n":"infix:<cmp>"},{"m":1,"k":"s","n":"infix:<cmp>","s":{"r":"Mu","p":["NumStr:D $a","RatStr:D $b"]}},{"k":"s","m":1,"n":"infix:<cmp>","s":{"r":"Mu","p":["NumStr:D $a","NumStr:D $b"]}},{"n":"infix:<cmp>","s":{"p":["NumStr:D $a","ComplexStr:D $b"],"r":"Mu"},"k":"s","m":1},{"n":"infix:<cmp>","s":{"r":"Mu","p":["ComplexStr:D $a","IntStr:D $b"]},"k":"s","m":1},{"n":"infix:<cmp>","s":{"p":["ComplexStr:D $a","RatStr:D $b"],"r":"Mu"},"k":"s","m":1},{"n":"infix:<cmp>","s":{"r":"Mu","p":["ComplexStr:D $a","NumStr:D $b"]},"k":"s","m":1},{"n":"infix:<cmp>","s":{"p":["ComplexStr:D $a","ComplexStr:D $b"],"r":"Mu"},"m":1,"k":"s"},{"m":1,"k":"s","s":{"r":"Order:D","p":["Instant:D $a","Instant:D $b"]},"n":"infix:<cmp>"},{"n":"infix:<cmp>","s":{"p":["DateTime:D \\a","DateTime:D \\b"],"r":"Order:D"},"m":1,"k":"s"},{"k":"s","m":1,"n":"infix:<cmp>","s":{"p":["Date:D $a","Date:D $b"],"r":"Order:D"}},{"s":{"r":"Mu","p":["Version:D \\a","Version:D \\b"]},"n":"infix:<cmp>","m":1,"k":"s"},{"m":1,"k":"s","n":"infix:<cmp>","s":{"p":["Rational:D \\a","Rational:D \\b"],"r":"Mu"}},{"k":"v","n":"&cosech","t":"Sub+{is-pure}"},{"k":"s","m":1,"n":"cosech","s":{"r":"Mu","p":["Numeric \\x"]}},{"s":{"r":"Mu","p":["Cool \\x"]},"n":"cosech","m":1,"k":"s"},{"m":1,"k":"s","n":"cosech","s":{"p":["num $x"],"r":"num"}},{"k":"v","n":"&infix:<∘>","t":"Sub"},{"s":{"r":"Mu","p":[]},"n":"infix:<o>","m":1,"k":"s"},{"m":1,"k":"s","s":{"p":["&f"],"r":"Mu"},"n":"infix:<o>"},{"k":"s","m":1,"n":"infix:<o>","s":{"p":["&f","&g"],"r":"Block:D"}},{"n":"&chop","t":"Sub","k":"v"},{"n":"chop","s":{"p":["Cool:D $s"],"r":"Str:D"},"m":1,"k":"s"},{"s":{"p":["Cool:D $s","$n"],"r":"Str:D"},"n":"chop","m":1,"k":"s"},{"t":"Sub","n":"&trait_mod:<of>","k":"v"},{"k":"s","m":1,"s":{"r":"Mu","p":["Mu:U $target","Mu:U $type"]},"n":"trait_mod:<of>"},{"n":"trait_mod:<of>","s":{"r":"Mu","p":["Routine:D $target","Mu:U $type"]},"m":1,"k":"s"},{"t":"Sub+{is-pure}+{Precedence}","n":"&infix:<^..>","k":"v"},{"k":"s","m":1,"n":"infix:<^..>","s":{"p":["$min","$max"],"r":"Mu"}},{"t":"Signal","n":"SIGQUIT","k":"e"},{"t":"Sub+{is-pure}","n":"&bag","k":"v"},{"s":{"r":"Mu","p":[]},"n":"bag","m":1,"k":"s"},{"m":1,"k":"s","n":"bag","s":{"p":["*@a"],"r":"Bag:D"}},{"d":"TITLE\nclass Kernel\n\nSUBTITLE\nKernel related information\n\n    class Kernel does Systemic { }\n\nBuilt-in class for providing kernel related information. Usually accessed\nthrough the $*KERNEL dynamic variable.\n\n","b":"A","a":[{"k":"v","t":"Str","n":"$.release"},{"k":"v","t":"Str","n":"$!hardware"},{"t":"Str","n":"$!arch","k":"v"},{"k":"v","t":"Int","n":"$!bits"},{"n":"$!uname","t":"Mu","k":"v"},{"t":"Positional","n":"@!signals","k":"v"},{"k":"v","t":"Mu","n":"$!signals-setup-lock"},{"t":"Mu","n":"$!signals-setup","k":"v"},{"k":"v","n":"%!signals-by-Str","t":"Associative"},{"k":"v","t":"Mu","n":"$!signals-by-Str-setup"},{"k":"v","n":"$.name","t":"Str"},{"k":"v","t":"Str","n":"$.auth"},{"n":"$.version","t":"Version","k":"v"},{"k":"v","t":"Blob","n":"$.signature"},{"k":"v","n":"$.desc","t":"Str"}],"m":[{"n":"BUILD","s":{"p":[":auth($!auth) = \"unknown\"","*%_"],"r":"Nil"},"m":0,"k":"s"},{"m":0,"k":"m","n":"name","s":{"r":"Mu","p":["*%_"]}},{"n":"version","s":{"p":["*%_"],"r":"Mu"},"m":0,"k":"m"},{"n":"release","s":{"p":["*%_"],"r":"Mu"},"m":0,"k":"m"},{"n":"hardware","s":{"p":["*%_"],"r":"Mu"},"k":"m","m":0},{"s":{"p":["*%_"],"r":"Mu"},"n":"arch","m":0,"k":"m"},{"k":"m","m":0,"n":"archname","s":{"r":"Mu","p":["*%_"]}},{"n":"bits","s":{"p":["*%_"],"r":"Mu"},"k":"m","m":0},{"m":0,"k":"m","n":"hostname","s":{"p":["*%_"],"r":"Mu"}},{"s":{"p":["*%_"],"r":"Mu"},"n":"signals","k":"m","m":0},{"n":"signal","s":{"r":"Int:D","p":["Str:D $signal","*%_"]},"m":1,"k":"m"},{"s":{"r":"Int:D","p":["Signal:D \\signal","*%_"]},"n":"signal","m":1,"k":"m"},{"k":"m","m":1,"s":{"p":["Int:D \\signal","*%_"],"r":"Int:D"},"n":"signal"},{"n":"cpu-cores","s":{"p":["*%_"],"r":"Int"},"m":0,"k":"m"},{"n":"cpu-usage","s":{"p":["*%_"],"r":"Int"},"k":"m","m":0},{"m":0,"k":"m","s":{"r":"Int","p":["*%_"]},"n":"free-memory"},{"m":0,"k":"m","s":{"p":["*%_"],"r":"Int"},"n":"total-memory"},{"s":{"p":["*%_"],"r":"Endian:D"},"n":"endian","k":"m","m":0},{"k":"m","m":0,"n":"Str","s":{"r":"Mu","p":["*%_"]}},{"n":"gist","s":{"p":["*%_"],"r":"Mu"},"m":1,"k":"m"},{"s":{"p":["*%_"],"r":"Mu"},"n":"gist","k":"m","m":1},{"s":{"p":["*%_"],"r":"Mu"},"n":"gist","k":"m","m":1},{"m":0,"k":"m","s":{"p":["*%_"],"r":"Mu"},"n":"auth"},{"k":"m","m":0,"s":{"r":"Mu","p":["*%_"]},"n":"signature"},{"k":"m","m":0,"s":{"p":["*%_"],"r":"Mu"},"n":"desc"},{"m":0,"k":"s","n":"BUILDALL","s":{"r":"Mu","p":["@auto","%init","*%_"]}},{"k":"m","m":0,"s":{"p":["*%_"],"r":"Mu"},"n":"!uname-s"},{"m":0,"k":"m","n":"!uname-v","s":{"p":["*%_"],"r":"Mu"}},{"k":"m","m":0,"n":"!uname","s":{"r":"Mu","p":["*%_"]}},{"n":"!uname-m","s":{"p":["*%_"],"r":"Mu"},"k":"m","m":0},{"n":"!uname-p","s":{"r":"Mu","p":["*%_"]},"k":"m","m":0},{"n":"!uname-r","s":{"p":["*%_"],"r":"Mu"},"k":"m","m":0}],"k":"c","t":"Kernel","n":"Kernel"},{"k":"e","t":"Signal","n":"SIGKILL"},{"b":"C","a":[{"n":"$.re","t":"num","k":"v"},{"k":"v","t":"num","n":"$.im"}],"m":[{"n":"new","s":{"r":"Mu","p":["Complex $c","Str $s","*%_"]},"m":0,"k":"m"},{"n":"Capture","s":{"p":["*%_"],"r":"Mu"},"k":"m","m":0},{"n":"Complex","s":{"p":["*%_"],"r":"Mu"},"m":0,"k":"m"},{"k":"m","m":1,"s":{"p":["\\topic","*%_"],"r":"Mu"},"n":"ACCEPTS"},{"s":{"p":["Mu:U \\topic","*%_"],"r":"Mu"},"n":"ACCEPTS","m":1,"k":"m"},{"s":{"p":["Mu:D \\a","*%_"],"r":"Mu"},"n":"ACCEPTS","m":1,"k":"m"},{"n":"ACCEPTS","s":{"r":"Bool","p":["Mu:U $","*%_"]},"m":1,"k":"m"},{"k":"m","m":1,"n":"ACCEPTS","s":{"r":"Bool:D","p":["\\topic","*%_"]}},{"n":"ACCEPTS","s":{"p":["Any:D \\a","*%_"],"r":"Mu"},"k":"m","m":1},{"s":{"p":["Any:D \\a","*%_"],"r":"Mu"},"n":"ACCEPTS","m":1,"k":"m"},{"m":1,"k":"m","n":"Numeric","s":{"r":"Mu","p":["*%_"]}},{"k":"m","m":1,"n":"Numeric","s":{"p":["*%_"],"r":"Mu"}},{"s":{"p":["*%_"],"r":"Mu"},"n":"Numeric","m":1,"k":"m"},{"k":"m","m":1,"n":"Numeric","s":{"r":"Mu","p":["*%_"]}},{"n":"Numeric","s":{"r":"Mu","p":["*%_"]},"m":1,"k":"m"},{"n":"Real","s":{"p":["*%_"],"r":"Mu"},"m":1,"k":"m"},{"n":"Real","s":{"r":"Mu","p":["*%_"]},"m":1,"k":"m"},{"n":"Real","s":{"p":["*%_"],"r":"Mu"},"k":"m","m":1},{"n":"Real","s":{"p":["*%_"],"r":"Mu"},"m":1,"k":"m"},{"n":"Real","s":{"p":["*%_"],"r":"Mu"},"m":1,"k":"m"},{"k":"m","m":1,"s":{"r":"Mu","p":["*%_"]},"n":"Str"},{"n":"Str","s":{"r":"Mu","p":["*%_"]},"k":"m","m":1},{"m":1,"k":"m","s":{"r":"Mu","p":["*%_"]},"n":"Str"},{"n":"Str","s":{"r":"Mu","p":["*%_"]},"m":1,"k":"m"},{"n":"perl","s":{"r":"Mu","p":["*%_"]},"m":1,"k":"m"},{"s":{"p":["*%_"],"r":"Mu"},"n":"perl","m":1,"k":"m"},{"k":"m","m":1,"s":{"p":["*%_"],"r":"Mu"},"n":"perl"},{"s":{"p":["*%_"],"r":"Mu"},"n":"perl","m":1,"k":"m"},{"s":{"r":"Mu","p":["@auto","%init","*%_"]},"n":"BUILDALL","k":"s","m":0},{"k":"m","m":0,"n":"acotanh","s":{"r":"Mu","p":["*%_"]}},{"k":"m","m":0,"n":"sech","s":{"r":"Mu","p":["*%_"]}},{"s":{"p":["$n","*%_"],"r":"Mu"},"n":"roots","m":0,"k":"m"},{"m":0,"k":"m","s":{"r":"Mu","p":["*%_"]},"n":"cotanh"},{"k":"m","m":0,"n":"im","s":{"r":"Mu","p":["*%_"]}},{"m":0,"k":"m","s":{"p":["*%_"],"r":"Mu"},"n":"truncate"},{"m":0,"k":"m","s":{"r":"Mu","p":["*%_"]},"n":"acosh"},{"n":"acos","s":{"r":"Mu","p":["*%_"]},"k":"m","m":0},{"k":"m","m":0,"n":"ceiling","s":{"r":"Mu","p":["*%_"]}},{"s":{"r":"Mu","p":["*%_"]},"n":"acosec","k":"m","m":0},{"k":"m","m":1,"n":"round","s":{"r":"Mu","p":["*%_"]}},{"m":1,"k":"m","n":"round","s":{"r":"Mu","p":["$scale","*%_"]}},{"s":{"p":["*%_"],"r":"Mu"},"n":"gist","k":"m","m":1},{"k":"m","m":1,"n":"gist","s":{"p":["*%_"],"r":"Mu"}},{"s":{"r":"Mu","p":["*%_"]},"n":"gist","m":1,"k":"m"},{"n":"floor","s":{"p":["*%_"],"r":"Mu"},"m":0,"k":"m"},{"k":"m","m":0,"s":{"r":"Mu","p":["$epsilon?","*%_"]},"n":"FatRat"},{"s":{"p":["*%_"],"r":"Bool"},"n":"Bool","k":"m","m":1},{"s":{"p":["*%_"],"r":"Mu"},"n":"Bool","k":"m","m":1},{"m":1,"k":"m","n":"Bool","s":{"p":["*%_"],"r":"Mu"}},{"s":{"r":"Mu","p":["*%_"]},"n":"Bool","k":"m","m":1},{"s":{"r":"Mu","p":["*%_"]},"n":"Str","k":"m","m":1},{"m":1,"k":"m","n":"Str","s":{"p":["*%_"],"r":"Mu"}},{"k":"m","m":1,"n":"Str","s":{"p":["*%_"],"r":"Mu"}},{"k":"m","m":0,"s":{"r":"Mu","p":["*%_"]},"n":"sinh"},{"s":{"r":"Mu","p":["*%_"]},"n":"asec","m":0,"k":"m"},{"s":{"p":["*%_"],"r":"Mu"},"n":"acotan","k":"m","m":0},{"n":"exp","s":{"r":"Mu","p":["*%_"]},"k":"m","m":1},{"m":1,"k":"m","n":"exp","s":{"r":"Mu","p":["$base","*%_"]}},{"m":0,"k":"m","n":"pred","s":{"r":"Mu","p":["*%_"]}},{"s":{"p":["*%_"],"r":"Mu"},"n":"Complex","k":"m","m":0},{"k":"m","m":1,"s":{"r":"ValueObjAt:D","p":["*%_"]},"n":"WHICH"},{"m":1,"k":"m","n":"WHICH","s":{"r":"ObjAt:D","p":["*%_"]}},{"m":1,"k":"m","n":"WHICH","s":{"r":"ValueObjAt:D","p":["*%_"]}},{"k":"m","m":0,"s":{"r":"Mu","p":["*%_"]},"n":"asinh"},{"n":"cosh","s":{"p":["*%_"],"r":"Mu"},"k":"m","m":0},{"n":"re","s":{"p":["*%_"],"r":"Mu"},"m":0,"k":"m"},{"s":{"r":"Mu","p":["*%_"]},"n":"narrow","m":0,"k":"m"},{"k":"m","m":1,"s":{"r":"Mu","p":["*%_"]},"n":"DUMP"},{"n":"DUMP","s":{"r":"Mu","p":[":$indent-step = 4",":%ctx","*%_"]},"k":"m","m":1},{"s":{"r":"Mu","p":["*%_"]},"n":"DUMP","k":"m","m":1},{"n":"sqrt","s":{"r":"Mu","p":["*%_"]},"k":"m","m":0},{"n":"abs","s":{"p":["*%_"],"r":"Mu"},"k":"m","m":0},{"k":"m","m":0,"n":"coerce-to-real","s":{"p":["$exception-target","*%_"],"r":"Mu"}},{"m":0,"k":"m","n":"Rat","s":{"p":["$epsilon?","*%_"],"r":"Mu"}},{"s":{"p":["*%_"],"r":"Mu"},"n":"tan","k":"m","m":0},{"m":1,"k":"m","s":{"r":"Mu","p":["*%_"]},"n":"Real"},{"n":"Real","s":{"p":["*%_"],"r":"Mu"},"k":"m","m":1},{"s":{"r":"Mu","p":["*%_"]},"n":"Real","k":"m","m":1},{"k":"m","m":1,"n":"Numeric","s":{"p":["*%_"],"r":"Mu"}},{"k":"m","m":1,"n":"Numeric","s":{"p":["*%_"],"r":"Mu"}},{"s":{"r":"Mu","p":["*%_"]},"n":"Numeric","m":1,"k":"m"},{"n":"asech","s":{"r":"Mu","p":["*%_"]},"k":"m","m":0},{"k":"m","m":0,"s":{"r":"Mu","p":["*%_"]},"n":"acosech"},{"s":{"r":"Mu","p":["*%_"]},"n":"perl","k":"m","m":1},{"m":1,"k":"m","s":{"p":["*%_"],"r":"Mu"},"n":"perl"},{"k":"m","m":1,"s":{"r":"Mu","p":["*%_"]},"n":"perl"},{"n":"tanh","s":{"p":["*%_"],"r":"Mu"},"m":0,"k":"m"},{"m":1,"k":"m","s":{"r":"Mu","p":["*%_"]},"n":"log"},{"n":"log","s":{"r":"Mu","p":["Cool $base","*%_"]},"k":"m","m":1},{"m":1,"k":"m","s":{"p":["Numeric $base","*%_"],"r":"Mu"},"n":"log"},{"m":0,"k":"m","n":"sec","s":{"r":"Mu","p":["*%_"]}},{"s":{"p":["*%_"],"r":"Mu"},"n":"succ","k":"m","m":0},{"n":"atan","s":{"p":["*%_"],"r":"Mu"},"k":"m","m":0},{"k":"m","m":0,"n":"Int","s":{"p":["*%_"],"r":"Mu"}},{"n":"cosech","s":{"p":["*%_"],"r":"Mu"},"m":0,"k":"m"},{"k":"m","m":0,"n":"cis","s":{"r":"Mu","p":["*%_"]}},{"m":0,"k":"m","s":{"r":"Mu","p":["*%_"]},"n":"reals"},{"n":"Num","s":{"r":"Mu","p":["*%_"]},"k":"m","m":0},{"n":"conj","s":{"p":["*%_"],"r":"Mu"},"m":0,"k":"m"},{"s":{"p":["*%_"],"r":"Mu"},"n":"cosec","m":0,"k":"m"},{"m":1,"k":"m","s":{"p":["*%_"],"r":"Mu"},"n":"new"},{"n":"new","s":{"r":"Mu","p":["Real \\re","Real \\im","*%_"]},"m":1,"k":"m"},{"s":{"p":["*%_"],"r":"Mu"},"n":"cos","k":"m","m":0},{"k":"m","m":0,"s":{"r":"Mu","p":["*%_"]},"n":"isNaN"},{"n":"log10","s":{"p":["*%_"],"r":"Mu"},"m":0,"k":"m"},{"s":{"p":["\\topic","*%_"],"r":"Mu"},"n":"ACCEPTS","m":1,"k":"m"},{"n":"ACCEPTS","s":{"p":["Mu:U \\topic","*%_"],"r":"Mu"},"k":"m","m":1},{"n":"ACCEPTS","s":{"r":"Mu","p":["Mu:D \\a","*%_"]},"k":"m","m":1},{"n":"ACCEPTS","s":{"r":"Bool","p":["Mu:U $","*%_"]},"k":"m","m":1},{"s":{"r":"Bool:D","p":["\\topic","*%_"]},"n":"ACCEPTS","m":1,"k":"m"},{"s":{"r":"Mu","p":["Any:D \\a","*%_"]},"n":"ACCEPTS","k":"m","m":1},{"s":{"p":["*%_"],"r":"Mu"},"n":"sin","m":0,"k":"m"},{"k":"m","m":0,"n":"atanh","s":{"r":"Mu","p":["*%_"]}},{"s":{"r":"Mu","p":["*%_"]},"n":"cotan","k":"m","m":0},{"m":0,"k":"m","s":{"p":["*%_"],"r":"Mu"},"n":"polar"},{"n":"asin","s":{"r":"Mu","p":["*%_"]},"k":"m","m":0},{"n":"BUILDALL","s":{"p":["@auto","%init","*%_"],"r":"Mu"},"m":0,"k":"s"},{"n":"indent","s":{"p":["$steps where { ... }","*%_"],"r":"Mu"},"k":"m","m":1},{"n":"indent","s":{"p":["$steps where { ... }","*%_"],"r":"Mu"},"k":"m","m":1},{"s":{"p":["$steps where { ... }","*%_"],"r":"Mu"},"n":"indent","m":1,"k":"m"},{"n":"indent","s":{"r":"Mu","p":["Whatever $steps","*%_"]},"m":1,"k":"m"},{"n":"wordcase","s":{"r":"Str:D","p":[":&filter = { ... }","Mu :$where = Bool::True","*%_"]},"m":0,"k":"m"},{"n":"match","s":{"p":["Cool:D $pattern","|c is raw"],"r":"Mu"},"m":1,"k":"m"},{"n":"match","s":{"r":"Mu","p":["Regex:D $pattern",":continue(:$c)!","*%_"]},"m":1,"k":"m"},{"s":{"p":["Regex:D $pattern",":pos(:$p)!","*%_"],"r":"Mu"},"n":"match","m":1,"k":"m"},{"n":"match","s":{"r":"Mu","p":["Regex:D $pattern",":global(:$g)!","*%_"]},"m":1,"k":"m"},{"m":1,"k":"m","s":{"p":["Regex:D $pattern",":overlap(:$ov)!","*%_"],"r":"Mu"},"n":"match"},{"n":"match","s":{"p":["Regex:D $pattern",":exhaustive(:$ex)!","*%_"],"r":"Mu"},"k":"m","m":1},{"s":{"p":["Regex:D $pattern",":$x!","*%_"],"r":"Mu"},"n":"match","k":"m","m":1},{"k":"m","m":1,"s":{"p":["Regex:D $pattern",":$st!","*%_"],"r":"Mu"},"n":"match"},{"n":"match","s":{"r":"Mu","p":["Regex:D $pattern",":$nd!","*%_"]},"k":"m","m":1},{"k":"m","m":1,"n":"match","s":{"p":["Regex:D $pattern",":$rd!","*%_"],"r":"Mu"}},{"n":"match","s":{"p":["Regex:D $pattern",":$th!","*%_"],"r":"Mu"},"k":"m","m":1},{"n":"match","s":{"r":"Mu","p":["Regex:D $pattern",":$nth!","*%_"]},"k":"m","m":1},{"k":"m","m":1,"s":{"p":["Regex:D $pattern",":$as!","*%_"],"r":"Mu"},"n":"match"},{"s":{"r":"Mu","p":["Regex:D $pattern","*%_"]},"n":"match","m":1,"k":"m"},{"k":"m","m":1,"n":"Bool","s":{"r":"Bool","p":["*%_"]}},{"k":"m","m":1,"s":{"r":"Mu","p":["*%_"]},"n":"Bool"},{"s":{"p":["*%_"],"r":"Bool:D"},"n":"Bool","m":1,"k":"m"},{"m":1,"k":"m","s":{"r":"Mu","p":["*%_"]},"n":"gist"},{"m":1,"k":"m","n":"gist","s":{"p":["*%_"],"r":"Mu"}},{"m":1,"k":"m","s":{"p":["*%_"],"r":"Str:D"},"n":"gist"},{"n":"univals","s":{"r":"Mu","p":["*%_"]},"m":0,"k":"m"},{"k":"m","m":1,"s":{"p":[":$count!","*%_"],"r":"Int:D"},"n":"lines"},{"n":"lines","s":{"p":["$limit","*%_"],"r":"Seq:D"},"k":"m","m":1},{"k":"m","m":1,"n":"lines","s":{"r":"Seq:D","p":["*%_"]}},{"n":"tclc","s":{"p":["*%_"],"r":"Str:D"},"m":1,"k":"m"},{"n":"tclc","s":{"r":"Str:D","p":["*%_"]},"k":"m","m":1},{"k":"m","m":1,"n":"subst-mutate","s":{"r":"Mu","p":["Any:D $matcher","$replacement",":ii(:$samecase)",":ss(:$samespace)",":mm(:$samemark)","*%options"]}},{"n":"lc","s":{"r":"Str:D","p":["*%_"]},"m":1,"k":"m"},{"m":1,"k":"m","n":"lc","s":{"p":["*%_"],"r":"Str:D"}},{"n":"WORDS_AUTODEREF","s":{"r":"Mu","p":["*%_"]},"k":"m","m":0},{"k":"m","m":1,"s":{"r":"Str:D","p":["*%_"]},"n":"uc"},{"k":"m","m":1,"n":"uc","s":{"p":["*%_"],"r":"Str:D"}},{"m":1,"k":"m","s":{"r":"Mu","p":["*%_"]},"n":"DUMP"},{"m":1,"k":"m","n":"DUMP","s":{"r":"Mu","p":[":$indent-step = 4",":%ctx","*%_"]}},{"k":"m","m":1,"n":"DUMP","s":{"r":"Str:D","p":["*%_"]}},{"k":"m","m":0,"n":"trim","s":{"r":"Str:D","p":["*%_"]}},{"m":1,"k":"m","s":{"r":"Mu","p":["*%_"]},"n":"WHY"},{"n":"WHY","s":{"r":"Int","p":["*%_"]},"k":"m","m":1},{"k":"m","m":1,"s":{"r":"Int:D","p":["*%_"]},"n":"chars"},{"n":"chars","s":{"p":["*%_"],"r":"Int:D"},"k":"m","m":1},{"m":0,"k":"m","n":"parse-names","s":{"r":"Str:D","p":["*%_"]}},{"n":"WHICH","s":{"r":"ValueObjAt:D","p":["*%_"]},"k":"m","m":1},{"s":{"p":["*%_"],"r":"ObjAt:D"},"n":"WHICH","k":"m","m":1},{"k":"m","m":1,"n":"WHICH","s":{"r":"ValueObjAt:D","p":["*%_"]}},{"m":1,"k":"m","n":"flip","s":{"r":"Str:D","p":["*%_"]}},{"m":1,"k":"m","s":{"p":["*%_"],"r":"Str:D"},"n":"flip"},{"s":{"p":["*%_"],"r":"Mu"},"n":"ords","k":"m","m":1},{"m":1,"k":"m","n":"ords","s":{"p":["*%_"],"r":"Mu"}},{"k":"m","m":1,"n":"index","s":{"r":"Int:D","p":["Cool:D $needle","*%_"]}},{"m":1,"k":"m","n":"index","s":{"r":"Int:D","p":["Str:D $needle","*%_"]}},{"k":"m","m":1,"s":{"p":["Cool:D $needle","Cool:D $pos","*%_"],"r":"Int:D"},"n":"index"},{"k":"m","m":1,"s":{"p":["Str:D $needle","Int:D $pos","*%_"],"r":"Int:D"},"n":"index"},{"k":"m","m":1,"n":"words","s":{"r":"Seq:D","p":["$limit","*%_"]}},{"n":"words","s":{"p":["*%_"],"r":"Seq:D"},"m":1,"k":"m"},{"n":"uniparse","s":{"p":["*%_"],"r":"Str:D"},"m":0,"k":"m"},{"k":"m","m":0,"s":{"p":["*%_"],"r":"NFKC:D"},"n":"NFKC"},{"m":0,"k":"m","n":"trim-leading","s":{"p":["*%_"],"r":"Str:D"}},{"k":"m","m":1,"n":"trans","s":{"r":"Str:D","p":["Pair:D \\what","*%n"]}},{"m":1,"k":"m","n":"trans","s":{"p":["*@changes",":c(:$complement)",":s(:$squash)",":d(:$delete)","*%_"],"r":"Str:D"}},{"k":"m","m":0,"s":{"r":"Str:D","p":["*%_"]},"n":"pred"},{"m":1,"k":"m","s":{"p":["Regex:D $pat","$limit is copy = Inf",":$v is copy",":$k",":$kv",":$p",":$skip-empty","*%_"],"r":"Seq:D"},"n":"split"},{"k":"m","m":1,"n":"split","s":{"p":["Str(Cool) $match",":$v is copy",":$k",":$kv",":$p",":$skip-empty","*%_"],"r":"Seq:D"}},{"m":1,"k":"m","n":"split","s":{"r":"Mu","p":["Str(Cool) $match","$limit is copy = Inf",":$v is copy",":$k",":$kv",":$p",":$skip-empty","*%_"]}},{"k":"m","m":1,"s":{"p":["@needles","$parts is copy = Inf",":$v is copy",":$k",":$kv",":$p",":$skip-empty","*%_"],"r":"Seq:D"},"n":"split"},{"k":"m","m":0,"s":{"p":["*%_"],"r":"Str:D"},"n":"trim-trailing"},{"k":"m","m":1,"n":"Str","s":{"p":["*%_"],"r":"Mu"}},{"m":1,"k":"m","s":{"p":["*%_"],"r":"Mu"},"n":"Str"},{"k":"m","m":1,"s":{"p":["*%_"],"r":"Str:D"},"n":"Str"},{"m":0,"k":"m","s":{"r":"Mu","p":["*%_"]},"n":"Capture"},{"n":"Int","s":{"r":"Int:D","p":["*%_"]},"k":"m","m":0},{"k":"m","m":0,"n":"word-by-word","s":{"r":"Mu","p":["Str:D $pattern","&filter?","Bool :$samespace","*%_"]}},{"m":1,"k":"m","n":"Stringy","s":{"r":"Mu","p":["*%_"]}},{"k":"m","m":1,"n":"Stringy","s":{"p":["*%_"],"r":"Mu"}},{"n":"Stringy","s":{"p":["*%_"],"r":"Str:D"},"k":"m","m":1},{"n":"chop","s":{"p":["*%_"],"r":"Mu"},"m":1,"k":"m"},{"s":{"p":["$n","*%_"],"r":"Mu"},"n":"chop","k":"m","m":1},{"s":{"r":"Str:D","p":["*%_"]},"n":"chop","m":1,"k":"m"},{"k":"m","m":1,"n":"chop","s":{"p":["$chopping","*%_"],"r":"Str:D"}},{"n":"ends-with","s":{"p":["Cool:D $suffix","*%_"],"r":"Bool:D"},"m":1,"k":"m"},{"m":1,"k":"m","s":{"r":"Bool:D","p":["Str:D $suffix","*%_"]},"n":"ends-with"},{"k":"m","m":0,"s":{"r":"Str:D","p":["*%_"]},"n":"succ"},{"m":0,"k":"m","s":{"r":"Str:D","p":["Str:D $pattern","*%_"]},"n":"samemark"},{"k":"m","m":0,"n":"NFC","s":{"r":"NFC:D","p":["*%_"]}},{"k":"m","m":1,"s":{"r":"Seq:D","p":["*%_"]},"n":"comb"},{"m":1,"k":"m","s":{"r":"Seq:D","p":["Int:D $size is copy","$limit = *","*%_"]},"n":"comb"},{"s":{"r":"Seq:D","p":["Str $pat","*%_"]},"n":"comb","k":"m","m":1},{"k":"m","m":1,"s":{"p":["Str $pat","$limit","*%_"],"r":"Seq:D"},"n":"comb"},{"m":1,"k":"m","n":"comb","s":{"p":["Regex:D $pattern",":$match","*%_"],"r":"Seq:D"}},{"n":"comb","s":{"r":"Seq:D","p":["Regex:D $pattern","$limit",":$match","*%_"]},"m":1,"k":"m"},{"s":{"r":"Mu","p":["Cool:D $needle","*%pars"]},"n":"indices","m":1,"k":"m"},{"k":"m","m":1,"s":{"p":["Str:D $needle",":$overlap","*%_"],"r":"Mu"},"n":"indices"},{"m":1,"k":"m","s":{"r":"Mu","p":["Cool:D $needle","Cool:D $start","*%pars"]},"n":"indices"},{"n":"indices","s":{"r":"Mu","p":["Str:D $needle","Int:D $start",":$overlap","*%_"]},"k":"m","m":1},{"m":1,"k":"m","n":"starts-with","s":{"p":["Cool:D $needle","*%_"],"r":"Bool:D"}},{"k":"m","m":1,"s":{"p":["Str:D $needle","*%_"],"r":"Bool:D"},"n":"starts-with"},{"m":0,"k":"m","s":{"r":"NFKD:D","p":["*%_"]},"n":"NFKD"},{"n":"NFD","s":{"p":["*%_"],"r":"NFD:D"},"m":0,"k":"m"},{"m":1,"k":"m","s":{"r":"Int:D","p":["*%_"]},"n":"ord"},{"k":"m","m":1,"s":{"p":["*%_"],"r":"Nil"},"n":"ord"},{"n":"fc","s":{"r":"Str:D","p":["*%_"]},"m":1,"k":"m"},{"n":"fc","s":{"r":"Str:D","p":["*%_"]},"k":"m","m":1},{"s":{"r":"Mu","p":["*%_"]},"n":"perl","k":"m","m":1},{"s":{"r":"Mu","p":["*%_"]},"n":"perl","m":1,"k":"m"},{"m":1,"k":"m","s":{"p":["*%_"],"r":"Str:D"},"n":"perl"},{"s":{"p":["*%_"],"r":"Mu"},"n":"Numeric","k":"m","m":1},{"s":{"r":"Numeric:D","p":["*%_"]},"n":"Numeric","m":1,"k":"m"},{"k":"m","m":1,"n":"codes","s":{"r":"Int:D","p":["*%_"]}},{"m":1,"k":"m","s":{"r":"Int:D","p":["*%_"]},"n":"codes"},{"n":"parse-base","s":{"r":"Numeric:D","p":["Int:D $radix","*%_"]},"k":"m","m":0},{"n":"substr","s":{"r":"Mu","p":["\\from","*%_"]},"m":1,"k":"m"},{"s":{"r":"Mu","p":["\\from","\\chars","*%_"]},"n":"substr","m":1,"k":"m"},{"k":"m","m":1,"n":"substr","s":{"p":["Int:D \\start","*%_"],"r":"Str:D"}},{"m":1,"k":"m","s":{"p":["Int:D \\start","Int:D \\want","*%_"],"r":"Str:D"},"n":"substr"},{"m":1,"k":"m","s":{"r":"Str:D","p":["Int:D \\start","Callable:D \\want","*%_"]},"n":"substr"},{"n":"substr","s":{"p":["Callable:D \\start","*%_"],"r":"Str:D"},"k":"m","m":1},{"m":1,"k":"m","s":{"p":["Callable:D \\start","Int:D \\want","*%_"],"r":"Str:D"},"n":"substr"},{"m":1,"k":"m","s":{"p":["Callable:D \\start","Callable:D \\want","*%_"],"r":"Str:D"},"n":"substr"},{"n":"substr","s":{"p":["Range:D \\start","*%_"],"r":"Str:D"},"k":"m","m":1},{"s":{"r":"Mu","p":["Regex:D $","$","*%_"]},"n":"substr","m":1,"k":"m"},{"s":{"r":"Str:D","p":["\\start","*%_"]},"n":"substr","m":1,"k":"m"},{"n":"substr","s":{"p":["\\from","\\want","*%_"],"r":"Str:D"},"k":"m","m":1},{"s":{"p":["*%_"],"r":"Mu"},"n":"unival","m":0,"k":"m"},{"k":"m","m":1,"s":{"r":"Blob:D","p":["Str:D $encoding = \"utf8\"",":$replacement",":$translate-nl = Bool::False",":$strict","*%_"]},"n":"encode"},{"n":"samecase","s":{"p":["Str:D $pattern","*%_"],"r":"Str:D"},"m":0,"k":"m"},{"k":"m","m":1,"s":{"p":["Cool:D $needle","*%_"],"r":"Bool:D"},"n":"substr-eq"},{"s":{"r":"Bool:D","p":["Str:D $needle","*%_"]},"n":"substr-eq","k":"m","m":1},{"s":{"r":"Bool:D","p":["Cool:D $needle","Int:D $pos","*%_"]},"n":"substr-eq","m":1,"k":"m"},{"k":"m","m":1,"s":{"p":["Str:D $needle","Int:D $pos","*%_"],"r":"Bool:D"},"n":"substr-eq"},{"k":"m","m":1,"s":{"r":"Mu","p":["*%_"]},"n":"substr-rw"},{"m":1,"k":"m","n":"substr-rw","s":{"p":["\\from","*%_"],"r":"Mu"}},{"m":1,"k":"m","n":"substr-rw","s":{"p":["\\from","\\chars","*%_"],"r":"Mu"}},{"s":{"p":["\\start","$want = Inf","*%_"],"r":"Mu"},"n":"substr-rw","m":1,"k":"m"},{"m":1,"k":"m","n":"ACCEPTS","s":{"r":"Mu","p":["\\topic","*%_"]}},{"s":{"p":["Mu:U \\topic","*%_"],"r":"Mu"},"n":"ACCEPTS","k":"m","m":1},{"k":"m","m":1,"s":{"p":["Mu:D \\a","*%_"],"r":"Mu"},"n":"ACCEPTS"},{"s":{"p":["Mu:U $","*%_"],"r":"Bool"},"n":"ACCEPTS","k":"m","m":1},{"k":"m","m":1,"n":"ACCEPTS","s":{"p":["\\topic","*%_"],"r":"Bool:D"}},{"s":{"r":"Bool:D","p":["Str:D \\other","*%_"]},"n":"ACCEPTS","m":1,"k":"m"},{"m":1,"k":"m","n":"ACCEPTS","s":{"r":"Bool:D","p":["Any:D \\other","*%_"]}},{"k":"m","m":1,"n":"contains","s":{"r":"Bool:D","p":["Cool:D $needle","*%_"]}},{"k":"m","m":1,"n":"contains","s":{"r":"Bool:D","p":["Str:D $needle","*%_"]}},{"k":"m","m":1,"n":"contains","s":{"r":"Bool:D","p":["Cool:D $needle","Int(Cool:D) $pos","*%_"]}},{"n":"contains","s":{"p":["Str:D $needle","Int:D $pos","*%_"],"r":"Bool:D"},"k":"m","m":1},{"m":1,"k":"m","s":{"r":"Int:D","p":["Cool:D $needle","*%_"]},"n":"rindex"},{"n":"rindex","s":{"p":["Str:D $needle","*%_"],"r":"Int:D"},"m":1,"k":"m"},{"m":1,"k":"m","n":"rindex","s":{"p":["Cool:D $needle","Cool:D $pos","*%_"],"r":"Int:D"}},{"n":"rindex","s":{"p":["Str:D $needle","Int:D $pos","*%_"],"r":"Int:D"},"k":"m","m":1},{"n":"tc","s":{"r":"Str:D","p":["*%_"]},"m":1,"k":"m"},{"s":{"p":["*%_"],"r":"Str:D"},"n":"tc","m":1,"k":"m"},{"k":"m","m":0,"n":"Num","s":{"r":"Num:D","p":["*%_"]}},{"k":"m","m":0,"s":{"r":"Str:D","p":["*%_"]},"n":"chomp"},{"n":"samespace","s":{"r":"Mu","p":["Str:D $pattern","*%_"]},"m":0,"k":"m"},{"n":"subst","s":{"p":["Str:D $original","Str:D $final","*%options"],"r":"Mu"},"k":"m","m":1},{"s":{"p":["$matcher","$replacement","*%options"],"r":"Mu"},"n":"subst","m":1,"k":"m"},{"k":"s","m":0,"n":"BUILDALL","s":{"r":"Mu","p":["@auto","%init","*%_"]}},{"k":"s","m":0,"n":"BUILD","s":{"r":"Nil","p":[":$value = \"\"","*%_"]}}],"k":"c","d":"TITLE\nclass ComplexStr\n\nSUBTITLE\nDual value complex number and string\n\n    class ComplexStr is Complex is Str {}\n\nThe dual value types (often referred to as allomorphs) allow for the\nrepresentation of a value as both a string and a numeric type. Typically\nthey will be created for you when the context is \"stringy\" but they can be\ndetermined to be numbers, such as in some quoting constructs:\n\n    my $f = <42+0i>; say $f.^name; # OUTPUT: «ComplexStr␤»\n\nAs a subclass of both Complex and Str, a ComplexStr will be accepted where\neither is expected. However, ComplexStr does not share object identity with\nComplex- or Str-only variants:\n\n    my $complex-str = < 42+0i >;\n    my Complex $complex = $complex-str; # OK!\n    my Str     $str     = $complex-str; # OK!\n    say 42+0i ∈ <42+0i  55  1>; # False; ∈ operator cares about object identity\n\n","n":"ComplexStr","t":"ComplexStr"},{"t":"Sub","n":"&splice","k":"v"},{"s":{"p":["@arr","|c is raw"],"r":"Mu"},"n":"splice","k":"s","m":1},{"n":"&nextwith","t":"Sub","k":"v"},{"k":"s","m":0,"s":{"p":["|c is raw"],"r":"Mu"},"n":"nextwith"},{"a":[{"k":"v","n":"$.collation-level","t":"int"},{"t":"Mu","n":"$!Country","k":"v"}],"b":"A","k":"c","m":[{"k":"m","m":0,"s":{"p":["*%_"],"r":"Mu"},"n":"gist"},{"k":"m","m":0,"s":{"r":"Mu","p":["Int :$primary = 1","Int :$secondary = 1","Int :$tertiary = 1","Int :$quaternary = 1","*%_"]},"n":"set"},{"s":{"p":["$more","$less","*%_"],"r":"Mu"},"n":"check","m":0,"k":"m"},{"n":"primary","s":{"r":"Mu","p":["*%_"]},"k":"m","m":0},{"k":"m","m":0,"s":{"p":["*%_"],"r":"Mu"},"n":"secondary"},{"k":"m","m":0,"s":{"r":"Mu","p":["*%_"]},"n":"tertiary"},{"n":"quaternary","s":{"p":["*%_"],"r":"Mu"},"m":0,"k":"m"},{"k":"m","m":0,"n":"collation-level","s":{"p":["*%_"],"r":"Mu"}},{"m":0,"k":"s","s":{"p":["@auto","%init","*%_"],"r":"Mu"},"n":"BUILDALL"}],"d":"TITLE\nclass Collation\n\nSUBTITLE\nEncapsulates how strings are sorted\n\n    class Collation { }\n\n\nCollation is the class that allows proper sorting, taking into account all\nUnicode characteristics. It's the class the object $*COLLATION is\ninstantiated to, and thus includes collation levels, that is, what kind of\nfeatures should be looked up when comparing two strings and in which\norder.\n\n","n":"Collation","t":"Collation"},{"b":"C","a":[{"t":"Rakudo::Internals::IterationSet","n":"$!elems","k":"v"}],"m":[{"s":{"r":"Mu","p":["*%_"]},"n":"of","m":0,"k":"m"},{"m":0,"k":"m","s":{"r":"Baggy:D","p":["*@pairs","*%_"]},"n":"new-from-pairs"},{"k":"m","m":0,"n":"default","s":{"p":["*%_"],"r":"Int"}},{"k":"m","m":0,"s":{"p":["*%_"],"r":"Mu"},"n":"RAW-HASH"},{"n":"!create-from-iterator","s":{"p":["\\type","\\iterator","*%_"],"r":"Baggy:D"},"m":0,"k":"m"},{"k":"m","m":0,"s":{"p":["\\type","*%_"],"r":"Mu"},"n":"!HASHIFY"}],"k":"ro","d":"TITLE\nrole Baggy\n\nSUBTITLE\nCollection of distinct weighted objects\n\n    role Baggy does QuantHash { }\n\nA role for collections of weighted objects. See Bag, BagHash, and Mixy.\n\n","n":"Baggy","t":"Baggy"},{"k":"v","t":"Sub+{Precedence}","n":"&postfix:<-->"},{"m":1,"k":"s","n":"postfix:<-->","s":{"r":"Mu","p":["Mu:D $a is rw"]}},{"k":"s","m":1,"s":{"p":["Mu:U $a is rw"],"r":"Mu"},"n":"postfix:<-->"},{"n":"postfix:<-->","s":{"p":["Int:D $a is rw"],"r":"Int:D"},"m":1,"k":"s"},{"s":{"r":"int","p":["int $a is rw"]},"n":"postfix:<-->","k":"s","m":1},{"s":{"p":["Bool:U $a is rw"],"r":"Mu"},"n":"postfix:<-->","m":1,"k":"s"},{"s":{"p":["Bool:D $a is rw"],"r":"Mu"},"n":"postfix:<-->","k":"s","m":1},{"s":{"p":["Num:D $a is rw"],"r":"Mu"},"n":"postfix:<-->","k":"s","m":1},{"m":1,"k":"s","s":{"r":"Num","p":["Num:U $a is rw"]},"n":"postfix:<-->"},{"s":{"p":["num $a is rw"],"r":"num"},"n":"postfix:<-->","m":1,"k":"s"},{"k":"v","t":"Sub","n":"&subbuf-rw"},{"s":{"r":"Mu","p":["Buf:D \\b"]},"n":"subbuf-rw","m":1,"k":"s"},{"k":"s","m":1,"n":"subbuf-rw","s":{"r":"Mu","p":["Buf:D \\b","$from"]}},{"n":"subbuf-rw","s":{"p":["Buf:D \\b","$from","$elems"],"r":"Mu"},"m":1,"k":"s"},{"k":"v","t":"Sub+{is-pure}","n":"&infix:«<=>»"},{"s":{"r":"Mu","p":["\\a","\\b"]},"n":"infix:«<=>»","m":1,"k":"s"},{"n":"infix:«<=>»","s":{"p":["Real \\a","Real \\b"],"r":"Mu"},"k":"s","m":1},{"m":1,"k":"s","n":"infix:«<=>»","s":{"r":"Mu","p":["Int:D \\a","Int:D \\b"]}},{"n":"infix:«<=>»","s":{"r":"Mu","p":["int $a","int $b"]},"m":1,"k":"s"},{"s":{"p":["Num:D \\a","Num:D \\b"],"r":"Mu"},"n":"infix:«<=>»","k":"s","m":1},{"k":"s","m":1,"s":{"p":["num $a","num $b"],"r":"Mu"},"n":"infix:«<=>»"},{"n":"infix:«<=>»","s":{"r":"Order:D","p":["Rational:D \\a","Rational:D \\b"]},"m":1,"k":"s"},{"s":{"p":["Rational:D \\a","Int:D \\b"],"r":"Order:D"},"n":"infix:«<=>»","m":1,"k":"s"},{"n":"infix:«<=>»","s":{"r":"Order:D","p":["Int:D \\a","Rational:D \\b"]},"k":"s","m":1},{"n":"infix:«<=>»","s":{"r":"Order:D","p":["Complex:D \\a","Complex:D \\b"]},"m":1,"k":"s"},{"s":{"r":"Order:D","p":["Num(Real) \\a","Complex:D \\b"]},"n":"infix:«<=>»","k":"s","m":1},{"m":1,"k":"s","s":{"r":"Order:D","p":["Complex:D \\a","Num(Real) \\b"]},"n":"infix:«<=>»"},{"k":"s","m":1,"s":{"p":["Instant:D $a","Instant:D $b"],"r":"Order:D"},"n":"infix:«<=>»"},{"n":"infix:«<=>»","s":{"p":["DateTime:D \\a","DateTime:D \\b"],"r":"Order:D"},"m":1,"k":"s"},{"n":"infix:«<=>»","s":{"r":"Order:D","p":["Date:D $a","Date:D $b"]},"k":"s","m":1},{"n":"infix:«<=>»","s":{"r":"Mu","p":["Version:D \\a","Version:D \\b"]},"m":1,"k":"s"},{"k":"v","n":"&mix","t":"Sub+{is-pure}"},{"m":1,"k":"s","s":{"p":[],"r":"Mu"},"n":"mix"},{"k":"s","m":1,"n":"mix","s":{"p":["*@a"],"r":"Mix:D"}},{"m":[{"k":"m","m":0,"n":"new","s":{"r":"Mu","p":["NuT:D \\nu = 0","DeT:D \\de = 1","*%_"]}},{"m":0,"k":"m","s":{"r":"Mu","p":["*%_"]},"n":"nude"},{"m":0,"k":"m","s":{"r":"Num:D","p":["*%_"]},"n":"Num"},{"m":0,"k":"m","s":{"r":"Int:D","p":["*%_"]},"n":"floor"},{"n":"ceiling","s":{"p":["*%_"],"r":"Int:D"},"k":"m","m":0},{"s":{"p":["*%_"],"r":"Int:D"},"n":"Int","m":0,"k":"m"},{"s":{"r":"Mu","p":["*%_"]},"n":"Bridge","k":"m","m":0},{"m":0,"k":"m","s":{"r":"Mu","p":["*%_"]},"n":"Range"},{"s":{"r":"Bool:D","p":["*%_"]},"n":"isNaN","m":0,"k":"m"},{"m":0,"k":"m","s":{"p":["*%_"],"r":"Bool:D"},"n":"is-prime"},{"s":{"r":"Mu","p":["$base","$digits? is copy","*%_"]},"n":"base","k":"m","m":0},{"n":"base-repeating","s":{"r":"Mu","p":["$base = 10","*%_"]},"k":"m","m":0},{"n":"succ","s":{"r":"Mu","p":["*%_"]},"k":"m","m":0},{"n":"pred","s":{"r":"Mu","p":["*%_"]},"m":0,"k":"m"},{"s":{"p":["*%_"],"r":"Mu"},"n":"norm","k":"m","m":0},{"n":"narrow","s":{"p":["*%_"],"r":"Mu"},"k":"m","m":0},{"s":{"p":["\\whole","\\fract","*%_"],"r":"Mu"},"n":"!SLOW-STR","m":0,"k":"m"},{"n":"!STRINGIFY","s":{"p":["\\whole","\\fract","Int:D $precision","*%_"],"r":"Mu"},"k":"m","m":0}],"k":"ro","b":"C","a":[{"k":"v","t":"NuT","n":"$.numerator"},{"k":"v","t":"DeT","n":"$.denominator"}],"d":"TITLE\nrole Rational\n\nSUBTITLE\nNumber stored as numerator and denominator\n\n    role Rational[::NuT, ::DeT] does Real { ... }\n\nRational is the common role for numbers that are stored as pairs of\nnumerator and denominator. It is parameterized by the types of the\nnumerator (NuT) and denominator (DeT). By default, these are Int, but other\ntypes of Rational are possible by using a different parameterization. In\naddition, Rational objects are immutable throughout their life.\n\n    class Positive does Rational[UInt] {};\n    my Positive $one-third = Positive.new(1,3);\n    say $one-third;                         # OUTPUT: «0.333333␤»\n    my Positive $fail =Positive.new(-2,3);  # OUTPUT: «Type check failed in binding to parameter 'nu'; expected UInt but got Int (-2)␤»\n\nPlease note that, since DeT is by default equal to NuT, in this case both\nare instantiated to UInt. Built into Raku are Rat and FatRat, which both do\nthe Rational role.\n\n","n":"Rational","t":"Rational"},{"t":"Distro","n":"Distro","d":"TITLE\nclass Distro\n\nSUBTITLE\nDistribution related information\n\n    class Distro does Systemic { }\n\nBuilt-in class for providing distribution related information. Usually\naccessed through the $*DISTRO dynamic variable.\n\n","b":"A","a":[{"k":"v","n":"$.release","t":"Str"},{"n":"$.is-win","t":"Bool","k":"v"},{"k":"v","t":"Str","n":"$.path-sep"},{"k":"v","n":"$.name","t":"Str"},{"k":"v","n":"$.auth","t":"Str"},{"n":"$.version","t":"Version","k":"v"},{"k":"v","t":"Blob","n":"$.signature"},{"k":"v","n":"$.desc","t":"Str"}],"k":"c","m":[{"m":0,"k":"s","n":"BUILD","s":{"p":[":$name",":$version",":release($!release)",":auth($!auth)",":path-sep($!path-sep)",":signature($!signature) = Blob",":desc($!desc) = Str","*%_"],"r":"Nil"}},{"m":0,"k":"m","n":"cur-sep","s":{"r":"Mu","p":["*%_"]}},{"m":0,"k":"m","n":"Str","s":{"r":"Mu","p":["*%_"]}},{"n":"gist","s":{"r":"Mu","p":["*%_"]},"k":"m","m":1},{"n":"gist","s":{"p":["*%_"],"r":"Mu"},"m":1,"k":"m"},{"s":{"r":"Mu","p":["*%_"]},"n":"gist","m":1,"k":"m"},{"k":"m","m":0,"s":{"r":"Mu","p":["*%_"]},"n":"release"},{"m":0,"k":"m","n":"is-win","s":{"p":["*%_"],"r":"Mu"}},{"m":0,"k":"m","n":"path-sep","s":{"p":["*%_"],"r":"Mu"}},{"s":{"r":"Mu","p":["*%_"]},"n":"name","k":"m","m":0},{"k":"m","m":0,"n":"auth","s":{"r":"Mu","p":["*%_"]}},{"m":0,"k":"m","s":{"r":"Mu","p":["*%_"]},"n":"version"},{"n":"signature","s":{"r":"Mu","p":["*%_"]},"k":"m","m":0},{"s":{"p":["*%_"],"r":"Mu"},"n":"desc","k":"m","m":0},{"s":{"r":"Mu","p":["@auto","%init","*%_"]},"n":"BUILDALL","m":0,"k":"s"}]},{"t":"Sub","n":"&flip","k":"v"},{"s":{"r":"Str:D","p":["Cool $s"]},"n":"flip","k":"s","m":1},{"b":"A","m":[{"n":"new","s":{"p":["|"],"r":"Mu"},"m":0,"k":"m"},{"m":0,"k":"m","s":{"r":"Mu","p":["*%_"]},"n":"name"},{"s":{"p":["*%_"],"r":"Mu"},"n":"of","k":"m","m":0},{"k":"m","m":0,"n":"default","s":{"r":"Mu","p":["*%_"]}},{"m":0,"k":"m","n":"dynamic","s":{"p":["*%_"],"r":"Mu"}},{"k":"m","m":1,"n":"WHICH","s":{"p":["*%_"],"r":"ValueObjAt:D"}},{"s":{"r":"ObjAt:D","p":["*%_"]},"n":"WHICH","k":"m","m":1},{"n":"WHICH","s":{"p":["*%_"],"r":"ValueObjAt:D"},"k":"m","m":1},{"n":"BUILDALL","s":{"p":["@auto","%init","*%_"],"r":"Mu"},"k":"s","m":0}],"k":"c","d":"TITLE\nclass Scalar\n\nSUBTITLE\nA mostly transparent container used for indirections\n\n    class Scalar {}\n\nA Scalar is an internal indirection which is for most purposes invisible\nduring ordinary use of Raku. It is the default container type associated\nwith the $ sigil. A literal Scalar may be placed around a literal value by\nenclosing the value in $(…). This notation will appear in the output of a\n.perl method in certain places where it is important to note the presence\nof Scalars.\n\nWhen a value is assigned to a $-sigiled variable, the variable will\nactually bind to a Scalar, which in turn will bind to the value. When a\nScalar is assigned to a $-sigiled variable, the value bound to by that\nScalar will be bound to the Scalar which that variable was bound to (a new\none will be created if necessary.)\n\nIn addition, Scalars delegate all method calls to the value which they\ncontain. As such, Scalars are for the most part invisible. There is,\nhowever, one important place where Scalars have a visible impact: a Scalar\nwill shield its content from flattening by most Raku core list operations.\n\nA $-sigiled variable may be bound directly to a value with no intermediate\nScalar using the binding operator :=. You can tell if this has been done by\nexamining the output of the introspective pseudo-method .VAR:\n\n    my $a = 1;\n    $a.^name.say;     # OUTPUT: «Int␤»\n    $a.VAR.^name.say; # OUTPUT: «Scalar␤»\n    my $b := 1;\n    $b.^name.say;     # OUTPUT: «Int␤»\n    $b.VAR.^name.say; # OUTPUT: «Int␤»\n\nThis same thing happens when values are assigned to an element of an Array,\nhowever, Lists directly contain their values:\n\n    my @a = 1, 2, 3;\n    @a[0].^name.say;            # OUTPUT: «Int␤»\n    @a[0].VAR.^name.say;        # OUTPUT: «Scalar␤»\n    [1, 2, 3][0].^name.say;     # OUTPUT: «Int␤»\n    [1, 2, 3][0].VAR.^name.say; # OUTPUT: «Scalar␤»\n    (1, 2, 3)[0].^name.say;     # OUTPUT: «Int␤»\n    (1, 2, 3)[0].VAR.^name.say; # OUTPUT: «Int␤»\n\nArray elements may be bound directly to values using := as well; however,\nthis is discouraged as it may lead to confusion. Doing so will break exact\nround-tripping of .perl output – since Arrays are assumed to place Scalars\naround each element, Scalars are not denoted with $ in the output of\nArray.perl.\n\n    [1, $(2, 3)].perl.say;     # OUTPUT: «[1, (2, 3)]␤»\n    (1, $(2, 3)).perl.say;     # OUTPUT: «(1, $(2, 3))␤»\n\nBinding a Scalar to a $-sigiled variable replaces the existing Scalar in\nthat variable, if any, with the given Scalar. That means more than one\nvariable may refer to the same Scalar. Because the Scalar may be mutated,\nthis makes it possible to alter the value of both variables by altering\nonly one of them:\n\n    my $a = 1;\n    my $b := $a;\n    $b = 2;\n    $a.say;       # OUTPUT: «2␤»\n\n SSA-style constants bind directly to their value with no intervening\nScalar, even when assignment (=) is used. They may be forced to use a\nScalar by assigning a $-sigiled variable to them, at which point, they\nbehave entirely like $-sigiled variables.\n\n    my \\c = 1;\n    c.^name.say;             # OUTPUT: «Int␤»\n    c.VAR.^name.say;         # OUTPUT: «Int␤»\n    my $a = 1;\n    my \\d = $a;              # just \"my \\d = $ = 1\" works, too\n    d.^name.say;             # OUTPUT: «Int␤»\n    d.VAR.^name.say;         # OUTPUT: «Scalar␤»\n    d = 2;                   # ok\n    c = 2;                   # fails\n    CATCH { default { put .^name, ': ', .Str } };\n    # OUTPUT: «X::Assignment::RO: Cannot modify an immutable Int␤»\n\nAtomic operations on Scalar\n\nA Scalar can have its value changed using a hardware-supported atomic\ncompare and swap operation. This is useful when implementing lock free data\nstructures and algorithms. It may also be fetched and assigned to in an\n\"atomic\" fashion, which ensures appropriate memory barriering and prevents\nunwanted optimizations of memory accesses.\n\nA Scalar that will be used with an atomic operation should always be\nexplicitly initialized with a value before any atomic operations are\nperformed upon it. This is to avoid races with lazy allocation and\nauto-vivification. For example:\n\n    cas(@a[5], $expected, $value)\n\n\nWill work in principle since an Array consists of Scalar containers.\nHowever, the container is only bound into the array upon initial\nassignment. Therefore, there would be a race to do that binding. The Scalar\natomic operations will never check for or do any such auto-vivification, so\nas to make such bugs much more evident (rather than only observed under\nstress).\n\nIntrospection\n\n  method of\n\n    method of(Scalar:D: --> Mu)\n\nReturns the type constraint of the container.\n\nExample:\n\n    my Cool $x = 42;\n    say $x.VAR.of;                  # OUTPUT: «(Cool)»\n\n  method default\n\n    method default(Scalar:D: --> Str)\n\nReturns the default value associated with the container.\n\nExample:\n\n    my $x is default(666) = 42;\n    say $x.VAR.default;             # OUTPUT: «666»\n\n  method name\n\n    method name(Scalar:D: --> Str)\n\nReturns the name associated with the container.\n\nExample:\n\n    my $x = 42;\n    say $x.VAR.name;                # OUTPUT: «$x»\n\n  method dynamic\n\n    method dynamic(Scalar:D: --> Bool)\n\nReturns whether the variable is visible in dynamic variable lookups.\n\nExample:\n\n    my $*FOO = 42;\n    say $*FOO.VAR.dynamic;          # OUTPUT: «True»\n\nRoutines\n\n  sub atomic-assign\n\nDefined as:\n\n    multi sub atomic-assign($target is rw, $value)\n\nPerforms an atomic assignment of $value into the Scalar $target. The\natomic-assign routine ensures that any required barriers are performed such\nthat the changed value will be \"published\" to other threads.\n\n  sub atomic-fetch\n\n    multi sub atomic-fetch($target is rw)\n\nPerforms an atomic read of the value in the Scalar $target and returns the\nread value. Using this routine instead of simply using the variable ensures\nthat the latest update to the variable from other threads will be seen,\nboth by doing any required hardware barriers and also preventing the\ncompiler from lifting reads. For example:\n\n    my $started = False;\n    start { atomic-assign($started, True) }\n    until atomic-fetch($started) { }\n\nIs certain to terminate, while in:\n\n    my $started = False;\n    start { atomic-assign($started, True) }\n    until $started { }\n\nIt would be legal for a compiler to observe that $started is not updated in\nthe loop, and so lift the read out of the loop, thus causing the program to\nnever terminate.\n\n  sub cas\n\nDefined as:\n\n    multi sub cas($target is rw, $expected, $value)\n    multi sub cas($target is rw, &operation)\n\nPerforms an atomic compare and swap of the value in the Scalar $target. The\nfirst form has semantics like:\n\n    my $seen = $target;\n    if $seen<> =:= $expected<> {\n        $target = $value;\n    }\n    return $seen;\n\n\nExcept it is performed as a single hardware-supported atomic instruction,\nas if all memory access to $target were blocked while it took place.\nTherefore it is safe to attempt the operation from multiple threads without\nany other synchronization. Since it is a reference comparison, this\noperation is usually not sensible on value types.\n\nFor example:\n\n    constant NOT_STARTED = Any.new;\n    constant STARTED = Any.new;\n    my $master = NOT_STARTED;\n    await start {\n        if cas($master, NOT_STARTED, STARTED) === NOT_STARTED {\n            say \"Master!\"\n        }\n    } xx 4\n\nWill reliably only ever print Master! one time, as only one of the threads\nwill be successful in changing the Scalar from NOT_STARTED to STARTED.\n\nThe second form, taking a code object, will first do an atomic fetch of the\ncurrent value and invoke the code object with it. It will then try to do an\natomic compare and swap of the target, using the value passed to the code\nobject as $expected and the result of the code object as $value. If this\nfails, it will read the latest value, and retry, until a CAS operation\nsucceeds.\n\nTherefore, an item could be added to the head of a linked list in a lock\nfree manner as follows:\n\n    class Node {\n        has $.value;\n        has Node $.next;\n    }\n    my Node $head = Node;\n    await start {\n        for ^1000 -> $value {\n            cas $head, -> $next { Node.new(:$value, :$next) }\n        }\n    } xx 4;\n\nThis will reliably build up a linked list of 4000 items, with 4 nodes with\neach value ranging from 0 up to 999.\n\nOperators\n\n  infix ⚛=\n\n    multi sub infix:<⚛=>($target is rw, $value)\n\nPerforms an atomic assignment of $value into the Scalar $target. The ⚛=\noperator ensures that any required barriers are performed such that the\nchanged value will be \"published\" to other threads.\n\n  prefix ⚛\n\n    multi sub prefix:<⚛>($target is rw)\n\nPerforms an atomic read of the value in the Scalar $target and returns the\nread value. Using this operator instead of simply using the variable\nensures that the latest update to the variable from other threads will be\nseen, both by doing any required hardware barriers and also preventing the\ncompiler from lifting reads. For example:\n\n    my $started = False;\n    start { $started ⚛= True }\n    until ⚛$started { }\n\nIs certain to terminate, while in:\n\n    my $started = False;\n    start { $started ⚛= True }\n    until $started { }\n\nIt would be legal for a compiler to observe that $started is not updated in\nthe loop, and so lift the read out of the loop, thus causing the program to\nnever terminate.","n":"Scalar","t":"Scalar"},{"n":"π","t":"Num","b":"C","k":"c","m":[{"m":0,"k":"m","s":{"r":"Mu","p":["*%_"]},"n":"Capture"},{"m":0,"k":"m","s":{"r":"Mu","p":["*%_"]},"n":"Num"},{"n":"Bridge","s":{"r":"Mu","p":["*%_"]},"m":0,"k":"m"},{"n":"Range","s":{"p":["*%_"],"r":"Mu"},"k":"m","m":0},{"n":"Int","s":{"p":["*%_"],"r":"Mu"},"k":"m","m":0},{"n":"Rat","s":{"r":"Mu","p":["Real $epsilon = 1e-06",":$fat","*%_"]},"k":"m","m":0},{"m":0,"k":"m","s":{"p":["Real $epsilon = 1e-06","*%_"],"r":"Mu"},"n":"FatRat"},{"n":"succ","s":{"r":"Mu","p":["*%_"]},"k":"m","m":0},{"n":"pred","s":{"r":"Mu","p":["*%_"]},"k":"m","m":0},{"n":"isNaN","s":{"r":"Mu","p":["*%_"]},"k":"m","m":0},{"k":"m","m":0,"s":{"p":["*%_"],"r":"Mu"},"n":"abs"},{"s":{"r":"Mu","p":["*%_"]},"n":"log","k":"m","m":1},{"n":"log","s":{"r":"Mu","p":["Num \\base","*%_"]},"m":1,"k":"m"},{"s":{"r":"Mu","p":["*%_"]},"n":"log","k":"m","m":1},{"n":"log","s":{"p":["Real $base","*%_"],"r":"Mu"},"m":1,"k":"m"},{"m":1,"k":"m","s":{"r":"Mu","p":["Cool $base","*%_"]},"n":"log"},{"s":{"r":"Mu","p":["Numeric $base","*%_"]},"n":"log","k":"m","m":1},{"k":"m","m":1,"s":{"r":"Mu","p":["*%_"]},"n":"sqrt"},{"n":"rand","s":{"p":["*%_"],"r":"Mu"},"k":"m","m":0},{"s":{"p":["*%_"],"r":"Mu"},"n":"ceiling","k":"m","m":0},{"k":"m","m":0,"n":"floor","s":{"p":["*%_"],"r":"Mu"}},{"s":{"p":["*%_"],"r":"Mu"},"n":"sin","m":1,"k":"m"},{"n":"asin","s":{"r":"Mu","p":["*%_"]},"k":"m","m":1},{"m":1,"k":"m","s":{"p":["*%_"],"r":"Mu"},"n":"cos"},{"m":1,"k":"m","s":{"r":"Mu","p":["*%_"]},"n":"acos"},{"k":"m","m":1,"s":{"p":["*%_"],"r":"Mu"},"n":"tan"},{"s":{"r":"Mu","p":["*%_"]},"n":"atan","k":"m","m":1},{"m":1,"k":"m","s":{"r":"Mu","p":["*%_"]},"n":"sec"},{"s":{"r":"Mu","p":["*%_"]},"n":"asec","k":"m","m":1},{"k":"m","m":0,"s":{"p":["*%_"],"r":"Mu"},"n":"cosec"},{"n":"acosec","s":{"r":"Mu","p":["*%_"]},"k":"m","m":0},{"s":{"r":"Mu","p":["*%_"]},"n":"cotan","k":"m","m":0},{"k":"m","m":0,"s":{"p":["*%_"],"r":"Mu"},"n":"acotan"},{"n":"sinh","s":{"p":["*%_"],"r":"Mu"},"m":1,"k":"m"},{"m":1,"k":"m","s":{"p":["*%_"],"r":"Mu"},"n":"asinh"},{"m":1,"k":"m","n":"cosh","s":{"r":"Mu","p":["*%_"]}},{"k":"m","m":1,"n":"acosh","s":{"r":"Mu","p":["*%_"]}},{"n":"tanh","s":{"r":"Mu","p":["*%_"]},"m":1,"k":"m"},{"m":1,"k":"m","n":"atanh","s":{"p":["*%_"],"r":"Mu"}},{"m":1,"k":"m","s":{"r":"Mu","p":["*%_"]},"n":"atanh"},{"s":{"r":"Mu","p":["*%_"]},"n":"sech","k":"m","m":1},{"s":{"r":"Mu","p":["*%_"]},"n":"asech","m":1,"k":"m"},{"n":"cosech","s":{"p":["*%_"],"r":"Mu"},"m":1,"k":"m"},{"s":{"r":"Mu","p":["*%_"]},"n":"acosech","k":"m","m":1},{"n":"cotanh","s":{"r":"Mu","p":["*%_"]},"m":1,"k":"m"},{"n":"acotanh","s":{"p":["*%_"],"r":"Mu"},"k":"m","m":1},{"s":{"r":"Bool:D","p":["*%_"]},"n":"is-prime","k":"m","m":0},{"s":{"p":["*%_"],"r":"Mu"},"n":"narrow","m":0,"k":"m"},{"k":"m","m":0,"s":{"p":["*%_"],"r":"Mu"},"n":"sign"},{"k":"m","m":0,"n":"conj","s":{"p":["*%_"],"r":"Mu"}},{"s":{"p":["Num:D $x = 1e0","*%_"],"r":"Mu"},"n":"atan2","k":"m","m":1},{"k":"m","m":1,"n":"atan2","s":{"r":"Mu","p":["Real $x = 1e0","*%_"]}},{"s":{"p":["Cool $x = 1e0","*%_"],"r":"Mu"},"n":"atan2","k":"m","m":1},{"n":"round","s":{"p":["*%_"],"r":"Mu"},"k":"m","m":1},{"n":"round","s":{"r":"Mu","p":["$scale","*%_"]},"m":1,"k":"m"},{"n":"unpolar","s":{"p":["Real $angle","*%_"],"r":"Mu"},"k":"m","m":0},{"m":0,"k":"m","s":{"p":["*%_"],"r":"Mu"},"n":"cis"},{"s":{"r":"Mu","p":["*%_"]},"n":"Complex","k":"m","m":0},{"m":1,"k":"m","n":"exp","s":{"r":"Mu","p":["*%_"]}},{"s":{"r":"Mu","p":["*%_"]},"n":"exp","k":"m","m":1},{"s":{"p":["$base","*%_"],"r":"Mu"},"n":"exp","m":1,"k":"m"},{"s":{"p":["*%_"],"r":"Mu"},"n":"truncate","m":0,"k":"m"},{"k":"m","m":0,"s":{"p":["+@mods","*%_"],"r":"Mu"},"n":"polymod"},{"k":"m","m":0,"s":{"p":["Int:D $base","$digits? is copy","*%_"],"r":"Mu"},"n":"base"},{"k":"m","m":0,"n":"log10","s":{"r":"Mu","p":["*%_"]}},{"n":"roots","s":{"p":["Cool $n","*%_"],"r":"Mu"},"k":"m","m":0},{"m":1,"k":"m","n":"WHICH","s":{"r":"ValueObjAt:D","p":["*%_"]}},{"s":{"p":["*%_"],"r":"ObjAt:D"},"n":"WHICH","k":"m","m":1},{"m":1,"k":"m","s":{"p":["*%_"],"r":"ValueObjAt:D"},"n":"WHICH"},{"m":1,"k":"m","s":{"r":"Bool","p":["*%_"]},"n":"Bool"},{"n":"Bool","s":{"p":["*%_"],"r":"Mu"},"m":1,"k":"m"},{"s":{"p":["*%_"],"r":"Mu"},"n":"Bool","k":"m","m":1},{"n":"Bool","s":{"r":"Mu","p":["*%_"]},"m":1,"k":"m"},{"n":"new","s":{"r":"Mu","p":["*%attrinit"]},"m":1,"k":"m"},{"k":"m","m":1,"s":{"r":"Mu","p":["$","*@","*%_"]},"n":"new"},{"k":"m","m":1,"n":"new","s":{"r":"Mu","p":["*%_"]}},{"k":"m","m":1,"s":{"r":"Mu","p":["$n","*%_"]},"n":"new"},{"k":"m","m":1,"n":"perl","s":{"p":["*%_"],"r":"Mu"}},{"n":"perl","s":{"p":["*%_"],"r":"Mu"},"k":"m","m":1},{"n":"perl","s":{"r":"Mu","p":["*%_"]},"m":1,"k":"m"},{"n":"Str","s":{"p":["*%_"],"r":"Mu"},"m":1,"k":"m"},{"n":"Str","s":{"r":"Mu","p":["*%_"]},"m":1,"k":"m"},{"k":"m","m":1,"n":"Str","s":{"p":["*%_"],"r":"Mu"}},{"k":"m","m":1,"s":{"r":"Mu","p":["*%_"]},"n":"Str"},{"s":{"r":"Mu","p":["*%_"]},"n":"Real","k":"m","m":1},{"n":"Real","s":{"r":"Mu","p":["*%_"]},"m":1,"k":"m"},{"s":{"r":"Mu","p":["*%_"]},"n":"Real","m":1,"k":"m"},{"m":1,"k":"m","s":{"p":["*%_"],"r":"Mu"},"n":"Real"},{"m":1,"k":"m","n":"Numeric","s":{"r":"Mu","p":["*%_"]}},{"m":1,"k":"m","s":{"r":"Mu","p":["*%_"]},"n":"Numeric"},{"m":1,"k":"m","n":"Numeric","s":{"r":"Mu","p":["*%_"]}},{"s":{"r":"Mu","p":["\\topic","*%_"]},"n":"ACCEPTS","m":1,"k":"m"},{"m":1,"k":"m","s":{"r":"Mu","p":["Mu:U \\topic","*%_"]},"n":"ACCEPTS"},{"n":"ACCEPTS","s":{"p":["Mu:D \\a","*%_"],"r":"Mu"},"m":1,"k":"m"},{"m":1,"k":"m","s":{"r":"Bool","p":["Mu:U $","*%_"]},"n":"ACCEPTS"},{"m":1,"k":"m","n":"ACCEPTS","s":{"p":["\\topic","*%_"],"r":"Bool:D"}},{"n":"ACCEPTS","s":{"r":"Mu","p":["Any:D \\a","*%_"]},"m":1,"k":"m"},{"n":"gist","s":{"r":"Mu","p":["*%_"]},"k":"m","m":1},{"k":"m","m":1,"s":{"p":["*%_"],"r":"Mu"},"n":"gist"},{"m":1,"k":"m","s":{"r":"Mu","p":["*%_"]},"n":"gist"},{"m":1,"k":"m","n":"DUMP","s":{"p":["*%_"],"r":"Mu"}},{"k":"m","m":1,"s":{"p":[":$indent-step = 4",":%ctx","*%_"],"r":"Mu"},"n":"DUMP"},{"s":{"r":"Mu","p":["*%_"]},"n":"DUMP","k":"m","m":1},{"m":0,"k":"s","n":"BUILDALL","s":{"p":["@auto","%init","*%_"],"r":"Mu"}}]},{"n":"&postcircumfix:<[ ]>","t":"Sub+{is-nodal}+{Precedence}+{is-nodal}","k":"v"},{"s":{"p":["\\SELF","Any:U $type","|c is raw"],"r":"Mu"},"n":"postcircumfix:<[ ]>","m":1,"k":"s"},{"s":{"p":["\\SELF","int $pos"],"r":"Mu"},"n":"postcircumfix:<[ ]>","k":"s","m":1},{"s":{"r":"Mu","p":["\\SELF","int $pos","Mu \\assignee"]},"n":"postcircumfix:<[ ]>","k":"s","m":1},{"k":"s","m":1,"s":{"r":"Mu","p":["\\SELF","int $pos","Mu :$BIND! is raw"]},"n":"postcircumfix:<[ ]>"},{"s":{"p":["\\SELF","int $pos",":$delete!"],"r":"Mu"},"n":"postcircumfix:<[ ]>","m":1,"k":"s"},{"n":"postcircumfix:<[ ]>","s":{"p":["\\SELF","int $pos",":$delete!","*%other"],"r":"Mu"},"m":1,"k":"s"},{"s":{"p":["\\SELF","int $pos",":$exists!"],"r":"Mu"},"n":"postcircumfix:<[ ]>","m":1,"k":"s"},{"m":1,"k":"s","s":{"r":"Mu","p":["\\SELF","int $pos",":$exists!","*%other"]},"n":"postcircumfix:<[ ]>"},{"s":{"p":["\\SELF","int $pos",":$kv!","*%other"],"r":"Mu"},"n":"postcircumfix:<[ ]>","m":1,"k":"s"},{"m":1,"k":"s","n":"postcircumfix:<[ ]>","s":{"p":["\\SELF","int $pos",":$p!","*%other"],"r":"Mu"}},{"k":"s","m":1,"s":{"p":["\\SELF","int $pos",":$k!","*%other"],"r":"Mu"},"n":"postcircumfix:<[ ]>"},{"m":1,"k":"s","s":{"p":["\\SELF","int $pos",":$v!","*%other"],"r":"Mu"},"n":"postcircumfix:<[ ]>"},{"n":"postcircumfix:<[ ]>","s":{"p":["\\SELF","Int:D $pos"],"r":"Mu"},"m":1,"k":"s"},{"k":"s","m":1,"n":"postcircumfix:<[ ]>","s":{"r":"Mu","p":["\\SELF","Int:D $pos","Mu \\assignee"]}},{"n":"postcircumfix:<[ ]>","s":{"p":["\\SELF","Int:D $pos","Mu :$BIND! is raw"],"r":"Mu"},"k":"s","m":1},{"s":{"r":"Mu","p":["\\SELF","Int:D $pos",":$delete!"]},"n":"postcircumfix:<[ ]>","k":"s","m":1},{"s":{"r":"Mu","p":["\\SELF","Int:D $pos",":$delete!","*%other"]},"n":"postcircumfix:<[ ]>","m":1,"k":"s"},{"n":"postcircumfix:<[ ]>","s":{"p":["\\SELF","Int:D $pos",":$exists!"],"r":"Mu"},"m":1,"k":"s"},{"m":1,"k":"s","n":"postcircumfix:<[ ]>","s":{"r":"Mu","p":["\\SELF","Int:D $pos",":$exists!","*%other"]}},{"n":"postcircumfix:<[ ]>","s":{"p":["\\SELF","Int:D $pos",":$kv!","*%other"],"r":"Mu"},"k":"s","m":1},{"k":"s","m":1,"n":"postcircumfix:<[ ]>","s":{"r":"Mu","p":["\\SELF","Int:D $pos",":$p!","*%other"]}},{"s":{"r":"Mu","p":["\\SELF","Int:D $pos",":$k!","*%other"]},"n":"postcircumfix:<[ ]>","m":1,"k":"s"},{"n":"postcircumfix:<[ ]>","s":{"p":["\\SELF","Int:D $pos",":$v!","*%other"],"r":"Mu"},"k":"s","m":1},{"n":"postcircumfix:<[ ]>","s":{"r":"Mu","p":["\\SELF","Any:D \\pos"]},"k":"s","m":1},{"m":1,"k":"s","s":{"p":["\\SELF","Any:D \\pos","Mu \\assignee"],"r":"Mu"},"n":"postcircumfix:<[ ]>"},{"n":"postcircumfix:<[ ]>","s":{"r":"Mu","p":["\\SELF","Any:D \\pos","Mu :$BIND! is raw"]},"k":"s","m":1},{"k":"s","m":1,"s":{"r":"Mu","p":["\\SELF","Any:D \\pos",":$delete!"]},"n":"postcircumfix:<[ ]>"},{"k":"s","m":1,"n":"postcircumfix:<[ ]>","s":{"r":"Mu","p":["\\SELF","Any:D \\pos",":$delete!","*%other"]}},{"m":1,"k":"s","n":"postcircumfix:<[ ]>","s":{"p":["\\SELF","Any:D \\pos",":$exists!"],"r":"Mu"}},{"m":1,"k":"s","s":{"p":["\\SELF","Any:D \\pos",":$exists!","*%other"],"r":"Mu"},"n":"postcircumfix:<[ ]>"},{"m":1,"k":"s","s":{"r":"Mu","p":["\\SELF","Any:D \\pos",":$kv!","*%other"]},"n":"postcircumfix:<[ ]>"},{"k":"s","m":1,"s":{"p":["\\SELF","Any:D \\pos",":$p!","*%other"],"r":"Mu"},"n":"postcircumfix:<[ ]>"},{"k":"s","m":1,"n":"postcircumfix:<[ ]>","s":{"r":"Mu","p":["\\SELF","Any:D \\pos",":$k!","*%other"]}},{"s":{"p":["\\SELF","Any:D \\pos",":$v!","*%other"],"r":"Mu"},"n":"postcircumfix:<[ ]>","m":1,"k":"s"},{"n":"postcircumfix:<[ ]>","s":{"r":"Mu","p":["\\SELF","Iterable:D \\pos"]},"m":1,"k":"s"},{"m":1,"k":"s","n":"postcircumfix:<[ ]>","s":{"p":["\\SELF","Iterable:D \\pos","Mu \\val"],"r":"Mu"}},{"s":{"p":["\\SELF","Iterable:D \\pos",":$BIND!"],"r":"Mu"},"n":"postcircumfix:<[ ]>","m":1,"k":"s"},{"s":{"p":["\\SELF","Iterable:D \\pos",":$delete!","*%other"],"r":"Mu"},"n":"postcircumfix:<[ ]>","m":1,"k":"s"},{"m":1,"k":"s","n":"postcircumfix:<[ ]>","s":{"r":"Mu","p":["\\SELF","Iterable:D \\pos",":$exists!","*%other"]}},{"k":"s","m":1,"n":"postcircumfix:<[ ]>","s":{"r":"Mu","p":["\\SELF","Iterable:D \\pos",":$kv!","*%other"]}},{"n":"postcircumfix:<[ ]>","s":{"p":["\\SELF","Iterable:D \\pos",":$p!","*%other"],"r":"Mu"},"k":"s","m":1},{"m":1,"k":"s","n":"postcircumfix:<[ ]>","s":{"p":["\\SELF","Iterable:D \\pos",":$k!","*%other"],"r":"Mu"}},{"m":1,"k":"s","n":"postcircumfix:<[ ]>","s":{"p":["\\SELF","Iterable:D \\pos",":$v!","*%other"],"r":"Mu"}},{"s":{"r":"Mu","p":["\\SELF","Callable:D $block"]},"n":"postcircumfix:<[ ]>","m":1,"k":"s"},{"k":"s","m":1,"n":"postcircumfix:<[ ]>","s":{"p":["\\SELF","Callable:D $block","Mu \\assignee"],"r":"Mu"}},{"s":{"r":"Mu","p":["\\SELF","Callable:D $block",":$BIND!"]},"n":"postcircumfix:<[ ]>","k":"s","m":1},{"m":1,"k":"s","n":"postcircumfix:<[ ]>","s":{"p":["\\SELF","Callable:D $block",":$delete!","*%other"],"r":"Mu"}},{"s":{"r":"Mu","p":["\\SELF","Callable:D $block",":$exists!","*%other"]},"n":"postcircumfix:<[ ]>","k":"s","m":1},{"s":{"p":["\\SELF","Callable:D $block",":$kv!","*%other"],"r":"Mu"},"n":"postcircumfix:<[ ]>","k":"s","m":1},{"s":{"p":["\\SELF","Callable:D $block",":$p!","*%other"],"r":"Mu"},"n":"postcircumfix:<[ ]>","k":"s","m":1},{"m":1,"k":"s","s":{"r":"Mu","p":["\\SELF","Callable:D $block",":$k!","*%other"]},"n":"postcircumfix:<[ ]>"},{"m":1,"k":"s","s":{"p":["\\SELF","Callable:D $block",":$v!","*%other"],"r":"Mu"},"n":"postcircumfix:<[ ]>"},{"n":"postcircumfix:<[ ]>","s":{"r":"Mu","p":["\\SELF","Whatever:D $"]},"m":1,"k":"s"},{"k":"s","m":1,"n":"postcircumfix:<[ ]>","s":{"p":["\\SELF","Whatever:D $","Mu \\assignee"],"r":"Mu"}},{"s":{"r":"Mu","p":["\\SELF","Whatever:D $",":$BIND!"]},"n":"postcircumfix:<[ ]>","k":"s","m":1},{"k":"s","m":1,"s":{"p":["\\SELF","Whatever:D $",":$delete!","*%other"],"r":"Mu"},"n":"postcircumfix:<[ ]>"},{"s":{"p":["\\SELF","Whatever:D $",":$exists!","*%other"],"r":"Mu"},"n":"postcircumfix:<[ ]>","m":1,"k":"s"},{"k":"s","m":1,"s":{"p":["\\SELF","Whatever:D $",":$kv!","*%other"],"r":"Mu"},"n":"postcircumfix:<[ ]>"},{"k":"s","m":1,"n":"postcircumfix:<[ ]>","s":{"p":["\\SELF","Whatever:D $",":$p!","*%other"],"r":"Mu"}},{"k":"s","m":1,"n":"postcircumfix:<[ ]>","s":{"r":"Mu","p":["\\SELF","Whatever:D $",":$k!","*%other"]}},{"s":{"r":"Mu","p":["\\SELF","Whatever:D $",":$v!","*%other"]},"n":"postcircumfix:<[ ]>","k":"s","m":1},{"k":"s","m":1,"s":{"r":"Mu","p":["\\SELF","HyperWhatever:D $","*%adv"]},"n":"postcircumfix:<[ ]>"},{"s":{"p":["\\SELF","HyperWhatever:D $","Mu \\assignee"],"r":"Mu"},"n":"postcircumfix:<[ ]>","k":"s","m":1},{"k":"s","m":1,"n":"postcircumfix:<[ ]>","s":{"r":"Mu","p":["\\SELF",":$BIND!"]}},{"s":{"p":["\\SELF",":$delete!","*%other"],"r":"Mu"},"n":"postcircumfix:<[ ]>","k":"s","m":1},{"s":{"p":["\\SELF",":$exists!","*%other"],"r":"Mu"},"n":"postcircumfix:<[ ]>","m":1,"k":"s"},{"m":1,"k":"s","s":{"p":["\\SELF",":$kv!","*%other"],"r":"Mu"},"n":"postcircumfix:<[ ]>"},{"k":"s","m":1,"s":{"p":["\\SELF",":$p!","*%other"],"r":"Mu"},"n":"postcircumfix:<[ ]>"},{"n":"postcircumfix:<[ ]>","s":{"p":["\\SELF",":$k!","*%other"],"r":"Mu"},"m":1,"k":"s"},{"m":1,"k":"s","n":"postcircumfix:<[ ]>","s":{"p":["\\SELF",":$v!","*%other"],"r":"Mu"}},{"m":1,"k":"s","s":{"r":"Mu","p":["\\SELF","*%other"]},"n":"postcircumfix:<[ ]>"},{"n":"postcircumfix:<[ ]>","s":{"r":"Mu","p":["array:D \\SELF","Range:D \\range"]},"m":1,"k":"s"},{"n":"&say","t":"Sub","k":"v"},{"n":"say","s":{"r":"Mu","p":[]},"k":"s","m":1},{"s":{"p":["\\x"],"r":"Mu"},"n":"say","m":1,"k":"s"},{"n":"say","s":{"r":"Mu","p":["**@args is raw"]},"m":1,"k":"s"},{"t":"Sub+{is-pure}","n":"&any","k":"v"},{"n":"any","s":{"p":["+\\values is raw"],"r":"Mu"},"k":"s","m":1},{"n":"&infix:<=~>","t":"Sub","k":"v"},{"k":"s","m":0,"s":{"r":"Mu","p":["\\a","\\b"]},"n":"infix:<=~>"},{"n":"&infix:<(+)>","t":"Sub+{is-pure}+{Precedence}","k":"v"},{"k":"s","m":1,"s":{"p":[],"r":"Mu"},"n":"infix:<(+)>"},{"s":{"r":"Mu","p":["Bag:D \\a"]},"n":"infix:<(+)>","m":1,"k":"s"},{"s":{"p":["Mix:D \\a"],"r":"Mu"},"n":"infix:<(+)>","m":1,"k":"s"},{"n":"infix:<(+)>","s":{"r":"Mu","p":["MixHash:D \\a"]},"k":"s","m":1},{"n":"infix:<(+)>","s":{"r":"Mu","p":["\\a"]},"m":1,"k":"s"},{"s":{"p":["Setty:D \\a","QuantHash:D \\b"],"r":"Mu"},"n":"infix:<(+)>","k":"s","m":1},{"s":{"p":["Setty:D \\a","Map:D \\b"],"r":"Mu"},"n":"infix:<(+)>","k":"s","m":1},{"n":"infix:<(+)>","s":{"r":"Mu","p":["Mixy:D \\a","QuantHash:D \\b"]},"m":1,"k":"s"},{"s":{"r":"Mu","p":["Baggy:D \\a","QuantHash:D \\b"]},"n":"infix:<(+)>","m":1,"k":"s"},{"m":1,"k":"s","s":{"r":"Mu","p":["Map:D \\a","Map:D \\b"]},"n":"infix:<(+)>"},{"k":"s","m":1,"s":{"p":["Iterable:D \\a","Iterable:D \\b"],"r":"Mu"},"n":"infix:<(+)>"},{"m":1,"k":"s","n":"infix:<(+)>","s":{"p":["$","Failure:D \\b"],"r":"Mu"}},{"n":"infix:<(+)>","s":{"p":["Failure:D \\a","$"],"r":"Mu"},"k":"s","m":1},{"n":"infix:<(+)>","s":{"p":["\\a","\\b"],"r":"Mu"},"k":"s","m":1},{"k":"s","m":1,"n":"infix:<(+)>","s":{"r":"Mu","p":["**@p"]}},{"m":[{"s":{"p":["*%_"],"r":"Mu"},"n":"Capture","m":0,"k":"m"},{"n":"ACCEPTS","s":{"p":["\\topic","*%_"],"r":"Mu"},"k":"m","m":1},{"n":"ACCEPTS","s":{"r":"Mu","p":["Mu:U \\topic","*%_"]},"k":"m","m":1},{"m":1,"k":"m","n":"ACCEPTS","s":{"p":["Mu:D \\a","*%_"],"r":"Mu"}},{"n":"ACCEPTS","s":{"r":"Bool","p":["Mu:U $","*%_"]},"k":"m","m":1},{"s":{"p":["\\topic","*%_"],"r":"Bool:D"},"n":"ACCEPTS","m":1,"k":"m"},{"k":"m","m":1,"s":{"r":"Bool","p":["Mu $","*%_"]},"n":"ACCEPTS"},{"s":{"r":"Mu","p":["*%_"]},"n":"perl","k":"m","m":1},{"k":"m","m":1,"n":"perl","s":{"r":"Mu","p":["*%_"]}},{"k":"m","m":1,"s":{"p":["*%_"],"r":"Str"},"n":"perl"},{"n":"Str","s":{"p":["*%_"],"r":"Mu"},"m":1,"k":"m"},{"s":{"p":["*%_"],"r":"Mu"},"n":"Str","k":"m","m":1},{"m":1,"k":"m","s":{"p":["*%_"],"r":"Str"},"n":"Str"},{"k":"s","m":0,"n":"BUILDALL","s":{"p":["@auto","%init","*%_"],"r":"Mu"}}],"k":"c","b":"A","d":"TITLE\nclass Whatever\n\nSUBTITLE\nPlaceholder for the value of an unspecified argument\n\n    class Whatever { }\n\nWhatever is a class whose objects don't have any explicit meaning; it gets\nits semantics from other routines that accept Whatever-objects as markers\nto do something special. Using the * literal as an operand creates a\nWhatever object.\n\nMuch of *'s charm comes from Whatever-currying. When * is used in term\nposition, that is, as an operand, in combination with most operators, the\ncompiler will transform the expression into a closure of type WhateverCode,\nwhich is actually a Block that can be used wherever Callables are\naccepted.\n\n    my $c = * + 2;          # same as   -> $x { $x + 2 };\n    say $c(4);              # OUTPUT: «6␤»\n\nMultiple * in one expression generate closures with as many arguments:\n\n    my $c = * + *;          # same as   -> $x, $y { $x + $y }\n\nUsing * in complex expressions will also generate closures:\n\n    my $c = 4 * * + 5;      # same as   -> $x { 4 * $x + 5 }\n\nCalling a method on * also creates a closure:\n\n    <a b c>.map: *.uc;      # same as    <a b c>.map: -> $char { $char.uc }\n\n\nAs mentioned before, not all operators and syntactic constructs curry * (or\nWhatever-stars) to WhateverCode. In the following cases, * will remain a\nWhatever object.\n\n  Exception        Example  What it does\n  comma            1, *, 2  generates a List with a * element\n  range operators  1 .. *   Range.new(:from(1), :to(*));\n  series operator  1 ... *  infinite list\n  assignment       $x = *   assign * to $x\n  binding          $x := *  bind * to $x\n  list repetition  1 xx *   generates an infinite list\n\n\nThe range operators are handled specially. They do not curry with\nWhatever-stars, but they do curry with WhateverCode\n\n    say (1..*).^name;       # OUTPUT: «Range␤»\n    say ((1..*-1)).^name;   # OUTPUT: «WhateverCode␤»\n\nThis allows all these constructs to work:\n\n    .say for 1..*;          # infinite loop\n\n\nand\n\n    my @a = 1..4;\n    say @a[0..*];           # OUTPUT: «(1 2 3 4)␤»\n    say @a[0..*-2];         # OUTPUT: «(1 2 3)␤»\n\nBecause Whatever-currying is a purely syntactic compiler transform, you\nwill get no runtime currying of stored Whatever-stars into WhateverCodes.\n\n    my $x = *;\n    $x + 2;   # Not a closure, dies because it can't coerce $x to Numeric\n    CATCH { default { put .^name, ': ', .Str } };\n    # OUTPUT: «X::Multi::NoMatch: Cannot resolve caller Numeric(Whatever: );\n    # none of these signatures match:␤\n    # (Mu:U \\v: *%_)»\n\n\nThe use cases for stored Whatever-stars involve those curry-exception cases\nmentioned above. For example, if you want an infinite series by default.\n\n    my $max    = potential-upper-limit() // *;\n    my $series = known-lower-limit() ... $max;\n\n\nA stored * will also result in the generation of a WhateverCode in the\nspecific case of smartmatch. Note that this is not actually the stored *\nwhich is being curried, but rather the * on the left-hand side.\n\n    my $constraint           = find-constraint() // *;\n    my $maybe-always-matcher = * ~~ $constraint;\n\n\nIf this hypothetical find-constraint were to have found no constraint,\n$maybe-always-matcher would evaluate to True for anything.\n\n    $maybe-always-matcher(555);      # True\n    $maybe-always-matcher(Any);      # True\n\n\nHyperWhatever's functionality is similar to Whatever, except it refers to\nmultiple values, instead of a single one.\n\n","n":"Whatever","t":"Whatever"},{"k":"v","t":"Sub+{is-pure}","n":"&infix:«<»"},{"n":"infix:«<»","s":{"r":"Mu","p":["$?"]},"k":"s","m":1},{"m":1,"k":"s","s":{"p":["\\a","\\b"],"r":"Mu"},"n":"infix:«<»"},{"m":1,"k":"s","s":{"r":"Mu","p":["Real \\a","Real \\b"]},"n":"infix:«<»"},{"n":"infix:«<»","s":{"p":["Int:D \\a","Int:D \\b"],"r":"Bool:D"},"m":1,"k":"s"},{"m":1,"k":"s","s":{"r":"Bool:D","p":["int $a","int $b"]},"n":"infix:«<»"},{"k":"s","m":1,"n":"infix:«<»","s":{"r":"Bool:D","p":["Num:D \\a","Num:D \\b"]}},{"k":"s","m":1,"s":{"r":"Bool:D","p":["num $a","num $b"]},"n":"infix:«<»"},{"n":"infix:«<»","s":{"p":["Rational:D \\a","Rational:D \\b"],"r":"Bool:D"},"k":"s","m":1},{"k":"s","m":1,"n":"infix:«<»","s":{"r":"Bool:D","p":["Rational:D \\a","Int:D \\b"]}},{"n":"infix:«<»","s":{"p":["Int:D \\a","Rational:D \\b"],"r":"Bool:D"},"m":1,"k":"s"},{"k":"s","m":1,"s":{"r":"Bool:D","p":["Instant:D $a","Instant:D $b"]},"n":"infix:«<»"},{"k":"s","m":1,"s":{"p":["DateTime:D \\a","DateTime:D \\b"],"r":"Bool:D"},"n":"infix:«<»"},{"s":{"r":"Bool:D","p":["Date:D $a","Date:D $b"]},"n":"infix:«<»","k":"s","m":1},{"k":"s","m":1,"n":"infix:«<»","s":{"r":"Mu","p":["Version:D \\a","Version:D \\b"]}},{"t":"Sub","n":"&callwith","k":"v"},{"n":"callwith","s":{"r":"Mu","p":["|c is raw"]},"m":0,"k":"s"},{"b":"C","k":"ro","m":[{"k":"m","m":0,"n":"count-only","s":{"r":"Int:D","p":["*%_"]}},{"m":0,"k":"m","s":{"r":"Bool:D","p":["*%_"]},"n":"bool-only"}],"d":"TITLE\nrole PredictiveIterator\n\nSUBTITLE\nIterators that can predict number of values\n\nA PredictiveIterator is a special kind of Iterator that can know how many\nvalues it will (still) generate without actually needing to generate those\nvalues.\n\nThe main addition to the API of the Iterator role, is the count-only\nmethod, which should return the number of values the Iterator is still able\nto generate.\n\nThe other addition is the bool-only method, that should return a Bool\nindicating whether the Iterator is still capable of producing values (aka,\nis not exhausted yet). By default, this is the Booleanification of the\nresult of the call to the count-only method.\n\n","n":"PredictiveIterator","t":"PredictiveIterator"},{"m":[{"n":"encoding","s":{"p":["*%_"],"r":"Str"},"m":0,"k":"m"},{"m":1,"k":"m","n":"STORE","s":{"r":"Mu","p":["Iterable:D \\iterable",":$INITIALIZE","*%_"]}},{"m":1,"k":"m","s":{"p":["Any:D \\non-iterable",":$INITIALIZE","*%_"],"r":"Mu"},"n":"STORE"},{"k":"m","m":1,"n":"allocate","s":{"p":["Int:D $elements","*%_"],"r":"Mu"}},{"k":"m","m":1,"n":"allocate","s":{"r":"Mu","p":["Int:D $elements","int $value","*%_"]}},{"m":1,"k":"m","n":"allocate","s":{"r":"Mu","p":["Int:D $elements","Int:D \\value","*%_"]}},{"s":{"p":["Int:D $elements","Mu:D $got","*%_"],"r":"Mu"},"n":"allocate","k":"m","m":1},{"n":"allocate","s":{"p":["Int:D $elements","int @values","*%_"],"r":"Mu"},"k":"m","m":1},{"m":1,"k":"m","s":{"r":"Mu","p":["Int:D $elements","Blob:D $blob","*%_"]},"n":"allocate"},{"k":"m","m":1,"n":"allocate","s":{"p":["Int:D $elements","@values","*%_"],"r":"Mu"}},{"m":0,"k":"m","s":{"r":"int","p":["int $offset","Endian $?","*%_"]},"n":"read-int8"},{"k":"m","m":0,"s":{"r":"int","p":["int $offset","Endian $endian = Endian::NativeEndian","*%_"]},"n":"read-int16"},{"m":0,"k":"m","n":"read-int32","s":{"p":["int $offset","Endian $endian = Endian::NativeEndian","*%_"],"r":"int"}},{"m":0,"k":"m","s":{"r":"int","p":["int $offset","Endian $endian = Endian::NativeEndian","*%_"]},"n":"read-int64"},{"s":{"p":["int $offset","Endian $endian = Endian::NativeEndian","*%_"],"r":"Int"},"n":"read-int128","m":0,"k":"m"},{"k":"m","m":0,"n":"read-uint8","s":{"r":"uint","p":["int $offset","Endian $?","*%_"]}},{"n":"read-uint16","s":{"r":"uint","p":["int $offset","Endian $endian = Endian::NativeEndian","*%_"]},"k":"m","m":0},{"n":"read-uint32","s":{"p":["int $offset","Endian $endian = Endian::NativeEndian","*%_"],"r":"uint"},"m":0,"k":"m"},{"n":"read-uint64","s":{"r":"uint","p":["int $offset","Endian $endian = Endian::NativeEndian","*%_"]},"k":"m","m":0},{"m":0,"k":"m","n":"read-uint128","s":{"p":["int $offset","Endian $endian = Endian::NativeEndian","*%_"],"r":"uint"}},{"k":"m","m":0,"n":"read-num32","s":{"r":"num","p":["int $offset","Endian $endian = Endian::NativeEndian","*%_"]}},{"s":{"p":["int $offset","Endian $endian = Endian::NativeEndian","*%_"],"r":"num"},"n":"read-num64","k":"m","m":0},{"n":"read-bits","s":{"p":["int $pos","Int:D $bits","*%_"],"r":"Int:D"},"k":"m","m":0},{"n":"read-ubits","s":{"p":["int $pos","Int:D $bits","*%_"],"r":"UInt:D"},"m":0,"k":"m"},{"s":{"r":"Mu","p":["*%_"]},"n":"Capture","k":"m","m":0},{"k":"m","m":0,"s":{"p":["*%_"],"r":"Mu"},"n":"Numeric"},{"k":"m","m":0,"s":{"r":"Mu","p":["*%_"]},"n":"Int"},{"s":{"r":"Mu","p":["*%_"]},"n":"bytes","m":0,"k":"m"},{"n":"chars","s":{"p":["*%_"],"r":"Mu"},"k":"m","m":0},{"s":{"p":["$encoding = { ... }","*%_"],"r":"Mu"},"n":"decode","m":1,"k":"m"},{"k":"m","m":1,"s":{"p":["$encoding","Str :$replacement!","Bool:D :$strict = Bool::False","*%_"],"r":"Mu"},"n":"decode"},{"k":"m","m":1,"n":"decode","s":{"p":["$encoding","Bool:D :$strict = Bool::False","*%_"],"r":"Mu"}},{"k":"m","m":1,"n":"subbuf","s":{"p":["Range:D $fromto","*%_"],"r":"Mu"}},{"n":"subbuf","s":{"r":"Mu","p":["Int:D $From","*%_"]},"m":1,"k":"m"},{"k":"m","m":1,"n":"subbuf","s":{"p":["&From","*%_"],"r":"Mu"}},{"s":{"r":"Mu","p":["Int:D $From","Int:D $Length","*%_"]},"n":"subbuf","k":"m","m":1},{"k":"m","m":1,"s":{"r":"Mu","p":["Int:D $From","&End","*%_"]},"n":"subbuf"},{"k":"m","m":1,"s":{"p":["&From","Int:D $Length","*%_"],"r":"Mu"},"n":"subbuf"},{"n":"subbuf","s":{"r":"Mu","p":["&From","&End","*%_"]},"m":1,"k":"m"},{"s":{"p":["\\from","Whatever $","*%_"],"r":"Mu"},"n":"subbuf","m":1,"k":"m"},{"n":"subbuf","s":{"p":["\\from","Numeric \\length","*%_"],"r":"Mu"},"m":1,"k":"m"},{"m":1,"k":"m","n":"subbuf","s":{"r":"Mu","p":["\\from","Any:U $","*%_"]}},{"m":0,"k":"m","s":{"p":["*%_"],"r":"Mu"},"n":"reverse"},{"n":"COMPARE","s":{"r":"Mu","p":["Blob:D \\other","*%_"]},"m":0,"k":"m"},{"s":{"p":["Blob:D \\other","*%_"],"r":"Mu"},"n":"SAME","m":0,"k":"m"},{"k":"m","m":0,"n":"join","s":{"p":["$delim = \"\"","*%_"],"r":"Mu"}},{"m":1,"k":"m","s":{"r":"Mu","p":["Str:D $template","*%_"]},"n":"unpack"},{"s":{"p":["@template","*%_"],"r":"Mu"},"n":"unpack","m":1,"k":"m"},{"k":"m","m":0,"s":{"p":["*%_"],"r":"Mu"},"n":"contents"},{"m":0,"k":"m","s":{"p":["*%_"],"r":"Mu"},"n":"of"},{"k":"m","m":1,"s":{"p":["*%_"],"r":"Mu"},"n":"Str"},{"m":1,"k":"m","s":{"p":["*%_"],"r":"Mu"},"n":"Str"},{"k":"m","m":1,"n":"Str","s":{"p":["*%_"],"r":"Mu"}},{"m":1,"k":"m","s":{"r":"Mu","p":["*%_"]},"n":"Str"},{"s":{"r":"Mu","p":["*%_"]},"n":"Stringy","k":"m","m":1},{"m":1,"k":"m","s":{"p":["*%_"],"r":"Mu"},"n":"Stringy"},{"m":1,"k":"m","n":"Stringy","s":{"r":"Mu","p":["*%_"]}},{"s":{"r":"Mu","p":["*%_"]},"n":"Stringy","m":1,"k":"m"},{"s":{"p":["*%_"],"r":"ValueObjAt:D"},"n":"WHICH","k":"m","m":1},{"k":"m","m":1,"n":"WHICH","s":{"r":"ObjAt:D","p":["*%_"]}},{"n":"WHICH","s":{"p":["*%_"],"r":"ValueObjAt:D"},"m":1,"k":"m"},{"k":"m","m":1,"n":"new","s":{"r":"Mu","p":["*%attrinit"]}},{"n":"new","s":{"r":"Mu","p":["$","*@","*%_"]},"k":"m","m":1},{"n":"new","s":{"p":["*%_"],"r":"Mu"},"m":1,"k":"m"},{"m":1,"k":"m","n":"new","s":{"p":["Blob:D $blob","*%_"],"r":"Mu"}},{"m":1,"k":"m","n":"new","s":{"p":["int @values","*%_"],"r":"Mu"}},{"n":"new","s":{"p":["@values","*%_"],"r":"Mu"},"k":"m","m":1},{"m":1,"k":"m","s":{"p":["*@values","*%_"],"r":"Mu"},"n":"new"},{"n":"EXISTS-POS","s":{"p":["Any:D $","*%_"],"r":"Bool"},"m":1,"k":"m"},{"k":"m","m":1,"s":{"p":["Any:U $pos","*%_"],"r":"Mu"},"n":"EXISTS-POS"},{"n":"EXISTS-POS","s":{"r":"Bool:D","p":["int \\pos","*%_"]},"m":1,"k":"m"},{"n":"EXISTS-POS","s":{"p":["Int:D \\pos","*%_"],"r":"Bool:D"},"m":1,"k":"m"},{"s":{"r":"Bool:D","p":["Num:D \\pos","*%_"]},"n":"EXISTS-POS","m":1,"k":"m"},{"m":1,"k":"m","n":"EXISTS-POS","s":{"p":["Any:D \\pos","*%_"],"r":"Bool:D"}},{"m":1,"k":"m","s":{"p":["Any:U \\pos","*%_"],"r":"Mu"},"n":"EXISTS-POS"},{"m":1,"k":"m","n":"EXISTS-POS","s":{"r":"Bool:D","p":["\\one","\\two","*%_"]}},{"s":{"p":["\\one","\\two","\\three","*%_"],"r":"Bool:D"},"n":"EXISTS-POS","k":"m","m":1},{"m":1,"k":"m","n":"EXISTS-POS","s":{"r":"Bool:D","p":["**@indices","*%_"]}},{"m":1,"k":"m","n":"EXISTS-POS","s":{"r":"Mu","p":["int \\pos","*%_"]}},{"n":"EXISTS-POS","s":{"r":"Mu","p":["Int:D \\pos","*%_"]},"k":"m","m":1},{"n":"AT-POS","s":{"r":"Mu","p":["int \\pos","*%_"]},"m":1,"k":"m"},{"k":"m","m":1,"n":"AT-POS","s":{"r":"Mu","p":["Int:D \\pos","*%_"]}},{"m":1,"k":"m","n":"AT-POS","s":{"r":"Mu","p":["Num:D \\pos","*%_"]}},{"k":"m","m":1,"n":"AT-POS","s":{"p":["Any:D \\pos","*%_"],"r":"Mu"}},{"s":{"p":["int \\pos","*%_"],"r":"Mu"},"n":"AT-POS","k":"m","m":1},{"k":"m","m":1,"n":"AT-POS","s":{"p":["Int:D \\pos","*%_"],"r":"Mu"}},{"s":{"p":["Num:D \\pos","*%_"],"r":"Mu"},"n":"AT-POS","m":1,"k":"m"},{"n":"AT-POS","s":{"r":"Mu","p":["Any:D \\pos","*%_"]},"k":"m","m":1},{"k":"m","m":1,"s":{"r":"Mu","p":["Any:U \\pos","*%_"]},"n":"AT-POS"},{"n":"AT-POS","s":{"p":["\\one","\\two","*%_"],"r":"Mu"},"k":"m","m":1},{"m":1,"k":"m","n":"AT-POS","s":{"r":"Mu","p":["\\one","\\two","\\three","*%_"]}},{"m":1,"k":"m","s":{"p":["**@indices","*%_"],"r":"Mu"},"n":"AT-POS"},{"k":"m","m":1,"s":{"r":"Mu","p":["int \\pos","*%_"]},"n":"AT-POS"},{"s":{"r":"Mu","p":["Int:D \\pos","*%_"]},"n":"AT-POS","m":1,"k":"m"},{"m":1,"k":"m","n":"Bool","s":{"r":"Bool","p":["*%_"]}},{"k":"m","m":1,"n":"Bool","s":{"r":"Mu","p":["*%_"]}},{"k":"m","m":1,"s":{"r":"Mu","p":["*%_"]},"n":"Bool"},{"m":1,"k":"m","n":"elems","s":{"p":["*%_"],"r":"Int"}},{"k":"m","m":1,"s":{"p":["*%_"],"r":"Mu"},"n":"elems"},{"k":"m","m":1,"n":"elems","s":{"r":"Mu","p":["*%_"]}},{"m":1,"k":"m","s":{"p":["*%_"],"r":"Int"},"n":"elems"},{"s":{"p":["*%_"],"r":"Mu"},"n":"list","k":"m","m":1},{"m":1,"k":"m","n":"list","s":{"r":"Mu","p":["*%_"]}},{"m":1,"k":"m","n":"list","s":{"p":["*%_"],"r":"Mu"}},{"m":1,"k":"m","s":{"r":"Mu","p":["*%_"]},"n":"gist"},{"s":{"p":["*%_"],"r":"Mu"},"n":"gist","m":1,"k":"m"},{"s":{"r":"Mu","p":["*%_"]},"n":"gist","k":"m","m":1},{"m":1,"k":"m","s":{"p":["*%_"],"r":"Mu"},"n":"perl"},{"n":"perl","s":{"r":"Mu","p":["*%_"]},"m":1,"k":"m"},{"n":"perl","s":{"p":["*%_"],"r":"Mu"},"k":"m","m":1},{"n":"ACCEPTS","s":{"r":"Mu","p":["\\topic","*%_"]},"k":"m","m":1},{"k":"m","m":1,"n":"ACCEPTS","s":{"p":["Mu:U \\topic","*%_"],"r":"Mu"}},{"m":1,"k":"m","n":"ACCEPTS","s":{"r":"Mu","p":["Mu:D \\a","*%_"]}},{"s":{"r":"Bool","p":["Mu:U $","*%_"]},"n":"ACCEPTS","k":"m","m":1},{"m":1,"k":"m","n":"ACCEPTS","s":{"r":"Bool:D","p":["\\topic","*%_"]}},{"k":"m","m":1,"n":"ACCEPTS","s":{"p":["Blob:D \\Other","*%_"],"r":"Mu"}},{"n":"BUILDALL","s":{"r":"Mu","p":["@auto","%init","*%_"]},"k":"s","m":0},{"n":"!fail-typecheck","s":{"r":"Mu","p":["$action","$got","*%_"]},"k":"m","m":0},{"m":0,"k":"m","n":"!push-list","s":{"r":"Mu","p":["\\action","\\to","\\from","*%_"]}},{"n":"!spread","s":{"r":"Mu","p":["\\to","\\from","*%_"]},"k":"m","m":0},{"s":{"p":["\\action","\\to","\\from","*%_"],"r":"Mu"},"n":"!unshift-list","k":"m","m":0},{"s":{"r":"Mu","p":["$got","*%_"]},"n":"!fail-range","k":"m","m":0},{"n":"!fail-typecheck-element","s":{"r":"Mu","p":["\\action","\\i","\\got","*%_"]},"m":0,"k":"m"}],"k":"c","b":"A","t":"utf16","n":"utf16"},{"k":"v","n":"&infix:«(>+)»","t":"Sub+{is-pure}+{Precedence}"},{"s":{"r":"Bool:D","p":["$a","$b"]},"n":"infix:«(>+)»","m":1,"k":"s"},{"k":"n","t":"int","n":"int"},{"n":"&infix:<~|>","t":"Sub+{is-pure}+{Precedence}","k":"v"},{"s":{"p":["$x = \"\""],"r":"Mu"},"n":"infix:<~|>","m":1,"k":"s"},{"n":"infix:<~|>","s":{"r":"Mu","p":["\\a","\\b"]},"m":1,"k":"s"},{"k":"s","m":1,"s":{"r":"Mu","p":["Blob:D \\a","Blob:D \\b"]},"n":"infix:<~|>"},{"m":1,"k":"s","n":"infix:<~|>","s":{"r":"Str:D","p":["Str:D \\a","Str:D \\b"]}},{"k":"s","m":1,"s":{"r":"str","p":["str $a","str $b"]},"n":"infix:<~|>"},{"m":[{"s":{"p":["$ex","*%_"],"r":"Mu"},"n":"process","m":0,"k":"m"},{"s":{"p":["@auto","%init","*%_"],"r":"Mu"},"n":"BUILDALL","k":"s","m":0}],"k":"c","b":"A","t":"Exceptions::JSON","n":"Exceptions::JSON"},{"k":"v","n":"&set","t":"Sub+{is-pure}"},{"k":"s","m":1,"n":"set","s":{"p":[],"r":"Mu"}},{"k":"s","m":1,"n":"set","s":{"p":["*@a"],"r":"Set:D"}},{"t":"Semaphore","n":"Semaphore","d":"TITLE\nclass Semaphore\n\nSUBTITLE\nControl access to shared resources by multiple threads\n\n    class Semaphore { }\n\nProtect your shared code, data or device access using semaphores. An\nexample is a printer manager managing a pool of printers without the need\nof storing print jobs when all printers are occupied. The next job is just\nblocked until a printer becomes available.\n\n    class print-manager {\n      has Array $!printers;\n      has Semaphore $!print-control;\n\n      method BUILD( Int:D :$nbr-printers ) {\n        for ^$nbr-printers -> $pc {\n          $!printers[$pc] = { :name{\"printer-$pc\"} };\n        }\n\n        $!print-control .= new($nbr-printers);\n      }\n\n      method find-available-printer-and-print-it($job) { say \"Is printed!\"; }\n\n      method print( $print-job ) {\n        $!print-control.acquire;\n\n        self.find-available-printer-and-print-it($print-job);\n\n        $!print-control.release;\n      }\n    }\n\nAnother example is a protection around code updating sensitive data. In\nsuch a case the semaphore is typically initialized to 1.\n\nIt is important to have a release on every exit of your program! While this\nis obvious, it is easy to fall in traps such as throwing an exception\ncaused by some event. When the program dies there is no problem. When the\nexception is caught your program might eventually come back to the acquire\nmethod and will hang indefinitely.\n\n","b":"A","m":[{"n":"new","s":{"p":["int $permits","*%_"],"r":"Mu"},"k":"m","m":0},{"k":"m","m":0,"n":"acquire","s":{"r":"Mu","p":["*%_"]}},{"m":0,"k":"m","s":{"p":["*%_"],"r":"Bool:D"},"n":"try_acquire"},{"m":0,"k":"m","s":{"r":"Mu","p":["*%_"]},"n":"release"},{"m":0,"k":"s","s":{"p":["@auto","%init","*%_"],"r":"Mu"},"n":"BUILDALL"}],"k":"c"},{"k":"v","t":"Sub","n":"&fail"},{"n":"fail","s":{"p":[],"r":"Nil"},"k":"s","m":1},{"k":"s","m":1,"s":{"r":"Nil","p":["Exception:U $e"]},"n":"fail"},{"k":"s","m":1,"s":{"p":["$payload"],"r":"Nil"},"n":"fail"},{"n":"fail","s":{"r":"Nil","p":["|cap is raw (*@msg)"]},"m":1,"k":"s"},{"k":"s","m":1,"s":{"r":"Nil","p":["Failure:U $f"]},"n":"fail"},{"s":{"p":["Failure:D $fail"],"r":"Nil"},"n":"fail","m":1,"k":"s"},{"k":"v","n":"&pick","t":"Sub"},{"m":1,"k":"s","n":"pick","s":{"r":"Mu","p":["$n","+\\values is raw"]}},{"t":"Sub+{is-pure}+{Precedence}","n":"&infix:<==>","k":"v"},{"k":"s","m":1,"n":"infix:<==>","s":{"p":["$?"],"r":"Mu"}},{"n":"infix:<==>","s":{"p":["\\a","\\b"],"r":"Mu"},"m":1,"k":"s"},{"m":1,"k":"s","s":{"p":["Real \\a","Real \\b"],"r":"Mu"},"n":"infix:<==>"},{"s":{"p":["Int:D \\a","Int:D \\b"],"r":"Bool:D"},"n":"infix:<==>","m":1,"k":"s"},{"n":"infix:<==>","s":{"p":["int $a","int $b"],"r":"Bool:D"},"m":1,"k":"s"},{"n":"infix:<==>","s":{"p":["Num:D \\a","Num:D \\b"],"r":"Bool:D"},"k":"s","m":1},{"k":"s","m":1,"n":"infix:<==>","s":{"r":"Bool:D","p":["num $a","num $b"]}},{"n":"infix:<==>","s":{"r":"Bool:D","p":["Rational:D \\a","Rational:D \\b"]},"m":1,"k":"s"},{"k":"s","m":1,"n":"infix:<==>","s":{"r":"Bool:D","p":["Rational:D \\a","Int:D \\b"]}},{"n":"infix:<==>","s":{"r":"Bool:D","p":["Int:D \\a","Rational:D \\b"]},"m":1,"k":"s"},{"k":"s","m":1,"s":{"p":["Complex:D \\a","Complex:D \\b"],"r":"Bool:D"},"n":"infix:<==>"},{"s":{"p":["Complex:D \\a","Num(Real) \\b"],"r":"Bool:D"},"n":"infix:<==>","m":1,"k":"s"},{"k":"s","m":1,"n":"infix:<==>","s":{"r":"Bool:D","p":["Num(Real) \\a","Complex:D \\b"]}},{"n":"infix:<==>","s":{"p":["Instant:D $a","Instant:D $b"],"r":"Bool:D"},"m":1,"k":"s"},{"s":{"r":"Bool:D","p":["DateTime:D \\a","DateTime:D \\b"]},"n":"infix:<==>","k":"s","m":1},{"m":1,"k":"s","s":{"p":["Date:D $a","Date:D $b"],"r":"Bool:D"},"n":"infix:<==>"},{"k":"s","m":1,"s":{"r":"Mu","p":["Version:D \\a","Version:D \\b"]},"n":"infix:<==>"},{"n":"&infix:<=~=>","t":"Sub","k":"v"},{"n":"infix:<=~=>","s":{"r":"Mu","p":["$?"]},"k":"s","m":1},{"n":"infix:<=~=>","s":{"p":["\\a","\\b",":$tolerance = { ... }"],"r":"Mu"},"m":1,"k":"s"},{"k":"s","m":1,"s":{"r":"Mu","p":["Inf","Inf"]},"n":"infix:<≅>"},{"m":1,"k":"s","s":{"r":"Mu","p":["-Inf","-Inf"]},"n":"infix:<≅>"},{"n":"infix:<≅>","s":{"p":["Complex:D \\a","Complex:D \\b"],"r":"Bool:D"},"m":1,"k":"s"},{"m":1,"k":"s","n":"infix:<≅>","s":{"r":"Bool:D","p":["Complex:D \\a","Num(Real) \\b"]}},{"s":{"p":["Num(Real) \\a","Complex:D \\b"],"r":"Bool:D"},"n":"infix:<≅>","k":"s","m":1},{"t":"RatStr","n":"RatStr","d":"TITLE\nclass RatStr\n\nSUBTITLE\nDual value rational number and string\n\n    class RatStr is Rat is Str {}\n\nThe dual value types (often referred to as allomorphs) allow for the\nrepresentation of a value as both a string and a numeric type. Typically\nthey will be created for you when the context is \"stringy\" but they can be\ndetermined to be numbers, such as in some quoting constructs:\n\n    my $f = <42.1>; say $f.^name; # OUTPUT: «RatStr␤»\n\nAs a subclass of both Rat and Str, a RatStr will be accepted where either\nis expected. However, RatStr does not share object identity with Rat- or\nStr-only variants:\n\n    my $rat-str = <42.1>;\n    my Rat $rat = $rat-str; # OK!\n    my Str $str = $rat-str; # OK!\n    say 42.1 ∈ <42.1  55  1>; # False; ∈ operator cares about object identity\n\n","m":[{"k":"m","m":0,"n":"new","s":{"p":["Rat $r","Str $s","*%_"],"r":"Mu"}},{"s":{"p":["*%_"],"r":"Rat:D"},"n":"succ","k":"m","m":0},{"s":{"r":"Rat:D","p":["*%_"]},"n":"pred","m":0,"k":"m"},{"m":0,"k":"m","n":"Capture","s":{"p":["*%_"],"r":"Mu"}},{"s":{"p":["*%_"],"r":"Mu"},"n":"Rat","m":0,"k":"m"},{"k":"m","m":1,"s":{"r":"Mu","p":["\\topic","*%_"]},"n":"ACCEPTS"},{"n":"ACCEPTS","s":{"p":["Mu:U \\topic","*%_"],"r":"Mu"},"m":1,"k":"m"},{"k":"m","m":1,"n":"ACCEPTS","s":{"r":"Mu","p":["Mu:D \\a","*%_"]}},{"m":1,"k":"m","n":"ACCEPTS","s":{"p":["Mu:U $","*%_"],"r":"Bool"}},{"m":1,"k":"m","s":{"p":["\\topic","*%_"],"r":"Bool:D"},"n":"ACCEPTS"},{"m":1,"k":"m","s":{"r":"Mu","p":["Any:D \\a","*%_"]},"n":"ACCEPTS"},{"m":1,"k":"m","n":"ACCEPTS","s":{"r":"Mu","p":["Any:D \\a","*%_"]}},{"n":"Numeric","s":{"p":["*%_"],"r":"Mu"},"k":"m","m":1},{"k":"m","m":1,"s":{"p":["*%_"],"r":"Mu"},"n":"Numeric"},{"m":1,"k":"m","n":"Numeric","s":{"p":["*%_"],"r":"Mu"}},{"k":"m","m":1,"n":"Numeric","s":{"p":["*%_"],"r":"Mu"}},{"m":1,"k":"m","s":{"r":"Mu","p":["*%_"]},"n":"Numeric"},{"m":1,"k":"m","s":{"r":"Mu","p":["*%_"]},"n":"Real"},{"n":"Real","s":{"p":["*%_"],"r":"Mu"},"m":1,"k":"m"},{"m":1,"k":"m","s":{"r":"Mu","p":["*%_"]},"n":"Real"},{"k":"m","m":1,"s":{"r":"Mu","p":["*%_"]},"n":"Real"},{"n":"Real","s":{"r":"Mu","p":["*%_"]},"m":1,"k":"m"},{"k":"m","m":1,"n":"Real","s":{"r":"Mu","p":["*%_"]}},{"s":{"p":["*%_"],"r":"Mu"},"n":"Str","m":1,"k":"m"},{"s":{"r":"Mu","p":["*%_"]},"n":"Str","m":1,"k":"m"},{"n":"Str","s":{"p":["*%_"],"r":"Str:D"},"m":1,"k":"m"},{"k":"m","m":1,"s":{"r":"Mu","p":["*%_"]},"n":"Str"},{"m":1,"k":"m","n":"Str","s":{"p":["*%_"],"r":"Mu"}},{"m":1,"k":"m","n":"perl","s":{"p":["*%_"],"r":"Mu"}},{"m":1,"k":"m","s":{"p":["*%_"],"r":"Mu"},"n":"perl"},{"s":{"r":"Str:D","p":["*%_"]},"n":"perl","m":1,"k":"m"},{"k":"m","m":1,"s":{"r":"Mu","p":["*%_"]},"n":"perl"},{"m":0,"k":"s","n":"BUILDALL","s":{"r":"Mu","p":["@auto","%init","*%_"]}},{"n":"polymod","s":{"r":"Mu","p":["+@mods","*%_"]},"k":"m","m":0},{"k":"m","m":0,"n":"FatRat","s":{"r":"FatRat:D","p":["Real $?","*%_"]}},{"s":{"p":["*%_"],"r":"Bool"},"n":"Bool","m":1,"k":"m"},{"s":{"r":"Mu","p":["*%_"]},"n":"Bool","k":"m","m":1},{"n":"Bool","s":{"r":"Mu","p":["*%_"]},"m":1,"k":"m"},{"s":{"r":"Mu","p":["*%_"]},"n":"Bool","k":"m","m":1},{"n":"acosec","s":{"r":"Mu","p":["*%_"]},"m":0,"k":"m"},{"s":{"p":["*%_"],"r":"Int:D"},"n":"round","k":"m","m":1},{"k":"m","m":1,"n":"round","s":{"r":"Mu","p":["*%_"]}},{"s":{"r":"Mu","p":["$scale","*%_"]},"n":"round","m":1,"k":"m"},{"n":"base-repeating","s":{"p":["$base = 10","*%_"],"r":"Mu"},"k":"m","m":0},{"n":"gist","s":{"p":["*%_"],"r":"Mu"},"m":1,"k":"m"},{"n":"gist","s":{"r":"Mu","p":["*%_"]},"m":1,"k":"m"},{"s":{"p":["*%_"],"r":"Mu"},"n":"gist","m":1,"k":"m"},{"n":"floor","s":{"p":["*%_"],"r":"Int:D"},"m":0,"k":"m"},{"s":{"p":["*%_"],"r":"Mu"},"n":"truncate","k":"m","m":0},{"s":{"p":["*%_"],"r":"Mu"},"n":"acos","m":0,"k":"m"},{"k":"m","m":0,"n":"sign","s":{"r":"Mu","p":["*%_"]}},{"s":{"r":"Mu","p":["*%_"]},"n":"acosh","m":0,"k":"m"},{"m":0,"k":"m","s":{"r":"Mu","p":["$base","$digits? is copy","*%_"]},"n":"base"},{"s":{"p":["*%_"],"r":"Int:D"},"n":"ceiling","k":"m","m":0},{"n":"acotanh","s":{"r":"Mu","p":["*%_"]},"m":0,"k":"m"},{"n":"sech","s":{"p":["*%_"],"r":"Mu"},"m":0,"k":"m"},{"s":{"p":["Cool $n","*%_"],"r":"Mu"},"n":"roots","k":"m","m":0},{"m":0,"k":"m","s":{"r":"Mu","p":["*%_"]},"n":"cotanh"},{"k":"m","m":0,"s":{"p":["Real $?","*%_"],"r":"Rat:D"},"n":"Rat"},{"n":"sqrt","s":{"p":["*%_"],"r":"Mu"},"m":0,"k":"m"},{"m":1,"k":"m","s":{"p":["*%_"],"r":"Mu"},"n":"DUMP"},{"m":1,"k":"m","s":{"p":[":$indent-step = 4",":%ctx","*%_"],"r":"Mu"},"n":"DUMP"},{"k":"m","m":1,"s":{"p":["*%_"],"r":"Mu"},"n":"DUMP"},{"s":{"r":"Mu","p":["*%_"]},"n":"abs","k":"m","m":0},{"k":"m","m":0,"s":{"p":["*%_"],"r":"Mu"},"n":"Complex"},{"m":1,"k":"m","n":"WHICH","s":{"p":["*%_"],"r":"ValueObjAt:D"}},{"n":"WHICH","s":{"r":"ObjAt:D","p":["*%_"]},"m":1,"k":"m"},{"s":{"p":["*%_"],"r":"ValueObjAt:D"},"n":"WHICH","k":"m","m":1},{"n":"asinh","s":{"p":["*%_"],"r":"Mu"},"m":0,"k":"m"},{"n":"cosh","s":{"p":["*%_"],"r":"Mu"},"m":0,"k":"m"},{"m":0,"k":"m","n":"narrow","s":{"p":["*%_"],"r":"Mu"}},{"m":0,"k":"m","n":"nude","s":{"r":"Mu","p":["*%_"]}},{"m":0,"k":"m","n":"pred","s":{"r":"Mu","p":["*%_"]}},{"s":{"r":"Mu","p":["*%_"]},"n":"sinh","m":0,"k":"m"},{"m":0,"k":"m","s":{"r":"Mu","p":["*%_"]},"n":"acotan"},{"s":{"r":"Mu","p":["*%_"]},"n":"Str","k":"m","m":1},{"n":"Str","s":{"p":["*%_"],"r":"Mu"},"k":"m","m":1},{"s":{"p":["*%_"],"r":"Str:D"},"n":"Str","m":1,"k":"m"},{"m":1,"k":"m","n":"Str","s":{"p":["*%_"],"r":"Mu"}},{"n":"asec","s":{"p":["*%_"],"r":"Mu"},"m":0,"k":"m"},{"n":"exp","s":{"r":"Mu","p":["*%_"]},"m":1,"k":"m"},{"k":"m","m":1,"n":"exp","s":{"r":"Mu","p":["$base","*%_"]}},{"k":"m","m":0,"n":"sec","s":{"p":["*%_"],"r":"Mu"}},{"n":"succ","s":{"p":["*%_"],"r":"Mu"},"k":"m","m":0},{"n":"Int","s":{"r":"Int:D","p":["*%_"]},"k":"m","m":0},{"k":"m","m":0,"n":"cosech","s":{"p":["*%_"],"r":"Mu"}},{"m":0,"k":"m","s":{"r":"Bool:D","p":["*%_"]},"n":"is-prime"},{"s":{"p":["*%_"],"r":"Mu"},"n":"atan","k":"m","m":0},{"k":"m","m":1,"n":"log","s":{"r":"Mu","p":["*%_"]}},{"s":{"r":"Mu","p":["Real $base","*%_"]},"n":"log","k":"m","m":1},{"k":"m","m":1,"s":{"r":"Mu","p":["Cool $base","*%_"]},"n":"log"},{"m":1,"k":"m","s":{"p":["Numeric $base","*%_"],"r":"Mu"},"n":"log"},{"s":{"p":["*%_"],"r":"Mu"},"n":"tanh","m":0,"k":"m"},{"n":"Bridge","s":{"r":"Mu","p":["*%_"]},"m":0,"k":"m"},{"s":{"r":"Mu","p":["*%_"]},"n":"perl","k":"m","m":1},{"k":"m","m":1,"n":"perl","s":{"r":"Mu","p":["*%_"]}},{"m":1,"k":"m","s":{"r":"Str:D","p":["*%_"]},"n":"perl"},{"s":{"r":"Mu","p":["*%_"]},"n":"Range","m":0,"k":"m"},{"s":{"r":"Mu","p":["*%_"]},"n":"acosech","m":0,"k":"m"},{"m":0,"k":"m","s":{"r":"Mu","p":["*%_"]},"n":"norm"},{"m":0,"k":"m","s":{"p":["*%_"],"r":"Mu"},"n":"asech"},{"k":"m","m":1,"n":"Numeric","s":{"p":["*%_"],"r":"Mu"}},{"s":{"r":"Mu","p":["*%_"]},"n":"Numeric","k":"m","m":1},{"n":"Numeric","s":{"p":["*%_"],"r":"Mu"},"m":1,"k":"m"},{"n":"unpolar","s":{"r":"Mu","p":["Real $angle","*%_"]},"k":"m","m":0},{"m":0,"k":"m","n":"tan","s":{"r":"Mu","p":["*%_"]}},{"s":{"r":"Mu","p":["*%_"]},"n":"Real","k":"m","m":1},{"k":"m","m":1,"n":"Real","s":{"r":"Mu","p":["*%_"]}},{"s":{"r":"Mu","p":["*%_"]},"n":"Real","m":1,"k":"m"},{"k":"m","m":1,"n":"Real","s":{"p":["*%_"],"r":"Mu"}},{"k":"m","m":0,"n":"denominator","s":{"r":"Mu","p":["*%_"]}},{"n":"ACCEPTS","s":{"r":"Mu","p":["\\topic","*%_"]},"k":"m","m":1},{"n":"ACCEPTS","s":{"p":["Mu:U \\topic","*%_"],"r":"Mu"},"k":"m","m":1},{"s":{"p":["Mu:D \\a","*%_"],"r":"Mu"},"n":"ACCEPTS","m":1,"k":"m"},{"n":"ACCEPTS","s":{"r":"Bool","p":["Mu:U $","*%_"]},"m":1,"k":"m"},{"n":"ACCEPTS","s":{"p":["\\topic","*%_"],"r":"Bool:D"},"m":1,"k":"m"},{"n":"ACCEPTS","s":{"r":"Mu","p":["Any:D \\a","*%_"]},"m":1,"k":"m"},{"m":0,"k":"m","s":{"r":"Mu","p":["*%_"]},"n":"sin"},{"m":0,"k":"m","s":{"p":["*%_"],"r":"Mu"},"n":"rand"},{"m":0,"k":"m","n":"asin","s":{"p":["*%_"],"r":"Mu"}},{"m":0,"k":"m","n":"atanh","s":{"p":["*%_"],"r":"Mu"}},{"s":{"p":["*%_"],"r":"Mu"},"n":"cotan","m":0,"k":"m"},{"s":{"r":"Mu","p":["*%_"]},"n":"cos","m":0,"k":"m"},{"n":"log10","s":{"p":["*%_"],"r":"Mu"},"k":"m","m":0},{"n":"isNaN","s":{"p":["*%_"],"r":"Bool:D"},"k":"m","m":0},{"k":"m","m":0,"n":"numerator","s":{"r":"Mu","p":["*%_"]}},{"k":"m","m":1,"n":"atan2","s":{"p":["Real $x = 1e0","*%_"],"r":"Mu"}},{"k":"m","m":1,"n":"atan2","s":{"r":"Mu","p":["Cool $x = 1e0","*%_"]}},{"n":"Num","s":{"p":["*%_"],"r":"Num:D"},"m":0,"k":"m"},{"m":0,"k":"m","s":{"p":["*%_"],"r":"Mu"},"n":"conj"},{"s":{"p":["*%_"],"r":"Mu"},"n":"cosec","k":"m","m":0},{"s":{"p":["*%_"],"r":"Mu"},"n":"cis","k":"m","m":0},{"m":0,"k":"m","s":{"r":"Mu","p":["Int:D \\nu = 0","Int:D \\de = 1","*%_"]},"n":"new"},{"n":"BUILDALL","s":{"r":"Mu","p":["@auto","%init","*%_"]},"k":"s","m":0},{"k":"m","m":1,"n":"indent","s":{"r":"Mu","p":["$steps where { ... }","*%_"]}},{"s":{"p":["$steps where { ... }","*%_"],"r":"Mu"},"n":"indent","k":"m","m":1},{"n":"indent","s":{"p":["$steps where { ... }","*%_"],"r":"Mu"},"k":"m","m":1},{"s":{"p":["Whatever $steps","*%_"],"r":"Mu"},"n":"indent","m":1,"k":"m"},{"k":"m","m":0,"n":"wordcase","s":{"r":"Str:D","p":[":&filter = { ... }","Mu :$where = Bool::True","*%_"]}},{"n":"match","s":{"r":"Mu","p":["Cool:D $pattern","|c is raw"]},"k":"m","m":1},{"s":{"r":"Mu","p":["Regex:D $pattern",":continue(:$c)!","*%_"]},"n":"match","m":1,"k":"m"},{"m":1,"k":"m","s":{"p":["Regex:D $pattern",":pos(:$p)!","*%_"],"r":"Mu"},"n":"match"},{"s":{"p":["Regex:D $pattern",":global(:$g)!","*%_"],"r":"Mu"},"n":"match","m":1,"k":"m"},{"s":{"r":"Mu","p":["Regex:D $pattern",":overlap(:$ov)!","*%_"]},"n":"match","k":"m","m":1},{"m":1,"k":"m","s":{"p":["Regex:D $pattern",":exhaustive(:$ex)!","*%_"],"r":"Mu"},"n":"match"},{"m":1,"k":"m","s":{"r":"Mu","p":["Regex:D $pattern",":$x!","*%_"]},"n":"match"},{"n":"match","s":{"r":"Mu","p":["Regex:D $pattern",":$st!","*%_"]},"m":1,"k":"m"},{"n":"match","s":{"r":"Mu","p":["Regex:D $pattern",":$nd!","*%_"]},"m":1,"k":"m"},{"k":"m","m":1,"n":"match","s":{"r":"Mu","p":["Regex:D $pattern",":$rd!","*%_"]}},{"s":{"p":["Regex:D $pattern",":$th!","*%_"],"r":"Mu"},"n":"match","m":1,"k":"m"},{"k":"m","m":1,"n":"match","s":{"p":["Regex:D $pattern",":$nth!","*%_"],"r":"Mu"}},{"n":"match","s":{"p":["Regex:D $pattern",":$as!","*%_"],"r":"Mu"},"k":"m","m":1},{"m":1,"k":"m","n":"match","s":{"p":["Regex:D $pattern","*%_"],"r":"Mu"}},{"s":{"p":["*%_"],"r":"Bool"},"n":"Bool","m":1,"k":"m"},{"m":1,"k":"m","s":{"r":"Mu","p":["*%_"]},"n":"Bool"},{"n":"Bool","s":{"p":["*%_"],"r":"Bool:D"},"k":"m","m":1},{"k":"m","m":1,"s":{"p":["*%_"],"r":"Mu"},"n":"gist"},{"m":1,"k":"m","n":"gist","s":{"p":["*%_"],"r":"Mu"}},{"s":{"r":"Str:D","p":["*%_"]},"n":"gist","m":1,"k":"m"},{"n":"univals","s":{"r":"Mu","p":["*%_"]},"m":0,"k":"m"},{"s":{"r":"Int:D","p":[":$count!","*%_"]},"n":"lines","m":1,"k":"m"},{"k":"m","m":1,"s":{"p":["$limit","*%_"],"r":"Seq:D"},"n":"lines"},{"m":1,"k":"m","n":"lines","s":{"r":"Seq:D","p":["*%_"]}},{"n":"tclc","s":{"p":["*%_"],"r":"Str:D"},"m":1,"k":"m"},{"n":"tclc","s":{"r":"Str:D","p":["*%_"]},"k":"m","m":1},{"n":"subst-mutate","s":{"r":"Mu","p":["Any:D $matcher","$replacement",":ii(:$samecase)",":ss(:$samespace)",":mm(:$samemark)","*%options"]},"m":1,"k":"m"},{"k":"m","m":1,"n":"lc","s":{"p":["*%_"],"r":"Str:D"}},{"n":"lc","s":{"p":["*%_"],"r":"Str:D"},"m":1,"k":"m"},{"k":"m","m":0,"n":"WORDS_AUTODEREF","s":{"p":["*%_"],"r":"Mu"}},{"m":1,"k":"m","n":"uc","s":{"r":"Str:D","p":["*%_"]}},{"m":1,"k":"m","n":"uc","s":{"r":"Str:D","p":["*%_"]}},{"n":"DUMP","s":{"p":["*%_"],"r":"Mu"},"k":"m","m":1},{"s":{"p":[":$indent-step = 4",":%ctx","*%_"],"r":"Mu"},"n":"DUMP","m":1,"k":"m"},{"m":1,"k":"m","n":"DUMP","s":{"p":["*%_"],"r":"Str:D"}},{"k":"m","m":0,"s":{"r":"Str:D","p":["*%_"]},"n":"trim"},{"s":{"p":["*%_"],"r":"Mu"},"n":"WHY","k":"m","m":1},{"k":"m","m":1,"s":{"p":["*%_"],"r":"Int"},"n":"WHY"},{"m":1,"k":"m","s":{"p":["*%_"],"r":"Int:D"},"n":"chars"},{"k":"m","m":1,"n":"chars","s":{"r":"Int:D","p":["*%_"]}},{"m":0,"k":"m","s":{"p":["*%_"],"r":"Str:D"},"n":"parse-names"},{"k":"m","m":1,"n":"WHICH","s":{"p":["*%_"],"r":"ValueObjAt:D"}},{"m":1,"k":"m","n":"WHICH","s":{"r":"ObjAt:D","p":["*%_"]}},{"m":1,"k":"m","s":{"p":["*%_"],"r":"ValueObjAt:D"},"n":"WHICH"},{"k":"m","m":1,"s":{"p":["*%_"],"r":"Str:D"},"n":"flip"},{"m":1,"k":"m","s":{"p":["*%_"],"r":"Str:D"},"n":"flip"},{"k":"m","m":1,"s":{"p":["*%_"],"r":"Mu"},"n":"ords"},{"k":"m","m":1,"s":{"p":["*%_"],"r":"Mu"},"n":"ords"},{"k":"m","m":1,"n":"index","s":{"r":"Int:D","p":["Cool:D $needle","*%_"]}},{"n":"index","s":{"p":["Str:D $needle","*%_"],"r":"Int:D"},"m":1,"k":"m"},{"n":"index","s":{"p":["Cool:D $needle","Cool:D $pos","*%_"],"r":"Int:D"},"m":1,"k":"m"},{"n":"index","s":{"r":"Int:D","p":["Str:D $needle","Int:D $pos","*%_"]},"m":1,"k":"m"},{"n":"words","s":{"p":["$limit","*%_"],"r":"Seq:D"},"k":"m","m":1},{"k":"m","m":1,"n":"words","s":{"p":["*%_"],"r":"Seq:D"}},{"k":"m","m":0,"n":"uniparse","s":{"p":["*%_"],"r":"Str:D"}},{"n":"NFKC","s":{"p":["*%_"],"r":"NFKC:D"},"k":"m","m":0},{"k":"m","m":0,"s":{"r":"Str:D","p":["*%_"]},"n":"trim-leading"},{"s":{"p":["Pair:D \\what","*%n"],"r":"Str:D"},"n":"trans","m":1,"k":"m"},{"n":"trans","s":{"r":"Str:D","p":["*@changes",":c(:$complement)",":s(:$squash)",":d(:$delete)","*%_"]},"k":"m","m":1},{"s":{"p":["*%_"],"r":"Str:D"},"n":"pred","m":0,"k":"m"},{"m":1,"k":"m","n":"split","s":{"p":["Regex:D $pat","$limit is copy = Inf",":$v is copy",":$k",":$kv",":$p",":$skip-empty","*%_"],"r":"Seq:D"}},{"n":"split","s":{"p":["Str(Cool) $match",":$v is copy",":$k",":$kv",":$p",":$skip-empty","*%_"],"r":"Seq:D"},"k":"m","m":1},{"s":{"r":"Mu","p":["Str(Cool) $match","$limit is copy = Inf",":$v is copy",":$k",":$kv",":$p",":$skip-empty","*%_"]},"n":"split","k":"m","m":1},{"s":{"p":["@needles","$parts is copy = Inf",":$v is copy",":$k",":$kv",":$p",":$skip-empty","*%_"],"r":"Seq:D"},"n":"split","k":"m","m":1},{"n":"trim-trailing","s":{"r":"Str:D","p":["*%_"]},"m":0,"k":"m"},{"n":"Str","s":{"p":["*%_"],"r":"Mu"},"m":1,"k":"m"},{"k":"m","m":1,"s":{"r":"Mu","p":["*%_"]},"n":"Str"},{"s":{"p":["*%_"],"r":"Str:D"},"n":"Str","k":"m","m":1},{"m":0,"k":"m","n":"Capture","s":{"p":["*%_"],"r":"Mu"}},{"m":0,"k":"m","s":{"r":"Int:D","p":["*%_"]},"n":"Int"},{"k":"m","m":0,"s":{"p":["Str:D $pattern","&filter?","Bool :$samespace","*%_"],"r":"Mu"},"n":"word-by-word"},{"k":"m","m":1,"n":"Stringy","s":{"p":["*%_"],"r":"Mu"}},{"s":{"p":["*%_"],"r":"Mu"},"n":"Stringy","m":1,"k":"m"},{"s":{"r":"Str:D","p":["*%_"]},"n":"Stringy","k":"m","m":1},{"n":"chop","s":{"p":["*%_"],"r":"Mu"},"k":"m","m":1},{"n":"chop","s":{"p":["$n","*%_"],"r":"Mu"},"k":"m","m":1},{"k":"m","m":1,"s":{"p":["*%_"],"r":"Str:D"},"n":"chop"},{"m":1,"k":"m","s":{"r":"Str:D","p":["$chopping","*%_"]},"n":"chop"},{"s":{"p":["Cool:D $suffix","*%_"],"r":"Bool:D"},"n":"ends-with","k":"m","m":1},{"n":"ends-with","s":{"r":"Bool:D","p":["Str:D $suffix","*%_"]},"k":"m","m":1},{"k":"m","m":0,"n":"succ","s":{"p":["*%_"],"r":"Str:D"}},{"m":0,"k":"m","s":{"r":"Str:D","p":["Str:D $pattern","*%_"]},"n":"samemark"},{"n":"NFC","s":{"r":"NFC:D","p":["*%_"]},"k":"m","m":0},{"m":1,"k":"m","n":"comb","s":{"p":["*%_"],"r":"Seq:D"}},{"s":{"p":["Int:D $size is copy","$limit = *","*%_"],"r":"Seq:D"},"n":"comb","m":1,"k":"m"},{"s":{"r":"Seq:D","p":["Str $pat","*%_"]},"n":"comb","k":"m","m":1},{"m":1,"k":"m","s":{"r":"Seq:D","p":["Str $pat","$limit","*%_"]},"n":"comb"},{"k":"m","m":1,"s":{"r":"Seq:D","p":["Regex:D $pattern",":$match","*%_"]},"n":"comb"},{"k":"m","m":1,"n":"comb","s":{"p":["Regex:D $pattern","$limit",":$match","*%_"],"r":"Seq:D"}},{"m":1,"k":"m","s":{"p":["Cool:D $needle","*%pars"],"r":"Mu"},"n":"indices"},{"k":"m","m":1,"n":"indices","s":{"p":["Str:D $needle",":$overlap","*%_"],"r":"Mu"}},{"n":"indices","s":{"p":["Cool:D $needle","Cool:D $start","*%pars"],"r":"Mu"},"m":1,"k":"m"},{"m":1,"k":"m","n":"indices","s":{"r":"Mu","p":["Str:D $needle","Int:D $start",":$overlap","*%_"]}},{"m":1,"k":"m","s":{"r":"Bool:D","p":["Cool:D $needle","*%_"]},"n":"starts-with"},{"s":{"p":["Str:D $needle","*%_"],"r":"Bool:D"},"n":"starts-with","m":1,"k":"m"},{"k":"m","m":0,"n":"NFKD","s":{"r":"NFKD:D","p":["*%_"]}},{"k":"m","m":0,"s":{"p":["*%_"],"r":"NFD:D"},"n":"NFD"},{"s":{"r":"Int:D","p":["*%_"]},"n":"ord","k":"m","m":1},{"s":{"p":["*%_"],"r":"Nil"},"n":"ord","m":1,"k":"m"},{"n":"fc","s":{"p":["*%_"],"r":"Str:D"},"k":"m","m":1},{"s":{"r":"Str:D","p":["*%_"]},"n":"fc","m":1,"k":"m"},{"k":"m","m":1,"s":{"r":"Mu","p":["*%_"]},"n":"perl"},{"n":"perl","s":{"r":"Mu","p":["*%_"]},"m":1,"k":"m"},{"k":"m","m":1,"s":{"r":"Str:D","p":["*%_"]},"n":"perl"},{"s":{"r":"Mu","p":["*%_"]},"n":"Numeric","k":"m","m":1},{"m":1,"k":"m","s":{"p":["*%_"],"r":"Numeric:D"},"n":"Numeric"},{"m":1,"k":"m","s":{"p":["*%_"],"r":"Int:D"},"n":"codes"},{"n":"codes","s":{"r":"Int:D","p":["*%_"]},"k":"m","m":1},{"k":"m","m":0,"s":{"p":["Int:D $radix","*%_"],"r":"Numeric:D"},"n":"parse-base"},{"m":1,"k":"m","s":{"p":["\\from","*%_"],"r":"Mu"},"n":"substr"},{"n":"substr","s":{"r":"Mu","p":["\\from","\\chars","*%_"]},"k":"m","m":1},{"m":1,"k":"m","n":"substr","s":{"p":["Int:D \\start","*%_"],"r":"Str:D"}},{"s":{"r":"Str:D","p":["Int:D \\start","Int:D \\want","*%_"]},"n":"substr","k":"m","m":1},{"k":"m","m":1,"s":{"p":["Int:D \\start","Callable:D \\want","*%_"],"r":"Str:D"},"n":"substr"},{"m":1,"k":"m","n":"substr","s":{"p":["Callable:D \\start","*%_"],"r":"Str:D"}},{"k":"m","m":1,"s":{"r":"Str:D","p":["Callable:D \\start","Int:D \\want","*%_"]},"n":"substr"},{"s":{"p":["Callable:D \\start","Callable:D \\want","*%_"],"r":"Str:D"},"n":"substr","m":1,"k":"m"},{"n":"substr","s":{"r":"Str:D","p":["Range:D \\start","*%_"]},"k":"m","m":1},{"n":"substr","s":{"p":["Regex:D $","$","*%_"],"r":"Mu"},"k":"m","m":1},{"k":"m","m":1,"n":"substr","s":{"p":["\\start","*%_"],"r":"Str:D"}},{"s":{"p":["\\from","\\want","*%_"],"r":"Str:D"},"n":"substr","m":1,"k":"m"},{"k":"m","m":0,"n":"unival","s":{"r":"Mu","p":["*%_"]}},{"n":"encode","s":{"p":["Str:D $encoding = \"utf8\"",":$replacement",":$translate-nl = Bool::False",":$strict","*%_"],"r":"Blob:D"},"k":"m","m":1},{"k":"m","m":0,"n":"samecase","s":{"r":"Str:D","p":["Str:D $pattern","*%_"]}},{"n":"substr-eq","s":{"r":"Bool:D","p":["Cool:D $needle","*%_"]},"k":"m","m":1},{"s":{"p":["Str:D $needle","*%_"],"r":"Bool:D"},"n":"substr-eq","m":1,"k":"m"},{"k":"m","m":1,"s":{"p":["Cool:D $needle","Int:D $pos","*%_"],"r":"Bool:D"},"n":"substr-eq"},{"n":"substr-eq","s":{"p":["Str:D $needle","Int:D $pos","*%_"],"r":"Bool:D"},"m":1,"k":"m"},{"m":1,"k":"m","n":"substr-rw","s":{"p":["*%_"],"r":"Mu"}},{"m":1,"k":"m","n":"substr-rw","s":{"r":"Mu","p":["\\from","*%_"]}},{"s":{"p":["\\from","\\chars","*%_"],"r":"Mu"},"n":"substr-rw","m":1,"k":"m"},{"n":"substr-rw","s":{"r":"Mu","p":["\\start","$want = Inf","*%_"]},"m":1,"k":"m"},{"m":1,"k":"m","s":{"r":"Mu","p":["\\topic","*%_"]},"n":"ACCEPTS"},{"s":{"p":["Mu:U \\topic","*%_"],"r":"Mu"},"n":"ACCEPTS","k":"m","m":1},{"k":"m","m":1,"s":{"p":["Mu:D \\a","*%_"],"r":"Mu"},"n":"ACCEPTS"},{"m":1,"k":"m","n":"ACCEPTS","s":{"r":"Bool","p":["Mu:U $","*%_"]}},{"k":"m","m":1,"s":{"p":["\\topic","*%_"],"r":"Bool:D"},"n":"ACCEPTS"},{"n":"ACCEPTS","s":{"p":["Str:D \\other","*%_"],"r":"Bool:D"},"m":1,"k":"m"},{"k":"m","m":1,"s":{"r":"Bool:D","p":["Any:D \\other","*%_"]},"n":"ACCEPTS"},{"m":1,"k":"m","s":{"p":["Cool:D $needle","*%_"],"r":"Bool:D"},"n":"contains"},{"n":"contains","s":{"p":["Str:D $needle","*%_"],"r":"Bool:D"},"m":1,"k":"m"},{"n":"contains","s":{"r":"Bool:D","p":["Cool:D $needle","Int(Cool:D) $pos","*%_"]},"m":1,"k":"m"},{"k":"m","m":1,"s":{"r":"Bool:D","p":["Str:D $needle","Int:D $pos","*%_"]},"n":"contains"},{"k":"m","m":1,"n":"rindex","s":{"p":["Cool:D $needle","*%_"],"r":"Int:D"}},{"m":1,"k":"m","n":"rindex","s":{"r":"Int:D","p":["Str:D $needle","*%_"]}},{"n":"rindex","s":{"p":["Cool:D $needle","Cool:D $pos","*%_"],"r":"Int:D"},"k":"m","m":1},{"s":{"p":["Str:D $needle","Int:D $pos","*%_"],"r":"Int:D"},"n":"rindex","m":1,"k":"m"},{"m":1,"k":"m","s":{"p":["*%_"],"r":"Str:D"},"n":"tc"},{"m":1,"k":"m","s":{"r":"Str:D","p":["*%_"]},"n":"tc"},{"s":{"p":["*%_"],"r":"Num:D"},"n":"Num","m":0,"k":"m"},{"n":"chomp","s":{"r":"Str:D","p":["*%_"]},"k":"m","m":0},{"n":"samespace","s":{"r":"Mu","p":["Str:D $pattern","*%_"]},"k":"m","m":0},{"m":1,"k":"m","s":{"r":"Mu","p":["Str:D $original","Str:D $final","*%options"]},"n":"subst"},{"k":"m","m":1,"n":"subst","s":{"r":"Mu","p":["$matcher","$replacement","*%options"]}},{"k":"s","m":0,"n":"BUILDALL","s":{"p":["@auto","%init","*%_"],"r":"Mu"}},{"s":{"r":"Nil","p":[":$value = \"\"","*%_"]},"n":"BUILD","k":"s","m":0}],"k":"c","a":[{"n":"$.numerator","t":"Int","k":"v"},{"n":"$.denominator","t":"Int","k":"v"}],"b":"C"},{"n":"τ","t":"Num","k":"c","m":[{"n":"Capture","s":{"p":["*%_"],"r":"Mu"},"m":0,"k":"m"},{"n":"Num","s":{"p":["*%_"],"r":"Mu"},"k":"m","m":0},{"k":"m","m":0,"n":"Bridge","s":{"p":["*%_"],"r":"Mu"}},{"m":0,"k":"m","s":{"p":["*%_"],"r":"Mu"},"n":"Range"},{"m":0,"k":"m","s":{"r":"Mu","p":["*%_"]},"n":"Int"},{"k":"m","m":0,"s":{"r":"Mu","p":["Real $epsilon = 1e-06",":$fat","*%_"]},"n":"Rat"},{"k":"m","m":0,"s":{"p":["Real $epsilon = 1e-06","*%_"],"r":"Mu"},"n":"FatRat"},{"m":0,"k":"m","n":"succ","s":{"p":["*%_"],"r":"Mu"}},{"s":{"p":["*%_"],"r":"Mu"},"n":"pred","k":"m","m":0},{"s":{"p":["*%_"],"r":"Mu"},"n":"isNaN","m":0,"k":"m"},{"s":{"r":"Mu","p":["*%_"]},"n":"abs","m":0,"k":"m"},{"s":{"r":"Mu","p":["*%_"]},"n":"log","m":1,"k":"m"},{"m":1,"k":"m","s":{"r":"Mu","p":["Num \\base","*%_"]},"n":"log"},{"n":"log","s":{"r":"Mu","p":["*%_"]},"m":1,"k":"m"},{"s":{"p":["Real $base","*%_"],"r":"Mu"},"n":"log","k":"m","m":1},{"s":{"p":["Cool $base","*%_"],"r":"Mu"},"n":"log","m":1,"k":"m"},{"s":{"p":["Numeric $base","*%_"],"r":"Mu"},"n":"log","m":1,"k":"m"},{"m":1,"k":"m","s":{"p":["*%_"],"r":"Mu"},"n":"sqrt"},{"s":{"r":"Mu","p":["*%_"]},"n":"rand","k":"m","m":0},{"m":0,"k":"m","n":"ceiling","s":{"p":["*%_"],"r":"Mu"}},{"m":0,"k":"m","s":{"r":"Mu","p":["*%_"]},"n":"floor"},{"k":"m","m":1,"s":{"r":"Mu","p":["*%_"]},"n":"sin"},{"m":1,"k":"m","s":{"r":"Mu","p":["*%_"]},"n":"asin"},{"k":"m","m":1,"s":{"p":["*%_"],"r":"Mu"},"n":"cos"},{"m":1,"k":"m","s":{"p":["*%_"],"r":"Mu"},"n":"acos"},{"s":{"r":"Mu","p":["*%_"]},"n":"tan","k":"m","m":1},{"s":{"p":["*%_"],"r":"Mu"},"n":"atan","k":"m","m":1},{"n":"sec","s":{"r":"Mu","p":["*%_"]},"m":1,"k":"m"},{"n":"asec","s":{"p":["*%_"],"r":"Mu"},"k":"m","m":1},{"k":"m","m":0,"s":{"p":["*%_"],"r":"Mu"},"n":"cosec"},{"n":"acosec","s":{"p":["*%_"],"r":"Mu"},"k":"m","m":0},{"n":"cotan","s":{"p":["*%_"],"r":"Mu"},"m":0,"k":"m"},{"k":"m","m":0,"s":{"r":"Mu","p":["*%_"]},"n":"acotan"},{"m":1,"k":"m","s":{"r":"Mu","p":["*%_"]},"n":"sinh"},{"k":"m","m":1,"s":{"r":"Mu","p":["*%_"]},"n":"asinh"},{"n":"cosh","s":{"r":"Mu","p":["*%_"]},"m":1,"k":"m"},{"s":{"r":"Mu","p":["*%_"]},"n":"acosh","m":1,"k":"m"},{"m":1,"k":"m","n":"tanh","s":{"r":"Mu","p":["*%_"]}},{"k":"m","m":1,"s":{"p":["*%_"],"r":"Mu"},"n":"atanh"},{"s":{"r":"Mu","p":["*%_"]},"n":"atanh","k":"m","m":1},{"k":"m","m":1,"s":{"r":"Mu","p":["*%_"]},"n":"sech"},{"k":"m","m":1,"s":{"p":["*%_"],"r":"Mu"},"n":"asech"},{"m":1,"k":"m","s":{"p":["*%_"],"r":"Mu"},"n":"cosech"},{"s":{"p":["*%_"],"r":"Mu"},"n":"acosech","m":1,"k":"m"},{"k":"m","m":1,"n":"cotanh","s":{"p":["*%_"],"r":"Mu"}},{"m":1,"k":"m","n":"acotanh","s":{"r":"Mu","p":["*%_"]}},{"n":"is-prime","s":{"p":["*%_"],"r":"Bool:D"},"k":"m","m":0},{"s":{"p":["*%_"],"r":"Mu"},"n":"narrow","m":0,"k":"m"},{"n":"sign","s":{"p":["*%_"],"r":"Mu"},"k":"m","m":0},{"s":{"p":["*%_"],"r":"Mu"},"n":"conj","k":"m","m":0},{"n":"atan2","s":{"p":["Num:D $x = 1e0","*%_"],"r":"Mu"},"k":"m","m":1},{"s":{"p":["Real $x = 1e0","*%_"],"r":"Mu"},"n":"atan2","k":"m","m":1},{"k":"m","m":1,"n":"atan2","s":{"r":"Mu","p":["Cool $x = 1e0","*%_"]}},{"k":"m","m":1,"n":"round","s":{"p":["*%_"],"r":"Mu"}},{"s":{"p":["$scale","*%_"],"r":"Mu"},"n":"round","m":1,"k":"m"},{"n":"unpolar","s":{"p":["Real $angle","*%_"],"r":"Mu"},"k":"m","m":0},{"m":0,"k":"m","n":"cis","s":{"r":"Mu","p":["*%_"]}},{"m":0,"k":"m","s":{"r":"Mu","p":["*%_"]},"n":"Complex"},{"k":"m","m":1,"n":"exp","s":{"r":"Mu","p":["*%_"]}},{"k":"m","m":1,"n":"exp","s":{"r":"Mu","p":["*%_"]}},{"k":"m","m":1,"n":"exp","s":{"p":["$base","*%_"],"r":"Mu"}},{"m":0,"k":"m","n":"truncate","s":{"p":["*%_"],"r":"Mu"}},{"m":0,"k":"m","s":{"p":["+@mods","*%_"],"r":"Mu"},"n":"polymod"},{"n":"base","s":{"p":["Int:D $base","$digits? is copy","*%_"],"r":"Mu"},"k":"m","m":0},{"n":"log10","s":{"p":["*%_"],"r":"Mu"},"k":"m","m":0},{"m":0,"k":"m","n":"roots","s":{"p":["Cool $n","*%_"],"r":"Mu"}},{"m":1,"k":"m","n":"WHICH","s":{"r":"ValueObjAt:D","p":["*%_"]}},{"m":1,"k":"m","s":{"p":["*%_"],"r":"ObjAt:D"},"n":"WHICH"},{"n":"WHICH","s":{"r":"ValueObjAt:D","p":["*%_"]},"m":1,"k":"m"},{"n":"Bool","s":{"r":"Bool","p":["*%_"]},"k":"m","m":1},{"n":"Bool","s":{"r":"Mu","p":["*%_"]},"k":"m","m":1},{"m":1,"k":"m","n":"Bool","s":{"p":["*%_"],"r":"Mu"}},{"n":"Bool","s":{"r":"Mu","p":["*%_"]},"k":"m","m":1},{"k":"m","m":1,"n":"new","s":{"r":"Mu","p":["*%attrinit"]}},{"m":1,"k":"m","s":{"p":["$","*@","*%_"],"r":"Mu"},"n":"new"},{"s":{"r":"Mu","p":["*%_"]},"n":"new","m":1,"k":"m"},{"k":"m","m":1,"n":"new","s":{"r":"Mu","p":["$n","*%_"]}},{"k":"m","m":1,"s":{"r":"Mu","p":["*%_"]},"n":"perl"},{"s":{"r":"Mu","p":["*%_"]},"n":"perl","k":"m","m":1},{"n":"perl","s":{"p":["*%_"],"r":"Mu"},"m":1,"k":"m"},{"n":"Str","s":{"p":["*%_"],"r":"Mu"},"k":"m","m":1},{"k":"m","m":1,"s":{"p":["*%_"],"r":"Mu"},"n":"Str"},{"n":"Str","s":{"r":"Mu","p":["*%_"]},"k":"m","m":1},{"s":{"r":"Mu","p":["*%_"]},"n":"Str","k":"m","m":1},{"n":"Real","s":{"r":"Mu","p":["*%_"]},"k":"m","m":1},{"k":"m","m":1,"n":"Real","s":{"r":"Mu","p":["*%_"]}},{"m":1,"k":"m","n":"Real","s":{"r":"Mu","p":["*%_"]}},{"m":1,"k":"m","n":"Real","s":{"r":"Mu","p":["*%_"]}},{"k":"m","m":1,"s":{"p":["*%_"],"r":"Mu"},"n":"Numeric"},{"s":{"r":"Mu","p":["*%_"]},"n":"Numeric","k":"m","m":1},{"n":"Numeric","s":{"p":["*%_"],"r":"Mu"},"m":1,"k":"m"},{"m":1,"k":"m","n":"ACCEPTS","s":{"r":"Mu","p":["\\topic","*%_"]}},{"k":"m","m":1,"s":{"p":["Mu:U \\topic","*%_"],"r":"Mu"},"n":"ACCEPTS"},{"s":{"p":["Mu:D \\a","*%_"],"r":"Mu"},"n":"ACCEPTS","m":1,"k":"m"},{"k":"m","m":1,"n":"ACCEPTS","s":{"p":["Mu:U $","*%_"],"r":"Bool"}},{"m":1,"k":"m","s":{"r":"Bool:D","p":["\\topic","*%_"]},"n":"ACCEPTS"},{"n":"ACCEPTS","s":{"p":["Any:D \\a","*%_"],"r":"Mu"},"k":"m","m":1},{"s":{"r":"Mu","p":["*%_"]},"n":"gist","m":1,"k":"m"},{"n":"gist","s":{"r":"Mu","p":["*%_"]},"k":"m","m":1},{"n":"gist","s":{"p":["*%_"],"r":"Mu"},"m":1,"k":"m"},{"m":1,"k":"m","n":"DUMP","s":{"r":"Mu","p":["*%_"]}},{"s":{"r":"Mu","p":[":$indent-step = 4",":%ctx","*%_"]},"n":"DUMP","m":1,"k":"m"},{"m":1,"k":"m","n":"DUMP","s":{"p":["*%_"],"r":"Mu"}},{"m":0,"k":"s","n":"BUILDALL","s":{"p":["@auto","%init","*%_"],"r":"Mu"}}],"b":"C"},{"n":"&trim-trailing","t":"Sub","k":"v"},{"k":"s","m":1,"n":"trim-trailing","s":{"p":["Cool:D $s"],"r":"Str:D"}},{"n":"&gist","t":"Sub","k":"v"},{"n":"gist","s":{"r":"Mu","p":["|"]},"m":1,"k":"s"},{"b":"A","a":[{"n":"$.initial_threads","t":"Int","k":"v"},{"t":"Int","n":"$.max_threads","k":"v"},{"t":"Lock","n":"$!state-lock","k":"v"},{"t":"ThreadPoolScheduler::Queue","n":"$!general-queue","k":"v"},{"k":"v","n":"$!timer-queue","t":"ThreadPoolScheduler::Queue"},{"k":"v","t":"Mu","n":"$!general-workers"},{"t":"Mu","n":"$!timer-workers","k":"v"},{"k":"v","n":"$!affinity-workers","t":"Mu"},{"k":"v","n":"$!supervisor","t":"Thread"},{"k":"v","n":"&.uncaught_handler","t":"Callable"}],"k":"c","m":[{"s":{"p":["Int :initial_threads($!initial_threads) = 0","Int :max_threads($!max_threads) = { ... }","*%_"],"r":"Nil"},"n":"BUILD","k":"s","m":0},{"n":"queue","s":{"p":["Bool :$hint-time-sensitive",":$hint-affinity","*%_"],"r":"Mu"},"k":"m","m":0},{"m":1,"k":"m","s":{"p":["&code",":$every!",":$times = 1","*%_"],"r":"Mu"},"n":"cue"},{"k":"m","m":1,"s":{"r":"Mu","p":["&code",":$times!","*%_"]},"n":"cue"},{"s":{"p":["&code",":$at!","*%_"],"r":"Mu"},"n":"cue","k":"m","m":1},{"s":{"p":["&code",":$in!","*%_"],"r":"Mu"},"n":"cue","k":"m","m":1},{"k":"m","m":1,"s":{"r":"Nil","p":["&code",":&catch!","*%_"]},"n":"cue"},{"s":{"p":["&code","*%_"],"r":"Nil"},"n":"cue","m":1,"k":"m"},{"n":"loads","s":{"p":["*%_"],"r":"Mu"},"m":0,"k":"m"},{"n":"usage","s":{"r":"Mu","p":["*%_"]},"k":"m","m":1},{"s":{"p":["*%_"],"r":"Mu"},"n":"usage","m":1,"k":"m"},{"k":"m","m":0,"n":"handle_uncaught","s":{"p":["$exception","*%_"],"r":"Mu"}},{"m":0,"k":"m","n":"initial_threads","s":{"r":"Mu","p":["*%_"]}},{"k":"m","m":0,"s":{"p":["*%_"],"r":"Mu"},"n":"max_threads"},{"s":{"p":["*%_"],"r":"Mu"},"n":"uncaught_handler","m":0,"k":"m"},{"m":0,"k":"s","n":"BUILDALL","s":{"p":["@auto","%init","*%_"],"r":"Mu"}},{"k":"m","m":0,"s":{"p":["*%_"],"r":"Mu"},"n":"!affinity-queue"},{"n":"!CUE_DELAY_TIMES","s":{"r":"Mu","p":["&code","int $delay","int $times","%args","*%_"]},"k":"m","m":0},{"m":0,"k":"m","n":"!tweak-workers","s":{"p":["\\queue","\\worker-list","&add-worker","$cores","$per-core-util","*%_"],"r":"Mu"}},{"k":"m","m":0,"n":"!general-queue","s":{"p":["*%_"],"r":"Mu"}},{"n":"!maybe-start-supervisor","s":{"r":"Nil","p":["*%_"]},"m":0,"k":"m"},{"m":0,"k":"m","n":"!timer-queue","s":{"r":"Mu","p":["*%_"]}}],"d":"TITLE\nclass ThreadPoolScheduler\n\nSUBTITLE\nScheduler that distributes work among a pool of threads\n\n    class ThreadPoolScheduler does Scheduler {}\n\n\nThe ThreadPoolScheduler has a range of number of threads that it maintains,\nand it distributes work among those threads. When the upper limit of\nthreads isn't reached yet, and there is work pending, it spawns new threads\nto handle the work.\n\n","n":"ThreadPoolScheduler","t":"ThreadPoolScheduler"},{"b":"A","a":[{"k":"v","n":"$!queue","t":"Mu"}],"m":[{"k":"s","m":0,"n":"BUILD","s":{"p":[":$queue!","*%_"],"r":"Mu"}},{"n":"await","s":{"p":["Awaitable:D $a","*%_"],"r":"Mu"},"k":"m","m":0},{"n":"await-all","s":{"p":["Iterable:D \\i","*%_"],"r":"Mu"},"m":0,"k":"m"},{"n":"BUILDALL","s":{"p":["@auto","%init","*%_"],"r":"Mu"},"k":"s","m":0},{"k":"m","m":0,"n":"!do-await","s":{"r":"Mu","p":["Awaitable:D $a","*%_"]}},{"k":"m","m":0,"s":{"r":"Mu","p":["Iterable:D \\i","*%_"]},"n":"!do-await-all"}],"k":"c","n":"ThreadPoolScheduler::ThreadPoolAwaiter","t":"ThreadPoolScheduler::ThreadPoolAwaiter"},{"t":"Sub","n":"&cas","k":"v"},{"n":"cas","s":{"r":"Mu","p":["$target is rw","\\expected","\\value"]},"m":1,"k":"s"},{"s":{"p":["$target is rw","&code"],"r":"Mu"},"n":"cas","k":"s","m":1},{"n":"cas","s":{"p":["atomicint $target is rw","int $expected","int $value"],"r":"Mu"},"k":"s","m":1},{"s":{"p":["atomicint $target is rw","Int:D $expected","Int:D $value"],"r":"Mu"},"n":"cas","k":"s","m":1},{"n":"cas","s":{"p":["atomicint $target is rw","$expected","$value"],"r":"Mu"},"k":"s","m":1},{"s":{"p":["atomicint $target is rw","&code"],"r":"Mu"},"n":"cas","m":1,"k":"s"},{"k":"v","n":"&sprintf","t":"Sub"},{"n":"sprintf","s":{"p":["Cool:D $format","*@args"],"r":"Mu"},"k":"s","m":1},{"k":"v","t":"Sub+{Precedence}","n":"&infix:<coll>"},{"s":{"r":"Order:D","p":["Str:D \\a","Str:D \\b"]},"n":"infix:<coll>","m":1,"k":"s"},{"m":1,"k":"s","s":{"p":["Cool:D \\a","Cool:D \\b"],"r":"Order:D"},"n":"infix:<coll>"},{"s":{"p":["Pair:D \\a","Pair:D \\b"],"r":"Order:D"},"n":"infix:<coll>","k":"s","m":1},{"k":"e","t":"Bool","n":"True"},{"t":"Signal","n":"SIGTHR","k":"e"},{"n":"&infix:<⊅>","t":"Sub+{is-pure}+{Precedence}","k":"v"},{"s":{"r":"Bool:D","p":["\\a","\\b"]},"n":"infix:<⊅>","m":1,"k":"s"},{"k":"v","n":"&prefix:<~>","t":"Sub+{is-pure}+{Precedence}"},{"k":"s","m":1,"s":{"r":"Mu","p":["\\a"]},"n":"prefix:<~>"},{"k":"s","m":1,"s":{"r":"Mu","p":["int $a"]},"n":"prefix:<~>"},{"s":{"r":"Mu","p":["num $a"]},"n":"prefix:<~>","m":1,"k":"s"},{"k":"s","m":1,"n":"prefix:<~>","s":{"r":"Str:D","p":["Str:D \\a"]}},{"s":{"r":"str","p":["str $a"]},"n":"prefix:<~>","m":1,"k":"s"},{"k":"v","t":"Sub","n":"&cache"},{"m":1,"k":"s","n":"cache","s":{"p":["+@l"],"r":"Mu"}},{"k":"e","t":"ProtocolFamily","n":"ProtocolFamily"},{"t":"ProtocolFamily","n":"ProtocolFamily::PF_UNIX","k":"e"},{"t":"ProtocolFamily","n":"ProtocolFamily::PF_INET6","k":"e"},{"n":"ProtocolFamily::PF_INET","t":"ProtocolFamily","k":"e"},{"k":"e","n":"ProtocolFamily::PF_LOCAL","t":"ProtocolFamily"},{"n":"ProtocolFamily::PF_MAX","t":"ProtocolFamily","k":"e"},{"b":"A","a":[{"k":"v","n":"$.configuration","t":"HyperConfiguration"},{"n":"$!work-stage-head","t":"Rakudo::Internals::HyperWorkStage","k":"v"},{"n":"$!list","t":"Mu","k":"v"}],"m":[{"k":"s","m":0,"n":"BUILD","s":{"r":"Mu","p":[":configuration($!configuration)!",":work-stage-head($!work-stage-head)!","*%_"]}},{"k":"m","m":0,"s":{"p":["*%_"],"r":"Iterator"},"n":"iterator"},{"s":{"r":"Mu","p":["$matcher","*%options"]},"n":"grep","m":0,"k":"m"},{"s":{"r":"Mu","p":["$matcher","*%options"]},"n":"map","k":"m","m":0},{"m":0,"k":"m","s":{"r":"Mu","p":["*%_"]},"n":"invert"},{"s":{"p":["*%_"],"r":"Mu"},"n":"hyper","k":"m","m":0},{"n":"race","s":{"p":["*%_"],"r":"Mu"},"k":"m","m":0},{"s":{"r":"Bool","p":["*%_"]},"n":"is-lazy","k":"m","m":0},{"m":0,"k":"m","s":{"p":["*%_"],"r":"Nil"},"n":"sink"},{"m":0,"k":"m","s":{"p":["*%_"],"r":"Mu"},"n":"Numeric"},{"n":"fmt","s":{"r":"Mu","p":["|c is raw"]},"m":0,"k":"m"},{"s":{"p":["*%_"],"r":"Mu"},"n":"cache","m":0,"k":"m"},{"m":0,"k":"m","s":{"p":["*%_"],"r":"Mu"},"n":"item"},{"m":0,"k":"m","s":{"p":["*%_"],"r":"Mu"},"n":"flat"},{"m":0,"k":"m","n":"lazy-if","s":{"r":"Mu","p":["$flag","*%_"]}},{"m":0,"k":"m","s":{"p":["*%_"],"r":"Mu"},"n":"lazy"},{"m":1,"k":"m","s":{"r":"Mu","p":["*%_"]},"n":"serial"},{"n":"serial","s":{"r":"Mu","p":["*%_"]},"m":1,"k":"m"},{"s":{"r":"Mu","p":["*%_"]},"n":"Array","m":1,"k":"m"},{"m":1,"k":"m","n":"Array","s":{"r":"Mu","p":["*%_"]}},{"n":"List","s":{"r":"Mu","p":["*%_"]},"k":"m","m":1},{"s":{"p":["*%_"],"r":"Mu"},"n":"List","m":1,"k":"m"},{"n":"Slip","s":{"p":["*%_"],"r":"Mu"},"k":"m","m":1},{"s":{"r":"Mu","p":["*%_"]},"n":"Slip","k":"m","m":1},{"n":"Str","s":{"r":"Mu","p":["*%_"]},"k":"m","m":1},{"m":1,"k":"m","s":{"r":"Mu","p":["*%_"]},"n":"Str"},{"m":1,"k":"m","s":{"p":["*%_"],"r":"Mu"},"n":"Str"},{"n":"Stringy","s":{"p":["*%_"],"r":"Mu"},"k":"m","m":1},{"s":{"r":"Mu","p":["*%_"]},"n":"Stringy","m":1,"k":"m"},{"m":1,"k":"m","n":"Stringy","s":{"p":["*%_"],"r":"Mu"}},{"n":"AT-POS","s":{"r":"Mu","p":["int \\pos","*%_"]},"k":"m","m":1},{"m":1,"k":"m","s":{"r":"Mu","p":["Int:D \\pos","*%_"]},"n":"AT-POS"},{"n":"AT-POS","s":{"p":["Num:D \\pos","*%_"],"r":"Mu"},"m":1,"k":"m"},{"m":1,"k":"m","s":{"p":["Any:D \\pos","*%_"],"r":"Mu"},"n":"AT-POS"},{"m":1,"k":"m","s":{"p":["int \\pos","*%_"],"r":"Mu"},"n":"AT-POS"},{"k":"m","m":1,"s":{"r":"Mu","p":["Int:D \\pos","*%_"]},"n":"AT-POS"},{"m":1,"k":"m","s":{"r":"Mu","p":["Num:D \\pos","*%_"]},"n":"AT-POS"},{"s":{"r":"Mu","p":["Any:D \\pos","*%_"]},"n":"AT-POS","k":"m","m":1},{"m":1,"k":"m","s":{"r":"Mu","p":["Any:U \\pos","*%_"]},"n":"AT-POS"},{"s":{"r":"Mu","p":["\\one","\\two","*%_"]},"n":"AT-POS","k":"m","m":1},{"s":{"p":["\\one","\\two","\\three","*%_"],"r":"Mu"},"n":"AT-POS","k":"m","m":1},{"m":1,"k":"m","s":{"p":["**@indices","*%_"],"r":"Mu"},"n":"AT-POS"},{"s":{"r":"Mu","p":["Int:D $idx","*%_"]},"n":"AT-POS","k":"m","m":1},{"m":1,"k":"m","n":"AT-POS","s":{"r":"Mu","p":["int $idx","*%_"]}},{"k":"m","m":1,"s":{"p":["Any:D $","*%_"],"r":"Bool"},"n":"EXISTS-POS"},{"k":"m","m":1,"n":"EXISTS-POS","s":{"p":["Any:U $pos","*%_"],"r":"Mu"}},{"s":{"p":["int \\pos","*%_"],"r":"Bool:D"},"n":"EXISTS-POS","m":1,"k":"m"},{"n":"EXISTS-POS","s":{"r":"Bool:D","p":["Int:D \\pos","*%_"]},"m":1,"k":"m"},{"n":"EXISTS-POS","s":{"r":"Bool:D","p":["Num:D \\pos","*%_"]},"k":"m","m":1},{"k":"m","m":1,"n":"EXISTS-POS","s":{"p":["Any:D \\pos","*%_"],"r":"Bool:D"}},{"m":1,"k":"m","n":"EXISTS-POS","s":{"r":"Mu","p":["Any:U \\pos","*%_"]}},{"k":"m","m":1,"s":{"r":"Bool:D","p":["\\one","\\two","*%_"]},"n":"EXISTS-POS"},{"m":1,"k":"m","s":{"r":"Bool:D","p":["\\one","\\two","\\three","*%_"]},"n":"EXISTS-POS"},{"m":1,"k":"m","s":{"r":"Bool:D","p":["**@indices","*%_"]},"n":"EXISTS-POS"},{"n":"EXISTS-POS","s":{"p":["Int:D $idx","*%_"],"r":"Mu"},"k":"m","m":1},{"s":{"r":"Mu","p":["int $idx","*%_"]},"n":"EXISTS-POS","m":1,"k":"m"},{"n":"eager","s":{"p":["*%_"],"r":"Mu"},"k":"m","m":1},{"s":{"r":"Mu","p":["*%_"]},"n":"eager","m":1,"k":"m"},{"s":{"p":["*%_"],"r":"Mu"},"n":"gist","m":1,"k":"m"},{"n":"gist","s":{"r":"Mu","p":["*%_"]},"m":1,"k":"m"},{"m":1,"k":"m","n":"gist","s":{"p":["*%_"],"r":"Mu"}},{"m":1,"k":"m","n":"list","s":{"p":["*%_"],"r":"Mu"}},{"m":1,"k":"m","n":"list","s":{"r":"Mu","p":["*%_"]}},{"n":"list","s":{"r":"Mu","p":["*%_"]},"m":1,"k":"m"},{"k":"m","m":1,"s":{"p":["*%_"],"r":"Mix:D"},"n":"Mix"},{"n":"Mix","s":{"r":"Mu","p":["*%_"]},"k":"m","m":1},{"n":"MixHash","s":{"p":["*%_"],"r":"MixHash:D"},"m":1,"k":"m"},{"m":1,"k":"m","s":{"p":["*%_"],"r":"Mu"},"n":"MixHash"},{"n":"Bag","s":{"p":["*%_"],"r":"Bag:D"},"m":1,"k":"m"},{"k":"m","m":1,"s":{"r":"Mu","p":["*%_"]},"n":"Bag"},{"m":1,"k":"m","s":{"r":"BagHash:D","p":["*%_"]},"n":"BagHash"},{"m":1,"k":"m","n":"BagHash","s":{"p":["*%_"],"r":"Mu"}},{"m":1,"k":"m","s":{"r":"Set:D","p":["*%_"]},"n":"Set"},{"m":1,"k":"m","n":"Set","s":{"p":["*%_"],"r":"Mu"}},{"m":1,"k":"m","n":"SetHash","s":{"p":["*%_"],"r":"SetHash:D"}},{"s":{"p":["*%_"],"r":"Mu"},"n":"SetHash","k":"m","m":1},{"n":"configuration","s":{"p":["*%_"],"r":"Mu"},"k":"m","m":0},{"m":0,"k":"s","n":"BUILDALL","s":{"p":["@auto","%init","*%_"],"r":"Mu"}}],"k":"c","d":"TITLE\nclass RaceSeq\n\nSUBTITLE\nPerforms batches of work in parallel without respecting original order.\n\n    class RaceSeq does Iterable does Sequence { }\n\nAn RaceSeq is the intermediate object used when the operator race is\ninvoked on a Seq. In general, it's not intended for direct consumption by\nthe developer.\n\n","n":"RaceSeq","t":"RaceSeq"},{"n":"&last","t":"Sub","k":"v"},{"m":1,"k":"s","n":"last","s":{"r":"Nil","p":[]}},{"m":1,"k":"s","s":{"p":["Label:D \\x"],"r":"Nil"},"n":"last"},{"n":"ValueObjAt","t":"ValueObjAt","b":"A","k":"c","m":[{"k":"m","m":1,"s":{"r":"ValueObjAt:D","p":["*%_"]},"n":"WHICH"},{"k":"m","m":1,"n":"WHICH","s":{"p":["*%_"],"r":"ObjAt:D"}},{"s":{"r":"ObjAt:D","p":["*%_"]},"n":"WHICH","k":"m","m":1},{"m":1,"k":"m","s":{"p":["*%_"],"r":"Mu"},"n":"Str"},{"n":"Str","s":{"r":"Mu","p":["*%_"]},"k":"m","m":1},{"m":1,"k":"m","n":"Str","s":{"r":"Mu","p":["*%_"]}},{"k":"m","m":1,"n":"gist","s":{"r":"Mu","p":["*%_"]}},{"k":"m","m":1,"s":{"p":["*%_"],"r":"Mu"},"n":"gist"},{"n":"gist","s":{"r":"Mu","p":["*%_"]},"k":"m","m":1},{"n":"new","s":{"p":["str $s","*%_"],"r":"Mu"},"k":"m","m":0},{"m":1,"k":"m","n":"perl","s":{"r":"Mu","p":["*%_"]}},{"s":{"r":"Mu","p":["*%_"]},"n":"perl","m":1,"k":"m"},{"s":{"p":["*%_"],"r":"Mu"},"n":"perl","k":"m","m":1},{"k":"s","m":0,"n":"BUILDALL","s":{"r":"Mu","p":["@auto","%init","*%_"]}}],"d":"TITLE\nclass ValueObjAt\n\nSUBTITLE\nUnique identification for value types\n\n    class ValueObjAt is ObjAt { }\n\nA subclass of ObjAt that should be used to indicate that a class produces\nobjects that are value types (in other words: are immutable after they have\nbeen initialized.\n\n    my %h = a => 42;        # mutable Hash\n    say %h.WHICH;           # OUTPUT: «ObjAt.new(\"Hash|1402...888\")␤»\n\n    my %m is Map = a => 42; # immutable Map\n    say %m.WHICH;           # OUTPUT: «ValueObjAt.new(\"Map|AAF...09F61F\")␤»\n\nIf you create a class that should be considered a value type, you should\nadd a WHICH method to that class that returns a ValueObjAt object, for\ninstance:\n\n    class YourClass {\n        has $.foo;  # note these are not mutable\n        has $.bar;\n\n        method WHICH() {\n            ValueObjAt.new(\"YourClass|$!foo|$!bar\");\n        }\n    }\n\nNote that it is customary to always start the identifying string with the\nname of the object, followed by a \"|\". This to prevent confusion with other\nclasses that may generate similar string values: the name of the class\nshould then be enough of a differentiator to prevent collisions."},{"k":"v","n":"&acotanh","t":"Sub+{is-pure}"},{"m":1,"k":"s","n":"acotanh","s":{"p":["Numeric \\x"],"r":"Mu"}},{"s":{"p":["Cool \\x"],"r":"Mu"},"n":"acotanh","m":1,"k":"s"},{"s":{"p":["num $x"],"r":"num"},"n":"acotanh","m":1,"k":"s"},{"t":"StrDistance","n":"StrDistance","d":"TITLE\nclass StrDistance\n\nSUBTITLE\nContains the result of a string transformation.\n\nStrDistance objects are used to represent the return of the string\ntransformation operator.\n\n    say (($ = \"fold\") ~~ tr/old/new/).^name;  # OUTPUT: «StrDistance␤»\n\nA StrDistance object will stringify to the resulting string after the\ntransformation, and will numify to the distance between the two strings.\n\n    my $str = \"fold\";\n    my $str-dist = ($str ~~ tr/old/new/);\n    say ~$str-dist;  # OUTPUT: «fnew␤»\n    say +$str-dist;  # OUTPUT: «3␤»\n\n\n","k":"c","m":[{"k":"s","m":0,"n":"BUILD","s":{"p":[":before($!before)",":after($!after)","*%_"],"r":"Nil"}},{"n":"Bool","s":{"r":"Mu","p":["*%_"]},"k":"m","m":0},{"n":"ACCEPTS","s":{"p":["Mu \\a","*%_"],"r":"Mu"},"k":"m","m":0},{"n":"Numeric","s":{"r":"Mu","p":["*%_"]},"k":"m","m":0},{"n":"Str","s":{"p":["*%_"],"r":"Mu"},"k":"m","m":0},{"m":1,"k":"m","s":{"r":"Mu","p":["*%_"]},"n":"Int"},{"k":"m","m":1,"n":"Int","s":{"p":["*%_"],"r":"Mu"}},{"n":"before","s":{"p":["*%_"],"r":"Mu"},"k":"m","m":0},{"k":"m","m":0,"s":{"r":"Mu","p":["*%_"]},"n":"after"},{"m":0,"k":"s","s":{"r":"Mu","p":["@auto","%init","*%_"]},"n":"BUILDALL"}],"b":"C","a":[{"k":"v","n":"$.before","t":"Str"},{"k":"v","n":"$.after","t":"Str"},{"t":"Int","n":"$!distance","k":"v"}]},{"k":"v","n":"&link","t":"Sub"},{"n":"link","s":{"p":["$target","$name"],"r":"Mu"},"m":1,"k":"s"},{"t":"Sub+{is-pure}+{Precedence}","n":"&infix:<≼>","k":"v"},{"n":"infix:<≼>","s":{"p":["$a","$b"],"r":"Bool:D"},"k":"s","m":1},{"n":"&postcircumfix:<{ }>","t":"Sub+{is-nodal}+{Precedence}+{is-nodal}","k":"v"},{"s":{"p":["\\SELF","\\key"],"r":"Mu"},"n":"postcircumfix:<{ }>","m":1,"k":"s"},{"m":1,"k":"s","s":{"p":["\\SELF","\\key","Mu \\ASSIGN"],"r":"Mu"},"n":"postcircumfix:<{ }>"},{"n":"postcircumfix:<{ }>","s":{"r":"Mu","p":["\\SELF","\\key","Mu :$BIND! is raw"]},"m":1,"k":"s"},{"s":{"p":["\\SELF","\\key",":$delete!"],"r":"Mu"},"n":"postcircumfix:<{ }>","k":"s","m":1},{"k":"s","m":1,"n":"postcircumfix:<{ }>","s":{"r":"Mu","p":["\\SELF","\\key",":$delete!","*%other"]}},{"s":{"p":["\\SELF","\\key",":$exists!"],"r":"Mu"},"n":"postcircumfix:<{ }>","m":1,"k":"s"},{"k":"s","m":1,"n":"postcircumfix:<{ }>","s":{"r":"Mu","p":["\\SELF","\\key",":$exists!","*%other"]}},{"n":"postcircumfix:<{ }>","s":{"r":"Mu","p":["\\SELF","\\key",":$kv!","*%other"]},"m":1,"k":"s"},{"k":"s","m":1,"s":{"p":["\\SELF","\\key",":$p!","*%other"],"r":"Mu"},"n":"postcircumfix:<{ }>"},{"n":"postcircumfix:<{ }>","s":{"p":["\\SELF","\\key",":$k!","*%other"],"r":"Mu"},"m":1,"k":"s"},{"n":"postcircumfix:<{ }>","s":{"r":"Mu","p":["\\SELF","\\key",":$v!","*%other"]},"m":1,"k":"s"},{"k":"s","m":1,"n":"postcircumfix:<{ }>","s":{"p":["\\SELF","Iterable \\key"],"r":"Mu"}},{"s":{"p":["\\SELF","Iterable \\key","Mu \\ASSIGN"],"r":"Mu"},"n":"postcircumfix:<{ }>","m":1,"k":"s"},{"n":"postcircumfix:<{ }>","s":{"r":"Mu","p":["\\SELF","Iterable \\key",":$BIND!"]},"k":"s","m":1},{"k":"s","m":1,"n":"postcircumfix:<{ }>","s":{"p":["\\SELF","Iterable \\key",":$delete!","*%other"],"r":"Mu"}},{"m":1,"k":"s","n":"postcircumfix:<{ }>","s":{"r":"Mu","p":["\\SELF","Iterable \\key",":$exists!","*%other"]}},{"m":1,"k":"s","n":"postcircumfix:<{ }>","s":{"p":["\\SELF","Iterable \\key",":$kv!","*%other"],"r":"Mu"}},{"m":1,"k":"s","s":{"p":["\\SELF","Iterable \\key",":$p!","*%other"],"r":"Mu"},"n":"postcircumfix:<{ }>"},{"m":1,"k":"s","n":"postcircumfix:<{ }>","s":{"p":["\\SELF","Iterable \\key",":$k!","*%other"],"r":"Mu"}},{"m":1,"k":"s","s":{"r":"Mu","p":["\\SELF","Iterable \\key",":$v!","*%other"]},"n":"postcircumfix:<{ }>"},{"s":{"r":"Mu","p":["\\SELF","Whatever $"]},"n":"postcircumfix:<{ }>","m":1,"k":"s"},{"s":{"p":["\\SELF","Whatever $","Mu \\ASSIGN"],"r":"Mu"},"n":"postcircumfix:<{ }>","k":"s","m":1},{"m":1,"k":"s","s":{"p":["\\SELF","Whatever $",":$BIND!"],"r":"Mu"},"n":"postcircumfix:<{ }>"},{"s":{"r":"Mu","p":["\\SELF","Whatever $",":$delete!","*%other"]},"n":"postcircumfix:<{ }>","k":"s","m":1},{"n":"postcircumfix:<{ }>","s":{"r":"Mu","p":["\\SELF","Whatever $",":$exists!","*%other"]},"m":1,"k":"s"},{"s":{"r":"Mu","p":["\\SELF","Whatever $",":$kv!","*%other"]},"n":"postcircumfix:<{ }>","k":"s","m":1},{"s":{"r":"Mu","p":["\\SELF","Whatever $",":$p!","*%other"]},"n":"postcircumfix:<{ }>","m":1,"k":"s"},{"n":"postcircumfix:<{ }>","s":{"r":"Mu","p":["\\SELF","Whatever $",":$k!","*%other"]},"k":"s","m":1},{"n":"postcircumfix:<{ }>","s":{"p":["\\SELF","Whatever $",":$p!","*%other"],"r":"Mu"},"k":"s","m":1},{"n":"postcircumfix:<{ }>","s":{"r":"Mu","p":["\\SELF","Whatever $",":$v!","*%other"]},"k":"s","m":1},{"m":1,"k":"s","n":"postcircumfix:<{ }>","s":{"r":"Mu","p":["\\SELF",":$BIND!"]}},{"n":"postcircumfix:<{ }>","s":{"p":["\\SELF",":$delete!","*%other"],"r":"Mu"},"k":"s","m":1},{"s":{"p":["\\SELF",":$exists!","*%other"],"r":"Mu"},"n":"postcircumfix:<{ }>","k":"s","m":1},{"s":{"r":"Mu","p":["\\SELF",":$kv!","*%other"]},"n":"postcircumfix:<{ }>","k":"s","m":1},{"m":1,"k":"s","n":"postcircumfix:<{ }>","s":{"r":"Mu","p":["\\SELF",":$p!","*%other"]}},{"n":"postcircumfix:<{ }>","s":{"r":"Mu","p":["\\SELF",":$k!","*%other"]},"m":1,"k":"s"},{"m":1,"k":"s","s":{"p":["\\SELF",":$p!","*%other"],"r":"Mu"},"n":"postcircumfix:<{ }>"},{"k":"s","m":1,"n":"postcircumfix:<{ }>","s":{"r":"Mu","p":["\\SELF",":$v!","*%other"]}},{"s":{"r":"Mu","p":["Mu \\SELF","*%other"]},"n":"postcircumfix:<{ }>","k":"s","m":1},{"k":"v","t":"Sub+{Callable[Bool]}","n":"&lastcall"},{"m":0,"k":"s","s":{"p":[],"r":"Bool"},"n":"lastcall"},{"k":"e","t":"PromiseStatus","n":"Planned"},{"k":"v","n":"&atan","t":"Sub+{is-pure}"},{"k":"s","m":1,"n":"atan","s":{"r":"Mu","p":["Numeric \\x"]}},{"m":1,"k":"s","n":"atan","s":{"p":["Cool \\x"],"r":"Mu"}},{"n":"atan","s":{"p":["num $x"],"r":"num"},"k":"s","m":1},{"t":"Sub+{is-pure}+{Precedence}","n":"&infix:<Z>","k":"v"},{"n":"infix:<Z>","s":{"p":["+\\lol is raw",":&with!"],"r":"Seq:D"},"k":"s","m":1},{"m":1,"k":"s","s":{"p":["+\\lol is raw"],"r":"Seq:D"},"n":"infix:<Z>"},{"k":"v","t":"Sub","n":"&put"},{"k":"s","m":1,"n":"put","s":{"p":[],"r":"Mu"}},{"m":1,"k":"s","s":{"p":["Junction:D \\j"],"r":"Mu"},"n":"put"},{"k":"s","m":1,"n":"put","s":{"r":"Mu","p":["Str:D \\x"]}},{"n":"put","s":{"r":"Mu","p":["\\x"]},"m":1,"k":"s"},{"s":{"r":"Mu","p":["**@args is raw"]},"n":"put","m":1,"k":"s"},{"n":"&postfix:<i>","t":"Sub+{Callable[Complex:D]}+{is-pure}+{Precedence}","k":"v"},{"m":1,"k":"s","s":{"p":["Real \\a"],"r":"Complex:D"},"n":"postfix:<i>"},{"s":{"r":"Complex:D","p":["Complex:D \\a"]},"n":"postfix:<i>","m":1,"k":"s"},{"k":"s","m":1,"s":{"r":"Complex:D","p":["Numeric \\a"]},"n":"postfix:<i>"},{"k":"s","m":1,"n":"postfix:<i>","s":{"p":["Cool \\a"],"r":"Complex:D"}},{"m":[{"m":1,"k":"m","s":{"r":"Mu","p":["*%_"]},"n":"new"},{"s":{"p":["Real \\re","Real \\im","*%_"],"r":"Mu"},"n":"new","k":"m","m":1},{"n":"reals","s":{"p":["*%_"],"r":"Mu"},"m":0,"k":"m"},{"k":"m","m":0,"n":"isNaN","s":{"p":["*%_"],"r":"Mu"}},{"s":{"r":"Mu","p":["$exception-target","*%_"]},"n":"coerce-to-real","k":"m","m":0},{"s":{"r":"Mu","p":["*%_"]},"n":"Num","m":0,"k":"m"},{"m":0,"k":"m","s":{"r":"Mu","p":["*%_"]},"n":"Int"},{"m":0,"k":"m","s":{"r":"Mu","p":["$epsilon?","*%_"]},"n":"Rat"},{"m":0,"k":"m","n":"FatRat","s":{"r":"Mu","p":["$epsilon?","*%_"]}},{"s":{"r":"Mu","p":["*%_"]},"n":"Complex","k":"m","m":0},{"n":"conj","s":{"p":["*%_"],"r":"Mu"},"m":0,"k":"m"},{"n":"abs","s":{"p":["*%_"],"r":"Mu"},"k":"m","m":0},{"s":{"r":"Mu","p":["*%_"]},"n":"polar","m":0,"k":"m"},{"s":{"p":["*%_"],"r":"Mu"},"n":"cis","k":"m","m":0},{"m":0,"k":"m","n":"sqrt","s":{"r":"Mu","p":["*%_"]}},{"m":0,"k":"m","n":"roots","s":{"r":"Mu","p":["$n","*%_"]}},{"m":0,"k":"m","n":"sin","s":{"p":["*%_"],"r":"Mu"}},{"s":{"r":"Mu","p":["*%_"]},"n":"asin","m":0,"k":"m"},{"k":"m","m":0,"s":{"r":"Mu","p":["*%_"]},"n":"cos"},{"n":"acos","s":{"p":["*%_"],"r":"Mu"},"m":0,"k":"m"},{"s":{"p":["*%_"],"r":"Mu"},"n":"tan","k":"m","m":0},{"s":{"p":["*%_"],"r":"Mu"},"n":"atan","m":0,"k":"m"},{"m":0,"k":"m","s":{"p":["*%_"],"r":"Mu"},"n":"sec"},{"k":"m","m":0,"s":{"p":["*%_"],"r":"Mu"},"n":"asec"},{"m":0,"k":"m","n":"cosec","s":{"p":["*%_"],"r":"Mu"}},{"m":0,"k":"m","n":"acosec","s":{"p":["*%_"],"r":"Mu"}},{"m":0,"k":"m","s":{"r":"Mu","p":["*%_"]},"n":"cotan"},{"m":0,"k":"m","n":"acotan","s":{"r":"Mu","p":["*%_"]}},{"s":{"r":"Mu","p":["*%_"]},"n":"sinh","k":"m","m":0},{"s":{"r":"Mu","p":["*%_"]},"n":"asinh","k":"m","m":0},{"n":"cosh","s":{"r":"Mu","p":["*%_"]},"k":"m","m":0},{"k":"m","m":0,"n":"acosh","s":{"r":"Mu","p":["*%_"]}},{"s":{"r":"Mu","p":["*%_"]},"n":"tanh","k":"m","m":0},{"k":"m","m":0,"n":"atanh","s":{"p":["*%_"],"r":"Mu"}},{"m":0,"k":"m","n":"sech","s":{"p":["*%_"],"r":"Mu"}},{"s":{"r":"Mu","p":["*%_"]},"n":"asech","m":0,"k":"m"},{"m":0,"k":"m","s":{"p":["*%_"],"r":"Mu"},"n":"cosech"},{"k":"m","m":0,"n":"acosech","s":{"r":"Mu","p":["*%_"]}},{"n":"cotanh","s":{"p":["*%_"],"r":"Mu"},"k":"m","m":0},{"k":"m","m":0,"n":"acotanh","s":{"p":["*%_"],"r":"Mu"}},{"k":"m","m":0,"s":{"r":"Mu","p":["*%_"]},"n":"floor"},{"n":"ceiling","s":{"r":"Mu","p":["*%_"]},"m":0,"k":"m"},{"s":{"r":"Mu","p":["*%_"]},"n":"round","k":"m","m":1},{"s":{"r":"Mu","p":["$scale","*%_"]},"n":"round","k":"m","m":1},{"k":"m","m":0,"n":"truncate","s":{"p":["*%_"],"r":"Mu"}},{"m":0,"k":"m","n":"narrow","s":{"p":["*%_"],"r":"Mu"}},{"m":1,"k":"m","n":"log","s":{"r":"Mu","p":["*%_"]}},{"n":"log","s":{"p":["Cool $base","*%_"],"r":"Mu"},"k":"m","m":1},{"m":1,"k":"m","n":"log","s":{"r":"Mu","p":["Numeric $base","*%_"]}},{"k":"m","m":0,"s":{"p":["*%_"],"r":"Mu"},"n":"log10"},{"n":"exp","s":{"p":["*%_"],"r":"Mu"},"m":1,"k":"m"},{"n":"exp","s":{"r":"Mu","p":["$base","*%_"]},"m":1,"k":"m"},{"s":{"r":"Mu","p":["*%_"]},"n":"succ","k":"m","m":0},{"m":0,"k":"m","s":{"r":"Mu","p":["*%_"]},"n":"pred"},{"s":{"r":"ValueObjAt:D","p":["*%_"]},"n":"WHICH","m":1,"k":"m"},{"s":{"p":["*%_"],"r":"ObjAt:D"},"n":"WHICH","m":1,"k":"m"},{"m":1,"k":"m","n":"WHICH","s":{"r":"ValueObjAt:D","p":["*%_"]}},{"m":1,"k":"m","n":"Real","s":{"r":"Mu","p":["*%_"]}},{"k":"m","m":1,"n":"Real","s":{"p":["*%_"],"r":"Mu"}},{"m":1,"k":"m","n":"Real","s":{"r":"Mu","p":["*%_"]}},{"s":{"p":["*%_"],"r":"Bool"},"n":"Bool","k":"m","m":1},{"s":{"p":["*%_"],"r":"Mu"},"n":"Bool","k":"m","m":1},{"k":"m","m":1,"s":{"p":["*%_"],"r":"Mu"},"n":"Bool"},{"k":"m","m":1,"n":"Bool","s":{"r":"Mu","p":["*%_"]}},{"s":{"r":"Mu","p":["*%_"]},"n":"Str","m":1,"k":"m"},{"m":1,"k":"m","s":{"p":["*%_"],"r":"Mu"},"n":"Str"},{"n":"Str","s":{"p":["*%_"],"r":"Mu"},"k":"m","m":1},{"k":"m","m":1,"s":{"r":"Mu","p":["*%_"]},"n":"perl"},{"n":"perl","s":{"p":["*%_"],"r":"Mu"},"m":1,"k":"m"},{"m":1,"k":"m","n":"perl","s":{"p":["*%_"],"r":"Mu"}},{"k":"m","m":1,"s":{"r":"Mu","p":["*%_"]},"n":"Numeric"},{"n":"Numeric","s":{"p":["*%_"],"r":"Mu"},"m":1,"k":"m"},{"s":{"r":"Mu","p":["*%_"]},"n":"Numeric","m":1,"k":"m"},{"n":"ACCEPTS","s":{"r":"Mu","p":["\\topic","*%_"]},"m":1,"k":"m"},{"n":"ACCEPTS","s":{"p":["Mu:U \\topic","*%_"],"r":"Mu"},"m":1,"k":"m"},{"m":1,"k":"m","n":"ACCEPTS","s":{"r":"Mu","p":["Mu:D \\a","*%_"]}},{"s":{"r":"Bool","p":["Mu:U $","*%_"]},"n":"ACCEPTS","k":"m","m":1},{"n":"ACCEPTS","s":{"r":"Bool:D","p":["\\topic","*%_"]},"m":1,"k":"m"},{"k":"m","m":1,"s":{"p":["Any:D \\a","*%_"],"r":"Mu"},"n":"ACCEPTS"},{"s":{"p":["*%_"],"r":"Mu"},"n":"gist","m":1,"k":"m"},{"n":"gist","s":{"p":["*%_"],"r":"Mu"},"k":"m","m":1},{"m":1,"k":"m","n":"gist","s":{"p":["*%_"],"r":"Mu"}},{"k":"m","m":1,"n":"DUMP","s":{"r":"Mu","p":["*%_"]}},{"n":"DUMP","s":{"p":[":$indent-step = 4",":%ctx","*%_"],"r":"Mu"},"m":1,"k":"m"},{"s":{"p":["*%_"],"r":"Mu"},"n":"DUMP","k":"m","m":1},{"s":{"p":["*%_"],"r":"Mu"},"n":"re","k":"m","m":0},{"s":{"r":"Mu","p":["*%_"]},"n":"im","k":"m","m":0},{"s":{"r":"Mu","p":["@auto","%init","*%_"]},"n":"BUILDALL","m":0,"k":"s"},{"m":0,"k":"m","n":"!SET-SELF","s":{"p":["\\re","\\im","*%_"],"r":"Mu"}}],"k":"c","a":[{"n":"$.re","t":"num","k":"v"},{"k":"v","n":"$.im","t":"num"}],"b":"C","t":"Complex","n":"i"},{"k":"v","t":"Sub","n":"&lines"},{"n":"lines","s":{"p":["$what = { ... }","|c is raw"],"r":"Mu"},"m":1,"k":"s"},{"n":"&trait_mod:<hides>","t":"Sub","k":"v"},{"n":"trait_mod:<hides>","s":{"p":["Mu:U $child","Mu:U $parent"],"r":"Mu"},"k":"s","m":1},{"t":"Sub","n":"&postfix:<⚛++>","k":"v"},{"s":{"p":["atomicint $target is rw"],"r":"atomicint"},"n":"postfix:<⚛++>","m":1,"k":"s"},{"t":"uint32","n":"uint32","k":"n"},{"t":"SocketType","n":"SOCK_RDM","k":"e"},{"k":"v","n":"&unlink","t":"Sub"},{"k":"s","m":1,"s":{"p":["*@filenames"],"r":"Mu"},"n":"unlink"},{"t":"Sub+{Callable[Bool:D]}+{is-pure}+{Precedence}","n":"&infix:<(elem)>","k":"v"},{"m":1,"k":"s","s":{"p":["Str:D \\a","Map:D \\b"],"r":"Bool:D"},"n":"infix:<(elem)>"},{"k":"s","m":1,"n":"infix:<(elem)>","s":{"r":"Bool:D","p":["\\a","Map:D \\b"]}},{"k":"s","m":1,"s":{"r":"Bool:D","p":["Int:D \\a","Range:D \\b"]},"n":"infix:<(elem)>"},{"k":"s","m":1,"s":{"r":"Bool:D","p":["\\a","Iterable:D \\b"]},"n":"infix:<(elem)>"},{"s":{"p":["\\a","Iterator:D \\b"],"r":"Bool:D"},"n":"infix:<(elem)>","k":"s","m":1},{"m":1,"k":"s","s":{"p":["\\a","QuantHash:D \\b"],"r":"Bool:D"},"n":"infix:<(elem)>"},{"m":1,"k":"s","s":{"r":"Mu","p":["$","Failure:D \\b"]},"n":"infix:<(elem)>"},{"k":"s","m":1,"s":{"r":"Mu","p":["Failure:D \\a","$"]},"n":"infix:<(elem)>"},{"s":{"r":"Mu","p":["\\a","\\b"]},"n":"infix:<(elem)>","k":"s","m":1},{"k":"v","n":"&infix:<~>","t":"Sub+{is-pure}+{Precedence}"},{"n":"infix:<~>","s":{"r":"Str","p":[]},"m":1,"k":"s"},{"k":"s","m":1,"s":{"r":"Str:D","p":["$x"]},"n":"infix:<~>"},{"m":1,"k":"s","s":{"r":"Mu","p":["Str:D $a","Junction:D $b"]},"n":"infix:<~>"},{"k":"s","m":1,"n":"infix:<~>","s":{"r":"Mu","p":["Junction:D $a","Str:D $b"]}},{"s":{"r":"Mu","p":["Junction:D \\a","Junction:D \\b"]},"n":"infix:<~>","k":"s","m":1},{"n":"infix:<~>","s":{"p":["Blob:D \\a"],"r":"Mu"},"k":"s","m":1},{"k":"s","m":1,"n":"infix:<~>","s":{"p":["Blob:D $a","Blob:D $b"],"r":"Mu"}},{"n":"infix:<~>","s":{"p":["str $a","str $b"],"r":"str"},"k":"s","m":1},{"n":"infix:<~>","s":{"r":"str","p":["Str:D \\a","str $b"]},"k":"s","m":1},{"k":"s","m":1,"s":{"r":"str","p":["str $a","Str:D \\b"]},"n":"infix:<~>"},{"n":"infix:<~>","s":{"r":"Str:D","p":["Str:D \\a","Str:D \\b"]},"m":1,"k":"s"},{"n":"infix:<~>","s":{"r":"Str:D","p":["Cool:D \\a","Str:D \\b"]},"k":"s","m":1},{"m":1,"k":"s","s":{"p":["Str:D \\a","Cool:D \\b"],"r":"Str:D"},"n":"infix:<~>"},{"k":"s","m":1,"n":"infix:<~>","s":{"r":"Str:D","p":["Cool:D \\a","Cool:D \\b"]}},{"s":{"r":"Str:D","p":["Any:D \\a","Str:D \\b"]},"n":"infix:<~>","m":1,"k":"s"},{"k":"s","m":1,"n":"infix:<~>","s":{"r":"Str:D","p":["Str:D \\a","Any:D \\b"]}},{"k":"s","m":1,"n":"infix:<~>","s":{"p":["str @args"],"r":"str"}},{"s":{"p":["@args"],"r":"Mu"},"n":"infix:<~>","m":1,"k":"s"},{"s":{"r":"Mu","p":["*@args"]},"n":"infix:<~>","k":"s","m":1},{"k":"v","t":"Sub+{is-pure}+{Precedence}","n":"&infix:<∖>"},{"m":1,"k":"s","s":{"r":"Mu","p":[]},"n":"infix:<(-)>"},{"k":"s","m":1,"n":"infix:<(-)>","s":{"p":["QuantHash:D \\a"],"r":"Mu"}},{"m":1,"k":"s","s":{"p":["SetHash:D \\a"],"r":"Mu"},"n":"infix:<(-)>"},{"k":"s","m":1,"s":{"p":["BagHash:D \\a"],"r":"Mu"},"n":"infix:<(-)>"},{"m":1,"k":"s","s":{"p":["MixHash:D \\a"],"r":"Mu"},"n":"infix:<(-)>"},{"m":1,"k":"s","s":{"r":"Mu","p":["\\a"]},"n":"infix:<(-)>"},{"m":1,"k":"s","s":{"p":["Setty:D \\a","Setty:D \\b"],"r":"Mu"},"n":"infix:<(-)>"},{"m":1,"k":"s","s":{"r":"Mu","p":["Setty:D \\a","Map:D \\b"]},"n":"infix:<(-)>"},{"m":1,"k":"s","s":{"p":["Setty:D \\a","Iterable:D \\b"],"r":"Mu"},"n":"infix:<(-)>"},{"n":"infix:<(-)>","s":{"r":"Mu","p":["Mixy:D \\a","Mixy:D \\b"]},"k":"s","m":1},{"k":"s","m":1,"s":{"p":["Mixy:D \\a","QuantHash:D \\b"],"r":"Mu"},"n":"infix:<(-)>"},{"n":"infix:<(-)>","s":{"r":"Mu","p":["QuantHash:D \\a","Mixy:D \\b"]},"k":"s","m":1},{"s":{"r":"Mu","p":["Mixy:D \\a","Map:D \\b"]},"n":"infix:<(-)>","k":"s","m":1},{"n":"infix:<(-)>","s":{"r":"Mu","p":["Mixy:D \\a","Any:D \\b"]},"m":1,"k":"s"},{"n":"infix:<(-)>","s":{"p":["Any:D \\a","Mixy:D \\b"],"r":"Mu"},"m":1,"k":"s"},{"k":"s","m":1,"s":{"r":"Mu","p":["Baggy:D \\a","Mixy:D \\b"]},"n":"infix:<(-)>"},{"s":{"r":"Mu","p":["Baggy:D \\a","Baggy:D \\b"]},"n":"infix:<(-)>","m":1,"k":"s"},{"s":{"p":["Baggy:D \\a","QuantHash:D \\b"],"r":"Mu"},"n":"infix:<(-)>","k":"s","m":1},{"n":"infix:<(-)>","s":{"p":["QuantHash:D \\a","Baggy:D \\b"],"r":"Mu"},"m":1,"k":"s"},{"m":1,"k":"s","s":{"p":["Baggy:D \\a","Map:D \\b"],"r":"Mu"},"n":"infix:<(-)>"},{"k":"s","m":1,"n":"infix:<(-)>","s":{"r":"Mu","p":["Baggy:D \\a","Any:D \\b"]}},{"k":"s","m":1,"n":"infix:<(-)>","s":{"r":"Mu","p":["\\a","Baggy:D \\b"]}},{"k":"s","m":1,"s":{"p":["\\a","Map:D \\b"],"r":"Mu"},"n":"infix:<(-)>"},{"k":"s","m":1,"s":{"r":"Mu","p":["\\a","Iterable:D \\b"]},"n":"infix:<(-)>"},{"s":{"r":"Mu","p":["$","Failure:D \\b"]},"n":"infix:<(-)>","k":"s","m":1},{"k":"s","m":1,"n":"infix:<(-)>","s":{"r":"Mu","p":["Failure:D \\a","$"]}},{"n":"infix:<(-)>","s":{"p":["\\a","\\b"],"r":"Mu"},"k":"s","m":1},{"m":1,"k":"s","s":{"p":["**@p"],"r":"Mu"},"n":"infix:<(-)>"},{"k":"v","t":"Sub","n":"&permutations"},{"m":1,"k":"s","n":"permutations","s":{"p":["\\n"],"r":"Seq:D"}},{"m":1,"k":"s","n":"permutations","s":{"r":"Seq:D","p":["Iterable \\n"]}},{"n":"Mu","t":"Mu","m":[{"m":0,"k":"m","n":"self","s":{"r":"Mu","p":["*%_"]}},{"m":0,"k":"m","s":{"r":"Nil","p":["*%_"]},"n":"sink"},{"m":1,"k":"m","n":"ACCEPTS","s":{"p":["\\topic","*%_"],"r":"Mu"}},{"m":1,"k":"m","s":{"p":["Mu:U \\topic","*%_"],"r":"Mu"},"n":"ACCEPTS"},{"s":{"r":"Mu","p":["*%_"]},"n":"WHERE","m":0,"k":"m"},{"k":"m","m":1,"s":{"p":["*%_"],"r":"ValueObjAt:D"},"n":"WHICH"},{"k":"m","m":1,"s":{"p":["*%_"],"r":"ObjAt:D"},"n":"WHICH"},{"s":{"p":["*%_"],"r":"Mu"},"n":"iterator","m":1,"k":"m"},{"s":{"p":["*%_"],"r":"Mu"},"n":"emit","k":"m","m":0},{"s":{"r":"Mu","p":["*%_"]},"n":"take","k":"m","m":0},{"k":"m","m":0,"n":"return-rw","s":{"p":["|"],"r":"Mu"}},{"n":"return","s":{"p":["|"],"r":"Mu"},"k":"m","m":0},{"m":1,"k":"m","s":{"r":"Mu","p":["*%_"]},"n":"WHY"},{"k":"m","m":0,"n":"set_why","s":{"p":["$why","*%_"],"r":"Mu"}},{"n":"Bool","s":{"p":["*%_"],"r":"Bool"},"m":1,"k":"m"},{"n":"Bool","s":{"r":"Mu","p":["*%_"]},"m":1,"k":"m"},{"s":{"r":"Mu","p":["*%_"]},"n":"so","m":0,"k":"m"},{"n":"not","s":{"r":"Mu","p":["*%_"]},"k":"m","m":0},{"s":{"p":["*%_"],"r":"Bool"},"n":"defined","k":"m","m":1},{"k":"m","m":1,"n":"defined","s":{"p":["*%_"],"r":"Bool"}},{"n":"new","s":{"p":["*%attrinit"],"r":"Mu"},"m":1,"k":"m"},{"k":"m","m":1,"n":"new","s":{"p":["$","*@","*%_"],"r":"Mu"}},{"n":"is-lazy","s":{"p":["*%_"],"r":"Bool"},"m":1,"k":"m"},{"m":0,"k":"m","s":{"r":"Mu","p":["*%_"]},"n":"CREATE"},{"s":{"r":"Mu","p":["*%attrinit"]},"n":"bless","k":"m","m":0},{"s":{"p":["@autovivs","%attrinit","*%_"],"r":"Mu"},"n":"BUILDALL","k":"m","m":0},{"m":0,"k":"m","n":"BUILD_LEAST_DERIVED","s":{"r":"Mu","p":["%attrinit","*%_"]}},{"m":1,"k":"m","s":{"r":"Mu","p":["*%_"]},"n":"Numeric"},{"s":{"r":"Mu","p":["*%_"]},"n":"Real","k":"m","m":1},{"m":1,"k":"m","s":{"r":"Mu","p":["*%_"]},"n":"Str"},{"m":1,"k":"m","s":{"r":"Mu","p":["*%_"]},"n":"Str"},{"m":1,"k":"m","n":"Stringy","s":{"r":"Mu","p":["*%_"]}},{"s":{"r":"Mu","p":["*%_"]},"n":"Stringy","k":"m","m":1},{"n":"item","s":{"r":"Mu","p":["*%_"]},"k":"m","m":0},{"m":1,"k":"m","n":"say","s":{"p":["*%_"],"r":"Mu"}},{"m":0,"k":"m","s":{"p":["*%_"],"r":"Mu"},"n":"print"},{"s":{"p":["*%_"],"r":"Mu"},"n":"put","k":"m","m":0},{"k":"m","m":0,"s":{"p":["*%_"],"r":"Mu"},"n":"note"},{"k":"m","m":0,"n":"gistseen","s":{"p":["$id","$gist","*%named"],"r":"Mu"}},{"s":{"r":"Mu","p":["*%_"]},"n":"gist","m":1,"k":"m"},{"k":"m","m":1,"n":"gist","s":{"p":["*%_"],"r":"Mu"}},{"m":0,"k":"m","s":{"p":["$id","$perl","*%named"],"r":"Mu"},"n":"perlseen"},{"n":"perl","s":{"p":["*%_"],"r":"Mu"},"m":1,"k":"m"},{"n":"perl","s":{"p":["*%_"],"r":"Mu"},"m":1,"k":"m"},{"s":{"r":"Mu","p":["*%_"]},"n":"DUMP","m":1,"k":"m"},{"k":"m","m":1,"s":{"p":[":$indent-step = 4",":%ctx","*%_"],"r":"Mu"},"n":"DUMP"},{"k":"m","m":0,"s":{"r":"Mu","p":["$before","$after = \")\"",":$indent = { ... }",":$indent-step","*%_"]},"n":"DUMP-PIECES"},{"n":"DUMP-OBJECT-ATTRS","s":{"r":"Mu","p":["|args is raw (*@args, Any :$indent-step, :%ctx, Any :$flags)"]},"m":0,"k":"m"},{"k":"m","m":1,"s":{"p":["Mu $type","*%_"],"r":"Bool:D"},"n":"isa"},{"k":"m","m":1,"n":"isa","s":{"r":"Bool:D","p":["Str:D $name","*%_"]}},{"n":"does","s":{"p":["Mu $type","*%_"],"r":"Mu"},"k":"m","m":0},{"s":{"r":"Mu","p":["$name","*%_"]},"n":"can","k":"m","m":0},{"n":"clone","s":{"r":"Mu","p":["*%twiddles"]},"k":"m","m":1},{"k":"m","m":1,"n":"clone","s":{"r":"Mu","p":["*%twiddles"]}},{"k":"m","m":0,"n":"Capture","s":{"p":["*%_"],"r":"Mu"}},{"s":{"p":["$var","|c is raw"],"r":"Mu"},"n":"dispatch:<var>","m":0,"k":"m"},{"n":"dispatch:<::>","s":{"r":"Mu","p":["$name","Mu $type","|c is raw"]},"k":"m","m":0},{"s":{"r":"Mu","p":["\\name","Mu \\type","|c is raw"]},"n":"dispatch:<!>","m":0,"k":"m"},{"k":"m","m":0,"s":{"r":"Mu","p":["$name","|c is raw"]},"n":"dispatch:<.=>"},{"m":0,"k":"m","n":"dispatch:<.?>","s":{"p":["$name","|c is raw"],"r":"Mu"}},{"s":{"p":["$name","|c is raw"],"r":"Mu"},"n":"dispatch:<.+>","k":"m","m":0},{"n":"dispatch:<.*>","s":{"p":["\\name","|c is raw"],"r":"Mu"},"k":"m","m":0},{"k":"m","m":0,"s":{"r":"Mu","p":["$nodality","Str $meth-name","|c is raw"]},"n":"dispatch:<hyper>"},{"m":0,"k":"m","n":"WALK","s":{"p":[":$name!",":$canonical",":$ascendant",":$descendant",":$preorder",":$breadth",":$super",":$omit",":$include","*%_"],"r":"Mu"}}],"k":"c","b":"M","d":"TITLE\nclass Mu\n\nSUBTITLE\nThe root of the Raku type hierarchy.\n\n    class Mu { }\n\nThe root of the Raku type hierarchy. For the origin of the name, see\nhttps://en.wikipedia.org/wiki/Mu_%28negative%29. One can also say that\nthere are many undefined values in Raku, and Mu is the most undefined\nvalue.\n\nNote that most classes do not derive from Mu directly, but rather from\nAny.\n\n"},{"k":"v","t":"Sub+{is-pure}+{Precedence}","n":"&infix:<×>"},{"n":"infix:<*>","s":{"p":["$x = 1"],"r":"Mu"},"m":1,"k":"s"},{"k":"s","m":1,"s":{"r":"Mu","p":["\\a","\\b"]},"n":"infix:<*>"},{"m":1,"k":"s","s":{"p":["Real \\a","Real \\b"],"r":"Mu"},"n":"infix:<*>"},{"m":1,"k":"s","n":"infix:<*>","s":{"p":["Int:D \\a","Int:D \\b"],"r":"Int:D"}},{"m":1,"k":"s","s":{"r":"int","p":["int $a","int $b"]},"n":"infix:<*>"},{"n":"infix:<*>","s":{"r":"Mu","p":["Num:D \\a","Num:D \\b"]},"m":1,"k":"s"},{"s":{"r":"num","p":["num $a","num $b"]},"n":"infix:<*>","k":"s","m":1},{"m":1,"k":"s","n":"infix:<*>","s":{"p":["Range:D \\r","Real:D \\v"],"r":"Mu"}},{"s":{"r":"Mu","p":["Real:D \\v","Range:D \\r"]},"n":"infix:<*>","k":"s","m":1},{"n":"infix:<*>","s":{"r":"Mu","p":["Rational:D \\a","Rational:D \\b"]},"k":"s","m":1},{"k":"s","m":1,"n":"infix:<*>","s":{"r":"Mu","p":["Rational:D \\a","Int:D \\b"]}},{"m":1,"k":"s","s":{"r":"Mu","p":["Int:D \\a","Rational:D \\b"]},"n":"infix:<*>"},{"n":"infix:<*>","s":{"p":["Complex:D \\a","Complex:D \\b"],"r":"Complex:D"},"k":"s","m":1},{"k":"s","m":1,"n":"infix:<*>","s":{"r":"Complex:D","p":["Complex:D \\a","Num(Real) \\b"]}},{"s":{"r":"Complex:D","p":["Num(Real) \\a","Complex:D \\b"]},"n":"infix:<*>","m":1,"k":"s"},{"n":"IntStr","t":"IntStr","m":[{"m":0,"k":"m","s":{"p":["Int:D $i","Str:D $s","*%_"],"r":"Mu"},"n":"new"},{"k":"m","m":0,"n":"Int","s":{"p":["*%_"],"r":"Mu"}},{"n":"ACCEPTS","s":{"r":"Mu","p":["\\topic","*%_"]},"k":"m","m":1},{"k":"m","m":1,"s":{"p":["Mu:U \\topic","*%_"],"r":"Mu"},"n":"ACCEPTS"},{"m":1,"k":"m","n":"ACCEPTS","s":{"r":"Mu","p":["Mu:D \\a","*%_"]}},{"s":{"r":"Bool","p":["Mu:U $","*%_"]},"n":"ACCEPTS","m":1,"k":"m"},{"s":{"p":["\\topic","*%_"],"r":"Bool:D"},"n":"ACCEPTS","m":1,"k":"m"},{"k":"m","m":1,"s":{"p":["Any:D \\a","*%_"],"r":"Mu"},"n":"ACCEPTS"},{"s":{"p":["Any:D \\a","*%_"],"r":"Mu"},"n":"ACCEPTS","k":"m","m":1},{"k":"m","m":1,"n":"Numeric","s":{"r":"Mu","p":["*%_"]}},{"k":"m","m":1,"s":{"p":["*%_"],"r":"Mu"},"n":"Numeric"},{"m":1,"k":"m","s":{"r":"Mu","p":["*%_"]},"n":"Numeric"},{"m":1,"k":"m","n":"Numeric","s":{"p":["*%_"],"r":"Mu"}},{"m":1,"k":"m","n":"Numeric","s":{"r":"Mu","p":["*%_"]}},{"k":"m","m":1,"s":{"p":["*%_"],"r":"Mu"},"n":"Real"},{"s":{"r":"Mu","p":["*%_"]},"n":"Real","k":"m","m":1},{"n":"Real","s":{"r":"Mu","p":["*%_"]},"k":"m","m":1},{"k":"m","m":1,"n":"Real","s":{"p":["*%_"],"r":"Mu"}},{"s":{"p":["*%_"],"r":"Mu"},"n":"Real","m":1,"k":"m"},{"n":"Real","s":{"r":"Mu","p":["*%_"]},"m":1,"k":"m"},{"m":1,"k":"m","n":"Str","s":{"p":["*%_"],"r":"Mu"}},{"s":{"p":["*%_"],"r":"Mu"},"n":"Str","k":"m","m":1},{"m":1,"k":"m","s":{"r":"Str:D","p":["*%_"]},"n":"Str"},{"k":"m","m":1,"s":{"p":["*%_"],"r":"Mu"},"n":"Str"},{"s":{"r":"Mu","p":["*%_"]},"n":"Str","k":"m","m":1},{"k":"m","m":1,"n":"perl","s":{"r":"Mu","p":["*%_"]}},{"n":"perl","s":{"p":["*%_"],"r":"Mu"},"k":"m","m":1},{"m":1,"k":"m","s":{"r":"Str:D","p":["*%_"]},"n":"perl"},{"n":"perl","s":{"p":["*%_"],"r":"Mu"},"k":"m","m":1},{"s":{"p":["@auto","%init","*%_"],"r":"Mu"},"n":"BUILDALL","m":0,"k":"s"},{"m":0,"k":"m","n":"acosec","s":{"r":"Mu","p":["*%_"]}},{"n":"gist","s":{"p":["*%_"],"r":"Mu"},"m":1,"k":"m"},{"s":{"p":["*%_"],"r":"Mu"},"n":"gist","k":"m","m":1},{"s":{"r":"Mu","p":["*%_"]},"n":"gist","m":1,"k":"m"},{"s":{"p":["*%_"],"r":"Int:D"},"n":"lsb","k":"m","m":0},{"k":"m","m":0,"s":{"p":["*%_"],"r":"Int:D"},"n":"floor"},{"m":1,"k":"m","s":{"r":"Int:D","p":["*%_"]},"n":"round"},{"k":"m","m":1,"n":"round","s":{"r":"Real:D","p":["Real(Cool) $scale","*%_"]}},{"k":"m","m":1,"n":"round","s":{"r":"Mu","p":["*%_"]}},{"s":{"r":"Mu","p":["$scale","*%_"]},"n":"round","k":"m","m":1},{"m":0,"k":"m","s":{"r":"FatRat:D","p":["$?","*%_"]},"n":"FatRat"},{"s":{"r":"Bool","p":["*%_"]},"n":"Bool","m":1,"k":"m"},{"m":1,"k":"m","n":"Bool","s":{"p":["*%_"],"r":"Mu"}},{"n":"Bool","s":{"r":"Bool:D","p":["*%_"]},"k":"m","m":1},{"s":{"r":"Mu","p":["*%_"]},"n":"Bool","k":"m","m":1},{"k":"m","m":0,"s":{"p":["+@mods","*%_"],"r":"Seq:D"},"n":"polymod"},{"m":0,"k":"m","s":{"r":"Mu","p":["*%_"]},"n":"acotanh"},{"m":0,"k":"m","s":{"r":"Mu","p":["*%_"]},"n":"cotanh"},{"n":"roots","s":{"r":"Mu","p":["Cool $n","*%_"]},"k":"m","m":0},{"k":"m","m":0,"n":"chr","s":{"p":["*%_"],"r":"Str:D"}},{"n":"sech","s":{"r":"Mu","p":["*%_"]},"k":"m","m":0},{"s":{"r":"Mu","p":["*%_"]},"n":"acosh","m":0,"k":"m"},{"m":0,"k":"m","n":"truncate","s":{"r":"Mu","p":["*%_"]}},{"m":1,"k":"m","n":"base","s":{"p":["Int:D $base","*%_"],"r":"Str:D"}},{"k":"m","m":1,"s":{"p":["Int(Cool) $base","$digits?","*%_"],"r":"Str:D"},"n":"base"},{"k":"m","m":0,"n":"acos","s":{"r":"Mu","p":["*%_"]}},{"s":{"p":["*%_"],"r":"Int:D"},"n":"ceiling","m":0,"k":"m"},{"k":"m","m":0,"s":{"r":"Mu","p":["*%_"]},"n":"sign"},{"k":"m","m":0,"s":{"p":["*%_"],"r":"Mu"},"n":"Complex"},{"m":1,"k":"m","n":"WHICH","s":{"r":"ValueObjAt:D","p":["*%_"]}},{"s":{"p":["*%_"],"r":"ObjAt:D"},"n":"WHICH","m":1,"k":"m"},{"s":{"r":"ValueObjAt:D","p":["*%_"]},"n":"WHICH","k":"m","m":1},{"k":"m","m":0,"n":"asinh","s":{"r":"Mu","p":["*%_"]}},{"s":{"p":["*%_"],"r":"Mu"},"n":"cosh","k":"m","m":0},{"n":"narrow","s":{"p":["*%_"],"r":"Int:D"},"k":"m","m":0},{"n":"Rat","s":{"p":["$?","*%_"],"r":"Rat:D"},"k":"m","m":0},{"k":"m","m":0,"n":"sqrt","s":{"p":["*%_"],"r":"Num:D"}},{"s":{"r":"Mu","p":["*%_"]},"n":"DUMP","m":1,"k":"m"},{"n":"DUMP","s":{"p":[":$indent-step = 4",":%ctx","*%_"],"r":"Mu"},"m":1,"k":"m"},{"s":{"p":["*%_"],"r":"Mu"},"n":"DUMP","m":1,"k":"m"},{"s":{"r":"Int:D","p":["*%_"]},"n":"abs","k":"m","m":0},{"k":"m","m":0,"s":{"p":["*%_"],"r":"Mu"},"n":"sinh"},{"s":{"p":["*%_"],"r":"Mu"},"n":"Str","m":1,"k":"m"},{"s":{"p":["*%_"],"r":"Mu"},"n":"Str","k":"m","m":1},{"k":"m","m":1,"n":"Str","s":{"r":"Str:D","p":["*%_"]}},{"m":1,"k":"m","n":"Str","s":{"r":"Mu","p":["*%_"]}},{"k":"m","m":0,"n":"Capture","s":{"r":"Mu","p":["*%_"]}},{"m":0,"k":"m","n":"asec","s":{"r":"Mu","p":["*%_"]}},{"n":"exp","s":{"p":["*%_"],"r":"Mu"},"m":1,"k":"m"},{"n":"exp","s":{"r":"Mu","p":["$base","*%_"]},"m":1,"k":"m"},{"k":"m","m":0,"s":{"p":["*%_"],"r":"Mu"},"n":"acotan"},{"k":"m","m":0,"n":"msb","s":{"r":"Int:D","p":["*%_"]}},{"m":0,"k":"m","s":{"p":["*%_"],"r":"Mu"},"n":"pred"},{"k":"m","m":0,"n":"expmod","s":{"r":"Int:D","p":["Int:D \\base","Int:D \\mod","*%_"]}},{"m":1,"k":"m","s":{"p":["*%_"],"r":"Mu"},"n":"log"},{"m":1,"k":"m","n":"log","s":{"r":"Mu","p":["Real $base","*%_"]}},{"k":"m","m":1,"s":{"p":["Cool $base","*%_"],"r":"Mu"},"n":"log"},{"k":"m","m":1,"s":{"p":["Numeric $base","*%_"],"r":"Mu"},"n":"log"},{"n":"tanh","s":{"p":["*%_"],"r":"Mu"},"k":"m","m":0},{"m":0,"k":"m","s":{"p":["*%_"],"r":"Mu"},"n":"succ"},{"m":0,"k":"m","n":"atan","s":{"p":["*%_"],"r":"Mu"}},{"s":{"p":["*%_"],"r":"Mu"},"n":"cosech","m":0,"k":"m"},{"s":{"p":["*%_"],"r":"Bool:D"},"n":"is-prime","k":"m","m":0},{"m":0,"k":"m","n":"Int","s":{"p":["*%_"],"r":"Int"}},{"n":"sec","s":{"p":["*%_"],"r":"Mu"},"k":"m","m":0},{"m":0,"k":"m","n":"unpolar","s":{"r":"Mu","p":["Real $angle","*%_"]}},{"k":"m","m":1,"s":{"p":["*%_"],"r":"Mu"},"n":"Numeric"},{"n":"Numeric","s":{"r":"Mu","p":["*%_"]},"k":"m","m":1},{"m":1,"k":"m","s":{"r":"Mu","p":["*%_"]},"n":"Numeric"},{"s":{"r":"Mu","p":["*%_"]},"n":"tan","m":0,"k":"m"},{"k":"m","m":1,"s":{"r":"Mu","p":["*%_"]},"n":"Real"},{"m":1,"k":"m","s":{"p":["*%_"],"r":"Mu"},"n":"Real"},{"m":1,"k":"m","s":{"p":["*%_"],"r":"Mu"},"n":"Real"},{"m":1,"k":"m","s":{"r":"Mu","p":["*%_"]},"n":"Real"},{"s":{"p":["*%_"],"r":"Num:D"},"n":"Bridge","m":0,"k":"m"},{"s":{"p":["*%_"],"r":"Range:D"},"n":"Range","k":"m","m":0},{"s":{"p":["*%_"],"r":"Mu"},"n":"acosech","k":"m","m":0},{"m":0,"k":"m","n":"asech","s":{"p":["*%_"],"r":"Mu"}},{"n":"perl","s":{"p":["*%_"],"r":"Mu"},"m":1,"k":"m"},{"n":"perl","s":{"r":"Mu","p":["*%_"]},"m":1,"k":"m"},{"k":"m","m":1,"n":"perl","s":{"p":["*%_"],"r":"Str:D"}},{"m":1,"k":"m","n":"ACCEPTS","s":{"r":"Mu","p":["\\topic","*%_"]}},{"s":{"p":["Mu:U \\topic","*%_"],"r":"Mu"},"n":"ACCEPTS","k":"m","m":1},{"n":"ACCEPTS","s":{"p":["Mu:D \\a","*%_"],"r":"Mu"},"k":"m","m":1},{"k":"m","m":1,"n":"ACCEPTS","s":{"p":["Mu:U $","*%_"],"r":"Bool"}},{"k":"m","m":1,"s":{"p":["\\topic","*%_"],"r":"Bool:D"},"n":"ACCEPTS"},{"k":"m","m":1,"n":"ACCEPTS","s":{"r":"Mu","p":["Any:D \\a","*%_"]}},{"m":0,"k":"m","s":{"p":["*%_"],"r":"Mu"},"n":"sin"},{"s":{"r":"Mu","p":["*%_"]},"n":"asin","k":"m","m":0},{"m":0,"k":"m","n":"atanh","s":{"p":["*%_"],"r":"Mu"}},{"s":{"p":["*%_"],"r":"Mu"},"n":"rand","k":"m","m":0},{"s":{"r":"Mu","p":["*%_"]},"n":"cotan","k":"m","m":0},{"n":"unival","s":{"p":["*%_"],"r":"Mu"},"k":"m","m":0},{"m":0,"k":"m","s":{"p":["*%_"],"r":"Num:D"},"n":"Num"},{"k":"m","m":1,"s":{"r":"Mu","p":["Real $x = 1e0","*%_"]},"n":"atan2"},{"m":1,"k":"m","s":{"r":"Mu","p":["Cool $x = 1e0","*%_"]},"n":"atan2"},{"m":0,"k":"m","n":"conj","s":{"r":"Mu","p":["*%_"]}},{"n":"cosec","s":{"p":["*%_"],"r":"Mu"},"k":"m","m":0},{"m":0,"k":"m","s":{"p":["*%_"],"r":"Mu"},"n":"cis"},{"k":"m","m":1,"s":{"r":"Int:D","p":["\\value","*%_"]},"n":"new"},{"k":"m","m":1,"n":"new","s":{"p":["int \\value","*%_"],"r":"Int:D"}},{"m":1,"k":"m","s":{"p":["Int:D \\value = 0","*%_"],"r":"Int:D"},"n":"new"},{"n":"cos","s":{"p":["*%_"],"r":"Mu"},"m":0,"k":"m"},{"k":"m","m":0,"n":"isNaN","s":{"p":["*%_"],"r":"Mu"}},{"m":0,"k":"m","n":"log10","s":{"p":["*%_"],"r":"Mu"}},{"s":{"r":"Mu","p":["@auto","%init","*%_"]},"n":"BUILDALL","m":0,"k":"s"},{"m":1,"k":"m","n":"indent","s":{"r":"Mu","p":["$steps where { ... }","*%_"]}},{"k":"m","m":1,"n":"indent","s":{"p":["$steps where { ... }","*%_"],"r":"Mu"}},{"s":{"r":"Mu","p":["$steps where { ... }","*%_"]},"n":"indent","m":1,"k":"m"},{"n":"indent","s":{"p":["Whatever $steps","*%_"],"r":"Mu"},"m":1,"k":"m"},{"n":"wordcase","s":{"p":[":&filter = { ... }","Mu :$where = Bool::True","*%_"],"r":"Str:D"},"k":"m","m":0},{"k":"m","m":1,"s":{"r":"Mu","p":["Cool:D $pattern","|c is raw"]},"n":"match"},{"s":{"p":["Regex:D $pattern",":continue(:$c)!","*%_"],"r":"Mu"},"n":"match","k":"m","m":1},{"m":1,"k":"m","s":{"p":["Regex:D $pattern",":pos(:$p)!","*%_"],"r":"Mu"},"n":"match"},{"k":"m","m":1,"n":"match","s":{"p":["Regex:D $pattern",":global(:$g)!","*%_"],"r":"Mu"}},{"k":"m","m":1,"n":"match","s":{"p":["Regex:D $pattern",":overlap(:$ov)!","*%_"],"r":"Mu"}},{"m":1,"k":"m","s":{"p":["Regex:D $pattern",":exhaustive(:$ex)!","*%_"],"r":"Mu"},"n":"match"},{"s":{"r":"Mu","p":["Regex:D $pattern",":$x!","*%_"]},"n":"match","m":1,"k":"m"},{"s":{"p":["Regex:D $pattern",":$st!","*%_"],"r":"Mu"},"n":"match","k":"m","m":1},{"m":1,"k":"m","s":{"p":["Regex:D $pattern",":$nd!","*%_"],"r":"Mu"},"n":"match"},{"m":1,"k":"m","n":"match","s":{"p":["Regex:D $pattern",":$rd!","*%_"],"r":"Mu"}},{"k":"m","m":1,"n":"match","s":{"p":["Regex:D $pattern",":$th!","*%_"],"r":"Mu"}},{"s":{"r":"Mu","p":["Regex:D $pattern",":$nth!","*%_"]},"n":"match","m":1,"k":"m"},{"n":"match","s":{"p":["Regex:D $pattern",":$as!","*%_"],"r":"Mu"},"k":"m","m":1},{"n":"match","s":{"p":["Regex:D $pattern","*%_"],"r":"Mu"},"m":1,"k":"m"},{"n":"Bool","s":{"p":["*%_"],"r":"Bool"},"m":1,"k":"m"},{"n":"Bool","s":{"r":"Mu","p":["*%_"]},"m":1,"k":"m"},{"m":1,"k":"m","s":{"r":"Bool:D","p":["*%_"]},"n":"Bool"},{"n":"gist","s":{"r":"Mu","p":["*%_"]},"k":"m","m":1},{"k":"m","m":1,"s":{"r":"Mu","p":["*%_"]},"n":"gist"},{"m":1,"k":"m","n":"gist","s":{"r":"Str:D","p":["*%_"]}},{"s":{"p":["*%_"],"r":"Mu"},"n":"univals","k":"m","m":0},{"s":{"r":"Int:D","p":[":$count!","*%_"]},"n":"lines","k":"m","m":1},{"n":"lines","s":{"r":"Seq:D","p":["$limit","*%_"]},"m":1,"k":"m"},{"s":{"p":["*%_"],"r":"Seq:D"},"n":"lines","m":1,"k":"m"},{"s":{"p":["*%_"],"r":"Str:D"},"n":"tclc","k":"m","m":1},{"n":"tclc","s":{"r":"Str:D","p":["*%_"]},"m":1,"k":"m"},{"n":"subst-mutate","s":{"p":["Any:D $matcher","$replacement",":ii(:$samecase)",":ss(:$samespace)",":mm(:$samemark)","*%options"],"r":"Mu"},"k":"m","m":1},{"n":"lc","s":{"p":["*%_"],"r":"Str:D"},"k":"m","m":1},{"s":{"r":"Str:D","p":["*%_"]},"n":"lc","k":"m","m":1},{"s":{"p":["*%_"],"r":"Mu"},"n":"WORDS_AUTODEREF","k":"m","m":0},{"m":1,"k":"m","n":"uc","s":{"p":["*%_"],"r":"Str:D"}},{"s":{"p":["*%_"],"r":"Str:D"},"n":"uc","m":1,"k":"m"},{"m":1,"k":"m","s":{"p":["*%_"],"r":"Mu"},"n":"DUMP"},{"m":1,"k":"m","n":"DUMP","s":{"r":"Mu","p":[":$indent-step = 4",":%ctx","*%_"]}},{"k":"m","m":1,"s":{"r":"Str:D","p":["*%_"]},"n":"DUMP"},{"k":"m","m":0,"n":"trim","s":{"p":["*%_"],"r":"Str:D"}},{"s":{"p":["*%_"],"r":"Mu"},"n":"WHY","m":1,"k":"m"},{"s":{"r":"Int","p":["*%_"]},"n":"WHY","m":1,"k":"m"},{"n":"chars","s":{"p":["*%_"],"r":"Int:D"},"k":"m","m":1},{"m":1,"k":"m","s":{"p":["*%_"],"r":"Int:D"},"n":"chars"},{"n":"parse-names","s":{"r":"Str:D","p":["*%_"]},"m":0,"k":"m"},{"k":"m","m":1,"s":{"p":["*%_"],"r":"ValueObjAt:D"},"n":"WHICH"},{"m":1,"k":"m","n":"WHICH","s":{"p":["*%_"],"r":"ObjAt:D"}},{"m":1,"k":"m","s":{"r":"ValueObjAt:D","p":["*%_"]},"n":"WHICH"},{"n":"flip","s":{"r":"Str:D","p":["*%_"]},"k":"m","m":1},{"s":{"p":["*%_"],"r":"Str:D"},"n":"flip","k":"m","m":1},{"k":"m","m":1,"s":{"r":"Mu","p":["*%_"]},"n":"ords"},{"m":1,"k":"m","s":{"p":["*%_"],"r":"Mu"},"n":"ords"},{"s":{"p":["Cool:D $needle","*%_"],"r":"Int:D"},"n":"index","m":1,"k":"m"},{"s":{"r":"Int:D","p":["Str:D $needle","*%_"]},"n":"index","m":1,"k":"m"},{"s":{"p":["Cool:D $needle","Cool:D $pos","*%_"],"r":"Int:D"},"n":"index","k":"m","m":1},{"n":"index","s":{"p":["Str:D $needle","Int:D $pos","*%_"],"r":"Int:D"},"m":1,"k":"m"},{"n":"words","s":{"p":["$limit","*%_"],"r":"Seq:D"},"k":"m","m":1},{"s":{"p":["*%_"],"r":"Seq:D"},"n":"words","m":1,"k":"m"},{"n":"uniparse","s":{"p":["*%_"],"r":"Str:D"},"k":"m","m":0},{"k":"m","m":0,"s":{"r":"NFKC:D","p":["*%_"]},"n":"NFKC"},{"k":"m","m":0,"s":{"p":["*%_"],"r":"Str:D"},"n":"trim-leading"},{"k":"m","m":1,"n":"trans","s":{"r":"Str:D","p":["Pair:D \\what","*%n"]}},{"k":"m","m":1,"n":"trans","s":{"p":["*@changes",":c(:$complement)",":s(:$squash)",":d(:$delete)","*%_"],"r":"Str:D"}},{"s":{"p":["*%_"],"r":"Str:D"},"n":"pred","k":"m","m":0},{"n":"split","s":{"p":["Regex:D $pat","$limit is copy = Inf",":$v is copy",":$k",":$kv",":$p",":$skip-empty","*%_"],"r":"Seq:D"},"k":"m","m":1},{"m":1,"k":"m","n":"split","s":{"r":"Seq:D","p":["Str(Cool) $match",":$v is copy",":$k",":$kv",":$p",":$skip-empty","*%_"]}},{"m":1,"k":"m","s":{"p":["Str(Cool) $match","$limit is copy = Inf",":$v is copy",":$k",":$kv",":$p",":$skip-empty","*%_"],"r":"Mu"},"n":"split"},{"k":"m","m":1,"s":{"p":["@needles","$parts is copy = Inf",":$v is copy",":$k",":$kv",":$p",":$skip-empty","*%_"],"r":"Seq:D"},"n":"split"},{"n":"trim-trailing","s":{"p":["*%_"],"r":"Str:D"},"k":"m","m":0},{"m":1,"k":"m","s":{"p":["*%_"],"r":"Mu"},"n":"Str"},{"n":"Str","s":{"r":"Mu","p":["*%_"]},"m":1,"k":"m"},{"s":{"p":["*%_"],"r":"Str:D"},"n":"Str","k":"m","m":1},{"k":"m","m":0,"n":"Capture","s":{"r":"Mu","p":["*%_"]}},{"m":0,"k":"m","s":{"r":"Int:D","p":["*%_"]},"n":"Int"},{"s":{"r":"Mu","p":["Str:D $pattern","&filter?","Bool :$samespace","*%_"]},"n":"word-by-word","m":0,"k":"m"},{"n":"Stringy","s":{"r":"Mu","p":["*%_"]},"m":1,"k":"m"},{"m":1,"k":"m","s":{"p":["*%_"],"r":"Mu"},"n":"Stringy"},{"k":"m","m":1,"n":"Stringy","s":{"p":["*%_"],"r":"Str:D"}},{"k":"m","m":1,"n":"chop","s":{"p":["*%_"],"r":"Mu"}},{"k":"m","m":1,"s":{"r":"Mu","p":["$n","*%_"]},"n":"chop"},{"s":{"r":"Str:D","p":["*%_"]},"n":"chop","m":1,"k":"m"},{"m":1,"k":"m","s":{"p":["$chopping","*%_"],"r":"Str:D"},"n":"chop"},{"k":"m","m":1,"s":{"r":"Bool:D","p":["Cool:D $suffix","*%_"]},"n":"ends-with"},{"n":"ends-with","s":{"r":"Bool:D","p":["Str:D $suffix","*%_"]},"k":"m","m":1},{"n":"succ","s":{"p":["*%_"],"r":"Str:D"},"m":0,"k":"m"},{"m":0,"k":"m","s":{"p":["Str:D $pattern","*%_"],"r":"Str:D"},"n":"samemark"},{"s":{"p":["*%_"],"r":"NFC:D"},"n":"NFC","m":0,"k":"m"},{"m":1,"k":"m","n":"comb","s":{"r":"Seq:D","p":["*%_"]}},{"s":{"r":"Seq:D","p":["Int:D $size is copy","$limit = *","*%_"]},"n":"comb","k":"m","m":1},{"n":"comb","s":{"p":["Str $pat","*%_"],"r":"Seq:D"},"m":1,"k":"m"},{"k":"m","m":1,"s":{"p":["Str $pat","$limit","*%_"],"r":"Seq:D"},"n":"comb"},{"n":"comb","s":{"p":["Regex:D $pattern",":$match","*%_"],"r":"Seq:D"},"m":1,"k":"m"},{"k":"m","m":1,"s":{"p":["Regex:D $pattern","$limit",":$match","*%_"],"r":"Seq:D"},"n":"comb"},{"k":"m","m":1,"n":"indices","s":{"p":["Cool:D $needle","*%pars"],"r":"Mu"}},{"n":"indices","s":{"p":["Str:D $needle",":$overlap","*%_"],"r":"Mu"},"k":"m","m":1},{"n":"indices","s":{"r":"Mu","p":["Cool:D $needle","Cool:D $start","*%pars"]},"k":"m","m":1},{"k":"m","m":1,"s":{"r":"Mu","p":["Str:D $needle","Int:D $start",":$overlap","*%_"]},"n":"indices"},{"k":"m","m":1,"s":{"p":["Cool:D $needle","*%_"],"r":"Bool:D"},"n":"starts-with"},{"n":"starts-with","s":{"r":"Bool:D","p":["Str:D $needle","*%_"]},"m":1,"k":"m"},{"m":0,"k":"m","n":"NFKD","s":{"p":["*%_"],"r":"NFKD:D"}},{"k":"m","m":0,"n":"NFD","s":{"p":["*%_"],"r":"NFD:D"}},{"k":"m","m":1,"n":"ord","s":{"p":["*%_"],"r":"Int:D"}},{"m":1,"k":"m","n":"ord","s":{"p":["*%_"],"r":"Nil"}},{"m":1,"k":"m","s":{"r":"Str:D","p":["*%_"]},"n":"fc"},{"m":1,"k":"m","s":{"r":"Str:D","p":["*%_"]},"n":"fc"},{"k":"m","m":1,"n":"perl","s":{"p":["*%_"],"r":"Mu"}},{"s":{"r":"Mu","p":["*%_"]},"n":"perl","m":1,"k":"m"},{"s":{"p":["*%_"],"r":"Str:D"},"n":"perl","k":"m","m":1},{"n":"Numeric","s":{"p":["*%_"],"r":"Mu"},"k":"m","m":1},{"s":{"p":["*%_"],"r":"Numeric:D"},"n":"Numeric","k":"m","m":1},{"m":1,"k":"m","s":{"p":["*%_"],"r":"Int:D"},"n":"codes"},{"s":{"p":["*%_"],"r":"Int:D"},"n":"codes","k":"m","m":1},{"m":0,"k":"m","n":"parse-base","s":{"r":"Numeric:D","p":["Int:D $radix","*%_"]}},{"n":"substr","s":{"p":["\\from","*%_"],"r":"Mu"},"k":"m","m":1},{"n":"substr","s":{"p":["\\from","\\chars","*%_"],"r":"Mu"},"m":1,"k":"m"},{"k":"m","m":1,"n":"substr","s":{"r":"Str:D","p":["Int:D \\start","*%_"]}},{"s":{"p":["Int:D \\start","Int:D \\want","*%_"],"r":"Str:D"},"n":"substr","k":"m","m":1},{"n":"substr","s":{"p":["Int:D \\start","Callable:D \\want","*%_"],"r":"Str:D"},"k":"m","m":1},{"n":"substr","s":{"r":"Str:D","p":["Callable:D \\start","*%_"]},"k":"m","m":1},{"s":{"p":["Callable:D \\start","Int:D \\want","*%_"],"r":"Str:D"},"n":"substr","k":"m","m":1},{"n":"substr","s":{"p":["Callable:D \\start","Callable:D \\want","*%_"],"r":"Str:D"},"k":"m","m":1},{"k":"m","m":1,"s":{"p":["Range:D \\start","*%_"],"r":"Str:D"},"n":"substr"},{"s":{"p":["Regex:D $","$","*%_"],"r":"Mu"},"n":"substr","k":"m","m":1},{"n":"substr","s":{"r":"Str:D","p":["\\start","*%_"]},"k":"m","m":1},{"m":1,"k":"m","n":"substr","s":{"p":["\\from","\\want","*%_"],"r":"Str:D"}},{"n":"unival","s":{"p":["*%_"],"r":"Mu"},"m":0,"k":"m"},{"k":"m","m":1,"s":{"p":["Str:D $encoding = \"utf8\"",":$replacement",":$translate-nl = Bool::False",":$strict","*%_"],"r":"Blob:D"},"n":"encode"},{"m":0,"k":"m","n":"samecase","s":{"p":["Str:D $pattern","*%_"],"r":"Str:D"}},{"k":"m","m":1,"n":"substr-eq","s":{"r":"Bool:D","p":["Cool:D $needle","*%_"]}},{"n":"substr-eq","s":{"r":"Bool:D","p":["Str:D $needle","*%_"]},"m":1,"k":"m"},{"s":{"r":"Bool:D","p":["Cool:D $needle","Int:D $pos","*%_"]},"n":"substr-eq","m":1,"k":"m"},{"m":1,"k":"m","n":"substr-eq","s":{"r":"Bool:D","p":["Str:D $needle","Int:D $pos","*%_"]}},{"k":"m","m":1,"n":"substr-rw","s":{"p":["*%_"],"r":"Mu"}},{"m":1,"k":"m","s":{"r":"Mu","p":["\\from","*%_"]},"n":"substr-rw"},{"s":{"p":["\\from","\\chars","*%_"],"r":"Mu"},"n":"substr-rw","m":1,"k":"m"},{"s":{"p":["\\start","$want = Inf","*%_"],"r":"Mu"},"n":"substr-rw","m":1,"k":"m"},{"k":"m","m":1,"n":"ACCEPTS","s":{"r":"Mu","p":["\\topic","*%_"]}},{"m":1,"k":"m","n":"ACCEPTS","s":{"r":"Mu","p":["Mu:U \\topic","*%_"]}},{"s":{"r":"Mu","p":["Mu:D \\a","*%_"]},"n":"ACCEPTS","m":1,"k":"m"},{"n":"ACCEPTS","s":{"p":["Mu:U $","*%_"],"r":"Bool"},"m":1,"k":"m"},{"m":1,"k":"m","n":"ACCEPTS","s":{"r":"Bool:D","p":["\\topic","*%_"]}},{"m":1,"k":"m","s":{"r":"Bool:D","p":["Str:D \\other","*%_"]},"n":"ACCEPTS"},{"n":"ACCEPTS","s":{"p":["Any:D \\other","*%_"],"r":"Bool:D"},"k":"m","m":1},{"s":{"r":"Bool:D","p":["Cool:D $needle","*%_"]},"n":"contains","m":1,"k":"m"},{"m":1,"k":"m","s":{"r":"Bool:D","p":["Str:D $needle","*%_"]},"n":"contains"},{"k":"m","m":1,"s":{"p":["Cool:D $needle","Int(Cool:D) $pos","*%_"],"r":"Bool:D"},"n":"contains"},{"k":"m","m":1,"n":"contains","s":{"p":["Str:D $needle","Int:D $pos","*%_"],"r":"Bool:D"}},{"k":"m","m":1,"n":"rindex","s":{"p":["Cool:D $needle","*%_"],"r":"Int:D"}},{"k":"m","m":1,"s":{"r":"Int:D","p":["Str:D $needle","*%_"]},"n":"rindex"},{"n":"rindex","s":{"r":"Int:D","p":["Cool:D $needle","Cool:D $pos","*%_"]},"m":1,"k":"m"},{"n":"rindex","s":{"p":["Str:D $needle","Int:D $pos","*%_"],"r":"Int:D"},"m":1,"k":"m"},{"s":{"r":"Str:D","p":["*%_"]},"n":"tc","m":1,"k":"m"},{"n":"tc","s":{"p":["*%_"],"r":"Str:D"},"k":"m","m":1},{"m":0,"k":"m","s":{"p":["*%_"],"r":"Num:D"},"n":"Num"},{"m":0,"k":"m","s":{"r":"Str:D","p":["*%_"]},"n":"chomp"},{"n":"samespace","s":{"p":["Str:D $pattern","*%_"],"r":"Mu"},"m":0,"k":"m"},{"n":"subst","s":{"r":"Mu","p":["Str:D $original","Str:D $final","*%options"]},"k":"m","m":1},{"k":"m","m":1,"n":"subst","s":{"r":"Mu","p":["$matcher","$replacement","*%options"]}},{"m":0,"k":"s","s":{"r":"Mu","p":["@auto","%init","*%_"]},"n":"BUILDALL"},{"n":"BUILD","s":{"r":"Nil","p":[":$value = \"\"","*%_"]},"m":0,"k":"s"}],"k":"c","b":"C","d":"TITLE\nclass IntStr\n\nSUBTITLE\nDual value integer and string\n\n    class IntStr is Int is Str { }\n\nThe dual value types (often referred to as allomorphs) allow for the\nrepresentation of a value as both a string and a numeric type. Typically\nthey will be created for you when the context is \"stringy\" but they can be\ndetermined to be numbers, such as in some quoting constructs:\n\n    my $f = <42>; say $f.^name; # OUTPUT: «IntStr␤»\n\nAs a subclass of both Int and Str, an IntStr will be accepted where either\nis expected. However, IntStr does not share object identity with Int- or\nStr-only variants:\n\n    my $int-str = <42>;\n    my Int $int = $int-str; # OK!\n    my Str $str = $int-str; # OK!\n    say 42 ∈ <42  55  1>;   # False; ∈ operator cares about object identity\n\n"},{"k":"v","t":"Sub+{Callable[Bool:D]}+{is-pure}+{Precedence}","n":"&infix:<⊂>"},{"s":{"r":"Bool:D","p":["Setty:D \\a","Setty:D \\b"]},"n":"infix:«(<)»","k":"s","m":1},{"s":{"p":["Setty:D \\a","Mixy:D \\b"],"r":"Bool:D"},"n":"infix:«(<)»","k":"s","m":1},{"m":1,"k":"s","n":"infix:«(<)»","s":{"p":["Setty:D \\a","Baggy:D \\b"],"r":"Bool:D"}},{"k":"s","m":1,"s":{"p":["Setty:D \\a","\\b"],"r":"Bool:D"},"n":"infix:«(<)»"},{"n":"infix:«(<)»","s":{"p":["Mixy:D \\a","Mixy:D \\b"],"r":"Bool:D"},"m":1,"k":"s"},{"k":"s","m":1,"s":{"p":["Mixy:D \\a","Baggy:D \\b"],"r":"Bool:D"},"n":"infix:«(<)»"},{"k":"s","m":1,"n":"infix:«(<)»","s":{"r":"Bool:D","p":["Mixy:D \\a","\\b"]}},{"n":"infix:«(<)»","s":{"p":["Baggy:D \\a","Mixy:D \\b"],"r":"Bool:D"},"k":"s","m":1},{"k":"s","m":1,"n":"infix:«(<)»","s":{"p":["Baggy:D \\a","Baggy:D \\b"],"r":"Bool:D"}},{"k":"s","m":1,"n":"infix:«(<)»","s":{"r":"Bool:D","p":["Baggy:D \\a","\\b"]}},{"m":1,"k":"s","s":{"r":"Bool:D","p":["\\a","Mixy:D \\b"]},"n":"infix:«(<)»"},{"k":"s","m":1,"s":{"p":["\\a","Baggy:D \\b"],"r":"Bool:D"},"n":"infix:«(<)»"},{"s":{"p":["Failure:D \\a","$"],"r":"Mu"},"n":"infix:«(<)»","k":"s","m":1},{"k":"s","m":1,"n":"infix:«(<)»","s":{"p":["$","Failure:D \\b"],"r":"Mu"}},{"s":{"r":"Bool:D","p":["\\a","\\b"]},"n":"infix:«(<)»","k":"s","m":1},{"k":"c","m":[{"m":0,"k":"m","n":"new","s":{"p":[":$name",":$line",":$prematch",":$postmatch","*%_"],"r":"Mu"}},{"m":0,"k":"m","n":"name","s":{"p":["*%_"],"r":"Mu"}},{"s":{"r":"Mu","p":["*@","*%_"]},"n":"goto","k":"m","m":0},{"m":0,"k":"m","s":{"p":["*@","*%_"],"r":"Mu"},"n":"leave"},{"k":"m","m":0,"s":{"r":"Mu","p":["*%_"]},"n":"Int"},{"n":"next","s":{"r":"Mu","p":["*%_"]},"m":0,"k":"m"},{"m":0,"k":"m","n":"redo","s":{"p":["*%_"],"r":"Mu"}},{"s":{"r":"Mu","p":["*%_"]},"n":"last","k":"m","m":0},{"s":{"p":["*%_"],"r":"Mu"},"n":"gist","k":"m","m":1},{"n":"gist","s":{"p":["*%_"],"r":"Mu"},"m":1,"k":"m"},{"n":"gist","s":{"r":"Mu","p":["*%_"]},"k":"m","m":1},{"k":"s","m":0,"s":{"r":"Mu","p":["@auto","%init","*%_"]},"n":"BUILDALL"}],"b":"A","a":[{"n":"$!name","t":"Str","k":"v"},{"k":"v","n":"$!file","t":"Str"},{"n":"$!line","t":"Int","k":"v"},{"t":"Str","n":"$!prematch","k":"v"},{"k":"v","t":"Str","n":"$!postmatch"}],"d":"TITLE\nclass Label\n\nSUBTITLE\nTagged location in the source code\n\n    class Label {}\n\nLabels are used in Raku to tag loops so that you can specify the one you\nwant to jump to with statements such as last. You can use it to jump out of\nloops and get to outer ones, instead of just exiting the current loop or\ngoing to the statement before.\n\n    USERS:          # the label\n    for @users -> $u {\n        for $u.pets -> $pet {\n            # usage of a label\n            next USERS if $pet.barks;\n        }\n        say \"None of {$u}'s pets barks\";\n    }\n    say USERS.^name;        # OUTPUT: «Label␤»\n\n\nThose label are objects of type Label, as shown in the last statement.\nLabels can be used in any loop construct, as long as they appear right\nbefore the loop statement.\n\n    my $x = 0;\n    my $y = 0;\n    my $t = '';\n    A: while $x++ < 2 {\n        $t ~= \"A$x\";\n        B: while $y++ < 2 {\n            $t ~= \"B$y\";\n            redo A if $y++ == 1;\n            last A\n        }\n    }\n    say $t; # OUTPUT: «A1B1A1A2»\n\n\nPutting them on the line before the loop or the same line is optional.\nLabels must follow the syntax of ordinary identifiers, although\ntraditionally we will use the latin alphabet in uppercase so that they\nstand out in the source. You can use, however, other alphabets like here:\n\n    駱駝道: while True {\n      say 駱駝道.name;\n      last 駱駝道;\n    }\n\n","n":"Label","t":"Label"},{"n":"&infix:<|>","t":"Sub+{is-pure}+{Precedence}","k":"v"},{"k":"s","m":1,"n":"infix:<|>","s":{"r":"Mu","p":["+\\values is raw"]}},{"n":"&next","t":"Sub","k":"v"},{"k":"s","m":1,"s":{"p":[],"r":"Nil"},"n":"next"},{"m":1,"k":"s","s":{"p":["Label:D \\x"],"r":"Nil"},"n":"next"},{"k":"v","t":"Sub","n":"&msb"},{"n":"msb","s":{"r":"Int:D","p":["Int:D \\i"]},"k":"s","m":1},{"n":"&atomic-inc-fetch","t":"Sub","k":"v"},{"n":"atomic-inc-fetch","s":{"r":"atomicint","p":["atomicint $target is rw"]},"m":1,"k":"s"},{"b":"A","a":[{"k":"v","n":"$.batch","t":"int"},{"t":"Int","n":"$.degree","k":"v"}],"m":[{"k":"s","m":0,"n":"TWEAK","s":{"r":"Mu","p":[":$method","*%_"]}},{"n":"batch","s":{"r":"Mu","p":["*%_"]},"k":"m","m":0},{"k":"m","m":0,"s":{"p":["*%_"],"r":"Mu"},"n":"degree"},{"m":0,"k":"s","n":"BUILDALL","s":{"r":"Mu","p":["@auto","%init","*%_"]}}],"k":"c","t":"HyperConfiguration","n":"HyperConfiguration"},{"n":"IterationEnd","t":"Mu","b":"M","m":[{"n":"self","s":{"p":["*%_"],"r":"Mu"},"k":"m","m":0},{"k":"m","m":0,"s":{"p":["*%_"],"r":"Nil"},"n":"sink"},{"m":1,"k":"m","s":{"p":["\\topic","*%_"],"r":"Mu"},"n":"ACCEPTS"},{"m":1,"k":"m","n":"ACCEPTS","s":{"p":["Mu:U \\topic","*%_"],"r":"Mu"}},{"n":"WHERE","s":{"p":["*%_"],"r":"Mu"},"m":0,"k":"m"},{"m":1,"k":"m","s":{"p":["*%_"],"r":"ValueObjAt:D"},"n":"WHICH"},{"k":"m","m":1,"n":"WHICH","s":{"p":["*%_"],"r":"ObjAt:D"}},{"k":"m","m":1,"n":"iterator","s":{"r":"Mu","p":["*%_"]}},{"n":"emit","s":{"r":"Mu","p":["*%_"]},"k":"m","m":0},{"m":0,"k":"m","n":"take","s":{"r":"Mu","p":["*%_"]}},{"n":"return-rw","s":{"p":["|"],"r":"Mu"},"k":"m","m":0},{"n":"return","s":{"p":["|"],"r":"Mu"},"m":0,"k":"m"},{"n":"WHY","s":{"r":"Mu","p":["*%_"]},"m":1,"k":"m"},{"s":{"r":"Mu","p":["$why","*%_"]},"n":"set_why","m":0,"k":"m"},{"n":"Bool","s":{"r":"Bool","p":["*%_"]},"k":"m","m":1},{"s":{"r":"Mu","p":["*%_"]},"n":"Bool","m":1,"k":"m"},{"m":0,"k":"m","s":{"p":["*%_"],"r":"Mu"},"n":"so"},{"s":{"r":"Mu","p":["*%_"]},"n":"not","k":"m","m":0},{"s":{"p":["*%_"],"r":"Bool"},"n":"defined","k":"m","m":1},{"s":{"p":["*%_"],"r":"Bool"},"n":"defined","m":1,"k":"m"},{"n":"new","s":{"p":["*%attrinit"],"r":"Mu"},"m":1,"k":"m"},{"k":"m","m":1,"s":{"r":"Mu","p":["$","*@","*%_"]},"n":"new"},{"n":"is-lazy","s":{"r":"Bool","p":["*%_"]},"k":"m","m":1},{"s":{"r":"Mu","p":["*%_"]},"n":"CREATE","m":0,"k":"m"},{"s":{"p":["*%attrinit"],"r":"Mu"},"n":"bless","k":"m","m":0},{"n":"BUILDALL","s":{"r":"Mu","p":["@autovivs","%attrinit","*%_"]},"k":"m","m":0},{"m":0,"k":"m","n":"BUILD_LEAST_DERIVED","s":{"p":["%attrinit","*%_"],"r":"Mu"}},{"m":1,"k":"m","s":{"p":["*%_"],"r":"Mu"},"n":"Numeric"},{"n":"Real","s":{"p":["*%_"],"r":"Mu"},"k":"m","m":1},{"n":"Str","s":{"p":["*%_"],"r":"Mu"},"m":1,"k":"m"},{"n":"Str","s":{"p":["*%_"],"r":"Mu"},"m":1,"k":"m"},{"k":"m","m":1,"n":"Stringy","s":{"r":"Mu","p":["*%_"]}},{"n":"Stringy","s":{"r":"Mu","p":["*%_"]},"m":1,"k":"m"},{"s":{"r":"Mu","p":["*%_"]},"n":"item","m":0,"k":"m"},{"k":"m","m":1,"n":"say","s":{"p":["*%_"],"r":"Mu"}},{"n":"print","s":{"p":["*%_"],"r":"Mu"},"k":"m","m":0},{"s":{"p":["*%_"],"r":"Mu"},"n":"put","m":0,"k":"m"},{"m":0,"k":"m","s":{"r":"Mu","p":["*%_"]},"n":"note"},{"s":{"p":["$id","$gist","*%named"],"r":"Mu"},"n":"gistseen","m":0,"k":"m"},{"s":{"p":["*%_"],"r":"Mu"},"n":"gist","k":"m","m":1},{"s":{"p":["*%_"],"r":"Mu"},"n":"gist","m":1,"k":"m"},{"s":{"r":"Mu","p":["$id","$perl","*%named"]},"n":"perlseen","m":0,"k":"m"},{"k":"m","m":1,"s":{"r":"Mu","p":["*%_"]},"n":"perl"},{"s":{"r":"Mu","p":["*%_"]},"n":"perl","k":"m","m":1},{"n":"DUMP","s":{"r":"Mu","p":["*%_"]},"k":"m","m":1},{"m":1,"k":"m","s":{"r":"Mu","p":[":$indent-step = 4",":%ctx","*%_"]},"n":"DUMP"},{"m":0,"k":"m","s":{"p":["$before","$after = \")\"",":$indent = { ... }",":$indent-step","*%_"],"r":"Mu"},"n":"DUMP-PIECES"},{"s":{"r":"Mu","p":["|args is raw (*@args, Any :$indent-step, :%ctx, Any :$flags)"]},"n":"DUMP-OBJECT-ATTRS","m":0,"k":"m"},{"n":"isa","s":{"p":["Mu $type","*%_"],"r":"Bool:D"},"m":1,"k":"m"},{"m":1,"k":"m","n":"isa","s":{"r":"Bool:D","p":["Str:D $name","*%_"]}},{"m":0,"k":"m","n":"does","s":{"p":["Mu $type","*%_"],"r":"Mu"}},{"s":{"r":"Mu","p":["$name","*%_"]},"n":"can","k":"m","m":0},{"k":"m","m":1,"n":"clone","s":{"r":"Mu","p":["*%twiddles"]}},{"n":"clone","s":{"r":"Mu","p":["*%twiddles"]},"k":"m","m":1},{"m":0,"k":"m","s":{"p":["*%_"],"r":"Mu"},"n":"Capture"},{"k":"m","m":0,"n":"dispatch:<var>","s":{"r":"Mu","p":["$var","|c is raw"]}},{"k":"m","m":0,"n":"dispatch:<::>","s":{"p":["$name","Mu $type","|c is raw"],"r":"Mu"}},{"k":"m","m":0,"n":"dispatch:<!>","s":{"r":"Mu","p":["\\name","Mu \\type","|c is raw"]}},{"n":"dispatch:<.=>","s":{"p":["$name","|c is raw"],"r":"Mu"},"m":0,"k":"m"},{"k":"m","m":0,"n":"dispatch:<.?>","s":{"r":"Mu","p":["$name","|c is raw"]}},{"n":"dispatch:<.+>","s":{"r":"Mu","p":["$name","|c is raw"]},"k":"m","m":0},{"k":"m","m":0,"s":{"p":["\\name","|c is raw"],"r":"Mu"},"n":"dispatch:<.*>"},{"n":"dispatch:<hyper>","s":{"p":["$nodality","Str $meth-name","|c is raw"],"r":"Mu"},"m":0,"k":"m"},{"n":"WALK","s":{"r":"Mu","p":[":$name!",":$canonical",":$ascendant",":$descendant",":$preorder",":$breadth",":$super",":$omit",":$include","*%_"]},"m":0,"k":"m"}],"k":"c"},{"n":"&uninames","t":"Sub","k":"v"},{"s":{"p":["Str:D $str"],"r":"Mu"},"n":"uninames","m":1,"k":"s"},{"n":"&flat","t":"Sub","k":"v"},{"n":"flat","s":{"r":"Mu","p":["**@list is raw"]},"k":"s","m":1},{"s":{"p":["Iterable \\a"],"r":"Mu"},"n":"flat","m":1,"k":"s"},{"k":"v","n":"&sleep-until","t":"Sub"},{"n":"sleep-until","s":{"r":"Bool:D","p":["$until"]},"k":"s","m":1},{"a":[{"n":"$!parts","t":"Mu","k":"v"},{"n":"$!plus","t":"int","k":"v"},{"k":"v","n":"$!whatever","t":"int"},{"t":"str","n":"$!string","k":"v"}],"b":"A","k":"c","m":[{"k":"m","m":0,"s":{"r":"Mu","p":["*%_"]},"n":"Capture"},{"s":{"r":"Mu","p":["*%_"]},"n":"parts","k":"m","m":0},{"n":"plus","s":{"r":"Mu","p":["*%_"]},"k":"m","m":0},{"k":"m","m":0,"s":{"r":"Mu","p":["*%_"]},"n":"whatever"},{"n":"new","s":{"r":"Mu","p":["*%attrinit"]},"m":1,"k":"m"},{"k":"m","m":1,"s":{"p":["$","*@","*%_"],"r":"Mu"},"n":"new"},{"n":"new","s":{"p":["*%_"],"r":"Mu"},"k":"m","m":1},{"m":1,"k":"m","s":{"p":["Whatever $","*%_"],"r":"Mu"},"n":"new"},{"k":"m","m":1,"s":{"r":"Mu","p":["@parts","Str:D $string","$plus = 0","$whatever = 0","*%_"]},"n":"new"},{"k":"m","m":1,"n":"new","s":{"p":["$s","*%_"],"r":"Mu"}},{"n":"Str","s":{"r":"Mu","p":["*%_"]},"m":1,"k":"m"},{"s":{"r":"Mu","p":["*%_"]},"n":"Str","m":1,"k":"m"},{"m":1,"k":"m","s":{"p":["*%_"],"r":"Mu"},"n":"Str"},{"n":"gist","s":{"r":"Mu","p":["*%_"]},"k":"m","m":1},{"n":"gist","s":{"p":["*%_"],"r":"Mu"},"m":1,"k":"m"},{"s":{"p":["*%_"],"r":"Mu"},"n":"gist","m":1,"k":"m"},{"m":1,"k":"m","s":{"p":["*%_"],"r":"Mu"},"n":"perl"},{"n":"perl","s":{"p":["*%_"],"r":"Mu"},"m":1,"k":"m"},{"k":"m","m":1,"s":{"r":"Mu","p":["*%_"]},"n":"perl"},{"n":"ACCEPTS","s":{"r":"Mu","p":["\\topic","*%_"]},"m":1,"k":"m"},{"n":"ACCEPTS","s":{"p":["Mu:U \\topic","*%_"],"r":"Mu"},"m":1,"k":"m"},{"m":1,"k":"m","s":{"r":"Mu","p":["Mu:D \\a","*%_"]},"n":"ACCEPTS"},{"s":{"p":["Mu:U $","*%_"],"r":"Bool"},"n":"ACCEPTS","m":1,"k":"m"},{"k":"m","m":1,"s":{"p":["\\topic","*%_"],"r":"Bool:D"},"n":"ACCEPTS"},{"n":"ACCEPTS","s":{"p":["Version:D $other","*%_"],"r":"Mu"},"k":"m","m":1},{"n":"WHICH","s":{"r":"ValueObjAt:D","p":["*%_"]},"m":1,"k":"m"},{"n":"WHICH","s":{"p":["*%_"],"r":"ObjAt:D"},"m":1,"k":"m"},{"s":{"r":"ValueObjAt:D","p":["*%_"]},"n":"WHICH","k":"m","m":1},{"m":0,"k":"s","s":{"p":["@auto","%init","*%_"],"r":"Mu"},"n":"BUILDALL"},{"k":"m","m":0,"s":{"p":["str $s","*%_"],"r":"Mu"},"n":"!SLOW-NEW"},{"k":"m","m":0,"s":{"r":"Mu","p":["\\parts","\\plus","\\whatever","\\string","*%_"]},"n":"!SET-SELF"}],"d":"TITLE\nclass Version\n\nSUBTITLE\nModule version descriptor\n\n    class Version { }\n\nVersion objects identify version of software components (and potentially\nother entities). Raku uses them internally for versioning modules.\n\nA version consists of several parts, which are visually represented by\njoining them with a dot. A version part is usually an integer, a string\nlike alpha, or a Whatever-star *. The latter is used to indicate that any\nversion part is acceptable in another version that is compared to the\ncurrent one.\n\n    say v1.0.1 ~~ v1.*;     # OUTPUT: «True␤»\n    say v1.0.1 ~~ v1.*.1;   # OUTPUT: «True␤»\n\nThe first part of version literals contains v and a number; this might be\nfollowed by alphanumeric and Whatever parts and trailed by +. Multiple\nparts are separate with a dot .. A trailing + indicates that higher\nversions are OK in comparisons:\n\n    say v1.2 ~~ v1.0;                 # OUTPUT: «False␤»\n    say v1.2 ~~ v1.0+;                # OUTPUT: «True␤»\n    say v0.and.anything.else ~~ v0+;  # OUTPUT: «True␤»\n\nIn comparisons, order matters, and every part is compared in turn.\n\n    say v1.2 cmp v2.1;      # OUTPUT: «Less␤»\n\nThe + suffix is always taken into account in comparisons:\n\n    say v1.0.1+ <=> v1.0.1; # OUTPUT: «More␤»\n\nAnd * (Whatever) is too, and considered always Less than whatever digit is\nin the corresponding part, even if * is trailed by +:\n\n    say v1.* <=> v1.0;      # OUTPUT: «Less␤»\n    say v1.* <= v1.0;       # OUTPUT: «True␤»\n    say v1.*+ <= v1.0;      # OUTPUT: «True␤»\n\nPlease note that method calls, including pseudo methods like WHAT, require\nversion literals either to be enclosed with parentheses or use some other\nmethod to separate them from the dot that denotes a method call, like in\nthese examples:\n\n    say (v0.and.some.*.stuff).parts;  # OUTPUT: «(0 and some * stuff)␤»\n    say v0.and.some.*.stuff .parts;   # OUTPUT: «(0 and some * stuff)␤»\n\n","n":"Version","t":"Version"},{"n":"&infix:<x>","t":"Sub+{is-pure}+{Precedence}","k":"v"},{"m":1,"k":"s","n":"infix:<x>","s":{"p":[],"r":"Mu"}},{"k":"s","m":1,"s":{"r":"Mu","p":["$x"]},"n":"infix:<x>"},{"s":{"p":["$s","Num:D $n"],"r":"Mu"},"n":"infix:<x>","m":1,"k":"s"},{"m":1,"k":"s","n":"infix:<x>","s":{"p":["$s","Any:D $n"],"r":"Mu"}},{"m":1,"k":"s","s":{"p":["$s","Any:U $n"],"r":"Mu"},"n":"infix:<x>"},{"k":"s","m":1,"s":{"r":"Str:D","p":["Str:D $s","Bool:D $repetition"]},"n":"infix:<x>"},{"k":"s","m":1,"n":"infix:<x>","s":{"r":"Str:D","p":["Str:D $s","Int:D $repetition"]}},{"m":1,"k":"s","s":{"p":["str $s","int $repetition"],"r":"str"},"n":"infix:<x>"},{"k":"v","n":"&minmax","t":"Sub+{is-pure}"},{"s":{"p":["+\\args is raw",":&by!"],"r":"Mu"},"n":"minmax","m":1,"k":"s"},{"n":"minmax","s":{"r":"Mu","p":["+\\args is raw"]},"k":"s","m":1},{"n":"SIGUSR1","t":"Signal","k":"e"},{"n":"&unimatch","t":"Sub","k":"v"},{"k":"s","m":1,"n":"unimatch","s":{"p":["Str:D $str","|c is raw"],"r":"Mu"}},{"n":"unimatch","s":{"r":"Mu","p":["Int:D $code","Stringy:D $pvalname","Stringy:D $propname"]},"k":"s","m":1},{"k":"s","m":1,"s":{"p":["Int:D $code","Stringy:D $pvalname","Stringy:D $propname = { ... }"],"r":"Mu"},"n":"unimatch"},{"n":"&infix:<⚛+=>","t":"Sub","k":"v"},{"s":{"p":["atomicint $target is rw","int $add"],"r":"atomicint"},"n":"infix:<⚛+=>","k":"s","m":1},{"s":{"p":["atomicint $target is rw","Int:D $add"],"r":"atomicint"},"n":"infix:<⚛+=>","m":1,"k":"s"},{"k":"s","m":1,"s":{"p":["atomicint $target is rw","$add"],"r":"atomicint"},"n":"infix:<⚛+=>"},{"d":"TITLE\nclass NumStr\n\nSUBTITLE\nDual value floating-point number and string\n\n    class NumStr is Num is Str { }\n\nThe dual value types (often referred to as allomorphs) allow for the\nrepresentation of a value as both a string and a numeric type. Typically\nthey will be created for you when the context is \"stringy\" but they can be\ndetermined to be numbers, such as in some quoting constructs:\n\n    my $f = <42.1e0>; say $f.^name; # OUTPUT: «NumStr␤»\n\nAs a subclass of both Num and Str, a NumStr will be accepted where either\nis expected. However, NumStr does not share object identity with Num- or\nStr-only variants:\n\n    my $num-str = <42e10>;\n    my Num $num = $num-str; # OK!\n    my Str $str = $num-str; # OK!\n    say 42e10 ∈ <42e10  55  1>; # False; ∈ operator cares about object identity\n\n","m":[{"k":"m","m":0,"n":"new","s":{"r":"Mu","p":["Num $n","Str $s","*%_"]}},{"s":{"p":["*%_"],"r":"Mu"},"n":"Num","m":0,"k":"m"},{"k":"m","m":1,"n":"ACCEPTS","s":{"r":"Mu","p":["\\topic","*%_"]}},{"k":"m","m":1,"n":"ACCEPTS","s":{"p":["Mu:U \\topic","*%_"],"r":"Mu"}},{"k":"m","m":1,"s":{"r":"Mu","p":["Mu:D \\a","*%_"]},"n":"ACCEPTS"},{"s":{"p":["Mu:U $","*%_"],"r":"Bool"},"n":"ACCEPTS","k":"m","m":1},{"m":1,"k":"m","s":{"r":"Bool:D","p":["\\topic","*%_"]},"n":"ACCEPTS"},{"n":"ACCEPTS","s":{"p":["Any:D \\a","*%_"],"r":"Mu"},"k":"m","m":1},{"k":"m","m":1,"n":"ACCEPTS","s":{"r":"Mu","p":["Any:D \\a","*%_"]}},{"k":"m","m":1,"n":"Numeric","s":{"r":"Mu","p":["*%_"]}},{"n":"Numeric","s":{"p":["*%_"],"r":"Mu"},"k":"m","m":1},{"k":"m","m":1,"s":{"r":"Mu","p":["*%_"]},"n":"Numeric"},{"n":"Numeric","s":{"p":["*%_"],"r":"Mu"},"m":1,"k":"m"},{"m":1,"k":"m","n":"Numeric","s":{"p":["*%_"],"r":"Mu"}},{"m":1,"k":"m","s":{"p":["*%_"],"r":"Mu"},"n":"Real"},{"s":{"r":"Mu","p":["*%_"]},"n":"Real","m":1,"k":"m"},{"n":"Real","s":{"p":["*%_"],"r":"Mu"},"k":"m","m":1},{"n":"Real","s":{"p":["*%_"],"r":"Mu"},"k":"m","m":1},{"k":"m","m":1,"n":"Real","s":{"r":"Mu","p":["*%_"]}},{"n":"Real","s":{"r":"Mu","p":["*%_"]},"k":"m","m":1},{"n":"Str","s":{"p":["*%_"],"r":"Mu"},"m":1,"k":"m"},{"m":1,"k":"m","s":{"p":["*%_"],"r":"Mu"},"n":"Str"},{"m":1,"k":"m","n":"Str","s":{"p":["*%_"],"r":"Mu"}},{"n":"Str","s":{"r":"Mu","p":["*%_"]},"m":1,"k":"m"},{"s":{"p":["*%_"],"r":"Mu"},"n":"Str","k":"m","m":1},{"s":{"r":"Mu","p":["*%_"]},"n":"perl","m":1,"k":"m"},{"k":"m","m":1,"s":{"r":"Mu","p":["*%_"]},"n":"perl"},{"n":"perl","s":{"r":"Mu","p":["*%_"]},"k":"m","m":1},{"k":"m","m":1,"s":{"r":"Mu","p":["*%_"]},"n":"perl"},{"k":"s","m":0,"s":{"r":"Mu","p":["@auto","%init","*%_"]},"n":"BUILDALL"},{"s":{"p":["*%_"],"r":"Mu"},"n":"acotanh","m":1,"k":"m"},{"m":1,"k":"m","s":{"p":["*%_"],"r":"Mu"},"n":"cotanh"},{"m":0,"k":"m","s":{"r":"Mu","p":["Cool $n","*%_"]},"n":"roots"},{"n":"sech","s":{"p":["*%_"],"r":"Mu"},"k":"m","m":1},{"m":1,"k":"m","s":{"r":"Mu","p":["*%_"]},"n":"acosh"},{"s":{"p":["Int:D $base","$digits? is copy","*%_"],"r":"Mu"},"n":"base","m":0,"k":"m"},{"n":"ceiling","s":{"p":["*%_"],"r":"Mu"},"m":0,"k":"m"},{"m":1,"k":"m","s":{"r":"Mu","p":["*%_"]},"n":"acos"},{"m":0,"k":"m","s":{"r":"Mu","p":["*%_"]},"n":"sign"},{"n":"truncate","s":{"p":["*%_"],"r":"Mu"},"m":0,"k":"m"},{"s":{"p":["*%_"],"r":"Mu"},"n":"acosec","m":0,"k":"m"},{"m":0,"k":"m","s":{"p":["*%_"],"r":"Mu"},"n":"floor"},{"m":1,"k":"m","n":"gist","s":{"p":["*%_"],"r":"Mu"}},{"m":1,"k":"m","s":{"p":["*%_"],"r":"Mu"},"n":"gist"},{"n":"gist","s":{"r":"Mu","p":["*%_"]},"k":"m","m":1},{"s":{"r":"Mu","p":["*%_"]},"n":"round","m":1,"k":"m"},{"m":1,"k":"m","s":{"r":"Mu","p":["$scale","*%_"]},"n":"round"},{"n":"FatRat","s":{"r":"Mu","p":["Real $epsilon = 1e-06","*%_"]},"k":"m","m":0},{"k":"m","m":0,"s":{"p":["+@mods","*%_"],"r":"Mu"},"n":"polymod"},{"k":"m","m":1,"n":"Bool","s":{"p":["*%_"],"r":"Bool"}},{"m":1,"k":"m","n":"Bool","s":{"r":"Mu","p":["*%_"]}},{"n":"Bool","s":{"p":["*%_"],"r":"Mu"},"k":"m","m":1},{"n":"Bool","s":{"p":["*%_"],"r":"Mu"},"m":1,"k":"m"},{"m":0,"k":"m","s":{"r":"Mu","p":["*%_"]},"n":"Capture"},{"s":{"p":["*%_"],"r":"Mu"},"n":"acotan","k":"m","m":0},{"n":"Str","s":{"p":["*%_"],"r":"Mu"},"m":1,"k":"m"},{"m":1,"k":"m","s":{"r":"Mu","p":["*%_"]},"n":"Str"},{"m":1,"k":"m","n":"Str","s":{"p":["*%_"],"r":"Mu"}},{"k":"m","m":1,"s":{"p":["*%_"],"r":"Mu"},"n":"Str"},{"s":{"r":"Mu","p":["*%_"]},"n":"asec","m":1,"k":"m"},{"n":"exp","s":{"p":["*%_"],"r":"Mu"},"m":1,"k":"m"},{"n":"exp","s":{"p":["*%_"],"r":"Mu"},"m":1,"k":"m"},{"n":"exp","s":{"p":["$base","*%_"],"r":"Mu"},"m":1,"k":"m"},{"s":{"p":["*%_"],"r":"Mu"},"n":"sinh","m":1,"k":"m"},{"m":0,"k":"m","n":"pred","s":{"r":"Mu","p":["*%_"]}},{"m":0,"k":"m","n":"Complex","s":{"p":["*%_"],"r":"Mu"}},{"n":"WHICH","s":{"r":"ValueObjAt:D","p":["*%_"]},"k":"m","m":1},{"k":"m","m":1,"s":{"r":"ObjAt:D","p":["*%_"]},"n":"WHICH"},{"k":"m","m":1,"n":"WHICH","s":{"p":["*%_"],"r":"ValueObjAt:D"}},{"k":"m","m":1,"s":{"r":"Mu","p":["*%_"]},"n":"cosh"},{"n":"asinh","s":{"p":["*%_"],"r":"Mu"},"k":"m","m":1},{"s":{"p":["*%_"],"r":"Mu"},"n":"narrow","m":0,"k":"m"},{"s":{"r":"Mu","p":["*%_"]},"n":"DUMP","k":"m","m":1},{"s":{"p":[":$indent-step = 4",":%ctx","*%_"],"r":"Mu"},"n":"DUMP","k":"m","m":1},{"s":{"r":"Mu","p":["*%_"]},"n":"DUMP","k":"m","m":1},{"n":"Rat","s":{"p":["Real $epsilon = 1e-06",":$fat","*%_"],"r":"Mu"},"m":0,"k":"m"},{"s":{"p":["*%_"],"r":"Mu"},"n":"abs","m":0,"k":"m"},{"n":"sqrt","s":{"r":"Mu","p":["*%_"]},"k":"m","m":1},{"k":"m","m":0,"s":{"r":"Mu","p":["Real $angle","*%_"]},"n":"unpolar"},{"s":{"p":["*%_"],"r":"Mu"},"n":"Numeric","m":1,"k":"m"},{"m":1,"k":"m","n":"Numeric","s":{"r":"Mu","p":["*%_"]}},{"s":{"p":["*%_"],"r":"Mu"},"n":"Numeric","m":1,"k":"m"},{"k":"m","m":1,"n":"Real","s":{"p":["*%_"],"r":"Mu"}},{"n":"Real","s":{"r":"Mu","p":["*%_"]},"k":"m","m":1},{"s":{"p":["*%_"],"r":"Mu"},"n":"Real","m":1,"k":"m"},{"n":"Real","s":{"r":"Mu","p":["*%_"]},"m":1,"k":"m"},{"k":"m","m":1,"s":{"p":["*%_"],"r":"Mu"},"n":"tan"},{"n":"Range","s":{"r":"Mu","p":["*%_"]},"k":"m","m":0},{"k":"m","m":0,"s":{"p":["*%_"],"r":"Mu"},"n":"Bridge"},{"k":"m","m":1,"s":{"r":"Mu","p":["*%_"]},"n":"acosech"},{"s":{"p":["*%_"],"r":"Mu"},"n":"asech","m":1,"k":"m"},{"k":"m","m":1,"n":"perl","s":{"p":["*%_"],"r":"Mu"}},{"n":"perl","s":{"r":"Mu","p":["*%_"]},"m":1,"k":"m"},{"n":"perl","s":{"r":"Mu","p":["*%_"]},"m":1,"k":"m"},{"k":"m","m":1,"s":{"p":["*%_"],"r":"Mu"},"n":"log"},{"n":"log","s":{"p":["Num \\base","*%_"],"r":"Mu"},"m":1,"k":"m"},{"k":"m","m":1,"n":"log","s":{"r":"Mu","p":["*%_"]}},{"s":{"r":"Mu","p":["Real $base","*%_"]},"n":"log","m":1,"k":"m"},{"s":{"p":["Cool $base","*%_"],"r":"Mu"},"n":"log","m":1,"k":"m"},{"n":"log","s":{"p":["Numeric $base","*%_"],"r":"Mu"},"k":"m","m":1},{"k":"m","m":1,"s":{"r":"Mu","p":["*%_"]},"n":"tanh"},{"m":0,"k":"m","n":"Int","s":{"r":"Mu","p":["*%_"]}},{"k":"m","m":1,"s":{"r":"Mu","p":["*%_"]},"n":"atan"},{"m":1,"k":"m","n":"cosech","s":{"r":"Mu","p":["*%_"]}},{"k":"m","m":0,"s":{"p":["*%_"],"r":"Bool:D"},"n":"is-prime"},{"n":"sec","s":{"r":"Mu","p":["*%_"]},"k":"m","m":1},{"k":"m","m":0,"s":{"r":"Mu","p":["*%_"]},"n":"succ"},{"m":0,"k":"m","s":{"p":["*%_"],"r":"Mu"},"n":"Num"},{"m":1,"k":"m","s":{"p":["Num:D $x = 1e0","*%_"],"r":"Mu"},"n":"atan2"},{"m":1,"k":"m","n":"atan2","s":{"r":"Mu","p":["Real $x = 1e0","*%_"]}},{"n":"atan2","s":{"r":"Mu","p":["Cool $x = 1e0","*%_"]},"k":"m","m":1},{"s":{"p":["*%_"],"r":"Mu"},"n":"conj","m":0,"k":"m"},{"n":"cosec","s":{"p":["*%_"],"r":"Mu"},"k":"m","m":0},{"k":"m","m":0,"s":{"p":["*%_"],"r":"Mu"},"n":"cis"},{"m":1,"k":"m","s":{"p":["*%attrinit"],"r":"Mu"},"n":"new"},{"s":{"p":["$","*@","*%_"],"r":"Mu"},"n":"new","m":1,"k":"m"},{"m":1,"k":"m","s":{"r":"Mu","p":["*%_"]},"n":"new"},{"m":1,"k":"m","n":"new","s":{"r":"Mu","p":["$n","*%_"]}},{"k":"m","m":1,"n":"cos","s":{"r":"Mu","p":["*%_"]}},{"n":"log10","s":{"p":["*%_"],"r":"Mu"},"k":"m","m":0},{"m":0,"k":"m","s":{"p":["*%_"],"r":"Mu"},"n":"isNaN"},{"s":{"p":["*%_"],"r":"Mu"},"n":"asin","k":"m","m":1},{"m":1,"k":"m","s":{"r":"Mu","p":["\\topic","*%_"]},"n":"ACCEPTS"},{"m":1,"k":"m","s":{"p":["Mu:U \\topic","*%_"],"r":"Mu"},"n":"ACCEPTS"},{"s":{"r":"Mu","p":["Mu:D \\a","*%_"]},"n":"ACCEPTS","k":"m","m":1},{"k":"m","m":1,"s":{"p":["Mu:U $","*%_"],"r":"Bool"},"n":"ACCEPTS"},{"m":1,"k":"m","s":{"p":["\\topic","*%_"],"r":"Bool:D"},"n":"ACCEPTS"},{"s":{"p":["Any:D \\a","*%_"],"r":"Mu"},"n":"ACCEPTS","k":"m","m":1},{"n":"atanh","s":{"r":"Mu","p":["*%_"]},"k":"m","m":1},{"n":"atanh","s":{"p":["*%_"],"r":"Mu"},"m":1,"k":"m"},{"m":0,"k":"m","n":"rand","s":{"r":"Mu","p":["*%_"]}},{"n":"cotan","s":{"r":"Mu","p":["*%_"]},"m":0,"k":"m"},{"m":1,"k":"m","n":"sin","s":{"r":"Mu","p":["*%_"]}},{"m":0,"k":"s","n":"BUILDALL","s":{"r":"Mu","p":["@auto","%init","*%_"]}},{"k":"m","m":1,"n":"indent","s":{"r":"Mu","p":["$steps where { ... }","*%_"]}},{"s":{"p":["$steps where { ... }","*%_"],"r":"Mu"},"n":"indent","k":"m","m":1},{"m":1,"k":"m","n":"indent","s":{"r":"Mu","p":["$steps where { ... }","*%_"]}},{"k":"m","m":1,"s":{"r":"Mu","p":["Whatever $steps","*%_"]},"n":"indent"},{"s":{"r":"Str:D","p":[":&filter = { ... }","Mu :$where = Bool::True","*%_"]},"n":"wordcase","m":0,"k":"m"},{"n":"match","s":{"p":["Cool:D $pattern","|c is raw"],"r":"Mu"},"m":1,"k":"m"},{"k":"m","m":1,"n":"match","s":{"r":"Mu","p":["Regex:D $pattern",":continue(:$c)!","*%_"]}},{"k":"m","m":1,"n":"match","s":{"r":"Mu","p":["Regex:D $pattern",":pos(:$p)!","*%_"]}},{"m":1,"k":"m","n":"match","s":{"p":["Regex:D $pattern",":global(:$g)!","*%_"],"r":"Mu"}},{"n":"match","s":{"r":"Mu","p":["Regex:D $pattern",":overlap(:$ov)!","*%_"]},"m":1,"k":"m"},{"k":"m","m":1,"n":"match","s":{"p":["Regex:D $pattern",":exhaustive(:$ex)!","*%_"],"r":"Mu"}},{"k":"m","m":1,"s":{"p":["Regex:D $pattern",":$x!","*%_"],"r":"Mu"},"n":"match"},{"n":"match","s":{"p":["Regex:D $pattern",":$st!","*%_"],"r":"Mu"},"k":"m","m":1},{"s":{"r":"Mu","p":["Regex:D $pattern",":$nd!","*%_"]},"n":"match","m":1,"k":"m"},{"m":1,"k":"m","s":{"r":"Mu","p":["Regex:D $pattern",":$rd!","*%_"]},"n":"match"},{"s":{"p":["Regex:D $pattern",":$th!","*%_"],"r":"Mu"},"n":"match","m":1,"k":"m"},{"k":"m","m":1,"s":{"r":"Mu","p":["Regex:D $pattern",":$nth!","*%_"]},"n":"match"},{"s":{"p":["Regex:D $pattern",":$as!","*%_"],"r":"Mu"},"n":"match","k":"m","m":1},{"k":"m","m":1,"s":{"r":"Mu","p":["Regex:D $pattern","*%_"]},"n":"match"},{"n":"Bool","s":{"p":["*%_"],"r":"Bool"},"k":"m","m":1},{"n":"Bool","s":{"p":["*%_"],"r":"Mu"},"k":"m","m":1},{"n":"Bool","s":{"p":["*%_"],"r":"Bool:D"},"m":1,"k":"m"},{"s":{"p":["*%_"],"r":"Mu"},"n":"gist","k":"m","m":1},{"m":1,"k":"m","n":"gist","s":{"r":"Mu","p":["*%_"]}},{"s":{"r":"Str:D","p":["*%_"]},"n":"gist","m":1,"k":"m"},{"k":"m","m":0,"s":{"p":["*%_"],"r":"Mu"},"n":"univals"},{"k":"m","m":1,"n":"lines","s":{"r":"Int:D","p":[":$count!","*%_"]}},{"k":"m","m":1,"n":"lines","s":{"r":"Seq:D","p":["$limit","*%_"]}},{"m":1,"k":"m","n":"lines","s":{"r":"Seq:D","p":["*%_"]}},{"m":1,"k":"m","s":{"p":["*%_"],"r":"Str:D"},"n":"tclc"},{"m":1,"k":"m","n":"tclc","s":{"p":["*%_"],"r":"Str:D"}},{"k":"m","m":1,"s":{"r":"Mu","p":["Any:D $matcher","$replacement",":ii(:$samecase)",":ss(:$samespace)",":mm(:$samemark)","*%options"]},"n":"subst-mutate"},{"s":{"p":["*%_"],"r":"Str:D"},"n":"lc","m":1,"k":"m"},{"n":"lc","s":{"r":"Str:D","p":["*%_"]},"m":1,"k":"m"},{"n":"WORDS_AUTODEREF","s":{"r":"Mu","p":["*%_"]},"m":0,"k":"m"},{"m":1,"k":"m","s":{"p":["*%_"],"r":"Str:D"},"n":"uc"},{"n":"uc","s":{"r":"Str:D","p":["*%_"]},"m":1,"k":"m"},{"m":1,"k":"m","n":"DUMP","s":{"p":["*%_"],"r":"Mu"}},{"s":{"p":[":$indent-step = 4",":%ctx","*%_"],"r":"Mu"},"n":"DUMP","m":1,"k":"m"},{"n":"DUMP","s":{"r":"Str:D","p":["*%_"]},"k":"m","m":1},{"n":"trim","s":{"p":["*%_"],"r":"Str:D"},"k":"m","m":0},{"n":"WHY","s":{"r":"Mu","p":["*%_"]},"k":"m","m":1},{"n":"WHY","s":{"p":["*%_"],"r":"Int"},"k":"m","m":1},{"n":"chars","s":{"p":["*%_"],"r":"Int:D"},"m":1,"k":"m"},{"k":"m","m":1,"n":"chars","s":{"r":"Int:D","p":["*%_"]}},{"m":0,"k":"m","s":{"r":"Str:D","p":["*%_"]},"n":"parse-names"},{"m":1,"k":"m","s":{"p":["*%_"],"r":"ValueObjAt:D"},"n":"WHICH"},{"k":"m","m":1,"n":"WHICH","s":{"p":["*%_"],"r":"ObjAt:D"}},{"m":1,"k":"m","s":{"r":"ValueObjAt:D","p":["*%_"]},"n":"WHICH"},{"k":"m","m":1,"n":"flip","s":{"p":["*%_"],"r":"Str:D"}},{"n":"flip","s":{"r":"Str:D","p":["*%_"]},"m":1,"k":"m"},{"m":1,"k":"m","s":{"r":"Mu","p":["*%_"]},"n":"ords"},{"s":{"r":"Mu","p":["*%_"]},"n":"ords","k":"m","m":1},{"n":"index","s":{"p":["Cool:D $needle","*%_"],"r":"Int:D"},"k":"m","m":1},{"s":{"p":["Str:D $needle","*%_"],"r":"Int:D"},"n":"index","m":1,"k":"m"},{"s":{"r":"Int:D","p":["Cool:D $needle","Cool:D $pos","*%_"]},"n":"index","m":1,"k":"m"},{"n":"index","s":{"p":["Str:D $needle","Int:D $pos","*%_"],"r":"Int:D"},"m":1,"k":"m"},{"s":{"r":"Seq:D","p":["$limit","*%_"]},"n":"words","m":1,"k":"m"},{"s":{"p":["*%_"],"r":"Seq:D"},"n":"words","m":1,"k":"m"},{"n":"uniparse","s":{"p":["*%_"],"r":"Str:D"},"m":0,"k":"m"},{"k":"m","m":0,"n":"NFKC","s":{"p":["*%_"],"r":"NFKC:D"}},{"k":"m","m":0,"n":"trim-leading","s":{"p":["*%_"],"r":"Str:D"}},{"n":"trans","s":{"r":"Str:D","p":["Pair:D \\what","*%n"]},"m":1,"k":"m"},{"s":{"r":"Str:D","p":["*@changes",":c(:$complement)",":s(:$squash)",":d(:$delete)","*%_"]},"n":"trans","k":"m","m":1},{"k":"m","m":0,"n":"pred","s":{"r":"Str:D","p":["*%_"]}},{"s":{"r":"Seq:D","p":["Regex:D $pat","$limit is copy = Inf",":$v is copy",":$k",":$kv",":$p",":$skip-empty","*%_"]},"n":"split","k":"m","m":1},{"k":"m","m":1,"n":"split","s":{"r":"Seq:D","p":["Str(Cool) $match",":$v is copy",":$k",":$kv",":$p",":$skip-empty","*%_"]}},{"k":"m","m":1,"n":"split","s":{"p":["Str(Cool) $match","$limit is copy = Inf",":$v is copy",":$k",":$kv",":$p",":$skip-empty","*%_"],"r":"Mu"}},{"m":1,"k":"m","n":"split","s":{"r":"Seq:D","p":["@needles","$parts is copy = Inf",":$v is copy",":$k",":$kv",":$p",":$skip-empty","*%_"]}},{"m":0,"k":"m","n":"trim-trailing","s":{"r":"Str:D","p":["*%_"]}},{"s":{"r":"Mu","p":["*%_"]},"n":"Str","m":1,"k":"m"},{"s":{"p":["*%_"],"r":"Mu"},"n":"Str","m":1,"k":"m"},{"s":{"r":"Str:D","p":["*%_"]},"n":"Str","m":1,"k":"m"},{"s":{"p":["*%_"],"r":"Mu"},"n":"Capture","m":0,"k":"m"},{"s":{"r":"Int:D","p":["*%_"]},"n":"Int","m":0,"k":"m"},{"n":"word-by-word","s":{"p":["Str:D $pattern","&filter?","Bool :$samespace","*%_"],"r":"Mu"},"m":0,"k":"m"},{"s":{"p":["*%_"],"r":"Mu"},"n":"Stringy","m":1,"k":"m"},{"m":1,"k":"m","n":"Stringy","s":{"r":"Mu","p":["*%_"]}},{"n":"Stringy","s":{"r":"Str:D","p":["*%_"]},"m":1,"k":"m"},{"n":"chop","s":{"p":["*%_"],"r":"Mu"},"m":1,"k":"m"},{"k":"m","m":1,"n":"chop","s":{"r":"Mu","p":["$n","*%_"]}},{"m":1,"k":"m","s":{"r":"Str:D","p":["*%_"]},"n":"chop"},{"n":"chop","s":{"r":"Str:D","p":["$chopping","*%_"]},"m":1,"k":"m"},{"s":{"p":["Cool:D $suffix","*%_"],"r":"Bool:D"},"n":"ends-with","k":"m","m":1},{"s":{"r":"Bool:D","p":["Str:D $suffix","*%_"]},"n":"ends-with","m":1,"k":"m"},{"n":"succ","s":{"r":"Str:D","p":["*%_"]},"m":0,"k":"m"},{"m":0,"k":"m","s":{"p":["Str:D $pattern","*%_"],"r":"Str:D"},"n":"samemark"},{"k":"m","m":0,"n":"NFC","s":{"p":["*%_"],"r":"NFC:D"}},{"k":"m","m":1,"n":"comb","s":{"p":["*%_"],"r":"Seq:D"}},{"m":1,"k":"m","s":{"r":"Seq:D","p":["Int:D $size is copy","$limit = *","*%_"]},"n":"comb"},{"k":"m","m":1,"n":"comb","s":{"p":["Str $pat","*%_"],"r":"Seq:D"}},{"n":"comb","s":{"p":["Str $pat","$limit","*%_"],"r":"Seq:D"},"m":1,"k":"m"},{"s":{"p":["Regex:D $pattern",":$match","*%_"],"r":"Seq:D"},"n":"comb","k":"m","m":1},{"n":"comb","s":{"p":["Regex:D $pattern","$limit",":$match","*%_"],"r":"Seq:D"},"m":1,"k":"m"},{"s":{"p":["Cool:D $needle","*%pars"],"r":"Mu"},"n":"indices","m":1,"k":"m"},{"n":"indices","s":{"r":"Mu","p":["Str:D $needle",":$overlap","*%_"]},"k":"m","m":1},{"n":"indices","s":{"r":"Mu","p":["Cool:D $needle","Cool:D $start","*%pars"]},"k":"m","m":1},{"k":"m","m":1,"s":{"p":["Str:D $needle","Int:D $start",":$overlap","*%_"],"r":"Mu"},"n":"indices"},{"k":"m","m":1,"n":"starts-with","s":{"r":"Bool:D","p":["Cool:D $needle","*%_"]}},{"s":{"r":"Bool:D","p":["Str:D $needle","*%_"]},"n":"starts-with","m":1,"k":"m"},{"k":"m","m":0,"n":"NFKD","s":{"r":"NFKD:D","p":["*%_"]}},{"s":{"p":["*%_"],"r":"NFD:D"},"n":"NFD","m":0,"k":"m"},{"m":1,"k":"m","s":{"r":"Int:D","p":["*%_"]},"n":"ord"},{"m":1,"k":"m","n":"ord","s":{"r":"Nil","p":["*%_"]}},{"m":1,"k":"m","n":"fc","s":{"p":["*%_"],"r":"Str:D"}},{"s":{"p":["*%_"],"r":"Str:D"},"n":"fc","m":1,"k":"m"},{"k":"m","m":1,"n":"perl","s":{"p":["*%_"],"r":"Mu"}},{"s":{"r":"Mu","p":["*%_"]},"n":"perl","m":1,"k":"m"},{"m":1,"k":"m","n":"perl","s":{"p":["*%_"],"r":"Str:D"}},{"n":"Numeric","s":{"r":"Mu","p":["*%_"]},"k":"m","m":1},{"k":"m","m":1,"n":"Numeric","s":{"r":"Numeric:D","p":["*%_"]}},{"k":"m","m":1,"n":"codes","s":{"p":["*%_"],"r":"Int:D"}},{"k":"m","m":1,"n":"codes","s":{"r":"Int:D","p":["*%_"]}},{"n":"parse-base","s":{"r":"Numeric:D","p":["Int:D $radix","*%_"]},"m":0,"k":"m"},{"k":"m","m":1,"n":"substr","s":{"r":"Mu","p":["\\from","*%_"]}},{"n":"substr","s":{"r":"Mu","p":["\\from","\\chars","*%_"]},"k":"m","m":1},{"m":1,"k":"m","s":{"p":["Int:D \\start","*%_"],"r":"Str:D"},"n":"substr"},{"m":1,"k":"m","s":{"p":["Int:D \\start","Int:D \\want","*%_"],"r":"Str:D"},"n":"substr"},{"n":"substr","s":{"p":["Int:D \\start","Callable:D \\want","*%_"],"r":"Str:D"},"k":"m","m":1},{"s":{"p":["Callable:D \\start","*%_"],"r":"Str:D"},"n":"substr","k":"m","m":1},{"m":1,"k":"m","s":{"p":["Callable:D \\start","Int:D \\want","*%_"],"r":"Str:D"},"n":"substr"},{"k":"m","m":1,"s":{"p":["Callable:D \\start","Callable:D \\want","*%_"],"r":"Str:D"},"n":"substr"},{"n":"substr","s":{"r":"Str:D","p":["Range:D \\start","*%_"]},"m":1,"k":"m"},{"k":"m","m":1,"n":"substr","s":{"p":["Regex:D $","$","*%_"],"r":"Mu"}},{"m":1,"k":"m","n":"substr","s":{"p":["\\start","*%_"],"r":"Str:D"}},{"m":1,"k":"m","s":{"r":"Str:D","p":["\\from","\\want","*%_"]},"n":"substr"},{"m":0,"k":"m","n":"unival","s":{"p":["*%_"],"r":"Mu"}},{"m":1,"k":"m","n":"encode","s":{"p":["Str:D $encoding = \"utf8\"",":$replacement",":$translate-nl = Bool::False",":$strict","*%_"],"r":"Blob:D"}},{"m":0,"k":"m","s":{"r":"Str:D","p":["Str:D $pattern","*%_"]},"n":"samecase"},{"n":"substr-eq","s":{"p":["Cool:D $needle","*%_"],"r":"Bool:D"},"m":1,"k":"m"},{"n":"substr-eq","s":{"p":["Str:D $needle","*%_"],"r":"Bool:D"},"m":1,"k":"m"},{"m":1,"k":"m","s":{"p":["Cool:D $needle","Int:D $pos","*%_"],"r":"Bool:D"},"n":"substr-eq"},{"m":1,"k":"m","s":{"p":["Str:D $needle","Int:D $pos","*%_"],"r":"Bool:D"},"n":"substr-eq"},{"s":{"p":["*%_"],"r":"Mu"},"n":"substr-rw","k":"m","m":1},{"k":"m","m":1,"s":{"p":["\\from","*%_"],"r":"Mu"},"n":"substr-rw"},{"k":"m","m":1,"s":{"r":"Mu","p":["\\from","\\chars","*%_"]},"n":"substr-rw"},{"k":"m","m":1,"n":"substr-rw","s":{"r":"Mu","p":["\\start","$want = Inf","*%_"]}},{"s":{"p":["\\topic","*%_"],"r":"Mu"},"n":"ACCEPTS","k":"m","m":1},{"k":"m","m":1,"s":{"p":["Mu:U \\topic","*%_"],"r":"Mu"},"n":"ACCEPTS"},{"n":"ACCEPTS","s":{"r":"Mu","p":["Mu:D \\a","*%_"]},"m":1,"k":"m"},{"m":1,"k":"m","n":"ACCEPTS","s":{"p":["Mu:U $","*%_"],"r":"Bool"}},{"m":1,"k":"m","s":{"r":"Bool:D","p":["\\topic","*%_"]},"n":"ACCEPTS"},{"k":"m","m":1,"s":{"r":"Bool:D","p":["Str:D \\other","*%_"]},"n":"ACCEPTS"},{"m":1,"k":"m","n":"ACCEPTS","s":{"p":["Any:D \\other","*%_"],"r":"Bool:D"}},{"n":"contains","s":{"p":["Cool:D $needle","*%_"],"r":"Bool:D"},"m":1,"k":"m"},{"m":1,"k":"m","n":"contains","s":{"r":"Bool:D","p":["Str:D $needle","*%_"]}},{"s":{"r":"Bool:D","p":["Cool:D $needle","Int(Cool:D) $pos","*%_"]},"n":"contains","k":"m","m":1},{"s":{"r":"Bool:D","p":["Str:D $needle","Int:D $pos","*%_"]},"n":"contains","k":"m","m":1},{"m":1,"k":"m","s":{"p":["Cool:D $needle","*%_"],"r":"Int:D"},"n":"rindex"},{"k":"m","m":1,"n":"rindex","s":{"p":["Str:D $needle","*%_"],"r":"Int:D"}},{"s":{"p":["Cool:D $needle","Cool:D $pos","*%_"],"r":"Int:D"},"n":"rindex","k":"m","m":1},{"m":1,"k":"m","s":{"r":"Int:D","p":["Str:D $needle","Int:D $pos","*%_"]},"n":"rindex"},{"k":"m","m":1,"s":{"r":"Str:D","p":["*%_"]},"n":"tc"},{"s":{"p":["*%_"],"r":"Str:D"},"n":"tc","m":1,"k":"m"},{"k":"m","m":0,"s":{"r":"Num:D","p":["*%_"]},"n":"Num"},{"s":{"p":["*%_"],"r":"Str:D"},"n":"chomp","m":0,"k":"m"},{"n":"samespace","s":{"r":"Mu","p":["Str:D $pattern","*%_"]},"m":0,"k":"m"},{"s":{"r":"Mu","p":["Str:D $original","Str:D $final","*%options"]},"n":"subst","m":1,"k":"m"},{"m":1,"k":"m","n":"subst","s":{"p":["$matcher","$replacement","*%options"],"r":"Mu"}},{"n":"BUILDALL","s":{"r":"Mu","p":["@auto","%init","*%_"]},"m":0,"k":"s"},{"k":"s","m":0,"s":{"p":[":$value = \"\"","*%_"],"r":"Nil"},"n":"BUILD"}],"k":"c","b":"C","t":"NumStr","n":"NumStr"},{"k":"v","n":"&infix:<^..^>","t":"Sub+{is-pure}+{Precedence}"},{"n":"infix:<^..^>","s":{"p":["$min","$max"],"r":"Mu"},"k":"s","m":1},{"k":"v","n":"&infix:«(>)»","t":"Sub+{is-pure}+{Precedence}"},{"s":{"p":["\\a","\\b"],"r":"Bool:D"},"n":"infix:«(>)»","m":1,"k":"s"},{"k":"v","n":"&rename","t":"Sub"},{"s":{"p":["$from","$to",":$createonly"],"r":"Mu"},"n":"rename","m":1,"k":"s"},{"t":"Sub","n":"&unpolar","k":"v"},{"n":"unpolar","s":{"r":"Mu","p":["Real $mag","Real $angle"]},"m":1,"k":"s"},{"k":"v","n":"&push","t":"Sub"},{"n":"push","s":{"p":["\\a","|elems is raw"],"r":"Mu"},"m":1,"k":"s"},{"t":"Sub+{is-pure}","n":"&log10","k":"v"},{"k":"s","m":1,"s":{"r":"Mu","p":["Numeric $x"]},"n":"log10"},{"n":"log10","s":{"p":["Cool $x"],"r":"Mu"},"k":"s","m":1},{"k":"v","n":"&atomic-assign","t":"Sub"},{"m":1,"k":"s","s":{"r":"Mu","p":["$target is rw","\\value"]},"n":"atomic-assign"},{"k":"s","m":1,"s":{"r":"Mu","p":["atomicint $target is rw","int $value"]},"n":"atomic-assign"},{"m":1,"k":"s","n":"atomic-assign","s":{"r":"Mu","p":["atomicint $target is rw","Int:D $value"]}},{"m":1,"k":"s","s":{"r":"Mu","p":["atomicint $target is rw","$value"]},"n":"atomic-assign"},{"n":"&infix:<!=>","t":"Sub+{is-pure}+{Precedence}","k":"v"},{"n":"infix:<!=>","s":{"r":"Mu","p":["$?"]},"k":"s","m":1},{"s":{"p":["Mu \\a","Mu \\b"],"r":"Mu"},"n":"infix:<!=>","k":"s","m":1},{"m":1,"k":"s","s":{"r":"Bool:D","p":["int $a","int $b"]},"n":"infix:<!=>"},{"m":1,"k":"s","n":"infix:<!=>","s":{"r":"Bool:D","p":["Int:D \\a","Int:D \\b"]}},{"s":{"p":["num $a","num $b"],"r":"Bool:D"},"n":"infix:<!=>","k":"s","m":1},{"m":1,"k":"s","s":{"p":["Instant:D $a","Instant:D $b"],"r":"Bool:D"},"n":"infix:<!=>"},{"n":"infix:<!=>","s":{"p":["DateTime:D \\a","DateTime:D \\b"],"r":"Bool:D"},"k":"s","m":1},{"k":"s","m":1,"n":"infix:<!=>","s":{"r":"Mu","p":["Version:D \\a","Version:D \\b"]}},{"n":"&chrs","t":"Sub","k":"v"},{"k":"s","m":1,"s":{"p":["*@c"],"r":"Str:D"},"n":"chrs"},{"k":"v","n":"&infix:<xx>","t":"Sub+{Precedence}"},{"k":"s","m":1,"n":"infix:<xx>","s":{"r":"Mu","p":[]}},{"m":1,"k":"s","s":{"p":["Mu \\x"],"r":"Mu"},"n":"infix:<xx>"},{"m":1,"k":"s","s":{"p":["&x","Num:D(Any):D $n"],"r":"Mu"},"n":"infix:<xx>"},{"s":{"p":["&x","Whatever $"],"r":"Mu"},"n":"infix:<xx>","k":"s","m":1},{"m":1,"k":"s","n":"infix:<xx>","s":{"p":["&x","Bool:D $b"],"r":"Mu"}},{"m":1,"k":"s","s":{"r":"Mu","p":["&x","Int:D $n"]},"n":"infix:<xx>"},{"s":{"p":["Mu \\x","Num:D(Any):D $n"],"r":"Mu"},"n":"infix:<xx>","m":1,"k":"s"},{"s":{"p":["Mu \\x","Whatever $"],"r":"Mu"},"n":"infix:<xx>","k":"s","m":1},{"s":{"p":["Mu \\x","Bool:D $b"],"r":"Mu"},"n":"infix:<xx>","k":"s","m":1},{"n":"infix:<xx>","s":{"r":"Mu","p":["Mu \\x","Int:D $n"]},"k":"s","m":1},{"k":"v","n":"&pairs","t":"Sub"},{"m":1,"k":"s","s":{"p":["$x"],"r":"Mu"},"n":"pairs"},{"k":"e","n":"SOCK_DGRAM","t":"SocketType"},{"n":"&prefix:<~^>","t":"Sub+{is-pure}+{Precedence}","k":"v"},{"k":"s","m":1,"s":{"p":["\\a"],"r":"Mu"},"n":"prefix:<~^>"},{"n":"prefix:<~^>","s":{"p":["Blob:D \\a"],"r":"Mu"},"m":1,"k":"s"},{"k":"s","m":1,"s":{"r":"Mu","p":["Str \\a"]},"n":"prefix:<~^>"},{"n":"&chr","t":"Sub+{is-pure}","k":"v"},{"k":"s","m":1,"n":"chr","s":{"r":"Str:D","p":["Int:D \\x"]}},{"s":{"r":"Str:D","p":["Cool \\x"]},"n":"chr","m":1,"k":"s"},{"n":"chr","s":{"r":"str","p":["int $x"]},"k":"s","m":1},{"k":"v","t":"Sub+{is-pure}","n":"&is-prime"},{"m":1,"k":"s","n":"is-prime","s":{"r":"Int:D","p":["\\x"]}},{"n":"SIGPROF","t":"Signal","k":"e"},{"t":"Sub+{is-pure}+{Precedence}","n":"&infix:<X>","k":"v"},{"k":"s","m":1,"n":"infix:<X>","s":{"p":["+\\lol is raw",":&with!"],"r":"Seq:D"}},{"m":1,"k":"s","s":{"p":["+\\lol is raw"],"r":"Seq:D"},"n":"infix:<X>"},{"t":"Sub","n":"&chdir","k":"v"},{"s":{"p":["|c is raw"],"r":"Mu"},"n":"chdir","k":"s","m":1},{"k":"v","n":"&infix:<⊇>","t":"Sub+{is-pure}+{Precedence}"},{"n":"infix:<⊇>","s":{"p":["\\a","\\b"],"r":"Bool:D"},"k":"s","m":1},{"n":"byte","t":"byte","k":"n"},{"t":"Bool","n":"False","k":"e"},{"t":"Metamodel::Primitives","n":"Metamodel::Primitives","d":"TITLE\nclass Metamodel::Primitives\n\nSUBTITLE\nMetaobject that supports low-level type operations\n\n    class Metamodel::Primitives {}\n\nMetamodel::Primitives provides low-level operations for working with types,\nwhich are otherwise only available as implementation-dependent directives.\nThese primitives are available as class methods.\n\nHere is an example that steals the metamodel instance from the Int class to\ncreate a custom type (usually you would create your own metaclass if you\nmess with something as low-level), which allows calling of just one method\ncalled why:\n\n    my Mu $type := Metamodel::Primitives.create_type(Int.HOW, 'P6opaque');\n    $type.^set_name('why oh why?');\n    my %methods =  why => sub ($) { say 42 };\n    Metamodel::Primitives.install_method_cache($type, %methods, :authoritative);\n    $type.why;      # 42\n    $type.list;\n    CATCH { default { put .^name, ': ', .Str } };\n    # OUTPUT: «X::Method::NotFound: Method 'list' not found for invocant of class 'why oh why?'␤»\n\n","b":"A","k":"c","m":[{"k":"m","m":0,"s":{"r":"Mu","p":["Mu $how","$repr = \"P6opaque\"",":$mixin = Bool::False","*%_"]},"n":"create_type"},{"k":"m","m":0,"n":"set_package","s":{"p":["Mu $type","$package","*%_"],"r":"Mu"}},{"m":0,"k":"m","n":"install_method_cache","s":{"r":"Mu","p":["Mu $type","%cache",":$authoritative = Bool::True","*%_"]}},{"m":0,"k":"m","s":{"r":"Mu","p":["Mu $type","@cache",":$authoritative = Bool::True",":$call_accepts = Bool::False","*%_"]},"n":"configure_type_checking"},{"k":"m","m":0,"n":"configure_destroy","s":{"r":"Mu","p":["Mu $type","$destroy","*%_"]}},{"k":"m","m":0,"s":{"p":["Mu $type","$configuration","*%_"],"r":"Mu"},"n":"compose_type"},{"k":"m","m":0,"n":"rebless","s":{"r":"Mu","p":["Mu $obj","Mu $type","*%_"]}},{"s":{"p":["Mu \\obj","Mu \\type","*%_"],"r":"Mu"},"n":"is_type","m":0,"k":"m"},{"k":"s","m":0,"s":{"p":["@auto","%init","*%_"],"r":"Mu"},"n":"BUILDALL"}]},{"n":"&infix:«+>»","t":"Sub+{is-pure}","k":"v"},{"n":"infix:«+>»","s":{"r":"Mu","p":[]},"k":"s","m":1},{"s":{"r":"Mu","p":["$x"]},"n":"infix:«+>»","m":1,"k":"s"},{"n":"infix:«+>»","s":{"r":"Mu","p":["$x","$y"]},"k":"s","m":1},{"k":"s","m":1,"s":{"p":["Int:D \\a","Int:D \\b"],"r":"Int:D"},"n":"infix:«+>»"},{"k":"s","m":1,"s":{"r":"int","p":["int $a","int $b"]},"n":"infix:«+>»"},{"n":"&end","t":"Sub","k":"v"},{"k":"s","m":1,"n":"end","s":{"r":"Mu","p":["$a"]}},{"k":"v","n":"&values","t":"Sub"},{"s":{"r":"Mu","p":["$x"]},"n":"values","m":1,"k":"s"},{"k":"e","t":"Endian","n":"LittleEndian"},{"n":"Systemic","t":"Systemic","k":"ro","m":[{"k":"s","m":0,"n":"BUILD","s":{"p":[":name($!name) = \"unknown\"",":auth($!auth) = \"unknown\"",":version($!version) = { ... }","*%_"],"r":"Nil"}},{"n":"Str","s":{"r":"Mu","p":["*%_"]},"m":0,"k":"m"}],"a":[{"t":"Str","n":"$.name","k":"v"},{"t":"Str","n":"$.auth","k":"v"},{"n":"$.version","t":"Version","k":"v"},{"n":"$.signature","t":"Blob","k":"v"},{"n":"$.desc","t":"Str","k":"v"}],"b":"C","d":"TITLE\nrole Systemic\n\nSUBTITLE\nInformation related to the build system\n\nBuilt-in class for providing built system related information. Usually\naccessed through dynamic variables mixing this role such as the $*KERNEL,\n$*VM, or $*PERL.\n\n"},{"k":"v","t":"Sub","n":"&substr"},{"s":{"r":"Str:D","p":["\\what"]},"n":"substr","k":"s","m":1},{"s":{"p":["\\what","\\from"],"r":"Str:D"},"n":"substr","k":"s","m":1},{"n":"substr","s":{"p":["\\what","\\from","\\chars"],"r":"Str:D"},"m":1,"k":"s"},{"t":"Map","n":"Map","d":"TITLE\nclass Map\n\nSUBTITLE\nImmutable mapping from strings to values\n\n    class Map does Associative does Iterable { }\n\nA Map is an immutable mapping from string keys to values of arbitrary\ntypes. It serves as a base class for Hash, which is mutable.\n\nIn list context a Map behaves as a list of Pair objects.\n\nNote that the order in which keys, values and pairs are retrieved is\ngenerally arbitrary, but the keys, values and pairs methods return them\nalways in the same order when called on the same object.\n\n    my %e := Map.new('a', 1, 'b', 2);\n    say %e.keys;    # can print \"a b\\n\" or \"b a\\n\";\n    say %e.values;  # prints \"1 2\\n\" if the previous line\n                    # printed \"a b\\n\", \"b a\\n\" otherwise\n\nTo retrieve a value from the Map by key, use the { } postcircumfix\noperator:\n\n    my $map = Map.new('a', 1, 'b', 2);\n    say $map{'a'};      # OUTPUT: «1␤»\n    say $map{ 'a', 'b' }; # OUTPUT: «(1 2)␤»\n\nTo check whether a given key is stored in a Map, modify the access with the\n:exists adverb:\n\n    my $map = Map.new('a', 1, 'b', 2);\n    my $key = 'a';\n    if $map{$key}:exists {\n        say \"$map{} has key $key\";\n    }\n\nBeing an immutable instance, it is not possible to add keys after a Map has\nbeen initialized:\n\n    my $m = Map.new( 'a', 1, 'b', 2 );\n    $m{ 'c' } = 'foo'; # WRONG!\n                       # Cannot modify an immutable Str\n\n","m":[{"n":"elems","s":{"p":["*%_"],"r":"Int:D"},"k":"m","m":0},{"m":0,"k":"m","n":"IterationBuffer","s":{"r":"IterationBuffer:D","p":["*%_"]}},{"m":0,"k":"m","n":"List","s":{"r":"List:D","p":["*%_"]}},{"m":0,"k":"m","s":{"p":["*%_"],"r":"Iterator:D"},"n":"iterator"},{"k":"m","m":0,"s":{"r":"List:D","p":["*%_"]},"n":"list"},{"k":"m","m":1,"s":{"r":"Map:D","p":["Map:D \\map",":$INITIALIZE!","*%_"]},"n":"STORE"},{"k":"m","m":1,"n":"STORE","s":{"p":["\\to_store",":$INITIALIZE!","*%_"],"r":"Map:D"}},{"k":"m","m":1,"n":"STORE","s":{"r":"Map:D","p":["\\keys","\\values",":$INITIALIZE!","*%_"]}},{"m":1,"k":"m","n":"STORE","s":{"r":"Mu","p":["|"]}},{"n":"Capture","s":{"p":["*%_"],"r":"Mu"},"k":"m","m":0},{"s":{"p":["*%_"],"r":"Mu"},"n":"FLATTENABLE_LIST","k":"m","m":0},{"k":"m","m":0,"n":"FLATTENABLE_HASH","s":{"p":["*%_"],"r":"Mu"}},{"k":"m","m":0,"n":"fmt","s":{"r":"Str:D","p":["Cool $format = \"\\%s\\t\\%s\"","$sep = \"\\n\"","*%_"]}},{"m":0,"k":"m","s":{"r":"Mu","p":["*%_"]},"n":"hash"},{"k":"m","m":0,"n":"clone","s":{"p":["*%_"],"r":"Map:D"}},{"n":"of","s":{"p":["*%_"],"r":"Mu"},"k":"m","m":0},{"n":"keyof","s":{"r":"Mu","p":["*%_"]},"m":0,"k":"m"},{"k":"m","m":0,"n":"item","s":{"r":"Mu","p":["*%_"]}},{"m":0,"k":"m","n":"flat","s":{"p":["*%_"],"r":"Mu"}},{"s":{"r":"Mu","p":["$flag","*%_"]},"n":"lazy-if","k":"m","m":0},{"n":"lazy","s":{"r":"Mu","p":["*%_"]},"m":0,"k":"m"},{"s":{"p":["Int(Cool) :$batch = 64","Int(Cool) :$degree = 4","*%_"],"r":"Mu"},"n":"hyper","k":"m","m":0},{"n":"race","s":{"r":"Mu","p":["Int(Cool) :$batch = 64","Int(Cool) :$degree = 4","*%_"]},"k":"m","m":0},{"s":{"p":["*%_"],"r":"ValueObjAt:D"},"n":"WHICH","m":1,"k":"m"},{"s":{"p":["*%_"],"r":"ObjAt:D"},"n":"WHICH","k":"m","m":1},{"s":{"p":["*%_"],"r":"ValueObjAt:D"},"n":"WHICH","m":1,"k":"m"},{"n":"new","s":{"p":["*%attrinit"],"r":"Mu"},"k":"m","m":1},{"k":"m","m":1,"n":"new","s":{"r":"Mu","p":["$","*@","*%_"]}},{"n":"new","s":{"r":"Map:D","p":["*%_"]},"k":"m","m":1},{"s":{"p":["*@args","*%_"],"r":"Map:D"},"n":"new","k":"m","m":1},{"n":"Map","s":{"p":["*%_"],"r":"Mu"},"m":1,"k":"m"},{"s":{"r":"Mu","p":["*%_"]},"n":"Map","m":1,"k":"m"},{"n":"Hash","s":{"p":["*%_"],"r":"Mu"},"k":"m","m":1},{"s":{"r":"Mu","p":["*%_"]},"n":"Hash","k":"m","m":1},{"m":1,"k":"m","n":"Hash","s":{"p":["*%_"],"r":"Hash:D"}},{"n":"Bool","s":{"r":"Bool","p":["*%_"]},"m":1,"k":"m"},{"m":1,"k":"m","n":"Bool","s":{"p":["*%_"],"r":"Mu"}},{"s":{"p":["*%_"],"r":"Bool:D"},"n":"Bool","m":1,"k":"m"},{"n":"Int","s":{"p":["*%_"],"r":"Mu"},"k":"m","m":1},{"s":{"r":"Int:D","p":["*%_"]},"n":"Int","k":"m","m":1},{"m":1,"k":"m","n":"Numeric","s":{"r":"Mu","p":["*%_"]}},{"m":1,"k":"m","n":"Numeric","s":{"r":"Int:D","p":["*%_"]}},{"k":"m","m":1,"s":{"r":"Mu","p":["*%_"]},"n":"Str"},{"m":1,"k":"m","n":"Str","s":{"r":"Mu","p":["*%_"]}},{"s":{"p":["*%_"],"r":"Str:D"},"n":"Str","m":1,"k":"m"},{"n":"head","s":{"r":"Mu","p":["*%_"]},"k":"m","m":1},{"s":{"p":["Callable:D $w","*%_"],"r":"Mu"},"n":"head","k":"m","m":1},{"n":"head","s":{"r":"Mu","p":["$n","*%_"]},"k":"m","m":1},{"n":"head","s":{"r":"Mu","p":["*%_"]},"m":1,"k":"m"},{"s":{"r":"Mu","p":["*%_"]},"n":"sort","k":"m","m":1},{"n":"sort","s":{"r":"Mu","p":["&by","*%_"]},"k":"m","m":1},{"s":{"r":"Seq:D","p":["*%_"]},"n":"sort","m":1,"k":"m"},{"s":{"p":["\\topic","*%_"],"r":"Mu"},"n":"ACCEPTS","k":"m","m":1},{"n":"ACCEPTS","s":{"r":"Mu","p":["Mu:U \\topic","*%_"]},"m":1,"k":"m"},{"k":"m","m":1,"n":"ACCEPTS","s":{"p":["Mu:D \\a","*%_"],"r":"Mu"}},{"k":"m","m":1,"n":"ACCEPTS","s":{"r":"Bool","p":["Mu:U $","*%_"]}},{"n":"ACCEPTS","s":{"r":"Bool:D","p":["\\topic","*%_"]},"k":"m","m":1},{"k":"m","m":1,"n":"ACCEPTS","s":{"r":"Bool:D","p":["$topic","*%_"]}},{"n":"ACCEPTS","s":{"p":["Cool:D $topic","*%_"],"r":"Bool:D"},"m":1,"k":"m"},{"n":"ACCEPTS","s":{"r":"Bool:D","p":["Positional $topic","*%_"]},"m":1,"k":"m"},{"k":"m","m":1,"n":"ACCEPTS","s":{"r":"Bool:D","p":["Regex $topic","*%_"]}},{"k":"m","m":1,"s":{"r":"Bool:D","p":["Map:D \\m","*%_"]},"n":"ACCEPTS"},{"k":"m","m":1,"s":{"p":["$","*%_"],"r":"Bool"},"n":"EXISTS-KEY"},{"m":1,"k":"m","n":"EXISTS-KEY","s":{"p":["$","*%_"],"r":"Bool"}},{"k":"m","m":1,"s":{"r":"Bool:D","p":["Str:D \\key","*%_"]},"n":"EXISTS-KEY"},{"m":1,"k":"m","n":"EXISTS-KEY","s":{"p":["\\key","*%_"],"r":"Bool:D"}},{"n":"gist","s":{"p":["*%_"],"r":"Mu"},"k":"m","m":1},{"k":"m","m":1,"s":{"r":"Mu","p":["*%_"]},"n":"gist"},{"s":{"r":"Str:D","p":["*%_"]},"n":"gist","k":"m","m":1},{"k":"m","m":1,"n":"perl","s":{"r":"Mu","p":["*%_"]}},{"m":1,"k":"m","n":"perl","s":{"r":"Mu","p":["*%_"]}},{"m":1,"k":"m","s":{"p":["*%_"],"r":"Str:D"},"n":"perl"},{"s":{"r":"Mu","p":["*%_"]},"n":"pairs","m":1,"k":"m"},{"n":"pairs","s":{"p":["*%_"],"r":"Mu"},"k":"m","m":1},{"k":"m","m":1,"n":"pairs","s":{"r":"Seq:D","p":["*%_"]}},{"k":"m","m":1,"s":{"p":["*%_"],"r":"Mu"},"n":"keys"},{"k":"m","m":1,"n":"keys","s":{"r":"Mu","p":["*%_"]}},{"k":"m","m":1,"n":"keys","s":{"p":["*%_"],"r":"Seq:D"}},{"s":{"r":"Mu","p":["*%_"]},"n":"values","k":"m","m":1},{"k":"m","m":1,"s":{"p":["*%_"],"r":"Mu"},"n":"values"},{"n":"values","s":{"r":"Seq:D","p":["*%_"]},"k":"m","m":1},{"n":"kv","s":{"p":["*%_"],"r":"Mu"},"m":1,"k":"m"},{"n":"kv","s":{"p":["*%_"],"r":"Mu"},"m":1,"k":"m"},{"m":1,"k":"m","s":{"p":["*%_"],"r":"Seq:D"},"n":"kv"},{"s":{"r":"Mu","p":["*%_"]},"n":"antipairs","k":"m","m":1},{"n":"antipairs","s":{"r":"Mu","p":["*%_"]},"m":1,"k":"m"},{"s":{"p":["*%_"],"r":"Seq:D"},"n":"antipairs","k":"m","m":1},{"k":"m","m":1,"n":"invert","s":{"r":"Mu","p":["*%_"]}},{"n":"invert","s":{"p":["*%_"],"r":"Mu"},"k":"m","m":1},{"k":"m","m":1,"n":"invert","s":{"p":["*%_"],"r":"Seq:D"}},{"s":{"r":"Mu","p":["$key","*%_"]},"n":"AT-KEY","k":"m","m":1},{"n":"AT-KEY","s":{"p":["\\key","*%_"],"r":"Mu"},"m":1,"k":"m"},{"s":{"p":["Str:D \\key","*%_"],"r":"Mu"},"n":"AT-KEY","m":1,"k":"m"},{"m":1,"k":"m","n":"AT-KEY","s":{"p":["\\key","*%_"],"r":"Mu"}},{"n":"ASSIGN-KEY","s":{"p":["\\key","Mu \\assignee","*%_"],"r":"Mu"},"m":1,"k":"m"},{"n":"ASSIGN-KEY","s":{"r":"Mu","p":["\\key","Mu \\value","*%_"]},"k":"m","m":1},{"k":"m","m":1,"s":{"p":["*%_"],"r":"Mu"},"n":"roll"},{"k":"m","m":1,"s":{"p":["$n","*%_"],"r":"Mu"},"n":"roll"},{"k":"m","m":1,"s":{"r":"Mu","p":["*%_"]},"n":"roll"},{"s":{"r":"Mu","p":["Callable:D $calculate","*%_"]},"n":"roll","m":1,"k":"m"},{"m":1,"k":"m","s":{"p":["Whatever $","*%_"],"r":"Mu"},"n":"roll"},{"s":{"r":"Mu","p":["$count","*%_"]},"n":"roll","k":"m","m":1},{"s":{"r":"Mu","p":["*%_"]},"n":"pick","m":1,"k":"m"},{"s":{"p":["$n","*%_"],"r":"Mu"},"n":"pick","k":"m","m":1},{"n":"pick","s":{"r":"Mu","p":["*%_"]},"m":1,"k":"m"},{"s":{"p":["*%_"],"r":"Set:D"},"n":"Set","m":1,"k":"m"},{"k":"m","m":1,"n":"Set","s":{"r":"Set:D","p":["*%_"]}},{"m":1,"k":"m","n":"Set","s":{"p":["*%_"],"r":"Mu"}},{"s":{"p":["*%_"],"r":"SetHash:D"},"n":"SetHash","m":1,"k":"m"},{"s":{"p":["*%_"],"r":"SetHash:D"},"n":"SetHash","k":"m","m":1},{"k":"m","m":1,"n":"SetHash","s":{"r":"Mu","p":["*%_"]}},{"s":{"r":"Bag:D","p":["*%_"]},"n":"Bag","m":1,"k":"m"},{"s":{"r":"Bag:D","p":["*%_"]},"n":"Bag","k":"m","m":1},{"m":1,"k":"m","s":{"p":["*%_"],"r":"Mu"},"n":"Bag"},{"m":1,"k":"m","s":{"r":"BagHash:D","p":["*%_"]},"n":"BagHash"},{"m":1,"k":"m","n":"BagHash","s":{"r":"BagHash:D","p":["*%_"]}},{"m":1,"k":"m","n":"BagHash","s":{"p":["*%_"],"r":"Mu"}},{"s":{"p":["*%_"],"r":"Mix:D"},"n":"Mix","m":1,"k":"m"},{"m":1,"k":"m","s":{"r":"Mix:D","p":["*%_"]},"n":"Mix"},{"m":1,"k":"m","n":"Mix","s":{"r":"Mu","p":["*%_"]}},{"k":"m","m":1,"n":"MixHash","s":{"p":["*%_"],"r":"MixHash:D"}},{"k":"m","m":1,"s":{"p":["*%_"],"r":"MixHash:D"},"n":"MixHash"},{"k":"m","m":1,"n":"MixHash","s":{"p":["*%_"],"r":"Mu"}},{"m":0,"k":"s","s":{"r":"Mu","p":["@auto","%init","*%_"]},"n":"BUILDALL"},{"k":"m","m":0,"n":"!STORE_MAP_FROM_ITERATOR","s":{"p":["\\iter","*%_"],"r":"Map:D"}},{"m":0,"k":"m","s":{"p":["*%_"],"r":"Mu"},"n":"!keys-as-str"},{"m":0,"k":"m","n":"!STORE_MAP","s":{"p":["\\map","*%_"],"r":"Nil"}},{"n":"!DECONTAINERIZE","s":{"p":["*%_"],"r":"Map:D"},"m":0,"k":"m"},{"n":"!STORE_MAP_FROM_OBJECT_HASH","s":{"r":"Nil","p":["\\map","*%_"]},"m":0,"k":"m"},{"n":"!STORE_MAP_FROM_MAP","s":{"r":"Nil","p":["\\map","*%_"]},"m":0,"k":"m"}],"k":"c","a":[{"k":"v","n":"$!storage","t":"Mu"}],"b":"C"},{"n":"&infix:<⊆>","t":"Sub+{Callable[Bool:D]}+{is-pure}+{Precedence}","k":"v"},{"k":"s","m":1,"s":{"r":"Bool:D","p":["Setty:D \\a","Setty:D \\b"]},"n":"infix:«(<=)»"},{"n":"infix:«(<=)»","s":{"r":"Bool:D","p":["Setty:D \\a","Mixy:D \\b"]},"m":1,"k":"s"},{"s":{"r":"Bool:D","p":["Setty:D \\a","Baggy:D \\b"]},"n":"infix:«(<=)»","m":1,"k":"s"},{"s":{"r":"Bool:D","p":["Setty:D \\a","\\b"]},"n":"infix:«(<=)»","k":"s","m":1},{"m":1,"k":"s","s":{"r":"Bool:D","p":["Mixy:D \\a","Mixy:D \\b"]},"n":"infix:«(<=)»"},{"k":"s","m":1,"n":"infix:«(<=)»","s":{"p":["Mixy:D \\a","Baggy:D \\b"],"r":"Bool:D"}},{"n":"infix:«(<=)»","s":{"r":"Bool:D","p":["Mixy:D \\a","Setty:D \\b"]},"k":"s","m":1},{"n":"infix:«(<=)»","s":{"r":"Bool:D","p":["Mixy:D \\a","\\b"]},"k":"s","m":1},{"n":"infix:«(<=)»","s":{"r":"Bool:D","p":["Baggy:D \\a","Mixy:D \\b"]},"k":"s","m":1},{"n":"infix:«(<=)»","s":{"p":["Baggy:D \\a","Baggy:D \\b"],"r":"Bool:D"},"k":"s","m":1},{"m":1,"k":"s","n":"infix:«(<=)»","s":{"r":"Bool:D","p":["Baggy:D \\a","Setty:D \\b"]}},{"n":"infix:«(<=)»","s":{"r":"Bool:D","p":["Baggy:D \\a","\\b"]},"k":"s","m":1},{"n":"infix:«(<=)»","s":{"p":["Map:D \\a","Map:D \\b"],"r":"Bool:D"},"m":1,"k":"s"},{"n":"infix:«(<=)»","s":{"p":["Iterable:D \\a","Map:D \\b"],"r":"Bool:D"},"k":"s","m":1},{"n":"infix:«(<=)»","s":{"r":"Bool:D","p":["\\a","Mixy:D \\b"]},"k":"s","m":1},{"s":{"p":["\\a","Baggy:D \\b"],"r":"Bool:D"},"n":"infix:«(<=)»","m":1,"k":"s"},{"m":1,"k":"s","s":{"p":["\\a","Setty:D \\b"],"r":"Bool:D"},"n":"infix:«(<=)»"},{"m":1,"k":"s","s":{"r":"Mu","p":["Failure:D \\a","$"]},"n":"infix:«(<=)»"},{"k":"s","m":1,"n":"infix:«(<=)»","s":{"r":"Mu","p":["$","Failure:D \\b"]}},{"m":1,"k":"s","s":{"r":"Bool:D","p":["\\a","\\b"]},"n":"infix:«(<=)»"},{"n":"&defined","t":"Sub+{is-pure}","k":"v"},{"k":"s","m":1,"s":{"p":["Mu \\x"],"r":"Mu"},"n":"defined"},{"a":[{"t":"Mu","n":"$!descriptor","k":"v"},{"k":"v","n":"$!storage","t":"Mu"}],"b":"C","m":[{"m":0,"k":"m","n":"clone","s":{"p":["*%_"],"r":"Mu"}},{"m":1,"k":"m","n":"STORE_AT_KEY","s":{"r":"Nil","p":["Str:D \\key","Mu \\x","*%_"]}},{"k":"m","m":1,"n":"STORE_AT_KEY","s":{"r":"Nil","p":["\\key","Mu \\x","*%_"]}},{"s":{"r":"Mu","p":["\\to_store","*%_"]},"n":"STORE","m":1,"k":"m"},{"n":"STORE","s":{"r":"Mu","p":["\\keys","\\values","*%_"]},"k":"m","m":1},{"m":1,"k":"m","s":{"r":"Mu","p":["\\key","Mu \\bindval","*%_"]},"n":"BIND-KEY"},{"k":"m","m":1,"n":"BIND-KEY","s":{"p":["Str:D \\key","Mu \\bindval","*%_"],"r":"Mu"}},{"m":0,"k":"m","s":{"p":["*%_"],"r":"Mu"},"n":"keyof"},{"s":{"p":["*%_"],"r":"Mu"},"n":"of","k":"m","m":0},{"n":"name","s":{"r":"Mu","p":["*%_"]},"m":0,"k":"m"},{"n":"default","s":{"r":"Mu","p":["*%_"]},"k":"m","m":0},{"m":0,"k":"m","s":{"p":["*%_"],"r":"Mu"},"n":"dynamic"},{"k":"m","m":0,"n":"push","s":{"r":"Mu","p":["+\\values is raw","*%_"]}},{"s":{"p":["+\\values is raw","*%_"],"r":"Mu"},"n":"append","k":"m","m":0},{"k":"m","m":1,"n":"classify-list","s":{"p":["&test","\\list",":&as","*%_"],"r":"Mu"}},{"s":{"p":["%test","|c is raw"],"r":"Mu"},"n":"classify-list","k":"m","m":1},{"n":"classify-list","s":{"p":["@test","|c is raw"],"r":"Mu"},"m":1,"k":"m"},{"s":{"p":["&test","**@list","|c is raw"],"r":"Mu"},"n":"classify-list","m":1,"k":"m"},{"s":{"r":"Mu","p":["&test","\\list",":&as","*%_"]},"n":"categorize-list","k":"m","m":1},{"n":"categorize-list","s":{"p":["%test","|c is raw"],"r":"Mu"},"m":1,"k":"m"},{"k":"m","m":1,"s":{"r":"Mu","p":["@test","|c is raw"]},"n":"categorize-list"},{"s":{"r":"Mu","p":["&test","**@list","|c is raw"]},"n":"categorize-list","m":1,"k":"m"},{"k":"m","m":1,"s":{"r":"ValueObjAt:D","p":["*%_"]},"n":"WHICH"},{"k":"m","m":1,"s":{"r":"ObjAt:D","p":["*%_"]},"n":"WHICH"},{"s":{"r":"ValueObjAt:D","p":["*%_"]},"n":"WHICH","m":1,"k":"m"},{"k":"m","m":1,"n":"WHICH","s":{"r":"ObjAt:D","p":["*%_"]}},{"n":"Hash","s":{"p":["*%_"],"r":"Mu"},"k":"m","m":1},{"n":"Hash","s":{"r":"Mu","p":["*%_"]},"m":1,"k":"m"},{"n":"Hash","s":{"r":"Hash:D","p":["*%_"]},"k":"m","m":1},{"m":1,"k":"m","s":{"r":"Mu","p":["*%_"]},"n":"Hash"},{"s":{"p":["*%_"],"r":"Mu"},"n":"Map","k":"m","m":1},{"n":"Map","s":{"p":["*%_"],"r":"Mu"},"m":1,"k":"m"},{"k":"m","m":1,"n":"Map","s":{"r":"Mu","p":["*%_"]}},{"s":{"r":"Mu","p":[":$view","*%_"]},"n":"Map","k":"m","m":1},{"s":{"p":["$key","*%_"],"r":"Mu"},"n":"AT-KEY","k":"m","m":1},{"m":1,"k":"m","s":{"r":"Mu","p":["\\key","*%_"]},"n":"AT-KEY"},{"m":1,"k":"m","n":"AT-KEY","s":{"p":["Str:D \\key","*%_"],"r":"Mu"}},{"n":"AT-KEY","s":{"p":["\\key","*%_"],"r":"Mu"},"k":"m","m":1},{"m":1,"k":"m","s":{"r":"Mu","p":["Str:D \\key","*%_"]},"n":"AT-KEY"},{"m":1,"k":"m","s":{"p":["\\key","*%_"],"r":"Mu"},"n":"AT-KEY"},{"m":1,"k":"m","n":"ASSIGN-KEY","s":{"r":"Mu","p":["\\key","Mu \\assignee","*%_"]}},{"n":"ASSIGN-KEY","s":{"p":["\\key","Mu \\value","*%_"],"r":"Mu"},"k":"m","m":1},{"s":{"p":["Str:D $key","Mu \\assignval","*%_"],"r":"Mu"},"n":"ASSIGN-KEY","m":1,"k":"m"},{"m":1,"k":"m","s":{"r":"Mu","p":["\\key","Mu \\assignval","*%_"]},"n":"ASSIGN-KEY"},{"m":1,"k":"m","n":"DELETE-KEY","s":{"p":["$","*%_"],"r":"Nil"}},{"k":"m","m":1,"n":"DELETE-KEY","s":{"p":["$","*%_"],"r":"Mu"}},{"s":{"p":["*%_"],"r":"Nil"},"n":"DELETE-KEY","m":1,"k":"m"},{"m":1,"k":"m","s":{"r":"Mu","p":["Str:D \\key","*%_"]},"n":"DELETE-KEY"},{"m":1,"k":"m","s":{"p":["\\key","*%_"],"r":"Mu"},"n":"DELETE-KEY"},{"k":"m","m":1,"n":"perl","s":{"r":"Mu","p":["*%_"]}},{"k":"m","m":1,"s":{"p":["*%_"],"r":"Mu"},"n":"perl"},{"k":"m","m":1,"s":{"p":["*%_"],"r":"Str:D"},"n":"perl"},{"k":"m","m":1,"s":{"p":["*%_"],"r":"Mu"},"n":"perl"},{"s":{"p":["*%_"],"r":"Mu"},"n":"gist","k":"m","m":1},{"k":"m","m":1,"s":{"r":"Mu","p":["*%_"]},"n":"gist"},{"m":1,"k":"m","n":"gist","s":{"p":["*%_"],"r":"Str:D"}},{"s":{"r":"Mu","p":["*%_"]},"n":"gist","k":"m","m":1},{"n":"DUMP","s":{"r":"Mu","p":["*%_"]},"k":"m","m":1},{"m":1,"k":"m","s":{"p":[":$indent-step = 4",":%ctx","*%_"],"r":"Mu"},"n":"DUMP"},{"n":"DUMP","s":{"p":[":$indent-step = 4",":%ctx","*%_"],"r":"Mu"},"k":"m","m":1},{"s":{"r":"Mu","p":["@auto","%init","*%_"]},"n":"BUILDALL","m":0,"k":"s"},{"n":"clone","s":{"p":["*%_"],"r":"Map:D"},"k":"m","m":0},{"m":0,"k":"m","n":"iterator","s":{"r":"Iterator:D","p":["*%_"]}},{"k":"m","m":0,"n":"hash","s":{"p":["*%_"],"r":"Mu"}},{"s":{"r":"Mu","p":["\\key","Mu \\assignee","*%_"]},"n":"ASSIGN-KEY","k":"m","m":1},{"m":1,"k":"m","s":{"r":"Mu","p":["\\key","Mu \\value","*%_"]},"n":"ASSIGN-KEY"},{"s":{"p":["*%_"],"r":"Mu"},"n":"Str","m":1,"k":"m"},{"m":1,"k":"m","n":"Str","s":{"p":["*%_"],"r":"Mu"}},{"m":1,"k":"m","n":"Str","s":{"r":"Str:D","p":["*%_"]}},{"s":{"r":"SetHash:D","p":["*%_"]},"n":"SetHash","m":1,"k":"m"},{"n":"SetHash","s":{"p":["*%_"],"r":"SetHash:D"},"k":"m","m":1},{"m":1,"k":"m","n":"SetHash","s":{"p":["*%_"],"r":"Mu"}},{"s":{"r":"Mu","p":["*%_"]},"n":"Capture","k":"m","m":0},{"k":"m","m":0,"n":"flat","s":{"p":["*%_"],"r":"Mu"}},{"s":{"r":"Mu","p":["*%_"]},"n":"sort","m":1,"k":"m"},{"s":{"r":"Mu","p":["&by","*%_"]},"n":"sort","k":"m","m":1},{"n":"sort","s":{"p":["*%_"],"r":"Seq:D"},"m":1,"k":"m"},{"k":"m","m":1,"n":"WHICH","s":{"p":["*%_"],"r":"ValueObjAt:D"}},{"s":{"p":["*%_"],"r":"ObjAt:D"},"n":"WHICH","k":"m","m":1},{"k":"m","m":1,"s":{"r":"ValueObjAt:D","p":["*%_"]},"n":"WHICH"},{"s":{"r":"Mix:D","p":["*%_"]},"n":"Mix","m":1,"k":"m"},{"s":{"p":["*%_"],"r":"Mix:D"},"n":"Mix","m":1,"k":"m"},{"m":1,"k":"m","n":"Mix","s":{"p":["*%_"],"r":"Mu"}},{"s":{"p":["*%_"],"r":"Set:D"},"n":"Set","k":"m","m":1},{"n":"Set","s":{"r":"Set:D","p":["*%_"]},"k":"m","m":1},{"m":1,"k":"m","s":{"r":"Mu","p":["*%_"]},"n":"Set"},{"m":1,"k":"m","n":"Bag","s":{"p":["*%_"],"r":"Bag:D"}},{"k":"m","m":1,"n":"Bag","s":{"p":["*%_"],"r":"Bag:D"}},{"k":"m","m":1,"n":"Bag","s":{"r":"Mu","p":["*%_"]}},{"n":"values","s":{"r":"Mu","p":["*%_"]},"k":"m","m":1},{"n":"values","s":{"p":["*%_"],"r":"Mu"},"k":"m","m":1},{"m":1,"k":"m","n":"values","s":{"r":"Seq:D","p":["*%_"]}},{"m":1,"k":"m","n":"roll","s":{"p":["*%_"],"r":"Mu"}},{"s":{"r":"Mu","p":["$n","*%_"]},"n":"roll","k":"m","m":1},{"s":{"p":["*%_"],"r":"Mu"},"n":"roll","k":"m","m":1},{"m":1,"k":"m","s":{"p":["Callable:D $calculate","*%_"],"r":"Mu"},"n":"roll"},{"n":"roll","s":{"p":["Whatever $","*%_"],"r":"Mu"},"k":"m","m":1},{"k":"m","m":1,"s":{"p":["$count","*%_"],"r":"Mu"},"n":"roll"},{"m":1,"k":"m","s":{"p":["*%_"],"r":"Mu"},"n":"pairs"},{"s":{"r":"Mu","p":["*%_"]},"n":"pairs","k":"m","m":1},{"n":"pairs","s":{"r":"Seq:D","p":["*%_"]},"m":1,"k":"m"},{"k":"m","m":1,"n":"head","s":{"p":["*%_"],"r":"Mu"}},{"s":{"r":"Mu","p":["Callable:D $w","*%_"]},"n":"head","m":1,"k":"m"},{"s":{"p":["$n","*%_"],"r":"Mu"},"n":"head","k":"m","m":1},{"k":"m","m":1,"n":"head","s":{"r":"Mu","p":["*%_"]}},{"s":{"p":["*%_"],"r":"Mu"},"n":"kv","m":1,"k":"m"},{"k":"m","m":1,"s":{"p":["*%_"],"r":"Mu"},"n":"kv"},{"n":"kv","s":{"p":["*%_"],"r":"Seq:D"},"k":"m","m":1},{"n":"IterationBuffer","s":{"r":"IterationBuffer:D","p":["*%_"]},"k":"m","m":0},{"m":1,"k":"m","n":"STORE","s":{"r":"Map:D","p":["Map:D \\map",":$INITIALIZE!","*%_"]}},{"m":1,"k":"m","s":{"r":"Map:D","p":["\\to_store",":$INITIALIZE!","*%_"]},"n":"STORE"},{"m":1,"k":"m","n":"STORE","s":{"r":"Map:D","p":["\\keys","\\values",":$INITIALIZE!","*%_"]}},{"m":1,"k":"m","s":{"p":["|"],"r":"Mu"},"n":"STORE"},{"m":0,"k":"m","n":"FLATTENABLE_LIST","s":{"p":["*%_"],"r":"Mu"}},{"m":1,"k":"m","n":"pick","s":{"p":["*%_"],"r":"Mu"}},{"n":"pick","s":{"r":"Mu","p":["$n","*%_"]},"m":1,"k":"m"},{"k":"m","m":1,"s":{"p":["*%_"],"r":"Mu"},"n":"pick"},{"n":"keys","s":{"p":["*%_"],"r":"Mu"},"k":"m","m":1},{"n":"keys","s":{"p":["*%_"],"r":"Mu"},"k":"m","m":1},{"s":{"r":"Seq:D","p":["*%_"]},"n":"keys","k":"m","m":1},{"k":"m","m":0,"s":{"r":"Mu","p":["*%_"]},"n":"keyof"},{"m":0,"k":"m","s":{"p":["*%_"],"r":"Int:D"},"n":"elems"},{"k":"m","m":1,"s":{"p":["*%_"],"r":"Mu"},"n":"gist"},{"m":1,"k":"m","n":"gist","s":{"r":"Mu","p":["*%_"]}},{"s":{"p":["*%_"],"r":"Str:D"},"n":"gist","m":1,"k":"m"},{"s":{"r":"List:D","p":["*%_"]},"n":"List","k":"m","m":0},{"k":"m","m":1,"s":{"p":["*%_"],"r":"Bool"},"n":"Bool"},{"k":"m","m":1,"s":{"p":["*%_"],"r":"Mu"},"n":"Bool"},{"s":{"p":["*%_"],"r":"Bool:D"},"n":"Bool","m":1,"k":"m"},{"m":1,"k":"m","s":{"r":"Mu","p":["*%attrinit"]},"n":"new"},{"k":"m","m":1,"s":{"p":["$","*@","*%_"],"r":"Mu"},"n":"new"},{"k":"m","m":1,"s":{"r":"Map:D","p":["*%_"]},"n":"new"},{"n":"new","s":{"r":"Map:D","p":["*@args","*%_"]},"m":1,"k":"m"},{"n":"list","s":{"p":["*%_"],"r":"List:D"},"k":"m","m":0},{"n":"hyper","s":{"p":["Int(Cool) :$batch = 64","Int(Cool) :$degree = 4","*%_"],"r":"Mu"},"m":0,"k":"m"},{"n":"fmt","s":{"p":["Cool $format = \"\\%s\\t\\%s\"","$sep = \"\\n\"","*%_"],"r":"Str:D"},"k":"m","m":0},{"k":"m","m":0,"s":{"p":["Int(Cool) :$batch = 64","Int(Cool) :$degree = 4","*%_"],"r":"Mu"},"n":"race"},{"m":0,"k":"m","s":{"p":["*%_"],"r":"Mu"},"n":"item"},{"m":1,"k":"m","n":"invert","s":{"r":"Mu","p":["*%_"]}},{"k":"m","m":1,"s":{"r":"Mu","p":["*%_"]},"n":"invert"},{"k":"m","m":1,"s":{"p":["*%_"],"r":"Seq:D"},"n":"invert"},{"k":"m","m":1,"s":{"r":"Mu","p":["\\topic","*%_"]},"n":"ACCEPTS"},{"k":"m","m":1,"n":"ACCEPTS","s":{"r":"Mu","p":["Mu:U \\topic","*%_"]}},{"s":{"r":"Mu","p":["Mu:D \\a","*%_"]},"n":"ACCEPTS","k":"m","m":1},{"s":{"r":"Bool","p":["Mu:U $","*%_"]},"n":"ACCEPTS","m":1,"k":"m"},{"m":1,"k":"m","s":{"p":["\\topic","*%_"],"r":"Bool:D"},"n":"ACCEPTS"},{"n":"ACCEPTS","s":{"p":["$topic","*%_"],"r":"Bool:D"},"k":"m","m":1},{"n":"ACCEPTS","s":{"r":"Bool:D","p":["Cool:D $topic","*%_"]},"m":1,"k":"m"},{"k":"m","m":1,"n":"ACCEPTS","s":{"r":"Bool:D","p":["Positional $topic","*%_"]}},{"n":"ACCEPTS","s":{"r":"Bool:D","p":["Regex $topic","*%_"]},"k":"m","m":1},{"k":"m","m":1,"n":"ACCEPTS","s":{"p":["Map:D \\m","*%_"],"r":"Bool:D"}},{"k":"m","m":1,"n":"EXISTS-KEY","s":{"p":["$","*%_"],"r":"Bool"}},{"s":{"r":"Bool","p":["$","*%_"]},"n":"EXISTS-KEY","m":1,"k":"m"},{"m":1,"k":"m","s":{"p":["Str:D \\key","*%_"],"r":"Bool:D"},"n":"EXISTS-KEY"},{"n":"EXISTS-KEY","s":{"p":["\\key","*%_"],"r":"Bool:D"},"m":1,"k":"m"},{"m":0,"k":"m","s":{"r":"Mu","p":["*%_"]},"n":"of"},{"n":"perl","s":{"r":"Mu","p":["*%_"]},"m":1,"k":"m"},{"m":1,"k":"m","n":"perl","s":{"p":["*%_"],"r":"Mu"}},{"s":{"p":["*%_"],"r":"Str:D"},"n":"perl","m":1,"k":"m"},{"m":1,"k":"m","s":{"p":["*%_"],"r":"Mu"},"n":"Numeric"},{"m":1,"k":"m","n":"Numeric","s":{"r":"Int:D","p":["*%_"]}},{"k":"m","m":0,"s":{"r":"Mu","p":["$flag","*%_"]},"n":"lazy-if"},{"n":"Map","s":{"p":["*%_"],"r":"Mu"},"k":"m","m":1},{"k":"m","m":1,"s":{"r":"Mu","p":["*%_"]},"n":"Map"},{"s":{"r":"Mu","p":["*%_"]},"n":"FLATTENABLE_HASH","k":"m","m":0},{"s":{"p":["*%_"],"r":"Mu"},"n":"Hash","m":1,"k":"m"},{"n":"Hash","s":{"r":"Mu","p":["*%_"]},"m":1,"k":"m"},{"n":"Hash","s":{"p":["*%_"],"r":"Hash:D"},"m":1,"k":"m"},{"s":{"r":"Mu","p":["$key","*%_"]},"n":"AT-KEY","m":1,"k":"m"},{"n":"AT-KEY","s":{"p":["\\key","*%_"],"r":"Mu"},"m":1,"k":"m"},{"k":"m","m":1,"n":"AT-KEY","s":{"r":"Mu","p":["Str:D \\key","*%_"]}},{"m":1,"k":"m","s":{"r":"Mu","p":["\\key","*%_"]},"n":"AT-KEY"},{"k":"m","m":0,"s":{"p":["*%_"],"r":"Mu"},"n":"lazy"},{"m":1,"k":"m","s":{"p":["*%_"],"r":"Mu"},"n":"antipairs"},{"s":{"p":["*%_"],"r":"Mu"},"n":"antipairs","k":"m","m":1},{"s":{"p":["*%_"],"r":"Seq:D"},"n":"antipairs","k":"m","m":1},{"n":"Int","s":{"r":"Mu","p":["*%_"]},"m":1,"k":"m"},{"s":{"r":"Int:D","p":["*%_"]},"n":"Int","k":"m","m":1},{"m":1,"k":"m","n":"MixHash","s":{"r":"MixHash:D","p":["*%_"]}},{"n":"MixHash","s":{"p":["*%_"],"r":"MixHash:D"},"k":"m","m":1},{"k":"m","m":1,"n":"MixHash","s":{"r":"Mu","p":["*%_"]}},{"s":{"r":"BagHash:D","p":["*%_"]},"n":"BagHash","k":"m","m":1},{"k":"m","m":1,"n":"BagHash","s":{"r":"BagHash:D","p":["*%_"]}},{"m":1,"k":"m","s":{"p":["*%_"],"r":"Mu"},"n":"BagHash"},{"s":{"p":["@auto","%init","*%_"],"r":"Mu"},"n":"BUILDALL","k":"s","m":0},{"k":"m","m":0,"s":{"r":"Nil","p":["Mu $key","Mu \\value","*%_"]},"n":"!_append_construct"},{"n":"!AT_KEY_CONTAINER","s":{"p":["Str:D \\key","*%_"],"r":"Mu"},"k":"m","m":0},{"m":0,"k":"m","s":{"r":"Nil","p":["\\map","*%_"]},"n":"!STORE_MAP"},{"k":"m","m":0,"n":"!_push_construct","s":{"p":["Mu $key","Mu \\value","*%_"],"r":"Nil"}}],"k":"c","d":"TITLE\nclass Hash\n\nSUBTITLE\nMapping from strings to itemized values\n\n    class Hash is Map { }\n\nA Hash is a mutable Map; it implements Associative through its inheritance\nof Map and as such provides support for looking up values using keys,\nproviding support for associative subscripting.\n\nAlthough the order of the hashes is guaranteed to be random in every single\ncall, still successive calls to .keys and .values are guaranteed to return\nthem in the same order:\n\n    my %orig = :1a, :2b; my %new = :5b, :6c;\n    %orig{ %new.keys } = %new.values;\n    say %orig.perl; # OUTPUT: «{:a(1), :b(5), :c(6)}␤»\n\nIn this case, b will always be associated to 5 and c to 6; even if two\nsuccessive calls to keys will return them in different order. Successive\ncalls to any of them separately and repeatedly will always return the same\norder in any program invocation.\n\nPlease see the section on hash literals for different ways to declare a\nhash. Additionally, they can be declared using curly braces as long as\nthese rules are followed:\n\n  * Empty curly braces will always declare an empty hash.\n\n  * A reference to $_ (even implicit) will instead declare a block.\n\n  * A Pair or variable with % as the first element will declare a hash.\n\n    given 3 { say WHAT {3 => 4, :b}  };     # OUTPUT: «(Hash)␤»\n    given 3 { say WHAT {3 => 4, :b($_)} };  # OUTPUT: «(Block)␤»\n    given 3 { say WHAT {3 => 4, :b(.Num)} };# OUTPUT: «(Block)␤»\n    say { 'a',:b(3), 'c' }.^name;           # OUTPUT: «Block␤»\n\n\nThe next-to-last two cases are examples of the generation of Blocks in the\npresence of the topic variable $_. The last case does not meet the third\ncriterium for generating a hash, and thus generates a Block.\n\nA % in front of parentheses or square brackets will generate a Hash as long\nas the elements can be paired.\n\n    say %( 'a', 3, :b(3), 'c', 3 ).^name; # OUTPUT: «Hash␤»\n\nElements in this hash can be paired both sides of the Pair :b(3).\n\n    say %(«a b c 1 2 3»).^name;           # OUTPUT: «Hash␤»\n\nAn empty hash can be initialized either with empty curly braces or, since\n6.d, %().\n\n    say %().^name; # OUTPUT: «Hash␤»\n    say {}.^name;  # OUTPUT: «Hash␤»\n\n","n":"Hash","t":"Hash"},{"n":"&infix:<or>","t":"Sub+{Precedence}","k":"v"},{"k":"s","m":1,"s":{"r":"Mu","p":["Mu $x = Bool::False"]},"n":"infix:<or>"},{"k":"s","m":1,"n":"infix:<or>","s":{"r":"Mu","p":["Mu \\a","&b"]}},{"n":"infix:<or>","s":{"r":"Mu","p":["Mu \\a","Mu \\b"]},"m":1,"k":"s"},{"t":"Sub+{is-pure}+{Precedence}","n":"&prefix:<not>","k":"v"},{"k":"s","m":1,"s":{"p":["Bool \\a"],"r":"Mu"},"n":"prefix:<not>"},{"m":1,"k":"s","n":"prefix:<not>","s":{"p":["Mu \\a"],"r":"Mu"}},{"t":"Signal","n":"SIGXCPU","k":"e"},{"k":"v","t":"Sub","n":"&so"},{"m":1,"k":"s","s":{"p":["Mu $x"],"r":"Mu"},"n":"so"},{"k":"v","n":"&prefix:<−>","t":"Sub+{is-pure}+{Precedence}"},{"m":1,"k":"s","n":"prefix:<->","s":{"p":["\\a"],"r":"Mu"}},{"s":{"p":["Real:D \\a"],"r":"Mu"},"n":"prefix:<->","k":"s","m":1},{"n":"prefix:<->","s":{"r":"Int:D","p":["Int:D \\a"]},"k":"s","m":1},{"n":"prefix:<->","s":{"r":"int","p":["int $a"]},"k":"s","m":1},{"k":"s","m":1,"s":{"r":"Mu","p":["Num:D \\a"]},"n":"prefix:<->"},{"n":"prefix:<->","s":{"r":"num","p":["num $a"]},"k":"s","m":1},{"k":"s","m":1,"n":"prefix:<->","s":{"p":["Rat:D \\a"],"r":"Rat:D"}},{"k":"s","m":1,"s":{"p":["FatRat:D \\a"],"r":"FatRat:D"},"n":"prefix:<->"},{"m":1,"k":"s","n":"prefix:<->","s":{"p":["Complex:D \\a"],"r":"Complex:D"}},{"n":"prefix:<->","s":{"r":"Duration:D","p":["Duration:D $a"]},"m":1,"k":"s"},{"k":"e","n":"SIGVTALRM","t":"Signal"},{"n":"&chomp","t":"Sub","k":"v"},{"n":"chomp","s":{"p":["Cool $s"],"r":"Str:D"},"m":1,"k":"s"},{"k":"v","t":"Sub","n":"&EVAL"},{"k":"s","m":1,"n":"EVAL","s":{"r":"Mu","p":["$code","Str :$lang where { ... }","PseudoStash :$context",":$filename = Str",":$check = Bool::False"]}},{"k":"v","n":"&pair","t":"Sub+{is-pure}"},{"n":"pair","s":{"r":"Mu","p":["Mu \\key","Mu \\value"]},"k":"s","m":1},{"n":"&infix:«~<»","t":"Sub","k":"v"},{"s":{"p":["Str:D \\a","Int:D \\b"],"r":"Str:D"},"n":"infix:«~<»","k":"s","m":1},{"k":"s","m":1,"n":"infix:«~<»","s":{"p":["str $a","int $b"],"r":"Mu"}},{"k":"v","n":"&infix:«+<»","t":"Sub+{is-pure}"},{"k":"s","m":1,"n":"infix:«+<»","s":{"p":[],"r":"Mu"}},{"k":"s","m":1,"s":{"r":"Mu","p":["$x"]},"n":"infix:«+<»"},{"n":"infix:«+<»","s":{"p":["$x","$y"],"r":"Mu"},"m":1,"k":"s"},{"n":"infix:«+<»","s":{"r":"Int:D","p":["Int:D \\a","Int:D \\b"]},"m":1,"k":"s"},{"s":{"r":"int","p":["int $a","int $b"]},"n":"infix:«+<»","k":"s","m":1},{"b":"A","m":[{"n":"new","s":{"r":"Mu","p":["str $s","*%_"]},"k":"m","m":0},{"k":"m","m":1,"s":{"p":["*%_"],"r":"ValueObjAt:D"},"n":"WHICH"},{"s":{"r":"ObjAt:D","p":["*%_"]},"n":"WHICH","k":"m","m":1},{"n":"WHICH","s":{"p":["*%_"],"r":"ObjAt:D"},"k":"m","m":1},{"m":1,"k":"m","s":{"p":["*%_"],"r":"Mu"},"n":"Str"},{"s":{"p":["*%_"],"r":"Mu"},"n":"Str","m":1,"k":"m"},{"k":"m","m":1,"s":{"r":"Mu","p":["*%_"]},"n":"Str"},{"m":1,"k":"m","n":"gist","s":{"r":"Mu","p":["*%_"]}},{"n":"gist","s":{"r":"Mu","p":["*%_"]},"k":"m","m":1},{"m":1,"k":"m","n":"gist","s":{"p":["*%_"],"r":"Mu"}},{"n":"perl","s":{"r":"Mu","p":["*%_"]},"m":1,"k":"m"},{"s":{"r":"Mu","p":["*%_"]},"n":"perl","k":"m","m":1},{"n":"perl","s":{"r":"Mu","p":["*%_"]},"m":1,"k":"m"},{"m":0,"k":"s","n":"BUILDALL","s":{"p":["@auto","%init","*%_"],"r":"Mu"}}],"k":"c","d":"TITLE\nclass ObjAt\n\nSUBTITLE\nUnique identification for an object\n\n    class ObjAt is Any {}\n\nObjects of type ObjAt are the return value of .WHICH calls on other\nobjects, and identify an object uniquely.\n\nIf two objects compare equally via ===, their .WHICH methods return the\nsame ObjAt object.\n\nSee also ValueObjAt for value types.\n\n","n":"ObjAt","t":"ObjAt"},{"d":"TITLE\nrole Numeric\n\nSUBTITLE\nNumber or object that can act as a number\n\n    role Numeric { ... }\n\nCommon role for numbers and types that can act as numbers.\n\nBinary numeric operations return an object of the \"wider\" type:\n\n    Int         narrowest\n    Rat\n    FatRat\n    Num\n    Complex     widest\n\n\nSo for example the product of a Rat and an Int is a Rat.\n\nUnary operations that in pure math usually return an irrational number\ngenerally return Num in Raku.\n\n","b":"C","m":[{"n":"log10","s":{"p":["*%_"],"r":"Mu"},"m":0,"k":"m"},{"k":"m","m":0,"n":"roots","s":{"r":"Mu","p":["Cool $n","*%_"]}},{"m":0,"k":"m","n":"FatRat","s":{"p":["*%_"],"r":"Mu"}},{"n":"succ","s":{"r":"Mu","p":["*%_"]},"k":"m","m":0},{"n":"pred","s":{"p":["*%_"],"r":"Mu"},"m":0,"k":"m"}],"k":"ro","t":"Numeric","n":"Numeric"},{"n":"&circumfix:<[ ]>","t":"Sub","k":"v"},{"m":1,"k":"s","s":{"p":[],"r":"Mu"},"n":"circumfix:<[ ]>"},{"n":"circumfix:<[ ]>","s":{"p":["Iterable:D \\iterable"],"r":"Mu"},"m":1,"k":"s"},{"k":"s","m":1,"s":{"p":["Mu \\x"],"r":"Mu"},"n":"circumfix:<[ ]>"},{"n":"&atomic-fetch-dec","t":"Sub","k":"v"},{"m":1,"k":"s","s":{"p":["atomicint $target is rw"],"r":"atomicint"},"n":"atomic-fetch-dec"},{"t":"Sub","n":"&trait_mod:<returns>","k":"v"},{"k":"s","m":1,"n":"trait_mod:<returns>","s":{"r":"Mu","p":["Routine:D $target","Mu:U $type"]}},{"k":"v","t":"Sub","n":"&infix:<⚛−=>"},{"k":"s","m":1,"n":"infix:<⚛-=>","s":{"r":"atomicint","p":["atomicint $target is rw","int $add"]}},{"m":1,"k":"s","s":{"p":["atomicint $target is rw","Int:D $add"],"r":"atomicint"},"n":"infix:<⚛-=>"},{"n":"infix:<⚛-=>","s":{"p":["atomicint $target is rw","$add"],"r":"atomicint"},"m":1,"k":"s"},{"k":"v","n":"&nodemap","t":"Sub"},{"s":{"r":"Mu","p":["\\op","\\obj"]},"n":"nodemap","k":"s","m":1},{"k":"s","m":1,"s":{"p":["\\op","Associative \\h"],"r":"Mu"},"n":"nodemap"},{"d":"TITLE\nrole Real\n\nSUBTITLE\nNon-complex number\n\n    role Real does Numeric { ... }\n\nCommon role for non-Complex numbers.\n\n","m":[{"m":0,"k":"m","n":"Rat","s":{"p":["Real $epsilon = 1e-06","*%_"],"r":"Mu"}},{"n":"abs","s":{"r":"Mu","p":["*%_"]},"k":"m","m":0},{"k":"m","m":0,"n":"sign","s":{"r":"Mu","p":["*%_"]}},{"n":"conj","s":{"r":"Mu","p":["*%_"]},"m":0,"k":"m"},{"s":{"p":["*%_"],"r":"Mu"},"n":"sqrt","m":0,"k":"m"},{"k":"m","m":0,"n":"rand","s":{"r":"Mu","p":["*%_"]}},{"n":"sin","s":{"p":["*%_"],"r":"Mu"},"k":"m","m":0},{"n":"asin","s":{"r":"Mu","p":["*%_"]},"k":"m","m":0},{"s":{"p":["*%_"],"r":"Mu"},"n":"cos","k":"m","m":0},{"m":0,"k":"m","n":"acos","s":{"r":"Mu","p":["*%_"]}},{"n":"tan","s":{"p":["*%_"],"r":"Mu"},"m":0,"k":"m"},{"k":"m","m":0,"n":"atan","s":{"r":"Mu","p":["*%_"]}},{"m":0,"k":"m","s":{"p":["*%_"],"r":"Mu"},"n":"sec"},{"n":"asec","s":{"r":"Mu","p":["*%_"]},"m":0,"k":"m"},{"m":0,"k":"m","n":"cosec","s":{"r":"Mu","p":["*%_"]}},{"n":"acosec","s":{"p":["*%_"],"r":"Mu"},"m":0,"k":"m"},{"m":0,"k":"m","s":{"r":"Mu","p":["*%_"]},"n":"cotan"},{"m":0,"k":"m","n":"acotan","s":{"p":["*%_"],"r":"Mu"}},{"s":{"r":"Mu","p":["*%_"]},"n":"sinh","m":0,"k":"m"},{"s":{"r":"Mu","p":["*%_"]},"n":"asinh","k":"m","m":0},{"k":"m","m":0,"n":"cosh","s":{"p":["*%_"],"r":"Mu"}},{"n":"acosh","s":{"r":"Mu","p":["*%_"]},"k":"m","m":0},{"m":0,"k":"m","n":"tanh","s":{"r":"Mu","p":["*%_"]}},{"m":0,"k":"m","s":{"p":["*%_"],"r":"Mu"},"n":"atanh"},{"m":0,"k":"m","n":"sech","s":{"p":["*%_"],"r":"Mu"}},{"n":"asech","s":{"r":"Mu","p":["*%_"]},"m":0,"k":"m"},{"s":{"p":["*%_"],"r":"Mu"},"n":"cosech","k":"m","m":0},{"s":{"p":["*%_"],"r":"Mu"},"n":"acosech","m":0,"k":"m"},{"n":"cotanh","s":{"r":"Mu","p":["*%_"]},"m":0,"k":"m"},{"k":"m","m":0,"s":{"r":"Mu","p":["*%_"]},"n":"acotanh"},{"s":{"p":["*%_"],"r":"Mu"},"n":"floor","m":0,"k":"m"},{"m":0,"k":"m","s":{"r":"Mu","p":["*%_"]},"n":"ceiling"},{"s":{"r":"Mu","p":["Real $angle","*%_"]},"n":"unpolar","m":0,"k":"m"},{"s":{"r":"Mu","p":["*%_"]},"n":"cis","k":"m","m":0},{"n":"Complex","s":{"r":"Mu","p":["*%_"]},"k":"m","m":0},{"m":0,"k":"m","n":"truncate","s":{"r":"Mu","p":["*%_"]}},{"n":"isNaN","s":{"r":"Mu","p":["*%_"]},"m":0,"k":"m"},{"s":{"p":["+@mods","*%_"],"r":"Mu"},"n":"polymod","m":0,"k":"m"},{"k":"m","m":0,"n":"base","s":{"r":"Mu","p":["Int:D $base","$digits? is copy","*%_"]}},{"k":"m","m":0,"n":"Bridge","s":{"r":"Mu","p":["*%_"]}},{"k":"m","m":0,"n":"Int","s":{"p":["*%_"],"r":"Mu"}},{"n":"Num","s":{"p":["*%_"],"r":"Mu"},"m":0,"k":"m"}],"k":"ro","b":"C","t":"Real","n":"Real"},{"n":"&infix:<min>","t":"Sub+{is-pure}+{Precedence}","k":"v"},{"n":"infix:<min>","s":{"r":"Mu","p":["Mu:D \\a","Mu:U $"]},"m":1,"k":"s"},{"n":"infix:<min>","s":{"r":"Mu","p":["Mu:U $","Mu:D \\b"]},"k":"s","m":1},{"k":"s","m":1,"n":"infix:<min>","s":{"p":["Mu:D \\a","Mu:D \\b"],"r":"Mu"}},{"n":"infix:<min>","s":{"r":"Mu","p":["Int:D \\a","Int:D \\b"]},"k":"s","m":1},{"n":"infix:<min>","s":{"p":["int \\a","int \\b"],"r":"Mu"},"k":"s","m":1},{"k":"s","m":1,"n":"infix:<min>","s":{"p":["Num:D \\a","Num:D \\b"],"r":"Mu"}},{"m":1,"k":"s","s":{"r":"Mu","p":["num \\a","num \\b"]},"n":"infix:<min>"},{"s":{"p":["+\\args is raw"],"r":"Mu"},"n":"infix:<min>","m":1,"k":"s"},{"b":"A","k":"c","m":[{"m":1,"k":"m","n":"STORE","s":{"r":"Mu","p":["*@values","*%_"]}},{"k":"m","m":0,"n":"BIND-POS","s":{"p":["|"],"r":"Mu"}},{"m":0,"k":"m","n":"DELETE-POS","s":{"p":["|"],"r":"Mu"}},{"n":"ASSIGN-POS","s":{"r":"Mu","p":["\\pos","Mu \\assignee","*%_"]},"k":"m","m":1},{"m":1,"k":"m","n":"ASSIGN-POS","s":{"p":["Any:U \\pos","Mu \\assignee","*%_"],"r":"Mu"}},{"k":"m","m":0,"n":"shape","s":{"p":["*%_"],"r":"Mu"}},{"k":"m","m":1,"n":"Real","s":{"p":["*%_"],"r":"Mu"}},{"m":1,"k":"m","n":"Int","s":{"p":["*%_"],"r":"Mu"}},{"k":"m","m":0,"n":"eager","s":{"r":"Mu","p":["*%_"]}},{"s":{"p":["*%_"],"r":"Mu"},"n":"flat","m":0,"k":"m"},{"k":"m","m":0,"s":{"r":"Mu","p":["*%_"]},"n":"list"},{"n":"sink","s":{"r":"Nil","p":["*%_"]},"m":0,"k":"m"},{"m":0,"k":"m","n":"FLATTENABLE_LIST","s":{"r":"Mu","p":["*%_"]}},{"k":"m","m":0,"n":"FLATTENABLE_HASH","s":{"r":"Mu","p":["*%_"]}},{"n":"iterator","s":{"p":["*%_"],"r":"Mu"},"k":"m","m":0},{"m":0,"k":"m","s":{"p":["int $index","*%_"],"r":"Mu"},"n":"out_of_range"},{"m":0,"k":"m","s":{"r":"Mu","p":["*%_"]},"n":"item"},{"n":"lazy-if","s":{"p":["$flag","*%_"],"r":"Mu"},"m":0,"k":"m"},{"k":"m","m":0,"s":{"p":["*%_"],"r":"Mu"},"n":"lazy"},{"s":{"r":"Mu","p":["Int(Cool) :$batch = 64","Int(Cool) :$degree = 4","*%_"]},"n":"hyper","k":"m","m":0},{"n":"race","s":{"p":["Int(Cool) :$batch = 64","Int(Cool) :$degree = 4","*%_"],"r":"Mu"},"m":0,"k":"m"},{"s":{"p":["*%attrinit"],"r":"Mu"},"n":"new","k":"m","m":1},{"n":"new","s":{"r":"Mu","p":["$","*@","*%_"]},"k":"m","m":1},{"m":1,"k":"m","n":"new","s":{"r":"Mu","p":["*%_"]}},{"s":{"p":["@v","*%_"],"r":"Mu"},"n":"new","k":"m","m":1},{"s":{"p":["**@v","*%_"],"r":"Mu"},"n":"new","k":"m","m":1},{"k":"m","m":1,"n":"new","s":{"p":[":$shape!","*%_"],"r":"Mu"}},{"m":1,"k":"m","s":{"p":["@v",":$shape!","*%_"],"r":"Mu"},"n":"new"},{"n":"new","s":{"p":["**@v",":$shape!","*%_"],"r":"Mu"},"m":1,"k":"m"},{"s":{"r":"Mu","p":["|values is raw"]},"n":"push","m":1,"k":"m"},{"s":{"p":["**@values","*%_"],"r":"Mu"},"n":"push","m":1,"k":"m"},{"s":{"p":["|values is raw"],"r":"Mu"},"n":"append","k":"m","m":1},{"n":"append","s":{"p":["*@values","*%_"],"r":"Mu"},"k":"m","m":1},{"k":"m","m":1,"n":"unshift","s":{"p":["|values is raw"],"r":"Mu"}},{"n":"unshift","s":{"r":"Mu","p":["**@values","*%_"]},"m":1,"k":"m"},{"k":"m","m":1,"s":{"p":["|values is raw"],"r":"Mu"},"n":"prepend"},{"m":1,"k":"m","s":{"p":["*@values","*%_"],"r":"Mu"},"n":"prepend"},{"n":"EXISTS-POS","s":{"p":["Any:D $","*%_"],"r":"Bool"},"k":"m","m":1},{"s":{"r":"Mu","p":["Any:U $pos","*%_"]},"n":"EXISTS-POS","m":1,"k":"m"},{"n":"EXISTS-POS","s":{"r":"Bool:D","p":["int \\pos","*%_"]},"k":"m","m":1},{"n":"EXISTS-POS","s":{"p":["Int:D \\pos","*%_"],"r":"Bool:D"},"m":1,"k":"m"},{"k":"m","m":1,"s":{"p":["Num:D \\pos","*%_"],"r":"Bool:D"},"n":"EXISTS-POS"},{"m":1,"k":"m","n":"EXISTS-POS","s":{"r":"Bool:D","p":["Any:D \\pos","*%_"]}},{"m":1,"k":"m","n":"EXISTS-POS","s":{"p":["Any:U \\pos","*%_"],"r":"Mu"}},{"k":"m","m":1,"n":"EXISTS-POS","s":{"r":"Bool:D","p":["\\one","\\two","*%_"]}},{"k":"m","m":1,"n":"EXISTS-POS","s":{"p":["\\one","\\two","\\three","*%_"],"r":"Bool:D"}},{"n":"EXISTS-POS","s":{"r":"Bool:D","p":["**@indices","*%_"]},"k":"m","m":1},{"k":"m","m":1,"n":"EXISTS-POS","s":{"r":"Mu","p":["int $idx","*%_"]}},{"s":{"p":["Int:D $idx","*%_"],"r":"Mu"},"n":"EXISTS-POS","m":1,"k":"m"},{"n":"Bool","s":{"p":["*%_"],"r":"Bool"},"k":"m","m":1},{"s":{"p":["*%_"],"r":"Mu"},"n":"Bool","k":"m","m":1},{"s":{"r":"Mu","p":["*%_"]},"n":"Bool","m":1,"k":"m"},{"k":"m","m":1,"s":{"p":["*%_"],"r":"Mu"},"n":"Numeric"},{"k":"m","m":1,"s":{"p":["*%_"],"r":"Mu"},"n":"Numeric"},{"n":"Str","s":{"r":"Mu","p":["*%_"]},"k":"m","m":1},{"m":1,"k":"m","n":"Str","s":{"r":"Mu","p":["*%_"]}},{"s":{"r":"Mu","p":["*%_"]},"n":"Str","k":"m","m":1},{"m":1,"k":"m","n":"elems","s":{"r":"Int","p":["*%_"]}},{"s":{"r":"Mu","p":["*%_"]},"n":"elems","k":"m","m":1},{"m":1,"k":"m","n":"elems","s":{"r":"Mu","p":["*%_"]}},{"n":"end","s":{"r":"Int","p":["*%_"]},"k":"m","m":1},{"n":"end","s":{"p":["*%_"],"r":"Mu"},"m":1,"k":"m"},{"m":1,"k":"m","n":"end","s":{"p":["*%_"],"r":"Mu"}},{"n":"gist","s":{"p":["*%_"],"r":"Mu"},"k":"m","m":1},{"m":1,"k":"m","n":"gist","s":{"r":"Mu","p":["*%_"]}},{"s":{"r":"Mu","p":["*%_"]},"n":"gist","m":1,"k":"m"},{"n":"perl","s":{"r":"Mu","p":["*%_"]},"k":"m","m":1},{"k":"m","m":1,"n":"perl","s":{"r":"Mu","p":["*%_"]}},{"k":"m","m":1,"s":{"p":["*%_"],"r":"Mu"},"n":"perl"},{"k":"m","m":1,"s":{"p":["*%_"],"r":"Mix:D"},"n":"Mix"},{"m":1,"k":"m","s":{"r":"Mu","p":["*%_"]},"n":"Mix"},{"m":1,"k":"m","s":{"p":["*%_"],"r":"MixHash:D"},"n":"MixHash"},{"k":"m","m":1,"n":"MixHash","s":{"r":"Mu","p":["*%_"]}},{"k":"m","m":1,"n":"Bag","s":{"r":"Bag:D","p":["*%_"]}},{"s":{"r":"Mu","p":["*%_"]},"n":"Bag","k":"m","m":1},{"m":1,"k":"m","s":{"p":["*%_"],"r":"BagHash:D"},"n":"BagHash"},{"s":{"r":"Mu","p":["*%_"]},"n":"BagHash","m":1,"k":"m"},{"n":"Set","s":{"p":["*%_"],"r":"Set:D"},"m":1,"k":"m"},{"n":"Set","s":{"r":"Mu","p":["*%_"]},"k":"m","m":1},{"s":{"r":"SetHash:D","p":["*%_"]},"n":"SetHash","m":1,"k":"m"},{"k":"m","m":1,"n":"SetHash","s":{"p":["*%_"],"r":"Mu"}},{"s":{"p":["@auto","%init","*%_"],"r":"Mu"},"n":"BUILDALL","m":0,"k":"s"},{"k":"m","m":0,"n":"!create","s":{"r":"Mu","p":["*%_"]}},{"k":"m","m":0,"s":{"p":["\\shape","*%_"],"r":"Mu"},"n":"!shaped"},{"m":0,"k":"m","n":"!create-ws","s":{"p":["$shape","*%_"],"r":"Mu"}}],"t":"array","n":"array"},{"t":"array::shaped1intarray","n":"array::shaped1intarray","b":"C","k":"ro","m":[{"n":"iterator","s":{"p":["*%_"],"r":"array::shaped1intarray::Iterate-int:D"},"m":0,"k":"m"},{"k":"m","m":0,"s":{"r":"::?CLASS","p":["*%_"]},"n":"reverse"},{"s":{"p":["Int(Cool) $rotate = 1","*%_"],"r":"::?CLASS"},"n":"rotate","k":"m","m":0}]},{"b":"C","k":"ro","t":"array::shaped2numarray","n":"array::shaped2numarray"},{"b":"C","k":"ro","t":"array::shaped3numarray","n":"array::shaped3numarray"},{"k":"ro","m":[{"s":{"p":["*%_"],"r":"array::shapednumarray::Iterate-num:D"},"n":"iterator","m":0,"k":"m"}],"b":"C","n":"array::shapednumarray","t":"array::shapednumarray"},{"m":[{"k":"m","m":0,"n":"iterator","s":{"p":["*%_"],"r":"array::shaped1strarray::Iterate-str:D"}},{"k":"m","m":0,"n":"reverse","s":{"p":["*%_"],"r":"::?CLASS"}},{"s":{"r":"::?CLASS","p":["Int(Cool) $rotate = 1","*%_"]},"n":"rotate","m":0,"k":"m"}],"k":"ro","b":"C","n":"array::shaped1strarray","t":"array::shaped1strarray"},{"a":[{"n":"$!reified","t":"Mu","k":"v"},{"k":"v","n":"$!todo","t":"Mu"}],"b":"C","k":"c","m":[{"k":"m","m":0,"s":{"p":["Iterator $iter","*%_"],"r":"List:D"},"n":"from-iterator"},{"n":"from-slurpy","s":{"r":"Mu","p":["|"]},"m":0,"k":"m"},{"n":"from-slurpy-onearg","s":{"p":["|"],"r":"Mu"},"m":0,"k":"m"},{"s":{"p":["|"],"r":"Mu"},"n":"from-slurpy-flat","k":"m","m":0},{"n":"new","s":{"p":["**@things is raw","*%_"],"r":"List:D"},"k":"m","m":0},{"s":{"p":["*%_"],"r":"Mu"},"n":"to","k":"m","m":0},{"s":{"p":["*%_"],"r":"Mu"},"n":"from","k":"m","m":0},{"k":"m","m":0,"s":{"p":["*%_"],"r":"Mu"},"n":"sum"},{"k":"m","m":1,"s":{"p":["*%_"],"r":"Str:D"},"n":"fmt"},{"s":{"r":"Str:D","p":["Str(Cool) $format","*%_"]},"n":"fmt","k":"m","m":1},{"n":"fmt","s":{"r":"Str:D","p":["Str(Cool) $format","$separator","*%_"]},"m":1,"k":"m"},{"m":0,"k":"m","s":{"p":["Int:D \\pos","\\what","*%_"],"r":"Mu"},"n":"ASSIGN-POS"},{"n":"BIND-POS","s":{"p":["Int:D \\pos","\\what","*%_"],"r":"Mu"},"k":"m","m":0},{"k":"m","m":0,"n":"reification-target","s":{"p":["*%_"],"r":"Mu"}},{"s":{"p":["*%_"],"r":"Iterator:D"},"n":"iterator","m":0,"k":"m"},{"s":{"p":["*%_"],"r":"Nil"},"n":"sink","m":0,"k":"m"},{"k":"m","m":1,"n":"STORE","s":{"p":["Iterable:D \\iterable",":$INITIALIZE!","*%_"],"r":"List:D"}},{"k":"m","m":1,"n":"STORE","s":{"p":["Iterable:D \\iterable","*%_"],"r":"List:D"}},{"s":{"p":["Mu \\item","*%_"],"r":"List:D"},"n":"STORE","k":"m","m":1},{"m":0,"k":"m","n":"eager","s":{"r":"List:D","p":["*%_"]}},{"m":0,"k":"m","n":"Capture","s":{"p":["*%_"],"r":"Capture:D"}},{"m":0,"k":"m","n":"FLATTENABLE_LIST","s":{"p":["*%_"],"r":"Mu"}},{"m":0,"k":"m","n":"FLATTENABLE_HASH","s":{"p":["*%_"],"r":"Mu"}},{"m":0,"k":"m","n":"CALL-ME","s":{"r":"Mu","p":["|c is raw"]}},{"s":{"r":"Mu","p":["*%_"]},"n":"pick","m":1,"k":"m"},{"n":"pick","s":{"p":["Callable:D $calculate","*%_"],"r":"Mu"},"m":1,"k":"m"},{"m":1,"k":"m","s":{"p":["$number is copy","*%_"],"r":"Mu"},"n":"pick"},{"n":"roll","s":{"r":"Mu","p":["*%_"]},"m":1,"k":"m"},{"k":"m","m":1,"s":{"p":["Whatever $","*%_"],"r":"Mu"},"n":"roll"},{"m":1,"k":"m","n":"roll","s":{"r":"Mu","p":["\\number","*%_"]}},{"n":"reverse","s":{"r":"Seq:D","p":["*%_"]},"m":0,"k":"m"},{"k":"m","m":0,"s":{"r":"Mu","p":["Int(Cool) $rotate = 1","*%_"]},"n":"rotate"},{"s":{"p":["*%_"],"r":"Seq:D"},"n":"combinations","k":"m","m":1},{"k":"m","m":1,"s":{"r":"Seq:D","p":["$of","*%_"]},"n":"combinations"},{"k":"m","m":1,"s":{"r":"Seq:D","p":["Range:D $ofrange","*%_"]},"n":"combinations"},{"k":"m","m":1,"n":"permutations","s":{"r":"Seq:D","p":["*%_"]}},{"k":"m","m":0,"n":"join","s":{"r":"Mu","p":["Str(Cool) $separator = \"\"","*%_"]}},{"s":{"r":"Mu","p":["|"]},"n":"push","m":0,"k":"m"},{"s":{"r":"Mu","p":["|"]},"n":"append","m":0,"k":"m"},{"n":"unshift","s":{"r":"Mu","p":["|"]},"k":"m","m":0},{"k":"m","m":0,"s":{"r":"Mu","p":["|"]},"n":"prepend"},{"s":{"p":["|"],"r":"Mu"},"n":"shift","m":0,"k":"m"},{"n":"pop","s":{"r":"Mu","p":["|"]},"k":"m","m":0},{"k":"m","m":0,"s":{"p":["*%_"],"r":"Mu"},"n":"of"},{"s":{"r":"Mu","p":["*%_"]},"n":"item","m":0,"k":"m"},{"m":0,"k":"m","s":{"p":["*%_"],"r":"Mu"},"n":"flat"},{"k":"m","m":0,"s":{"p":["$flag","*%_"],"r":"Mu"},"n":"lazy-if"},{"s":{"r":"Mu","p":["*%_"]},"n":"lazy","k":"m","m":0},{"k":"m","m":0,"n":"hyper","s":{"p":["Int(Cool) :$batch = 64","Int(Cool) :$degree = 4","*%_"],"r":"Mu"}},{"m":0,"k":"m","s":{"r":"Mu","p":["Int(Cool) :$batch = 64","Int(Cool) :$degree = 4","*%_"]},"n":"race"},{"n":"Bool","s":{"p":["*%_"],"r":"Bool"},"k":"m","m":1},{"n":"Bool","s":{"r":"Mu","p":["*%_"]},"k":"m","m":1},{"k":"m","m":1,"n":"Bool","s":{"r":"Bool:D","p":["*%_"]}},{"s":{"p":["*%_"],"r":"Mu"},"n":"Int","k":"m","m":1},{"n":"Int","s":{"p":["*%_"],"r":"Int:D"},"k":"m","m":1},{"m":1,"k":"m","n":"end","s":{"p":["*%_"],"r":"Int"}},{"m":1,"k":"m","s":{"r":"Mu","p":["*%_"]},"n":"end"},{"s":{"r":"Int:D","p":["*%_"]},"n":"end","k":"m","m":1},{"s":{"r":"Mu","p":["*%_"]},"n":"Numeric","m":1,"k":"m"},{"s":{"r":"Int:D","p":["*%_"]},"n":"Numeric","m":1,"k":"m"},{"n":"Str","s":{"r":"Mu","p":["*%_"]},"m":1,"k":"m"},{"m":1,"k":"m","s":{"p":["*%_"],"r":"Mu"},"n":"Str"},{"m":1,"k":"m","n":"Str","s":{"p":["*%_"],"r":"Str:D"}},{"n":"elems","s":{"p":["*%_"],"r":"Int"},"k":"m","m":1},{"m":1,"k":"m","n":"elems","s":{"r":"Mu","p":["*%_"]}},{"n":"elems","s":{"p":["*%_"],"r":"Int:D"},"k":"m","m":1},{"k":"m","m":1,"n":"AT-POS","s":{"r":"Mu","p":["int \\pos","*%_"]}},{"n":"AT-POS","s":{"r":"Mu","p":["Int:D \\pos","*%_"]},"k":"m","m":1},{"n":"AT-POS","s":{"r":"Mu","p":["Num:D \\pos","*%_"]},"m":1,"k":"m"},{"m":1,"k":"m","s":{"p":["Any:D \\pos","*%_"],"r":"Mu"},"n":"AT-POS"},{"n":"AT-POS","s":{"r":"Mu","p":["int \\pos","*%_"]},"k":"m","m":1},{"s":{"r":"Mu","p":["Int:D \\pos","*%_"]},"n":"AT-POS","k":"m","m":1},{"m":1,"k":"m","s":{"r":"Mu","p":["Num:D \\pos","*%_"]},"n":"AT-POS"},{"s":{"p":["Any:D \\pos","*%_"],"r":"Mu"},"n":"AT-POS","k":"m","m":1},{"k":"m","m":1,"n":"AT-POS","s":{"p":["Any:U \\pos","*%_"],"r":"Mu"}},{"k":"m","m":1,"n":"AT-POS","s":{"r":"Mu","p":["\\one","\\two","*%_"]}},{"s":{"r":"Mu","p":["\\one","\\two","\\three","*%_"]},"n":"AT-POS","m":1,"k":"m"},{"s":{"p":["**@indices","*%_"],"r":"Mu"},"n":"AT-POS","m":1,"k":"m"},{"n":"AT-POS","s":{"p":["int $pos","*%_"],"r":"Mu"},"k":"m","m":1},{"m":1,"k":"m","n":"AT-POS","s":{"p":["Int:D $pos","*%_"],"r":"Mu"}},{"k":"m","m":1,"n":"EXISTS-POS","s":{"p":["Any:D $","*%_"],"r":"Bool"}},{"k":"m","m":1,"s":{"p":["Any:U $pos","*%_"],"r":"Mu"},"n":"EXISTS-POS"},{"k":"m","m":1,"s":{"r":"Bool:D","p":["int \\pos","*%_"]},"n":"EXISTS-POS"},{"k":"m","m":1,"n":"EXISTS-POS","s":{"p":["Int:D \\pos","*%_"],"r":"Bool:D"}},{"k":"m","m":1,"n":"EXISTS-POS","s":{"r":"Bool:D","p":["Num:D \\pos","*%_"]}},{"n":"EXISTS-POS","s":{"p":["Any:D \\pos","*%_"],"r":"Bool:D"},"m":1,"k":"m"},{"m":1,"k":"m","n":"EXISTS-POS","s":{"p":["Any:U \\pos","*%_"],"r":"Mu"}},{"n":"EXISTS-POS","s":{"p":["\\one","\\two","*%_"],"r":"Bool:D"},"k":"m","m":1},{"n":"EXISTS-POS","s":{"r":"Bool:D","p":["\\one","\\two","\\three","*%_"]},"k":"m","m":1},{"s":{"r":"Bool:D","p":["**@indices","*%_"]},"n":"EXISTS-POS","k":"m","m":1},{"k":"m","m":1,"s":{"r":"Mu","p":["int $pos","*%_"]},"n":"EXISTS-POS"},{"m":1,"k":"m","s":{"r":"Bool:D","p":["Int:D $pos","*%_"]},"n":"EXISTS-POS"},{"k":"m","m":1,"n":"ACCEPTS","s":{"r":"Mu","p":["\\topic","*%_"]}},{"k":"m","m":1,"n":"ACCEPTS","s":{"p":["Mu:U \\topic","*%_"],"r":"Mu"}},{"k":"m","m":1,"n":"ACCEPTS","s":{"p":["Mu:D \\a","*%_"],"r":"Mu"}},{"n":"ACCEPTS","s":{"r":"Bool","p":["Mu:U $","*%_"]},"m":1,"k":"m"},{"n":"ACCEPTS","s":{"r":"Bool:D","p":["\\topic","*%_"]},"m":1,"k":"m"},{"n":"ACCEPTS","s":{"p":["Iterable:U $","*%_"],"r":"Bool"},"k":"m","m":1},{"n":"ACCEPTS","s":{"r":"Bool:D","p":["Iterable:D $topic","*%_"]},"k":"m","m":1},{"s":{"p":["$topic","*%_"],"r":"Mu"},"n":"ACCEPTS","m":1,"k":"m"},{"m":1,"k":"m","s":{"r":"Mu","p":["*%_"]},"n":"list"},{"n":"list","s":{"p":["*%_"],"r":"Mu"},"k":"m","m":1},{"s":{"r":"Mu","p":["*%_"]},"n":"list","k":"m","m":1},{"n":"values","s":{"p":["*%_"],"r":"Mu"},"m":1,"k":"m"},{"n":"values","s":{"r":"Mu","p":["*%_"]},"m":1,"k":"m"},{"n":"values","s":{"r":"Seq:D","p":["*%_"]},"m":1,"k":"m"},{"s":{"r":"Mu","p":["*%_"]},"n":"keys","m":1,"k":"m"},{"s":{"r":"Mu","p":["*%_"]},"n":"keys","k":"m","m":1},{"m":1,"k":"m","n":"keys","s":{"r":"Seq:D","p":["*%_"]}},{"s":{"r":"Mu","p":["*%_"]},"n":"kv","m":1,"k":"m"},{"k":"m","m":1,"n":"kv","s":{"p":["*%_"],"r":"Mu"}},{"m":1,"k":"m","n":"kv","s":{"r":"Seq:D","p":["*%_"]}},{"k":"m","m":1,"s":{"p":["*%_"],"r":"Mu"},"n":"pairs"},{"k":"m","m":1,"s":{"p":["*%_"],"r":"Mu"},"n":"pairs"},{"n":"pairs","s":{"r":"Seq:D","p":["*%_"]},"m":1,"k":"m"},{"n":"antipairs","s":{"r":"Mu","p":["*%_"]},"k":"m","m":1},{"s":{"r":"Mu","p":["*%_"]},"n":"antipairs","m":1,"k":"m"},{"k":"m","m":1,"n":"antipairs","s":{"p":["*%_"],"r":"Seq:D"}},{"m":1,"k":"m","n":"invert","s":{"r":"Mu","p":["*%_"]}},{"k":"m","m":1,"n":"invert","s":{"p":["*%_"],"r":"Mu"}},{"k":"m","m":1,"n":"invert","s":{"p":["*%_"],"r":"Seq:D"}},{"m":1,"k":"m","n":"gist","s":{"p":["*%_"],"r":"Mu"}},{"k":"m","m":1,"n":"gist","s":{"p":["*%_"],"r":"Mu"}},{"k":"m","m":1,"n":"gist","s":{"r":"Str:D","p":["*%_"]}},{"s":{"r":"Mu","p":["*%_"]},"n":"perl","k":"m","m":1},{"n":"perl","s":{"r":"Mu","p":["*%_"]},"k":"m","m":1},{"n":"perl","s":{"r":"Str:D","p":["*%_"]},"k":"m","m":1},{"k":"m","m":1,"s":{"p":["*%_"],"r":"Mu"},"n":"List"},{"s":{"r":"List:D","p":["*%_"]},"n":"List","m":1,"k":"m"},{"n":"Slip","s":{"p":["*%_"],"r":"Mu"},"m":1,"k":"m"},{"n":"Slip","s":{"r":"Slip:D","p":["*%_"]},"k":"m","m":1},{"s":{"p":["*%_"],"r":"Mu"},"n":"Array","m":1,"k":"m"},{"s":{"r":"Array:D","p":["*%_"]},"n":"Array","m":1,"k":"m"},{"k":"m","m":1,"s":{"r":"Mu","p":["*%_"]},"n":"Supply"},{"k":"m","m":1,"s":{"r":"Supply:D","p":["*%_"]},"n":"Supply"},{"n":"is-lazy","s":{"r":"Bool","p":["*%_"]},"m":1,"k":"m"},{"s":{"p":["*%_"],"r":"Bool:D"},"n":"is-lazy","m":1,"k":"m"},{"k":"m","m":1,"n":"sort","s":{"p":["*%_"],"r":"Mu"}},{"s":{"r":"Mu","p":["&by","*%_"]},"n":"sort","m":1,"k":"m"},{"k":"m","m":1,"s":{"p":["*%_"],"r":"Seq:D"},"n":"sort"},{"s":{"r":"Seq:D","p":["&by","*%_"]},"n":"sort","m":1,"k":"m"},{"s":{"p":["*%_"],"r":"Mu"},"n":"tail","k":"m","m":1},{"n":"tail","s":{"p":["$n","*%_"],"r":"Mu"},"k":"m","m":1},{"k":"m","m":1,"n":"tail","s":{"r":"Mu","p":["*%_"]}},{"k":"m","m":1,"n":"tail","s":{"p":["$n","*%_"],"r":"Seq:D"}},{"k":"m","m":1,"s":{"r":"Mu","p":["*%_"]},"n":"chrs"},{"s":{"r":"Str:D","p":["*%_"]},"n":"chrs","m":1,"k":"m"},{"k":"m","m":1,"n":"Mix","s":{"r":"Mix:D","p":["*%_"]}},{"m":1,"k":"m","n":"Mix","s":{"r":"Mu","p":["*%_"]}},{"s":{"p":["*%_"],"r":"MixHash:D"},"n":"MixHash","k":"m","m":1},{"m":1,"k":"m","s":{"r":"Mu","p":["*%_"]},"n":"MixHash"},{"s":{"r":"Bag:D","p":["*%_"]},"n":"Bag","m":1,"k":"m"},{"n":"Bag","s":{"p":["*%_"],"r":"Mu"},"k":"m","m":1},{"m":1,"k":"m","n":"BagHash","s":{"r":"BagHash:D","p":["*%_"]}},{"k":"m","m":1,"s":{"p":["*%_"],"r":"Mu"},"n":"BagHash"},{"s":{"p":["*%_"],"r":"Set:D"},"n":"Set","k":"m","m":1},{"m":1,"k":"m","n":"Set","s":{"r":"Mu","p":["*%_"]}},{"m":1,"k":"m","s":{"p":["*%_"],"r":"SetHash:D"},"n":"SetHash"},{"n":"SetHash","s":{"p":["*%_"],"r":"Mu"},"k":"m","m":1},{"m":0,"k":"s","s":{"p":["@auto","%init","*%_"],"r":"Mu"},"n":"BUILDALL"},{"s":{"p":["\\sep","Mu \\strings","\\i","\\elems","Mu \\initial","*%_"],"r":"Mu"},"n":"!JUNCTIONIZE","m":0,"k":"m"},{"s":{"p":["\\pos","*%_"],"r":"Mu"},"n":"!AT_POS_SLOW","k":"m","m":0}],"t":"List","n":"array::typedim2role"},{"b":"C","k":"ro","n":"array::shaped3strarray","t":"array::shaped3strarray"},{"n":"array::shaped2intarray","t":"array::shaped2intarray","k":"ro","b":"C"},{"b":"C","m":[{"k":"m","m":0,"s":{"r":"array::shapedstrarray::Iterate-str:D","p":["*%_"]},"n":"iterator"}],"k":"ro","n":"array::shapedstrarray","t":"array::shapedstrarray"},{"b":"C","k":"ro","m":[{"k":"m","m":0,"n":"iterator","s":{"r":"array::shapedintarray::Iterate-int:D","p":["*%_"]}}],"n":"array::shapedintarray","t":"array::shapedintarray"},{"k":"ro","b":"C","t":"array::shaped3intarray","n":"array::shaped3intarray"},{"k":"ro","b":"C","n":"array::shaped2strarray","t":"array::shaped2strarray"},{"m":[{"n":"iterator","s":{"p":["*%_"],"r":"array::shaped1numarray::Iterate-num:D"},"m":0,"k":"m"},{"s":{"p":["*%_"],"r":"::?CLASS"},"n":"reverse","m":0,"k":"m"},{"s":{"p":["Int(Cool) $rotate = 1","*%_"],"r":"::?CLASS"},"n":"rotate","k":"m","m":0}],"k":"ro","b":"C","t":"array::shaped1numarray","n":"array::shaped1numarray"},{"n":"array::shapedarray","t":"array::shapedarray","k":"ro","m":[{"k":"m","m":0,"n":"shape","s":{"p":["*%_"],"r":"Mu"}}],"b":"C"},{"t":"Sub","n":"&leave","k":"v"},{"k":"s","m":0,"s":{"r":"Mu","p":["|"]},"n":"leave"},{"k":"v","t":"Sub","n":"&undefine"},{"n":"undefine","s":{"r":"Mu","p":["Mu \\x"]},"k":"s","m":1},{"n":"undefine","s":{"r":"Mu","p":["Array \\x"]},"m":1,"k":"s"},{"n":"undefine","s":{"r":"Mu","p":["Hash \\x"]},"m":1,"k":"s"},{"k":"v","t":"Sub+{is-pure}+{Precedence}","n":"&infix:<∪>"},{"k":"s","m":1,"n":"infix:<(|)>","s":{"r":"Mu","p":[]}},{"m":1,"k":"s","n":"infix:<(|)>","s":{"p":["QuantHash:D \\a"],"r":"Mu"}},{"n":"infix:<(|)>","s":{"r":"Mu","p":["\\a"]},"m":1,"k":"s"},{"n":"infix:<(|)>","s":{"p":["Setty:D \\a","Setty:D \\b"],"r":"Mu"},"m":1,"k":"s"},{"n":"infix:<(|)>","s":{"r":"Mu","p":["Setty:D \\a","Mixy:D \\b"]},"m":1,"k":"s"},{"m":1,"k":"s","s":{"p":["Setty:D \\a","Baggy:D \\b"],"r":"Mu"},"n":"infix:<(|)>"},{"n":"infix:<(|)>","s":{"p":["Mixy:D \\a","Mixy:D \\b"],"r":"Mu"},"m":1,"k":"s"},{"k":"s","m":1,"n":"infix:<(|)>","s":{"p":["Mixy:D \\a","Baggy:D \\b"],"r":"Mu"}},{"m":1,"k":"s","n":"infix:<(|)>","s":{"r":"Mu","p":["Mixy:D \\a","Setty:D \\b"]}},{"m":1,"k":"s","s":{"r":"Mu","p":["Baggy:D \\a","Mixy:D \\b"]},"n":"infix:<(|)>"},{"m":1,"k":"s","n":"infix:<(|)>","s":{"p":["Baggy:D \\a","Baggy:D \\b"],"r":"Mu"}},{"m":1,"k":"s","n":"infix:<(|)>","s":{"r":"Mu","p":["Baggy:D \\a","Setty:D \\b"]}},{"k":"s","m":1,"n":"infix:<(|)>","s":{"p":["Map:D \\a","Map:D \\b"],"r":"Mu"}},{"n":"infix:<(|)>","s":{"r":"Mu","p":["Iterable:D \\a","Iterable:D \\b"]},"k":"s","m":1},{"n":"infix:<(|)>","s":{"r":"Mu","p":["Failure:D \\a","$"]},"k":"s","m":1},{"m":1,"k":"s","s":{"r":"Mu","p":["$","Failure:D \\b"]},"n":"infix:<(|)>"},{"n":"infix:<(|)>","s":{"p":["\\a","\\b"],"r":"Mu"},"k":"s","m":1},{"m":1,"k":"s","n":"infix:<(|)>","s":{"p":["**@p"],"r":"Mu"}},{"n":"&uc","t":"Sub","k":"v"},{"m":1,"k":"s","s":{"p":["Cool $s"],"r":"Mu"},"n":"uc"},{"n":"BigEndian","t":"Endian","k":"e"},{"k":"v","t":"Sub","n":"&uniparse"},{"n":"uniparse","s":{"r":"Str:D","p":["Str:D \\names"]},"k":"s","m":1},{"t":"utf32","n":"utf32","k":"c","m":[{"k":"m","m":0,"n":"encoding","s":{"p":["*%_"],"r":"Str"}},{"s":{"p":["Iterable:D \\iterable",":$INITIALIZE","*%_"],"r":"Mu"},"n":"STORE","k":"m","m":1},{"n":"STORE","s":{"p":["Any:D \\non-iterable",":$INITIALIZE","*%_"],"r":"Mu"},"k":"m","m":1},{"s":{"r":"Mu","p":["Int:D $elements","*%_"]},"n":"allocate","k":"m","m":1},{"k":"m","m":1,"n":"allocate","s":{"p":["Int:D $elements","int $value","*%_"],"r":"Mu"}},{"n":"allocate","s":{"p":["Int:D $elements","Int:D \\value","*%_"],"r":"Mu"},"m":1,"k":"m"},{"s":{"p":["Int:D $elements","Mu:D $got","*%_"],"r":"Mu"},"n":"allocate","k":"m","m":1},{"n":"allocate","s":{"r":"Mu","p":["Int:D $elements","int @values","*%_"]},"m":1,"k":"m"},{"m":1,"k":"m","n":"allocate","s":{"r":"Mu","p":["Int:D $elements","Blob:D $blob","*%_"]}},{"n":"allocate","s":{"p":["Int:D $elements","@values","*%_"],"r":"Mu"},"m":1,"k":"m"},{"s":{"p":["int $offset","Endian $?","*%_"],"r":"int"},"n":"read-int8","k":"m","m":0},{"s":{"p":["int $offset","Endian $endian = Endian::NativeEndian","*%_"],"r":"int"},"n":"read-int16","k":"m","m":0},{"m":0,"k":"m","n":"read-int32","s":{"p":["int $offset","Endian $endian = Endian::NativeEndian","*%_"],"r":"int"}},{"n":"read-int64","s":{"p":["int $offset","Endian $endian = Endian::NativeEndian","*%_"],"r":"int"},"k":"m","m":0},{"k":"m","m":0,"n":"read-int128","s":{"p":["int $offset","Endian $endian = Endian::NativeEndian","*%_"],"r":"Int"}},{"m":0,"k":"m","n":"read-uint8","s":{"p":["int $offset","Endian $?","*%_"],"r":"uint"}},{"k":"m","m":0,"s":{"r":"uint","p":["int $offset","Endian $endian = Endian::NativeEndian","*%_"]},"n":"read-uint16"},{"n":"read-uint32","s":{"r":"uint","p":["int $offset","Endian $endian = Endian::NativeEndian","*%_"]},"m":0,"k":"m"},{"m":0,"k":"m","n":"read-uint64","s":{"r":"uint","p":["int $offset","Endian $endian = Endian::NativeEndian","*%_"]}},{"s":{"r":"uint","p":["int $offset","Endian $endian = Endian::NativeEndian","*%_"]},"n":"read-uint128","m":0,"k":"m"},{"k":"m","m":0,"n":"read-num32","s":{"r":"num","p":["int $offset","Endian $endian = Endian::NativeEndian","*%_"]}},{"m":0,"k":"m","n":"read-num64","s":{"p":["int $offset","Endian $endian = Endian::NativeEndian","*%_"],"r":"num"}},{"s":{"r":"Int:D","p":["int $pos","Int:D $bits","*%_"]},"n":"read-bits","m":0,"k":"m"},{"m":0,"k":"m","s":{"r":"UInt:D","p":["int $pos","Int:D $bits","*%_"]},"n":"read-ubits"},{"n":"Capture","s":{"p":["*%_"],"r":"Mu"},"m":0,"k":"m"},{"n":"Numeric","s":{"p":["*%_"],"r":"Mu"},"k":"m","m":0},{"k":"m","m":0,"n":"Int","s":{"p":["*%_"],"r":"Mu"}},{"n":"bytes","s":{"p":["*%_"],"r":"Mu"},"k":"m","m":0},{"s":{"r":"Mu","p":["*%_"]},"n":"chars","k":"m","m":0},{"m":1,"k":"m","n":"decode","s":{"p":["$encoding = { ... }","*%_"],"r":"Mu"}},{"s":{"r":"Mu","p":["$encoding","Str :$replacement!","Bool:D :$strict = Bool::False","*%_"]},"n":"decode","m":1,"k":"m"},{"m":1,"k":"m","s":{"r":"Mu","p":["$encoding","Bool:D :$strict = Bool::False","*%_"]},"n":"decode"},{"s":{"p":["Range:D $fromto","*%_"],"r":"Mu"},"n":"subbuf","k":"m","m":1},{"m":1,"k":"m","s":{"p":["Int:D $From","*%_"],"r":"Mu"},"n":"subbuf"},{"s":{"r":"Mu","p":["&From","*%_"]},"n":"subbuf","k":"m","m":1},{"n":"subbuf","s":{"r":"Mu","p":["Int:D $From","Int:D $Length","*%_"]},"m":1,"k":"m"},{"k":"m","m":1,"s":{"p":["Int:D $From","&End","*%_"],"r":"Mu"},"n":"subbuf"},{"k":"m","m":1,"s":{"r":"Mu","p":["&From","Int:D $Length","*%_"]},"n":"subbuf"},{"s":{"r":"Mu","p":["&From","&End","*%_"]},"n":"subbuf","k":"m","m":1},{"k":"m","m":1,"n":"subbuf","s":{"r":"Mu","p":["\\from","Whatever $","*%_"]}},{"s":{"p":["\\from","Numeric \\length","*%_"],"r":"Mu"},"n":"subbuf","k":"m","m":1},{"k":"m","m":1,"n":"subbuf","s":{"r":"Mu","p":["\\from","Any:U $","*%_"]}},{"k":"m","m":0,"n":"reverse","s":{"p":["*%_"],"r":"Mu"}},{"s":{"r":"Mu","p":["Blob:D \\other","*%_"]},"n":"COMPARE","m":0,"k":"m"},{"m":0,"k":"m","n":"SAME","s":{"r":"Mu","p":["Blob:D \\other","*%_"]}},{"s":{"r":"Mu","p":["$delim = \"\"","*%_"]},"n":"join","k":"m","m":0},{"k":"m","m":1,"n":"unpack","s":{"p":["Str:D $template","*%_"],"r":"Mu"}},{"s":{"r":"Mu","p":["@template","*%_"]},"n":"unpack","k":"m","m":1},{"n":"contents","s":{"r":"Mu","p":["*%_"]},"m":0,"k":"m"},{"m":0,"k":"m","n":"of","s":{"r":"Mu","p":["*%_"]}},{"m":1,"k":"m","n":"Str","s":{"r":"Mu","p":["*%_"]}},{"k":"m","m":1,"n":"Str","s":{"p":["*%_"],"r":"Mu"}},{"s":{"r":"Mu","p":["*%_"]},"n":"Str","m":1,"k":"m"},{"s":{"r":"Mu","p":["*%_"]},"n":"Str","m":1,"k":"m"},{"s":{"r":"Mu","p":["*%_"]},"n":"Stringy","m":1,"k":"m"},{"s":{"r":"Mu","p":["*%_"]},"n":"Stringy","m":1,"k":"m"},{"m":1,"k":"m","s":{"p":["*%_"],"r":"Mu"},"n":"Stringy"},{"n":"Stringy","s":{"p":["*%_"],"r":"Mu"},"m":1,"k":"m"},{"k":"m","m":1,"s":{"p":["*%_"],"r":"ValueObjAt:D"},"n":"WHICH"},{"s":{"r":"ObjAt:D","p":["*%_"]},"n":"WHICH","m":1,"k":"m"},{"n":"WHICH","s":{"r":"ValueObjAt:D","p":["*%_"]},"k":"m","m":1},{"m":1,"k":"m","n":"new","s":{"p":["*%attrinit"],"r":"Mu"}},{"k":"m","m":1,"s":{"p":["$","*@","*%_"],"r":"Mu"},"n":"new"},{"k":"m","m":1,"s":{"r":"Mu","p":["*%_"]},"n":"new"},{"m":1,"k":"m","s":{"r":"Mu","p":["Blob:D $blob","*%_"]},"n":"new"},{"k":"m","m":1,"s":{"r":"Mu","p":["int @values","*%_"]},"n":"new"},{"m":1,"k":"m","s":{"r":"Mu","p":["@values","*%_"]},"n":"new"},{"k":"m","m":1,"n":"new","s":{"p":["*@values","*%_"],"r":"Mu"}},{"n":"EXISTS-POS","s":{"p":["Any:D $","*%_"],"r":"Bool"},"m":1,"k":"m"},{"n":"EXISTS-POS","s":{"p":["Any:U $pos","*%_"],"r":"Mu"},"k":"m","m":1},{"s":{"r":"Bool:D","p":["int \\pos","*%_"]},"n":"EXISTS-POS","m":1,"k":"m"},{"m":1,"k":"m","n":"EXISTS-POS","s":{"r":"Bool:D","p":["Int:D \\pos","*%_"]}},{"s":{"p":["Num:D \\pos","*%_"],"r":"Bool:D"},"n":"EXISTS-POS","m":1,"k":"m"},{"k":"m","m":1,"n":"EXISTS-POS","s":{"p":["Any:D \\pos","*%_"],"r":"Bool:D"}},{"m":1,"k":"m","s":{"p":["Any:U \\pos","*%_"],"r":"Mu"},"n":"EXISTS-POS"},{"s":{"p":["\\one","\\two","*%_"],"r":"Bool:D"},"n":"EXISTS-POS","m":1,"k":"m"},{"s":{"p":["\\one","\\two","\\three","*%_"],"r":"Bool:D"},"n":"EXISTS-POS","m":1,"k":"m"},{"m":1,"k":"m","n":"EXISTS-POS","s":{"p":["**@indices","*%_"],"r":"Bool:D"}},{"n":"EXISTS-POS","s":{"p":["int \\pos","*%_"],"r":"Mu"},"m":1,"k":"m"},{"s":{"r":"Mu","p":["Int:D \\pos","*%_"]},"n":"EXISTS-POS","k":"m","m":1},{"k":"m","m":1,"s":{"p":["int \\pos","*%_"],"r":"Mu"},"n":"AT-POS"},{"m":1,"k":"m","n":"AT-POS","s":{"r":"Mu","p":["Int:D \\pos","*%_"]}},{"s":{"p":["Num:D \\pos","*%_"],"r":"Mu"},"n":"AT-POS","k":"m","m":1},{"m":1,"k":"m","s":{"r":"Mu","p":["Any:D \\pos","*%_"]},"n":"AT-POS"},{"n":"AT-POS","s":{"r":"Mu","p":["int \\pos","*%_"]},"k":"m","m":1},{"k":"m","m":1,"s":{"p":["Int:D \\pos","*%_"],"r":"Mu"},"n":"AT-POS"},{"k":"m","m":1,"n":"AT-POS","s":{"p":["Num:D \\pos","*%_"],"r":"Mu"}},{"m":1,"k":"m","n":"AT-POS","s":{"r":"Mu","p":["Any:D \\pos","*%_"]}},{"s":{"p":["Any:U \\pos","*%_"],"r":"Mu"},"n":"AT-POS","m":1,"k":"m"},{"m":1,"k":"m","n":"AT-POS","s":{"p":["\\one","\\two","*%_"],"r":"Mu"}},{"n":"AT-POS","s":{"p":["\\one","\\two","\\three","*%_"],"r":"Mu"},"k":"m","m":1},{"s":{"r":"Mu","p":["**@indices","*%_"]},"n":"AT-POS","m":1,"k":"m"},{"s":{"r":"Mu","p":["int \\pos","*%_"]},"n":"AT-POS","m":1,"k":"m"},{"n":"AT-POS","s":{"p":["Int:D \\pos","*%_"],"r":"Mu"},"m":1,"k":"m"},{"k":"m","m":1,"n":"Bool","s":{"p":["*%_"],"r":"Bool"}},{"k":"m","m":1,"s":{"p":["*%_"],"r":"Mu"},"n":"Bool"},{"s":{"r":"Mu","p":["*%_"]},"n":"Bool","k":"m","m":1},{"m":1,"k":"m","n":"elems","s":{"r":"Int","p":["*%_"]}},{"k":"m","m":1,"n":"elems","s":{"r":"Mu","p":["*%_"]}},{"n":"elems","s":{"p":["*%_"],"r":"Mu"},"k":"m","m":1},{"n":"elems","s":{"p":["*%_"],"r":"Int"},"k":"m","m":1},{"n":"list","s":{"p":["*%_"],"r":"Mu"},"m":1,"k":"m"},{"n":"list","s":{"r":"Mu","p":["*%_"]},"m":1,"k":"m"},{"n":"list","s":{"r":"Mu","p":["*%_"]},"m":1,"k":"m"},{"n":"gist","s":{"r":"Mu","p":["*%_"]},"k":"m","m":1},{"n":"gist","s":{"r":"Mu","p":["*%_"]},"m":1,"k":"m"},{"s":{"r":"Mu","p":["*%_"]},"n":"gist","k":"m","m":1},{"k":"m","m":1,"n":"perl","s":{"r":"Mu","p":["*%_"]}},{"m":1,"k":"m","n":"perl","s":{"r":"Mu","p":["*%_"]}},{"n":"perl","s":{"r":"Mu","p":["*%_"]},"m":1,"k":"m"},{"s":{"p":["\\topic","*%_"],"r":"Mu"},"n":"ACCEPTS","m":1,"k":"m"},{"n":"ACCEPTS","s":{"r":"Mu","p":["Mu:U \\topic","*%_"]},"k":"m","m":1},{"k":"m","m":1,"n":"ACCEPTS","s":{"p":["Mu:D \\a","*%_"],"r":"Mu"}},{"s":{"r":"Bool","p":["Mu:U $","*%_"]},"n":"ACCEPTS","m":1,"k":"m"},{"s":{"r":"Bool:D","p":["\\topic","*%_"]},"n":"ACCEPTS","m":1,"k":"m"},{"m":1,"k":"m","n":"ACCEPTS","s":{"r":"Mu","p":["Blob:D \\Other","*%_"]}},{"k":"s","m":0,"s":{"r":"Mu","p":["@auto","%init","*%_"]},"n":"BUILDALL"},{"k":"m","m":0,"s":{"r":"Mu","p":["\\action","\\i","\\got","*%_"]},"n":"!fail-typecheck-element"},{"n":"!fail-range","s":{"r":"Mu","p":["$got","*%_"]},"k":"m","m":0},{"n":"!unshift-list","s":{"r":"Mu","p":["\\action","\\to","\\from","*%_"]},"m":0,"k":"m"},{"n":"!spread","s":{"p":["\\to","\\from","*%_"],"r":"Mu"},"m":0,"k":"m"},{"n":"!push-list","s":{"p":["\\action","\\to","\\from","*%_"],"r":"Mu"},"m":0,"k":"m"},{"n":"!fail-typecheck","s":{"p":["$action","$got","*%_"],"r":"Mu"},"k":"m","m":0}],"b":"A"},{"k":"e","n":"SOCK_RAW","t":"SocketType"},{"k":"v","t":"Sub","n":"&copy"},{"n":"copy","s":{"r":"Mu","p":["$from","$to",":$createonly"]},"k":"s","m":1},{"k":"v","n":"&term:<time>","t":"Sub+{Callable[Int:D]}"},{"k":"s","m":0,"s":{"p":[],"r":"Int:D"},"n":"term:<time>"},{"k":"c","m":[{"m":0,"k":"s","n":"BUILD","s":{"r":"Nil","p":["*%_"]}},{"k":"m","m":0,"n":"send","s":{"r":"Nil","p":["\\item","*%_"]}},{"s":{"p":["*%_"],"r":"Mu"},"n":"receive","k":"m","m":0},{"k":"m","m":0,"s":{"r":"Mu","p":["*%_"]},"n":"poll"},{"n":"Capture","s":{"r":"Mu","p":["*%_"]},"m":0,"k":"m"},{"k":"m","m":0,"n":"iterator","s":{"p":["*%_"],"r":"Mu"}},{"k":"m","m":0,"n":"list","s":{"r":"Mu","p":["*%_"]}},{"m":0,"k":"m","s":{"r":"Awaitable::Handle:D","p":["*%_"]},"n":"get-await-handle"},{"k":"m","m":0,"s":{"p":["*%_"],"r":"Nil"},"n":"close"},{"m":0,"k":"m","n":"elems","s":{"p":["*%_"],"r":"Mu"}},{"s":{"p":["$error is copy","*%_"],"r":"Mu"},"n":"fail","k":"m","m":0},{"n":"closed","s":{"r":"Mu","p":["*%_"]},"m":0,"k":"m"},{"k":"m","m":1,"n":"Supply","s":{"p":["*%_"],"r":"Mu"}},{"n":"Supply","s":{"r":"Mu","p":["*%_"]},"m":1,"k":"m"},{"m":0,"k":"s","n":"BUILDALL","s":{"p":["@auto","%init","*%_"],"r":"Mu"}},{"n":"!peek","s":{"r":"Mu","p":["*%_"]},"m":0,"k":"m"}],"b":"A","a":[{"n":"$!queue","t":"Mu","k":"v"},{"n":"$!closed_promise","t":"Mu","k":"v"},{"n":"$!closed_promise_vow","t":"Mu","k":"v"},{"k":"v","n":"$!closed","t":"int"},{"n":"$!async-notify","t":"Mu","k":"v"}],"d":"TITLE\nclass Channel\n\nSUBTITLE\nThread-safe queue for sending values from producers to consumers\n\n    class Channel {}\n\nA Channel is a thread-safe queue that helps you to send a series of objects\nfrom one or more producers to one or more consumers. Each object will\narrive at only one such consumer, selected by the scheduler. If there is\nonly one consumer and one producer, the order of objects is guaranteed to\nbe preserved. Sending on a Channel is non-blocking.\n\n    my $c = Channel.new;\n    await (^10).map: {\n        start {\n            my $r = rand;\n            sleep $r;\n            $c.send($r);\n        }\n    }\n    $c.close;\n    say $c.list;\n\nFurther examples can be found in the concurrency page\n\n","n":"Channel","t":"Channel"},{"t":"Sub+{is-pure}+{Precedence}","n":"&infix:<le>","k":"v"},{"s":{"p":["$x?"],"r":"Mu"},"n":"infix:<le>","k":"s","m":1},{"s":{"p":["\\a","\\b"],"r":"Mu"},"n":"infix:<le>","m":1,"k":"s"},{"s":{"p":["Blob:D \\a","Blob:D \\b"],"r":"Mu"},"n":"infix:<le>","m":1,"k":"s"},{"m":1,"k":"s","n":"infix:<le>","s":{"p":["Str:D \\a","Str:D \\b"],"r":"Bool:D"}},{"k":"s","m":1,"n":"infix:<le>","s":{"p":["str $a","str $b"],"r":"Bool:D"}},{"s":{"r":"Bool:D","p":["str $a","str $b"]},"n":"infix:<le>","m":1,"k":"s"},{"n":"Code","t":"Code","a":[{"k":"v","t":"Code","n":"$!do"},{"t":"Signature","n":"$!signature","k":"v"},{"k":"v","n":"@!compstuff","t":"List"}],"b":"A","k":"c","m":[{"m":0,"k":"m","s":{"p":["*%_"],"r":"Mu"},"n":"arity"},{"m":0,"k":"m","n":"count","s":{"r":"Mu","p":["*%_"]}},{"s":{"r":"Mu","p":["*%_"]},"n":"signature","k":"m","m":0},{"m":0,"k":"m","s":{"p":["Capture:D $c","*%_"],"r":"Mu"},"n":"cando"},{"n":"prec","s":{"p":["*%_"],"r":"Mu"},"k":"m","m":1},{"s":{"p":["Str:D $","*%_"],"r":"Mu"},"n":"prec","m":1,"k":"m"},{"n":"outer","s":{"p":["*%_"],"r":"Mu"},"m":0,"k":"m"},{"k":"m","m":0,"n":"static_id","s":{"p":["*%_"],"r":"Mu"}},{"k":"m","m":0,"s":{"r":"Mu","p":["*%_"]},"n":"file"},{"n":"line","s":{"r":"Mu","p":["*%_"]},"k":"m","m":0},{"m":0,"k":"m","s":{"p":["|primers is raw"],"r":"Mu"},"n":"assuming"},{"s":{"p":["*%_"],"r":"Mu"},"n":"of","k":"m","m":0},{"n":"returns","s":{"p":["*%_"],"r":"Mu"},"k":"m","m":0},{"n":"Capture","s":{"p":["*%_"],"r":"Mu"},"k":"m","m":0},{"n":"ACCEPTS","s":{"r":"Mu","p":["\\topic","*%_"]},"m":1,"k":"m"},{"m":1,"k":"m","n":"ACCEPTS","s":{"r":"Mu","p":["Mu:U \\topic","*%_"]}},{"k":"m","m":1,"n":"ACCEPTS","s":{"p":["Mu:D \\a","*%_"],"r":"Mu"}},{"n":"ACCEPTS","s":{"p":["Mu:U $","*%_"],"r":"Bool"},"k":"m","m":1},{"m":1,"k":"m","n":"ACCEPTS","s":{"p":["\\topic","*%_"],"r":"Bool:D"}},{"m":1,"k":"m","s":{"r":"Mu","p":["Mu $topic is raw","*%_"]},"n":"ACCEPTS"},{"m":1,"k":"m","n":"Str","s":{"p":["*%_"],"r":"Mu"}},{"m":1,"k":"m","s":{"r":"Mu","p":["*%_"]},"n":"Str"},{"n":"Str","s":{"p":["*%_"],"r":"Mu"},"k":"m","m":1},{"k":"m","m":1,"s":{"p":["*%attrinit"],"r":"Mu"},"n":"new"},{"m":1,"k":"m","s":{"p":["$","*@","*%_"],"r":"Mu"},"n":"new"},{"m":1,"k":"m","n":"new","s":{"p":["*%_"],"r":"Mu"}},{"k":"m","m":1,"n":"perl","s":{"r":"Mu","p":["*%_"]}},{"n":"perl","s":{"r":"Mu","p":["*%_"]},"k":"m","m":1},{"n":"perl","s":{"r":"Mu","p":["*%_"]},"k":"m","m":1},{"s":{"p":["@auto","%init","*%_"],"r":"Mu"},"n":"BUILDALL","m":0,"k":"s"}],"d":"TITLE\nclass Code\n\nSUBTITLE\nCode object\n\n    class Code is Any does Callable {}\n\nCode is the ultimate base class of all code objects in Raku. It exposes\nfunctionality that all code objects have. While thunks are directly of type\nCode, most code objects (such as those resulting from blocks, subroutines\nor methods) will belong to some subclass of Code.\n\n"},{"n":"&infix:<%>","t":"Sub+{is-pure}+{Precedence}","k":"v"},{"n":"infix:<%>","s":{"r":"Mu","p":[]},"k":"s","m":1},{"s":{"p":["$x"],"r":"Mu"},"n":"infix:<%>","k":"s","m":1},{"s":{"r":"Mu","p":["\\a","\\b"]},"n":"infix:<%>","m":1,"k":"s"},{"n":"infix:<%>","s":{"p":["Real \\a","Real \\b"],"r":"Mu"},"k":"s","m":1},{"s":{"p":["Int:D \\a","Int:D \\b"],"r":"Int:D"},"n":"infix:<%>","m":1,"k":"s"},{"k":"s","m":1,"n":"infix:<%>","s":{"r":"int","p":["int $a","int $b"]}},{"s":{"r":"Mu","p":["Num:D \\a","Num:D \\b"]},"n":"infix:<%>","m":1,"k":"s"},{"k":"s","m":1,"n":"infix:<%>","s":{"r":"num","p":["num $a","num $b"]}},{"s":{"r":"Mu","p":["Rational:D \\a","Int:D \\b"]},"n":"infix:<%>","k":"s","m":1},{"k":"s","m":1,"n":"infix:<%>","s":{"p":["Int:D \\a","Rational:D \\b"],"r":"Mu"}},{"m":1,"k":"s","s":{"r":"Mu","p":["Rational:D \\a","Rational:D \\b"]},"n":"infix:<%>"},{"n":"infix:<%>","s":{"r":"Duration:D","p":["Duration:D $a","Real $b"]},"m":1,"k":"s"},{"t":"Sub","n":"&lc","k":"v"},{"s":{"r":"Mu","p":["Cool $s"]},"n":"lc","m":1,"k":"s"},{"a":[{"k":"v","n":"$.grammar","t":"Mu"},{"t":"Mu","n":"$.actions","k":"v"}],"b":"A","m":[{"k":"m","m":0,"s":{"r":"Mu","p":["|c is raw"]},"n":"parse"},{"n":"gist","s":{"p":["*%_"],"r":"Mu"},"m":1,"k":"m"},{"n":"gist","s":{"p":["*%_"],"r":"Mu"},"k":"m","m":1},{"m":1,"k":"m","n":"gist","s":{"p":["*%_"],"r":"Mu"}},{"k":"m","m":0,"s":{"p":["*%_"],"r":"Mu"},"n":"grammar"},{"s":{"p":["*%_"],"r":"Mu"},"n":"actions","k":"m","m":0},{"n":"BUILDALL","s":{"p":["@auto","%init","*%_"],"r":"Mu"},"m":0,"k":"s"}],"k":"c","t":"Slang","n":"Slang"},{"k":"n","n":"uint16","t":"uint16"},{"k":"e","t":"Signal","n":"SIGWINCH"},{"k":"v","t":"Sub+{is-pure}","n":"&min"},{"k":"s","m":1,"s":{"r":"Mu","p":["+\\args is raw",":&by!"]},"n":"min"},{"s":{"p":["+\\args is raw"],"r":"Mu"},"n":"min","m":1,"k":"s"},{"n":"&infix:<but>","t":"Sub+{is-pure}+{Precedence}","k":"v"},{"s":{"r":"Mu","p":["Mu:D \\obj","Mu:U \\rolish"]},"n":"infix:<but>","k":"s","m":1},{"n":"infix:<but>","s":{"p":["Mu:D \\obj","Mu:U \\rolish",":$value! is raw"],"r":"Mu"},"m":1,"k":"s"},{"k":"s","m":1,"s":{"p":["Mu:U \\obj","Mu:U \\rolish"],"r":"Mu"},"n":"infix:<but>"},{"n":"infix:<but>","s":{"r":"Mu","p":["Mu \\obj","Mu:D $val"]},"k":"s","m":1},{"k":"s","m":1,"n":"infix:<but>","s":{"r":"Mu","p":["Mu:D \\obj","**@roles"]}},{"n":"infix:<but>","s":{"p":["Mu:U \\obj","**@roles"],"r":"Mu"},"k":"s","m":1},{"t":"Range","n":"Range","d":"TITLE\nclass Range\n\nSUBTITLE\nInterval of ordered values\n\n    class Range is Cool does Iterable does Positional {}\n\nRanges serve two main purposes: to generate lists of consecutive numbers or\nstrings, and to act as a matcher to check if a number or string is within a\ncertain range.\n\nRanges are constructed using one of the four possible range operators,\nwhich consist of two dots, and optionally a caret which indicates that the\nendpoint marked with it is excluded from the range.\n\n    1 .. 5;  # 1 <= $x <= 5\n    1^.. 5;  # 1 <  $x <= 5\n    1 ..^5;  # 1 <= $x <  5\n    1^..^5;  # 1 <  $x <  5\n\nThe caret is also a prefix operator for constructing numeric ranges\nstarting from zero:\n\n    my $x = 10;\n    say ^$x;     # same as 0 ..^ $x.Numeric\n\nIterating a range (or calling the list method) uses the same semantics as\nthe ++ prefix and postfix operators, i.e., it calls the succ method on the\nstart point, and then the generated elements.\n\nRanges always go from small to larger elements; if the start point is\nbigger than the end point, the range is considered empty.\n\n    for 1..5 { .say };       # OUTPUT: «1␤2␤3␤4␤5␤»\n    ('a' ^..^ 'f').list;     # RESULT: «'b', 'c', 'd', 'e'»\n    5 ~~ ^5;                 # RESULT: «False»\n    4.5 ~~ 0..^5;            # RESULT: «True»\n    (1.1..5).list;           # RESULT: «(1.1, 2.1, 3.1, 4.1)»\n\nUse the ... sequence operator to produce lists of elements that go from\nlarger to smaller values, or to use offsets other than increment-by-1 and\nother complex cases.\n\nUse ∞ or * (Whatever) to indicate an end point to be open-ended.\n\n    for 1..* { .say };       # start from 1, continue until stopped\n    for 1..∞ { .say };       # the same\n\n\nBeware that a WhateverCode end point, instead of a plain Whatever, will go\nthrough the range operator and create another WhateverCode which returns a\nRange:\n\n    # A Whatever produces the 1..Inf range\n    say (1..*).^name;        # OUTPUT: «Range␤»\n    say (1..*);              # OUTPUT: «1..Inf␤»\n    # Upper end point is now a WhateverCode\n    say (1..*+20).^name;     # OUTPUT: «{ ... }␤»\n    say (1..*+20).WHAT;      # OUTPUT: «(WhateverCode)␤»\n    say (1..*+20).(22);      # OUTPUT: «1..42␤»\n\n\nRanges implement Positional interface, so its elements can be accessed\nusing an index. In a case when the index given is bigger than the Range\nobject's size, Nil object will be returned. The access works for lazy Range\nobjects as well.\n\n    say (1..5)[1];  # OUTPUT: «2␤»\n    say (1..5)[10]; # OUTPUT: «Nil␤»\n    say (1..*)[10]; # OUTPUT: «11␤»\n\n\n  Ranges in subscripts\n\nA Range can be used in a subscript to get a range of values. Please note\nthat assigning a Range to a scalar container turns the Range into an item.\nUse binding, @-sigiled containers or a slip to get what you mean.\n\n    my @numbers =  <4 8 15 16 23 42>;\n    my $range := 0..2;\n    .say for @numbers[$range]; # OUTPUT: «4␤8␤15␤»\n    my @range = 0..2;\n    .say for @numbers[@range]; # OUTPUT: «4␤8␤15␤»\n\n  Shifting and scaling intervals\n\nIt is possible to shift or scale the interval of a range:\n\n    say (1..10) + 1;       # OUTPUT: «2..11␤»\n    say (1..10) - 1;       # OUTPUT: «0..9␤»\n    say (1..10) * 2;       # OUTPUT: «2..20␤»\n    say (1..10) / 2;       # OUTPUT: «0.5..5.0␤»\n\n  Matching against Ranges\n\nYou can use smartmatch to match against Ranges.\n\n    say 3 ~~ 1..12;          # OUTPUT: «True␤»\n    say 2..3 ~~ 1..12;       # OUTPUT: «True␤»\n\n In Rakudo only, you can use the in-range method for matching against a\nrange, which in fact is equivalent to smartmatch except it will throw an\nexception when out of range, instead of returning False:\n\n    say ('א'..'ת').in-range('ע');  # OUTPUT: «True␤»\n\nHowever, if it is not included in the range:\n\n    say ('א'..'ת').in-range('p', \"Letter 'p'\");\n    # OUTPUT: «(exit code 1) Letter 'p' out of range. Is: \"p\", should be in \"א\"..\"ת\"␤\n\n\nThe second parameter to in-range is the optional message that will be\nprinted with the exception. It will print Value by default.\n\n","m":[{"m":1,"k":"m","n":"new","s":{"r":"Mu","p":["Range $min","\\max",":$excludes-min",":$excludes-max","*%_"]}},{"n":"new","s":{"p":["\\min","Range $max",":$excludes-min",":$excludes-max","*%_"],"r":"Mu"},"k":"m","m":1},{"s":{"r":"Mu","p":["Seq \\min","\\max",":$excludes-min",":$excludes-max","*%_"]},"n":"new","m":1,"k":"m"},{"k":"m","m":1,"s":{"r":"Mu","p":["\\min","Seq \\max",":$excludes-min",":$excludes-max","*%_"]},"n":"new"},{"n":"new","s":{"r":"Mu","p":["Complex \\min","\\max",":$excludes-min",":$excludes-max","*%_"]},"m":1,"k":"m"},{"m":1,"k":"m","n":"new","s":{"p":["\\min","Complex \\max",":$excludes-min",":$excludes-max","*%_"],"r":"Mu"}},{"s":{"p":["Whatever \\min","Whatever \\max",":$excludes-min",":$excludes-max","*%_"],"r":"Mu"},"n":"new","k":"m","m":1},{"n":"new","s":{"r":"Mu","p":["Whatever \\min","\\max",":$excludes-min",":$excludes-max","*%_"]},"m":1,"k":"m"},{"k":"m","m":1,"s":{"p":["\\min","Whatever \\max",":$excludes-min",":$excludes-max","*%_"],"r":"Mu"},"n":"new"},{"m":1,"k":"m","s":{"r":"Mu","p":["Real \\min","$max",":$excludes-min",":$excludes-max","*%_"]},"n":"new"},{"m":1,"k":"m","s":{"r":"Mu","p":["List:D \\min","\\max",":$excludes-min",":$excludes-max","*%_"]},"n":"new"},{"m":1,"k":"m","n":"new","s":{"r":"Mu","p":["Match:D \\min","\\max",":$excludes-min",":$excludes-max","*%_"]}},{"s":{"r":"Mu","p":["\\min","\\max",":$excludes-min",":$excludes-max!","*%_"]},"n":"new","m":1,"k":"m"},{"m":1,"k":"m","n":"new","s":{"p":["\\min","\\max",":$excludes-min!",":$excludes-max","*%_"],"r":"Mu"}},{"m":1,"k":"m","n":"new","s":{"p":["\\min","\\max","*%_"],"r":"Mu"}},{"n":"excludes-min","s":{"r":"Mu","p":["*%_"]},"k":"m","m":0},{"k":"m","m":0,"s":{"r":"Mu","p":["*%_"]},"n":"excludes-max"},{"m":0,"k":"m","s":{"p":["*%_"],"r":"Mu"},"n":"infinite"},{"k":"m","m":0,"n":"is-int","s":{"p":["*%_"],"r":"Mu"}},{"n":"elems","s":{"p":["*%_"],"r":"Mu"},"k":"m","m":0},{"m":0,"k":"m","s":{"r":"Mu","p":["*%_"]},"n":"iterator"},{"s":{"p":["*%_"],"r":"Mu"},"n":"flat","k":"m","m":0},{"k":"m","m":0,"s":{"p":["*%_"],"r":"Mu"},"n":"reverse"},{"k":"m","m":0,"n":"first","s":{"p":["|c is raw"],"r":"Mu"}},{"k":"m","m":0,"s":{"r":"Mu","p":["*%_"]},"n":"bounds"},{"s":{"p":["$from is rw","$to is rw","*%_"],"r":"Mu"},"n":"int-bounds","m":1,"k":"m"},{"k":"m","m":1,"s":{"r":"Mu","p":["*%_"]},"n":"int-bounds"},{"s":{"r":"Mu","p":["|c is raw"]},"n":"fmt","k":"m","m":0},{"k":"m","m":0,"s":{"p":["|"],"r":"Mu"},"n":"ASSIGN-POS"},{"s":{"r":"Mu","p":["Whatever $","*%_"]},"n":"roll","m":1,"k":"m"},{"k":"m","m":1,"s":{"r":"Mu","p":["*%_"]},"n":"roll"},{"s":{"p":["Int(Cool) $todo","*%_"],"r":"Mu"},"n":"roll","k":"m","m":1},{"s":{"p":["*%_"],"r":"Mu"},"n":"pick","k":"m","m":1},{"n":"pick","s":{"p":["Whatever $","*%_"],"r":"Mu"},"k":"m","m":1},{"n":"pick","s":{"p":["Int(Cool) $todo","*%_"],"r":"Mu"},"m":1,"k":"m"},{"m":0,"k":"m","s":{"p":["*%_"],"r":"Mu"},"n":"Capture"},{"s":{"r":"Mu","p":["|"]},"n":"push","k":"m","m":0},{"m":0,"k":"m","s":{"r":"Mu","p":["|"]},"n":"append"},{"m":0,"k":"m","s":{"p":["|"],"r":"Mu"},"n":"unshift"},{"s":{"p":["|"],"r":"Mu"},"n":"prepend","k":"m","m":0},{"m":0,"k":"m","s":{"r":"Mu","p":["|"]},"n":"shift"},{"k":"m","m":0,"n":"pop","s":{"r":"Mu","p":["|"]}},{"s":{"p":["*%_"],"r":"Mu"},"n":"sum","m":0,"k":"m"},{"m":0,"k":"m","n":"rand","s":{"p":["*%_"],"r":"Mu"}},{"s":{"p":["$got","$what?","*%_"],"r":"Mu"},"n":"in-range","m":0,"k":"m"},{"m":0,"k":"m","s":{"p":["*%_"],"r":"Mu"},"n":"of"},{"n":"item","s":{"p":["*%_"],"r":"Mu"},"m":0,"k":"m"},{"m":0,"k":"m","n":"lazy-if","s":{"r":"Mu","p":["$flag","*%_"]}},{"k":"m","m":0,"n":"lazy","s":{"r":"Mu","p":["*%_"]}},{"n":"hyper","s":{"p":["Int(Cool) :$batch = 64","Int(Cool) :$degree = 4","*%_"],"r":"Mu"},"m":0,"k":"m"},{"s":{"p":["Int(Cool) :$batch = 64","Int(Cool) :$degree = 4","*%_"],"r":"Mu"},"n":"race","m":0,"k":"m"},{"m":1,"k":"m","n":"is-lazy","s":{"p":["*%_"],"r":"Bool"}},{"s":{"p":["*%_"],"r":"Mu"},"n":"is-lazy","k":"m","m":1},{"n":"WHICH","s":{"p":["*%_"],"r":"ValueObjAt:D"},"k":"m","m":1},{"m":1,"k":"m","s":{"r":"ObjAt:D","p":["*%_"]},"n":"WHICH"},{"m":1,"k":"m","s":{"r":"Mu","p":["*%_"]},"n":"WHICH"},{"n":"EXISTS-POS","s":{"p":["Any:D $","*%_"],"r":"Bool"},"k":"m","m":1},{"m":1,"k":"m","s":{"r":"Mu","p":["Any:U $pos","*%_"]},"n":"EXISTS-POS"},{"n":"EXISTS-POS","s":{"r":"Bool:D","p":["int \\pos","*%_"]},"k":"m","m":1},{"s":{"r":"Bool:D","p":["Int:D \\pos","*%_"]},"n":"EXISTS-POS","m":1,"k":"m"},{"n":"EXISTS-POS","s":{"p":["Num:D \\pos","*%_"],"r":"Bool:D"},"m":1,"k":"m"},{"n":"EXISTS-POS","s":{"p":["Any:D \\pos","*%_"],"r":"Bool:D"},"m":1,"k":"m"},{"n":"EXISTS-POS","s":{"r":"Mu","p":["Any:U \\pos","*%_"]},"m":1,"k":"m"},{"n":"EXISTS-POS","s":{"r":"Bool:D","p":["\\one","\\two","*%_"]},"m":1,"k":"m"},{"m":1,"k":"m","n":"EXISTS-POS","s":{"r":"Bool:D","p":["\\one","\\two","\\three","*%_"]}},{"s":{"p":["**@indices","*%_"],"r":"Bool:D"},"n":"EXISTS-POS","m":1,"k":"m"},{"n":"EXISTS-POS","s":{"p":["int \\pos","*%_"],"r":"Mu"},"m":1,"k":"m"},{"k":"m","m":1,"s":{"r":"Mu","p":["Int \\pos","*%_"]},"n":"EXISTS-POS"},{"n":"list","s":{"p":["*%_"],"r":"Mu"},"k":"m","m":1},{"m":1,"k":"m","s":{"r":"Mu","p":["*%_"]},"n":"list"},{"m":1,"k":"m","n":"list","s":{"p":["*%_"],"r":"Mu"}},{"m":1,"k":"m","s":{"r":"Mu","p":["*%_"]},"n":"Str"},{"m":1,"k":"m","s":{"r":"Mu","p":["*%_"]},"n":"Str"},{"s":{"p":["*%_"],"r":"Mu"},"n":"Str","k":"m","m":1},{"n":"ACCEPTS","s":{"p":["\\topic","*%_"],"r":"Mu"},"m":1,"k":"m"},{"s":{"p":["Mu:U \\topic","*%_"],"r":"Mu"},"n":"ACCEPTS","m":1,"k":"m"},{"k":"m","m":1,"s":{"p":["Mu:D \\a","*%_"],"r":"Mu"},"n":"ACCEPTS"},{"n":"ACCEPTS","s":{"r":"Bool","p":["Mu:U $","*%_"]},"k":"m","m":1},{"n":"ACCEPTS","s":{"p":["\\topic","*%_"],"r":"Bool:D"},"k":"m","m":1},{"n":"ACCEPTS","s":{"r":"Mu","p":["Mu \\topic","*%_"]},"k":"m","m":1},{"k":"m","m":1,"n":"ACCEPTS","s":{"p":["Cool:D \\got","*%_"],"r":"Mu"}},{"k":"m","m":1,"n":"ACCEPTS","s":{"r":"Mu","p":["Complex:D \\got","*%_"]}},{"n":"ACCEPTS","s":{"p":["Range:D \\topic","*%_"],"r":"Mu"},"k":"m","m":1},{"s":{"p":["int \\pos","*%_"],"r":"Mu"},"n":"AT-POS","m":1,"k":"m"},{"s":{"p":["Int:D \\pos","*%_"],"r":"Mu"},"n":"AT-POS","k":"m","m":1},{"m":1,"k":"m","s":{"p":["Num:D \\pos","*%_"],"r":"Mu"},"n":"AT-POS"},{"s":{"r":"Mu","p":["Any:D \\pos","*%_"]},"n":"AT-POS","m":1,"k":"m"},{"m":1,"k":"m","s":{"p":["int \\pos","*%_"],"r":"Mu"},"n":"AT-POS"},{"k":"m","m":1,"n":"AT-POS","s":{"p":["Int:D \\pos","*%_"],"r":"Mu"}},{"s":{"r":"Mu","p":["Num:D \\pos","*%_"]},"n":"AT-POS","k":"m","m":1},{"m":1,"k":"m","n":"AT-POS","s":{"r":"Mu","p":["Any:D \\pos","*%_"]}},{"n":"AT-POS","s":{"p":["Any:U \\pos","*%_"],"r":"Mu"},"m":1,"k":"m"},{"s":{"r":"Mu","p":["\\one","\\two","*%_"]},"n":"AT-POS","k":"m","m":1},{"s":{"p":["\\one","\\two","\\three","*%_"],"r":"Mu"},"n":"AT-POS","k":"m","m":1},{"k":"m","m":1,"s":{"p":["**@indices","*%_"],"r":"Mu"},"n":"AT-POS"},{"n":"AT-POS","s":{"r":"Mu","p":["int \\pos","*%_"]},"m":1,"k":"m"},{"m":1,"k":"m","n":"AT-POS","s":{"p":["Int:D \\pos","*%_"],"r":"Mu"}},{"n":"perl","s":{"r":"Mu","p":["*%_"]},"k":"m","m":1},{"n":"perl","s":{"r":"Mu","p":["*%_"]},"m":1,"k":"m"},{"k":"m","m":1,"s":{"r":"Mu","p":["*%_"]},"n":"perl"},{"n":"Numeric","s":{"p":["*%_"],"r":"Mu"},"k":"m","m":1},{"n":"Numeric","s":{"r":"Mu","p":["*%_"]},"m":1,"k":"m"},{"m":1,"k":"m","s":{"r":"Mu","p":["*%_"]},"n":"minmax"},{"k":"m","m":1,"s":{"r":"Mu","p":["&by","*%_"]},"n":"minmax"},{"s":{"r":"Mu","p":["*%_"]},"n":"minmax","m":1,"k":"m"},{"m":1,"k":"m","s":{"p":["*%_"],"r":"Mix:D"},"n":"Mix"},{"n":"Mix","s":{"r":"Mu","p":["*%_"]},"k":"m","m":1},{"m":1,"k":"m","n":"MixHash","s":{"p":["*%_"],"r":"MixHash:D"}},{"n":"MixHash","s":{"p":["*%_"],"r":"Mu"},"k":"m","m":1},{"k":"m","m":1,"n":"Bag","s":{"r":"Bag:D","p":["*%_"]}},{"m":1,"k":"m","s":{"r":"Mu","p":["*%_"]},"n":"Bag"},{"n":"BagHash","s":{"p":["*%_"],"r":"BagHash:D"},"m":1,"k":"m"},{"n":"BagHash","s":{"r":"Mu","p":["*%_"]},"k":"m","m":1},{"n":"Set","s":{"r":"Set:D","p":["*%_"]},"m":1,"k":"m"},{"m":1,"k":"m","s":{"r":"Mu","p":["*%_"]},"n":"Set"},{"k":"m","m":1,"n":"SetHash","s":{"r":"SetHash:D","p":["*%_"]}},{"m":1,"k":"m","s":{"r":"Mu","p":["*%_"]},"n":"SetHash"},{"s":{"p":["*%_"],"r":"Mu"},"n":"min","m":0,"k":"m"},{"m":0,"k":"m","s":{"r":"Mu","p":["*%_"]},"n":"max"},{"m":0,"k":"s","s":{"p":["@auto","%init","*%_"],"r":"Mu"},"n":"BUILDALL"},{"k":"m","m":0,"s":{"r":"Mu","p":["*%_"]},"n":"!IS-NATIVE-INT"},{"m":0,"k":"m","s":{"p":["\\min","\\max","\\excludes-min","\\excludes-max","\\infinite","*%_"],"r":"Mu"},"n":"!SET-SELF"},{"s":{"r":"Mu","p":["*%_"]},"n":"!reverse-iterator","k":"m","m":0}],"k":"c","a":[{"t":"Mu","n":"$.min","k":"v"},{"k":"v","t":"Mu","n":"$.max"},{"k":"v","n":"$!excludes-min","t":"int"},{"n":"$!excludes-max","t":"int","k":"v"},{"n":"$!infinite","t":"int","k":"v"},{"k":"v","t":"int","n":"$!is-int"}],"b":"C"},{"n":"Grammar","t":"Grammar","m":[{"s":{"p":["\\target",":$rule",":$args","Mu :$actions",":$filename","*%_"],"r":"Mu"},"n":"parse","k":"m","m":0},{"m":0,"k":"m","n":"subparse","s":{"r":"Mu","p":["\\target",":$rule",":$args",":$actions","*%_"]}},{"s":{"p":["Str(Cool) $filename",":$enc","*%_"],"r":"Mu"},"n":"parsefile","k":"m","m":0},{"m":0,"k":"s","n":"BUILDALL","s":{"p":["@auto","%init","*%_"],"r":"Mu"}},{"s":{"r":"Mu","p":["$name","|c is raw"]},"n":"INDMETHOD","k":"m","m":0},{"k":"m","m":0,"n":"made","s":{"p":["*%_"],"r":"Mu"}},{"k":"m","m":0,"n":"INDRULE","s":{"p":["$rule","|c is raw"],"r":"Mu"}},{"m":0,"k":"m","s":{"p":["*%_"],"r":"Mu"},"n":"STR"},{"k":"m","m":0,"s":{"p":["*%_"],"r":"Mu"},"n":"chunks"},{"s":{"r":"Mu","p":["*%_"]},"n":"gist","k":"m","m":1},{"m":1,"k":"m","s":{"r":"Mu","p":["*%_"]},"n":"gist"},{"n":"gist","s":{"r":"Mu","p":["*%_"]},"k":"m","m":1},{"m":1,"k":"m","n":"gist","s":{"p":["$d = 0","*%_"],"r":"Mu"}},{"n":"Bool","s":{"r":"Bool","p":["*%_"]},"m":1,"k":"m"},{"m":1,"k":"m","n":"Bool","s":{"p":["*%_"],"r":"Mu"}},{"s":{"r":"Mu","p":["*%_"]},"n":"postmatch","m":0,"k":"m"},{"n":"MATCH","s":{"p":["*%_"],"r":"Mu"},"k":"m","m":0},{"n":"clone","s":{"p":["*%_"],"r":"Mu"},"m":0,"k":"m"},{"n":"WHICH","s":{"p":["*%_"],"r":"ValueObjAt:D"},"m":1,"k":"m"},{"m":1,"k":"m","s":{"p":["*%_"],"r":"ObjAt:D"},"n":"WHICH"},{"m":1,"k":"m","n":"WHICH","s":{"r":"ValueObjAt:D","p":["*%_"]}},{"s":{"p":["*%_"],"r":"ObjAt:D"},"n":"WHICH","k":"m","m":1},{"m":0,"k":"m","s":{"p":["*%_"],"r":"Mu"},"n":"RECURSE"},{"n":"CURSOR_OVERLAP","s":{"p":["*%_"],"r":"Mu"},"m":0,"k":"m"},{"k":"m","m":0,"n":"caps","s":{"r":"Mu","p":["*%_"]}},{"m":1,"k":"m","s":{"r":"Mu","p":["*%_"]},"n":"Numeric"},{"s":{"p":["*%_"],"r":"Mu"},"n":"Numeric","m":1,"k":"m"},{"m":1,"k":"m","s":{"r":"Mu","p":["*%_"]},"n":"Numeric"},{"k":"m","m":0,"s":{"r":"Mu","p":["*%_"]},"n":"CURSOR_MORE"},{"m":1,"k":"m","s":{"p":["*%_"],"r":"Mu"},"n":"perl"},{"k":"m","m":1,"s":{"p":["*%_"],"r":"Mu"},"n":"perl"},{"s":{"r":"Mu","p":["*%_"]},"n":"perl","k":"m","m":1},{"k":"m","m":1,"n":"perl","s":{"r":"Mu","p":["*%_"]}},{"n":"CURSOR_NEXT","s":{"r":"Mu","p":["*%_"]},"k":"m","m":0},{"k":"m","m":1,"n":"INTERPOLATE_ASSERTION","s":{"r":"Mu","p":["Associative:D $","$","$","$","$","$","*%_"]}},{"k":"m","m":1,"s":{"p":["Iterable:D \\var","int \\im","int \\monkey","int \\s","$","\\context","*%_"],"r":"Mu"},"n":"INTERPOLATE_ASSERTION"},{"n":"INTERPOLATE_ASSERTION","s":{"p":["Mu:D \\var","int \\im","int \\monkey","$","$","\\context","*%_"],"r":"Mu"},"k":"m","m":1},{"m":0,"k":"m","n":"DYNQUANT_LIMITS","s":{"p":["$mm","*%_"],"r":"Mu"}},{"m":1,"k":"m","n":"INTERPOLATE","s":{"r":"Mu","p":["Callable:D \\var","$","$","$","$","$","*%_"]}},{"s":{"r":"Mu","p":["Iterable:D \\var","int \\im","int \\monkey","int \\s","$","\\context","*%_"]},"n":"INTERPOLATE","m":1,"k":"m"},{"n":"INTERPOLATE","s":{"r":"Mu","p":["Associative:D \\var","int \\im","$","$","$","\\context","*%_"]},"k":"m","m":1},{"n":"INTERPOLATE","s":{"r":"Mu","p":["Regex:D \\var","int \\im","int \\monkey","$","$","$","*%_"]},"k":"m","m":1},{"m":1,"k":"m","s":{"r":"Mu","p":["Mu:D \\var","int \\im","int \\monkey","$","$","\\context","*%_"]},"n":"INTERPOLATE"},{"s":{"p":["Mu:U \\var","$","$","$","$","$","*%_"],"r":"Mu"},"n":"INTERPOLATE","k":"m","m":1},{"s":{"p":["*%_"],"r":"Mu"},"n":"prematch","k":"m","m":0},{"s":{"p":["\\topic","*%_"],"r":"Mu"},"n":"ACCEPTS","m":1,"k":"m"},{"n":"ACCEPTS","s":{"r":"Mu","p":["Mu:U \\topic","*%_"]},"m":1,"k":"m"},{"n":"ACCEPTS","s":{"p":["Mu:D \\a","*%_"],"r":"Mu"},"m":1,"k":"m"},{"s":{"r":"Bool","p":["Mu:U $","*%_"]},"n":"ACCEPTS","k":"m","m":1},{"m":1,"k":"m","n":"ACCEPTS","s":{"p":["\\topic","*%_"],"r":"Bool:D"}},{"k":"m","m":1,"n":"ACCEPTS","s":{"r":"Mu","p":["$","*%_"]}},{"m":0,"k":"m","s":{"p":["$rule","|c is raw"],"r":"Mu"},"n":"CALL_SUBRULE"},{"n":"OTHERGRAMMAR","s":{"r":"Mu","p":["$grammar","$name","|"]},"m":0,"k":"m"},{"m":0,"k":"m","n":"ast","s":{"p":["*%_"],"r":"Mu"}},{"m":0,"k":"s","s":{"p":["@auto","%init","*%_"],"r":"Mu"},"n":"BUILDALL"},{"n":"BUILD","s":{"p":[":$orig = \"\"",":$from = 0",":to(:$pos)",":ast(:$made)",":$shared",":$braid",":$list",":$hash","*%_"],"r":"Mu"},"m":0,"k":"s"},{"s":{"p":["*%_"],"r":"Mu"},"n":"list","k":"m","m":0},{"s":{"p":["$","*%_"],"r":"Bool"},"n":"EXISTS-KEY","m":1,"k":"m"},{"k":"m","m":1,"s":{"r":"Bool","p":["$","*%_"]},"n":"EXISTS-KEY"},{"m":1,"k":"m","s":{"p":["Str:D \\key","*%_"],"r":"Mu"},"n":"EXISTS-KEY"},{"n":"EXISTS-KEY","s":{"p":["\\key","*%_"],"r":"Mu"},"k":"m","m":1},{"m":1,"k":"m","n":"AT-KEY","s":{"r":"Mu","p":["$key","*%_"]}},{"s":{"p":["\\key","*%_"],"r":"Mu"},"n":"AT-KEY","m":1,"k":"m"},{"n":"AT-KEY","s":{"r":"Mu","p":["Str:D \\key","*%_"]},"k":"m","m":1},{"m":1,"k":"m","n":"AT-KEY","s":{"r":"Mu","p":["\\key","*%_"]}},{"m":1,"k":"m","s":{"r":"Mu","p":["*%_"]},"n":"perl"},{"k":"m","m":1,"n":"perl","s":{"p":["*%_"],"r":"Mu"}},{"n":"perl","s":{"p":["*%_"],"r":"Mu"},"m":1,"k":"m"},{"n":"Numeric","s":{"p":["*%_"],"r":"Mu"},"m":1,"k":"m"},{"s":{"p":["*%_"],"r":"Mu"},"n":"Numeric","k":"m","m":1},{"n":"FLATTENABLE_HASH","s":{"r":"Mu","p":["*%_"]},"m":0,"k":"m"},{"n":"antipairs","s":{"p":["*%_"],"r":"Mu"},"m":1,"k":"m"},{"s":{"p":["*%_"],"r":"Mu"},"n":"antipairs","m":1,"k":"m"},{"s":{"p":["*%_"],"r":"Mu"},"n":"antipairs","m":1,"k":"m"},{"m":0,"k":"m","n":"Capture","s":{"p":["*%_"],"r":"Mu"}},{"n":"hash","s":{"r":"Mu","p":["*%_"]},"k":"m","m":0},{"m":1,"k":"m","s":{"p":["*%_"],"r":"Mu"},"n":"Str"},{"m":1,"k":"m","s":{"r":"Mu","p":["*%_"]},"n":"Str"},{"s":{"p":["*%_"],"r":"Mu"},"n":"Str","k":"m","m":1},{"s":{"p":["*%_"],"r":"ValueObjAt:D"},"n":"WHICH","k":"m","m":1},{"n":"WHICH","s":{"r":"ObjAt:D","p":["*%_"]},"k":"m","m":1},{"n":"WHICH","s":{"r":"ValueObjAt:D","p":["*%_"]},"k":"m","m":1},{"k":"m","m":1,"n":"values","s":{"r":"Mu","p":["*%_"]}},{"s":{"r":"Mu","p":["*%_"]},"n":"values","k":"m","m":1},{"m":1,"k":"m","n":"values","s":{"r":"Mu","p":["*%_"]}},{"n":"pairs","s":{"r":"Mu","p":["*%_"]},"m":1,"k":"m"},{"k":"m","m":1,"s":{"p":["*%_"],"r":"Mu"},"n":"pairs"},{"m":1,"k":"m","s":{"r":"Mu","p":["*%_"]},"n":"pairs"},{"n":"FLATTENABLE_LIST","s":{"p":["*%_"],"r":"Mu"},"k":"m","m":0},{"n":"kv","s":{"r":"Mu","p":["*%_"]},"k":"m","m":1},{"s":{"p":["*%_"],"r":"Mu"},"n":"kv","m":1,"k":"m"},{"s":{"p":["*%_"],"r":"Mu"},"n":"kv","m":1,"k":"m"},{"n":"from-args","s":{"p":["|c is raw"],"r":"Mu"},"k":"m","m":0},{"k":"m","m":1,"s":{"p":["int \\pos","*%_"],"r":"Mu"},"n":"AT-POS"},{"m":1,"k":"m","n":"AT-POS","s":{"r":"Mu","p":["Int:D \\pos","*%_"]}},{"n":"AT-POS","s":{"r":"Mu","p":["Num:D \\pos","*%_"]},"m":1,"k":"m"},{"m":1,"k":"m","s":{"r":"Mu","p":["Any:D \\pos","*%_"]},"n":"AT-POS"},{"s":{"r":"Mu","p":["int \\pos","*%_"]},"n":"AT-POS","k":"m","m":1},{"m":1,"k":"m","s":{"p":["Int:D \\pos","*%_"],"r":"Mu"},"n":"AT-POS"},{"k":"m","m":1,"n":"AT-POS","s":{"p":["Num:D \\pos","*%_"],"r":"Mu"}},{"m":1,"k":"m","s":{"p":["Any:D \\pos","*%_"],"r":"Mu"},"n":"AT-POS"},{"k":"m","m":1,"n":"AT-POS","s":{"r":"Mu","p":["Any:U \\pos","*%_"]}},{"m":1,"k":"m","s":{"r":"Mu","p":["\\one","\\two","*%_"]},"n":"AT-POS"},{"k":"m","m":1,"s":{"p":["\\one","\\two","\\three","*%_"],"r":"Mu"},"n":"AT-POS"},{"s":{"p":["**@indices","*%_"],"r":"Mu"},"n":"AT-POS","k":"m","m":1},{"k":"m","m":1,"s":{"p":["int \\pos","*%_"],"r":"Mu"},"n":"AT-POS"},{"m":1,"k":"m","s":{"p":["Int:D \\pos","*%_"],"r":"Mu"},"n":"AT-POS"},{"s":{"r":"Mu","p":["*%_"]},"n":"keys","k":"m","m":1},{"n":"keys","s":{"p":["*%_"],"r":"Mu"},"k":"m","m":1},{"m":1,"k":"m","s":{"p":["*%_"],"r":"Mu"},"n":"keys"},{"s":{"p":["*%_"],"r":"Mu"},"n":"gist","k":"m","m":1},{"m":1,"k":"m","s":{"p":["*%_"],"r":"Mu"},"n":"gist"},{"s":{"r":"Mu","p":["*%_"]},"n":"gist","m":1,"k":"m"},{"s":{"p":["*%_"],"r":"Mu"},"n":"elems","m":0,"k":"m"},{"m":1,"k":"m","s":{"p":["*%_"],"r":"Bool"},"n":"Bool"},{"s":{"r":"Mu","p":["*%_"]},"n":"Bool","m":1,"k":"m"},{"k":"m","m":1,"s":{"r":"Mu","p":["*%_"]},"n":"Bool"},{"s":{"r":"Mu","p":["@auto","%init","*%_"]},"n":"BUILDALL","k":"s","m":0},{"m":0,"k":"s","s":{"p":[":@list",":%hash","*%_"],"r":"Nil"},"n":"BUILD"}],"k":"c","b":"C","a":[{"k":"v","n":"@!list","t":"List"},{"t":"Hash","n":"%!hash","k":"v"}],"d":"TITLE\nclass Grammar\n\nSUBTITLE\nFormal grammar made up of named regexes\n\n    class Grammar is Match {}\n\nEvery type declared with grammar and not explicitly stating its superclass,\nbecomes a subclass of Grammar.\n\n    grammar Identifier {\n        token TOP       { <initial> <rest>* }\n        token initial   { <+myletter +[_]> }\n        token rest      { <+myletter +mynumber +[_]> }\n        token myletter  { <[A..Za..z]> }\n        token mynumber  { <[0..9]> }\n    }\n\n    say Identifier.isa(Grammar);                # OUTPUT: «True␤»\n    my $match = Identifier.parse('W4anD0eR96');\n    say ~$match;                                # OUTPUT: «W4anD0eR96␤»\n\nMore documentation on grammars is available.\n\n"},{"t":"Sub","n":"&infix:<⚛=>","k":"v"},{"s":{"p":["$target is rw","\\value"],"r":"Mu"},"n":"infix:<⚛=>","k":"s","m":1},{"s":{"p":["atomicint $target is rw","int $value"],"r":"Mu"},"n":"infix:<⚛=>","m":1,"k":"s"},{"n":"infix:<⚛=>","s":{"p":["atomicint $target is rw","Int:D $value"],"r":"Mu"},"m":1,"k":"s"},{"k":"s","m":1,"n":"infix:<⚛=>","s":{"r":"Mu","p":["atomicint $target is rw","$value"]}},{"k":"v","t":"Sub+{Precedence}","n":"&prefix:<-->"},{"k":"s","m":1,"s":{"r":"Mu","p":["Mu:D $a is rw"]},"n":"prefix:<-->"},{"k":"s","m":1,"s":{"p":["Mu:U $a is rw"],"r":"Mu"},"n":"prefix:<-->"},{"n":"prefix:<-->","s":{"p":["Int:D $a is rw"],"r":"Int:D"},"k":"s","m":1},{"m":1,"k":"s","s":{"r":"int","p":["int $a is rw"]},"n":"prefix:<-->"},{"m":1,"k":"s","n":"prefix:<-->","s":{"r":"Mu","p":["Bool $a is rw"]}},{"s":{"r":"Mu","p":["Num:D $a is rw"]},"n":"prefix:<-->","m":1,"k":"s"},{"n":"prefix:<-->","s":{"r":"Mu","p":["Num:U $a is rw"]},"m":1,"k":"s"},{"s":{"p":["num $a is rw"],"r":"num"},"n":"prefix:<-->","m":1,"k":"s"},{"n":"SIGSTKFLT","t":"Signal","k":"e"},{"k":"v","t":"Sub","n":"&map"},{"n":"map","s":{"r":"Mu","p":["&code","+\\values is raw"]},"m":1,"k":"s"},{"k":"v","n":"&duckmap","t":"Sub"},{"n":"duckmap","s":{"r":"Mu","p":["\\op","\\obj"]},"k":"s","m":1},{"k":"s","m":1,"n":"duckmap","s":{"p":["\\op","Associative \\h"],"r":"Mu"}},{"n":"&acosec","t":"Sub+{is-pure}","k":"v"},{"k":"s","m":1,"n":"acosec","s":{"r":"Mu","p":["Numeric \\x"]}},{"n":"acosec","s":{"r":"Mu","p":["Cool \\x"]},"m":1,"k":"s"},{"s":{"p":["Num:D \\x"],"r":"Mu"},"n":"acosec","m":1,"k":"s"},{"n":"&expmod","t":"Sub+{is-pure}","k":"v"},{"m":1,"k":"s","s":{"p":["Int:D \\base","Int:D \\exp","Int:D \\mod"],"r":"Int:D"},"n":"expmod"},{"m":1,"k":"s","s":{"r":"Int:D","p":["\\base","\\exp","\\mod"]},"n":"expmod"},{"n":"PF_INET","t":"ProtocolFamily","k":"e"},{"k":"c","m":[{"m":0,"k":"m","s":{"r":"Nil","p":["*@","*%_"]},"n":"new"},{"s":{"r":"Mu","p":["*%_"]},"n":"Numeric","k":"m","m":0},{"n":"Str","s":{"p":["*%_"],"r":"Mu"},"m":0,"k":"m"},{"s":{"r":"Nil","p":["*%_"]},"n":"sink","m":0,"k":"m"},{"s":{"p":["|"],"r":"Nil"},"n":"AT-POS","m":0,"k":"m"},{"n":"AT-KEY","s":{"p":["|"],"r":"Nil"},"m":0,"k":"m"},{"s":{"p":["|"],"r":"Mu"},"n":"BIND-POS","k":"m","m":0},{"s":{"r":"Mu","p":["|"]},"n":"BIND-KEY","k":"m","m":0},{"n":"ASSIGN-POS","s":{"p":["|"],"r":"Mu"},"m":0,"k":"m"},{"s":{"p":["|"],"r":"Mu"},"n":"ASSIGN-KEY","k":"m","m":0},{"k":"m","m":0,"s":{"p":["|"],"r":"Mu"},"n":"STORE"},{"s":{"p":["|"],"r":"Mu"},"n":"push","m":0,"k":"m"},{"m":0,"k":"m","n":"append","s":{"r":"Mu","p":["|"]}},{"n":"unshift","s":{"p":["|"],"r":"Mu"},"k":"m","m":0},{"n":"prepend","s":{"r":"Mu","p":["|"]},"m":0,"k":"m"},{"m":0,"k":"m","s":{"p":["|"],"r":"Nil"},"n":"FALLBACK"},{"k":"m","m":0,"n":"ords","s":{"r":"Mu","p":["*%_"]}},{"k":"m","m":0,"s":{"r":"Mu","p":["*%_"]},"n":"chrs"},{"m":0,"k":"m","n":"chop","s":{"p":["*%_"],"r":"Mu"}},{"k":"m","m":0,"s":{"r":"Mu","p":["*%_"]},"n":"chomp"},{"n":"iterator","s":{"p":["*%_"],"r":"Mu"},"m":0,"k":"m"},{"k":"m","m":0,"n":"Set","s":{"r":"Mu","p":["*%_"]}},{"s":{"r":"Mu","p":["*%_"]},"n":"SetHash","k":"m","m":0},{"n":"Bag","s":{"r":"Mu","p":["*%_"]},"k":"m","m":0},{"k":"m","m":0,"s":{"r":"Mu","p":["*%_"]},"n":"BagHash"},{"s":{"r":"Mu","p":["*%_"]},"n":"Mix","m":0,"k":"m"},{"s":{"r":"Mu","p":["*%_"]},"n":"MixHash","m":0,"k":"m"},{"m":1,"k":"m","s":{"r":"Mu","p":["*%_"]},"n":"gist"},{"n":"gist","s":{"r":"Mu","p":["*%_"]},"k":"m","m":1},{"s":{"r":"Mu","p":["*%_"]},"n":"gist","k":"m","m":1},{"k":"s","m":0,"n":"BUILDALL","s":{"p":["@auto","%init","*%_"],"r":"Mu"}}],"b":"C","d":"TITLE\nclass Nil\n\nSUBTITLE\nAbsence of a value or a benign failure\n\n    class Nil is Cool { }\n\nThe value Nil may be used to fill a spot where a value would normally go,\nand in so doing, explicitly indicate that no value is present. It may also\nbe used as a cheaper and less explosive alternative to a Failure. (In fact,\nclass Failure is derived from Nil, so smartmatching Nil will also match\nFailure.)\n\nThe class Nil is the same exact thing as its only possible value, Nil.\n\n    say Nil === Nil.new;        # OUTPUT: «True␤»\n\nAlong with Failure, Nil and its sub classes may always be returned from a\nroutine even when the routine specifies a particular return type. It may\nalso be returned regardless of the definedness of the return type, however,\nNil is considered undefined for all other purposes.\n\n    sub a( --> Int:D ) { return Nil }\n    a().say;                    # OUTPUT: «Nil␤»\n\nNil is what is returned from empty routines or closure, or routines that\nuse a bare return statement.\n\n    sub a { }; a().say;         # OUTPUT: «Nil␤»\n    sub b { return }; b().say;  # OUTPUT: «Nil␤»\n    say (if 1 { });             # OUTPUT: «Nil␤»\n    { ; }().say;                # OUTPUT: «Nil␤»\n    say EVAL \"\";                # OUTPUT: «Nil␤»\n\nIn a list, Nil takes the space of one value. Iterating a Nil behaves like\niteration of any non-iterable value, producing a sequence of one Nil. (When\nyou need the other meaning, the special value Empty is available to take no\nspaces when inserted into list, and to return no values when iterated.)\n\n    (1, Nil, 3).elems.say;      # OUTPUT: «3␤»\n    (for Nil { $_ }).perl.say;  # OUTPUT: «(Nil,)␤»\n\nAny method call on Nil of a method that does not exist, and consequently,\nany subscripting operation, will succeed and return Nil.\n\n    say Nil.ITotallyJustMadeThisUp;  # OUTPUT: «Nil␤»\n    say (Nil)[100];                  # OUTPUT: «Nil␤»\n    say (Nil){100};                  # OUTPUT: «Nil␤»\n\n When assigned to a container, the Nil value (but not any subclass of Nil)\nwill attempt to revert the container to its default value; if no such\ndefault is declared, Raku assumes Any.\n\nSince a hash assignment expects two elements, use Empty not Nil, e.g.\n\n    my %h = 'a'..'b' Z=> 1..*;\n    # stuff happens\n    %h = Empty; # %h = Nil will generate an error\n\nHowever, if the container type is constrained with :D, assigning Nil to it\nwill immediately throw an exception. (In contrast, an instantiated Failure\nmatches :D because it's a definite value, but will fail to match the actual\nnominal type unless it happens to be a parent class of Failure.) Native\ntypes can not have default values nor hold a type object. Assigning Nil to\na native type container will fail with a runtime error.\n\n    my Int $x = 42;\n    $x = Nil;\n    $x.say;                     # OUTPUT: «(Int)␤»\n\n    sub f( --> Int:D ){ Nil };  # this definedness constraint is ignored\n    my Int:D $i = f;            # this definedness constraint is not ignored, so throws\n    CATCH { default { put .^name, ': ', .Str } };\n    # OUTPUT: «X::TypeCheck::Assignment: Type check failed in assignment to $y; expected Int but got Any (Any)»\n\n    sub g( --> Int:D ){ fail \"oops\" }; # this definedness constraint is ignored\n    my Any:D $h = g;                   # failure object matches Any:D, so is assigned\n\nbut\n\n    my Int:D $j = g;\n    # It will throw both exceptions:\n    # Earlier failure:\n    #  oops\n    #   in sub g at <unknown file> line 1\n    #   in block <unit> at <unknown file> line 1\n    #\n    # Final error:\n    #  Type check failed in assignment to $j; expected Int:D but got Failure (Failure.new(exception...)\n    #   in block <unit> at <unknown file> line 1\n\n\nBecause an untyped variable is type Any, assigning a Nil to one will result\nin an (Any) type object.\n\n    my $x = Nil;\n    $x.say;          # OUTPUT: «(Any)␤»\n    my Int $y = $x;  # will throw an exception\n    CATCH { default { put .^name, ': ', .Str } };\n    # OUTPUT: «X::TypeCheck::Assignment: Type check failed in assignment to $y; expected Int but got Any (Any)␤»\n\nIf you are looking for a variable which transforms objects into type\nobjects when said variable appears on the right-hand side, you can type the\ncontainer as Nil.\n\n    my Nil $x;\n    my Str $s = $x;\n    $s.say;          # OUTPUT: «(Str)␤»\n\nThere is an important exception to this transforms-into-type-object rule:\nassigning Nil to a variable which has a default will restore that default.\n\n    my Int $x is default(42) = -1;\n    my $y = 1;\n    for $x, $y -> $val is rw { $val = Nil unless $val > 0 }\n    $x.say;          # OUTPUT: «42␤»\n\n","n":"Nil","t":"Nil"},{"n":"&infix:<=:=>","t":"Sub+{is-pure}+{Precedence}","k":"v"},{"k":"s","m":1,"n":"infix:<=:=>","s":{"r":"Mu","p":["$?"]}},{"m":1,"k":"s","s":{"r":"Mu","p":["Mu \\a","Mu \\b"]},"n":"infix:<=:=>"},{"k":"v","n":"&infix:<…>","t":"Sub"},{"m":1,"k":"s","n":"infix:<…>","s":{"r":"Mu","p":["|c is raw"]}},{"n":"&trait_mod:<will>","t":"Sub","k":"v"},{"m":1,"k":"s","n":"trait_mod:<will>","s":{"r":"Mu","p":["Attribute:D $attr","|c is raw"]}},{"n":"trait_mod:<will>","s":{"r":"Mu","p":["Attribute $attr","Mu :$build!"]},"k":"s","m":1},{"s":{"p":["Variable:D $v","$block","|c is raw"],"r":"Mu"},"n":"trait_mod:<will>","m":1,"k":"s"},{"k":"s","m":1,"s":{"r":"Mu","p":["Variable:D $v","$block",":$begin!"]},"n":"trait_mod:<will>"},{"m":1,"k":"s","s":{"r":"Mu","p":["Variable:D $v","$block",":$check!"]},"n":"trait_mod:<will>"},{"s":{"r":"Mu","p":["Variable:D $v","$block",":$final!"]},"n":"trait_mod:<will>","k":"s","m":1},{"s":{"p":["Variable:D $v","$block",":$init!"],"r":"Mu"},"n":"trait_mod:<will>","k":"s","m":1},{"s":{"r":"Mu","p":["Variable:D $v","$block",":$end!"]},"n":"trait_mod:<will>","k":"s","m":1},{"s":{"r":"Mu","p":["Variable:D $v","$block",":$enter!"]},"n":"trait_mod:<will>","k":"s","m":1},{"k":"s","m":1,"s":{"p":["Variable:D $v","$block",":$leave!"],"r":"Mu"},"n":"trait_mod:<will>"},{"s":{"p":["Variable:D $v","$block",":$keep!"],"r":"Mu"},"n":"trait_mod:<will>","m":1,"k":"s"},{"n":"trait_mod:<will>","s":{"p":["Variable:D $v","$block",":$undo!"],"r":"Mu"},"k":"s","m":1},{"m":1,"k":"s","s":{"p":["Variable:D $v","$block",":$first!"],"r":"Mu"},"n":"trait_mod:<will>"},{"m":1,"k":"s","n":"trait_mod:<will>","s":{"p":["Variable:D $v","$block",":$next!"],"r":"Mu"}},{"m":1,"k":"s","n":"trait_mod:<will>","s":{"p":["Variable:D $v","$block",":$last!"],"r":"Mu"}},{"m":1,"k":"s","s":{"p":["Variable:D $v","$block",":$pre!"],"r":"Mu"},"n":"trait_mod:<will>"},{"n":"trait_mod:<will>","s":{"r":"Mu","p":["Variable:D $v","$block",":$post!"]},"m":1,"k":"s"},{"s":{"p":["Variable:D $v","$block",":$compose!"],"r":"Mu"},"n":"trait_mod:<will>","k":"s","m":1},{"n":"ForeignCode","t":"ForeignCode","k":"c","m":[{"k":"m","m":0,"n":"arity","s":{"r":"Mu","p":["*%_"]}},{"s":{"p":["*%_"],"r":"Mu"},"n":"count","m":0,"k":"m"},{"m":0,"k":"m","n":"signature","s":{"r":"Mu","p":["*%_"]}},{"s":{"r":"Mu","p":["*%_"]},"n":"name","k":"m","m":0},{"s":{"p":["|"],"r":"Mu"},"n":"new","k":"m","m":0},{"m":0,"k":"m","n":"gist","s":{"p":["*%_"],"r":"Str:D"}},{"s":{"p":["*%_"],"r":"Str:D"},"n":"Str","m":0,"k":"m"},{"n":"perl","s":{"p":["*%_"],"r":"Str:D"},"k":"m","m":0},{"m":0,"k":"m","s":{"r":"Mu","p":["*%_"]},"n":"of"},{"k":"m","m":0,"s":{"p":["*%_"],"r":"Mu"},"n":"returns"},{"m":0,"k":"m","s":{"r":"Mu","p":["*%_"]},"n":"Capture"},{"s":{"r":"Mu","p":["@auto","%init","*%_"]},"n":"BUILDALL","k":"s","m":0}],"a":[{"n":"$!do","t":"Code","k":"v"}],"b":"A","d":"TITLE\nclass ForeignCode\n\nSUBTITLE\nRakudo-specific class that wraps around code in other languages (generally\nNQP)\n\n    class ForeignCode does Callable {}\n\nThis is a Rakudo specific class, and as such it is advisable not to use it\nin your own code, since its interface might change or even disappear in the\nfuture. This is provided here only as a reference\n\nForeignCode is a Raku wrapper around code that is not written originally in\nthat language; its intention is to use these blocks of code in Callable\ncontexts easily. For instance, subs have some anonymous functions that are\nactually ForeignCode.\n\n    sub does-nothing(){};\n    say $_.name ~ ' → ' ~ $_.^name for &does-nothing.^methods;\n    # OUTPUT: «<anon> → ForeignCode␤<anon> → ForeignCode␤soft → Method␤…»\n\n\nThis script will map method names to their class, and it shows that\nroutines, in particular, have several methods that are actually ForeignCode\ninstead of "},{"t":"NFD","n":"NFD","d":"TITLE\nclass NFD\n\nSUBTITLE\nCodepoint string in Normal Form D (decomposed)\n\n    class NFD is Uni {}\n\nA Codepoint string in the \"D\" Unicode Normalization Form","m":[{"k":"m","m":0,"s":{"r":"Mu","p":["|"]},"n":"new"},{"m":0,"k":"m","n":"NFD","s":{"r":"Mu","p":["*%_"]}},{"n":"BUILDALL","s":{"p":["@auto","%init","*%_"],"r":"Mu"},"k":"s","m":0},{"s":{"r":"Mu","p":["*%_"]},"n":"list","k":"m","m":0},{"n":"new","s":{"p":["*@codes","*%_"],"r":"Mu"},"m":0,"k":"m"},{"s":{"r":"Mu","p":["*%_"]},"n":"perl","k":"m","m":1},{"m":1,"k":"m","s":{"p":["*%_"],"r":"Mu"},"n":"perl"},{"k":"m","m":1,"s":{"p":["*%_"],"r":"Mu"},"n":"perl"},{"m":0,"k":"m","n":"Numeric","s":{"r":"Mu","p":["*%_"]}},{"k":"m","m":0,"s":{"p":["*%_"],"r":"Mu"},"n":"of"},{"k":"m","m":0,"s":{"p":["*%_"],"r":"Mu"},"n":"codes"},{"s":{"p":["*%_"],"r":"Mu"},"n":"NFD","m":0,"k":"m"},{"m":0,"k":"m","s":{"p":["*%_"],"r":"Mu"},"n":"NFKD"},{"s":{"r":"Mu","p":["*%_"]},"n":"NFC","m":0,"k":"m"},{"n":"Int","s":{"p":["*%_"],"r":"Mu"},"m":0,"k":"m"},{"s":{"p":["*%_"],"r":"Mu"},"n":"NFKC","m":0,"k":"m"},{"s":{"p":["*%_"],"r":"Mu"},"n":"Str","k":"m","m":1},{"n":"Str","s":{"p":["*%_"],"r":"Mu"},"m":1,"k":"m"},{"k":"m","m":1,"n":"Str","s":{"r":"Mu","p":["*%_"]}},{"n":"EXISTS-POS","s":{"r":"Bool","p":["Any:D $","*%_"]},"k":"m","m":1},{"n":"EXISTS-POS","s":{"p":["Any:U $pos","*%_"],"r":"Mu"},"m":1,"k":"m"},{"n":"EXISTS-POS","s":{"r":"Bool:D","p":["int \\pos","*%_"]},"m":1,"k":"m"},{"n":"EXISTS-POS","s":{"p":["Int:D \\pos","*%_"],"r":"Bool:D"},"k":"m","m":1},{"m":1,"k":"m","s":{"r":"Bool:D","p":["Num:D \\pos","*%_"]},"n":"EXISTS-POS"},{"s":{"r":"Bool:D","p":["Any:D \\pos","*%_"]},"n":"EXISTS-POS","m":1,"k":"m"},{"k":"m","m":1,"s":{"p":["Any:U \\pos","*%_"],"r":"Mu"},"n":"EXISTS-POS"},{"s":{"p":["\\one","\\two","*%_"],"r":"Bool:D"},"n":"EXISTS-POS","m":1,"k":"m"},{"k":"m","m":1,"s":{"r":"Bool:D","p":["\\one","\\two","\\three","*%_"]},"n":"EXISTS-POS"},{"n":"EXISTS-POS","s":{"r":"Bool:D","p":["**@indices","*%_"]},"k":"m","m":1},{"m":1,"k":"m","n":"EXISTS-POS","s":{"p":["int \\pos","*%_"],"r":"Mu"}},{"k":"m","m":1,"n":"EXISTS-POS","s":{"r":"Mu","p":["Int:D \\pos","*%_"]}},{"s":{"r":"Mu","p":["*%_"]},"n":"Uni","k":"m","m":0},{"k":"m","m":0,"n":"elems","s":{"r":"Mu","p":["*%_"]}},{"s":{"r":"Mu","p":["*%_"]},"n":"gist","k":"m","m":1},{"m":1,"k":"m","s":{"r":"Mu","p":["*%_"]},"n":"gist"},{"n":"gist","s":{"r":"Mu","p":["*%_"]},"k":"m","m":1},{"m":1,"k":"m","s":{"r":"Bool","p":["*%_"]},"n":"Bool"},{"k":"m","m":1,"n":"Bool","s":{"p":["*%_"],"r":"Mu"}},{"n":"Bool","s":{"r":"Mu","p":["*%_"]},"k":"m","m":1},{"k":"m","m":1,"s":{"p":["int \\pos","*%_"],"r":"Mu"},"n":"AT-POS"},{"m":1,"k":"m","n":"AT-POS","s":{"r":"Mu","p":["Int:D \\pos","*%_"]}},{"s":{"r":"Mu","p":["Num:D \\pos","*%_"]},"n":"AT-POS","m":1,"k":"m"},{"n":"AT-POS","s":{"r":"Mu","p":["Any:D \\pos","*%_"]},"k":"m","m":1},{"k":"m","m":1,"s":{"r":"Mu","p":["int \\pos","*%_"]},"n":"AT-POS"},{"m":1,"k":"m","s":{"p":["Int:D \\pos","*%_"],"r":"Mu"},"n":"AT-POS"},{"n":"AT-POS","s":{"r":"Mu","p":["Num:D \\pos","*%_"]},"m":1,"k":"m"},{"k":"m","m":1,"s":{"p":["Any:D \\pos","*%_"],"r":"Mu"},"n":"AT-POS"},{"m":1,"k":"m","s":{"r":"Mu","p":["Any:U \\pos","*%_"]},"n":"AT-POS"},{"k":"m","m":1,"n":"AT-POS","s":{"r":"Mu","p":["\\one","\\two","*%_"]}},{"s":{"p":["\\one","\\two","\\three","*%_"],"r":"Mu"},"n":"AT-POS","m":1,"k":"m"},{"m":1,"k":"m","n":"AT-POS","s":{"r":"Mu","p":["**@indices","*%_"]}},{"k":"m","m":1,"s":{"p":["int \\pos","*%_"],"r":"Mu"},"n":"AT-POS"},{"n":"AT-POS","s":{"p":["Int:D \\pos","*%_"],"r":"Mu"},"m":1,"k":"m"},{"m":0,"k":"s","s":{"r":"Mu","p":["@auto","%init","*%_"]},"n":"BUILDALL"}],"k":"c","b":"A"},{"t":"Sub","n":"&dd","k":"v"},{"s":{"p":["|"],"r":"Mu"},"n":"dd","k":"s","m":0},{"t":"Sub+{Precedence}","n":"&infix:<and>","k":"v"},{"s":{"p":["Mu $x = Bool::True"],"r":"Mu"},"n":"infix:<and>","k":"s","m":1},{"n":"infix:<and>","s":{"p":["Mu \\a","&b"],"r":"Mu"},"k":"s","m":1},{"k":"s","m":1,"n":"infix:<and>","s":{"p":["Mu \\a","Mu \\b"],"r":"Mu"}},{"t":"Sub","n":"&samecase","k":"v"},{"m":1,"k":"s","n":"samecase","s":{"r":"Mu","p":["Cool:D $string","Cool:D $pattern"]}},{"k":"v","t":"Sub","n":"&comb"},{"m":1,"k":"s","s":{"p":["Regex $matcher","Cool $input","$limit = *"],"r":"Mu"},"n":"comb"},{"m":1,"k":"s","n":"comb","s":{"p":["Str $matcher","Cool $input","$limit = *"],"r":"Mu"}},{"n":"comb","s":{"r":"Mu","p":["Int:D $size","Cool $input","$limit = *"]},"m":1,"k":"s"},{"k":"v","t":"Sub+{is-pure}","n":"&item"},{"m":1,"k":"s","s":{"r":"Mu","p":["\\x"]},"n":"item"},{"m":1,"k":"s","n":"item","s":{"p":["|c is raw"],"r":"Mu"}},{"m":1,"k":"s","s":{"r":"Mu","p":["Mu $a"]},"n":"item"},{"k":"v","t":"Sub","n":"&list"},{"k":"s","m":1,"s":{"p":["+\\l is raw"],"r":"Mu"},"n":"list"},{"d":"TITLE\nclass NFKD\n\nSUBTITLE\nCodepoint string in Normal Form KD (compatibility decomposed)\n\n    class NFKD is Uni {}\n\nA Codepoint string in Unicode Normalization Form KD. It is created by\nCompatibility Decomposition. For more information on what this means, see\nUnicode TR15.","b":"A","k":"c","m":[{"s":{"r":"Mu","p":["|"]},"n":"new","m":0,"k":"m"},{"m":0,"k":"m","s":{"p":["*%_"],"r":"Mu"},"n":"NFKD"},{"k":"s","m":0,"n":"BUILDALL","s":{"p":["@auto","%init","*%_"],"r":"Mu"}},{"k":"m","m":0,"n":"list","s":{"p":["*%_"],"r":"Mu"}},{"m":0,"k":"m","n":"new","s":{"p":["*@codes","*%_"],"r":"Mu"}},{"m":1,"k":"m","n":"perl","s":{"r":"Mu","p":["*%_"]}},{"k":"m","m":1,"n":"perl","s":{"p":["*%_"],"r":"Mu"}},{"k":"m","m":1,"s":{"p":["*%_"],"r":"Mu"},"n":"perl"},{"k":"m","m":0,"n":"Numeric","s":{"r":"Mu","p":["*%_"]}},{"s":{"p":["*%_"],"r":"Mu"},"n":"of","m":0,"k":"m"},{"k":"m","m":0,"s":{"r":"Mu","p":["*%_"]},"n":"codes"},{"m":0,"k":"m","n":"NFD","s":{"p":["*%_"],"r":"Mu"}},{"s":{"r":"Mu","p":["*%_"]},"n":"NFKD","k":"m","m":0},{"s":{"p":["*%_"],"r":"Mu"},"n":"NFC","m":0,"k":"m"},{"n":"Int","s":{"r":"Mu","p":["*%_"]},"m":0,"k":"m"},{"m":0,"k":"m","s":{"r":"Mu","p":["*%_"]},"n":"NFKC"},{"k":"m","m":1,"s":{"r":"Mu","p":["*%_"]},"n":"Str"},{"n":"Str","s":{"r":"Mu","p":["*%_"]},"k":"m","m":1},{"s":{"r":"Mu","p":["*%_"]},"n":"Str","k":"m","m":1},{"m":1,"k":"m","n":"EXISTS-POS","s":{"p":["Any:D $","*%_"],"r":"Bool"}},{"n":"EXISTS-POS","s":{"p":["Any:U $pos","*%_"],"r":"Mu"},"k":"m","m":1},{"m":1,"k":"m","n":"EXISTS-POS","s":{"p":["int \\pos","*%_"],"r":"Bool:D"}},{"m":1,"k":"m","s":{"p":["Int:D \\pos","*%_"],"r":"Bool:D"},"n":"EXISTS-POS"},{"k":"m","m":1,"n":"EXISTS-POS","s":{"p":["Num:D \\pos","*%_"],"r":"Bool:D"}},{"k":"m","m":1,"s":{"p":["Any:D \\pos","*%_"],"r":"Bool:D"},"n":"EXISTS-POS"},{"n":"EXISTS-POS","s":{"p":["Any:U \\pos","*%_"],"r":"Mu"},"m":1,"k":"m"},{"s":{"p":["\\one","\\two","*%_"],"r":"Bool:D"},"n":"EXISTS-POS","k":"m","m":1},{"k":"m","m":1,"n":"EXISTS-POS","s":{"r":"Bool:D","p":["\\one","\\two","\\three","*%_"]}},{"s":{"r":"Bool:D","p":["**@indices","*%_"]},"n":"EXISTS-POS","k":"m","m":1},{"s":{"p":["int \\pos","*%_"],"r":"Mu"},"n":"EXISTS-POS","k":"m","m":1},{"m":1,"k":"m","n":"EXISTS-POS","s":{"r":"Mu","p":["Int:D \\pos","*%_"]}},{"n":"Uni","s":{"p":["*%_"],"r":"Mu"},"m":0,"k":"m"},{"s":{"r":"Mu","p":["*%_"]},"n":"elems","k":"m","m":0},{"k":"m","m":1,"s":{"r":"Mu","p":["*%_"]},"n":"gist"},{"m":1,"k":"m","s":{"r":"Mu","p":["*%_"]},"n":"gist"},{"n":"gist","s":{"p":["*%_"],"r":"Mu"},"k":"m","m":1},{"n":"Bool","s":{"p":["*%_"],"r":"Bool"},"k":"m","m":1},{"m":1,"k":"m","n":"Bool","s":{"p":["*%_"],"r":"Mu"}},{"k":"m","m":1,"n":"Bool","s":{"r":"Mu","p":["*%_"]}},{"n":"AT-POS","s":{"p":["int \\pos","*%_"],"r":"Mu"},"k":"m","m":1},{"m":1,"k":"m","s":{"r":"Mu","p":["Int:D \\pos","*%_"]},"n":"AT-POS"},{"n":"AT-POS","s":{"p":["Num:D \\pos","*%_"],"r":"Mu"},"m":1,"k":"m"},{"s":{"r":"Mu","p":["Any:D \\pos","*%_"]},"n":"AT-POS","k":"m","m":1},{"m":1,"k":"m","n":"AT-POS","s":{"p":["int \\pos","*%_"],"r":"Mu"}},{"n":"AT-POS","s":{"r":"Mu","p":["Int:D \\pos","*%_"]},"k":"m","m":1},{"k":"m","m":1,"s":{"p":["Num:D \\pos","*%_"],"r":"Mu"},"n":"AT-POS"},{"m":1,"k":"m","n":"AT-POS","s":{"r":"Mu","p":["Any:D \\pos","*%_"]}},{"n":"AT-POS","s":{"p":["Any:U \\pos","*%_"],"r":"Mu"},"m":1,"k":"m"},{"m":1,"k":"m","n":"AT-POS","s":{"r":"Mu","p":["\\one","\\two","*%_"]}},{"m":1,"k":"m","n":"AT-POS","s":{"p":["\\one","\\two","\\three","*%_"],"r":"Mu"}},{"n":"AT-POS","s":{"p":["**@indices","*%_"],"r":"Mu"},"m":1,"k":"m"},{"s":{"p":["int \\pos","*%_"],"r":"Mu"},"n":"AT-POS","k":"m","m":1},{"k":"m","m":1,"s":{"p":["Int:D \\pos","*%_"],"r":"Mu"},"n":"AT-POS"},{"s":{"p":["@auto","%init","*%_"],"r":"Mu"},"n":"BUILDALL","k":"s","m":0}],"t":"NFKD","n":"NFKD"},{"k":"e","n":"PromiseStatus","t":"PromiseStatus"},{"n":"PromiseStatus::Kept","t":"PromiseStatus","k":"e"},{"t":"PromiseStatus","n":"PromiseStatus::Planned","k":"e"},{"k":"e","n":"PromiseStatus::Broken","t":"PromiseStatus"},{"n":"&uniprops","t":"Sub","k":"v"},{"n":"uniprops","s":{"r":"Mu","p":["Str:D $str","Stringy:D $propname = \"General_Category\""]},"m":1,"k":"s"},{"k":"v","n":"&return-rw","t":"Sub"},{"k":"s","m":1,"s":{"p":[],"r":"Nil"},"n":"return-rw"},{"k":"s","m":1,"n":"return-rw","s":{"r":"Nil","p":["Mu \\x"]}},{"m":1,"k":"s","n":"return-rw","s":{"r":"Nil","p":["**@x is raw"]}},{"t":"Sub+{Callable[Nil]}","n":"&emit","k":"v"},{"m":0,"k":"s","n":"emit","s":{"p":["Mu \\value"],"r":"Nil"}},{"n":"&pop","t":"Sub","k":"v"},{"s":{"r":"Mu","p":["@a"]},"n":"pop","m":1,"k":"s"},{"t":"Sub","n":"&close","k":"v"},{"s":{"p":["IO::Handle:D $fh"],"r":"Mu"},"n":"close","k":"s","m":1},{"s":{"p":["Channel:D $channel"],"r":"Mu"},"n":"close","k":"s","m":1},{"k":"n","n":"uint8","t":"uint8"},{"t":"Block","n":"Block","d":"TITLE\nclass Block\n\nSUBTITLE\nCode object with its own lexical scope\n\n    class Block is Code { }\n\nA Block is a code object meant for small-scale code reuse. A block is\ncreated syntactically by a list of statements enclosed in curly braces.\n\nWithout an explicit signature or placeholder arguments, a block has $_ as a\npositional argument\n\n    my $block = { uc $_; };\n    say $block.^name;           # OUTPUT: «Block␤»\n    say $block('hello');        # OUTPUT: «HELLO␤»\n\nA block can have a Signature between ->  or <->  and the block:\n\n    my $add = -> $a, $b = 2 { $a + $b };\n    say $add(40);               # OUTPUT: «42␤»\n\nIf the signature is introduced with <-> , then the parameters are marked as\nrw by default: \n\n    my $swap = <-> $a, $b { ($a, $b) = ($b, $a) };\n    my ($a, $b) = (2, 4);\n    $swap($a, $b);\n    say $a;                     # OUTPUT: «4␤»\n\nBlocks that aren't of type Routine (which is a subclass of Block) are\ntransparent to return.\n\n    sub f() {\n        say <a b c>.map: { return 42 };\n                       #   ^^^^^^   exits &f, not just the block\n    }\n\nThe last statement is the implicit return value of the block.\n\n    say {1}.(); # OUTPUT: «1␤»\n\nBare blocks are automatically executed in the order they appear:\n\n    say 1;                # OUTPUT: «1␤»\n    {\n        say 2;            # OUTPUT: «2␤»; executed directly, not a Block object\n    }\n    say 3;                # OUTPUT: «3␤»","a":[{"k":"v","t":"Mu","n":"$!why"},{"k":"v","n":"$!do","t":"Code"},{"t":"Signature","n":"$!signature","k":"v"},{"t":"List","n":"@!compstuff","k":"v"}],"b":"A","k":"c","m":[{"s":{"r":"Mu","p":["*%_"]},"n":"of","m":0,"k":"m"},{"s":{"p":["*%_"],"r":"Mu"},"n":"returns","m":0,"k":"m"},{"s":{"p":["Str:D \\name","&block","*%_"],"r":"Nil"},"n":"add_phaser","m":0,"k":"m"},{"s":{"r":"Nil","p":["Str $name","*%_"]},"n":"fire_if_phasers","m":0,"k":"m"},{"s":{"p":["Str $name","*%_"],"r":"Nil"},"n":"fire_phasers","m":0,"k":"m"},{"n":"has-phasers","s":{"p":["*%_"],"r":"Mu"},"k":"m","m":0},{"k":"m","m":0,"s":{"p":["Str:D \\name","*%_"],"r":"Mu"},"n":"has-phaser"},{"k":"m","m":0,"n":"phasers","s":{"r":"Mu","p":["Str:D $name","*%_"]}},{"k":"m","m":0,"s":{"p":["*%_"],"r":"Mu"},"n":"WHY"},{"m":0,"k":"m","n":"set_why","s":{"p":["$why","*%_"],"r":"Nil"}},{"s":{"r":"Mu","p":["*%_"]},"n":"perl","k":"m","m":1},{"k":"m","m":1,"n":"perl","s":{"r":"Mu","p":["*%_"]}},{"n":"perl","s":{"r":"Mu","p":["*%_"]},"k":"m","m":1},{"s":{"p":["*%_"],"r":"Mu"},"n":"perl","k":"m","m":1},{"n":"POSITIONS","s":{"r":"Mu","p":["Failure:D \\failure","*%_"]},"k":"m","m":1},{"k":"m","m":1,"s":{"r":"Mu","p":["Any:D \\list","*%_"]},"n":"POSITIONS"},{"n":"BUILDALL","s":{"p":["@auto","%init","*%_"],"r":"Mu"},"m":0,"k":"s"},{"k":"m","m":0,"n":"static_id","s":{"p":["*%_"],"r":"Mu"}},{"k":"m","m":0,"n":"returns","s":{"p":["*%_"],"r":"Mu"}},{"s":{"r":"Mu","p":["Capture:D $c","*%_"]},"n":"cando","k":"m","m":0},{"s":{"r":"Mu","p":["*%_"]},"n":"outer","m":0,"k":"m"},{"k":"m","m":1,"n":"new","s":{"r":"Mu","p":["*%attrinit"]}},{"m":1,"k":"m","s":{"r":"Mu","p":["$","*@","*%_"]},"n":"new"},{"n":"new","s":{"r":"Mu","p":["*%_"]},"m":1,"k":"m"},{"k":"m","m":0,"n":"count","s":{"p":["*%_"],"r":"Mu"}},{"m":1,"k":"m","s":{"p":["\\topic","*%_"],"r":"Mu"},"n":"ACCEPTS"},{"n":"ACCEPTS","s":{"r":"Mu","p":["Mu:U \\topic","*%_"]},"k":"m","m":1},{"m":1,"k":"m","s":{"p":["Mu:D \\a","*%_"],"r":"Mu"},"n":"ACCEPTS"},{"k":"m","m":1,"s":{"r":"Bool","p":["Mu:U $","*%_"]},"n":"ACCEPTS"},{"s":{"r":"Bool:D","p":["\\topic","*%_"]},"n":"ACCEPTS","k":"m","m":1},{"m":1,"k":"m","n":"ACCEPTS","s":{"r":"Mu","p":["Mu $topic is raw","*%_"]}},{"k":"m","m":1,"n":"perl","s":{"r":"Mu","p":["*%_"]}},{"s":{"p":["*%_"],"r":"Mu"},"n":"perl","m":1,"k":"m"},{"k":"m","m":1,"n":"perl","s":{"r":"Mu","p":["*%_"]}},{"k":"m","m":0,"n":"of","s":{"r":"Mu","p":["*%_"]}},{"n":"file","s":{"p":["*%_"],"r":"Mu"},"m":0,"k":"m"},{"s":{"p":["*%_"],"r":"Mu"},"n":"signature","k":"m","m":0},{"k":"m","m":0,"n":"Capture","s":{"p":["*%_"],"r":"Mu"}},{"m":1,"k":"m","n":"Str","s":{"p":["*%_"],"r":"Mu"}},{"n":"Str","s":{"r":"Mu","p":["*%_"]},"m":1,"k":"m"},{"s":{"p":["*%_"],"r":"Mu"},"n":"Str","k":"m","m":1},{"k":"m","m":0,"n":"assuming","s":{"p":["|primers is raw"],"r":"Mu"}},{"s":{"r":"Mu","p":["*%_"]},"n":"prec","k":"m","m":1},{"n":"prec","s":{"r":"Mu","p":["Str:D $","*%_"]},"m":1,"k":"m"},{"s":{"r":"Mu","p":["*%_"]},"n":"arity","m":0,"k":"m"},{"m":0,"k":"m","n":"line","s":{"r":"Mu","p":["*%_"]}},{"s":{"r":"Mu","p":["@auto","%init","*%_"]},"n":"BUILDALL","k":"s","m":0}]},{"t":"Sub","n":"&trait_mod:<trusts>","k":"v"},{"k":"s","m":1,"s":{"p":["Mu:U $truster","Mu:U $trustee"],"r":"Mu"},"n":"trait_mod:<trusts>"},{"k":"v","t":"Sub","n":"&atomic-fetch-inc"},{"n":"atomic-fetch-inc","s":{"r":"atomicint","p":["atomicint $target is rw"]},"k":"s","m":1},{"n":"&cosh","t":"Sub+{is-pure}","k":"v"},{"m":1,"k":"s","n":"cosh","s":{"p":["Numeric \\x"],"r":"Mu"}},{"k":"s","m":1,"s":{"r":"Mu","p":["Cool \\x"]},"n":"cosh"},{"s":{"p":["num $x"],"r":"num"},"n":"cosh","k":"s","m":1},{"t":"Sub","n":"&warn","k":"v"},{"s":{"p":["*@msg"],"r":"Mu"},"n":"warn","m":1,"k":"s"},{"k":"s","m":1,"n":"warn","s":{"r":"Mu","p":["Junction:D \\j"]}},{"t":"Sub+{is-pure}+{Precedence}","n":"&infix:<eq>","k":"v"},{"k":"s","m":1,"s":{"p":["$x?"],"r":"Mu"},"n":"infix:<eq>"},{"n":"infix:<eq>","s":{"r":"Mu","p":["\\a","\\b"]},"m":1,"k":"s"},{"n":"infix:<eq>","s":{"r":"Mu","p":["Blob:D \\a","Blob:D \\b"]},"k":"s","m":1},{"k":"s","m":1,"s":{"p":["Str:D \\a","Str:D \\b"],"r":"Bool:D"},"n":"infix:<eq>"},{"s":{"r":"Bool:D","p":["str $a","str $b"]},"n":"infix:<eq>","k":"s","m":1},{"t":"Sub","n":"&cis","k":"v"},{"k":"s","m":1,"n":"cis","s":{"r":"Mu","p":["Real $a"]}},{"k":"v","n":"&infix:<..^>","t":"Sub+{is-pure}+{Precedence}"},{"n":"infix:<..^>","s":{"p":["$min","$max"],"r":"Mu"},"m":1,"k":"s"},{"t":"Sub+{is-pure}","n":"&log","k":"v"},{"k":"s","m":1,"s":{"r":"Mu","p":["Numeric $x"]},"n":"log"},{"k":"s","m":1,"s":{"p":["Numeric $x","Numeric $base"],"r":"Mu"},"n":"log"},{"s":{"p":["Cool $x"],"r":"Mu"},"n":"log","m":1,"k":"s"},{"s":{"r":"Mu","p":["Cool $x","Cool $base"]},"n":"log","k":"s","m":1},{"s":{"p":["num $x"],"r":"num"},"n":"log","m":1,"k":"s"},{"n":"&infix:<(&)>","t":"Sub+{is-pure}+{Precedence}","k":"v"},{"m":1,"k":"s","n":"infix:<(&)>","s":{"r":"Mu","p":[]}},{"n":"infix:<(&)>","s":{"r":"Mu","p":["QuantHash:D \\a"]},"k":"s","m":1},{"s":{"r":"Mu","p":["\\a"]},"n":"infix:<(&)>","m":1,"k":"s"},{"k":"s","m":1,"n":"infix:<(&)>","s":{"r":"Mu","p":["Setty:D \\a","Setty:D \\b"]}},{"k":"s","m":1,"s":{"p":["Setty:D \\a","Baggy:D \\b"],"r":"Mu"},"n":"infix:<(&)>"},{"s":{"r":"Mu","p":["Baggy:D \\a","Setty:D \\b"]},"n":"infix:<(&)>","m":1,"k":"s"},{"k":"s","m":1,"s":{"p":["Setty:D \\a","Mixy:D \\b"],"r":"Mu"},"n":"infix:<(&)>"},{"n":"infix:<(&)>","s":{"r":"Mu","p":["Mixy:D \\a","Setty:D \\b"]},"m":1,"k":"s"},{"m":1,"k":"s","n":"infix:<(&)>","s":{"p":["Baggy:D \\a","Baggy:D \\b"],"r":"Mu"}},{"s":{"r":"Mu","p":["Mixy:D \\a","Baggy:D \\b"]},"n":"infix:<(&)>","k":"s","m":1},{"n":"infix:<(&)>","s":{"p":["Baggy:D \\a","Mixy:D \\b"],"r":"Mu"},"m":1,"k":"s"},{"n":"infix:<(&)>","s":{"r":"Mu","p":["Mixy:D \\a","Mixy:D \\b"]},"m":1,"k":"s"},{"n":"infix:<(&)>","s":{"p":["Baggy:D \\a","Any:D \\b"],"r":"Mu"},"k":"s","m":1},{"k":"s","m":1,"n":"infix:<(&)>","s":{"r":"Mu","p":["Any:D \\a","Baggy:D \\b"]}},{"k":"s","m":1,"n":"infix:<(&)>","s":{"p":["Mixy:D \\a","Any:D \\b"],"r":"Mu"}},{"k":"s","m":1,"s":{"p":["Any:D \\a","Mixy:D \\b"],"r":"Mu"},"n":"infix:<(&)>"},{"s":{"p":["Map:D \\a","Map:D \\b"],"r":"Mu"},"n":"infix:<(&)>","k":"s","m":1},{"k":"s","m":1,"n":"infix:<(&)>","s":{"r":"Mu","p":["$","Failure:D \\b"]}},{"s":{"r":"Mu","p":["Failure:D \\a","$"]},"n":"infix:<(&)>","m":1,"k":"s"},{"k":"s","m":1,"n":"infix:<(&)>","s":{"r":"Mu","p":["\\a","\\b"]}},{"m":1,"k":"s","n":"infix:<(&)>","s":{"r":"Mu","p":["**@p"]}},{"t":"Sub","n":"&tc","k":"v"},{"k":"s","m":1,"s":{"p":["Cool $s"],"r":"Mu"},"n":"tc"},{"d":"TITLE\nrole Scheduler\n\nSUBTITLE\nScheme for automatically assigning tasks to threads\n\n    role Scheduler {\n        has &.uncaught_handler is rw\n    }\n\nCommon role for schedulers. A scheduler is a piece of code that determines\nwhich resources to use to run which task, and when.\n\nSome operations for example on Proc::Async, Promise, Supply allow you to\nspecify a scheduler explicitly; they generally expect those schedulers to\nfollow the interface defined by Scheduler\n\n","m":[{"s":{"r":"Mu","p":["$exception","*%_"]},"n":"handle_uncaught","k":"m","m":0},{"m":0,"k":"m","n":"cue","s":{"r":"Mu","p":["*%_"]}},{"n":"loads","s":{"p":["*%_"],"r":"Mu"},"m":0,"k":"m"}],"k":"ro","a":[{"n":"&.uncaught_handler","t":"Callable","k":"v"}],"b":"C","t":"Scheduler","n":"Scheduler"},{"k":"v","t":"Sub+{is-pure}","n":"&one"},{"m":1,"k":"s","s":{"r":"Mu","p":["@values"]},"n":"one"},{"n":"one","s":{"r":"Mu","p":["+\\values is raw"]},"m":1,"k":"s"},{"k":"e","n":"PROTO_UDP","t":"ProtocolType"},{"k":"v","n":"&max","t":"Sub+{is-pure}"},{"k":"s","m":1,"s":{"p":["+\\args is raw",":&by!"],"r":"Mu"},"n":"max"},{"s":{"p":["+\\args is raw"],"r":"Mu"},"n":"max","m":1,"k":"s"},{"n":"Pair","t":"Pair","a":[{"t":"Mu","n":"$.key","k":"v"},{"k":"v","n":"$.value","t":"Mu"},{"t":"Mu","n":"$!WHICH","k":"v"}],"b":"A","k":"c","m":[{"m":1,"k":"m","n":"new","s":{"r":"Mu","p":["Cool:D \\key","Mu \\value","*%_"]}},{"n":"new","s":{"r":"Mu","p":["Mu \\key","Mu \\value","*%_"]},"k":"m","m":1},{"m":1,"k":"m","s":{"r":"Mu","p":["Mu :$key!","Mu :$value!","*%_"]},"n":"new"},{"s":{"r":"Mu","p":["*%_"]},"n":"Pair","m":0,"k":"m"},{"k":"m","m":0,"n":"antipair","s":{"r":"Mu","p":["*%_"]}},{"k":"m","m":0,"n":"freeze","s":{"r":"Mu","p":["*%_"]}},{"n":"iterator","s":{"p":["*%_"],"r":"Mu"},"m":0,"k":"m"},{"m":0,"k":"m","n":"fmt","s":{"p":["$format = \"\\%s\\t\\%s\"","*%_"],"r":"Mu"}},{"s":{"r":"Mu","p":["*%_"]},"n":"FLATTENABLE_LIST","k":"m","m":0},{"s":{"r":"Mu","p":["*%_"]},"n":"FLATTENABLE_HASH","m":0,"k":"m"},{"m":0,"k":"m","n":"of","s":{"r":"Mu","p":["*%_"]}},{"k":"m","m":0,"s":{"p":["*%_"],"r":"Mu"},"n":"keyof"},{"s":{"r":"Mu","p":["*%twiddles"]},"n":"clone","m":1,"k":"m"},{"m":1,"k":"m","n":"clone","s":{"p":["*%twiddles"],"r":"Mu"}},{"s":{"p":["*%_"],"r":"Mu"},"n":"clone","k":"m","m":1},{"k":"m","m":1,"s":{"p":["*%_"],"r":"ValueObjAt:D"},"n":"WHICH"},{"m":1,"k":"m","n":"WHICH","s":{"r":"ObjAt:D","p":["*%_"]}},{"n":"WHICH","s":{"p":["*%_"],"r":"ObjAt:D"},"k":"m","m":1},{"k":"m","m":1,"s":{"p":["\\topic","*%_"],"r":"Mu"},"n":"ACCEPTS"},{"k":"m","m":1,"s":{"r":"Mu","p":["Mu:U \\topic","*%_"]},"n":"ACCEPTS"},{"k":"m","m":1,"s":{"p":["Mu:D \\a","*%_"],"r":"Mu"},"n":"ACCEPTS"},{"k":"m","m":1,"s":{"r":"Bool","p":["Mu:U $","*%_"]},"n":"ACCEPTS"},{"k":"m","m":1,"n":"ACCEPTS","s":{"p":["\\topic","*%_"],"r":"Bool:D"}},{"m":1,"k":"m","n":"ACCEPTS","s":{"r":"Mu","p":["%h","*%_"]}},{"s":{"p":["Pair:D $p","*%_"],"r":"Mu"},"n":"ACCEPTS","k":"m","m":1},{"n":"ACCEPTS","s":{"r":"Mu","p":["Mu $other","*%_"]},"k":"m","m":1},{"k":"m","m":1,"s":{"p":["*%_"],"r":"Mu"},"n":"keys"},{"n":"keys","s":{"p":["*%_"],"r":"Mu"},"m":1,"k":"m"},{"s":{"r":"Mu","p":["*%_"]},"n":"keys","m":1,"k":"m"},{"n":"kv","s":{"p":["*%_"],"r":"Mu"},"m":1,"k":"m"},{"m":1,"k":"m","n":"kv","s":{"r":"Mu","p":["*%_"]}},{"n":"kv","s":{"p":["*%_"],"r":"Mu"},"m":1,"k":"m"},{"n":"values","s":{"r":"Mu","p":["*%_"]},"m":1,"k":"m"},{"n":"values","s":{"p":["*%_"],"r":"Mu"},"k":"m","m":1},{"k":"m","m":1,"s":{"p":["*%_"],"r":"Mu"},"n":"values"},{"m":1,"k":"m","n":"pairs","s":{"r":"Mu","p":["*%_"]}},{"m":1,"k":"m","n":"pairs","s":{"p":["*%_"],"r":"Mu"}},{"m":1,"k":"m","n":"pairs","s":{"r":"Mu","p":["*%_"]}},{"k":"m","m":1,"n":"antipairs","s":{"r":"Mu","p":["*%_"]}},{"k":"m","m":1,"n":"antipairs","s":{"p":["*%_"],"r":"Mu"}},{"k":"m","m":1,"s":{"p":["*%_"],"r":"Mu"},"n":"antipairs"},{"k":"m","m":1,"n":"invert","s":{"r":"Mu","p":["*%_"]}},{"k":"m","m":1,"s":{"p":["*%_"],"r":"Mu"},"n":"invert"},{"k":"m","m":1,"s":{"p":["*%_"],"r":"Mu"},"n":"invert"},{"k":"m","m":1,"s":{"p":["*%_"],"r":"Mu"},"n":"Str"},{"n":"Str","s":{"p":["*%_"],"r":"Mu"},"k":"m","m":1},{"n":"Str","s":{"p":["*%_"],"r":"Mu"},"m":1,"k":"m"},{"s":{"p":["*%_"],"r":"Mu"},"n":"gist","k":"m","m":1},{"n":"gist","s":{"r":"Mu","p":["*%_"]},"k":"m","m":1},{"s":{"r":"Mu","p":["*%_"]},"n":"gist","m":1,"k":"m"},{"k":"m","m":1,"s":{"r":"Mu","p":["*%_"]},"n":"perl"},{"k":"m","m":1,"s":{"r":"Mu","p":["*%_"]},"n":"perl"},{"s":{"p":[":$arglist","*%_"],"r":"Mu"},"n":"perl","m":1,"k":"m"},{"s":{"p":["$key","*%_"],"r":"Mu"},"n":"AT-KEY","k":"m","m":1},{"m":1,"k":"m","s":{"r":"Mu","p":["\\key","*%_"]},"n":"AT-KEY"},{"m":1,"k":"m","s":{"r":"Mu","p":["$key","*%_"]},"n":"AT-KEY"},{"m":1,"k":"m","n":"EXISTS-KEY","s":{"p":["$","*%_"],"r":"Bool"}},{"n":"EXISTS-KEY","s":{"p":["$","*%_"],"r":"Bool"},"m":1,"k":"m"},{"n":"EXISTS-KEY","s":{"r":"Mu","p":["$key","*%_"]},"m":1,"k":"m"},{"n":"key","s":{"p":["*%_"],"r":"Mu"},"k":"m","m":0},{"s":{"r":"Mu","p":["*%_"]},"n":"value","k":"m","m":0},{"k":"s","m":0,"s":{"r":"Mu","p":["@auto","%init","*%_"]},"n":"BUILDALL"}],"d":"TITLE\nclass Pair\n\nSUBTITLE\nKey/value pair\n\n    class Pair does Associative {}\n\nConsists of two parts, a key and a value. Pairs can be seen as the atomic\nunits in Hashes, and they are also used in conjunction with named arguments\nand parameters.\n\n     There are many syntaxes for creating Pairs:\n\n    Pair.new('key', 'value'); # The canonical way\n    'key' => 'value';         # this...\n    :key<value>;              # ...means the same as this\n    :key<value1 value2>;      # But this is  key => <value1 value2>\n    :foo(127);                # short for  foo => 127\n    :127foo;                  # the same   foo => 127\n\nNote that last form supports Non-ASCII numerics as well:\n\n    # use MATHEMATICAL DOUBLE-STRUCK DIGIT THREE\n    say (:\uD835\uDFDBmath-three);         # OUTPUT: «math-three => 3␤»\n\nYou can also use an identifier-like literal as key; this will not need the\nquotes as long as it follows the syntax of ordinary identifiers:\n\n    (foo => 127)              # the same   foo => 127\n\nVariants of this are\n\n    :key;                     # same as   key => True\n    :!key;                    # same as   key => False\n\nAnd this other variant, to be used in routine invocation\n\n    sub colon-pair( :$key-value ) {\n        say $key-value;\n    }\n    my $key-value = 'value';\n    colon-pair( :$key-value );               # OUTPUT: «value␤»\n    colon-pair( key-value => $key-value );   # OUTPUT: «value␤»\n\n\n Colon pairs can be chained without a comma to create a List of Pairs.\nDepending on context you may have to be explicit when assigning colon\nlists.\n\n    sub s(*%h){ say %h.perl };\n    s :a1:b2;\n    # OUTPUT: «{:a1, :b2}␤»\n\n    my $manna = :a1:b2:c3;\n    say $manna.^name;\n    # OUTPUT: «Pair␤»\n\n    $manna = (:a1:b2:c3);\n    say $manna.^name;\n    # OUTPUT: «List␤»\n\nAny variable can be turned into a Pair of its name and its value.\n\n    my $bar = 10;\n    my $p   = :$bar;\n    say $p; # OUTPUT: «bar => 10␤»\n\nIt is worth noting that when assigning a Scalar as value of a Pair the\nvalue holds the container of the value itself. This means that it is\npossible to change the value from outside of the Pair itself:\n\n    my $v = 'value A';\n    my $pair = a => $v;\n    $pair.say;  # OUTPUT: «a => value A␤»\n\n    $v = 'value B';\n    $pair.say;  # OUTPUT: «a => value B␤»\n\n\nPlease also note that this behavior is totally unrelated to the way used to\nbuild the Pair itself (i.e., explicit usage of new, use of colon, fat\narrow), as well as if the Pair is bound to a variable.\n\nIt is possible to change the above behavior forcing the Pair to remove the\nscalar container and to hold the effective value itself via the method\nfreeze:\n\n    my $v = 'value B';\n    my $pair = a => $v;\n    $pair.freeze;\n    $v = 'value C';\n    $pair.say; # OUTPUT: «a => value B␤»\n\n\nAs Pair implements Associative role, its value can be accessed using\nAssociative subscription operator, however, due to Pair's singular nature,\nthe pair's value will be only returned for the pair's key. Nil object will\nbe returned for any other key. Subscript adverbs such as :exists can be\nused on Pair.\n\n    my $pair = a => 5;\n    say $pair<a>;           # OUTPUT: «5␤»\n    say $pair<a>:exists;    # OUTPUT: «True␤»\n    say $pair<no-such-key>; # OUTPUT: «Nil␤»\n\n\n"},{"n":"MixHash","t":"MixHash","m":[{"s":{"p":["*%_"],"r":"Mu"},"n":"total","m":0,"k":"m"},{"k":"m","m":0,"n":"clone","s":{"r":"Mu","p":["*%_"]}},{"s":{"r":"Mu","p":["*%_"]},"n":"of","k":"m","m":0},{"s":{"p":["*@pairs","*%_"],"r":"Mixy:D"},"n":"new-from-pairs","k":"m","m":0},{"s":{"p":["*%_"],"r":"Mu"},"n":"kxxv","m":1,"k":"m"},{"n":"kxxv","s":{"p":["*%_"],"r":"Mu"},"m":1,"k":"m"},{"m":0,"k":"m","s":{"p":["*%_"],"r":"Int"},"n":"default"},{"s":{"p":["*%_"],"r":"Mu"},"n":"grabpairs","m":1,"k":"m"},{"k":"m","m":1,"n":"grabpairs","s":{"p":["Callable:D $calculate","*%_"],"r":"Mu"}},{"k":"m","m":1,"n":"grabpairs","s":{"r":"Mu","p":["Whatever $","*%_"]}},{"k":"m","m":1,"n":"grabpairs","s":{"p":["\\count","*%_"],"r":"Mu"}},{"n":"pickpairs","s":{"p":["*%_"],"r":"Mu"},"k":"m","m":1},{"k":"m","m":1,"s":{"p":["Callable:D $calculate","*%_"],"r":"Mu"},"n":"pickpairs"},{"n":"pickpairs","s":{"p":["Whatever $","*%_"],"r":"Mu"},"k":"m","m":1},{"m":1,"k":"m","s":{"r":"Mu","p":["\\count","*%_"]},"n":"pickpairs"},{"s":{"r":"Mu","p":["$count?","*%_"]},"n":"grab","m":1,"k":"m"},{"s":{"r":"Mu","p":["|c is raw"]},"n":"grab","k":"m","m":1},{"m":1,"k":"m","n":"pick","s":{"p":["$count?","*%_"],"r":"Mu"}},{"s":{"p":["*%_"],"r":"Mu"},"n":"pick","m":1,"k":"m"},{"k":"m","m":1,"s":{"r":"Mu","p":["Callable:D $calculate","*%_"]},"n":"pick"},{"n":"pick","s":{"r":"Mu","p":["Whatever $","*%_"]},"m":1,"k":"m"},{"m":1,"k":"m","s":{"r":"Mu","p":["\\count","*%_"]},"n":"pick"},{"n":"roll","s":{"p":["*%_"],"r":"Mu"},"k":"m","m":1},{"s":{"p":["Whatever $","*%_"],"r":"Mu"},"n":"roll","m":1,"k":"m"},{"n":"roll","s":{"p":["Callable:D $calculate","*%_"],"r":"Mu"},"k":"m","m":1},{"k":"m","m":1,"n":"roll","s":{"p":["$count","*%_"],"r":"Mu"}},{"m":1,"k":"m","n":"roll","s":{"r":"Mu","p":["*%_"]}},{"k":"m","m":1,"s":{"r":"Mu","p":["Whatever $","*%_"]},"n":"roll"},{"m":1,"k":"m","n":"roll","s":{"p":["Callable:D $calculate","*%_"],"r":"Mu"}},{"n":"roll","s":{"p":["\\count","*%_"],"r":"Mu"},"m":1,"k":"m"},{"k":"m","m":1,"n":"classify-list","s":{"p":["&test","\\list","*%_"],"r":"Mu"}},{"n":"classify-list","s":{"p":["%test","|c is raw"],"r":"Mu"},"k":"m","m":1},{"n":"classify-list","s":{"p":["@test","|c is raw"],"r":"Mu"},"k":"m","m":1},{"n":"classify-list","s":{"r":"Mu","p":["&test","**@list","|c is raw"]},"k":"m","m":1},{"m":1,"k":"m","n":"categorize-list","s":{"r":"Mu","p":["&test","\\list","*%_"]}},{"s":{"r":"Mu","p":["%test","|c is raw"]},"n":"categorize-list","k":"m","m":1},{"s":{"p":["@test","|c is raw"],"r":"Mu"},"n":"categorize-list","m":1,"k":"m"},{"s":{"r":"Mu","p":["&test","**@list","|c is raw"]},"n":"categorize-list","m":1,"k":"m"},{"m":0,"k":"m","s":{"r":"Mu","p":["*%_"]},"n":"RAW-HASH"},{"s":{"r":"Mu","p":["*%_"]},"n":"keyof","k":"m","m":0},{"m":0,"k":"m","s":{"p":["\\elems","*%_"],"r":"Mu"},"n":"SET-SELF"},{"m":1,"k":"m","n":"STORE","s":{"r":"MixHash:D","p":["*@pairs","*%_"]}},{"s":{"p":["\\objects","\\values","*%_"],"r":"MixHash:D"},"n":"STORE","k":"m","m":1},{"m":1,"k":"m","s":{"r":"Mu","p":["|"]},"n":"STORE"},{"s":{"p":["*%_"],"r":"Int:D"},"n":"Int","k":"m","m":0},{"k":"m","m":0,"n":"Num","s":{"p":["*%_"],"r":"Num:D"}},{"s":{"p":["*%_"],"r":"Numeric:D"},"n":"Numeric","k":"m","m":0},{"k":"m","m":0,"n":"Real","s":{"r":"Real:D","p":["*%_"]}},{"m":0,"k":"m","s":{"r":"Mu","p":["*%_"]},"n":"Capture"},{"k":"m","m":0,"s":{"p":["Cool $format = \"\\%s\\t\\%s\"","$sep = \"\\n\"","*%_"],"r":"Mu"},"n":"fmt"},{"s":{"r":"Mu","p":["*%_"]},"n":"Setty","k":"m","m":1},{"k":"m","m":1,"s":{"p":["*%_"],"r":"Mu"},"n":"Setty"},{"k":"m","m":1,"n":"Baggy","s":{"r":"Mu","p":["*%_"]}},{"k":"m","m":1,"s":{"p":["*%_"],"r":"Mu"},"n":"Baggy"},{"k":"m","m":1,"n":"Mixy","s":{"p":["*%_"],"r":"Mu"}},{"s":{"p":["*%_"],"r":"Mu"},"n":"Mixy","k":"m","m":1},{"k":"m","m":1,"s":{"p":["$key","*%_"],"r":"Mu"},"n":"AT-KEY"},{"n":"AT-KEY","s":{"p":["\\key","*%_"],"r":"Mu"},"m":1,"k":"m"},{"k":"m","m":1,"n":"AT-KEY","s":{"p":["\\k","*%_"],"r":"Mu"}},{"m":1,"k":"m","s":{"p":["\\k","*%_"],"r":"Mu"},"n":"AT-KEY"},{"n":"AT-KEY","s":{"p":["$key","*%_"],"r":"Mu"},"m":1,"k":"m"},{"k":"m","m":1,"s":{"r":"Mu","p":["*%attrinit"]},"n":"new"},{"k":"m","m":1,"s":{"r":"Mu","p":["$","*@","*%_"]},"n":"new"},{"n":"new","s":{"r":"Mu","p":["*%_"]},"k":"m","m":1},{"k":"m","m":1,"s":{"r":"Baggy:D","p":["*%_"]},"n":"new"},{"k":"m","m":1,"n":"new","s":{"p":["\\value","*%_"],"r":"Baggy:D"}},{"s":{"p":["**@args","*%_"],"r":"Mu"},"n":"new","m":1,"k":"m"},{"k":"m","m":1,"s":{"r":"Mix:D","p":["*%_"]},"n":"Mix"},{"s":{"r":"Mu","p":[":$view","*%_"]},"n":"Mix","m":1,"k":"m"},{"n":"Mix","s":{"r":"Mu","p":["*%_"]},"k":"m","m":1},{"n":"MixHash","s":{"r":"MixHash:D","p":["*%_"]},"k":"m","m":1},{"k":"m","m":1,"n":"MixHash","s":{"r":"Mu","p":["*%_"]}},{"n":"MixHash","s":{"r":"Mu","p":["*%_"]},"k":"m","m":1},{"m":1,"k":"m","n":"iterator","s":{"p":["*%_"],"r":"Mu"}},{"n":"iterator","s":{"r":"Mu","p":["*%_"]},"m":1,"k":"m"},{"n":"iterator","s":{"r":"Mu","p":["*%_"]},"m":1,"k":"m"},{"n":"iterator","s":{"p":["*%_"],"r":"Mu"},"k":"m","m":1},{"k":"m","m":1,"n":"kv","s":{"p":["*%_"],"r":"Mu"}},{"n":"kv","s":{"p":["*%_"],"r":"Mu"},"k":"m","m":1},{"m":1,"k":"m","n":"kv","s":{"r":"Mu","p":["*%_"]}},{"m":1,"k":"m","n":"kv","s":{"p":["*%_"],"r":"Mu"}},{"n":"values","s":{"p":["*%_"],"r":"Mu"},"k":"m","m":1},{"k":"m","m":1,"n":"values","s":{"p":["*%_"],"r":"Mu"}},{"s":{"p":["*%_"],"r":"Mu"},"n":"values","k":"m","m":1},{"k":"m","m":1,"n":"values","s":{"r":"Mu","p":["*%_"]}},{"s":{"p":["*%_"],"r":"Mu"},"n":"hash","m":1,"k":"m"},{"m":1,"k":"m","s":{"p":["*%_"],"r":"Mu"},"n":"hash"},{"s":{"r":"Hash:D","p":["*%_"]},"n":"hash","k":"m","m":1},{"n":"hash","s":{"p":["*%_"],"r":"Hash:D"},"k":"m","m":1},{"k":"m","m":1,"s":{"p":["*%_"],"r":"Mu"},"n":"Hash"},{"s":{"p":["*%_"],"r":"Hash:D"},"n":"Hash","k":"m","m":1},{"m":1,"k":"m","s":{"r":"Hash:D","p":["*%_"]},"n":"Hash"},{"s":{"r":"Set:D","p":["*%_"]},"n":"Set","k":"m","m":1},{"m":1,"k":"m","s":{"p":["*%_"],"r":"Mu"},"n":"Set"},{"m":1,"k":"m","n":"Set","s":{"p":["*%_"],"r":"Mu"}},{"s":{"p":["*%_"],"r":"SetHash:D"},"n":"SetHash","m":1,"k":"m"},{"k":"m","m":1,"s":{"p":["*%_"],"r":"Mu"},"n":"SetHash"},{"s":{"r":"Mu","p":["*%_"]},"n":"SetHash","m":1,"k":"m"},{"n":"Bag","s":{"r":"Bag:D","p":["*%_"]},"k":"m","m":1},{"k":"m","m":1,"s":{"r":"Mu","p":["*%_"]},"n":"Bag"},{"n":"BagHash","s":{"r":"BagHash:D","p":["*%_"]},"m":1,"k":"m"},{"n":"BagHash","s":{"r":"Mu","p":["*%_"]},"m":1,"k":"m"},{"m":1,"k":"m","n":"ACCEPTS","s":{"p":["\\topic","*%_"],"r":"Mu"}},{"k":"m","m":1,"s":{"p":["Mu:U \\topic","*%_"],"r":"Mu"},"n":"ACCEPTS"},{"n":"ACCEPTS","s":{"p":["Mu:D \\a","*%_"],"r":"Mu"},"m":1,"k":"m"},{"s":{"r":"Bool","p":["Mu:U $","*%_"]},"n":"ACCEPTS","m":1,"k":"m"},{"n":"ACCEPTS","s":{"p":["\\topic","*%_"],"r":"Bool:D"},"k":"m","m":1},{"s":{"r":"Bool:D","p":["\\other","*%_"]},"n":"ACCEPTS","k":"m","m":1},{"n":"ACCEPTS","s":{"p":["Baggy:D \\other","*%_"],"r":"Bool:D"},"k":"m","m":1},{"n":"ACCEPTS","s":{"r":"Bool:D","p":["\\other","*%_"]},"m":1,"k":"m"},{"k":"m","m":1,"s":{"p":["$","*%_"],"r":"Nil"},"n":"DELETE-KEY"},{"m":1,"k":"m","n":"DELETE-KEY","s":{"p":["$","*%_"],"r":"Mu"}},{"m":1,"k":"m","n":"DELETE-KEY","s":{"p":["\\k","*%_"],"r":"Mu"}},{"k":"m","m":1,"n":"EXISTS-KEY","s":{"r":"Bool","p":["$","*%_"]}},{"n":"EXISTS-KEY","s":{"p":["$","*%_"],"r":"Bool"},"k":"m","m":1},{"s":{"r":"Mu","p":["\\k","*%_"]},"n":"EXISTS-KEY","k":"m","m":1},{"n":"keys","s":{"r":"Mu","p":["*%_"]},"k":"m","m":1},{"k":"m","m":1,"n":"keys","s":{"r":"Mu","p":["*%_"]}},{"s":{"r":"Mu","p":["*%_"]},"n":"keys","k":"m","m":1},{"s":{"r":"Mu","p":["*%_"]},"n":"antipairs","m":1,"k":"m"},{"m":1,"k":"m","n":"antipairs","s":{"p":["*%_"],"r":"Mu"}},{"k":"m","m":1,"s":{"r":"Mu","p":["*%_"]},"n":"antipairs"},{"m":1,"k":"m","s":{"r":"Mu","p":["*%_"]},"n":"invert"},{"s":{"r":"Mu","p":["*%_"]},"n":"invert","k":"m","m":1},{"n":"invert","s":{"r":"Mu","p":["*%_"]},"k":"m","m":1},{"n":"elems","s":{"p":["*%_"],"r":"Int"},"m":1,"k":"m"},{"n":"elems","s":{"r":"Mu","p":["*%_"]},"m":1,"k":"m"},{"k":"m","m":1,"n":"elems","s":{"r":"Int:D","p":["*%_"]}},{"s":{"r":"Bool","p":["*%_"]},"n":"Bool","k":"m","m":1},{"m":1,"k":"m","n":"Bool","s":{"p":["*%_"],"r":"Mu"}},{"s":{"r":"Bool:D","p":["*%_"]},"n":"Bool","m":1,"k":"m"},{"s":{"p":["*%_"],"r":"Mu"},"n":"Str","m":1,"k":"m"},{"m":1,"k":"m","s":{"p":["*%_"],"r":"Mu"},"n":"Str"},{"k":"m","m":1,"s":{"r":"Str:D","p":["*%_"]},"n":"Str"},{"n":"gist","s":{"r":"Mu","p":["*%_"]},"k":"m","m":1},{"n":"gist","s":{"r":"Mu","p":["*%_"]},"m":1,"k":"m"},{"k":"m","m":1,"n":"gist","s":{"p":["*%_"],"r":"Str:D"}},{"n":"perl","s":{"p":["*%_"],"r":"Mu"},"k":"m","m":1},{"k":"m","m":1,"s":{"p":["*%_"],"r":"Mu"},"n":"perl"},{"m":1,"k":"m","s":{"r":"Str:D","p":["*%_"]},"n":"perl"},{"m":1,"k":"m","s":{"p":["*%_"],"r":"Mu"},"n":"list"},{"k":"m","m":1,"n":"list","s":{"r":"Mu","p":["*%_"]}},{"n":"list","s":{"p":["*%_"],"r":"Mu"},"k":"m","m":1},{"k":"m","m":1,"n":"list","s":{"p":["*%_"],"r":"Mu"}},{"m":1,"k":"m","s":{"p":["*%_"],"r":"Mu"},"n":"pairs"},{"n":"pairs","s":{"r":"Mu","p":["*%_"]},"k":"m","m":1},{"s":{"r":"Mu","p":["*%_"]},"n":"pairs","m":1,"k":"m"},{"n":"BUILDALL","s":{"p":["@auto","%init","*%_"],"r":"Mu"},"m":0,"k":"s"},{"s":{"r":"Baggy:D","p":["\\type","\\iterator","*%_"]},"n":"!create-from-iterator","m":0,"k":"m"},{"m":0,"k":"m","s":{"p":["*%_"],"r":"Mu"},"n":"!total-positive"},{"m":0,"k":"m","n":"!HASHIFY","s":{"r":"Mu","p":["\\type","*%_"]}}],"k":"c","b":"A","a":[{"k":"v","n":"$!elems","t":"Rakudo::Internals::IterationSet"}],"d":"TITLE\nclass MixHash\n\nSUBTITLE\nMutable collection of distinct objects with Real weights\n\n    class MixHash does Mixy { }\n\nA MixHash is a mutable mix, meaning a collection of distinct elements in no\nparticular order that each have a real-number weight assigned to them. (For\nimmutable mixes, see Mix instead.)\n\nObjects/values of any type are allowed as mix elements. Within a MixHash,\nitems that would compare positively with the === operator are considered\nthe same element, with a combined weight.\n\n    my $recipe = (butter => 0.22, sugar => 0.1,\n                  flour => 0.275, sugar => 0.02).MixHash;\n\n    say $recipe.elems;      # OUTPUT: «3␤»\n    say $recipe.keys.sort;  # OUTPUT: «butter flour sugar␤»\n    say $recipe.pairs.sort; # OUTPUT: «\"butter\" => 0.22 \"flour\" => 0.275 \"sugar\" => 0.12␤»\n    say $recipe.total;      # OUTPUT: «0.615␤»\n\n\nMixHashes can be treated as object hashes using the { } postcircumfix\noperator, which returns the corresponding numeric weight for keys that are\nelements of the mix, and 0 for keys that aren't. It can also be used to\nmodify weights; Setting a weight to 0 automatically removes that element\nfrom the mix, and setting a weight to a non-zero number adds that element\nif it didn't already exist:\n\n    my $recipe = (butter => 0.22, sugar => 0.1,\n                  flour => 0.275, sugar => 0.02).MixHash;\n\n    say $recipe<butter>;     # OUTPUT: «0.22␤»\n    say $recipe<sugar>;      # OUTPUT: «0.12␤»\n    say $recipe<chocolate>;  # OUTPUT: «0␤»\n\n    $recipe<butter> = 0;\n    $recipe<chocolate> = 0.30;\n    say $recipe.pairs;       # OUTPUT: «\"sugar\" => 0.12 \"flour\" => 0.275 \"chocolate\" => 0.3␤»\n\n\nCreating MixHash objects\n\nMixHashes can be composed using MixHash.new. Any positional parameters,\nregardless of their type, become elements of the mix - with a weight of 1\nfor each time the parameter occurred:\n\n    my $n = MixHash.new: \"a\", \"a\", \"b\" => 0, \"c\" => 3.14;\n    say $n.keys.map(&WHAT);  # OUTPUT: «((Str) (Pair) (Pair))␤»\n    say $n.pairs;            # OUTPUT: «(a => 2 (c => 3.14) => 1 (b => 0) => 1)␤»\n\nAlternatively, the .MixHash coercer (or its functional form, MixHash()) can\nbe called on an existing object to coerce it to a MixHash. Its semantics\ndepend on the type and contents of the object. In general it evaluates the\nobject in list context and creates a mix with the resulting items as\nelements, although for Hash-like objects or Pair items, only the keys\nbecome elements of the mix, and the (cumulative) values become the\nassociated numeric weights:\n\n    my $n = (\"a\", \"a\", \"b\" => 0, \"c\" => 3.14).MixHash;\n    say $n.keys.map(&WHAT);  # OUTPUT: «((Str) (Str))␤»\n    say $n.pairs;            # OUTPUT: «(a => 2 c => 3.14)␤»\n\nSince 6.d (2019.03 and later) it is also possible to specify the type of\nvalues you would like to allow in a MixHash. This can either be done when\ncalling .new:\n\n    # only allow strings\n    my $n = MixHash[Str].new: <a b b c c c>;\n\nor using the masquerading syntax:\n\n    # only allow strings\n    my %mh is MixHash[Str] = <a b b c c c>;\n    say %mh<b>;  # 2\n    say %mh<d>;  # 0\n\n    # only allow whole numbers\n    my %mh is MixHash[Int] = <a b b c c c>;\n    # Type check failed in binding; expected Int but got Str (\"a\")\n\nOperators\n\n    my ($a, $b) = MixHash(2 => 2, 4), MixHash(2 => 1.5, 3 => 2, 4);\n\n    say $a (<) $b;   # OUTPUT: «False␤»\n    say $a (<+) $b;  # OUTPUT: «False␤»\n    say $a (^) $b;   # OUTPUT: «Mix(2(0.5), 3(2))␤»\n    say $a (+) $b;   # OUTPUT: «Mix(2(3.5), 4(2), 3(2))␤»\n\n    # Unicode versions:\n    say $a ⊂ $b;  # OUTPUT: «False␤»\n    say $a ≼ $b;  # OUTPUT: «False␤»\n    say $a ⊖ $b;  # OUTPUT: «Mix(2(0.5), 3(2))␤»\n    say $a ⊎ $b;  # OUTPUT: «Mix(2(3.5), 4(2), 3(2))␤»\n\n\nSee Set/Bag Operators for a complete list of set and bag operators with\ndetailed explanations.\n\nNote on reverse and ordering.\n\nMixHash inherits reverse from Any, however, Mixes do not have an inherent\norder and you should not trust it returning a consistent output.\n\nIf you sort a MixHash, the result is a list of pairs, at which point\nreverse makes perfect sense:\n\n    my $a = MixHash.new(2, 2, 18, 3, 4);\n    say $a;  # OUTPUT: «MixHash(18, 2(2), 3, 4)␤»\n\n    say $a.sort;  # OUTPUT: «(2 => 2 3 => 1 4 => 1 18 => 1)␤»\n    say $a.sort.reverse;  # OUTPUT: «(18 => 1 4 => 1 3 => 1 2 => 2)␤»\n\n\n"},{"k":"v","t":"Sub+{is-pure}","n":"&sec"},{"n":"sec","s":{"p":["Numeric \\x"],"r":"Mu"},"k":"s","m":1},{"k":"s","m":1,"s":{"p":["Cool \\x"],"r":"Mu"},"n":"sec"},{"k":"s","m":1,"s":{"p":["num $x"],"r":"num"},"n":"sec"},{"d":"TITLE\nrole Positional\n\nSUBTITLE\nObject that supports looking up values by index\n\n    role Positional { ... }\n\nRole for objects which support indexing them using postcircumfix:«[ ]»\n(usually list-like objects). Example types with Positional role include\nList, Array, Range, and Buf.\n\n","b":"C","m":[{"n":"of","s":{"r":"Mu","p":["*%_"]},"k":"m","m":0}],"k":"ro","t":"Positional","n":"Positional"},{"k":"v","n":"&postfix:<++>","t":"Sub+{Precedence}"},{"k":"s","m":1,"s":{"p":["Mu:D $a is rw"],"r":"Mu"},"n":"postfix:<++>"},{"k":"s","m":1,"s":{"r":"Mu","p":["Mu:U $a is rw"]},"n":"postfix:<++>"},{"k":"s","m":1,"n":"postfix:<++>","s":{"r":"Int:D","p":["Int:D $a is rw"]}},{"s":{"p":["int $a is rw"],"r":"int"},"n":"postfix:<++>","m":1,"k":"s"},{"m":1,"k":"s","n":"postfix:<++>","s":{"r":"Bool","p":["Bool:U $a is rw"]}},{"k":"s","m":1,"s":{"r":"Mu","p":["Bool:D $a is rw"]},"n":"postfix:<++>"},{"n":"postfix:<++>","s":{"r":"Mu","p":["Num:D $a is rw"]},"k":"s","m":1},{"s":{"r":"Num","p":["Num:U $a is rw"]},"n":"postfix:<++>","m":1,"k":"s"},{"n":"postfix:<++>","s":{"p":["num $a is rw"],"r":"num"},"m":1,"k":"s"},{"n":"&val","t":"Sub","k":"v"},{"n":"val","s":{"p":["*@maybevals"],"r":"Mu"},"m":1,"k":"s"},{"s":{"r":"Mu","p":["Mu $"]},"n":"val","m":1,"k":"s"},{"k":"s","m":1,"n":"val","s":{"p":["List:D $maybevals"],"r":"Mu"}},{"s":{"r":"Mu","p":["Pair:D \\ww-thing"]},"n":"val","m":1,"k":"s"},{"k":"s","m":1,"s":{"p":["\\one-thing"],"r":"Mu"},"n":"val"},{"s":{"r":"Mu","p":["Str:D $MAYBEVAL",":$val-or-fail"]},"n":"val","m":1,"k":"s"},{"k":"v","t":"Sub+{is-pure}","n":"&asech"},{"k":"s","m":1,"n":"asech","s":{"p":["Numeric \\x"],"r":"Mu"}},{"n":"asech","s":{"p":["Cool \\x"],"r":"Mu"},"k":"s","m":1},{"k":"s","m":1,"n":"asech","s":{"r":"num","p":["num $x"]}},{"k":"v","n":"&infix:<∩>","t":"Sub+{is-pure}+{Precedence}"},{"n":"infix:<(&)>","s":{"r":"Mu","p":[]},"m":1,"k":"s"},{"k":"s","m":1,"n":"infix:<(&)>","s":{"r":"Mu","p":["QuantHash:D \\a"]}},{"m":1,"k":"s","n":"infix:<(&)>","s":{"r":"Mu","p":["\\a"]}},{"s":{"p":["Setty:D \\a","Setty:D \\b"],"r":"Mu"},"n":"infix:<(&)>","m":1,"k":"s"},{"m":1,"k":"s","s":{"r":"Mu","p":["Setty:D \\a","Baggy:D \\b"]},"n":"infix:<(&)>"},{"m":1,"k":"s","n":"infix:<(&)>","s":{"r":"Mu","p":["Baggy:D \\a","Setty:D \\b"]}},{"s":{"r":"Mu","p":["Setty:D \\a","Mixy:D \\b"]},"n":"infix:<(&)>","k":"s","m":1},{"m":1,"k":"s","n":"infix:<(&)>","s":{"p":["Mixy:D \\a","Setty:D \\b"],"r":"Mu"}},{"m":1,"k":"s","s":{"p":["Baggy:D \\a","Baggy:D \\b"],"r":"Mu"},"n":"infix:<(&)>"},{"s":{"r":"Mu","p":["Mixy:D \\a","Baggy:D \\b"]},"n":"infix:<(&)>","m":1,"k":"s"},{"m":1,"k":"s","n":"infix:<(&)>","s":{"r":"Mu","p":["Baggy:D \\a","Mixy:D \\b"]}},{"m":1,"k":"s","n":"infix:<(&)>","s":{"p":["Mixy:D \\a","Mixy:D \\b"],"r":"Mu"}},{"n":"infix:<(&)>","s":{"p":["Baggy:D \\a","Any:D \\b"],"r":"Mu"},"k":"s","m":1},{"s":{"r":"Mu","p":["Any:D \\a","Baggy:D \\b"]},"n":"infix:<(&)>","k":"s","m":1},{"k":"s","m":1,"n":"infix:<(&)>","s":{"p":["Mixy:D \\a","Any:D \\b"],"r":"Mu"}},{"s":{"r":"Mu","p":["Any:D \\a","Mixy:D \\b"]},"n":"infix:<(&)>","m":1,"k":"s"},{"s":{"p":["Map:D \\a","Map:D \\b"],"r":"Mu"},"n":"infix:<(&)>","k":"s","m":1},{"n":"infix:<(&)>","s":{"p":["$","Failure:D \\b"],"r":"Mu"},"k":"s","m":1},{"n":"infix:<(&)>","s":{"r":"Mu","p":["Failure:D \\a","$"]},"k":"s","m":1},{"s":{"r":"Mu","p":["\\a","\\b"]},"n":"infix:<(&)>","m":1,"k":"s"},{"s":{"r":"Mu","p":["**@p"]},"n":"infix:<(&)>","k":"s","m":1},{"n":"&succeed","t":"Sub","k":"v"},{"m":1,"k":"s","s":{"r":"Nil","p":[]},"n":"succeed"},{"n":"succeed","s":{"p":["\\x"],"r":"Nil"},"m":1,"k":"s"},{"n":"succeed","s":{"r":"Nil","p":["|"]},"m":1,"k":"s"},{"n":"&infix:«=>»","t":"Sub+{is-pure}+{Precedence}","k":"v"},{"s":{"r":"Mu","p":["Mu $key","Mu \\value"]},"n":"infix:«=>»","k":"s","m":1},{"k":"n","t":"str","n":"str"},{"n":"&from-json","t":"Sub","k":"v"},{"k":"s","m":0,"s":{"r":"Mu","p":["$text"]},"n":"from-json"},{"m":[{"n":"new","s":{"r":"Mu","p":["|"]},"k":"m","m":0},{"k":"m","m":0,"n":"NFC","s":{"r":"Mu","p":["*%_"]}},{"k":"s","m":0,"n":"BUILDALL","s":{"p":["@auto","%init","*%_"],"r":"Mu"}},{"n":"list","s":{"r":"Mu","p":["*%_"]},"m":0,"k":"m"},{"k":"m","m":0,"n":"new","s":{"r":"Mu","p":["*@codes","*%_"]}},{"m":1,"k":"m","s":{"p":["*%_"],"r":"Mu"},"n":"perl"},{"s":{"r":"Mu","p":["*%_"]},"n":"perl","k":"m","m":1},{"s":{"r":"Mu","p":["*%_"]},"n":"perl","k":"m","m":1},{"s":{"p":["*%_"],"r":"Mu"},"n":"Numeric","m":0,"k":"m"},{"s":{"r":"Mu","p":["*%_"]},"n":"of","m":0,"k":"m"},{"k":"m","m":0,"n":"codes","s":{"p":["*%_"],"r":"Mu"}},{"n":"NFD","s":{"p":["*%_"],"r":"Mu"},"m":0,"k":"m"},{"s":{"p":["*%_"],"r":"Mu"},"n":"NFKD","k":"m","m":0},{"n":"NFC","s":{"p":["*%_"],"r":"Mu"},"m":0,"k":"m"},{"s":{"r":"Mu","p":["*%_"]},"n":"Int","k":"m","m":0},{"m":0,"k":"m","s":{"r":"Mu","p":["*%_"]},"n":"NFKC"},{"k":"m","m":1,"s":{"p":["*%_"],"r":"Mu"},"n":"Str"},{"n":"Str","s":{"p":["*%_"],"r":"Mu"},"m":1,"k":"m"},{"s":{"p":["*%_"],"r":"Mu"},"n":"Str","k":"m","m":1},{"n":"EXISTS-POS","s":{"r":"Bool","p":["Any:D $","*%_"]},"k":"m","m":1},{"s":{"r":"Mu","p":["Any:U $pos","*%_"]},"n":"EXISTS-POS","k":"m","m":1},{"k":"m","m":1,"n":"EXISTS-POS","s":{"p":["int \\pos","*%_"],"r":"Bool:D"}},{"n":"EXISTS-POS","s":{"p":["Int:D \\pos","*%_"],"r":"Bool:D"},"m":1,"k":"m"},{"k":"m","m":1,"s":{"p":["Num:D \\pos","*%_"],"r":"Bool:D"},"n":"EXISTS-POS"},{"m":1,"k":"m","n":"EXISTS-POS","s":{"p":["Any:D \\pos","*%_"],"r":"Bool:D"}},{"n":"EXISTS-POS","s":{"r":"Mu","p":["Any:U \\pos","*%_"]},"m":1,"k":"m"},{"s":{"p":["\\one","\\two","*%_"],"r":"Bool:D"},"n":"EXISTS-POS","m":1,"k":"m"},{"k":"m","m":1,"s":{"r":"Bool:D","p":["\\one","\\two","\\three","*%_"]},"n":"EXISTS-POS"},{"n":"EXISTS-POS","s":{"r":"Bool:D","p":["**@indices","*%_"]},"m":1,"k":"m"},{"m":1,"k":"m","s":{"r":"Mu","p":["int \\pos","*%_"]},"n":"EXISTS-POS"},{"n":"EXISTS-POS","s":{"r":"Mu","p":["Int:D \\pos","*%_"]},"k":"m","m":1},{"m":0,"k":"m","s":{"r":"Mu","p":["*%_"]},"n":"Uni"},{"m":0,"k":"m","n":"elems","s":{"r":"Mu","p":["*%_"]}},{"m":1,"k":"m","n":"gist","s":{"r":"Mu","p":["*%_"]}},{"m":1,"k":"m","s":{"r":"Mu","p":["*%_"]},"n":"gist"},{"n":"gist","s":{"r":"Mu","p":["*%_"]},"m":1,"k":"m"},{"n":"Bool","s":{"p":["*%_"],"r":"Bool"},"k":"m","m":1},{"k":"m","m":1,"s":{"p":["*%_"],"r":"Mu"},"n":"Bool"},{"s":{"r":"Mu","p":["*%_"]},"n":"Bool","k":"m","m":1},{"n":"AT-POS","s":{"r":"Mu","p":["int \\pos","*%_"]},"m":1,"k":"m"},{"n":"AT-POS","s":{"p":["Int:D \\pos","*%_"],"r":"Mu"},"k":"m","m":1},{"n":"AT-POS","s":{"r":"Mu","p":["Num:D \\pos","*%_"]},"k":"m","m":1},{"n":"AT-POS","s":{"r":"Mu","p":["Any:D \\pos","*%_"]},"m":1,"k":"m"},{"m":1,"k":"m","s":{"p":["int \\pos","*%_"],"r":"Mu"},"n":"AT-POS"},{"s":{"r":"Mu","p":["Int:D \\pos","*%_"]},"n":"AT-POS","m":1,"k":"m"},{"k":"m","m":1,"s":{"r":"Mu","p":["Num:D \\pos","*%_"]},"n":"AT-POS"},{"m":1,"k":"m","n":"AT-POS","s":{"p":["Any:D \\pos","*%_"],"r":"Mu"}},{"m":1,"k":"m","n":"AT-POS","s":{"p":["Any:U \\pos","*%_"],"r":"Mu"}},{"n":"AT-POS","s":{"r":"Mu","p":["\\one","\\two","*%_"]},"k":"m","m":1},{"n":"AT-POS","s":{"r":"Mu","p":["\\one","\\two","\\three","*%_"]},"m":1,"k":"m"},{"n":"AT-POS","s":{"r":"Mu","p":["**@indices","*%_"]},"m":1,"k":"m"},{"s":{"p":["int \\pos","*%_"],"r":"Mu"},"n":"AT-POS","m":1,"k":"m"},{"m":1,"k":"m","s":{"r":"Mu","p":["Int:D \\pos","*%_"]},"n":"AT-POS"},{"n":"BUILDALL","s":{"r":"Mu","p":["@auto","%init","*%_"]},"k":"s","m":0}],"k":"c","b":"A","d":"TITLE\nclass NFC\n\nSUBTITLE\nCodepoint string in Normal Form C (composed)\n\n    class NFC is Uni {}\n\nA Codepoint string in Unicode Normalization Form C. It is created by\nCanonical Decomposition, followed by Canonical Composition. For more\ninformation on what this means, see Unicode TR15.","n":"NFC","t":"NFC"},{"b":"A","a":[{"k":"v","t":"Rakudo::Internals::IterationSet","n":"$!elems"}],"k":"c","m":[{"s":{"p":["*%_"],"r":"Mu"},"n":"total","m":0,"k":"m"},{"n":"clone","s":{"r":"Mu","p":["*%_"]},"m":0,"k":"m"},{"k":"m","m":0,"n":"of","s":{"r":"Mu","p":["*%_"]}},{"k":"m","m":0,"n":"new-from-pairs","s":{"p":["*@pairs","*%_"],"r":"Baggy:D"}},{"n":"kxxv","s":{"p":["*%_"],"r":"Mu"},"k":"m","m":1},{"s":{"p":["*%_"],"r":"Int"},"n":"default","m":0,"k":"m"},{"m":1,"k":"m","n":"grabpairs","s":{"p":["*%_"],"r":"Mu"}},{"n":"grabpairs","s":{"p":["Callable:D $calculate","*%_"],"r":"Mu"},"m":1,"k":"m"},{"k":"m","m":1,"n":"grabpairs","s":{"r":"Mu","p":["Whatever $","*%_"]}},{"s":{"r":"Mu","p":["\\count","*%_"]},"n":"grabpairs","m":1,"k":"m"},{"k":"m","m":1,"n":"pickpairs","s":{"p":["*%_"],"r":"Mu"}},{"n":"pickpairs","s":{"p":["Callable:D $calculate","*%_"],"r":"Mu"},"k":"m","m":1},{"k":"m","m":1,"s":{"r":"Mu","p":["Whatever $","*%_"]},"n":"pickpairs"},{"n":"pickpairs","s":{"r":"Mu","p":["\\count","*%_"]},"m":1,"k":"m"},{"m":1,"k":"m","s":{"r":"Mu","p":["*%_"]},"n":"grab"},{"k":"m","m":1,"s":{"r":"Mu","p":["Callable:D $calculate","*%_"]},"n":"grab"},{"m":1,"k":"m","n":"grab","s":{"p":["Whatever $","*%_"],"r":"Mu"}},{"m":1,"k":"m","s":{"r":"Mu","p":["$count","*%_"]},"n":"grab"},{"n":"grab","s":{"r":"Mu","p":["|c is raw"]},"k":"m","m":1},{"k":"m","m":1,"s":{"r":"Mu","p":["*%_"]},"n":"pick"},{"k":"m","m":1,"s":{"r":"Mu","p":["Callable:D $calculate","*%_"]},"n":"pick"},{"n":"pick","s":{"p":["Whatever $","*%_"],"r":"Mu"},"k":"m","m":1},{"m":1,"k":"m","s":{"r":"Mu","p":["\\count","*%_"]},"n":"pick"},{"k":"m","m":1,"s":{"p":["*%_"],"r":"Mu"},"n":"roll"},{"n":"roll","s":{"p":["Whatever $","*%_"],"r":"Mu"},"m":1,"k":"m"},{"n":"roll","s":{"p":["Callable:D $calculate","*%_"],"r":"Mu"},"k":"m","m":1},{"k":"m","m":1,"s":{"p":["\\count","*%_"],"r":"Mu"},"n":"roll"},{"s":{"r":"Mu","p":["&test","\\list","*%_"]},"n":"classify-list","m":1,"k":"m"},{"m":1,"k":"m","n":"classify-list","s":{"p":["%test","|c is raw"],"r":"Mu"}},{"s":{"p":["@test","|c is raw"],"r":"Mu"},"n":"classify-list","k":"m","m":1},{"n":"classify-list","s":{"r":"Mu","p":["&test","**@list","|c is raw"]},"k":"m","m":1},{"s":{"r":"Mu","p":["&test","\\list","*%_"]},"n":"categorize-list","m":1,"k":"m"},{"n":"categorize-list","s":{"p":["%test","|c is raw"],"r":"Mu"},"m":1,"k":"m"},{"s":{"p":["@test","|c is raw"],"r":"Mu"},"n":"categorize-list","m":1,"k":"m"},{"k":"m","m":1,"n":"categorize-list","s":{"r":"Mu","p":["&test","**@list","|c is raw"]}},{"k":"m","m":0,"n":"RAW-HASH","s":{"p":["*%_"],"r":"Mu"}},{"s":{"p":["*%_"],"r":"Mu"},"n":"keyof","k":"m","m":0},{"s":{"r":"Mu","p":["\\elems","*%_"]},"n":"SET-SELF","m":0,"k":"m"},{"n":"STORE","s":{"r":"BagHash:D","p":["*@pairs","*%_"]},"m":1,"k":"m"},{"n":"STORE","s":{"p":["\\objects","\\values","*%_"],"r":"BagHash:D"},"m":1,"k":"m"},{"k":"m","m":1,"n":"STORE","s":{"p":["|"],"r":"Mu"}},{"m":0,"k":"m","n":"Int","s":{"r":"Int:D","p":["*%_"]}},{"n":"Num","s":{"r":"Num:D","p":["*%_"]},"m":0,"k":"m"},{"m":0,"k":"m","n":"Numeric","s":{"r":"Numeric:D","p":["*%_"]}},{"m":0,"k":"m","n":"Real","s":{"p":["*%_"],"r":"Real:D"}},{"s":{"r":"Mu","p":["*%_"]},"n":"Capture","m":0,"k":"m"},{"s":{"r":"Mu","p":["Cool $format = \"\\%s\\t\\%s\"","$sep = \"\\n\"","*%_"]},"n":"fmt","k":"m","m":0},{"m":1,"k":"m","n":"Setty","s":{"r":"Mu","p":["*%_"]}},{"n":"Setty","s":{"r":"Mu","p":["*%_"]},"k":"m","m":1},{"m":1,"k":"m","s":{"p":["*%_"],"r":"Mu"},"n":"Baggy"},{"s":{"r":"Mu","p":["*%_"]},"n":"Baggy","k":"m","m":1},{"k":"m","m":1,"s":{"p":["*%_"],"r":"Mu"},"n":"Mixy"},{"m":1,"k":"m","n":"Mixy","s":{"p":["*%_"],"r":"Mu"}},{"k":"m","m":1,"n":"AT-KEY","s":{"p":["$key","*%_"],"r":"Mu"}},{"m":1,"k":"m","n":"AT-KEY","s":{"r":"Mu","p":["\\key","*%_"]}},{"k":"m","m":1,"s":{"p":["\\k","*%_"],"r":"Mu"},"n":"AT-KEY"},{"n":"AT-KEY","s":{"r":"Mu","p":["\\k","*%_"]},"m":1,"k":"m"},{"s":{"p":["$key","*%_"],"r":"Mu"},"n":"AT-KEY","k":"m","m":1},{"k":"m","m":1,"s":{"p":["*%_"],"r":"Bag:D"},"n":"Bag"},{"k":"m","m":1,"s":{"p":[":$view","*%_"],"r":"Mu"},"n":"Bag"},{"n":"BagHash","s":{"r":"BagHash:D","p":["*%_"]},"m":1,"k":"m"},{"n":"BagHash","s":{"p":["*%_"],"r":"Mu"},"k":"m","m":1},{"n":"Mix","s":{"r":"Mix:D","p":["*%_"]},"m":1,"k":"m"},{"n":"Mix","s":{"r":"Mu","p":["*%_"]},"k":"m","m":1},{"k":"m","m":1,"s":{"p":["*%_"],"r":"Mu"},"n":"Mix"},{"k":"m","m":1,"s":{"p":["*%_"],"r":"MixHash:D"},"n":"MixHash"},{"s":{"r":"Mu","p":["*%_"]},"n":"MixHash","k":"m","m":1},{"k":"m","m":1,"s":{"p":["*%_"],"r":"Mu"},"n":"MixHash"},{"m":1,"k":"m","s":{"r":"Mu","p":["*%_"]},"n":"iterator"},{"n":"iterator","s":{"p":["*%_"],"r":"Mu"},"k":"m","m":1},{"s":{"r":"Mu","p":["*%_"]},"n":"iterator","m":1,"k":"m"},{"n":"iterator","s":{"r":"Mu","p":["*%_"]},"k":"m","m":1},{"m":1,"k":"m","n":"kv","s":{"p":["*%_"],"r":"Mu"}},{"m":1,"k":"m","n":"kv","s":{"p":["*%_"],"r":"Mu"}},{"k":"m","m":1,"n":"kv","s":{"r":"Mu","p":["*%_"]}},{"k":"m","m":1,"n":"kv","s":{"p":["*%_"],"r":"Mu"}},{"s":{"p":["*%_"],"r":"Mu"},"n":"values","m":1,"k":"m"},{"m":1,"k":"m","s":{"p":["*%_"],"r":"Mu"},"n":"values"},{"s":{"r":"Mu","p":["*%_"]},"n":"values","m":1,"k":"m"},{"m":1,"k":"m","n":"values","s":{"p":["*%_"],"r":"Mu"}},{"k":"m","m":1,"s":{"p":["\\topic","*%_"],"r":"Mu"},"n":"ACCEPTS"},{"n":"ACCEPTS","s":{"r":"Mu","p":["Mu:U \\topic","*%_"]},"m":1,"k":"m"},{"k":"m","m":1,"s":{"r":"Mu","p":["Mu:D \\a","*%_"]},"n":"ACCEPTS"},{"m":1,"k":"m","s":{"p":["Mu:U $","*%_"],"r":"Bool"},"n":"ACCEPTS"},{"m":1,"k":"m","n":"ACCEPTS","s":{"r":"Bool:D","p":["\\topic","*%_"]}},{"n":"ACCEPTS","s":{"r":"Bool:D","p":["\\other","*%_"]},"m":1,"k":"m"},{"k":"m","m":1,"s":{"r":"Bool:D","p":["Baggy:D \\other","*%_"]},"n":"ACCEPTS"},{"m":1,"k":"m","s":{"r":"Bool:D","p":["\\other","*%_"]},"n":"ACCEPTS"},{"s":{"r":"Nil","p":["$","*%_"]},"n":"DELETE-KEY","m":1,"k":"m"},{"k":"m","m":1,"n":"DELETE-KEY","s":{"r":"Mu","p":["$","*%_"]}},{"k":"m","m":1,"n":"DELETE-KEY","s":{"p":["\\k","*%_"],"r":"Mu"}},{"m":1,"k":"m","s":{"p":["$","*%_"],"r":"Bool"},"n":"EXISTS-KEY"},{"m":1,"k":"m","s":{"p":["$","*%_"],"r":"Bool"},"n":"EXISTS-KEY"},{"s":{"r":"Mu","p":["\\k","*%_"]},"n":"EXISTS-KEY","m":1,"k":"m"},{"m":1,"k":"m","n":"new","s":{"r":"Mu","p":["*%attrinit"]}},{"m":1,"k":"m","n":"new","s":{"r":"Mu","p":["$","*@","*%_"]}},{"k":"m","m":1,"n":"new","s":{"r":"Baggy:D","p":["*%_"]}},{"m":1,"k":"m","n":"new","s":{"r":"Baggy:D","p":["\\value","*%_"]}},{"n":"new","s":{"p":["**@args","*%_"],"r":"Mu"},"k":"m","m":1},{"n":"keys","s":{"r":"Mu","p":["*%_"]},"k":"m","m":1},{"s":{"p":["*%_"],"r":"Mu"},"n":"keys","k":"m","m":1},{"k":"m","m":1,"n":"keys","s":{"r":"Mu","p":["*%_"]}},{"m":1,"k":"m","s":{"r":"Mu","p":["*%_"]},"n":"antipairs"},{"n":"antipairs","s":{"r":"Mu","p":["*%_"]},"m":1,"k":"m"},{"s":{"p":["*%_"],"r":"Mu"},"n":"antipairs","k":"m","m":1},{"s":{"p":["*%_"],"r":"Mu"},"n":"invert","k":"m","m":1},{"m":1,"k":"m","s":{"r":"Mu","p":["*%_"]},"n":"invert"},{"k":"m","m":1,"n":"invert","s":{"p":["*%_"],"r":"Mu"}},{"m":1,"k":"m","s":{"r":"Int","p":["*%_"]},"n":"elems"},{"k":"m","m":1,"n":"elems","s":{"p":["*%_"],"r":"Mu"}},{"n":"elems","s":{"r":"Int:D","p":["*%_"]},"m":1,"k":"m"},{"s":{"p":["*%_"],"r":"Bool"},"n":"Bool","m":1,"k":"m"},{"k":"m","m":1,"s":{"r":"Mu","p":["*%_"]},"n":"Bool"},{"n":"Bool","s":{"r":"Bool:D","p":["*%_"]},"m":1,"k":"m"},{"m":1,"k":"m","n":"hash","s":{"p":["*%_"],"r":"Mu"}},{"n":"hash","s":{"r":"Mu","p":["*%_"]},"m":1,"k":"m"},{"s":{"r":"Hash:D","p":["*%_"]},"n":"hash","k":"m","m":1},{"m":1,"k":"m","s":{"r":"Mu","p":["*%_"]},"n":"Hash"},{"s":{"p":["*%_"],"r":"Hash:D"},"n":"Hash","k":"m","m":1},{"m":1,"k":"m","s":{"p":["*%_"],"r":"Mu"},"n":"Str"},{"s":{"p":["*%_"],"r":"Mu"},"n":"Str","m":1,"k":"m"},{"s":{"p":["*%_"],"r":"Str:D"},"n":"Str","k":"m","m":1},{"k":"m","m":1,"n":"gist","s":{"r":"Mu","p":["*%_"]}},{"s":{"p":["*%_"],"r":"Mu"},"n":"gist","m":1,"k":"m"},{"k":"m","m":1,"n":"gist","s":{"r":"Str:D","p":["*%_"]}},{"s":{"p":["*%_"],"r":"Mu"},"n":"perl","k":"m","m":1},{"k":"m","m":1,"n":"perl","s":{"r":"Mu","p":["*%_"]}},{"k":"m","m":1,"s":{"r":"Str:D","p":["*%_"]},"n":"perl"},{"n":"Set","s":{"r":"Set:D","p":["*%_"]},"m":1,"k":"m"},{"m":1,"k":"m","n":"Set","s":{"r":"Mu","p":["*%_"]}},{"k":"m","m":1,"s":{"p":["*%_"],"r":"SetHash:D"},"n":"SetHash"},{"m":1,"k":"m","n":"SetHash","s":{"p":["*%_"],"r":"Mu"}},{"k":"m","m":1,"n":"list","s":{"p":["*%_"],"r":"Mu"}},{"k":"m","m":1,"s":{"r":"Mu","p":["*%_"]},"n":"list"},{"k":"m","m":1,"n":"list","s":{"p":["*%_"],"r":"Mu"}},{"m":1,"k":"m","s":{"r":"Mu","p":["*%_"]},"n":"list"},{"m":1,"k":"m","s":{"r":"Mu","p":["*%_"]},"n":"pairs"},{"s":{"p":["*%_"],"r":"Mu"},"n":"pairs","m":1,"k":"m"},{"n":"pairs","s":{"p":["*%_"],"r":"Mu"},"k":"m","m":1},{"m":0,"k":"s","s":{"r":"Mu","p":["@auto","%init","*%_"]},"n":"BUILDALL"},{"k":"m","m":0,"n":"!create-from-iterator","s":{"p":["\\type","\\iterator","*%_"],"r":"Baggy:D"}},{"m":0,"k":"m","s":{"p":["\\type","*%_"],"r":"Mu"},"n":"!HASHIFY"}],"d":"TITLE\nclass BagHash\n\nSUBTITLE\nMutable collection of distinct objects with integer weights\n\n    class BagHash does Baggy { }\n\nA BagHash is a mutable bag/multiset, meaning a collection of distinct\nelements in no particular order that each have an integer weight assigned\nto them signifying how many copies of that element are considered \"in the\nbag\". (For immutable bags, see Bag instead.)\n\nObjects/values of any type are allowed as bag elements. Within a BagHash,\nitems that would compare positively with the === operator are considered\nthe same element, with the number of how many there were as its weight. But\nof course you can also easily get back the expanded list of items (without\nthe order):\n\n    my $breakfast = <spam eggs spam spam bacon spam>.BagHash;\n\n    say $breakfast.elems;      # OUTPUT: «3␤»\n    say $breakfast.keys.sort;  # OUTPUT: «bacon eggs spam␤»\n\n    say $breakfast.total;      # OUTPUT: «6␤»\n    say $breakfast.kxxv.sort;  # OUTPUT: «bacon eggs spam spam spam spam␤»\n\n\nBagHashes can be treated as object hashes using the { } postcircumfix\noperator, which returns the corresponding integer weight for keys that are\nelements of the bag, and 0 for keys that aren't. It can also be used to\nmodify weights; setting a weight to 0 automatically removes that element\nfrom the bag, and setting a weight to a positive number adds that element\nif it didn't already exist:\n\n    my $breakfast = <spam eggs spam spam bacon spam>.BagHash;\n    say $breakfast<bacon>;     # OUTPUT: «1␤»\n    say $breakfast<spam>;      # OUTPUT: «4␤»\n    say $breakfast<sausage>;   # OUTPUT: «0␤»\n\n    $breakfast<sausage> = 2;\n    $breakfast<bacon>--;\n    say $breakfast.kxxv.sort;  # OUTPUT: «eggs sausage sausage spam spam spam spam␤»\n\n\nCreating BagHash objects\n\nBagHashes can be composed using BagHash.new. Any positional parameters,\nregardless of their type, become elements of the bag:\n\n    my $n = BagHash.new: \"a\", \"b\", \"c\", \"c\";\n    say $n.perl;             # OUTPUT: «(\"b\"=>1,\"a\"=>1,\"c\"=>2).BagHash␤»\n    say $n.keys.perl;        # OUTPUT: «(\"b\", \"a\", \"c\").Seq␤»\n    say $n.values.perl;      # OUTPUT: «(1, 1, 2).Seq␤»\n\nBesides, BagHash.new-from-pairs can create a BagHash with items and their\noccurrences.\n\n    my $n = BagHash.new-from-pairs: \"a\" => 0, \"b\" => 1, \"c\" => 2, \"c\" => 2;\n    say $n.perl;             # OUTPUT: «(\"b\"=>1,\"c\"=>4).BagHash␤»\n    say $n.keys.perl;        # OUTPUT: «(\"b\", \"c\").Seq␤»\n    say $n.values.perl;      # OUTPUT: «(1, 4).Seq␤»\n\nAlternatively, the .BagHash coercer (or its functional form, BagHash()) can\nbe called on an existing object to coerce it to a BagHash. Its semantics\ndepend on the type and contents of the object. In general it evaluates the\nobject in list context and creates a bag with the resulting items as\nelements, although for Hash-like objects or Pair items, only the keys\nbecome elements of the bag, and the (cumulative) values become the\nassociated integer weights:\n\n    my $m = (\"a\", \"b\", \"c\", \"c\").BagHash;\n    my $n = (\"a\" => 0, \"b\" => 1, \"c\" => 2, \"c\" => 2).BagHash;\n    say $m.perl;             # OUTPUT: «(\"b\"=>1,\"a\"=>1,\"c\"=>2).BagHash␤»\n    say $n.perl;             # OUTPUT: «(\"b\"=>1,\"c\"=>4).BagHash␤»\n\nYou can also create BagHash masquerading as a hash by using the is trait:\n\n    my %bh is BagHash = <a b b c c c>;\n    say %bh<b>;  # 2\n    say %bh<d>;  # 0\n\nSince 6.d (2019.03 and later) it is also possible to specify the type of\nvalues you would like to allow in a BagHash. This can either be done when\ncalling .new:\n\n    # only allow strings\n    my $n = BagHash[Str].new: <a b b c c c>;\n\nor using the masquerading syntax:\n\n    # only allow strings\n    my %bh is BagHash[Str] = <a b b c c c>;\n    say %bh<b>;  # 2\n    say %bh<d>;  # 0\n\n    # only allow whole numbers\n    my %bh is BagHash[Int] = <a b b c c c>;\n    # Type check failed in binding; expected Int but got Str (\"a\")\n\nOperators\n\nRaku provides common set and bag operators, which can take BagHashes (or\nany other collections) as input, and return result as Bool, Set or Bag\nvalues. For example:\n\n    my ($a, $b) = BagHash.new(2, 2, 4), BagHash.new(2, 3, 3, 4);\n\n    say $a (<) $b;   # OUTPUT: «False␤»\n    say $a (<+) $b;  # OUTPUT: «False␤»\n    say $a (^) $b;   # OUTPUT: «Bag(3(2), 2)␤»\n    say $a (+) $b;   # OUTPUT: «Bag(2(3), 4(2), 3(2))␤»\n\n    # Unicode versions:\n    say $a ⊂ $b;  # OUTPUT: «False␤»\n    say $a ≼ $b;  # OUTPUT: «False␤»\n    say $a ⊖ $b;  # OUTPUT: «Bag(3(2), 2)␤»\n    say $a ⊎ $b;  # OUTPUT: «Bag(2(3), 4(2), 3(2))␤»\n\n\nSee Set/Bag Operators for a complete list of set and bag operators with\ndetailed explanations.\n\nNote on reverse and ordering.\n\nBagHash inherits reverse from Any, however, Bags do not have an inherent\norder and you should not trust it returning a consistent output.\n\nIf you sort a BagHash, the result is a list of pairs, at which point\nreverse makes perfect sense:\n\n    my $a = BagHash.new(2, 2, 18, 3, 4);\n    say $a;  # OUTPUT: «BagHash(18, 2(2), 3, 4)␤»\n\n    say $a.sort;  # OUTPUT: «(2 => 2 3 => 1 4 => 1 18 => 1)␤»\n    say $a.sort.reverse;  # OUTPUT: «(18 => 1 4 => 1 3 => 1 2 => 2)␤»\n\n\nSee Also\n\nSets, Bags, and Mixes","n":"BagHash","t":"BagHash"},{"k":"v","t":"Sub","n":"&sleep-timer"},{"k":"s","m":1,"n":"sleep-timer","s":{"p":[],"r":"Duration:D"}},{"n":"sleep-timer","s":{"r":"Duration:D","p":["$seconds"]},"m":1,"k":"s"},{"t":"Sub+{is-pure}+{Precedence}","n":"&infix:<div>","k":"v"},{"n":"infix:<div>","s":{"r":"Int:D","p":["Int:D \\a","Int:D \\b"]},"k":"s","m":1},{"n":"infix:<div>","s":{"r":"int","p":["int $a","int $b"]},"m":1,"k":"s"},{"n":"&substr-rw","t":"Sub","k":"v"},{"m":1,"k":"s","n":"substr-rw","s":{"p":["\\what"],"r":"Mu"}},{"m":1,"k":"s","n":"substr-rw","s":{"r":"Mu","p":["\\what","\\from"]}},{"s":{"p":["\\what","\\from","\\chars"],"r":"Mu"},"n":"substr-rw","m":1,"k":"s"},{"t":"Sub+{is-pure}","n":"&wordcase","k":"v"},{"s":{"p":["Str:D $x"],"r":"Mu"},"n":"wordcase","m":1,"k":"s"},{"m":1,"k":"s","n":"wordcase","s":{"r":"Mu","p":["Cool $x"]}},{"a":[{"k":"v","n":"$!reified","t":"Mu"},{"n":"$!todo","t":"Mu","k":"v"}],"b":"C","m":[{"s":{"p":["+\\args is raw","*%_"],"r":"Mu"},"n":"CALL-ME","k":"m","m":0},{"s":{"r":"Bool","p":["*%_"]},"n":"defined","k":"m","m":1},{"n":"defined","s":{"r":"Bool","p":["*%_"]},"k":"m","m":1},{"n":"defined","s":{"p":["*%_"],"r":"Bool:D"},"k":"m","m":1},{"k":"m","m":1,"n":"Slip","s":{"r":"Mu","p":["*%_"]}},{"n":"Slip","s":{"p":["*%_"],"r":"Slip:D"},"k":"m","m":1},{"s":{"p":["*%_"],"r":"Slip:D"},"n":"Slip","k":"m","m":1},{"n":"perl","s":{"p":["*%_"],"r":"Mu"},"m":1,"k":"m"},{"n":"perl","s":{"r":"Mu","p":["*%_"]},"m":1,"k":"m"},{"n":"perl","s":{"r":"Str:D","p":["*%_"]},"k":"m","m":1},{"m":1,"k":"m","n":"perl","s":{"p":["*%_"],"r":"Str:D"}},{"n":"List","s":{"p":["*%_"],"r":"Mu"},"m":1,"k":"m"},{"s":{"r":"List:D","p":["*%_"]},"n":"List","k":"m","m":1},{"n":"List","s":{"p":["*%_"],"r":"List:D"},"k":"m","m":1},{"k":"s","m":0,"n":"BUILDALL","s":{"r":"Mu","p":["@auto","%init","*%_"]}},{"m":0,"k":"m","n":"eager","s":{"p":["*%_"],"r":"List:D"}},{"n":"new","s":{"r":"List:D","p":["**@things is raw","*%_"]},"m":0,"k":"m"},{"k":"m","m":0,"n":"from-slurpy","s":{"r":"Mu","p":["|"]}},{"n":"push","s":{"r":"Mu","p":["|"]},"k":"m","m":0},{"k":"m","m":1,"n":"list","s":{"p":["*%_"],"r":"Mu"}},{"s":{"r":"Mu","p":["*%_"]},"n":"list","m":1,"k":"m"},{"n":"list","s":{"p":["*%_"],"r":"Mu"},"k":"m","m":1},{"k":"m","m":0,"n":"hyper","s":{"r":"Mu","p":["Int(Cool) :$batch = 64","Int(Cool) :$degree = 4","*%_"]}},{"m":0,"k":"m","s":{"r":"List:D","p":["Iterator $iter","*%_"]},"n":"from-iterator"},{"k":"m","m":0,"s":{"p":["Int(Cool) $rotate = 1","*%_"],"r":"Mu"},"n":"rotate"},{"m":1,"k":"m","s":{"r":"Str:D","p":["*%_"]},"n":"fmt"},{"s":{"r":"Str:D","p":["Str(Cool) $format","*%_"]},"n":"fmt","k":"m","m":1},{"s":{"p":["Str(Cool) $format","$separator","*%_"],"r":"Str:D"},"n":"fmt","k":"m","m":1},{"n":"item","s":{"p":["*%_"],"r":"Mu"},"m":0,"k":"m"},{"s":{"r":"Mu","p":["\\topic","*%_"]},"n":"ACCEPTS","m":1,"k":"m"},{"m":1,"k":"m","s":{"p":["Mu:U \\topic","*%_"],"r":"Mu"},"n":"ACCEPTS"},{"k":"m","m":1,"s":{"p":["Mu:D \\a","*%_"],"r":"Mu"},"n":"ACCEPTS"},{"n":"ACCEPTS","s":{"p":["Mu:U $","*%_"],"r":"Bool"},"k":"m","m":1},{"k":"m","m":1,"n":"ACCEPTS","s":{"r":"Bool:D","p":["\\topic","*%_"]}},{"n":"ACCEPTS","s":{"r":"Bool","p":["Iterable:U $","*%_"]},"m":1,"k":"m"},{"s":{"r":"Bool:D","p":["Iterable:D $topic","*%_"]},"n":"ACCEPTS","k":"m","m":1},{"k":"m","m":1,"s":{"r":"Mu","p":["$topic","*%_"]},"n":"ACCEPTS"},{"m":0,"k":"m","s":{"r":"Mu","p":["Int(Cool) :$batch = 64","Int(Cool) :$degree = 4","*%_"]},"n":"race"},{"s":{"p":["Str(Cool) $separator = \"\"","*%_"],"r":"Mu"},"n":"join","m":0,"k":"m"},{"k":"m","m":1,"n":"invert","s":{"r":"Mu","p":["*%_"]}},{"s":{"p":["*%_"],"r":"Mu"},"n":"invert","m":1,"k":"m"},{"m":1,"k":"m","s":{"r":"Seq:D","p":["*%_"]},"n":"invert"},{"s":{"r":"Mu","p":["Int:D \\pos","\\what","*%_"]},"n":"ASSIGN-POS","k":"m","m":0},{"s":{"p":["*%_"],"r":"Nil"},"n":"sink","k":"m","m":0},{"k":"m","m":0,"n":"reverse","s":{"r":"Seq:D","p":["*%_"]}},{"n":"FLATTENABLE_HASH","s":{"p":["*%_"],"r":"Mu"},"m":0,"k":"m"},{"s":{"p":["*%_"],"r":"Mu"},"n":"Numeric","m":1,"k":"m"},{"m":1,"k":"m","n":"Numeric","s":{"p":["*%_"],"r":"Int:D"}},{"s":{"r":"Mu","p":["*%_"]},"n":"to","m":0,"k":"m"},{"s":{"r":"Bool","p":["*%_"]},"n":"is-lazy","m":1,"k":"m"},{"n":"is-lazy","s":{"r":"Bool:D","p":["*%_"]},"k":"m","m":1},{"s":{"r":"Mu","p":["*%_"]},"n":"perl","k":"m","m":1},{"s":{"p":["*%_"],"r":"Mu"},"n":"perl","k":"m","m":1},{"n":"perl","s":{"r":"Str:D","p":["*%_"]},"m":1,"k":"m"},{"s":{"r":"Mu","p":["*%_"]},"n":"of","m":0,"k":"m"},{"s":{"p":["$flag","*%_"],"r":"Mu"},"n":"lazy-if","m":0,"k":"m"},{"s":{"r":"BagHash:D","p":["*%_"]},"n":"BagHash","m":1,"k":"m"},{"k":"m","m":1,"s":{"r":"Mu","p":["*%_"]},"n":"BagHash"},{"k":"m","m":0,"s":{"r":"Mu","p":["|"]},"n":"prepend"},{"m":1,"k":"m","n":"end","s":{"p":["*%_"],"r":"Int"}},{"m":1,"k":"m","s":{"r":"Mu","p":["*%_"]},"n":"end"},{"n":"end","s":{"r":"Int:D","p":["*%_"]},"m":1,"k":"m"},{"k":"m","m":1,"n":"MixHash","s":{"p":["*%_"],"r":"MixHash:D"}},{"m":1,"k":"m","n":"MixHash","s":{"r":"Mu","p":["*%_"]}},{"n":"lazy","s":{"r":"Mu","p":["*%_"]},"m":0,"k":"m"},{"k":"m","m":1,"s":{"p":["*%_"],"r":"Mu"},"n":"Int"},{"k":"m","m":1,"s":{"r":"Int:D","p":["*%_"]},"n":"Int"},{"m":1,"k":"m","n":"antipairs","s":{"r":"Mu","p":["*%_"]}},{"m":1,"k":"m","n":"antipairs","s":{"r":"Mu","p":["*%_"]}},{"n":"antipairs","s":{"r":"Seq:D","p":["*%_"]},"k":"m","m":1},{"k":"m","m":0,"n":"reification-target","s":{"r":"Mu","p":["*%_"]}},{"m":0,"k":"m","n":"iterator","s":{"p":["*%_"],"r":"Iterator:D"}},{"m":0,"k":"m","s":{"r":"Capture:D","p":["*%_"]},"n":"Capture"},{"m":1,"k":"m","s":{"p":["*%_"],"r":"Mu"},"n":"Str"},{"n":"Str","s":{"p":["*%_"],"r":"Mu"},"k":"m","m":1},{"s":{"r":"Str:D","p":["*%_"]},"n":"Str","m":1,"k":"m"},{"k":"m","m":1,"n":"Slip","s":{"p":["*%_"],"r":"Mu"}},{"n":"Slip","s":{"r":"Slip:D","p":["*%_"]},"m":1,"k":"m"},{"k":"m","m":1,"n":"SetHash","s":{"r":"SetHash:D","p":["*%_"]}},{"m":1,"k":"m","n":"SetHash","s":{"r":"Mu","p":["*%_"]}},{"m":1,"k":"m","s":{"p":["*%_"],"r":"Mu"},"n":"tail"},{"m":1,"k":"m","n":"tail","s":{"r":"Mu","p":["$n","*%_"]}},{"n":"tail","s":{"r":"Mu","p":["*%_"]},"k":"m","m":1},{"s":{"r":"Seq:D","p":["$n","*%_"]},"n":"tail","k":"m","m":1},{"k":"m","m":0,"s":{"p":["|"],"r":"Mu"},"n":"pop"},{"n":"Supply","s":{"r":"Mu","p":["*%_"]},"m":1,"k":"m"},{"m":1,"k":"m","n":"Supply","s":{"r":"Supply:D","p":["*%_"]}},{"k":"m","m":1,"n":"permutations","s":{"r":"Seq:D","p":["*%_"]}},{"m":1,"k":"m","n":"Array","s":{"p":["*%_"],"r":"Mu"}},{"k":"m","m":1,"s":{"r":"Array:D","p":["*%_"]},"n":"Array"},{"k":"m","m":1,"s":{"r":"Bag:D","p":["*%_"]},"n":"Bag"},{"k":"m","m":1,"n":"Bag","s":{"p":["*%_"],"r":"Mu"}},{"k":"m","m":1,"s":{"p":["Any:D $","*%_"],"r":"Bool"},"n":"EXISTS-POS"},{"m":1,"k":"m","n":"EXISTS-POS","s":{"r":"Mu","p":["Any:U $pos","*%_"]}},{"k":"m","m":1,"n":"EXISTS-POS","s":{"r":"Bool:D","p":["int \\pos","*%_"]}},{"k":"m","m":1,"n":"EXISTS-POS","s":{"r":"Bool:D","p":["Int:D \\pos","*%_"]}},{"m":1,"k":"m","n":"EXISTS-POS","s":{"r":"Bool:D","p":["Num:D \\pos","*%_"]}},{"s":{"r":"Bool:D","p":["Any:D \\pos","*%_"]},"n":"EXISTS-POS","m":1,"k":"m"},{"s":{"p":["Any:U \\pos","*%_"],"r":"Mu"},"n":"EXISTS-POS","m":1,"k":"m"},{"k":"m","m":1,"s":{"r":"Bool:D","p":["\\one","\\two","*%_"]},"n":"EXISTS-POS"},{"k":"m","m":1,"n":"EXISTS-POS","s":{"r":"Bool:D","p":["\\one","\\two","\\three","*%_"]}},{"k":"m","m":1,"s":{"p":["**@indices","*%_"],"r":"Bool:D"},"n":"EXISTS-POS"},{"n":"EXISTS-POS","s":{"p":["int $pos","*%_"],"r":"Mu"},"m":1,"k":"m"},{"s":{"r":"Bool:D","p":["Int:D $pos","*%_"]},"n":"EXISTS-POS","k":"m","m":1},{"m":1,"k":"m","n":"combinations","s":{"p":["*%_"],"r":"Seq:D"}},{"s":{"r":"Seq:D","p":["$of","*%_"]},"n":"combinations","m":1,"k":"m"},{"s":{"r":"Seq:D","p":["Range:D $ofrange","*%_"]},"n":"combinations","m":1,"k":"m"},{"m":0,"k":"m","s":{"r":"Mu","p":["*%_"]},"n":"flat"},{"k":"m","m":0,"n":"append","s":{"r":"Mu","p":["|"]}},{"k":"m","m":0,"s":{"p":["|"],"r":"Mu"},"n":"from-slurpy-flat"},{"m":1,"k":"m","s":{"r":"Mu","p":["*%_"]},"n":"sort"},{"n":"sort","s":{"r":"Mu","p":["&by","*%_"]},"k":"m","m":1},{"n":"sort","s":{"r":"Seq:D","p":["*%_"]},"m":1,"k":"m"},{"m":1,"k":"m","n":"sort","s":{"p":["&by","*%_"],"r":"Seq:D"}},{"m":0,"k":"m","s":{"r":"Mu","p":["|"]},"n":"from-slurpy-onearg"},{"n":"Set","s":{"r":"Set:D","p":["*%_"]},"k":"m","m":1},{"s":{"p":["*%_"],"r":"Mu"},"n":"Set","k":"m","m":1},{"n":"Mix","s":{"p":["*%_"],"r":"Mix:D"},"k":"m","m":1},{"m":1,"k":"m","s":{"p":["*%_"],"r":"Mu"},"n":"Mix"},{"k":"m","m":0,"n":"from","s":{"p":["*%_"],"r":"Mu"}},{"n":"FLATTENABLE_LIST","s":{"r":"Mu","p":["*%_"]},"m":0,"k":"m"},{"s":{"r":"Mu","p":["*%_"]},"n":"kv","m":1,"k":"m"},{"s":{"p":["*%_"],"r":"Mu"},"n":"kv","m":1,"k":"m"},{"s":{"p":["*%_"],"r":"Seq:D"},"n":"kv","k":"m","m":1},{"s":{"r":"List:D","p":["Iterable:D \\iterable",":$INITIALIZE!","*%_"]},"n":"STORE","k":"m","m":1},{"m":1,"k":"m","s":{"r":"List:D","p":["Iterable:D \\iterable","*%_"]},"n":"STORE"},{"s":{"r":"List:D","p":["Mu \\item","*%_"]},"n":"STORE","k":"m","m":1},{"k":"m","m":1,"s":{"p":["*%_"],"r":"Mu"},"n":"values"},{"n":"values","s":{"r":"Mu","p":["*%_"]},"m":1,"k":"m"},{"m":1,"k":"m","s":{"r":"Seq:D","p":["*%_"]},"n":"values"},{"m":0,"k":"m","s":{"p":["|"],"r":"Mu"},"n":"unshift"},{"k":"m","m":1,"n":"roll","s":{"p":["*%_"],"r":"Mu"}},{"s":{"p":["Whatever $","*%_"],"r":"Mu"},"n":"roll","m":1,"k":"m"},{"n":"roll","s":{"r":"Mu","p":["\\number","*%_"]},"m":1,"k":"m"},{"m":1,"k":"m","n":"pairs","s":{"p":["*%_"],"r":"Mu"}},{"s":{"r":"Mu","p":["*%_"]},"n":"pairs","m":1,"k":"m"},{"s":{"p":["*%_"],"r":"Seq:D"},"n":"pairs","k":"m","m":1},{"s":{"p":["*%_"],"r":"Mu"},"n":"gist","m":1,"k":"m"},{"k":"m","m":1,"n":"gist","s":{"r":"Mu","p":["*%_"]}},{"s":{"r":"Str:D","p":["*%_"]},"n":"gist","k":"m","m":1},{"k":"m","m":0,"n":"BIND-POS","s":{"p":["Int:D \\pos","\\what","*%_"],"r":"Mu"}},{"k":"m","m":1,"n":"AT-POS","s":{"p":["int \\pos","*%_"],"r":"Mu"}},{"s":{"r":"Mu","p":["Int:D \\pos","*%_"]},"n":"AT-POS","k":"m","m":1},{"m":1,"k":"m","s":{"r":"Mu","p":["Num:D \\pos","*%_"]},"n":"AT-POS"},{"m":1,"k":"m","s":{"p":["Any:D \\pos","*%_"],"r":"Mu"},"n":"AT-POS"},{"k":"m","m":1,"n":"AT-POS","s":{"r":"Mu","p":["int \\pos","*%_"]}},{"k":"m","m":1,"n":"AT-POS","s":{"p":["Int:D \\pos","*%_"],"r":"Mu"}},{"m":1,"k":"m","n":"AT-POS","s":{"p":["Num:D \\pos","*%_"],"r":"Mu"}},{"n":"AT-POS","s":{"r":"Mu","p":["Any:D \\pos","*%_"]},"k":"m","m":1},{"s":{"p":["Any:U \\pos","*%_"],"r":"Mu"},"n":"AT-POS","m":1,"k":"m"},{"k":"m","m":1,"s":{"p":["\\one","\\two","*%_"],"r":"Mu"},"n":"AT-POS"},{"s":{"r":"Mu","p":["\\one","\\two","\\three","*%_"]},"n":"AT-POS","k":"m","m":1},{"s":{"r":"Mu","p":["**@indices","*%_"]},"n":"AT-POS","k":"m","m":1},{"s":{"p":["int $pos","*%_"],"r":"Mu"},"n":"AT-POS","k":"m","m":1},{"k":"m","m":1,"n":"AT-POS","s":{"r":"Mu","p":["Int:D $pos","*%_"]}},{"m":0,"k":"m","s":{"r":"Mu","p":["|c is raw"]},"n":"CALL-ME"},{"m":1,"k":"m","n":"chrs","s":{"r":"Mu","p":["*%_"]}},{"k":"m","m":1,"n":"chrs","s":{"p":["*%_"],"r":"Str:D"}},{"k":"m","m":0,"n":"sum","s":{"p":["*%_"],"r":"Mu"}},{"m":0,"k":"m","s":{"p":["|"],"r":"Mu"},"n":"shift"},{"n":"keys","s":{"p":["*%_"],"r":"Mu"},"m":1,"k":"m"},{"k":"m","m":1,"s":{"r":"Mu","p":["*%_"]},"n":"keys"},{"m":1,"k":"m","s":{"p":["*%_"],"r":"Seq:D"},"n":"keys"},{"s":{"p":["*%_"],"r":"Mu"},"n":"pick","m":1,"k":"m"},{"s":{"p":["Callable:D $calculate","*%_"],"r":"Mu"},"n":"pick","m":1,"k":"m"},{"k":"m","m":1,"s":{"p":["$number is copy","*%_"],"r":"Mu"},"n":"pick"},{"m":1,"k":"m","n":"Bool","s":{"p":["*%_"],"r":"Bool"}},{"s":{"r":"Mu","p":["*%_"]},"n":"Bool","m":1,"k":"m"},{"n":"Bool","s":{"p":["*%_"],"r":"Bool:D"},"m":1,"k":"m"},{"s":{"p":["*%_"],"r":"Int"},"n":"elems","m":1,"k":"m"},{"s":{"r":"Mu","p":["*%_"]},"n":"elems","k":"m","m":1},{"k":"m","m":1,"n":"elems","s":{"r":"Int:D","p":["*%_"]}},{"k":"m","m":1,"s":{"p":["*%_"],"r":"Mu"},"n":"List"},{"m":1,"k":"m","s":{"p":["*%_"],"r":"List:D"},"n":"List"},{"n":"BUILDALL","s":{"r":"Mu","p":["@auto","%init","*%_"]},"m":0,"k":"s"}],"k":"c","t":"Slip","n":"Empty"},{"t":"Int","n":"UINT64_UPPER","b":"C","k":"c","m":[{"k":"m","m":1,"s":{"r":"Int:D","p":["\\value","*%_"]},"n":"new"},{"s":{"r":"Int:D","p":["int \\value","*%_"]},"n":"new","m":1,"k":"m"},{"m":1,"k":"m","s":{"p":["Int:D \\value = 0","*%_"],"r":"Int:D"},"n":"new"},{"m":0,"k":"m","s":{"p":["*%_"],"r":"Mu"},"n":"Capture"},{"s":{"p":["*%_"],"r":"Int"},"n":"Int","m":0,"k":"m"},{"n":"Num","s":{"r":"Num:D","p":["*%_"]},"k":"m","m":0},{"s":{"p":["$?","*%_"],"r":"Rat:D"},"n":"Rat","k":"m","m":0},{"m":0,"k":"m","s":{"p":["$?","*%_"],"r":"FatRat:D"},"n":"FatRat"},{"k":"m","m":0,"n":"abs","s":{"r":"Int:D","p":["*%_"]}},{"m":0,"k":"m","n":"Bridge","s":{"p":["*%_"],"r":"Num:D"}},{"k":"m","m":0,"s":{"r":"Str:D","p":["*%_"]},"n":"chr"},{"s":{"r":"Num:D","p":["*%_"]},"n":"sqrt","m":0,"k":"m"},{"m":1,"k":"m","n":"base","s":{"r":"Str:D","p":["Int:D $base","*%_"]}},{"k":"m","m":1,"n":"base","s":{"r":"Str:D","p":["Int(Cool) $base","$digits?","*%_"]}},{"n":"polymod","s":{"r":"Seq:D","p":["+@mods","*%_"]},"m":0,"k":"m"},{"k":"m","m":0,"n":"expmod","s":{"r":"Int:D","p":["Int:D \\base","Int:D \\mod","*%_"]}},{"m":0,"k":"m","n":"is-prime","s":{"r":"Bool:D","p":["*%_"]}},{"k":"m","m":0,"s":{"p":["*%_"],"r":"Int:D"},"n":"floor"},{"s":{"p":["*%_"],"r":"Int:D"},"n":"ceiling","m":0,"k":"m"},{"s":{"r":"Int:D","p":["*%_"]},"n":"round","k":"m","m":1},{"k":"m","m":1,"s":{"r":"Real:D","p":["Real(Cool) $scale","*%_"]},"n":"round"},{"s":{"p":["*%_"],"r":"Mu"},"n":"round","m":1,"k":"m"},{"s":{"p":["$scale","*%_"],"r":"Mu"},"n":"round","m":1,"k":"m"},{"s":{"r":"Int:D","p":["*%_"]},"n":"lsb","m":0,"k":"m"},{"s":{"r":"Int:D","p":["*%_"]},"n":"msb","k":"m","m":0},{"k":"m","m":0,"n":"narrow","s":{"r":"Int:D","p":["*%_"]}},{"m":0,"k":"m","s":{"r":"Range:D","p":["*%_"]},"n":"Range"},{"k":"m","m":0,"s":{"r":"Mu","p":["*%_"]},"n":"unival"},{"s":{"r":"Mu","p":["*%_"]},"n":"sign","m":0,"k":"m"},{"s":{"p":["*%_"],"r":"Mu"},"n":"conj","k":"m","m":0},{"s":{"r":"Mu","p":["*%_"]},"n":"rand","m":0,"k":"m"},{"m":0,"k":"m","n":"sin","s":{"r":"Mu","p":["*%_"]}},{"m":0,"k":"m","s":{"p":["*%_"],"r":"Mu"},"n":"asin"},{"m":0,"k":"m","s":{"p":["*%_"],"r":"Mu"},"n":"cos"},{"k":"m","m":0,"n":"acos","s":{"r":"Mu","p":["*%_"]}},{"k":"m","m":0,"s":{"p":["*%_"],"r":"Mu"},"n":"tan"},{"n":"atan","s":{"r":"Mu","p":["*%_"]},"k":"m","m":0},{"k":"m","m":1,"s":{"p":["Real $x = 1e0","*%_"],"r":"Mu"},"n":"atan2"},{"n":"atan2","s":{"p":["Cool $x = 1e0","*%_"],"r":"Mu"},"m":1,"k":"m"},{"m":0,"k":"m","s":{"r":"Mu","p":["*%_"]},"n":"sec"},{"m":0,"k":"m","s":{"p":["*%_"],"r":"Mu"},"n":"asec"},{"m":0,"k":"m","n":"cosec","s":{"p":["*%_"],"r":"Mu"}},{"m":0,"k":"m","s":{"p":["*%_"],"r":"Mu"},"n":"acosec"},{"n":"cotan","s":{"p":["*%_"],"r":"Mu"},"m":0,"k":"m"},{"n":"acotan","s":{"r":"Mu","p":["*%_"]},"m":0,"k":"m"},{"s":{"p":["*%_"],"r":"Mu"},"n":"sinh","k":"m","m":0},{"k":"m","m":0,"n":"asinh","s":{"r":"Mu","p":["*%_"]}},{"s":{"p":["*%_"],"r":"Mu"},"n":"cosh","k":"m","m":0},{"k":"m","m":0,"n":"acosh","s":{"r":"Mu","p":["*%_"]}},{"k":"m","m":0,"n":"tanh","s":{"r":"Mu","p":["*%_"]}},{"m":0,"k":"m","n":"atanh","s":{"p":["*%_"],"r":"Mu"}},{"m":0,"k":"m","s":{"p":["*%_"],"r":"Mu"},"n":"sech"},{"k":"m","m":0,"s":{"r":"Mu","p":["*%_"]},"n":"asech"},{"s":{"r":"Mu","p":["*%_"]},"n":"cosech","k":"m","m":0},{"s":{"r":"Mu","p":["*%_"]},"n":"acosech","k":"m","m":0},{"s":{"p":["*%_"],"r":"Mu"},"n":"cotanh","k":"m","m":0},{"k":"m","m":0,"s":{"p":["*%_"],"r":"Mu"},"n":"acotanh"},{"m":0,"k":"m","n":"unpolar","s":{"r":"Mu","p":["Real $angle","*%_"]}},{"s":{"p":["*%_"],"r":"Mu"},"n":"cis","k":"m","m":0},{"s":{"r":"Mu","p":["*%_"]},"n":"Complex","m":0,"k":"m"},{"n":"log","s":{"p":["*%_"],"r":"Mu"},"m":1,"k":"m"},{"m":1,"k":"m","n":"log","s":{"p":["Real $base","*%_"],"r":"Mu"}},{"k":"m","m":1,"s":{"p":["Cool $base","*%_"],"r":"Mu"},"n":"log"},{"s":{"r":"Mu","p":["Numeric $base","*%_"]},"n":"log","k":"m","m":1},{"k":"m","m":1,"s":{"r":"Mu","p":["*%_"]},"n":"exp"},{"k":"m","m":1,"n":"exp","s":{"p":["$base","*%_"],"r":"Mu"}},{"k":"m","m":0,"s":{"r":"Mu","p":["*%_"]},"n":"truncate"},{"k":"m","m":0,"n":"isNaN","s":{"r":"Mu","p":["*%_"]}},{"k":"m","m":0,"n":"log10","s":{"r":"Mu","p":["*%_"]}},{"n":"roots","s":{"r":"Mu","p":["Cool $n","*%_"]},"k":"m","m":0},{"n":"succ","s":{"p":["*%_"],"r":"Mu"},"m":0,"k":"m"},{"n":"pred","s":{"r":"Mu","p":["*%_"]},"m":0,"k":"m"},{"m":1,"k":"m","n":"WHICH","s":{"p":["*%_"],"r":"ValueObjAt:D"}},{"n":"WHICH","s":{"r":"ObjAt:D","p":["*%_"]},"k":"m","m":1},{"s":{"p":["*%_"],"r":"ValueObjAt:D"},"n":"WHICH","k":"m","m":1},{"s":{"r":"Mu","p":["*%_"]},"n":"perl","k":"m","m":1},{"m":1,"k":"m","s":{"r":"Mu","p":["*%_"]},"n":"perl"},{"s":{"r":"Str:D","p":["*%_"]},"n":"perl","k":"m","m":1},{"n":"Bool","s":{"p":["*%_"],"r":"Bool"},"m":1,"k":"m"},{"s":{"p":["*%_"],"r":"Mu"},"n":"Bool","m":1,"k":"m"},{"k":"m","m":1,"n":"Bool","s":{"r":"Bool:D","p":["*%_"]}},{"m":1,"k":"m","s":{"r":"Mu","p":["*%_"]},"n":"Bool"},{"m":1,"k":"m","s":{"p":["*%_"],"r":"Mu"},"n":"Str"},{"m":1,"k":"m","s":{"p":["*%_"],"r":"Mu"},"n":"Str"},{"m":1,"k":"m","n":"Str","s":{"p":["*%_"],"r":"Str:D"}},{"k":"m","m":1,"s":{"r":"Mu","p":["*%_"]},"n":"Str"},{"n":"Real","s":{"p":["*%_"],"r":"Mu"},"k":"m","m":1},{"s":{"r":"Mu","p":["*%_"]},"n":"Real","k":"m","m":1},{"k":"m","m":1,"s":{"p":["*%_"],"r":"Mu"},"n":"Real"},{"k":"m","m":1,"n":"Real","s":{"p":["*%_"],"r":"Mu"}},{"k":"m","m":1,"s":{"p":["*%_"],"r":"Mu"},"n":"Numeric"},{"k":"m","m":1,"n":"Numeric","s":{"r":"Mu","p":["*%_"]}},{"n":"Numeric","s":{"p":["*%_"],"r":"Mu"},"k":"m","m":1},{"m":1,"k":"m","s":{"p":["\\topic","*%_"],"r":"Mu"},"n":"ACCEPTS"},{"n":"ACCEPTS","s":{"p":["Mu:U \\topic","*%_"],"r":"Mu"},"k":"m","m":1},{"s":{"r":"Mu","p":["Mu:D \\a","*%_"]},"n":"ACCEPTS","m":1,"k":"m"},{"n":"ACCEPTS","s":{"p":["Mu:U $","*%_"],"r":"Bool"},"m":1,"k":"m"},{"s":{"p":["\\topic","*%_"],"r":"Bool:D"},"n":"ACCEPTS","m":1,"k":"m"},{"s":{"p":["Any:D \\a","*%_"],"r":"Mu"},"n":"ACCEPTS","k":"m","m":1},{"n":"gist","s":{"r":"Mu","p":["*%_"]},"m":1,"k":"m"},{"k":"m","m":1,"n":"gist","s":{"r":"Mu","p":["*%_"]}},{"s":{"p":["*%_"],"r":"Mu"},"n":"gist","k":"m","m":1},{"n":"DUMP","s":{"r":"Mu","p":["*%_"]},"m":1,"k":"m"},{"k":"m","m":1,"n":"DUMP","s":{"r":"Mu","p":[":$indent-step = 4",":%ctx","*%_"]}},{"n":"DUMP","s":{"p":["*%_"],"r":"Mu"},"m":1,"k":"m"},{"k":"s","m":0,"s":{"p":["@auto","%init","*%_"],"r":"Mu"},"n":"BUILDALL"}]},{"t":"Sub+{is-pure}+{Precedence}","n":"&infix:<unicmp>","k":"v"},{"m":1,"k":"s","n":"infix:<unicmp>","s":{"r":"Order:D","p":["Str:D \\a","Str:D \\b"]}},{"k":"s","m":1,"n":"infix:<unicmp>","s":{"r":"Order:D","p":["Pair:D \\a","Pair:D \\b"]}},{"n":"SIGFPE","t":"Signal","k":"e"},{"k":"e","t":"Signal","n":"SIGTRAP"},{"k":"e","n":"Same","t":"Order"},{"t":"Order","n":"More","k":"e"},{"k":"v","t":"Sub+{Precedence}","n":"&infix:<=>"},{"m":0,"k":"s","n":"infix:<=>","s":{"p":["Mu \\a","Mu \\b"],"r":"Mu"}},{"k":"v","n":"&infix:<max>","t":"Sub+{is-pure}+{Precedence}"},{"s":{"p":["Mu:D \\a","Mu:U $"],"r":"Mu"},"n":"infix:<max>","k":"s","m":1},{"m":1,"k":"s","n":"infix:<max>","s":{"p":["Mu:U $","Mu:D \\b"],"r":"Mu"}},{"m":1,"k":"s","n":"infix:<max>","s":{"r":"Mu","p":["Mu:D \\a","Mu:D \\b"]}},{"k":"s","m":1,"s":{"p":["Int:D \\a","Int:D \\b"],"r":"Mu"},"n":"infix:<max>"},{"k":"s","m":1,"s":{"p":["int \\a","int \\b"],"r":"Mu"},"n":"infix:<max>"},{"s":{"p":["Num:D \\a","Num:D \\b"],"r":"Mu"},"n":"infix:<max>","m":1,"k":"s"},{"k":"s","m":1,"n":"infix:<max>","s":{"r":"Mu","p":["num \\a","num \\b"]}},{"n":"infix:<max>","s":{"r":"Mu","p":["+\\args is raw"]},"m":1,"k":"s"},{"t":"Sub+{is-nodal}","n":"&postcircumfix:<{; }>","k":"v"},{"m":1,"k":"s","s":{"p":["\\SELF","@indices"],"r":"Mu"},"n":"postcircumfix:<{; }>"},{"n":"postcircumfix:<{; }>","s":{"r":"Mu","p":["\\SELF","@indices",":$exists!"]},"m":1,"k":"s"},{"k":"v","t":"Sub","n":"&unshift"},{"n":"unshift","s":{"p":["\\a","|elems is raw"],"r":"Mu"},"m":1,"k":"s"},{"t":"Sub","n":"&uniprop","k":"v"},{"n":"uniprop","s":{"r":"Mu","p":["Str:D $str","|c is raw"]},"k":"s","m":1},{"s":{"p":["Int:D $code"],"r":"Mu"},"n":"uniprop","k":"s","m":1},{"k":"s","m":1,"n":"uniprop","s":{"r":"Mu","p":["Int:D $code","Stringy:D $propname"]}},{"t":"Sub","n":"&atomic-fetch","k":"v"},{"k":"s","m":1,"n":"atomic-fetch","s":{"p":["$source is rw"],"r":"Mu"}},{"m":1,"k":"s","n":"atomic-fetch","s":{"p":["atomicint $source is rw"],"r":"Mu"}},{"t":"Sub","n":"&callsame","k":"v"},{"m":0,"k":"s","n":"callsame","s":{"p":[],"r":"Mu"}},{"n":"&floor","t":"Sub+{is-pure}","k":"v"},{"s":{"p":["$a"],"r":"Mu"},"n":"floor","m":1,"k":"s"},{"s":{"r":"Mu","p":["Numeric $a"]},"n":"floor","k":"s","m":1},{"k":"s","m":1,"s":{"p":["num $a"],"r":"num"},"n":"floor"},{"k":"v","n":"&return","t":"Sub"},{"n":"return","s":{"p":[],"r":"Nil"},"m":1,"k":"s"},{"s":{"p":["Mu \\x"],"r":"Nil"},"n":"return","k":"s","m":1},{"n":"return","s":{"p":["**@x is raw"],"r":"Nil"},"m":1,"k":"s"},{"n":"Sequence","t":"Sequence","b":"C","m":[{"n":"Numeric","s":{"p":["*%_"],"r":"Mu"},"k":"m","m":0},{"k":"m","m":0,"n":"fmt","s":{"r":"Mu","p":["|c is raw"]}}],"k":"ro","d":"TITLE\nclass Sequence\n\nSUBTITLE\nOperations for higher-level sequences\n\n    class Sequence does PositionalBindFailover { }\n\nA Sequence implements a series of methods for converting hight-level Seqs\ninto different types of objects, from positional to other.\n\n"},{"k":"v","t":"Sub","n":"&classify"},{"s":{"p":["$test","+\\items is raw",":$into!","*%named"],"r":"Mu"},"n":"classify","k":"s","m":1},{"k":"s","m":1,"s":{"p":["$test","+\\items is raw","*%named"],"r":"Mu"},"n":"classify"},{"b":"A","k":"c","m":[{"m":0,"k":"s","n":"BUILDALL","s":{"r":"Mu","p":["@auto","%init","*%_"]}}],"n":"PhasersList","t":"PhasersList"},{"k":"v","t":"Sub","n":"&trait_mod:<does>"},{"n":"trait_mod:<does>","s":{"p":["Mu:U $doee","Mu:U $role"],"r":"Mu"},"m":1,"k":"s"},{"n":"trait_mod:<does>","s":{"p":["Attribute:D $a","Mu:U $role"],"r":"Mu"},"m":1,"k":"s"},{"n":"trait_mod:<does>","s":{"r":"Mu","p":["Variable:D $v","Mu:U $role"]},"m":1,"k":"s"},{"d":"TITLE\nclass Regex\n\nSUBTITLE\nString pattern\n\n    class Regex is Method { }\n\nA regex is a kind of pattern that describes a set of strings. The process\nof finding out whether a given string is in the set is called matching. The\nresult of such a matching is a Match object, which evaluates to True in\nboolean context if the string is in the set.\n\nA regex is typically constructed by a regex literal\n\n    rx/ ^ab /;      # describes all strings starting with 'ab'\n    / ^ ab /;       # same\n    rx/ \\d ** 2/;   # describes all strings containing at least two digits\n\n A named regex can be defined with the regex declarator followed by its\ndefinition in curly braces. Since any regex does Callable introspection\nrequires referencing via &-sigil.\n\n    my regex R { \\N };\n    say &R.^name; # OUTPUT: «Regex␤»\n\nTo match a string against a regex, you can use the smartmatch operator:\n\n    my $match = 'abc' ~~ rx/ ^ab /;\n    say $match.Bool;                # OUTPUT: «True␤»\n    say $match.orig;                # OUTPUT: «abc␤»\n    say $match.Str;                 # OUTPUT: «ab␤»\n    say $match.from;                # OUTPUT: «0␤»\n    say $match.to;                  # OUTPUT: «2␤»\n\nOr you can evaluate the regex in boolean context, in which case it matches\nagainst the $_ variable\n\n    $_ = 'abc';\n    if / ^ab / {\n        say '\"abc\" begins with \"ab\"';\n    }\n    else {\n        say 'This is a weird alternative Universe';\n    }\n\n","k":"c","m":[{"m":1,"k":"m","s":{"p":["Mu:U \\a","*%_"],"r":"Mu"},"n":"ACCEPTS"},{"m":1,"k":"m","s":{"r":"Mu","p":["\\topic","*%_"]},"n":"ACCEPTS"},{"s":{"r":"Mu","p":["\\topic","*%_"]},"n":"ACCEPTS","m":1,"k":"m"},{"n":"ACCEPTS","s":{"p":["Uni:D \\uni","*%_"],"r":"Mu"},"k":"m","m":1},{"n":"ACCEPTS","s":{"p":["@a","*%_"],"r":"Mu"},"k":"m","m":1},{"n":"ACCEPTS","s":{"p":["%h","*%_"],"r":"Mu"},"k":"m","m":1},{"s":{"r":"Regex","p":["Mu :$topic is raw","Mu :$slash is raw","*%_"]},"n":"clone","m":0,"k":"m"},{"s":{"p":["*%_"],"r":"Bool"},"n":"Bool","k":"m","m":1},{"n":"Bool","s":{"p":["*%_"],"r":"Mu"},"k":"m","m":1},{"m":1,"k":"m","n":"Bool","s":{"r":"Mu","p":["*%_"]}},{"n":"gist","s":{"r":"Mu","p":["*%_"]},"k":"m","m":1},{"n":"gist","s":{"p":["*%_"],"r":"Mu"},"m":1,"k":"m"},{"m":1,"k":"m","n":"gist","s":{"r":"Mu","p":["*%_"]}},{"s":{"p":["*%_"],"r":"Mu"},"n":"gist","m":1,"k":"m"},{"n":"gist","s":{"r":"Mu","p":["*%_"]},"m":1,"k":"m"},{"n":"perl","s":{"p":["*%_"],"r":"Mu"},"m":1,"k":"m"},{"n":"perl","s":{"p":["*%_"],"r":"Mu"},"k":"m","m":1},{"n":"perl","s":{"r":"Mu","p":["*%_"]},"k":"m","m":1},{"m":1,"k":"m","s":{"p":["*%_"],"r":"Mu"},"n":"perl"},{"m":1,"k":"m","s":{"p":["*%_"],"r":"Mu"},"n":"perl"},{"m":1,"k":"m","s":{"p":["*%_"],"r":"Mu"},"n":"perl"},{"m":0,"k":"s","s":{"r":"Mu","p":["@auto","%init","*%_"]},"n":"BUILDALL"},{"s":{"r":"Mu","p":["*%_"]},"n":"gist","m":1,"k":"m"},{"m":1,"k":"m","n":"gist","s":{"p":["*%_"],"r":"Mu"}},{"k":"m","m":1,"s":{"r":"Mu","p":["*%_"]},"n":"gist"},{"s":{"r":"Mu","p":["*%_"]},"n":"gist","m":1,"k":"m"},{"m":0,"k":"s","s":{"p":["@auto","%init","*%_"],"r":"Mu"},"n":"BUILDALL"},{"m":0,"k":"m","n":"onlystar","s":{"p":["*%_"],"r":"Mu"}},{"s":{"p":["*@","*%_"],"r":"Mu"},"n":"leave","k":"m","m":0},{"k":"m","m":0,"s":{"r":"Mu","p":["*%_"]},"n":"candidates"},{"n":"cando","s":{"p":["Capture:D $c","*%_"],"r":"Mu"},"k":"m","m":0},{"s":{"r":"Mu","p":["$handle","*%_"]},"n":"unwrap","k":"m","m":0},{"k":"m","m":0,"n":"multi","s":{"p":["*%_"],"r":"Mu"}},{"k":"m","m":1,"s":{"p":["*%_"],"r":"Mu"},"n":"perl"},{"k":"m","m":1,"n":"perl","s":{"r":"Mu","p":["*%_"]}},{"s":{"r":"Mu","p":["*%_"]},"n":"perl","m":1,"k":"m"},{"k":"m","m":1,"s":{"r":"Mu","p":["*%_"]},"n":"perl"},{"k":"m","m":1,"n":"perl","s":{"p":["*%_"],"r":"Mu"}},{"m":0,"k":"m","n":"soft","s":{"p":["*%_"],"r":"Nil"}},{"s":{"p":["&wrapper","*%_"],"r":"Mu"},"n":"wrap","m":0,"k":"m"},{"k":"m","m":0,"s":{"r":"Mu","p":["*%_"]},"n":"yada"},{"k":"m","m":1,"s":{"p":["*%_"],"r":"Mu"},"n":"gist"},{"m":1,"k":"m","n":"gist","s":{"r":"Mu","p":["*%_"]}},{"s":{"p":["*%_"],"r":"Mu"},"n":"gist","k":"m","m":1},{"k":"m","m":0,"n":"package","s":{"r":"Mu","p":["*%_"]}},{"k":"s","m":0,"s":{"p":["@auto","%init","*%_"],"r":"Mu"},"n":"BUILDALL"},{"n":"POSITIONS","s":{"r":"Mu","p":["Failure:D \\failure","*%_"]},"m":1,"k":"m"},{"n":"POSITIONS","s":{"r":"Mu","p":["Any:D \\list","*%_"]},"k":"m","m":1},{"m":0,"k":"m","s":{"p":["Str:D \\name","*%_"],"r":"Mu"},"n":"has-phaser"},{"s":{"p":["Str:D $name","*%_"],"r":"Mu"},"n":"phasers","m":0,"k":"m"},{"n":"WHY","s":{"p":["*%_"],"r":"Mu"},"k":"m","m":0},{"s":{"p":["*%_"],"r":"Mu"},"n":"perl","k":"m","m":1},{"m":1,"k":"m","n":"perl","s":{"p":["*%_"],"r":"Mu"}},{"m":1,"k":"m","n":"perl","s":{"r":"Mu","p":["*%_"]}},{"m":1,"k":"m","s":{"p":["*%_"],"r":"Mu"},"n":"perl"},{"k":"m","m":0,"n":"of","s":{"p":["*%_"],"r":"Mu"}},{"n":"fire_if_phasers","s":{"p":["Str $name","*%_"],"r":"Nil"},"m":0,"k":"m"},{"n":"set_why","s":{"p":["$why","*%_"],"r":"Nil"},"k":"m","m":0},{"n":"returns","s":{"p":["*%_"],"r":"Mu"},"m":0,"k":"m"},{"n":"has-phasers","s":{"p":["*%_"],"r":"Mu"},"k":"m","m":0},{"n":"add_phaser","s":{"p":["Str:D \\name","&block","*%_"],"r":"Nil"},"m":0,"k":"m"},{"n":"fire_phasers","s":{"p":["Str $name","*%_"],"r":"Nil"},"k":"m","m":0},{"k":"s","m":0,"n":"BUILDALL","s":{"r":"Mu","p":["@auto","%init","*%_"]}},{"k":"m","m":0,"n":"static_id","s":{"p":["*%_"],"r":"Mu"}},{"m":0,"k":"m","n":"returns","s":{"r":"Mu","p":["*%_"]}},{"m":0,"k":"m","s":{"p":["Capture:D $c","*%_"],"r":"Mu"},"n":"cando"},{"m":0,"k":"m","s":{"r":"Mu","p":["*%_"]},"n":"outer"},{"s":{"r":"Mu","p":["*%attrinit"]},"n":"new","m":1,"k":"m"},{"n":"new","s":{"r":"Mu","p":["$","*@","*%_"]},"m":1,"k":"m"},{"s":{"p":["*%_"],"r":"Mu"},"n":"new","m":1,"k":"m"},{"k":"m","m":0,"s":{"r":"Mu","p":["*%_"]},"n":"count"},{"m":1,"k":"m","n":"ACCEPTS","s":{"p":["\\topic","*%_"],"r":"Mu"}},{"k":"m","m":1,"s":{"p":["Mu:U \\topic","*%_"],"r":"Mu"},"n":"ACCEPTS"},{"k":"m","m":1,"s":{"p":["Mu:D \\a","*%_"],"r":"Mu"},"n":"ACCEPTS"},{"s":{"r":"Bool","p":["Mu:U $","*%_"]},"n":"ACCEPTS","m":1,"k":"m"},{"s":{"r":"Bool:D","p":["\\topic","*%_"]},"n":"ACCEPTS","m":1,"k":"m"},{"n":"ACCEPTS","s":{"p":["Mu $topic is raw","*%_"],"r":"Mu"},"k":"m","m":1},{"m":1,"k":"m","s":{"p":["*%_"],"r":"Mu"},"n":"perl"},{"s":{"r":"Mu","p":["*%_"]},"n":"perl","k":"m","m":1},{"n":"perl","s":{"p":["*%_"],"r":"Mu"},"m":1,"k":"m"},{"k":"m","m":0,"s":{"p":["*%_"],"r":"Mu"},"n":"of"},{"k":"m","m":0,"n":"file","s":{"p":["*%_"],"r":"Mu"}},{"s":{"r":"Mu","p":["*%_"]},"n":"signature","m":0,"k":"m"},{"k":"m","m":0,"n":"Capture","s":{"p":["*%_"],"r":"Mu"}},{"k":"m","m":1,"n":"Str","s":{"p":["*%_"],"r":"Mu"}},{"s":{"p":["*%_"],"r":"Mu"},"n":"Str","m":1,"k":"m"},{"m":1,"k":"m","n":"Str","s":{"r":"Mu","p":["*%_"]}},{"s":{"p":["|primers is raw"],"r":"Mu"},"n":"assuming","k":"m","m":0},{"k":"m","m":1,"n":"prec","s":{"p":["*%_"],"r":"Mu"}},{"m":1,"k":"m","s":{"r":"Mu","p":["Str:D $","*%_"]},"n":"prec"},{"n":"arity","s":{"r":"Mu","p":["*%_"]},"k":"m","m":0},{"m":0,"k":"m","n":"line","s":{"p":["*%_"],"r":"Mu"}},{"m":0,"k":"s","s":{"r":"Mu","p":["@auto","%init","*%_"]},"n":"BUILDALL"},{"m":0,"k":"m","s":{"r":"Mu","p":["*%_"]},"n":"!Bool6c"},{"n":"!ACCEPT-ITERATOR","s":{"r":"Mu","p":["\\slash","Iterator:D \\iter","*%_"]},"m":0,"k":"m"}],"b":"A","a":[{"k":"v","n":"$!caps","t":"Mu"},{"k":"v","n":"$!nfa","t":"Mu"},{"k":"v","n":"%!alt_nfas","t":"Hash"},{"n":"$!source","t":"str","k":"v"},{"k":"v","n":"$!topic","t":"Mu"},{"k":"v","n":"$!slash","t":"Mu"},{"t":"List","n":"@!dispatchees","k":"v"},{"t":"Mu","n":"$!dispatcher_cache","k":"v"},{"t":"Mu","n":"$!dispatcher","k":"v"},{"k":"v","n":"$!rw","t":"int"},{"n":"$!inline_info","t":"Mu","k":"v"},{"k":"v","t":"int","n":"$!yada"},{"t":"Mu","n":"$!package","k":"v"},{"t":"int","n":"$!onlystar","k":"v"},{"n":"@!dispatch_order","t":"List","k":"v"},{"k":"v","t":"Mu","n":"$!dispatch_cache"},{"t":"Mu","n":"$!why","k":"v"},{"t":"Code","n":"$!do","k":"v"},{"k":"v","t":"Signature","n":"$!signature"},{"t":"List","n":"@!compstuff","k":"v"}],"t":"Regex","n":"Regex"},{"t":"Sub+{Callable[Nil]}","n":"&done","k":"v"},{"s":{"p":[],"r":"Nil"},"n":"done","m":0,"k":"s"},{"t":"Sub+{is-pure}+{Precedence}","n":"&infix:<⊃>","k":"v"},{"s":{"r":"Bool:D","p":["\\a","\\b"]},"n":"infix:<⊃>","k":"s","m":1},{"k":"e","t":"Signal","n":"SIGXFSZ"},{"t":"CompUnit","n":"CompUnit","d":"TITLE\nclass CompUnit\n\nSUBTITLE\nCompUnit\n\n    class CompUnit {}\n\nThe CompUnit represents the metainformation about a compilation unit. This\nusually relates to source code that resides in a file on a filesystem,\nrather than code that is executed using an EVAL statement.\n\n","b":"A","a":[{"t":"Str","n":"$.from","k":"v"},{"k":"v","n":"$.short-name","t":"Str"},{"t":"Version","n":"$.version","k":"v"},{"t":"Str","n":"$.auth","k":"v"},{"n":"$!WHICH","t":"Str","k":"v"},{"t":"CompUnit::Repository","n":"$.repo","k":"v"},{"k":"v","n":"$.repo-id","t":"Str:D"},{"k":"v","t":"CompUnit::Handle","n":"$.handle"},{"k":"v","n":"$.precompiled","t":"Bool"},{"t":"Distribution","n":"$.distribution","k":"v"}],"k":"c","m":[{"n":"new","s":{"r":"Mu","p":["Str :$short-name is copy","Version :$version","Str :$auth","Str :$from = { ... }","CompUnit::Handle :$handle = CompUnit::Handle","CompUnit::Repository :$repo","Str :$repo-id","Bool :$precompiled = Bool::False","Distribution :$distribution","*%_"]},"m":0,"k":"m"},{"m":0,"k":"m","n":"unit","s":{"r":"Mu","p":["*%_"]}},{"k":"m","m":1,"n":"WHICH","s":{"r":"ValueObjAt:D","p":["*%_"]}},{"n":"WHICH","s":{"p":["*%_"],"r":"ObjAt:D"},"m":1,"k":"m"},{"n":"WHICH","s":{"p":["*%_"],"r":"Mu"},"m":1,"k":"m"},{"m":1,"k":"m","n":"Str","s":{"p":["*%_"],"r":"Mu"}},{"k":"m","m":1,"n":"Str","s":{"r":"Mu","p":["*%_"]}},{"k":"m","m":1,"n":"Str","s":{"r":"Str:D","p":["*%_"]}},{"k":"m","m":1,"s":{"p":["*%_"],"r":"Mu"},"n":"gist"},{"m":1,"k":"m","n":"gist","s":{"r":"Mu","p":["*%_"]}},{"k":"m","m":1,"n":"gist","s":{"r":"Str:D","p":["*%_"]}},{"n":"from","s":{"r":"Mu","p":["*%_"]},"m":0,"k":"m"},{"s":{"p":["*%_"],"r":"Mu"},"n":"short-name","m":0,"k":"m"},{"n":"version","s":{"r":"Mu","p":["*%_"]},"m":0,"k":"m"},{"k":"m","m":0,"s":{"p":["*%_"],"r":"Mu"},"n":"auth"},{"n":"repo","s":{"r":"Mu","p":["*%_"]},"m":0,"k":"m"},{"k":"m","m":0,"s":{"r":"Mu","p":["*%_"]},"n":"repo-id"},{"k":"m","m":0,"n":"handle","s":{"r":"Mu","p":["*%_"]}},{"s":{"p":["*%_"],"r":"Mu"},"n":"precompiled","m":0,"k":"m"},{"n":"distribution","s":{"r":"Mu","p":["*%_"]},"k":"m","m":0},{"k":"s","m":0,"s":{"p":["@auto","%init","*%_"],"r":"Mu"},"n":"BUILDALL"}]},{"b":"C","k":"ro","m":[{"k":"m","m":0,"s":{"r":"CompUnit::PrecompilationId:D","p":["*%_"]},"n":"id"},{"k":"m","m":0,"n":"path","s":{"p":["*%_"],"r":"IO::Path:D"}},{"n":"modified","s":{"r":"Instant:D","p":["*%_"]},"k":"m","m":0},{"n":"dependencies","s":{"r":"Array[CompUnit::PrecompilationDependency]","p":["*%_"]},"k":"m","m":0},{"n":"bytecode","s":{"p":["*%_"],"r":"Buf:D"},"m":0,"k":"m"},{"s":{"p":["*%_"],"r":"Str:D"},"n":"checksum","m":0,"k":"m"},{"m":0,"k":"m","n":"source-checksum","s":{"r":"Str:D","p":["*%_"]}},{"s":{"r":"IO::Handle:D","p":["*%_"]},"n":"bytecode-handle","m":0,"k":"m"},{"k":"m","m":0,"s":{"p":["*%_"],"r":"Nil"},"n":"close"},{"s":{"p":["CompUnit::PrecompilationDependency $dependency","Bool :$check-source","*%_"],"r":"Bool"},"n":"is-up-to-date","k":"m","m":0}],"t":"CompUnit::PrecompilationUnit","n":"CompUnit::PrecompilationUnit"},{"m":[{"s":{"p":["CompUnit::PrecompilationId :id($!id)","IO::Path :path($!path)",":source-checksum($!source-checksum)",":dependencies(@!dependencies)",":bytecode($!bytecode)",":store($!store)","*%_"],"r":"Nil"},"n":"BUILD","m":0,"k":"s"},{"s":{"p":["*%_"],"r":"Instant:D"},"n":"modified","k":"m","m":0},{"n":"dependencies","s":{"p":["*%_"],"r":"Array[CompUnit::PrecompilationDependency]"},"k":"m","m":0},{"n":"bytecode","s":{"p":["*%_"],"r":"Buf:D"},"k":"m","m":0},{"s":{"r":"IO::Handle:D","p":["*%_"]},"n":"bytecode-handle","m":0,"k":"m"},{"s":{"r":"Mu","p":["*%_"]},"n":"source-checksum","m":0,"k":"m"},{"m":0,"k":"m","n":"checksum","s":{"r":"Mu","p":["*%_"]}},{"k":"m","m":0,"s":{"r":"Str:D","p":["*%_"]},"n":"Str"},{"n":"close","s":{"r":"Nil","p":["*%_"]},"m":0,"k":"m"},{"s":{"r":"Mu","p":["IO::Path $precomp-file","*%_"]},"n":"save-to","m":0,"k":"m"},{"n":"is-up-to-date","s":{"p":["CompUnit::PrecompilationDependency $dependency","Bool :$check-source","*%_"],"r":"Bool"},"m":0,"k":"m"},{"k":"m","m":0,"s":{"p":["*%_"],"r":"Mu"},"n":"id"},{"n":"path","s":{"p":["*%_"],"r":"Mu"},"k":"m","m":0},{"n":"BUILDALL","s":{"r":"Mu","p":["@auto","%init","*%_"]},"m":0,"k":"s"},{"s":{"r":"Mu","p":["*%_"]},"n":"!read-dependencies","m":0,"k":"m"},{"n":"!open","s":{"r":"Mu","p":["*%_"]},"m":0,"k":"m"}],"k":"c","b":"A","a":[{"n":"$.id","t":"CompUnit::PrecompilationId","k":"v"},{"k":"v","t":"IO::Path","n":"$.path"},{"k":"v","t":"IO::Handle","n":"$!file"},{"k":"v","t":"Positional[CompUnit::PrecompilationDependency]","n":"@!dependencies"},{"k":"v","n":"$!initialized","t":"Mu"},{"k":"v","n":"$.checksum","t":"Mu"},{"n":"$.source-checksum","t":"Mu","k":"v"},{"k":"v","t":"Mu","n":"$!bytecode"},{"k":"v","n":"$!store","t":"Mu"},{"t":"Lock","n":"$!update-lock","k":"v"}],"t":"CompUnit::PrecompilationStore::File::CompUnit::PrecompilationUnit::File","n":"CompUnit::PrecompilationUnit::File"},{"n":"CompUnit::PrecompilationId","t":"CompUnit::PrecompilationId","a":[{"k":"v","n":"$.id","t":"Mu"}],"b":"A","m":[{"m":0,"k":"m","n":"new","s":{"p":["Str:D $id","*%_"],"r":"Mu"}},{"k":"m","m":0,"n":"new-from-string","s":{"p":["Str:D $id","*%_"],"r":"Mu"}},{"m":0,"k":"m","n":"new-without-check","s":{"r":"Mu","p":["Str:D $id","*%_"]}},{"m":0,"k":"m","n":"Str","s":{"r":"Mu","p":["*%_"]}},{"k":"m","m":0,"n":"IO","s":{"r":"Mu","p":["*%_"]}},{"m":0,"k":"m","s":{"r":"Mu","p":["|c is raw"]},"n":"substr"},{"m":0,"k":"m","s":{"p":["*%_"],"r":"Mu"},"n":"id"},{"k":"s","m":0,"n":"BUILDALL","s":{"p":["@auto","%init","*%_"],"r":"Mu"}}],"k":"c"},{"n":"CompUnit::RepositoryRegistry","t":"CompUnit::RepositoryRegistry","b":"A","m":[{"s":{"p":["Str $spec","CompUnit::Repository :$next-repo","*%_"],"r":"Mu"},"n":"repository-for-spec","m":1,"k":"m"},{"s":{"p":["CompUnit::Repository::Spec $spec","CompUnit::Repository :$next-repo","*%_"],"r":"Mu"},"n":"repository-for-spec","m":1,"k":"m"},{"n":"setup-repositories","s":{"p":["*%_"],"r":"Mu"},"m":0,"k":"m"},{"s":{"r":"Mu","p":["CompUnit::Repository $repo","CompUnit::Repository :$current = { ... }","*%_"]},"n":"use-repository","m":0,"k":"m"},{"m":0,"k":"m","s":{"p":["Str:D \\name","*%_"],"r":"Mu"},"n":"repository-for-name"},{"m":0,"k":"m","s":{"p":["$name","CompUnit::Repository $repo","*%_"],"r":"Mu"},"n":"register-name"},{"n":"name-for-repository","s":{"r":"Mu","p":["CompUnit::Repository $repo","*%_"]},"k":"m","m":0},{"k":"m","m":0,"s":{"p":["Str $spec","*%_"],"r":"Mu"},"n":"file-for-spec"},{"k":"m","m":0,"n":"run-script","s":{"r":"Mu","p":["$script",":$name",":$auth",":$ver",":$api","*%_"]}},{"k":"m","m":0,"s":{"r":"Mu","p":["*%_"]},"n":"head"},{"k":"m","m":0,"s":{"p":["$repo is copy","*%_"],"r":"Mu"},"n":"resolve-unknown-repos"},{"n":"resolve_repossession_conflicts","s":{"r":"Mu","p":["@conflicts","*%_"]},"m":0,"k":"m"},{"m":0,"k":"s","n":"BUILDALL","s":{"p":["@auto","%init","*%_"],"r":"Mu"}},{"n":"!remove-from-chain","s":{"r":"Mu","p":["CompUnit::Repository $repo","CompUnit::Repository :$current = { ... }","*%_"]},"k":"m","m":0},{"m":0,"k":"m","n":"!register-repository","s":{"p":["$id","CompUnit::Repository $repo","*%_"],"r":"Mu"}}],"k":"c"},{"n":"CompUnit::PrecompilationStore","t":"CompUnit::PrecompilationStore","b":"C","m":[{"n":"new-unit","s":{"p":["|"],"r":"CompUnit::PrecompilationUnit:D"},"m":0,"k":"m"},{"m":0,"k":"m","s":{"r":"Mu","p":["CompUnit::PrecompilationId $compiler-id","CompUnit::PrecompilationId $precomp-id","*%_"]},"n":"load-unit"},{"m":0,"k":"m","n":"load-repo-id","s":{"p":["CompUnit::PrecompilationId $compiler-id","CompUnit::PrecompilationId $precomp-id","*%_"],"r":"Mu"}},{"k":"m","m":0,"s":{"r":"Mu","p":["CompUnit::PrecompilationId $compiler-id","CompUnit::PrecompilationId $precomp-id","IO::Path:D $path",":$extension = \"\"","*%_"]},"n":"store-file"},{"k":"m","m":0,"n":"store-unit","s":{"p":["CompUnit::PrecompilationId $compiler-id","CompUnit::PrecompilationId $precomp-id","CompUnit::PrecompilationUnit $unit","*%_"],"r":"Mu"}},{"n":"store-repo-id","s":{"r":"Mu","p":["CompUnit::PrecompilationId $compiler-id","CompUnit::PrecompilationId $precomp-id",":$repo-id!","*%_"]},"k":"m","m":0},{"n":"delete","s":{"p":["CompUnit::PrecompilationId $compiler-id","CompUnit::PrecompilationId $precomp-id","*%_"],"r":"Mu"},"m":0,"k":"m"},{"s":{"p":["CompUnit::PrecompilationId $compiler-id","*%_"],"r":"Mu"},"n":"delete-by-compiler","k":"m","m":0}],"k":"ro"},{"n":"CompUnit::PrecompilationStore::File","t":"CompUnit::PrecompilationStore::File","m":[{"s":{"p":["IO::Path :prefix($!prefix)","*%_"],"r":"Nil"},"n":"BUILD","k":"s","m":0},{"n":"new-unit","s":{"p":["|c is raw"],"r":"Mu"},"m":0,"k":"m"},{"k":"m","m":0,"n":"path","s":{"p":["CompUnit::PrecompilationId $compiler-id","CompUnit::PrecompilationId $precomp-id","Str :$extension = \"\"","*%_"],"r":"Mu"}},{"s":{"r":"Mu","p":["*%_"]},"n":"unlock","m":0,"k":"m"},{"n":"load-unit","s":{"p":["CompUnit::PrecompilationId $compiler-id","CompUnit::PrecompilationId $precomp-id","*%_"],"r":"Mu"},"k":"m","m":0},{"m":0,"k":"m","n":"load-repo-id","s":{"r":"Mu","p":["CompUnit::PrecompilationId $compiler-id","CompUnit::PrecompilationId $precomp-id","*%_"]}},{"s":{"p":["CompUnit::PrecompilationId $precomp-id","*%_"],"r":"Mu"},"n":"remove-from-cache","m":0,"k":"m"},{"n":"destination","s":{"p":["CompUnit::PrecompilationId $compiler-id","CompUnit::PrecompilationId $precomp-id","Str :$extension = \"\"","*%_"],"r":"IO::Path:D"},"m":0,"k":"m"},{"k":"m","m":0,"s":{"p":["CompUnit::PrecompilationId $compiler-id","CompUnit::PrecompilationId $precomp-id","IO::Path:D $path",":$extension = \"\"","*%_"],"r":"Mu"},"n":"store-file"},{"k":"m","m":0,"s":{"p":["CompUnit::PrecompilationId $compiler-id","CompUnit::PrecompilationId $precomp-id","CompUnit::PrecompilationUnit $unit","*%_"],"r":"Mu"},"n":"store-unit"},{"k":"m","m":0,"s":{"r":"Mu","p":["CompUnit::PrecompilationId $compiler-id","CompUnit::PrecompilationId $precomp-id",":$repo-id!","*%_"]},"n":"store-repo-id"},{"n":"delete","s":{"r":"Mu","p":["CompUnit::PrecompilationId $compiler-id","CompUnit::PrecompilationId $precomp-id","Str :$extension = \"\"","*%_"]},"m":0,"k":"m"},{"m":0,"k":"m","s":{"r":"Mu","p":["CompUnit::PrecompilationId $compiler-id","*%_"]},"n":"delete-by-compiler"},{"k":"m","m":0,"n":"prefix","s":{"r":"Mu","p":["*%_"]}},{"s":{"p":["@auto","%init","*%_"],"r":"Mu"},"n":"BUILDALL","k":"s","m":0},{"m":0,"k":"m","n":"!lock","s":{"r":"Nil","p":["*%_"]}},{"m":0,"k":"m","n":"!file","s":{"r":"IO::Path:D","p":["CompUnit::PrecompilationId $compiler-id","CompUnit::PrecompilationId $precomp-id","Str :$extension = \"\"","*%_"]}},{"m":0,"k":"m","s":{"r":"Mu","p":["CompUnit::PrecompilationId $compiler-id","CompUnit::PrecompilationId $precomp-id","*%_"]},"n":"!dir"}],"k":"c","a":[{"k":"v","t":"IO::Path","n":"$.prefix"},{"n":"$!lock","t":"IO::Handle","k":"v"},{"k":"v","n":"$!lock-count","t":"int"},{"k":"v","t":"Associative","n":"%!loaded"},{"n":"%!compiler-cache","t":"Associative","k":"v"},{"t":"Associative","n":"%!dir-cache","k":"v"},{"t":"Lock","n":"$!update-lock","k":"v"}],"b":"A"},{"k":"ro","m":[{"k":"m","m":0,"n":"try-load","s":{"r":"CompUnit::Handle:D","p":["CompUnit::PrecompilationDependency::File $dependency","IO::Path :$source","CompUnit::PrecompilationStore :@precomp-stores","*%_"]}},{"m":0,"k":"m","s":{"p":["CompUnit::PrecompilationId $id","*%_"],"r":"Nil"},"n":"load"},{"n":"may-precomp","s":{"r":"Bool:D","p":["*%_"]},"k":"m","m":0}],"b":"C","t":"CompUnit::PrecompilationRepository","n":"CompUnit::PrecompilationRepository"},{"n":"CompUnit::PrecompilationRepository::Default","t":"CompUnit::PrecompilationRepository::Default","k":"c","m":[{"n":"try-load","s":{"r":"CompUnit::Handle:D","p":["CompUnit::PrecompilationDependency::File $dependency","IO::Path :$source = { ... }","CompUnit::PrecompilationStore :@precomp-stores = { ... }","*%_"]},"k":"m","m":0},{"n":"load","s":{"r":"Mu","p":["Str $id","Instant :$since","IO::Path :$source","CompUnit::PrecompilationStore :@precomp-stores = { ... }","*%_"]},"k":"m","m":1},{"s":{"r":"Mu","p":["CompUnit::PrecompilationId $id","IO::Path :$source","Str :$checksum is copy","Instant :$since","CompUnit::PrecompilationStore :@precomp-stores = { ... }","*%_"]},"n":"load","k":"m","m":1},{"n":"precompile","s":{"p":["IO::Path:D $path","Str $id","Bool :$force = Bool::False",":$source-name = { ... }","*%_"],"r":"Mu"},"k":"m","m":1},{"n":"precompile","s":{"p":["IO::Path:D $path","CompUnit::PrecompilationId $id","Bool :$force = Bool::False",":$source-name = { ... }","*%_"],"r":"Mu"},"k":"m","m":1},{"m":0,"k":"m","n":"may-precomp","s":{"p":["*%_"],"r":"Bool:D"}},{"k":"m","m":0,"s":{"p":["*%_"],"r":"Mu"},"n":"store"},{"k":"s","m":0,"n":"BUILDALL","s":{"r":"Mu","p":["@auto","%init","*%_"]}},{"s":{"r":"Mu","p":["CompUnit::PrecompilationUnit:D $precomp-unit","@precomp-stores","*%_"]},"n":"!load-dependencies","m":0,"k":"m"},{"s":{"p":["CompUnit::PrecompilationUnit $unit","*%_"],"r":"Mu"},"n":"!load-handle-for-path","m":0,"k":"m"},{"n":"!load-file","s":{"p":["CompUnit::PrecompilationStore @precomp-stores","CompUnit::PrecompilationId $id",":$repo-id","*%_"],"r":"Mu"},"m":0,"k":"m"}],"b":"A","a":[{"k":"v","t":"CompUnit::PrecompilationStore","n":"$.store"}]},{"b":"A","m":[{"s":{"p":["CompUnit::PrecompilationDependency::File $dependency","IO::Path :$source","CompUnit::PrecompilationStore :@precomp-stores","*%_"],"r":"CompUnit::Handle:D"},"n":"try-load","k":"m","m":0},{"n":"load","s":{"r":"Nil","p":["CompUnit::PrecompilationId $id","*%_"]},"m":0,"k":"m"},{"k":"m","m":0,"n":"may-precomp","s":{"r":"Bool:D","p":["*%_"]}}],"k":"c","t":"CompUnit::PrecompilationRepository","n":"CompUnit::PrecompilationRepository::None"},{"n":"CompUnit::DependencySpecification","t":"CompUnit::DependencySpecification","a":[{"t":"str","n":"$.short-name","k":"v"},{"k":"v","t":"int","n":"$.source-line-number"},{"t":"str","n":"$.from","k":"v"},{"n":"$.version-matcher","t":"Mu","k":"v"},{"k":"v","n":"$.auth-matcher","t":"Mu"},{"t":"Mu","n":"$.api-matcher","k":"v"}],"b":"A","m":[{"m":0,"k":"m","n":"Str","s":{"p":["*%_"],"r":"Mu"}},{"n":"short-name","s":{"p":["*%_"],"r":"Mu"},"m":0,"k":"m"},{"n":"source-line-number","s":{"r":"Mu","p":["*%_"]},"k":"m","m":0},{"n":"from","s":{"r":"Mu","p":["*%_"]},"m":0,"k":"m"},{"m":0,"k":"m","n":"version-matcher","s":{"r":"Mu","p":["*%_"]}},{"k":"m","m":0,"s":{"p":["*%_"],"r":"Mu"},"n":"auth-matcher"},{"m":0,"k":"m","s":{"r":"Mu","p":["*%_"]},"n":"api-matcher"},{"k":"s","m":0,"n":"BUILDALL","s":{"r":"Mu","p":["@auto","%init","*%_"]}}],"k":"c"},{"b":"C","m":[{"s":{"p":["*%_"],"r":"CompUnit::PrecompilationId:D"},"n":"id","m":0,"k":"m"},{"m":0,"k":"m","s":{"p":["*%_"],"r":"Str:D"},"n":"src"},{"k":"m","m":0,"s":{"r":"CompUnit::DependencySpecification:D","p":["*%_"]},"n":"spec"},{"n":"checksum","s":{"p":["*%_"],"r":"Str:D"},"m":0,"k":"m"},{"n":"Str","s":{"p":["*%_"],"r":"Mu"},"k":"m","m":0},{"k":"m","m":0,"s":{"p":["*%_"],"r":"Str:D"},"n":"serialize"},{"s":{"p":["Str $","*%_"],"r":"CompUnit::PrecompilationDependency:D"},"n":"deserialize","k":"m","m":0}],"k":"ro","n":"CompUnit::PrecompilationDependency","t":"CompUnit::PrecompilationDependency"},{"b":"A","a":[{"k":"v","t":"CompUnit::PrecompilationId","n":"$.id"},{"n":"$.src","t":"Str","k":"v"},{"t":"Str","n":"$.checksum","k":"v"},{"k":"v","t":"Str","n":"$!serialized-spec"},{"n":"$.spec","t":"CompUnit::DependencySpecification","k":"v"}],"m":[{"k":"m","m":0,"s":{"r":"Mu","p":["*%_"]},"n":"source-name"},{"k":"m","m":0,"n":"deserialize","s":{"p":["str $str","*%_"],"r":"Mu"}},{"k":"m","m":0,"s":{"r":"CompUnit::DependencySpecification:D","p":["*%_"]},"n":"spec"},{"m":0,"k":"m","s":{"r":"Str:D","p":["*%_"]},"n":"serialize"},{"m":0,"k":"m","s":{"r":"Mu","p":["*%_"]},"n":"Str"},{"s":{"r":"Mu","p":["*%_"]},"n":"id","k":"m","m":0},{"s":{"r":"Mu","p":["*%_"]},"n":"src","m":0,"k":"m"},{"m":0,"k":"m","n":"checksum","s":{"p":["*%_"],"r":"Mu"}},{"n":"BUILDALL","s":{"p":["@auto","%init","*%_"],"r":"Mu"},"m":0,"k":"s"}],"k":"c","n":"CompUnit::PrecompilationDependency::File","t":"CompUnit::PrecompilationDependency::File"},{"t":"CompUnit::Loader","n":"CompUnit::Loader","k":"c","m":[{"n":"load-source-file","s":{"p":["IO::Path $path","*%_"],"r":"CompUnit::Handle"},"k":"m","m":0},{"m":0,"k":"m","n":"load-source","s":{"r":"CompUnit::Handle:D","p":["Blob:D $bytes","*%_"]}},{"n":"load-precompilation-file","s":{"r":"CompUnit::Handle:D","p":["IO::Path $path","*%_"]},"m":1,"k":"m"},{"k":"m","m":1,"s":{"p":["IO::Handle $file","*%_"],"r":"CompUnit::Handle:D"},"n":"load-precompilation-file"},{"s":{"p":["Blob:D $bytes","*%_"],"r":"CompUnit::Handle:D"},"n":"load-precompilation","k":"m","m":0},{"m":0,"k":"s","s":{"r":"Mu","p":["@auto","%init","*%_"]},"n":"BUILDALL"}],"b":"A"},{"t":"CompUnit::Repository","n":"CompUnit::Repository","d":"TITLE\nrole CompUnit::Repository\n\nSUBTITLE\nCompUnit::Repository\n\nThe CompUnit::Repository role defines the interface of the implementation\nof CompUnit::Repositories such as CompUnit::Repository::Installation and\nCompUnit::Repository::FileSystem.\n\n","m":[{"m":0,"k":"m","s":{"r":"CompUnit:D","p":["CompUnit::DependencySpecification $spec","CompUnit::PrecompilationRepository $precomp = { ... }","CompUnit::PrecompilationStore :@precomp-stores = { ... }","*%_"]},"n":"need"},{"k":"m","m":0,"n":"resolve","s":{"r":"CompUnit:D","p":["CompUnit::DependencySpecification $spec","*%_"]}},{"s":{"p":["IO::Path:D $file","*%_"],"r":"CompUnit:D"},"n":"load","k":"m","m":0},{"n":"loaded","s":{"p":["*%_"],"r":"Iterable:D"},"k":"m","m":0},{"s":{"p":["*%_"],"r":"Str:D"},"n":"id","m":0,"k":"m"},{"s":{"p":["*%_"],"r":"CompUnit::PrecompilationStore"},"n":"precomp-store","m":0,"k":"m"},{"k":"m","m":0,"n":"precomp-repository","s":{"r":"CompUnit::PrecompilationRepository","p":["*%_"]}},{"k":"m","m":0,"s":{"p":["*%_"],"r":"Mu"},"n":"repo-chain"}],"k":"ro","a":[{"n":"$.next-repo","t":"CompUnit::Repository","k":"v"}],"b":"C"},{"t":"CompUnit::Repository::Locally","n":"CompUnit::Repository::Locally","k":"ro","m":[{"s":{"p":["Any:D :$prefix is copy","*%_"],"r":"Mu"},"n":"new","m":0,"k":"m"},{"n":"path-spec","s":{"r":"Mu","p":["*%_"]},"k":"m","m":0},{"s":{"p":["Str $name","*%_"],"r":"IO::Path:D"},"n":"source-file","k":"m","m":0},{"k":"m","m":0,"s":{"r":"Mu","p":["*%_"]},"n":"id"},{"m":0,"k":"m","s":{"p":["*%_"],"r":"Mu"},"n":"short-id"}],"a":[{"n":"$.abspath","t":"Str","k":"v"},{"k":"v","n":"$.prefix","t":"IO::Path"},{"k":"v","t":"ValueObjAt","n":"$.WHICH"}],"b":"C"},{"t":"CompUnit::Repository::Distribution","n":"CompUnit::Repository::Distribution","m":[{"n":"TWEAK","s":{"r":"Mu","p":["|"]},"k":"s","m":0},{"n":"BUILD","s":{"r":"Nil","p":[":dist($!dist)",":repo($!repo)",":dist-id($!dist-id)",":repo-name($!repo-name)","*%_"]},"k":"s","m":0},{"m":0,"k":"m","n":"new","s":{"p":["Distribution $dist","*%_"],"r":"Mu"}},{"n":"meta","s":{"p":["*%_"],"r":"Mu"},"m":0,"k":"m"},{"s":{"p":["*%_"],"r":"Mu"},"n":"Str","m":0,"k":"m"},{"m":0,"k":"m","n":"id","s":{"r":"Mu","p":["*%_"]}},{"m":0,"k":"m","s":{"p":["*%_"],"r":"CompUnit::Repository::Distribution"},"n":"from-precomp"},{"k":"m","m":0,"s":{"r":"Mu","p":["*%_"]},"n":"serialize"},{"s":{"p":["*%_"],"r":"Mu"},"n":"perl","m":0,"k":"m"},{"n":"<anon>","s":{"r":"Mu","p":["|c is raw"]},"k":"m","m":0},{"m":0,"k":"m","n":"<anon>","s":{"r":"Mu","p":["|c is raw"]}},{"s":{"p":["*%_"],"r":"Mu"},"n":"repo","m":0,"k":"m"},{"m":0,"k":"m","n":"dist-id","s":{"p":["*%_"],"r":"Mu"}},{"k":"m","m":0,"n":"repo-name","s":{"r":"Mu","p":["*%_"]}},{"s":{"p":["@auto","%init","*%_"],"r":"Mu"},"n":"BUILDALL","k":"s","m":0}],"k":"c","a":[{"n":"$!dist","t":"Distribution","k":"v"},{"k":"v","n":"$!meta","t":"Mu"},{"k":"v","t":"Mu","n":"$.repo"},{"t":"Mu","n":"$.dist-id","k":"v"},{"k":"v","t":"Mu","n":"$.repo-name"}],"b":"A"},{"b":"A","a":[{"t":"Associative","n":"%!loaded","k":"v"},{"k":"v","t":"CompUnit::Repository","n":"$.next-repo"}],"m":[{"k":"m","m":0,"s":{"r":"CompUnit:D","p":["CompUnit::DependencySpecification $spec","CompUnit::PrecompilationRepository $precomp = { ... }","*%_"]},"n":"need"},{"n":"load","s":{"r":"CompUnit:D","p":["IO::Path:D $file","*%_"]},"k":"m","m":0},{"s":{"p":["*%_"],"r":"Iterable:D"},"n":"loaded","m":0,"k":"m"},{"m":0,"k":"m","s":{"r":"Mu","p":["*%_"]},"n":"id"},{"n":"path-spec","s":{"r":"Mu","p":["*%_"]},"m":0,"k":"m"},{"m":0,"k":"m","s":{"r":"CompUnit:D","p":["CompUnit::DependencySpecification $spec","*%_"]},"n":"resolve"},{"m":0,"k":"m","n":"precomp-store","s":{"p":["*%_"],"r":"CompUnit::PrecompilationStore"}},{"n":"precomp-repository","s":{"p":["*%_"],"r":"CompUnit::PrecompilationRepository"},"k":"m","m":0},{"n":"repo-chain","s":{"p":["*%_"],"r":"Mu"},"k":"m","m":0},{"n":"gist","s":{"r":"Mu","p":["*%_"]},"m":1,"k":"m"},{"k":"m","m":1,"s":{"p":["*%_"],"r":"Mu"},"n":"gist"},{"m":1,"k":"m","n":"gist","s":{"p":["*%_"],"r":"Mu"}},{"n":"next-repo","s":{"r":"Mu","p":["*%_"]},"k":"m","m":0},{"s":{"p":["@auto","%init","*%_"],"r":"Mu"},"n":"BUILDALL","m":0,"k":"s"}],"k":"c","t":"CompUnit::Repository::AbsolutePath","n":"CompUnit::Repository::AbsolutePath"},{"t":"CompUnit::Repository::Perl5","n":"CompUnit::Repository::Perl5","b":"A","a":[{"n":"$.next-repo","t":"CompUnit::Repository","k":"v"}],"k":"c","m":[{"s":{"r":"CompUnit:D","p":["CompUnit::DependencySpecification $spec","CompUnit::PrecompilationRepository $precomp = { ... }","*%_"]},"n":"need","m":0,"k":"m"},{"k":"m","m":0,"s":{"r":"Mu","p":["*%_"]},"n":"loaded"},{"m":0,"k":"m","n":"id","s":{"p":["*%_"],"r":"Mu"}},{"m":0,"k":"m","n":"path-spec","s":{"p":["*%_"],"r":"Mu"}},{"k":"m","m":0,"s":{"p":["CompUnit::DependencySpecification $spec","*%_"],"r":"CompUnit:D"},"n":"resolve"},{"k":"m","m":0,"n":"load","s":{"r":"CompUnit:D","p":["IO::Path:D $file","*%_"]}},{"n":"precomp-store","s":{"r":"CompUnit::PrecompilationStore","p":["*%_"]},"m":0,"k":"m"},{"k":"m","m":0,"s":{"p":["*%_"],"r":"CompUnit::PrecompilationRepository"},"n":"precomp-repository"},{"m":0,"k":"m","s":{"r":"Mu","p":["*%_"]},"n":"repo-chain"},{"n":"gist","s":{"p":["*%_"],"r":"Mu"},"k":"m","m":1},{"n":"gist","s":{"r":"Mu","p":["*%_"]},"k":"m","m":1},{"m":1,"k":"m","n":"gist","s":{"p":["*%_"],"r":"Mu"}},{"k":"m","m":0,"s":{"p":["*%_"],"r":"Mu"},"n":"next-repo"},{"s":{"r":"Mu","p":["@auto","%init","*%_"]},"n":"BUILDALL","k":"s","m":0}]},{"t":"CompUnit::Repository::NQP","n":"CompUnit::Repository::NQP","a":[{"n":"$.next-repo","t":"CompUnit::Repository","k":"v"}],"b":"A","k":"c","m":[{"n":"need","s":{"p":["CompUnit::DependencySpecification $spec","CompUnit::PrecompilationRepository $precomp = { ... }","*%_"],"r":"CompUnit:D"},"k":"m","m":0},{"s":{"r":"Mu","p":["*%_"]},"n":"loaded","m":0,"k":"m"},{"s":{"p":["*%_"],"r":"Mu"},"n":"id","k":"m","m":0},{"k":"m","m":0,"n":"path-spec","s":{"p":["*%_"],"r":"Mu"}},{"n":"resolve","s":{"r":"CompUnit:D","p":["CompUnit::DependencySpecification $spec","*%_"]},"k":"m","m":0},{"n":"load","s":{"p":["IO::Path:D $file","*%_"],"r":"CompUnit:D"},"k":"m","m":0},{"s":{"r":"CompUnit::PrecompilationStore","p":["*%_"]},"n":"precomp-store","m":0,"k":"m"},{"m":0,"k":"m","n":"precomp-repository","s":{"r":"CompUnit::PrecompilationRepository","p":["*%_"]}},{"s":{"r":"Mu","p":["*%_"]},"n":"repo-chain","m":0,"k":"m"},{"n":"gist","s":{"r":"Mu","p":["*%_"]},"k":"m","m":1},{"s":{"p":["*%_"],"r":"Mu"},"n":"gist","k":"m","m":1},{"k":"m","m":1,"s":{"r":"Mu","p":["*%_"]},"n":"gist"},{"n":"next-repo","s":{"p":["*%_"],"r":"Mu"},"k":"m","m":0},{"m":0,"k":"s","n":"BUILDALL","s":{"p":["@auto","%init","*%_"],"r":"Mu"}}]},{"t":"CompUnit::Repository::Unknown","n":"CompUnit::Repository::Unknown","k":"c","m":[{"m":0,"k":"m","s":{"p":["CompUnit::DependencySpecification $spec","CompUnit::PrecompilationRepository $precomp?","CompUnit::PrecompilationStore :@precomp-stores = { ... }","*%_"],"r":"CompUnit:D"},"n":"need"},{"m":0,"k":"m","s":{"p":["*%_"],"r":"Mu"},"n":"loaded"},{"m":0,"k":"m","s":{"r":"Mu","p":["*%_"]},"n":"id"},{"m":0,"k":"m","s":{"r":"Mu","p":["*%_"]},"n":"Str"},{"m":0,"k":"m","s":{"r":"CompUnit:D","p":["CompUnit::DependencySpecification $spec","*%_"]},"n":"resolve"},{"k":"m","m":0,"s":{"r":"CompUnit:D","p":["IO::Path:D $file","*%_"]},"n":"load"},{"n":"precomp-store","s":{"r":"CompUnit::PrecompilationStore","p":["*%_"]},"k":"m","m":0},{"m":0,"k":"m","n":"precomp-repository","s":{"p":["*%_"],"r":"CompUnit::PrecompilationRepository"}},{"m":0,"k":"m","s":{"r":"Mu","p":["*%_"]},"n":"repo-chain"},{"m":0,"k":"m","s":{"p":["*%_"],"r":"Mu"},"n":"path-spec"},{"k":"m","m":0,"s":{"r":"Mu","p":["*%_"]},"n":"short-name"},{"k":"m","m":0,"n":"next-repo","s":{"r":"Mu","p":["*%_"]}},{"m":0,"k":"s","n":"BUILDALL","s":{"r":"Mu","p":["@auto","%init","*%_"]}}],"a":[{"n":"$.path-spec","t":"Mu","k":"v"},{"n":"$.short-name","t":"Mu","k":"v"},{"k":"v","t":"CompUnit::Repository","n":"$.next-repo"}],"b":"A"},{"m":[{"s":{"p":["Str:D $spec",":$default-short-id = \"file\"","*%_"],"r":"Mu"},"n":"from-string","m":0,"k":"m"},{"m":0,"k":"m","s":{"p":["*%_"],"r":"Mu"},"n":"short-id"},{"s":{"p":["*%_"],"r":"Mu"},"n":"options","k":"m","m":0},{"n":"path","s":{"r":"Mu","p":["*%_"]},"m":0,"k":"m"},{"m":0,"k":"m","s":{"r":"Mu","p":["*%_"]},"n":"Str"},{"m":0,"k":"s","n":"BUILDALL","s":{"p":["@auto","%init","*%_"],"r":"Mu"}}],"k":"c","a":[{"k":"v","n":"$.short-id","t":"Mu"},{"k":"v","t":"Associative","n":"%.options"},{"n":"$.path","t":"Mu","k":"v"},{"n":"$.Str","t":"Mu","k":"v"}],"b":"A","t":"CompUnit::Repository::Spec","n":"CompUnit::Repository::Spec"},{"k":"ro","m":[{"k":"m","m":0,"n":"install","s":{"p":["Distribution $dist","*%_"],"r":"Mu"}},{"s":{"p":["*%_"],"r":"Bool:D"},"n":"can-install","m":0,"k":"m"},{"m":0,"k":"m","n":"installed","s":{"p":["*%_"],"r":"Iterable:D"}}],"b":"C","t":"CompUnit::Repository::Installable","n":"CompUnit::Repository::Installable"},{"n":"CompUnit::Repository::FileSystem","t":"CompUnit::Repository::FileSystem","k":"c","m":[{"s":{"r":"Mu","p":["*%_"]},"n":"id","k":"m","m":0},{"s":{"r":"CompUnit:D","p":["CompUnit::DependencySpecification $spec","*%_"]},"n":"resolve","m":0,"k":"m"},{"m":0,"k":"m","n":"need","s":{"p":["CompUnit::DependencySpecification $spec","CompUnit::PrecompilationRepository $precomp = { ... }","CompUnit::PrecompilationStore :@precomp-stores = { ... }","*%_"],"r":"CompUnit:D"}},{"m":0,"k":"m","s":{"p":["IO::Path:D $file","*%_"],"r":"CompUnit:D"},"n":"load"},{"n":"short-id","s":{"r":"Mu","p":["*%_"]},"k":"m","m":0},{"n":"loaded","s":{"r":"Iterable:D","p":["*%_"]},"m":0,"k":"m"},{"s":{"r":"Mu","p":["Str:D $name",":$auth",":$ver",":$api","*%_"]},"n":"candidates","k":"m","m":1},{"n":"candidates","s":{"r":"Mu","p":["CompUnit::DependencySpecification $spec","*%_"]},"m":1,"k":"m"},{"m":1,"k":"m","s":{"r":"Mu","p":["$file","Str:D :$name!",":$auth",":$ver",":$api","*%_"]},"n":"files"},{"m":1,"k":"m","n":"files","s":{"p":["$file",":$auth",":$ver",":$api","*%_"],"r":"Mu"}},{"n":"resource","s":{"r":"Mu","p":["$dist-id","$key","*%_"]},"k":"m","m":0},{"k":"m","m":0,"s":{"r":"Distribution","p":["Str $id?","*%_"]},"n":"distribution"},{"k":"m","m":0,"s":{"r":"CompUnit::PrecompilationStore:D","p":["*%_"]},"n":"precomp-store"},{"s":{"r":"CompUnit::PrecompilationRepository:D","p":["*%_"]},"n":"precomp-repository","m":0,"k":"m"},{"n":"repo-chain","s":{"r":"Mu","p":["*%_"]},"m":0,"k":"m"},{"k":"m","m":0,"n":"new","s":{"p":["Any:D :$prefix is copy","*%_"],"r":"Mu"}},{"m":0,"k":"m","s":{"r":"Mu","p":["*%_"]},"n":"path-spec"},{"n":"source-file","s":{"r":"IO::Path:D","p":["Str $name","*%_"]},"m":0,"k":"m"},{"m":1,"k":"m","n":"Str","s":{"r":"Mu","p":["*%_"]}},{"m":1,"k":"m","s":{"p":["*%_"],"r":"Mu"},"n":"Str"},{"n":"Str","s":{"r":"Mu","p":["*%_"]},"k":"m","m":1},{"s":{"r":"Mu","p":["*%_"]},"n":"gist","m":1,"k":"m"},{"m":1,"k":"m","n":"gist","s":{"r":"Mu","p":["*%_"]}},{"n":"gist","s":{"r":"Mu","p":["*%_"]},"k":"m","m":1},{"n":"perl","s":{"p":["*%_"],"r":"Mu"},"m":1,"k":"m"},{"k":"m","m":1,"n":"perl","s":{"r":"Mu","p":["*%_"]}},{"s":{"p":["*%_"],"r":"Mu"},"n":"perl","k":"m","m":1},{"m":1,"k":"m","n":"WHICH","s":{"p":["*%_"],"r":"ValueObjAt:D"}},{"s":{"r":"ObjAt:D","p":["*%_"]},"n":"WHICH","m":1,"k":"m"},{"n":"WHICH","s":{"r":"Mu","p":["*%_"]},"k":"m","m":1},{"m":0,"k":"m","s":{"r":"Mu","p":["*%_"]},"n":"next-repo"},{"n":"abspath","s":{"r":"Mu","p":["*%_"]},"m":0,"k":"m"},{"n":"prefix","s":{"r":"Mu","p":["*%_"]},"k":"m","m":0},{"s":{"r":"Mu","p":["@auto","%init","*%_"]},"n":"BUILDALL","m":0,"k":"s"},{"m":0,"k":"m","s":{"r":"Mu","p":["CompUnit::DependencySpecification $spec","*%_"]},"n":"!matching-dist"},{"n":"!precomp-stores","s":{"r":"Mu","p":["*%_"]},"m":0,"k":"m"},{"n":"!distribution","s":{"p":["*%_"],"r":"Mu"},"k":"m","m":0},{"n":"!comp-unit-id","s":{"r":"Mu","p":["$name","*%_"]},"m":0,"k":"m"},{"m":0,"k":"m","s":{"p":["*%_"],"r":"Mu"},"n":"!files-prefix"}],"b":"A","a":[{"t":"Associative","n":"%!loaded","k":"v"},{"k":"v","n":"%!seen","t":"Associative"},{"t":"Mu","n":"$!precomp","k":"v"},{"t":"Mu","n":"$!id","k":"v"},{"k":"v","n":"$!precomp-stores","t":"Mu"},{"n":"$!precomp-store","t":"Mu","k":"v"},{"k":"v","t":"Mu","n":"$!distribution"},{"k":"v","t":"Mu","n":"$!files-prefix"},{"k":"v","n":"$.next-repo","t":"CompUnit::Repository"},{"t":"Str","n":"$.abspath","k":"v"},{"t":"IO::Path","n":"$.prefix","k":"v"},{"t":"ValueObjAt","n":"$.WHICH","k":"v"}],"d":"TITLE\nclass CompUnit::Repository::FileSystem\n\nSUBTITLE\nCompUnit::Repository::FileSystem\n\n    class CompUnit::Repository::FileSystem\n        does CompUnit::Repository::Locally\n        does CompUnit::Repository\n        { }\n\n\nA CompUnit::Repository implementation backed by the filesystem typically\nused in development situations. This is what is used by -I . / -I lib\n(which are actually -I file#. and -I file#lib) or use lib \".\" / use lib\n\"lib\". Unlike CompUnit::Repository::Installation, this represents a single\ndistribution.\n\n"},{"d":"TITLE\nclass CompUnit::Repository::Installation\n\nSUBTITLE\nCompUnit::Repository::Installation\n\n    class CompUnit::Repository::Installation\n        does CompUnit::Repository::Locally\n        does CompUnit::Repository::Installable\n        { }\n\n\nA CompUnit::Repository implementation backed by the filesystem, but uses an\ninternal storage format to:\n\n  * Handle case sensitivity issues on filesystems that may conflict as a\n  CompUnit::Repository::FileSystem.\n\n  * Handle allowable filename issues (e.g. unicode) on filesystems that don't\n  support them.\n\n  * Allow multiple distributions with the same name, but with different ver\n  and/or auth and/or api values, to be installed and separately accessible in\n  a single repository.\n\n  * Enable faster module loading by providing module precompilation.\n\nBecause of the internal storage format the usual way to add a distribution\nis not by copying files but by calling\nCompUnit::Repository::Installation#method_install.\n\n","k":"c","m":[{"s":{"r":"Mu","p":["*%_"]},"n":"writeable-path","k":"m","m":0},{"n":"can-install","s":{"r":"Mu","p":["*%_"]},"k":"m","m":0},{"n":"name","s":{"p":["*%_"],"r":"Str:D"},"m":0,"k":"m"},{"n":"upgrade-repository","s":{"p":["*%_"],"r":"Mu"},"m":0,"k":"m"},{"m":0,"k":"m","s":{"r":"Mu","p":["Distribution $distribution","Bool :$force","*%_"]},"n":"install"},{"n":"uninstall","s":{"r":"Mu","p":["Distribution $distribution","*%_"]},"m":0,"k":"m"},{"n":"files","s":{"r":"Mu","p":["$file","Str:D :$name!",":$auth",":$ver",":$api","*%_"]},"m":1,"k":"m"},{"s":{"r":"Mu","p":["$file",":$auth",":$ver",":$api","*%_"]},"n":"files","k":"m","m":1},{"n":"candidates","s":{"r":"Mu","p":["Str:D $name",":$auth",":$ver",":$api","*%_"]},"k":"m","m":1},{"m":1,"k":"m","n":"candidates","s":{"p":["CompUnit::DependencySpecification $spec","*%_"],"r":"Mu"}},{"n":"resolve","s":{"r":"CompUnit:D","p":["CompUnit::DependencySpecification $spec","*%_"]},"m":0,"k":"m"},{"n":"need","s":{"r":"CompUnit:D","p":["CompUnit::DependencySpecification $spec","CompUnit::PrecompilationRepository $precomp = { ... }","CompUnit::PrecompilationStore :@precomp-stores = { ... }","*%_"]},"k":"m","m":0},{"s":{"p":["$dist-id","$key","*%_"],"r":"Mu"},"n":"resource","k":"m","m":0},{"m":0,"k":"m","s":{"r":"Mu","p":["*%_"]},"n":"id"},{"k":"m","m":0,"s":{"p":["*%_"],"r":"Mu"},"n":"short-id"},{"s":{"r":"Iterable:D","p":["*%_"]},"n":"loaded","m":0,"k":"m"},{"k":"m","m":0,"n":"distribution","s":{"r":"Distribution","p":["Str $id","*%_"]}},{"m":0,"k":"m","s":{"r":"Iterable:D","p":["*%_"]},"n":"installed"},{"k":"m","m":0,"n":"precomp-store","s":{"r":"CompUnit::PrecompilationStore:D","p":["*%_"]}},{"s":{"r":"CompUnit::PrecompilationRepository:D","p":["*%_"]},"n":"precomp-repository","m":0,"k":"m"},{"m":0,"k":"m","n":"load","s":{"p":["IO::Path:D $file","*%_"],"r":"CompUnit:D"}},{"k":"m","m":0,"s":{"p":["*%_"],"r":"Mu"},"n":"repo-chain"},{"k":"m","m":0,"s":{"r":"Mu","p":["Any:D :$prefix is copy","*%_"]},"n":"new"},{"m":0,"k":"m","s":{"p":["*%_"],"r":"Mu"},"n":"path-spec"},{"s":{"p":["Str $name","*%_"],"r":"IO::Path:D"},"n":"source-file","m":0,"k":"m"},{"n":"Str","s":{"r":"Mu","p":["*%_"]},"k":"m","m":1},{"m":1,"k":"m","s":{"r":"Mu","p":["*%_"]},"n":"Str"},{"n":"Str","s":{"r":"Mu","p":["*%_"]},"m":1,"k":"m"},{"s":{"r":"Mu","p":["*%_"]},"n":"gist","k":"m","m":1},{"m":1,"k":"m","s":{"p":["*%_"],"r":"Mu"},"n":"gist"},{"s":{"r":"Mu","p":["*%_"]},"n":"gist","k":"m","m":1},{"n":"perl","s":{"r":"Mu","p":["*%_"]},"k":"m","m":1},{"m":1,"k":"m","s":{"p":["*%_"],"r":"Mu"},"n":"perl"},{"k":"m","m":1,"s":{"r":"Mu","p":["*%_"]},"n":"perl"},{"s":{"r":"ValueObjAt:D","p":["*%_"]},"n":"WHICH","k":"m","m":1},{"s":{"r":"ObjAt:D","p":["*%_"]},"n":"WHICH","m":1,"k":"m"},{"n":"WHICH","s":{"p":["*%_"],"r":"Mu"},"m":1,"k":"m"},{"s":{"r":"Mu","p":["*%_"]},"n":"next-repo","k":"m","m":0},{"s":{"r":"Mu","p":["*%_"]},"n":"abspath","k":"m","m":0},{"m":0,"k":"m","n":"prefix","s":{"r":"Mu","p":["*%_"]}},{"k":"s","m":0,"n":"BUILDALL","s":{"r":"Mu","p":["@auto","%init","*%_"]}},{"k":"m","m":0,"s":{"r":"Mu","p":["*%_"]},"n":"!writeable-path"},{"s":{"r":"Mu","p":["*%_"]},"n":"!bin-dir","k":"m","m":0},{"s":{"r":"Int:D","p":["*%_"]},"n":"!repository-version","k":"m","m":0},{"k":"m","m":0,"n":"!resources-dir","s":{"p":["*%_"],"r":"Mu"}},{"s":{"r":"Nil","p":["$dist","*%_"]},"n":"!remove-dist-from-short-name-lookup-files","m":0,"k":"m"},{"n":"!matching-dist","s":{"p":["CompUnit::DependencySpecification $spec","*%_"],"r":"Mu"},"m":0,"k":"m"},{"k":"m","m":0,"s":{"r":"Mu","p":["$dist-id",":$meta","*%_"]},"n":"!lazy-distribution"},{"k":"m","m":0,"n":"!precomp-stores","s":{"r":"Mu","p":["*%_"]}},{"k":"m","m":0,"s":{"r":"Mu","p":["Str $name","Str $dist-id","*%_"]},"n":"!file-id"},{"n":"!sources-dir","s":{"r":"Mu","p":["*%_"]},"m":0,"k":"m"},{"s":{"r":"Mu","p":["*%_"]},"n":"!repo-prefix","k":"m","m":0},{"s":{"p":["$name","$dist","$source?","$checksum?","*%_"],"r":"Mu"},"n":"!add-short-name","k":"m","m":0},{"n":"!read-dist","s":{"r":"Mu","p":["$id","*%_"]},"m":0,"k":"m"},{"k":"m","m":0,"s":{"r":"Mu","p":["*%_"]},"n":"!short-dir"},{"k":"m","m":0,"s":{"p":["*%_"],"r":"Mu"},"n":"!dist-dir"}],"a":[{"k":"v","n":"$!lock","t":"Mu"},{"k":"v","n":"$!cver","t":"Mu"},{"t":"Associative","n":"%!loaded","k":"v"},{"n":"%!seen","t":"Associative","k":"v"},{"k":"v","t":"Mu","n":"$!precomp"},{"n":"$!id","t":"Mu","k":"v"},{"t":"Int","n":"$!version","k":"v"},{"t":"Associative","n":"%!dist-metas","k":"v"},{"k":"v","t":"Mu","n":"$!precomp-stores"},{"n":"$!precomp-store","t":"Mu","k":"v"},{"k":"v","t":"CompUnit::Repository","n":"$.next-repo"},{"k":"v","t":"Str","n":"$.abspath"},{"k":"v","n":"$.prefix","t":"IO::Path"},{"k":"v","n":"$.WHICH","t":"ValueObjAt"}],"b":"A","t":"CompUnit::Repository::Installation","n":"CompUnit::Repository::Installation"},{"t":"CompUnit::Handle","n":"CompUnit::Handle","b":"A","a":[{"t":"Mu","n":"$!module_ctx","k":"v"},{"k":"v","t":"Mu","n":"$!unit"}],"k":"c","m":[{"m":0,"k":"m","n":"ctxsave","s":{"r":"Mu","p":["*%_"]}},{"n":"from-unit","s":{"p":["Stash $unit","*%_"],"r":"Mu"},"m":0,"k":"s"},{"m":0,"k":"m","s":{"p":["*%_"],"r":"Callable:D"},"n":"export-sub"},{"s":{"p":["*%_"],"r":"Stash:D"},"n":"export-package","m":0,"k":"m"},{"k":"m","m":0,"n":"export-how-package","s":{"p":["*%_"],"r":"Stash:D"}},{"k":"m","m":0,"n":"globalish-package","s":{"r":"Mu","p":["*%_"]}},{"s":{"r":"Mu","p":["*%_"]},"n":"unit","m":0,"k":"m"},{"k":"m","m":1,"s":{"r":"Mu","p":["*%attrinit"]},"n":"new"},{"n":"new","s":{"r":"Mu","p":["$","*@","*%_"]},"m":1,"k":"m"},{"n":"new","s":{"r":"Mu","p":["*%_"]},"k":"s","m":1},{"n":"new","s":{"p":["Mu \\module_ctx","*%_"],"r":"Mu"},"k":"s","m":1},{"n":"BUILDALL","s":{"p":["@auto","%init","*%_"],"r":"Mu"},"k":"s","m":0}]},{"n":"&cross","t":"Sub+{is-pure}+{Precedence}","k":"v"},{"m":1,"k":"s","n":"infix:<X>","s":{"p":["+\\lol is raw",":&with!"],"r":"Seq:D"}},{"s":{"r":"Seq:D","p":["+\\lol is raw"]},"n":"infix:<X>","k":"s","m":1},{"n":"&kv","t":"Sub","k":"v"},{"k":"s","m":1,"n":"kv","s":{"r":"Mu","p":["$x"]}},{"n":"&infix:<⊎>","t":"Sub+{is-pure}+{Precedence}","k":"v"},{"n":"infix:<(+)>","s":{"p":[],"r":"Mu"},"k":"s","m":1},{"n":"infix:<(+)>","s":{"r":"Mu","p":["Bag:D \\a"]},"k":"s","m":1},{"n":"infix:<(+)>","s":{"r":"Mu","p":["Mix:D \\a"]},"k":"s","m":1},{"s":{"r":"Mu","p":["MixHash:D \\a"]},"n":"infix:<(+)>","k":"s","m":1},{"m":1,"k":"s","n":"infix:<(+)>","s":{"r":"Mu","p":["\\a"]}},{"n":"infix:<(+)>","s":{"p":["Setty:D \\a","QuantHash:D \\b"],"r":"Mu"},"m":1,"k":"s"},{"k":"s","m":1,"n":"infix:<(+)>","s":{"p":["Setty:D \\a","Map:D \\b"],"r":"Mu"}},{"k":"s","m":1,"s":{"r":"Mu","p":["Mixy:D \\a","QuantHash:D \\b"]},"n":"infix:<(+)>"},{"s":{"r":"Mu","p":["Baggy:D \\a","QuantHash:D \\b"]},"n":"infix:<(+)>","m":1,"k":"s"},{"n":"infix:<(+)>","s":{"p":["Map:D \\a","Map:D \\b"],"r":"Mu"},"k":"s","m":1},{"s":{"r":"Mu","p":["Iterable:D \\a","Iterable:D \\b"]},"n":"infix:<(+)>","k":"s","m":1},{"s":{"p":["$","Failure:D \\b"],"r":"Mu"},"n":"infix:<(+)>","k":"s","m":1},{"m":1,"k":"s","s":{"r":"Mu","p":["Failure:D \\a","$"]},"n":"infix:<(+)>"},{"s":{"p":["\\a","\\b"],"r":"Mu"},"n":"infix:<(+)>","m":1,"k":"s"},{"n":"infix:<(+)>","s":{"p":["**@p"],"r":"Mu"},"m":1,"k":"s"},{"n":"&cotan","t":"Sub+{is-pure}","k":"v"},{"k":"s","m":1,"s":{"r":"Mu","p":["Numeric \\x"]},"n":"cotan"},{"m":1,"k":"s","n":"cotan","s":{"r":"Mu","p":["Cool \\x"]}},{"n":"cotan","s":{"p":["num $x"],"r":"num"},"m":1,"k":"s"},{"t":"Sub","n":"Sub","d":"TITLE\nclass Sub\n\nSUBTITLE\nSubroutine\n\n    class Sub is Routine { }\n\nA type for subroutines and operators. Subs are created with the sub\ndeclarator keyword followed by an optional identifier. This short tutorial\nexplains how operators are declared. For details of a sub's parameter list,\nsee Signature.\n\nNote that subs that go by the same name as coercers will not take\nprecedence over them. Use the &-sigil to call them.\n\n    sub Int(Str $s){'what?'};\n    say [Int, Int('42'),&Int('42')];\n    # OUTPUT: «[(Int) 42 what?]␤»\n\n Subs can be nested and scoped with my and our, whereby my is the default.\nA sub declared with my cannot be reached from any outer scope. An our\nscoped sub will not redefine a sub of the same name in the outer scope. Any\nsub can be accessed via a closure from any outer scope. For instance, in\nthis example\n\n    sub can-be-seener( $whatever ) {\n      my sub can-be-seen ( $objection ) {\n        return $whatever but $objection;\n      }\n      return &can-be-seen\n    }\n\n    my $objectioner = can-be-seener( \"Really?\");\n    say $objectioner(42).Int; # OUTPUT: «42␤»\n\n$objectioner will contain the can-be-seen subroutine, even if it has been\ndeclared in another scope; calling it with 42 will return \"Really?\" with\nthe number 42 mixed in, as shown in the last sentence.\n\nOperators\n\nOperators are also Subs. Their definition includes the category they belong\nto and their code, precedence and associativity. The syntax used in their\ndefinition is an example of extended identifiers.\n\nTraits \n\nA Trait is a sub that is applied at compile time to various objects like\nclasses, routines or containers. It is declared with the trait_mod\ndeclarator followed by a colon and a string literal containing the name of\nthe trait. A single positional parameter defines the type of the object\nthat the trait is applied to. A single named argument defines the secondary\nname and may carry arguments when the trait is called. Traits are a special\ngrammar category and are allowed to be placed after most language object\nnames or parameter lists.\n\n    say 'start';\n    multi sub trait_mod:<is>(Sub $s, :$foo){\n        say \"⟨is foo⟩ has been called with ⟨$foo⟩ on {$s.WHICH}\";\n    }\n    sub bar() is foo<oi‽> {\n        say 'bar has been called'\n    }\n    bar();\n    # OUTPUT: «⟨is foo⟩ has been called with ⟨oi‽⟩ on Sub|47563000␤start␤bar has been called␤»\n\nUse destructuring to call traits with complex arguments.\n\n    multi trait_mod:<is>(Variable $a, :@foo [$firstpos, *@restpos, :$named, *%restnameds]) {\n        say [$firstpos, @restpos, $named, %restnameds]\n    }\n    my $x is foo[1,2,3,:named<a>, :2b, :3c] = 1\n    # OUTPUT: «[1 [2 3] a {b => 2, c => 3}]␤»\n\nDespite its funky syntax, a trait is just a normal Sub. We can apply traits\nto it (or even themselves) and we can apply traits to objects at runtime.\n\n    multi sub trait_mod:<is> (Sub $s, :$foo) is foo {\n        say 'is foo called'\n    }\n    sub bar {}\n    &trait_mod:<is>(&bar, :foo);\n    # OUTPUT: «is foo called␤is foo called␤»","b":"A","a":[{"k":"v","t":"List","n":"@!dispatchees"},{"k":"v","t":"Mu","n":"$!dispatcher_cache"},{"k":"v","t":"Mu","n":"$!dispatcher"},{"k":"v","t":"int","n":"$!rw"},{"t":"Mu","n":"$!inline_info","k":"v"},{"k":"v","t":"int","n":"$!yada"},{"n":"$!package","t":"Mu","k":"v"},{"k":"v","t":"int","n":"$!onlystar"},{"t":"List","n":"@!dispatch_order","k":"v"},{"n":"$!dispatch_cache","t":"Mu","k":"v"},{"n":"$!why","t":"Mu","k":"v"},{"k":"v","n":"$!do","t":"Code"},{"k":"v","t":"Signature","n":"$!signature"},{"t":"List","n":"@!compstuff","k":"v"}],"m":[{"k":"s","m":0,"s":{"p":["@auto","%init","*%_"],"r":"Mu"},"n":"BUILDALL"},{"s":{"p":["*%_"],"r":"Mu"},"n":"onlystar","m":0,"k":"m"},{"s":{"r":"Mu","p":["*@","*%_"]},"n":"leave","k":"m","m":0},{"s":{"p":["*%_"],"r":"Mu"},"n":"candidates","m":0,"k":"m"},{"m":0,"k":"m","n":"cando","s":{"r":"Mu","p":["Capture:D $c","*%_"]}},{"s":{"p":["$handle","*%_"],"r":"Mu"},"n":"unwrap","k":"m","m":0},{"m":0,"k":"m","n":"multi","s":{"r":"Mu","p":["*%_"]}},{"k":"m","m":1,"s":{"r":"Mu","p":["*%_"]},"n":"perl"},{"n":"perl","s":{"r":"Mu","p":["*%_"]},"k":"m","m":1},{"s":{"p":["*%_"],"r":"Mu"},"n":"perl","k":"m","m":1},{"s":{"r":"Mu","p":["*%_"]},"n":"perl","k":"m","m":1},{"s":{"p":["*%_"],"r":"Mu"},"n":"perl","k":"m","m":1},{"s":{"p":["*%_"],"r":"Nil"},"n":"soft","m":0,"k":"m"},{"n":"wrap","s":{"r":"Mu","p":["&wrapper","*%_"]},"k":"m","m":0},{"s":{"p":["*%_"],"r":"Mu"},"n":"yada","k":"m","m":0},{"n":"gist","s":{"p":["*%_"],"r":"Mu"},"m":1,"k":"m"},{"k":"m","m":1,"s":{"p":["*%_"],"r":"Mu"},"n":"gist"},{"m":1,"k":"m","n":"gist","s":{"p":["*%_"],"r":"Mu"}},{"m":0,"k":"m","s":{"r":"Mu","p":["*%_"]},"n":"package"},{"s":{"p":["@auto","%init","*%_"],"r":"Mu"},"n":"BUILDALL","k":"s","m":0},{"k":"m","m":1,"n":"POSITIONS","s":{"p":["Failure:D \\failure","*%_"],"r":"Mu"}},{"n":"POSITIONS","s":{"p":["Any:D \\list","*%_"],"r":"Mu"},"m":1,"k":"m"},{"s":{"r":"Mu","p":["Str:D \\name","*%_"]},"n":"has-phaser","m":0,"k":"m"},{"s":{"p":["Str:D $name","*%_"],"r":"Mu"},"n":"phasers","m":0,"k":"m"},{"s":{"p":["*%_"],"r":"Mu"},"n":"WHY","m":0,"k":"m"},{"m":1,"k":"m","s":{"p":["*%_"],"r":"Mu"},"n":"perl"},{"k":"m","m":1,"s":{"p":["*%_"],"r":"Mu"},"n":"perl"},{"m":1,"k":"m","s":{"r":"Mu","p":["*%_"]},"n":"perl"},{"k":"m","m":1,"n":"perl","s":{"r":"Mu","p":["*%_"]}},{"m":0,"k":"m","n":"of","s":{"p":["*%_"],"r":"Mu"}},{"n":"fire_if_phasers","s":{"r":"Nil","p":["Str $name","*%_"]},"m":0,"k":"m"},{"s":{"p":["$why","*%_"],"r":"Nil"},"n":"set_why","m":0,"k":"m"},{"m":0,"k":"m","n":"returns","s":{"r":"Mu","p":["*%_"]}},{"m":0,"k":"m","s":{"p":["*%_"],"r":"Mu"},"n":"has-phasers"},{"k":"m","m":0,"n":"add_phaser","s":{"r":"Nil","p":["Str:D \\name","&block","*%_"]}},{"s":{"p":["Str $name","*%_"],"r":"Nil"},"n":"fire_phasers","m":0,"k":"m"},{"s":{"r":"Mu","p":["@auto","%init","*%_"]},"n":"BUILDALL","k":"s","m":0},{"m":0,"k":"m","s":{"p":["*%_"],"r":"Mu"},"n":"static_id"},{"s":{"r":"Mu","p":["*%_"]},"n":"returns","m":0,"k":"m"},{"n":"cando","s":{"p":["Capture:D $c","*%_"],"r":"Mu"},"k":"m","m":0},{"s":{"r":"Mu","p":["*%_"]},"n":"outer","k":"m","m":0},{"k":"m","m":1,"n":"new","s":{"r":"Mu","p":["*%attrinit"]}},{"m":1,"k":"m","s":{"p":["$","*@","*%_"],"r":"Mu"},"n":"new"},{"n":"new","s":{"r":"Mu","p":["*%_"]},"m":1,"k":"m"},{"k":"m","m":0,"s":{"p":["*%_"],"r":"Mu"},"n":"count"},{"m":1,"k":"m","s":{"r":"Mu","p":["\\topic","*%_"]},"n":"ACCEPTS"},{"s":{"r":"Mu","p":["Mu:U \\topic","*%_"]},"n":"ACCEPTS","k":"m","m":1},{"s":{"p":["Mu:D \\a","*%_"],"r":"Mu"},"n":"ACCEPTS","k":"m","m":1},{"s":{"r":"Bool","p":["Mu:U $","*%_"]},"n":"ACCEPTS","k":"m","m":1},{"m":1,"k":"m","n":"ACCEPTS","s":{"r":"Bool:D","p":["\\topic","*%_"]}},{"s":{"r":"Mu","p":["Mu $topic is raw","*%_"]},"n":"ACCEPTS","k":"m","m":1},{"s":{"p":["*%_"],"r":"Mu"},"n":"perl","k":"m","m":1},{"n":"perl","s":{"r":"Mu","p":["*%_"]},"k":"m","m":1},{"m":1,"k":"m","s":{"p":["*%_"],"r":"Mu"},"n":"perl"},{"k":"m","m":0,"n":"of","s":{"p":["*%_"],"r":"Mu"}},{"k":"m","m":0,"s":{"p":["*%_"],"r":"Mu"},"n":"file"},{"s":{"p":["*%_"],"r":"Mu"},"n":"signature","k":"m","m":0},{"s":{"r":"Mu","p":["*%_"]},"n":"Capture","m":0,"k":"m"},{"k":"m","m":1,"n":"Str","s":{"p":["*%_"],"r":"Mu"}},{"k":"m","m":1,"n":"Str","s":{"r":"Mu","p":["*%_"]}},{"s":{"p":["*%_"],"r":"Mu"},"n":"Str","m":1,"k":"m"},{"s":{"p":["|primers is raw"],"r":"Mu"},"n":"assuming","m":0,"k":"m"},{"k":"m","m":1,"s":{"p":["*%_"],"r":"Mu"},"n":"prec"},{"n":"prec","s":{"p":["Str:D $","*%_"],"r":"Mu"},"k":"m","m":1},{"m":0,"k":"m","s":{"r":"Mu","p":["*%_"]},"n":"arity"},{"m":0,"k":"m","s":{"r":"Mu","p":["*%_"]},"n":"line"},{"m":0,"k":"s","n":"BUILDALL","s":{"p":["@auto","%init","*%_"],"r":"Mu"}}],"k":"c"},{"t":"Stash","n":"Stash","d":"TITLE\nclass Stash\n\nSUBTITLE\nTable for \"our\"-scoped symbols\n\n    class Stash is Hash { }\n\nA Stash is a hash that is used for symbol tables at the package scoping\nlevel in Raku.\n\nTo get a Stash, you can call the .WHO pseudo-method on a package (because\nit answers the question who lives here?), or if you write the package name\nas a literal, append two colons:\n\n    class Boring {\n        class Nested { };\n        our sub package_sub { }\n        my sub lexical { };\n        method a_method() { }\n    }\n    say Boring::.^name;             # OUTPUT: «Stash␤»\n    say Boring.WHO === Boring::;    # OUTPUT: «True␤»\n\nSince it inherits from Hash, you can use all the usual hash functionality:\n\n    say Boring::.keys.sort;         # OUTPUT: «(&package_sub Nested)␤»\n    say Boring::<Nested>;           # OUTPUT: «(Nested)␤»\n\n\nAs the example above shows only \"our\"-scoped things appear in the Stash\n(nested classes are \"our\" by default, but can be excluded with \"my\".)\nLexicals and methods are not included in a Stash, since they do not live in\nthe package table. Lexicals live in a separate lexical pad, which is only\nvisible from inside the scope. ","b":"C","a":[{"k":"v","n":"$!longname","t":"str"},{"k":"v","t":"Mu","n":"$!descriptor"},{"k":"v","n":"$!storage","t":"Mu"}],"k":"c","m":[{"s":{"r":"Mu","p":["str $key","*%_"]},"n":"package_at_key","k":"m","m":0},{"m":0,"k":"m","s":{"p":["Hash $globalish","*%_"],"r":"Mu"},"n":"merge-symbols"},{"s":{"r":"Mu","p":["$key","*%_"]},"n":"AT-KEY","m":1,"k":"m"},{"s":{"p":["\\key","*%_"],"r":"Mu"},"n":"AT-KEY","m":1,"k":"m"},{"k":"m","m":1,"s":{"p":["Str:D \\key","*%_"],"r":"Mu"},"n":"AT-KEY"},{"s":{"r":"Mu","p":["\\key","*%_"]},"n":"AT-KEY","k":"m","m":1},{"n":"AT-KEY","s":{"p":["Str:D \\key","*%_"],"r":"Mu"},"m":1,"k":"m"},{"n":"AT-KEY","s":{"r":"Mu","p":["\\key","*%_"]},"m":1,"k":"m"},{"m":1,"k":"m","s":{"r":"Mu","p":["Str:D $key","*%_"]},"n":"AT-KEY"},{"s":{"p":["$key",":$global_fallback!","*%_"],"r":"Mu"},"n":"AT-KEY","k":"m","m":1},{"m":1,"k":"m","s":{"p":["*%_"],"r":"Mu"},"n":"gist"},{"k":"m","m":1,"s":{"r":"Mu","p":["*%_"]},"n":"gist"},{"n":"gist","s":{"r":"Str:D","p":["*%_"]},"k":"m","m":1},{"m":1,"k":"m","n":"gist","s":{"r":"Mu","p":["*%_"]}},{"s":{"r":"Mu","p":["*%_"]},"n":"gist","k":"m","m":1},{"m":1,"k":"m","n":"Str","s":{"r":"Mu","p":["*%_"]}},{"k":"m","m":1,"s":{"p":["*%_"],"r":"Mu"},"n":"Str"},{"n":"Str","s":{"p":["*%_"],"r":"Str:D"},"m":1,"k":"m"},{"k":"m","m":1,"n":"Str","s":{"p":["*%_"],"r":"Mu"}},{"n":"BUILDALL","s":{"p":["@auto","%init","*%_"],"r":"Mu"},"k":"s","m":0},{"m":1,"k":"m","n":"classify-list","s":{"p":["&test","\\list",":&as","*%_"],"r":"Mu"}},{"n":"classify-list","s":{"p":["%test","|c is raw"],"r":"Mu"},"k":"m","m":1},{"k":"m","m":1,"n":"classify-list","s":{"p":["@test","|c is raw"],"r":"Mu"}},{"k":"m","m":1,"n":"classify-list","s":{"p":["&test","**@list","|c is raw"],"r":"Mu"}},{"k":"m","m":1,"s":{"p":["$","*%_"],"r":"Nil"},"n":"DELETE-KEY"},{"n":"DELETE-KEY","s":{"r":"Mu","p":["$","*%_"]},"m":1,"k":"m"},{"k":"m","m":1,"s":{"r":"Nil","p":["*%_"]},"n":"DELETE-KEY"},{"s":{"p":["Str:D \\key","*%_"],"r":"Mu"},"n":"DELETE-KEY","m":1,"k":"m"},{"s":{"p":["\\key","*%_"],"r":"Mu"},"n":"DELETE-KEY","k":"m","m":1},{"m":0,"k":"m","s":{"r":"Mu","p":["+\\values is raw","*%_"]},"n":"push"},{"k":"m","m":0,"n":"of","s":{"p":["*%_"],"r":"Mu"}},{"s":{"p":["*%_"],"r":"Mu"},"n":"perl","m":1,"k":"m"},{"m":1,"k":"m","s":{"r":"Mu","p":["*%_"]},"n":"perl"},{"n":"perl","s":{"r":"Str:D","p":["*%_"]},"k":"m","m":1},{"s":{"r":"Mu","p":["*%_"]},"n":"perl","k":"m","m":1},{"n":"default","s":{"r":"Mu","p":["*%_"]},"m":0,"k":"m"},{"k":"m","m":1,"s":{"p":["$key","*%_"],"r":"Mu"},"n":"AT-KEY"},{"n":"AT-KEY","s":{"r":"Mu","p":["\\key","*%_"]},"m":1,"k":"m"},{"s":{"r":"Mu","p":["Str:D \\key","*%_"]},"n":"AT-KEY","m":1,"k":"m"},{"m":1,"k":"m","s":{"r":"Mu","p":["\\key","*%_"]},"n":"AT-KEY"},{"s":{"r":"Mu","p":["Str:D \\key","*%_"]},"n":"AT-KEY","k":"m","m":1},{"n":"AT-KEY","s":{"p":["\\key","*%_"],"r":"Mu"},"k":"m","m":1},{"s":{"r":"Mu","p":["*%_"]},"n":"Map","k":"m","m":1},{"s":{"r":"Mu","p":["*%_"]},"n":"Map","m":1,"k":"m"},{"n":"Map","s":{"r":"Mu","p":["*%_"]},"k":"m","m":1},{"k":"m","m":1,"n":"Map","s":{"r":"Mu","p":[":$view","*%_"]}},{"s":{"p":["*%_"],"r":"Mu"},"n":"Hash","k":"m","m":1},{"k":"m","m":1,"s":{"p":["*%_"],"r":"Mu"},"n":"Hash"},{"k":"m","m":1,"n":"Hash","s":{"r":"Hash:D","p":["*%_"]}},{"m":1,"k":"m","s":{"p":["*%_"],"r":"Mu"},"n":"Hash"},{"k":"m","m":0,"n":"append","s":{"r":"Mu","p":["+\\values is raw","*%_"]}},{"k":"m","m":1,"s":{"r":"Mu","p":["\\key","Mu \\bindval","*%_"]},"n":"BIND-KEY"},{"k":"m","m":1,"s":{"p":["Str:D \\key","Mu \\bindval","*%_"],"r":"Mu"},"n":"BIND-KEY"},{"n":"WHICH","s":{"p":["*%_"],"r":"ValueObjAt:D"},"m":1,"k":"m"},{"k":"m","m":1,"n":"WHICH","s":{"p":["*%_"],"r":"ObjAt:D"}},{"m":1,"k":"m","s":{"r":"ValueObjAt:D","p":["*%_"]},"n":"WHICH"},{"n":"WHICH","s":{"r":"ObjAt:D","p":["*%_"]},"k":"m","m":1},{"n":"DUMP","s":{"p":["*%_"],"r":"Mu"},"m":1,"k":"m"},{"s":{"p":[":$indent-step = 4",":%ctx","*%_"],"r":"Mu"},"n":"DUMP","m":1,"k":"m"},{"m":1,"k":"m","n":"DUMP","s":{"p":[":$indent-step = 4",":%ctx","*%_"],"r":"Mu"}},{"s":{"r":"Mu","p":["*%_"]},"n":"clone","k":"m","m":0},{"n":"ASSIGN-KEY","s":{"p":["\\key","Mu \\assignee","*%_"],"r":"Mu"},"m":1,"k":"m"},{"k":"m","m":1,"s":{"r":"Mu","p":["\\key","Mu \\value","*%_"]},"n":"ASSIGN-KEY"},{"m":1,"k":"m","n":"ASSIGN-KEY","s":{"r":"Mu","p":["Str:D $key","Mu \\assignval","*%_"]}},{"m":1,"k":"m","n":"ASSIGN-KEY","s":{"r":"Mu","p":["\\key","Mu \\assignval","*%_"]}},{"s":{"r":"Mu","p":["&test","\\list",":&as","*%_"]},"n":"categorize-list","m":1,"k":"m"},{"s":{"r":"Mu","p":["%test","|c is raw"]},"n":"categorize-list","k":"m","m":1},{"n":"categorize-list","s":{"r":"Mu","p":["@test","|c is raw"]},"k":"m","m":1},{"s":{"p":["&test","**@list","|c is raw"],"r":"Mu"},"n":"categorize-list","k":"m","m":1},{"k":"m","m":1,"s":{"p":["*%_"],"r":"Mu"},"n":"gist"},{"m":1,"k":"m","s":{"p":["*%_"],"r":"Mu"},"n":"gist"},{"s":{"r":"Str:D","p":["*%_"]},"n":"gist","m":1,"k":"m"},{"s":{"p":["*%_"],"r":"Mu"},"n":"gist","k":"m","m":1},{"m":0,"k":"m","s":{"r":"Mu","p":["*%_"]},"n":"keyof"},{"k":"m","m":1,"s":{"r":"Nil","p":["Str:D \\key","Mu \\x","*%_"]},"n":"STORE_AT_KEY"},{"m":1,"k":"m","n":"STORE_AT_KEY","s":{"r":"Nil","p":["\\key","Mu \\x","*%_"]}},{"s":{"p":["*%_"],"r":"Mu"},"n":"dynamic","k":"m","m":0},{"k":"m","m":0,"s":{"p":["*%_"],"r":"Mu"},"n":"name"},{"m":1,"k":"m","n":"STORE","s":{"r":"Mu","p":["\\to_store","*%_"]}},{"n":"STORE","s":{"r":"Mu","p":["\\keys","\\values","*%_"]},"k":"m","m":1},{"m":0,"k":"s","n":"BUILDALL","s":{"r":"Mu","p":["@auto","%init","*%_"]}},{"n":"clone","s":{"p":["*%_"],"r":"Map:D"},"k":"m","m":0},{"s":{"r":"Iterator:D","p":["*%_"]},"n":"iterator","k":"m","m":0},{"s":{"p":["*%_"],"r":"Mu"},"n":"hash","m":0,"k":"m"},{"n":"ASSIGN-KEY","s":{"p":["\\key","Mu \\assignee","*%_"],"r":"Mu"},"m":1,"k":"m"},{"k":"m","m":1,"n":"ASSIGN-KEY","s":{"p":["\\key","Mu \\value","*%_"],"r":"Mu"}},{"k":"m","m":1,"s":{"r":"Mu","p":["*%_"]},"n":"Str"},{"m":1,"k":"m","n":"Str","s":{"p":["*%_"],"r":"Mu"}},{"m":1,"k":"m","s":{"p":["*%_"],"r":"Str:D"},"n":"Str"},{"s":{"p":["*%_"],"r":"SetHash:D"},"n":"SetHash","k":"m","m":1},{"s":{"r":"SetHash:D","p":["*%_"]},"n":"SetHash","m":1,"k":"m"},{"k":"m","m":1,"n":"SetHash","s":{"r":"Mu","p":["*%_"]}},{"s":{"r":"Mu","p":["*%_"]},"n":"Capture","k":"m","m":0},{"m":0,"k":"m","n":"flat","s":{"p":["*%_"],"r":"Mu"}},{"s":{"r":"Mu","p":["*%_"]},"n":"sort","m":1,"k":"m"},{"s":{"r":"Mu","p":["&by","*%_"]},"n":"sort","m":1,"k":"m"},{"k":"m","m":1,"n":"sort","s":{"r":"Seq:D","p":["*%_"]}},{"s":{"p":["*%_"],"r":"ValueObjAt:D"},"n":"WHICH","k":"m","m":1},{"s":{"r":"ObjAt:D","p":["*%_"]},"n":"WHICH","m":1,"k":"m"},{"s":{"p":["*%_"],"r":"ValueObjAt:D"},"n":"WHICH","k":"m","m":1},{"n":"Mix","s":{"r":"Mix:D","p":["*%_"]},"k":"m","m":1},{"k":"m","m":1,"s":{"p":["*%_"],"r":"Mix:D"},"n":"Mix"},{"k":"m","m":1,"s":{"p":["*%_"],"r":"Mu"},"n":"Mix"},{"n":"Set","s":{"p":["*%_"],"r":"Set:D"},"m":1,"k":"m"},{"n":"Set","s":{"r":"Set:D","p":["*%_"]},"m":1,"k":"m"},{"n":"Set","s":{"p":["*%_"],"r":"Mu"},"k":"m","m":1},{"n":"Bag","s":{"r":"Bag:D","p":["*%_"]},"k":"m","m":1},{"m":1,"k":"m","n":"Bag","s":{"p":["*%_"],"r":"Bag:D"}},{"s":{"p":["*%_"],"r":"Mu"},"n":"Bag","k":"m","m":1},{"k":"m","m":1,"s":{"p":["*%_"],"r":"Mu"},"n":"values"},{"m":1,"k":"m","n":"values","s":{"r":"Mu","p":["*%_"]}},{"s":{"p":["*%_"],"r":"Seq:D"},"n":"values","k":"m","m":1},{"s":{"p":["*%_"],"r":"Mu"},"n":"roll","m":1,"k":"m"},{"s":{"p":["$n","*%_"],"r":"Mu"},"n":"roll","k":"m","m":1},{"m":1,"k":"m","n":"roll","s":{"r":"Mu","p":["*%_"]}},{"s":{"r":"Mu","p":["Callable:D $calculate","*%_"]},"n":"roll","m":1,"k":"m"},{"m":1,"k":"m","n":"roll","s":{"p":["Whatever $","*%_"],"r":"Mu"}},{"n":"roll","s":{"p":["$count","*%_"],"r":"Mu"},"k":"m","m":1},{"n":"pairs","s":{"r":"Mu","p":["*%_"]},"m":1,"k":"m"},{"m":1,"k":"m","s":{"p":["*%_"],"r":"Mu"},"n":"pairs"},{"n":"pairs","s":{"p":["*%_"],"r":"Seq:D"},"m":1,"k":"m"},{"m":1,"k":"m","s":{"p":["*%_"],"r":"Mu"},"n":"head"},{"n":"head","s":{"p":["Callable:D $w","*%_"],"r":"Mu"},"m":1,"k":"m"},{"k":"m","m":1,"n":"head","s":{"p":["$n","*%_"],"r":"Mu"}},{"m":1,"k":"m","n":"head","s":{"p":["*%_"],"r":"Mu"}},{"k":"m","m":1,"n":"kv","s":{"p":["*%_"],"r":"Mu"}},{"n":"kv","s":{"p":["*%_"],"r":"Mu"},"m":1,"k":"m"},{"s":{"r":"Seq:D","p":["*%_"]},"n":"kv","m":1,"k":"m"},{"s":{"p":["*%_"],"r":"IterationBuffer:D"},"n":"IterationBuffer","m":0,"k":"m"},{"k":"m","m":1,"n":"STORE","s":{"r":"Map:D","p":["Map:D \\map",":$INITIALIZE!","*%_"]}},{"n":"STORE","s":{"r":"Map:D","p":["\\to_store",":$INITIALIZE!","*%_"]},"k":"m","m":1},{"k":"m","m":1,"s":{"r":"Map:D","p":["\\keys","\\values",":$INITIALIZE!","*%_"]},"n":"STORE"},{"s":{"p":["|"],"r":"Mu"},"n":"STORE","k":"m","m":1},{"k":"m","m":0,"n":"FLATTENABLE_LIST","s":{"p":["*%_"],"r":"Mu"}},{"n":"pick","s":{"p":["*%_"],"r":"Mu"},"k":"m","m":1},{"m":1,"k":"m","n":"pick","s":{"r":"Mu","p":["$n","*%_"]}},{"s":{"r":"Mu","p":["*%_"]},"n":"pick","k":"m","m":1},{"m":1,"k":"m","n":"keys","s":{"p":["*%_"],"r":"Mu"}},{"s":{"p":["*%_"],"r":"Mu"},"n":"keys","k":"m","m":1},{"s":{"r":"Seq:D","p":["*%_"]},"n":"keys","k":"m","m":1},{"k":"m","m":0,"n":"keyof","s":{"r":"Mu","p":["*%_"]}},{"s":{"r":"Int:D","p":["*%_"]},"n":"elems","m":0,"k":"m"},{"k":"m","m":1,"n":"gist","s":{"p":["*%_"],"r":"Mu"}},{"s":{"r":"Mu","p":["*%_"]},"n":"gist","m":1,"k":"m"},{"k":"m","m":1,"s":{"p":["*%_"],"r":"Str:D"},"n":"gist"},{"n":"List","s":{"r":"List:D","p":["*%_"]},"k":"m","m":0},{"n":"Bool","s":{"p":["*%_"],"r":"Bool"},"k":"m","m":1},{"n":"Bool","s":{"p":["*%_"],"r":"Mu"},"k":"m","m":1},{"s":{"p":["*%_"],"r":"Bool:D"},"n":"Bool","m":1,"k":"m"},{"m":1,"k":"m","s":{"r":"Mu","p":["*%attrinit"]},"n":"new"},{"s":{"r":"Mu","p":["$","*@","*%_"]},"n":"new","k":"m","m":1},{"s":{"p":["*%_"],"r":"Map:D"},"n":"new","m":1,"k":"m"},{"k":"m","m":1,"n":"new","s":{"p":["*@args","*%_"],"r":"Map:D"}},{"k":"m","m":0,"n":"list","s":{"p":["*%_"],"r":"List:D"}},{"n":"hyper","s":{"p":["Int(Cool) :$batch = 64","Int(Cool) :$degree = 4","*%_"],"r":"Mu"},"k":"m","m":0},{"m":0,"k":"m","s":{"p":["Cool $format = \"\\%s\\t\\%s\"","$sep = \"\\n\"","*%_"],"r":"Str:D"},"n":"fmt"},{"m":0,"k":"m","n":"race","s":{"r":"Mu","p":["Int(Cool) :$batch = 64","Int(Cool) :$degree = 4","*%_"]}},{"m":0,"k":"m","n":"item","s":{"r":"Mu","p":["*%_"]}},{"s":{"r":"Mu","p":["*%_"]},"n":"invert","k":"m","m":1},{"n":"invert","s":{"p":["*%_"],"r":"Mu"},"m":1,"k":"m"},{"k":"m","m":1,"s":{"p":["*%_"],"r":"Seq:D"},"n":"invert"},{"n":"ACCEPTS","s":{"r":"Mu","p":["\\topic","*%_"]},"m":1,"k":"m"},{"s":{"r":"Mu","p":["Mu:U \\topic","*%_"]},"n":"ACCEPTS","m":1,"k":"m"},{"n":"ACCEPTS","s":{"r":"Mu","p":["Mu:D \\a","*%_"]},"m":1,"k":"m"},{"k":"m","m":1,"n":"ACCEPTS","s":{"r":"Bool","p":["Mu:U $","*%_"]}},{"s":{"p":["\\topic","*%_"],"r":"Bool:D"},"n":"ACCEPTS","k":"m","m":1},{"s":{"r":"Bool:D","p":["$topic","*%_"]},"n":"ACCEPTS","m":1,"k":"m"},{"n":"ACCEPTS","s":{"r":"Bool:D","p":["Cool:D $topic","*%_"]},"k":"m","m":1},{"s":{"p":["Positional $topic","*%_"],"r":"Bool:D"},"n":"ACCEPTS","m":1,"k":"m"},{"n":"ACCEPTS","s":{"p":["Regex $topic","*%_"],"r":"Bool:D"},"k":"m","m":1},{"k":"m","m":1,"s":{"p":["Map:D \\m","*%_"],"r":"Bool:D"},"n":"ACCEPTS"},{"n":"EXISTS-KEY","s":{"r":"Bool","p":["$","*%_"]},"k":"m","m":1},{"s":{"p":["$","*%_"],"r":"Bool"},"n":"EXISTS-KEY","k":"m","m":1},{"k":"m","m":1,"s":{"p":["Str:D \\key","*%_"],"r":"Bool:D"},"n":"EXISTS-KEY"},{"m":1,"k":"m","s":{"r":"Bool:D","p":["\\key","*%_"]},"n":"EXISTS-KEY"},{"k":"m","m":0,"n":"of","s":{"r":"Mu","p":["*%_"]}},{"k":"m","m":1,"n":"perl","s":{"r":"Mu","p":["*%_"]}},{"s":{"r":"Mu","p":["*%_"]},"n":"perl","m":1,"k":"m"},{"m":1,"k":"m","n":"perl","s":{"p":["*%_"],"r":"Str:D"}},{"n":"Numeric","s":{"r":"Mu","p":["*%_"]},"k":"m","m":1},{"k":"m","m":1,"s":{"r":"Int:D","p":["*%_"]},"n":"Numeric"},{"k":"m","m":0,"s":{"p":["$flag","*%_"],"r":"Mu"},"n":"lazy-if"},{"m":1,"k":"m","n":"Map","s":{"r":"Mu","p":["*%_"]}},{"s":{"p":["*%_"],"r":"Mu"},"n":"Map","m":1,"k":"m"},{"k":"m","m":0,"n":"FLATTENABLE_HASH","s":{"r":"Mu","p":["*%_"]}},{"s":{"r":"Mu","p":["*%_"]},"n":"Hash","k":"m","m":1},{"k":"m","m":1,"s":{"r":"Mu","p":["*%_"]},"n":"Hash"},{"m":1,"k":"m","n":"Hash","s":{"p":["*%_"],"r":"Hash:D"}},{"s":{"r":"Mu","p":["$key","*%_"]},"n":"AT-KEY","k":"m","m":1},{"m":1,"k":"m","n":"AT-KEY","s":{"r":"Mu","p":["\\key","*%_"]}},{"k":"m","m":1,"n":"AT-KEY","s":{"p":["Str:D \\key","*%_"],"r":"Mu"}},{"m":1,"k":"m","s":{"r":"Mu","p":["\\key","*%_"]},"n":"AT-KEY"},{"n":"lazy","s":{"p":["*%_"],"r":"Mu"},"m":0,"k":"m"},{"s":{"p":["*%_"],"r":"Mu"},"n":"antipairs","m":1,"k":"m"},{"s":{"r":"Mu","p":["*%_"]},"n":"antipairs","m":1,"k":"m"},{"s":{"p":["*%_"],"r":"Seq:D"},"n":"antipairs","m":1,"k":"m"},{"s":{"r":"Mu","p":["*%_"]},"n":"Int","m":1,"k":"m"},{"n":"Int","s":{"r":"Int:D","p":["*%_"]},"k":"m","m":1},{"m":1,"k":"m","s":{"p":["*%_"],"r":"MixHash:D"},"n":"MixHash"},{"n":"MixHash","s":{"r":"MixHash:D","p":["*%_"]},"m":1,"k":"m"},{"n":"MixHash","s":{"r":"Mu","p":["*%_"]},"m":1,"k":"m"},{"m":1,"k":"m","s":{"r":"BagHash:D","p":["*%_"]},"n":"BagHash"},{"k":"m","m":1,"s":{"p":["*%_"],"r":"BagHash:D"},"n":"BagHash"},{"s":{"p":["*%_"],"r":"Mu"},"n":"BagHash","k":"m","m":1},{"n":"BUILDALL","s":{"p":["@auto","%init","*%_"],"r":"Mu"},"m":0,"k":"s"}]},{"b":"C","k":"c","m":[{"k":"m","m":1,"s":{"p":["\\value","*%_"],"r":"Int:D"},"n":"new"},{"n":"new","s":{"r":"Int:D","p":["int \\value","*%_"]},"k":"m","m":1},{"n":"new","s":{"r":"Int:D","p":["Int:D \\value = 0","*%_"]},"m":1,"k":"m"},{"m":0,"k":"m","n":"Capture","s":{"r":"Mu","p":["*%_"]}},{"n":"Int","s":{"p":["*%_"],"r":"Int"},"m":0,"k":"m"},{"n":"Num","s":{"r":"Num:D","p":["*%_"]},"m":0,"k":"m"},{"k":"m","m":0,"n":"Rat","s":{"r":"Rat:D","p":["$?","*%_"]}},{"k":"m","m":0,"s":{"p":["$?","*%_"],"r":"FatRat:D"},"n":"FatRat"},{"m":0,"k":"m","s":{"r":"Int:D","p":["*%_"]},"n":"abs"},{"k":"m","m":0,"s":{"p":["*%_"],"r":"Num:D"},"n":"Bridge"},{"s":{"r":"Str:D","p":["*%_"]},"n":"chr","m":0,"k":"m"},{"n":"sqrt","s":{"p":["*%_"],"r":"Num:D"},"k":"m","m":0},{"k":"m","m":1,"s":{"p":["Int:D $base","*%_"],"r":"Str:D"},"n":"base"},{"n":"base","s":{"p":["Int(Cool) $base","$digits?","*%_"],"r":"Str:D"},"m":1,"k":"m"},{"m":0,"k":"m","n":"polymod","s":{"p":["+@mods","*%_"],"r":"Seq:D"}},{"n":"expmod","s":{"p":["Int:D \\base","Int:D \\mod","*%_"],"r":"Int:D"},"k":"m","m":0},{"s":{"p":["*%_"],"r":"Bool:D"},"n":"is-prime","k":"m","m":0},{"m":0,"k":"m","n":"floor","s":{"p":["*%_"],"r":"Int:D"}},{"m":0,"k":"m","s":{"r":"Int:D","p":["*%_"]},"n":"ceiling"},{"m":1,"k":"m","n":"round","s":{"p":["*%_"],"r":"Int:D"}},{"k":"m","m":1,"s":{"p":["Real(Cool) $scale","*%_"],"r":"Real:D"},"n":"round"},{"m":1,"k":"m","s":{"r":"Mu","p":["*%_"]},"n":"round"},{"s":{"r":"Mu","p":["$scale","*%_"]},"n":"round","m":1,"k":"m"},{"s":{"r":"Int:D","p":["*%_"]},"n":"lsb","m":0,"k":"m"},{"k":"m","m":0,"n":"msb","s":{"p":["*%_"],"r":"Int:D"}},{"m":0,"k":"m","n":"narrow","s":{"r":"Int:D","p":["*%_"]}},{"s":{"p":["*%_"],"r":"Range:D"},"n":"Range","k":"m","m":0},{"k":"m","m":0,"s":{"p":["*%_"],"r":"Mu"},"n":"unival"},{"k":"m","m":0,"s":{"r":"Mu","p":["*%_"]},"n":"sign"},{"s":{"p":["*%_"],"r":"Mu"},"n":"conj","k":"m","m":0},{"s":{"r":"Mu","p":["*%_"]},"n":"rand","k":"m","m":0},{"s":{"p":["*%_"],"r":"Mu"},"n":"sin","k":"m","m":0},{"k":"m","m":0,"n":"asin","s":{"p":["*%_"],"r":"Mu"}},{"k":"m","m":0,"n":"cos","s":{"r":"Mu","p":["*%_"]}},{"k":"m","m":0,"n":"acos","s":{"r":"Mu","p":["*%_"]}},{"s":{"r":"Mu","p":["*%_"]},"n":"tan","m":0,"k":"m"},{"n":"atan","s":{"p":["*%_"],"r":"Mu"},"k":"m","m":0},{"k":"m","m":1,"n":"atan2","s":{"r":"Mu","p":["Real $x = 1e0","*%_"]}},{"k":"m","m":1,"s":{"p":["Cool $x = 1e0","*%_"],"r":"Mu"},"n":"atan2"},{"n":"sec","s":{"r":"Mu","p":["*%_"]},"m":0,"k":"m"},{"s":{"r":"Mu","p":["*%_"]},"n":"asec","k":"m","m":0},{"n":"cosec","s":{"r":"Mu","p":["*%_"]},"m":0,"k":"m"},{"n":"acosec","s":{"r":"Mu","p":["*%_"]},"k":"m","m":0},{"n":"cotan","s":{"p":["*%_"],"r":"Mu"},"m":0,"k":"m"},{"s":{"r":"Mu","p":["*%_"]},"n":"acotan","m":0,"k":"m"},{"k":"m","m":0,"s":{"p":["*%_"],"r":"Mu"},"n":"sinh"},{"n":"asinh","s":{"r":"Mu","p":["*%_"]},"m":0,"k":"m"},{"m":0,"k":"m","n":"cosh","s":{"r":"Mu","p":["*%_"]}},{"m":0,"k":"m","n":"acosh","s":{"p":["*%_"],"r":"Mu"}},{"m":0,"k":"m","n":"tanh","s":{"p":["*%_"],"r":"Mu"}},{"m":0,"k":"m","n":"atanh","s":{"r":"Mu","p":["*%_"]}},{"k":"m","m":0,"n":"sech","s":{"p":["*%_"],"r":"Mu"}},{"n":"asech","s":{"p":["*%_"],"r":"Mu"},"m":0,"k":"m"},{"n":"cosech","s":{"p":["*%_"],"r":"Mu"},"m":0,"k":"m"},{"n":"acosech","s":{"p":["*%_"],"r":"Mu"},"m":0,"k":"m"},{"n":"cotanh","s":{"r":"Mu","p":["*%_"]},"k":"m","m":0},{"k":"m","m":0,"n":"acotanh","s":{"r":"Mu","p":["*%_"]}},{"n":"unpolar","s":{"p":["Real $angle","*%_"],"r":"Mu"},"m":0,"k":"m"},{"k":"m","m":0,"n":"cis","s":{"p":["*%_"],"r":"Mu"}},{"m":0,"k":"m","n":"Complex","s":{"p":["*%_"],"r":"Mu"}},{"k":"m","m":1,"s":{"r":"Mu","p":["*%_"]},"n":"log"},{"n":"log","s":{"p":["Real $base","*%_"],"r":"Mu"},"k":"m","m":1},{"m":1,"k":"m","n":"log","s":{"r":"Mu","p":["Cool $base","*%_"]}},{"m":1,"k":"m","s":{"r":"Mu","p":["Numeric $base","*%_"]},"n":"log"},{"n":"exp","s":{"r":"Mu","p":["*%_"]},"m":1,"k":"m"},{"s":{"p":["$base","*%_"],"r":"Mu"},"n":"exp","m":1,"k":"m"},{"n":"truncate","s":{"p":["*%_"],"r":"Mu"},"m":0,"k":"m"},{"m":0,"k":"m","n":"isNaN","s":{"r":"Mu","p":["*%_"]}},{"k":"m","m":0,"s":{"p":["*%_"],"r":"Mu"},"n":"log10"},{"k":"m","m":0,"n":"roots","s":{"r":"Mu","p":["Cool $n","*%_"]}},{"m":0,"k":"m","n":"succ","s":{"p":["*%_"],"r":"Mu"}},{"k":"m","m":0,"n":"pred","s":{"p":["*%_"],"r":"Mu"}},{"m":1,"k":"m","n":"WHICH","s":{"p":["*%_"],"r":"ValueObjAt:D"}},{"n":"WHICH","s":{"p":["*%_"],"r":"ObjAt:D"},"m":1,"k":"m"},{"m":1,"k":"m","n":"WHICH","s":{"r":"ValueObjAt:D","p":["*%_"]}},{"n":"perl","s":{"r":"Mu","p":["*%_"]},"k":"m","m":1},{"m":1,"k":"m","n":"perl","s":{"r":"Mu","p":["*%_"]}},{"n":"perl","s":{"r":"Str:D","p":["*%_"]},"m":1,"k":"m"},{"m":1,"k":"m","n":"Bool","s":{"p":["*%_"],"r":"Bool"}},{"m":1,"k":"m","s":{"r":"Mu","p":["*%_"]},"n":"Bool"},{"m":1,"k":"m","n":"Bool","s":{"r":"Bool:D","p":["*%_"]}},{"n":"Bool","s":{"r":"Mu","p":["*%_"]},"k":"m","m":1},{"k":"m","m":1,"s":{"p":["*%_"],"r":"Mu"},"n":"Str"},{"m":1,"k":"m","n":"Str","s":{"p":["*%_"],"r":"Mu"}},{"m":1,"k":"m","s":{"r":"Str:D","p":["*%_"]},"n":"Str"},{"k":"m","m":1,"n":"Str","s":{"r":"Mu","p":["*%_"]}},{"n":"Real","s":{"r":"Mu","p":["*%_"]},"k":"m","m":1},{"k":"m","m":1,"n":"Real","s":{"p":["*%_"],"r":"Mu"}},{"s":{"r":"Mu","p":["*%_"]},"n":"Real","m":1,"k":"m"},{"s":{"p":["*%_"],"r":"Mu"},"n":"Real","k":"m","m":1},{"k":"m","m":1,"n":"Numeric","s":{"p":["*%_"],"r":"Mu"}},{"k":"m","m":1,"n":"Numeric","s":{"r":"Mu","p":["*%_"]}},{"n":"Numeric","s":{"p":["*%_"],"r":"Mu"},"m":1,"k":"m"},{"k":"m","m":1,"s":{"p":["\\topic","*%_"],"r":"Mu"},"n":"ACCEPTS"},{"n":"ACCEPTS","s":{"p":["Mu:U \\topic","*%_"],"r":"Mu"},"k":"m","m":1},{"m":1,"k":"m","n":"ACCEPTS","s":{"r":"Mu","p":["Mu:D \\a","*%_"]}},{"s":{"r":"Bool","p":["Mu:U $","*%_"]},"n":"ACCEPTS","m":1,"k":"m"},{"s":{"r":"Bool:D","p":["\\topic","*%_"]},"n":"ACCEPTS","m":1,"k":"m"},{"m":1,"k":"m","s":{"r":"Mu","p":["Any:D \\a","*%_"]},"n":"ACCEPTS"},{"s":{"p":["*%_"],"r":"Mu"},"n":"gist","k":"m","m":1},{"s":{"p":["*%_"],"r":"Mu"},"n":"gist","m":1,"k":"m"},{"m":1,"k":"m","n":"gist","s":{"r":"Mu","p":["*%_"]}},{"n":"DUMP","s":{"p":["*%_"],"r":"Mu"},"k":"m","m":1},{"s":{"r":"Mu","p":[":$indent-step = 4",":%ctx","*%_"]},"n":"DUMP","k":"m","m":1},{"m":1,"k":"m","n":"DUMP","s":{"p":["*%_"],"r":"Mu"}},{"n":"BUILDALL","s":{"p":["@auto","%init","*%_"],"r":"Mu"},"k":"s","m":0}],"d":"TITLE\nclass Int\n\nSUBTITLE\nInteger (arbitrary-precision)\n\n    class Int is Cool does Real { }\n\n\nInt objects store integral numbers of arbitrary size. Ints are immutable.\n\nThere are two main syntax forms for Int literals\n\n    123;         # Int in decimal notation\n    :16<BEEF>;   # Int in radix notations\n\nFor your convenience common radix forms come with a prefix shortcut.\n\n    say so :2<11111111> == 0b11111111 == :8<377> == 0o377 == 255 == 0d255 == :16<ff> == 0xff;\n    # OUTPUT: «True␤»\n\nAll forms allow underscores between any two digits which can serve as\nvisual separators, but don't carry any meaning:\n\n    5_00000;       # five Lakhs\n    500_000;       # five hundred thousand\n    0xBEEF_CAFE;   # a strange place\n    :2<1010_1010>; # 0d170\n\nRadix notation also supports round and angle brackets which allow you to\nparse a string for a given base, and putting together digits into a whole\nnumber respectively:\n\n    :16(\"9F\");         # 159\n    :100[99, 2, 3];    # 990203\n\nThese notations allow you to use variables, too:\n\n    my $two = \"2\";\n    my $ninety-nine = \"99\";\n    :16($ninety-nine); # 153\n    :100[99, $two, 3]; # 990203\n\n","n":"Int","t":"Int"},{"d":"TITLE\nrole Stringy\n\nSUBTITLE\nString or object that can act as a string\n\n    role Stringy { ... }\n\nCommon role for string types (such as Str).","k":"ro","b":"C","t":"Stringy","n":"Stringy"},{"k":"v","t":"Sub","n":"&indir"},{"m":1,"k":"s","n":"indir","s":{"r":"Mu","p":["$path","&what",":$test!"]}},{"m":1,"k":"s","s":{"p":["$path","&what",":$d = Bool::True",":$r",":$w",":$x"],"r":"Mu"},"n":"indir"},{"n":"PROTO_TCP","t":"ProtocolType","k":"e"},{"t":"Sub","n":"&prefix:<temp>","k":"v"},{"n":"prefix:<temp>","s":{"p":["Mu \\cont"],"r":"Mu"},"k":"s","m":0},{"t":"Sub+{Precedence}","n":"&infix:<xor>","k":"v"},{"k":"s","m":1,"s":{"p":["Mu $x = Bool::False"],"r":"Mu"},"n":"infix:<xor>"},{"s":{"r":"Mu","p":["Mu \\a","&b"]},"n":"infix:<xor>","m":1,"k":"s"},{"s":{"p":["Mu \\a","Mu \\b"],"r":"Mu"},"n":"infix:<xor>","k":"s","m":1},{"m":1,"k":"s","n":"infix:<xor>","s":{"r":"Mu","p":["|c is raw"]}},{"t":"Sub+{is-pure}+{Precedence}","n":"&infix:<+|>","k":"v"},{"s":{"r":"Mu","p":[]},"n":"infix:<+|>","k":"s","m":1},{"n":"infix:<+|>","s":{"r":"Mu","p":["$x"]},"m":1,"k":"s"},{"s":{"p":["$x","$y"],"r":"Mu"},"n":"infix:<+|>","m":1,"k":"s"},{"m":1,"k":"s","s":{"p":["Int:D \\a","Int:D \\b"],"r":"Int:D"},"n":"infix:<+|>"},{"k":"s","m":1,"n":"infix:<+|>","s":{"p":["int $a","int $b"],"r":"int"}},{"k":"v","t":"Sub+{Callable[Bool:D]}+{is-pure}+{Precedence}","n":"&infix:«(<)»"},{"k":"s","m":1,"s":{"p":["Setty:D \\a","Setty:D \\b"],"r":"Bool:D"},"n":"infix:«(<)»"},{"m":1,"k":"s","n":"infix:«(<)»","s":{"p":["Setty:D \\a","Mixy:D \\b"],"r":"Bool:D"}},{"k":"s","m":1,"s":{"r":"Bool:D","p":["Setty:D \\a","Baggy:D \\b"]},"n":"infix:«(<)»"},{"k":"s","m":1,"s":{"r":"Bool:D","p":["Setty:D \\a","\\b"]},"n":"infix:«(<)»"},{"s":{"p":["Mixy:D \\a","Mixy:D \\b"],"r":"Bool:D"},"n":"infix:«(<)»","k":"s","m":1},{"m":1,"k":"s","n":"infix:«(<)»","s":{"r":"Bool:D","p":["Mixy:D \\a","Baggy:D \\b"]}},{"k":"s","m":1,"n":"infix:«(<)»","s":{"r":"Bool:D","p":["Mixy:D \\a","\\b"]}},{"m":1,"k":"s","s":{"p":["Baggy:D \\a","Mixy:D \\b"],"r":"Bool:D"},"n":"infix:«(<)»"},{"m":1,"k":"s","n":"infix:«(<)»","s":{"p":["Baggy:D \\a","Baggy:D \\b"],"r":"Bool:D"}},{"k":"s","m":1,"n":"infix:«(<)»","s":{"p":["Baggy:D \\a","\\b"],"r":"Bool:D"}},{"s":{"r":"Bool:D","p":["\\a","Mixy:D \\b"]},"n":"infix:«(<)»","k":"s","m":1},{"m":1,"k":"s","s":{"p":["\\a","Baggy:D \\b"],"r":"Bool:D"},"n":"infix:«(<)»"},{"k":"s","m":1,"n":"infix:«(<)»","s":{"p":["Failure:D \\a","$"],"r":"Mu"}},{"s":{"r":"Mu","p":["$","Failure:D \\b"]},"n":"infix:«(<)»","m":1,"k":"s"},{"k":"s","m":1,"n":"infix:«(<)»","s":{"r":"Bool:D","p":["\\a","\\b"]}},{"n":"PF_MAX","t":"ProtocolFamily","k":"e"},{"k":"v","t":"Sub","n":"&prefix:<let>"},{"n":"prefix:<let>","s":{"p":["Mu \\cont"],"r":"Mu"},"m":0,"k":"s"},{"k":"v","t":"Sub","n":"&infix:<o>"},{"n":"infix:<o>","s":{"p":[],"r":"Mu"},"m":1,"k":"s"},{"m":1,"k":"s","s":{"p":["&f"],"r":"Mu"},"n":"infix:<o>"},{"k":"s","m":1,"s":{"r":"Block:D","p":["&f","&g"]},"n":"infix:<o>"},{"n":"&sign","t":"Sub+{is-pure}","k":"v"},{"m":1,"k":"s","n":"sign","s":{"r":"Mu","p":["Numeric \\x"]}},{"s":{"r":"Mu","p":["Cool \\x"]},"n":"sign","m":1,"k":"s"},{"d":"TITLE\nclass Failure\n\nSUBTITLE\nDelayed exception\n\n    class Failure is Nil { }\n\nA Failure is a soft or unthrown Exception, usually generated by calling\n&fail. It acts as a wrapper around an Exception object.\n\nSink (void) context causes a Failure to throw, i.e. turn into a normal\nexception. The use fatal pragma causes this to happen in all contexts\nwithin the pragma's scope. Inside try blocks, use fatal is automatically\nset, and you can disable it with no fatal.\n\nThat means that Failures are generally only useful in cases of code that\nnormally would produce an rvalue; Failures are more or less equivalent to\nExceptions in code that will frequently be called in sink context (i.e.,\nfor its side-effects, such as with say).\n\nSimilarly, you should generally use &fail only inside code that is normally\nexpected to return something.\n\nChecking a Failure for truth (with the Bool method) or definedness (with\nthe defined method) marks the failure as handled, and causes it not to\nthrow in sink context anymore.\n\nYou can call the handled method to check if a failure has been handled.\n\nCalling methods on unhandled failures propagates the failure. The\nspecification says the result is another Failure, in Rakudo it causes the\nfailure to throw.\n\nBecause a Failure is Nil, which is undefined, a common idiom for safely\nexecuting code that may fail uses a with/else statement:\n\n    sub may_fail( --> Numeric:D ) {\n      my $value = (^10).pick || fail \"Zero is unacceptable\";\n      fail \"Odd is also not okay\" if $value % 2;\n      return $value;\n    }\n\n    with may_fail() -> $value { # defined, so didn't fail\n      say \"I know $value isn't zero or odd.\"\n    } else { # undefined, so failed, and the Failure is the topic\n      say \"Uh-oh: {.exception.message}.\"\n    }\n\n\n","m":[{"m":0,"k":"s","n":"DESTROY","s":{"r":"Mu","p":["*%_"]}},{"s":{"r":"Mu","p":["|"]},"n":"AT-POS","m":0,"k":"m"},{"s":{"r":"Mu","p":["|"]},"n":"AT-KEY","k":"m","m":0},{"m":0,"k":"m","s":{"r":"Mu","p":["*%_"]},"n":"handled"},{"k":"m","m":0,"s":{"p":["*%_"],"r":"Mu"},"n":"Capture"},{"n":"Int","s":{"r":"Mu","p":["*%_"]},"k":"m","m":0},{"n":"Num","s":{"r":"Mu","p":["*%_"]},"k":"m","m":0},{"k":"m","m":0,"s":{"p":["*%_"],"r":"Mu"},"n":"Numeric"},{"m":0,"k":"m","s":{"p":["*%_"],"r":"Mu"},"n":"Set"},{"k":"m","m":0,"n":"SetHash","s":{"r":"Mu","p":["*%_"]}},{"k":"m","m":0,"n":"Bag","s":{"r":"Mu","p":["*%_"]}},{"s":{"r":"Mu","p":["*%_"]},"n":"BagHash","m":0,"k":"m"},{"k":"m","m":0,"s":{"p":["*%_"],"r":"Mu"},"n":"Mix"},{"s":{"p":["*%_"],"r":"Mu"},"n":"MixHash","m":0,"k":"m"},{"n":"mess","s":{"p":["*%_"],"r":"Mu"},"m":0,"k":"m"},{"s":{"r":"Mu","p":["*%_"]},"n":"sink","m":0,"k":"m"},{"s":{"r":"Mu","p":["*%_"]},"n":"self","k":"m","m":0},{"s":{"p":["|"],"r":"Mu"},"n":"CALL-ME","k":"m","m":0},{"n":"FALLBACK","s":{"p":["*@","*%_"],"r":"Mu"},"k":"m","m":0},{"n":"STORE","s":{"p":["*@","*%_"],"r":"Mu"},"k":"m","m":0},{"k":"m","m":1,"s":{"r":"Mu","p":["*%attrinit"]},"n":"new"},{"k":"m","m":1,"n":"new","s":{"p":["$","*@","*%_"],"r":"Mu"}},{"m":1,"k":"m","s":{"p":["*%_"],"r":"Mu"},"n":"new"},{"n":"new","s":{"r":"Mu","p":["*%_"]},"m":1,"k":"m"},{"n":"new","s":{"p":["Exception:D \\exception","*%_"],"r":"Mu"},"k":"m","m":1},{"n":"new","s":{"r":"Mu","p":["$payload","*%_"]},"k":"m","m":1},{"k":"m","m":1,"n":"new","s":{"p":["|cap is raw (*@msg)"],"r":"Mu"}},{"s":{"r":"Mu","p":["*%_"]},"n":"iterator","m":1,"k":"m"},{"s":{"p":["*%_"],"r":"Mu"},"n":"iterator","k":"m","m":1},{"m":1,"k":"m","s":{"r":"Mu","p":["*%_"]},"n":"iterator"},{"s":{"r":"Mu","p":["*%_"]},"n":"list","m":1,"k":"m"},{"m":1,"k":"m","s":{"p":["*%_"],"r":"Mu"},"n":"list"},{"n":"list","s":{"p":["*%_"],"r":"Mu"},"m":1,"k":"m"},{"n":"defined","s":{"r":"Bool","p":["*%_"]},"k":"m","m":1},{"m":1,"k":"m","n":"defined","s":{"r":"Bool","p":["*%_"]}},{"n":"defined","s":{"p":["*%_"],"r":"Bool"},"k":"m","m":1},{"n":"Bool","s":{"r":"Bool","p":["*%_"]},"m":1,"k":"m"},{"s":{"p":["*%_"],"r":"Mu"},"n":"Bool","m":1,"k":"m"},{"s":{"p":["*%_"],"r":"Bool"},"n":"Bool","k":"m","m":1},{"k":"m","m":1,"s":{"r":"Mu","p":["*%_"]},"n":"Str"},{"n":"Str","s":{"p":["*%_"],"r":"Mu"},"m":1,"k":"m"},{"s":{"r":"Mu","p":["*%_"]},"n":"Str","m":1,"k":"m"},{"k":"m","m":1,"s":{"p":["*%_"],"r":"Mu"},"n":"gist"},{"k":"m","m":1,"s":{"p":["*%_"],"r":"Mu"},"n":"gist"},{"k":"m","m":1,"s":{"p":["*%_"],"r":"Mu"},"n":"gist"},{"m":1,"k":"m","n":"gist","s":{"p":["*%_"],"r":"Mu"}},{"n":"gist","s":{"r":"Mu","p":["*%_"]},"m":1,"k":"m"},{"n":"perl","s":{"r":"Mu","p":["*%_"]},"k":"m","m":1},{"s":{"p":["*%_"],"r":"Mu"},"n":"perl","m":1,"k":"m"},{"n":"perl","s":{"p":["*%_"],"r":"Mu"},"m":1,"k":"m"},{"m":1,"k":"m","s":{"p":["*%_"],"r":"Mu"},"n":"perl"},{"k":"m","m":0,"s":{"r":"Mu","p":["*%_"]},"n":"exception"},{"s":{"r":"Mu","p":["*%_"]},"n":"backtrace","m":0,"k":"m"},{"m":0,"k":"s","s":{"p":["@auto","%init","*%_"],"r":"Mu"},"n":"BUILDALL"},{"n":"STORE","s":{"p":["|"],"r":"Mu"},"k":"m","m":0},{"m":0,"k":"m","n":"unshift","s":{"r":"Mu","p":["|"]}},{"s":{"p":["*%_"],"r":"Mu"},"n":"chrs","m":0,"k":"m"},{"m":1,"k":"m","s":{"p":["*%_"],"r":"Mu"},"n":"gist"},{"k":"m","m":1,"n":"gist","s":{"p":["*%_"],"r":"Mu"}},{"k":"m","m":1,"s":{"p":["*%_"],"r":"Mu"},"n":"gist"},{"m":0,"k":"m","n":"BIND-POS","s":{"p":["|"],"r":"Mu"}},{"k":"m","m":0,"s":{"r":"Nil","p":["|"]},"n":"AT-POS"},{"n":"SetHash","s":{"r":"Mu","p":["*%_"]},"k":"m","m":0},{"k":"m","m":0,"s":{"p":["*%_"],"r":"Mu"},"n":"iterator"},{"k":"m","m":0,"n":"Str","s":{"r":"Mu","p":["*%_"]}},{"k":"m","m":0,"n":"ASSIGN-KEY","s":{"p":["|"],"r":"Mu"}},{"n":"FALLBACK","s":{"p":["|"],"r":"Nil"},"k":"m","m":0},{"s":{"p":["*%_"],"r":"Mu"},"n":"ords","m":0,"k":"m"},{"s":{"r":"Mu","p":["*%_"]},"n":"Set","m":0,"k":"m"},{"n":"append","s":{"r":"Mu","p":["|"]},"k":"m","m":0},{"k":"m","m":0,"s":{"p":["|"],"r":"Mu"},"n":"BIND-KEY"},{"s":{"r":"Mu","p":["*%_"]},"n":"Mix","m":0,"k":"m"},{"m":0,"k":"m","s":{"p":["*%_"],"r":"Mu"},"n":"Bag"},{"n":"sink","s":{"p":["*%_"],"r":"Nil"},"k":"m","m":0},{"s":{"p":["*%_"],"r":"Mu"},"n":"Numeric","m":0,"k":"m"},{"n":"ASSIGN-POS","s":{"p":["|"],"r":"Mu"},"k":"m","m":0},{"s":{"p":["|"],"r":"Nil"},"n":"AT-KEY","k":"m","m":0},{"n":"prepend","s":{"r":"Mu","p":["|"]},"m":0,"k":"m"},{"s":{"r":"Mu","p":["*%_"]},"n":"BagHash","m":0,"k":"m"},{"s":{"p":["*%_"],"r":"Mu"},"n":"chop","k":"m","m":0},{"n":"MixHash","s":{"r":"Mu","p":["*%_"]},"k":"m","m":0},{"n":"new","s":{"r":"Nil","p":["*@","*%_"]},"m":0,"k":"m"},{"s":{"r":"Mu","p":["|"]},"n":"push","k":"m","m":0},{"k":"m","m":0,"s":{"r":"Mu","p":["*%_"]},"n":"chomp"},{"m":0,"k":"s","n":"BUILDALL","s":{"p":["@auto","%init","*%_"],"r":"Mu"}},{"n":"!SET-SELF","s":{"r":"Mu","p":["$!exception","*%_"]},"k":"m","m":0},{"m":0,"k":"m","n":"!throw","s":{"p":["*%_"],"r":"Mu"}}],"k":"c","b":"C","a":[{"k":"v","n":"$.exception","t":"Mu"},{"n":"$.backtrace","t":"Mu","k":"v"},{"k":"v","t":"int","n":"$!handled"}],"t":"Failure","n":"Failure"},{"t":"ProtocolFamily","n":"PF_LOCAL","k":"e"},{"k":"v","n":"&infix:<before>","t":"Sub+{is-pure}+{Precedence}"},{"s":{"p":["$?"],"r":"Bool"},"n":"infix:<before>","k":"s","m":1},{"m":1,"k":"s","n":"infix:<before>","s":{"r":"Bool:D","p":["\\a","\\b"]}},{"t":"Sub","n":"&atomic-fetch-add","k":"v"},{"m":1,"k":"s","n":"atomic-fetch-add","s":{"r":"atomicint","p":["atomicint $target is rw","int $add"]}},{"n":"atomic-fetch-add","s":{"p":["atomicint $target is rw","Int:D $add"],"r":"atomicint"},"k":"s","m":1},{"k":"s","m":1,"n":"atomic-fetch-add","s":{"r":"atomicint","p":["atomicint $target is rw","$add"]}},{"d":"TITLE\nclass CallFrame\n\nSUBTITLE\nCaptures the current frame state\n\n    class CallFrame {}\n\nA CallFrame will be usually captured from the current state of a program\nusing the callframe subroutine.\n\n    my $frame = callframe;\n    say \"The above line of code ran at {$frame.file}:{$frame.line}.\";\n\nWith no arguments the callframe will give you frame information for the\nline calling callframe. The file and line annotations will be identical to\nthose in $?FILE and $?LINE.\n\nYou may, however, pass a number to callframe to specify a different frame\nlevel. A positive number will move upward through the levels of frame. A\nnegative number will move downward into the callframe method and class\nitself at the point at which they are running to construct this information\nfor you.\n\nThe frames themselves do not necessarily match only method or subroutine\ncalls. Perl constructs a frames for blocks and such as well, so if you need\na callframe for a particular method call, do not assume it is a fixed\nnumber of levels up.\n\nEach frame stores annotations, including the file and line annotations,\nwhich have convenience methods for accessing them directly. You can also\nretrieve a reference to the code block of the currently executing frame\nusing the code method. The frame also captures all lexical variables stored\nwith the frame, which are available by calling my on the frame object.\n\nHere's a short example that will find the calling routine and print the\npackage of the caller using the callframe interface.\n\n    sub calling-frame() {\n        for 1..* -> $level {\n            given callframe($level) -> $frame {\n                when $frame ~~ CallFrame {\n                        next unless $frame.code ~~ Routine;\n                        say $frame.code.package;\n                        last;\n                }\n                default {\n                        say \"no calling routine or method found\";\n                        last;\n                }\n            }\n        }\n    }\n\n    calling-frame;\n\nIf you just need to trace caller information, Backtrace may provide a\nbetter means of getting it. CallFrame contains more information about a\nspecific frame, but provides a tedious interface for enumerating a call\nstack.\n\n","k":"c","m":[{"s":{"p":["\\level","Mu \\ctx","Mu \\bt","*%_"],"r":"Mu"},"n":"SET-SELF","m":0,"k":"m"},{"m":0,"k":"m","s":{"p":["Int:D $level = 0","*%_"],"r":"Mu"},"n":"new"},{"k":"m","m":0,"s":{"p":["*%_"],"r":"Mu"},"n":"line"},{"m":0,"k":"m","n":"file","s":{"r":"Mu","p":["*%_"]}},{"n":"code","s":{"p":["*%_"],"r":"Mu"},"k":"m","m":0},{"k":"m","m":0,"s":{"p":["Int:D $?","*%_"],"r":"Mu"},"n":"callframe"},{"n":"annotations","s":{"r":"Mu","p":["*%_"]},"k":"m","m":0},{"k":"m","m":1,"s":{"r":"Mu","p":["*%_"]},"n":"gist"},{"n":"gist","s":{"r":"Mu","p":["*%_"]},"k":"m","m":1},{"k":"m","m":1,"n":"gist","s":{"p":["*%_"],"r":"Mu"}},{"k":"m","m":0,"n":"my","s":{"p":["*%_"],"r":"Mu"}},{"m":0,"k":"s","n":"BUILDALL","s":{"r":"Mu","p":["@auto","%init","*%_"]}}],"a":[{"k":"v","n":"$.annotations","t":"Mu"},{"k":"v","n":"$.my","t":"Mu"}],"b":"A","t":"CallFrame","n":"CallFrame"},{"n":"Iterable","t":"Iterable","m":[{"s":{"r":"Mu","p":["*%_"]},"n":"iterator","k":"m","m":0},{"m":0,"k":"m","n":"item","s":{"p":["*%_"],"r":"Mu"}},{"k":"m","m":0,"n":"flat","s":{"r":"Mu","p":["*%_"]}},{"m":0,"k":"m","n":"lazy-if","s":{"p":["$flag","*%_"],"r":"Mu"}},{"m":0,"k":"m","n":"lazy","s":{"p":["*%_"],"r":"Mu"}},{"s":{"r":"Mu","p":["Int(Cool) :$batch = 64","Int(Cool) :$degree = 4","*%_"]},"n":"hyper","k":"m","m":0},{"n":"race","s":{"r":"Mu","p":["Int(Cool) :$batch = 64","Int(Cool) :$degree = 4","*%_"]},"k":"m","m":0}],"k":"ro","b":"C","d":"TITLE\nrole Iterable\n\nSUBTITLE\nInterface for container objects that can be iterated over\n\n    role Iterable { }\n\nIterable serves as an API for objects that can be iterated with for and\nrelated iteration constructs, like assignment to a Positional variable.\n\nIterable objects nested in other Iterable objects (but not within scalar\ncontainers) flatten in certain contexts, for example when passed to a\nslurpy parameter (*@a), or on explicit calls to flat.\n\nIts most important aspect is a method stub for iterator.\n\n    class DNA does Iterable {\n        has $.chain;\n        method new ($chain where { $chain ~~ /^^ <[ACGT]>+ $$ / } ) {\n            self.bless( :$chain );\n        }\n\n        method iterator(DNA:D:) {\n            $!chain.comb.rotor(3).iterator;\n        }\n    }\n\n    my $a := DNA.new('GAATCC');\n    .say for $a; # OUTPUT: «(G A A)␤(T C C)␤»\n\n\nThis example mixes in the Iterable role to offer a new way of iterating\nover what is essentially a string (constrained by where to just the four\nDNA letters). In the last statement, for actually hooks to the iterator\nrole printing the letters in groups of 3.\n\n"},{"d":"TITLE\nclass HyperWhatever\n\nSUBTITLE\nPlaceholder for multiple unspecified values/arguments\n\n    class HyperWhatever { }\n\nHyperWhatever is very similar in functionality to Whatever. The difference\nlies in HyperWhatever standing in for multiple values, rather than a single\none.\n\nStandalone term\n\nJust like with Whatever, if a HyperWhatever is used as a term on its own,\nno currying is done and the HyperWhatever object will be used as-is:\n\n    sub foo ($arg) { say $arg.^name }\n    foo **; # OUTPUT: «HyperWhatever␤»\n\nYou can choose to interpret such a value as standing for multiple values in\nyour own routines. In core, a HyperWhatever can be used with this meaning\nwhen smartmatching with Lists:\n\n    say (1, 8)                ~~ (1, **, 8); # OUTPUT: «True␤»\n    say (1, 2, 4, 5, 6, 7, 8) ~~ (1, **, 8); # OUTPUT: «True␤»\n    say (1, 2, 8, 9)          ~~ (1, **, 8); # OUTPUT: «False␤»\n\nWherever a HyperWhatever appears in the list on the right-hand side means\nany number of elements can fill that space in the list being smartmatched.\n\nCurrying\n\nWhen it comes to currying, the HyperWhatever follows the same rules as\nWhatever. The only difference is HyperWhatever produces a Callable with a\n*@ slurpy as a signature:\n\n    say (**²)(1, 2, 3, 4, 5); # OUTPUT: «(1 4 9 16 25)␤»\n\nA HyperWhatever closure can be imagined as a Whatever closure with another\nsub wrapped around it that simply maps each element in the arguments over:\n\n    my &hyper-whatever = sub (*@args) { map *², @args }\n    say hyper-whatever(1, 2, 3, 4, 5); # OUTPUT: «(1 4 9 16 25)␤»\n\nWhen currying, mixing HyperWhatever with Whatever is not permitted.","b":"A","m":[{"m":0,"k":"m","n":"Capture","s":{"r":"Mu","p":["*%_"]}},{"k":"m","m":1,"s":{"p":["*%attrinit"],"r":"Mu"},"n":"new"},{"s":{"p":["$","*@","*%_"],"r":"Mu"},"n":"new","m":1,"k":"m"},{"n":"new","s":{"p":["*%_"],"r":"Mu"},"m":1,"k":"m"},{"m":1,"k":"m","s":{"r":"Mu","p":["\\topic","*%_"]},"n":"ACCEPTS"},{"s":{"p":["Mu:U \\topic","*%_"],"r":"Mu"},"n":"ACCEPTS","m":1,"k":"m"},{"m":1,"k":"m","n":"ACCEPTS","s":{"r":"Mu","p":["Mu:D \\a","*%_"]}},{"s":{"p":["Mu:U $","*%_"],"r":"Bool"},"n":"ACCEPTS","k":"m","m":1},{"k":"m","m":1,"s":{"p":["\\topic","*%_"],"r":"Bool:D"},"n":"ACCEPTS"},{"n":"ACCEPTS","s":{"r":"Bool","p":["$","*%_"]},"k":"m","m":1},{"n":"perl","s":{"r":"Mu","p":["*%_"]},"m":1,"k":"m"},{"n":"perl","s":{"r":"Mu","p":["*%_"]},"m":1,"k":"m"},{"s":{"r":"Mu","p":["*%_"]},"n":"perl","m":1,"k":"m"},{"k":"s","m":0,"n":"BUILDALL","s":{"p":["@auto","%init","*%_"],"r":"Mu"}}],"k":"c","t":"HyperWhatever","n":"HyperWhatever"},{"t":"Exception","n":"Exception","d":"TITLE\nclass Exception\n\nSUBTITLE\nAnomalous event capable of interrupting normal control-flow\n\n    class Exception {}\n\nAll exceptions that are placed into the $! variable (or into $_ in CATCH\nblocks) inherit from Exception. When you call die or fail with a\nnon-Exception argument, it is wrapped into an X::AdHoc object, which also\ninherits from Exception.\n\nUser-defined exception classes should inherit from Exception too, and\ndefine at least a method message.\n\n    class X::YourApp::SomeError is Exception {\n        method message() {\n            \"A YourApp-Specific error occurred: out of coffee!\";\n        }\n    }\n\n","m":[{"n":"backtrace","s":{"r":"Mu","p":["*%_"]},"k":"m","m":0},{"m":0,"k":"m","s":{"r":"Mu","p":["*%_"]},"n":"vault-backtrace"},{"m":0,"k":"m","n":"reset-backtrace","s":{"r":"Mu","p":["*%_"]}},{"s":{"r":"Mu","p":["$bt?","*%_"]},"n":"throw","k":"m","m":0},{"s":{"r":"Mu","p":["*%_"]},"n":"rethrow","m":0,"k":"m"},{"k":"m","m":0,"n":"resume","s":{"r":"Bool","p":["*%_"]}},{"s":{"r":"Mu","p":["*%_"]},"n":"die","m":0,"k":"m"},{"s":{"r":"Mu","p":["*%_"]},"n":"fail","m":0,"k":"m"},{"n":"is-compile-time","s":{"r":"Bool","p":["*%_"]},"k":"m","m":0},{"k":"m","m":1,"n":"Str","s":{"r":"Mu","p":["*%_"]}},{"k":"m","m":1,"s":{"r":"Mu","p":["*%_"]},"n":"Str"},{"k":"m","m":1,"s":{"r":"Mu","p":["*%_"]},"n":"Str"},{"s":{"r":"Mu","p":["*%_"]},"n":"gist","k":"m","m":1},{"n":"gist","s":{"p":["*%_"],"r":"Mu"},"k":"m","m":1},{"m":1,"k":"m","s":{"p":["*%_"],"r":"Mu"},"n":"gist"},{"s":{"p":["@auto","%init","*%_"],"r":"Mu"},"n":"BUILDALL","m":0,"k":"s"},{"s":{"p":["*%_"],"r":"Nil"},"n":"!maybe-set-control","k":"m","m":0}],"k":"c","b":"A","a":[{"k":"v","n":"$!ex","t":"Mu"},{"k":"v","t":"Mu","n":"$!bt"}]},{"k":"v","n":"&prefix:<+^>","t":"Sub+{is-pure}+{Precedence}"},{"s":{"r":"Mu","p":["$x"]},"n":"prefix:<+^>","m":1,"k":"s"},{"k":"s","m":1,"n":"prefix:<+^>","s":{"r":"Int:D","p":["Int:D \\a"]}},{"m":1,"k":"s","n":"prefix:<+^>","s":{"p":["int $a"],"r":"int"}},{"k":"v","n":"&infix:<,>","t":"Sub+{is-pure}+{Precedence}"},{"n":"infix:<,>","s":{"r":"List:D","p":[]},"k":"s","m":1},{"m":1,"k":"s","s":{"r":"List:D","p":["Slip:D \\a","Slip:D \\b"]},"n":"infix:<,>"},{"k":"s","m":1,"s":{"r":"List:D","p":["\\a","Slip:D \\b"]},"n":"infix:<,>"},{"s":{"p":["Slip:D \\a","\\b"],"r":"List:D"},"n":"infix:<,>","k":"s","m":1},{"m":1,"k":"s","s":{"p":["\\a","\\b"],"r":"List:D"},"n":"infix:<,>"},{"k":"s","m":1,"s":{"p":["|"],"r":"Mu"},"n":"infix:<,>"},{"k":"v","t":"Sub","n":"&slip"},{"k":"s","m":1,"n":"slip","s":{"r":"Slip","p":[]}},{"s":{"r":"Slip:D","p":["@args"]},"n":"slip","k":"s","m":1},{"s":{"p":["+\\args is raw"],"r":"Slip:D"},"n":"slip","m":1,"k":"s"},{"k":"v","t":"Sub+{is-pure}+{Precedence}","n":"&infix:<(.)>"},{"m":1,"k":"s","n":"infix:<(.)>","s":{"r":"Mu","p":[]}},{"k":"s","m":1,"n":"infix:<(.)>","s":{"p":["Setty:D \\a"],"r":"Mu"}},{"n":"infix:<(.)>","s":{"r":"Mu","p":["Baggy:D \\a"]},"m":1,"k":"s"},{"s":{"p":["\\a"],"r":"Mu"},"n":"infix:<(.)>","k":"s","m":1},{"k":"s","m":1,"s":{"p":["Setty:D \\a","Setty:D \\b"],"r":"Mu"},"n":"infix:<(.)>"},{"k":"s","m":1,"s":{"p":["Mixy:D \\a","Mixy:D \\b"],"r":"Mu"},"n":"infix:<(.)>"},{"k":"s","m":1,"s":{"r":"Mu","p":["Mixy:D \\a","Baggy:D \\b"]},"n":"infix:<(.)>"},{"m":1,"k":"s","s":{"r":"Mu","p":["Mixy:D \\a","\\b"]},"n":"infix:<(.)>"},{"k":"s","m":1,"s":{"p":["Setty:D \\a","Mixy:D \\b"],"r":"Mu"},"n":"infix:<(.)>"},{"m":1,"k":"s","s":{"r":"Mu","p":["Baggy:D \\a","Mixy:D \\b"]},"n":"infix:<(.)>"},{"n":"infix:<(.)>","s":{"p":["\\a","Mixy:D \\b"],"r":"Mu"},"k":"s","m":1},{"m":1,"k":"s","n":"infix:<(.)>","s":{"r":"Mu","p":["Baggy:D \\a","Baggy:D \\b"]}},{"n":"infix:<(.)>","s":{"r":"Mu","p":["$","Failure:D \\b"]},"k":"s","m":1},{"n":"infix:<(.)>","s":{"r":"Mu","p":["Failure:D \\a","$"]},"m":1,"k":"s"},{"k":"s","m":1,"n":"infix:<(.)>","s":{"p":["\\a","\\b"],"r":"Mu"}},{"s":{"p":["**@p"],"r":"Mu"},"n":"infix:<(.)>","k":"s","m":1},{"t":"PromiseStatus","n":"Broken","k":"e"},{"n":"&mkdir","t":"Sub","k":"v"},{"k":"s","m":1,"n":"mkdir","s":{"r":"Mu","p":["$path","$mode = 511"]}},{"k":"v","n":"&chars","t":"Sub+{is-pure}"},{"s":{"p":["Cool $x"],"r":"Mu"},"n":"chars","m":1,"k":"s"},{"m":1,"k":"s","n":"chars","s":{"r":"Mu","p":["Str:D $x"]}},{"s":{"r":"int","p":["str $x"]},"n":"chars","k":"s","m":1}]
