<idea-plugin xmlns:xi="http://www.w3.org/2001/XInclude">
  <id>edument.perl6-idea-plugin</id>
  <version>2021.06.0</version>
  <name>Comma Complete Edition (Raku Language Support)</name>
  <vendor email="info@commaide.com" url="https://commaide.com/">Edument Central Europe sro.</vendor>

  <description><![CDATA[
<p>
  The Comma Complete plugin provides Raku language support for IDEA-based IDEs.
  Features include:
</p>

<ul>
  <li>Detailed and customizable syntax highlighting</li>
  <li>Auto-completion of various program elements</li>
  <li>Live code analysis to detect common problems</li>
  <li>Numerous code navigation features</li>
  <li>A range of refactorings, such as rename, extract variable, and extract method</li>
  <li>Running scripts</li>
  <li>Running tests and viewing the results</li>
  <li>Debugging</li>
  <li>Test coverage reporting</li>
  <li>Profiling</li>
</ul>

<p>
  The same functionality is also available as an independent IDE. For more details, see
  <a href="https://commaide.com/">the Comma website</a>.
</p>
  ]]>
  </description>

  <change-notes><![CDATA[
<ul>
<li>Add a <code>raku-doc</code> mode for Comma. Now it is possible to start Comma passing the <code>raku-doc</code> option and paths to project directories as arguments. Comma will be invoked, it will import or open each relative project and will try to extract the documentation for the module and render it into simple HTML pages (e.g. <code>comma.sh raku-doc -o output cro-webapp cro-http</code>)</li>
<li>Add an annotation warning about useless use of constant expressions in sink (void) context</li>
<li>Support navigation for Cro template parts: using &#39;Related Symbols&#39; from the template part name jumps to related <code>template-part</code> calls in a <code>route</code> block and vice versa</li>
<li>Fix exceptions related to changing projects</li>
<li>Fix a bug where required parameters for a pointy block within a variable declaration got an annotation about presence of an initializer</li>
<li>Fix an exception related to dynamic variables during indexing</li>
<li>Fix discovery of traits to complete when multiple distributions are used in the same file</li>
</ul>
  ]]>
  </change-notes>

  <!-- please see http://www.jetbrains.org/intellij/sdk/docs/basics/getting_started/build_number_ranges.html for description -->
  <idea-version since-build="145.0"/>

  <!-- please see http://www.jetbrains.org/intellij/sdk/docs/basics/getting_started/plugin_compatibility.html
       on how to target different products -->
  <depends>com.intellij.modules.lang</depends>

  <extensionPoints>
    <xi:include href="/META-INF/meta/perl6-common.xml" xpointer="xpointer(/idea-plugin/extensionPoints/*)"/>
  </extensionPoints>

  <extensions defaultExtensionNs="edument.perl6idea">
    <frameworkCall implementation="edument.perl6idea.cro.CroFrameworkCall"/>
    <frameworkCall implementation="edument.perl6idea.cro.CroTemplateCall"/>
  </extensions>

  <extensions defaultExtensionNs="com.intellij">
    <xi:include href="/META-INF/meta/perl6-common.xml" xpointer="xpointer(/idea-plugin/extensions/*)"/>
    <configurationType implementation="edument.perl6idea.run.Perl6CompleteRunConfigurationType"/>
    <configurationType implementation="edument.perl6idea.testing.Perl6CompleteTestConfigurationType"/>
    <runConfigurationProducer implementation="edument.perl6idea.testing.Perl6CompleteTestRunConfigurationProducer"/>
    <configurationType implementation="edument.perl6idea.cro.run.Perl6CompleteCroRunConfigurationType"/>
    <programRunner implementation="edument.perl6idea.coverage.Perl6CoverageRunner"/>
    <projectViewNodeDecorator implementation="edument.perl6idea.coverage.Perl6ProjectViewCoverageDecorator"/>
    <programRunner implementation="edument.perl6idea.profiler.run.Perl6ProfileRunner"/>
    <executor implementation="edument.perl6idea.run.Perl6ProfileExecutor"/>
    <lang.refactoringSupport language="Perl6" implementationClass="edument.perl6idea.refactoring.Perl6CompleteRefactoringSupportProvider"/>
    <inlineActionHandler implementation="edument.perl6idea.refactoring.inline.variable.Perl6InlineVariableActionHandler"/>
    <inlineActionHandler implementation="edument.perl6idea.refactoring.inline.call.Perl6InlineCallActionHandler"/>
    <projectService serviceImplementation="edument.perl6idea.coverage.Perl6CoverageDataManagerImpl"
                    serviceInterface="edument.perl6idea.coverage.Perl6CoverageDataManager"/>
  </extensions>

  <actions>
    <xi:include href="/META-INF/meta/perl6-common.xml" xpointer="xpointer(/idea-plugin/actions/*)"/>
    <action id="Perl6Plugin.ExtractPrivateMethod" class="edument.perl6idea.actions.ExtractPrivateMethodAction" text="Private Method..."
            description="Turn this selected code fragment into a private method">
      <keyboard-shortcut keymap="$default" first-keystroke="ctrl alt P"/>
      <add-to-group group-id="IntroduceActionsGroup" anchor="after" relative-to-action="ExtractMethod"/>
    </action>
    <action id="Perl6Plugin.ExtractRoutine" class="edument.perl6idea.actions.ExtractRoutineAction" text="Subroutine..."
            description="Turn this selected code fragment into a subroutine">
      <keyboard-shortcut keymap="$default" first-keystroke="ctrl alt R" second-keystroke="O"/>
      <add-to-group group-id="IntroduceActionsGroup" anchor="before" relative-to-action="ExtractMethod"/>
    </action>
    <action id="Perl6Plugin.ExtractRegex" class="edument.perl6idea.actions.ExtractRegexAction" text="Extract Rule..."
            description="Turn this selected code fragment into a separate regex">
      <keyboard-shortcut keymap="$default" first-keystroke="ctrl alt R" second-keystroke="E"/>
      <add-to-group group-id="IntroduceActionsGroup" anchor="before" relative-to-action="ExtractMethod"/>
    </action>
    <group id="Perl6Plugin.CoverageMenu">
      <action id="Perl6Plugin.HideCoverage" class="edument.perl6idea.coverage.Perl6CoverageHideAction"
              text="Hide Raku Coverage Data"/>
      <add-to-group group-id="CoverageMenu"/>
      <separator/>
    </group>
  </actions>

  <module-components>
    <xi:include href="/META-INF/meta/perl6-common.xml" xpointer="xpointer(/idea-plugin/module-components/*)"/>
  </module-components>

  <project-components>
    <xi:include href="/META-INF/meta/perl6-common.xml" xpointer="xpointer(/idea-plugin/project-components/*)"/>
  </project-components>

  <applicationListeners>
    <xi:include href="/META-INF/meta/perl6-common.xml" xpointer="xpointer(/idea-plugin/applicationListeners/*)"/>
  </applicationListeners>

</idea-plugin>