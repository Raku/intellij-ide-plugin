<idea-plugin xmlns:xi="http://www.w3.org/2001/XInclude">
  <id>edument.perl6-idea-plugin</id>
  <version>2019.7.0</version>
  <name>Comma Complete Edition (Perl 6 Language Support)</name>
  <vendor email="info@commaide.com" url="https://commaide.com/">Edument Central Europe sro.</vendor>

  <description><![CDATA[
<p>
  The Comma Complete plugin provides Perl 6 language support for IDEA-based IDEs.
  Features include:
</p>

<ul>
  <li>Detailed and customizable syntax highlighting</li>
  <li>Auto-completion of various program elements</li>
  <li>Live code analysis to detect common problems</li>
  <li>Numerous code navigation features</li>
  <li>A range of refactorings, such as rename, extract variable, and extract method</li>
  <li>Running scripts</li>
  <li>Running tests and viewing the results</li>
  <li>Debugging</li>
  <li>Test coverage reporting</li>
  <li>Profiling</li>
</ul>

<p>
  The same functionality is also available as an independent IDE. For more details, see
  <a href="https://commaide.com/">the Comma website</a>.
</p>
  ]]>
  </description>

  <change-notes><![CDATA[
    <ul>
<li>Comma is now based on the 2019.01 version of IntelliJ platform. The
plugin keeps backward compatibility with previous versions starting
from 2017.03.</li>
<li>Add a Cro Application project template with options to use
templating and WebSocket. This generates a project structure similar
to the &#39;cro stub&#39; one, including Dockerfile, routes setup, &#39;.cro.yml&#39;
for the &#39;cro&#39; command line tool, and example tests using Cro::HTTP::Test.</li>
<li>Add a Cro Service run configuration type which allows running a Cro
service based on manual configuration or data taken from a &#39;.cro.yml&#39;
file.</li>
<li>Cro routes are now shown in Structure View (Ctrl + F12) for easier navigation
to routes within a file.</li>
<li>Cro routes are indexed and can be seen in Navigate to Symbol (Ctrl+Alt+Shift+N).</li>
<li>The range literal simplification quickfix is now accompanied with a weak warning annotator.</li>
<li>Modules with &#39;:from<Perl5>&#39; are no longer annotated as unknown.</li>
<li>The quickfix that stubs a local module from a &#39;use&#39; statement now prompts the user for
the name and module type. The new module name is suggested automatically and, if changed,
the &#39;use&#39; statement will reflect the change.</li>
<li>Add completion for dynamic variables defined by Perl 6.</li>
<li>Imrpove the timeline run tab UI.</li>
<li>Add support for the Pause action in the debugger.</li>
<li>The debugger&#39;s &#39;start suspended&#39; setting in the Perl 6 Run Configuration
now works.</li>
<li>On project creation, META6.json files are created with attributes
sorted.</li>
<li>The annotator that detects usage of modules outside of META6.json now
considers build and test dependencies.</li>
<li>If the specified SDK of a project is missing at its specified paths,
it leads to a warning instead of an exception.</li>
<li>Fix the generated signature of a private method stubbed from its usage
using a quickfix, when private attributes are passed as arguments.</li>
<li>Fix parsing of heredoc text that starts with an infix operator.</li>
<li>Fix a bug with META6.json being created with an incorrect module name.</li>
<li>Fix a rare exception occuring at new project creation.</li>
<li>Fix an exception in the Extract Code refactoring triggered by
changing of the parameter type.</li>
<li>Fix a rare exception caused by the presence of nameless constants in
code.</li>
<li>Fix a possible exception on project SDK change.</li>
    </ul>
  ]]>
  </change-notes>

  <!-- please see http://www.jetbrains.org/intellij/sdk/docs/basics/getting_started/build_number_ranges.html for description -->
  <idea-version since-build="145.0"/>

  <!-- please see http://www.jetbrains.org/intellij/sdk/docs/basics/getting_started/plugin_compatibility.html
       on how to target different products -->
  <depends>com.intellij.modules.lang</depends>

  <extensionPoints>
    <xi:include href="/META-INF/meta/perl6-common.xml" xpointer="xpointer(/idea-plugin/extensionPoints/*)"/>
  </extensionPoints>

  <extensions defaultExtensionNs="edument.perl6idea">
    <frameworkCall implementation="edument.perl6idea.cro.CroFrameworkCall"/>
  </extensions>

  <extensions defaultExtensionNs="com.intellij">
    <xi:include href="/META-INF/meta/perl6-common.xml" xpointer="xpointer(/idea-plugin/extensions/*)"/>
    <configurationType implementation="edument.perl6idea.run.Perl6CompleteRunConfigurationType"/>
    <configurationType implementation="edument.perl6idea.testing.Perl6CompleteTestConfigurationType"/>
    <configurationType implementation="edument.perl6idea.cro.run.Perl6CompleteCroRunConfigurationType"/>
    <programRunner implementation="edument.perl6idea.coverage.Perl6CoverageRunner"/>
    <projectViewNodeDecorator implementation="edument.perl6idea.coverage.Perl6ProjectViewCoverageDecorator"/>
    <programRunner implementation="edument.perl6idea.profiler.run.Perl6ProfileRunner"/>
    <executor implementation="edument.perl6idea.run.Perl6ProfileExecutor"/>
    <lang.refactoringSupport language="Perl6" implementationClass="edument.perl6idea.refactoring.Perl6CompleteRefactoringSupportProvider"/>
    <inlineActionHandler implementation="edument.perl6idea.refactoring.inline.variable.Perl6InlineVariableActionHandler"/>
    <inlineActionHandler implementation="edument.perl6idea.refactoring.inline.call.Perl6InlineCallActionHandler"/>
  </extensions>

  <actions>
    <xi:include href="/META-INF/meta/perl6-common.xml" xpointer="xpointer(/idea-plugin/actions/*)"/>
    <action id="Perl6Plugin.ExtractPrivateMethod" class="edument.perl6idea.actions.ExtractPrivateMethodAction" text="Private Method..."
            description="Turn this selected code fragment into a private method">
      <keyboard-shortcut keymap="$default" first-keystroke="ctrl alt P"/>
      <add-to-group group-id="IntroduceActionsGroup" anchor="after" relative-to-action="ExtractMethod"/>
    </action>
    <action id="Perl6Plugin.ExtractRoutine" class="edument.perl6idea.actions.ExtractRoutineAction" text="Subroutine..."
            description="Turn this selected code fragment into a subroutine">
      <keyboard-shortcut keymap="$default" first-keystroke="ctrl alt R"/>
      <add-to-group group-id="IntroduceActionsGroup" anchor="before" relative-to-action="ExtractMethod"/>
    </action>
    <group id="Perl6Plugin.CoverageMenu">
      <action id="Perl6Plugin.HideCoverage" class="edument.perl6idea.coverage.Perl6CoverageHideAction"
              text="Hide Perl 6 Coverage Data" />
      <add-to-group group-id="CoverageMenu"/>
      <separator/>
    </group>
  </actions>

  <module-components>
    <xi:include href="/META-INF/meta/perl6-common.xml" xpointer="xpointer(/idea-plugin/module-components/*)"/>
  </module-components>

  <project-components>
    <xi:include href="/META-INF/meta/perl6-common.xml" xpointer="xpointer(/idea-plugin/project-components/*)"/>
    <component>
      <interface-class>edument.perl6idea.coverage.Perl6CoverageDataManager</interface-class>
      <implementation-class>edument.perl6idea.coverage.Perl6CoverageDataManagerImpl</implementation-class>
      <option name="workspace" value="true"/>
    </component>
  </project-components>

</idea-plugin>