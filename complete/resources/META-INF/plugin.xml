<idea-plugin xmlns:xi="http://www.w3.org/2001/XInclude">
  <id>edument.perl6-idea-plugin</id>
  <version>2019.1.0</version>
  <name>Comma Complete Edition (Perl 6 Language Support)</name>
  <vendor email="info@commaide.com" url="https://commaide.com/">Edument Central Europe sro.</vendor>

  <description><![CDATA[
<p>
  The Comma Complete plugin provides Perl 6 language support for IDEA-based IDEs.
  Features include:
</p>

<ul>
  <li>Detailed and customizable syntax highlighting</li>
  <li>Auto-completion of various program elements</li>
  <li>Live code analysis to detect common problems</li>
  <li>Numerous code navigation features</li>
  <li>A range of refactorings, such as rename, extract variable, and extract method</li>
  <li>Running scripts</li>
  <li>Running tests and viewing the results</li>
  <li>Debugging</li>
  <li>Test coverage reporting</li>
  <li>Profiling</li>
</ul>

<p>
  The same functionality is also available as an independent IDE. For more details, see
  <a href="https://commaide.com/">the Comma website</a>.
</p>
  ]]>
  </description>

  <change-notes><![CDATA[
<ul>
  <li>Introduce basic profiling support. Programs can now be run under the MoarVM profiler. The
  routines where time was spent are then displayed, sortable by inclusive and exclusive time.
  It is also possible to explore the callers and callees of each routine, to understand more
  about the time they spend.</li>
  <li>After running coverage analysis, display the number of statements hit, the number of
  coverable statements, and the percentage coverage next to each module in the project view.
  These are summed/averaged on directories.</li>
  <li>When extracting code to a sub or method, it is now possible to change the order of
  the parameters taken by the extracted routine.</li>
  <li>Show helpful summary information in the debugger for type objects, Bool/Int/Rat/Num/Str/Scalar objects,
  Array/List/Map/Hash objects, and Promise objects. Scalars are looked into, in order to display what is in
  them without having to dig into them to see the value.</li>
  <li>Support use of the <code>.t6</code> extension for tests. The test runner is updated to run such files. Further,
  the filename input field of the 'New Test' action does not unconditionally add the extension .t; if
  an extension is entered it will use that, and otherwise, if there is no extension, it will add .t.</li>
  <li>Make the fix that stubs a missing private method only reformat the surrounding block, not the whole file.</li>
  <li>Support method completion on enum values.</li>
  <li>Fix inability of the debugger to connect to the debug server when it was listening on the IPv6
  loopback interface.</li>
  <li>Fix some broken bundled IDEA platform plugins: properties support, settings repository, and task
  management.</li>
</ul>
  ]]>
  </change-notes>

  <!-- please see http://www.jetbrains.org/intellij/sdk/docs/basics/getting_started/build_number_ranges.html for description -->
  <idea-version since-build="145.0"/>

  <!-- please see http://www.jetbrains.org/intellij/sdk/docs/basics/getting_started/plugin_compatibility.html
       on how to target different products -->
  <depends>com.intellij.modules.lang</depends>

  <extensions defaultExtensionNs="com.intellij">
    <xi:include href="/META-INF/meta/perl6-common.xml" xpointer="xpointer(/idea-plugin/extensions/*)"/>
    <configurationType implementation="edument.perl6idea.run.Perl6CompleteRunConfigurationType"/>
    <configurationType implementation="edument.perl6idea.testing.Perl6CompleteTestConfigurationType"/>
    <programRunner implementation="edument.perl6idea.coverage.Perl6CoverageRunner"/>
    <executor implementation="edument.perl6idea.coverage.CoverageExecutor"/>
    <programRunner implementation="edument.perl6idea.profiler.Perl6ProfileRunner"/>
    <executor implementation="edument.perl6idea.run.Perl6ProfileExecutor"/>
    <projectViewNodeDecorator implementation="edument.perl6idea.coverage.Perl6ProjectViewCoverageDecorator"/>
    <lang.refactoringSupport language="Perl6" implementationClass="edument.perl6idea.refactoring.Perl6CompleteRefactoringSupportProvider"/>
  </extensions>

  <actions>
    <xi:include href="/META-INF/meta/perl6-common.xml" xpointer="xpointer(/idea-plugin/actions/*)"/>
    <action id="Perl6Plugin.ExtractPrivateMethod" class="edument.perl6idea.actions.ExtractPrivateMethodAction" text="Private Method..."
            description="Turn this selected code fragment into a private method">
      <keyboard-shortcut keymap="$default" first-keystroke="ctrl alt P"/>
      <add-to-group group-id="IntroduceActionsGroup" anchor="after" relative-to-action="ExtractMethod"/>
    </action>
    <action id="Perl6Plugin.ExtractRoutine" class="edument.perl6idea.actions.ExtractRoutineAction" text="Subroutine..."
            description="Turn this selected code fragment into a subroutine">
      <keyboard-shortcut keymap="$default" first-keystroke="ctrl alt R"/>
      <add-to-group group-id="IntroduceActionsGroup" anchor="before" relative-to-action="ExtractMethod"/>
    </action>
    <group id="Perl6Plugin.CoverageMenu">
      <action id="Perl6Plugin.HideCoverage" class="edument.perl6idea.coverage.Perl6CoverageHideAction"
              text="Hide Coverage Data" />
      <separator/>
    </group>
    <group id="CoveragePlatformMenu" popup="false">
      <separator/>
      <reference ref="Perl6Plugin.CoverageMenu"/>
      <add-to-group group-id="RunMenu" anchor="before" relative-to-action="DebugMainMenu"/>
    </group>
  </actions>

  <module-components>
    <xi:include href="/META-INF/meta/perl6-common.xml" xpointer="xpointer(/idea-plugin/module-components/*)"/>
  </module-components>

  <project-components>
    <xi:include href="/META-INF/meta/perl6-common.xml" xpointer="xpointer(/idea-plugin/project-components/*)"/>
    <component>
      <interface-class>edument.perl6idea.coverage.Perl6CoverageDataManager</interface-class>
      <implementation-class>edument.perl6idea.coverage.Perl6CoverageDataManagerImpl</implementation-class>
      <option name="workspace" value="true"/>
    </component>
  </project-components>

</idea-plugin>