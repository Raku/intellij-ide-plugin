<idea-plugin xmlns:xi="http://www.w3.org/2001/XInclude">
  <id>edument.perl6-idea-plugin</id>
  <version>2019.7.0</version>
  <name>Comma Community Edition (Perl 6 Language Support)</name>
  <vendor email="info@commaide.com" url="https://commaide.com/">Edument Central Europe sro.</vendor>

  <description><![CDATA[
<p>
  The Comma Community plugin provides Perl 6 language support for IDEA-based IDEs.
  Features include:
</p>

<ul>
  <li>Detailed and customizable syntax highlighting</li>
  <li>Auto-completion of various program elements</li>
  <li>Live code analysis to detect common problems</li>
  <li>Numerous code navigation features</li>
  <li>Rename refactoring</li>
  <li>Running scripts</li>
  <li>Running tests and viewing the results</li>
  <li>Debugging</li>
</ul>

<p>
  The same functionality is also available as an independent IDE. For more details, see
  <a href="https://commaide.com/">the Comma website</a>.
</p>

<p>
  Comma Complete is also available under a subscription model. It includes further
  refactorings, code coverage analysis, and profiling support. Visit
  <a href="https://commaide.com/">the Comma website</a> to learn more.
</p>
  ]]>
  </description>

  <change-notes><![CDATA[
<ul>
<li>Fix a lot of issues related to symbol resolution and completion: numerous false positive cases were fixed, and a call to a multi method now suggests to choose an appropriate candidate instead of jumping to the first one. Performance of resolution was greatly increased for large projects</li>

<li>Comma is now based on the 2019.01 version of IntelliJ platform. The plugin keeps backward compatibility with previous versions starting from 2017.03</li>

<li>Add a Cro Application project template with options to use templating and WebSocket. This generates a project structure similar to the 'cro stub' one, including Dockerfile, routes setup, '.cro.yml' for the 'cro' command line tool, and example tests using Cro::HTTP::Test</li>

<li>Add a Cro Service run configuration type which allows running a Cro service based on manual configuration or data taken from a '.cro.yml' file</li>

<li>Add a visualizer for Log::Timeline output. That module provides for insertion of event and task logging into code, and then monitoring to see - live - what is happening. This is especially useful for visualizing asynchronous workflows and understanding parallelization. The upcoming Cro release will including logging of request pipelines.</li>

<li>Fix debugger support on Windows (also requires upcoming Rakudo point release 2019.07.1)</li>

<li>Support block comments (<code>Ctrl+Shift+/</code>)</li>

<li>Add an annotation that suggests to replace redundant grep.first call chains into a single first call</li>

<li>Add an intention (<code>Alt+Enter</code>) allowing to change a Perl 6 package's type (e.g. turn grammar into class or role into monitor)</li>

<li>Add an intention to make private methods public: it updates both the private method definition and all its calls</li>

<li>Add an intention to make an attribute required if it does not have a default value</li>

<li>Add an annotation warning about BUILD and TWEAK being declared as methods instead of submethod, which is a common mistake, and a quickfix to change it</li>

<li>Add an annotation warning about redundant Array and Hash initialization (e.g. my <code>@a = []</code> or <code>my %a = ()</code>) and a quickfix to remove the empty initializer</li>

<li>Add an intention to replace the await Promise.allof construction with a plain await call</li>

<li>Add an annotation warning about <code>"perl6"</code> usage in string literals that is common for running a new Perl 6 process and suggest to change it into multiplatform <code>$*EXECUTABLE.absolute</code> call with a quickfix</li>

<li>Add an intention allowing to unparenthesize an expression</li>

<li>Cro routes are now shown in Structure View (<code>Ctrl + F12</code>) for easier navigation to routes within a file</li>

<li>Cro routes are indexed and can be seen in Navigate to Symbol (<code>Ctrl+Alt+Shift+N</code>)</li>

<li>The range literal simplification quickfix is now accompanied with a weak warning annotator</li>

<li>Modules with <code>:from</code> are no longer annotated as unknown</li>

<li>The quickfix that stubs a local module from a 'use' statement now prompts the user for the name and module type. The new module name is suggested automatically and, if changed, the 'use' statement will reflect the change</li>

<li>Add completion for dynamic variables defined by Perl 6</li>

<li>Improve the timeline run tab UI</li>

<li>Add support for the Pause action in the debugger</li>

<li>The debugger's 'start suspended' setting in the Perl 6 Run Configuration now works</li>

<li>On project creation, META6.json files are created with attributes sorted</li>

<li>The annotator that detects usage of modules outside of META6.json now considers build and test dependencies</li>

<li>If the specified SDK of a project is missing at its specified paths, it leads to a warning instead of an exception</li>

<li>Add an annotator that detects use of <code>if .defined</code> and similar, providing a quickfix to replace it with an with/orwith/without construction</li>

<li>Deprecation warnings no longer break the displaying of test results when using the test runner</li>

<li>When, during debugging, a breakpoint is reached, the top stack frame now always shows its lexicals immediately</li>

<li>Fix misleading error notification about failed connection when the Perl 6 process to debug exits before debug server was able to connect</li>

<li>Fix a possible rare exception when anonymous variables are used</li>

<li>Fix an incorrect behavior related to the colonpair form of argument passing</li>

<li>Fix a possible exception in the annotator that offers a quickfix to stub a private method using an unknown call</li>

<li>Fix a rare exception related to <code>META6.json</code> handling</li>

<li>Fix resolution and completion of an Enumeration that is not marked as is export</li>

<li>Fix the generated signature of a private method stubbed from its usage using a quickfix, when private attributes are passed as arguments</li>

<li>Fix parsing of heredoc text that starts with an infix operator</li>

<li>Fix a bug with META6.json being created with an incorrect module name</li>

<li>Fix a rare exception occurring at new project creation</li>

<li>Fix a rare exception caused by the presence of nameless constants in code</li>

<li>Fix a possible exception on project SDK change</li>

<li>Fix parsing of traits placed immediately after a type, for example, <code>Str is encoded('utf8')</code></li>

<li>Fix parsing of a constant declaration with an explicit type, for example, <code>our Int constant A</code></li>

<li>Fix parsing of indented Pod6 statements</li>

<li>Fix a case when an annotator that suggests methods from roles that have to be implemented did not consider multi methods and attribute accessors</li>

<li>Fix a case when an annotator that suggests simpler syntax for Pair literals wrongly recognized <code>:foo{$foo}</code> as an opportunity for rewriting to <code>:$foo</code></li>

<li>Fix a bug where the 't' directory was marked as a Source Directory instead of Test Directory on Window</li>

<li>Fix a bug when on debugging after an Sdk change a Perl 6 prefix of previous one was used</li>
</ul>
  ]]></change-notes>

  <!-- please see http://www.jetbrains.org/intellij/sdk/docs/basics/getting_started/build_number_ranges.html for description -->
  <idea-version since-build="145.0"/>

  <!-- please see http://www.jetbrains.org/intellij/sdk/docs/basics/getting_started/plugin_compatibility.html
       on how to target different products -->
  <depends>com.intellij.modules.lang</depends>

  <extensionPoints>
    <xi:include href="/META-INF/meta/perl6-common.xml" xpointer="xpointer(/idea-plugin/extensionPoints/*)"/>
  </extensionPoints>

  <extensions defaultExtensionNs="edument.perl6idea">
    <frameworkCall implementation="edument.perl6idea.cro.CroFrameworkCall"/>
  </extensions>

  <extensions defaultExtensionNs="com.intellij">
    <xi:include href="/META-INF/meta/perl6-common.xml" xpointer="xpointer(/idea-plugin/extensions/*)"/>
    <configurationType implementation="edument.perl6idea.run.Perl6CommunityRunConfigurationType"/>
    <configurationType implementation="edument.perl6idea.testing.Perl6CommunityTestConfigurationType"/>
    <configurationType implementation="edument.perl6idea.cro.run.Perl6CommunityCroRunConfigurationType"/>
    <lang.refactoringSupport language="Perl6" implementationClass="edument.perl6idea.refactoring.Perl6CommunityRefactoringSupportProvider"/>
  </extensions>

  <actions>
    <xi:include href="/META-INF/meta/perl6-common.xml" xpointer="xpointer(/idea-plugin/actions/*)"/>
    <action id="Perl6Plugin.UpgradeToCommaComplete" class="edument.perl6idea.actions.UpdateToCommaCompleteAction" text="Upgrade to Comma Complete "
            description="Visit Comma website" icon="/icons/camelia.png">
      <add-to-group group-id="HelpMenu" anchor="after" relative-to-action="About"/>
    </action>
  </actions>

  <module-components>
    <xi:include href="/META-INF/meta/perl6-common.xml" xpointer="xpointer(/idea-plugin/module-components/*)"/>
  </module-components>

  <project-components>
    <xi:include href="/META-INF/meta/perl6-common.xml" xpointer="xpointer(/idea-plugin/project-components/*)"/>
  </project-components>

</idea-plugin>