<idea-plugin xmlns:xi="http://www.w3.org/2001/XInclude">
  <id>edument.perl6-idea-plugin</id>
  <version>2020.07.0</version>
  <name>Comma Community Edition (Raku Language Support)</name>
  <vendor email="info@commaide.com" url="https://commaide.com/">Edument Central Europe sro.</vendor>

  <description><![CDATA[
<p>
  The Comma Community plugin provides Raku language support for IDEA-based IDEs.
  Features include:
</p>

<ul>
  <li>Detailed and customizable syntax highlighting</li>
  <li>Auto-completion of various program elements</li>
  <li>Live code analysis to detect common problems</li>
  <li>Numerous code navigation features</li>
  <li>Rename refactoring</li>
  <li>Running scripts</li>
  <li>Running tests and viewing the results</li>
  <li>Debugging</li>
</ul>

<p>
  The same functionality is also available as an independent IDE. For more details, see
  <a href="https://commaide.com/">the Comma website</a>.
</p>

<p>
  Comma Complete is also available under a subscription model. It includes further
  refactorings, code coverage analysis, and profiling support. Visit
  <a href="https://commaide.com/">the Comma website</a> to learn more.
</p>
  ]]>
  </description>

  <change-notes><![CDATA[
<ul>
<li>Comma now supports projects comprised of more than a single module. It is possible to use the <code>Project Structure</code> dialog to create or import a Raku module which will be part of the current project. Local modules correctly resolve symbols between each other and other features officially support such project setups as well</li>
<li>Formal variables such as <code>$^foo</code> and <code>$:bar</code> cause completion and navigation for implicitly declared <code>$foo</code> and <code>$bar</code> now</li>
<li>The code sample for Raku at <code>Settings -&gt; Editor -&gt; Color Scheme</code> was extended to to show more elements</li>
<li>Do not annotate <code>:$foo?</code> parameters as errors, instead explain the redundancy of <code>?</code> in a warning</li>
<li>Fix a long-standing bug where optimized code to work with symbols was not used in situations where it could be</li>
<li>Fix a bug where on new project creation symbols might not be loaded</li>
<li>Fix parsing of comments starting with <code>#==</code></li>
<li>Fix stack overflow errors for classes which depend on themselves, like <code>class Foo is Foo {}</code></li>
<li>Re-work Test Run Configurations. They now support running tests based on source roots for either a project, a module, a directory or a single file. Test Run Configurations can be created from tests and directories in the project file view, or based on the file you are currently in. They can be filtered by patterns and support various parameters that the Raku Run Configuration has as well. Fix backward compatibility with run configurations created before the regressed 2020.05 release</li>
<li>For the plugin version of Comma, add a tool to set the Raku compiler in to be used in IntelliJ platform IDE products such as IntelliJ IDEA or WebStorm. Now it is not required to change the global project SDK to a Raku one, a \&quot;secondary\&quot; SDK can be set using <code>Tools -&gt; Setup Raku SDK</code>. This SDK will be used as a backup for all features which depend on it, including completion, running programs, the REPL etc</li>
<li>&quot;Overhaul the implementation of key internal components and make sure Comma is self-contained and the Raku plugin correctly works with a range of IntelliJ platform products</li>
<li>The extract Variable refactoring now suggests variable names based on extracted value</li>
<li>The extract Variable refactoring now supports extraction of literals like 42 or \&quot;foo\&quot; when they are statements and not parts of expressions</li>
<li>Add an intention to split the declaration of a lexical variable (my $foo = 42) into a declaration (my $foo) and an assignment ($foo = 42)</li>
<li>Add an intention to make a method private; it checks there are no known calls to it from outside of the class first</li>
<li>Suppress redundant annotation related to non-ASCII symbols in code, as Raku sources are Unicode-friendly</li>
<li>Fix a bug when smartmatching of an undeclared variable could potentially lead to a stack overflow exception or freezes</li>
<li>&quot;Fix cases of treating coercions like <code>DateTime($foo)</code> as errors; they are now correctly displayed as types</li>
<li>Fix a rare bug when external libraries might not be displayed after project creation</li>
<li>Support the 2020.01 version of the IntelliJ platform, which is now the minimal version requirement to use the plugin as well as the platform version used by Comma</li>
<li>Provide better method completion for <code>.foo</code> style calls as well as explicit operations on the topic variable <code>$_</code> in cases when a type can be inferred</li>
<li>Add a \&quot;REPL using this module\&quot; action which starts a REPL session with the current module used</li>
<li>\&quot;External Libraries\&quot; now include items from \&quot;test-depends\&quot; and \&quot;build-depends\&quot; along with the previously available distributions from the \&quot;depends\&quot; section</li>
<li>License types compatible with SPDX are now auto-completed in Project Structure dialog</li>
<li>&quot;The <code>META6.json</code> file fields \&quot;authors\&quot; and \&quot;source-url\&quot; now can be modified using the Project Structure dialog</li>
<li>For Rakudo 2019.07 or newer a simpler debug starting process is used, which supports the case where Rakudo was relocated</li>
<li>Fix extraction of method calls into a variable</li>
<li>Fix extracting of constructs which are used as expressions using the \&quot;do\&quot; construct</li>
<li>Allow inline of a variable when there is a single assignment, which was previously wrongly reported as impossible</li>
</ul>
  ]]></change-notes>

  <!-- please see http://www.jetbrains.org/intellij/sdk/docs/basics/getting_started/build_number_ranges.html for description -->
  <idea-version since-build="145.0"/>

  <!-- please see http://www.jetbrains.org/intellij/sdk/docs/basics/getting_started/plugin_compatibility.html
       on how to target different products -->
  <depends>com.intellij.modules.lang</depends>

  <extensionPoints>
    <xi:include href="/META-INF/meta/perl6-common.xml" xpointer="xpointer(/idea-plugin/extensionPoints/*)"/>
  </extensionPoints>

  <extensions defaultExtensionNs="edument.perl6idea">
    <frameworkCall implementation="edument.perl6idea.cro.CroFrameworkCall"/>
  </extensions>

  <extensions defaultExtensionNs="com.intellij">
    <xi:include href="/META-INF/meta/perl6-common.xml" xpointer="xpointer(/idea-plugin/extensions/*)"/>
    <runConfigurationProducer implementation="edument.perl6idea.testing.Perl6CommunityTestRunConfigurationProducer"/>
    <configurationType implementation="edument.perl6idea.run.Perl6CommunityRunConfigurationType"/>
    <configurationType implementation="edument.perl6idea.testing.Perl6CommunityTestConfigurationType"/>
    <configurationType implementation="edument.perl6idea.cro.run.Perl6CommunityCroRunConfigurationType"/>
    <lang.refactoringSupport language="Perl6" implementationClass="edument.perl6idea.refactoring.Perl6CommunityRefactoringSupportProvider"/>
  </extensions>

  <actions>
    <xi:include href="/META-INF/meta/perl6-common.xml" xpointer="xpointer(/idea-plugin/actions/*)"/>
    <action id="Perl6Plugin.UpgradeToCommaComplete" class="edument.perl6idea.actions.UpdateToCommaCompleteAction" text="Upgrade to Comma Complete "
            description="Visit Comma website" icon="/icons/camelia.png">
      <add-to-group group-id="HelpMenu" anchor="after" relative-to-action="About"/>
    </action>
  </actions>

  <module-components>
    <xi:include href="/META-INF/meta/perl6-common.xml" xpointer="xpointer(/idea-plugin/module-components/*)"/>
  </module-components>

  <project-components>
    <xi:include href="/META-INF/meta/perl6-common.xml" xpointer="xpointer(/idea-plugin/project-components/*)"/>
  </project-components>

</idea-plugin>