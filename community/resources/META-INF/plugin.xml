<idea-plugin xmlns:xi="http://www.w3.org/2001/XInclude">
  <id>edument.perl6-idea-plugin</id>
  <version>2019.7.0</version>
  <name>Comma Community Edition (Perl 6 Language Support)</name>
  <vendor email="info@commaide.com" url="https://commaide.com/">Edument Central Europe sro.</vendor>

  <description><![CDATA[
<p>
  The Comma Community plugin provides Perl 6 language support for IDEA-based IDEs.
  Features include:
</p>

<ul>
  <li>Detailed and customizable syntax highlighting</li>
  <li>Auto-completion of various program elements</li>
  <li>Live code analysis to detect common problems</li>
  <li>Numerous code navigation features</li>
  <li>Rename refactoring</li>
  <li>Running scripts</li>
  <li>Running tests and viewing the results</li>
  <li>Debugging</li>
</ul>

<p>
  The same functionality is also available as an independent IDE. For more details, see
  <a href="https://commaide.com/">the Comma website</a>.
</p>

<p>
  Comma Complete is also available under a subscription model. It includes further
  refactorings, code coverage analysis, and profiling support. Visit
  <a href="https://commaide.com/">the Comma website</a> to learn more.
</p>
  ]]>
  </description>

  <change-notes><![CDATA[
    <ul>
      <li>When the compunit name from a use statement is not found in the<br>
        ecosystem, a quickfix is provided to stub a module in the project</li>
      <li>Gutter navigation is added for Perl 6 classes and roles. It is<br>
        possible to quickly navigate from a parent class to its children,<br>
        from a child to a parent class, and for roles to go to its parents<br>
        and packages that implement the role</li>
      <li>In the <code>New Module</code> action dialog, it is possible to stub a monitor now,<br>
        along with class, role, grammar and module</li>
      <li>Add a checkbox to the <code>New Script</code> action dialog that allows to set<br>
        if new script file should be populated with a <code>MAIN</code> template or<br>
        not</li>
      <li>Add an annotator that detects attempts to declare a constant using<br>
        <code>const</code> instead of <code>constant</code> and provides a quickfix. Usages of a<br>
        subroutine named <code>const</code> will not be annotated</li>
      <li>Add an annotator that detects non-idiomatic style for infinite loops<br>
        <code>while True</code> and <code>while 1</code>, and provides a quickfix to replace it<br>
        with <code>loop</code> construction</li>
      <li>Add an annotator that annotates pair literals that can be<br>
        simplified, such as <code>:foo($foo)</code> and <code>foo =&gt; $foo</code> and suggests a<br>
        conversion to the <code>:$foo</code> pair literal form</li>
      <li>Fix a bug where a Perl6 SDK was not added to the Comma SDK table from the<br>
        <code>Project Structure</code> dialog, which prevented use of SDK-related features for opened<br>
        projects until a new project was created</li>
      <li>Fix an exception on creating a new script without an extension set<br>
        (<a href="https://commaide.com/subscriber/feedback/37">https://commaide.com/subscriber/feedback/37</a>)</li>
      <li>Fix an exception on saving changes in the <code>Project Structure</code> dialog<br>
        with <code>META6.json</code> deleted before opening the dialog</li>
      <li>Fix passing of multiple arguments to a Perl 6 process in a Run<br>
        Configuration</li>
      <li>Fix whitespace parsing in quote constructs, so now <code>q &quot;foo&quot;</code> is<br>
        correctly recognized as well as <code>q&quot;foo&quot;</code></li>
      <li>Fix duplicate messages about <code>META6.json</code> syntax errors</li>
      <li>Fix issues with <code>META6.json</code> that appeared when more than a single<br>
        Comma instance are used: now <code>META6.json</code> content does not<br>
        interfere. Error messages from a project do not accidentally appear<br>
        in another project (<a href="https://commaide.com/subscriber/feedback/45">https://commaide.com/subscriber/feedback/45</a>)</li>
      <li>Now <code>META6.json</code> file fields are sorted in specific order, and items<br>
        in the <code>provides</code> section are sorted in a natural order. It fixes effects<br>
        of inner hash re-building and reduces VCS noise introduced by<br>
        possible excessive change of the keys order</li>
      <li>When the <code>META6.json</code> file is not present, compunit names in use<br>
        statements are not annotated, as in this case we cannot check if the<br>
        current project has a distribution that provides this compunit is<br>
        present in <code>depends</code> section</li>
      <li>When a module file is moved out of the <code>lib</code> directory, it is now<br>
        removed from the <code>META6.json</code> file. Before it worked for a directory<br>
        being moved out, but not for a single file</li>
      <li>The <code>self</code> reference inside of a nameless package now resolves to<br>
        its declarator, instead of the file start</li>
      <li>During project creation, the <code>t</code> directory is now correctly marked<br>
        as a test source directory</li>
      <li>A thinko when a user tries to declare a variable using its method in<br>
        the initializer (e.g. <code>my $foo = $foo.bar</code>) does not lead to an<br>
        exception now</li>
    </ul>
  ]]></change-notes>

  <!-- please see http://www.jetbrains.org/intellij/sdk/docs/basics/getting_started/build_number_ranges.html for description -->
  <idea-version since-build="145.0"/>

  <!-- please see http://www.jetbrains.org/intellij/sdk/docs/basics/getting_started/plugin_compatibility.html
       on how to target different products -->
  <depends>com.intellij.modules.lang</depends>

  <extensionPoints>
    <xi:include href="/META-INF/meta/perl6-common.xml" xpointer="xpointer(/idea-plugin/extensionPoints/*)"/>
  </extensionPoints>

  <extensions defaultExtensionNs="edument.perl6idea">
    <frameworkCall implementation="edument.perl6idea.cro.CroFrameworkCall"/>
  </extensions>

  <extensions defaultExtensionNs="com.intellij">
    <xi:include href="/META-INF/meta/perl6-common.xml" xpointer="xpointer(/idea-plugin/extensions/*)"/>
    <configurationType implementation="edument.perl6idea.run.Perl6CommunityRunConfigurationType"/>
    <configurationType implementation="edument.perl6idea.testing.Perl6CommunityTestConfigurationType"/>
    <configurationType implementation="edument.perl6idea.cro.run.Perl6CommunityCroRunConfigurationType"/>
    <lang.refactoringSupport language="Perl6" implementationClass="edument.perl6idea.refactoring.Perl6CommunityRefactoringSupportProvider"/>
  </extensions>

  <actions>
    <xi:include href="/META-INF/meta/perl6-common.xml" xpointer="xpointer(/idea-plugin/actions/*)"/>
    <action id="Perl6Plugin.UpgradeToCommaComplete" class="edument.perl6idea.actions.UpdateToCommaCompleteAction" text="Upgrade to Comma Complete "
            description="Visit Comma website" icon="/icons/camelia.png">
      <add-to-group group-id="HelpMenu" anchor="after" relative-to-action="About"/>
    </action>
  </actions>

  <module-components>
    <xi:include href="/META-INF/meta/perl6-common.xml" xpointer="xpointer(/idea-plugin/module-components/*)"/>
  </module-components>

  <project-components>
    <xi:include href="/META-INF/meta/perl6-common.xml" xpointer="xpointer(/idea-plugin/project-components/*)"/>
  </project-components>

</idea-plugin>