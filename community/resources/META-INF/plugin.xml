<idea-plugin xmlns:xi="http://www.w3.org/2001/XInclude">
  <id>edument.perl6-idea-plugin</id>
  <version>2019.10.0</version>
  <name>Comma Community Edition (Raku Language Support)</name>
  <vendor email="info@commaide.com" url="https://commaide.com/">Edument Central Europe sro.</vendor>

  <description><![CDATA[
<p>
  The Comma Community plugin provides Raku language support for IDEA-based IDEs.
  Features include:
</p>

<ul>
  <li>Detailed and customizable syntax highlighting</li>
  <li>Auto-completion of various program elements</li>
  <li>Live code analysis to detect common problems</li>
  <li>Numerous code navigation features</li>
  <li>Rename refactoring</li>
  <li>Running scripts</li>
  <li>Running tests and viewing the results</li>
  <li>Debugging</li>
</ul>

<p>
  The same functionality is also available as an independent IDE. For more details, see
  <a href="https://commaide.com/">the Comma website</a>.
</p>

<p>
  Comma Complete is also available under a subscription model. It includes further
  refactorings, code coverage analysis, and profiling support. Visit
  <a href="https://commaide.com/">the Comma website</a> to learn more.
</p>
  ]]>
  </description>

  <change-notes><![CDATA[
<ul>
<li>Migrate to the 2019.03 version of IntelliJ platform</li>
<li>Update the user interface to call the language Raku instead of Perl 6</li>
<li>Go to Related Symbol (<code>Ctrl+Alt+Home</code> on an action method name or a
grammar rule name) now allows to jump from the grammar rule to the
respective actions method and back. In an action method, the <code>$/</code>
variable now completes based on the rule&#39;s captures</li>
<li>In the Cro template language, resolution and completion of variables, calls and macros now works within a single file</li>
<li>Resolve and complete match variables resulting from regex application, including back-references within a regex</li>
<li>Improve documentation support: fix wrong documentation cases, properly display tables, update documentation cache</li>
<li>Make it possible to view documentation for operators: both the standard operator syntax (e.g. &#39;+&#39;) and the function form (e.g. &#39;&amp;infix:&lt;+&gt;&#39;)</li>
<li>Provide integration with external libraries used. Now sources of externals are accessible in read-only files, support jumping from definition to usage and the other way around. The profiling tool window supports jumping to definition of external calls, and the debugger supports it as well, with stepping</li>
<li>Improve support of operator syntax. Now usages of both <code>&amp;[+]</code> and <code>&amp;infix:&lt;+&gt;*</code> will not be marked as undeclared anymore, while usage of missing operators will be marked as such</li>
<li>Add an intention for converting double quotes into single ones (removing interpolation) and the other way around (adding interpolation)</li>
<li>Add an intention to convert one-line control flow statements into blocks (e.g. &#39;say 42 if True&#39; is converted into &#39;if True { say 42 }&#39;)</li>
<li>The annotation and quickfix for stubbing missing role methods in a class now considers the &#39;handles&#39; trait</li>
<li>Support module usage syntax, named parameters and arguments in Cro template language</li>
<li>Resolution and auto-complete of subs and macros between Cro template files now works</li>
<li>Cro template language subs and macro are now indexed and available through the Navigate to Symbol feature</li>
<li>Cro template language symbols are now shown in Structure View</li>
<li>For Cro template language subs, parameter info (<code>Ctrl+P</code>) is now available</li>
<li>Improve the default color scheme for Cro template language files</li>
<li>Enable setting environment variables for a Test Run Configuration</li>
<li>Fix a parsing exception caused by a <code>;</code> in an argument list</li>
<li>Fix a long standing parsing exception caused by <code>&gt;&gt;.foo</code> calls ambiguity.</li>
<li>Add a <code>New Cro Template</code> action</li>
<li>Fix different parser exceptions for Cro template language</li>
<li>Support the new <code>&lt;?$foo&gt;</code> and <code>&lt;!$foo&gt;</code> syntax added in the latest release of Cro::WebApp</li>
<li>An escaped <code>#</code> symbol is no longer misparsed in regex language</li>
<li>New file associations (<code>.raku</code>, <code>.rakumod</code>, <code>.rakutest</code>, <code>.rakudoc</code>) are suggested in the Windows installer</li>
<li>The undeclared symbol annotator will not run until the SETTING symbols are available, which makes it less noisy at the start</li>
<li>Fix data race in SETTING symbols loading, making it more stable</li>
<li>For &#39;unit&#39;-scoped MAIN subroutines, the parameters are now resolved and completed properly</li>
<li>Improve recognizing file URLs as clickable links in console output</li>
<li>Don&#39;t perform bogus extract refactors on a variable or its type from a declaration or a parameter</li>
<li>Fix a race which could lead to an exception when closing a project shortly after starting the IDE</li>
<li>Fix an exception involving usage of the PsiViewer plugin</li>
<li>Fix an exception related to usage of an external module that does not exist</li>
<li>Do not mistakenly suggest to simplify a range with whatever star</li>
<li>Prevent a possible exception related to method completion.</li>
<li>Fix a parser exception triggered by typing a specific case of regexp syntax</li>
<li>Fix regex-based variables completion bug when some non-capturing assertions were suggested by mistake</li>
<li>Make sure changes to project structure related to directories made using the IDE are reflected
in <code>META6.json</code></li>
<li>Prevent a rare exception sometimes occuring on project closing</li>
<li>Fix a bug where an optional parameter with a trait was not recognized as being optional, and thus
caused bogus parameter ordering annotations to be shown</li>
<li>Fix a bug of console input not being recognized by Run tab window</li>
</ul>
  ]]></change-notes>

  <!-- please see http://www.jetbrains.org/intellij/sdk/docs/basics/getting_started/build_number_ranges.html for description -->
  <idea-version since-build="145.0"/>

  <!-- please see http://www.jetbrains.org/intellij/sdk/docs/basics/getting_started/plugin_compatibility.html
       on how to target different products -->
  <depends>com.intellij.modules.lang</depends>

  <extensionPoints>
    <xi:include href="/META-INF/meta/perl6-common.xml" xpointer="xpointer(/idea-plugin/extensionPoints/*)"/>
  </extensionPoints>

  <extensions defaultExtensionNs="edument.perl6idea">
    <frameworkCall implementation="edument.perl6idea.cro.CroFrameworkCall"/>
  </extensions>

  <extensions defaultExtensionNs="com.intellij">
    <xi:include href="/META-INF/meta/perl6-common.xml" xpointer="xpointer(/idea-plugin/extensions/*)"/>
    <configurationType implementation="edument.perl6idea.run.Perl6CommunityRunConfigurationType"/>
    <configurationType implementation="edument.perl6idea.testing.Perl6CommunityTestConfigurationType"/>
    <configurationType implementation="edument.perl6idea.cro.run.Perl6CommunityCroRunConfigurationType"/>
    <lang.refactoringSupport language="Perl6" implementationClass="edument.perl6idea.refactoring.Perl6CommunityRefactoringSupportProvider"/>
  </extensions>

  <actions>
    <xi:include href="/META-INF/meta/perl6-common.xml" xpointer="xpointer(/idea-plugin/actions/*)"/>
    <action id="Perl6Plugin.UpgradeToCommaComplete" class="edument.perl6idea.actions.UpdateToCommaCompleteAction" text="Upgrade to Comma Complete "
            description="Visit Comma website" icon="/icons/camelia.png">
      <add-to-group group-id="HelpMenu" anchor="after" relative-to-action="About"/>
    </action>
  </actions>

  <module-components>
    <xi:include href="/META-INF/meta/perl6-common.xml" xpointer="xpointer(/idea-plugin/module-components/*)"/>
  </module-components>

  <project-components>
    <xi:include href="/META-INF/meta/perl6-common.xml" xpointer="xpointer(/idea-plugin/project-components/*)"/>
  </project-components>

</idea-plugin>